2023-09-20T18:28:24,993 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:28:24,993 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:28:24,997 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:28:24,997 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:28:25,086 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:28:25,086 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:28:25,188 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: my_model=test_model
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:28:25,188 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: my_model=test_model
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:28:25,196 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:28:25,196 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:28:25,222 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model
2023-09-20T18:28:25,222 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model
2023-09-20T18:28:25,225 [WARN ] main org.pytorch.serve.ModelServer - Failed to load model: test_model
org.pytorch.serve.archive.model.ModelNotFoundException: Model not found at: test_model
	at org.pytorch.serve.archive.model.ModelArchive.downloadModel(ModelArchive.java:107) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.createModelArchive(ModelManager.java:169) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.registerModel(ModelManager.java:135) ~[model-server.jar:?]
	at org.pytorch.serve.ModelServer.initModelStore(ModelServer.java:264) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startRESTserver(ModelServer.java:396) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startAndWait(ModelServer.java:118) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.main(ModelServer.java:99) [model-server.jar:?]
2023-09-20T18:28:25,225 [WARN ] main org.pytorch.serve.ModelServer - Failed to load model: test_model
org.pytorch.serve.archive.model.ModelNotFoundException: Model not found at: test_model
	at org.pytorch.serve.archive.model.ModelArchive.downloadModel(ModelArchive.java:107) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.createModelArchive(ModelManager.java:169) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.registerModel(ModelManager.java:135) ~[model-server.jar:?]
	at org.pytorch.serve.ModelServer.initModelStore(ModelServer.java:264) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startRESTserver(ModelServer.java:396) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startAndWait(ModelServer.java:118) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.main(ModelServer.java:99) [model-server.jar:?]
2023-09-20T18:28:25,237 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:28:25,237 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:28:25,319 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:28:25,319 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:28:25,320 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:28:25,320 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:28:25,322 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:28:25,322 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:28:25,322 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:28:25,322 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:28:25,323 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:28:25,323 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:28:25,653 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 64, in gpu_utilization
    import nvgpu
ModuleNotFoundError: No module named 'nvgpu'

2023-09-20T18:28:25,653 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 64, in gpu_utilization
    import nvgpu
ModuleNotFoundError: No module named 'nvgpu'

2023-09-20T18:28:51,468 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:28:51,468 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:28:51,471 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:28:51,471 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:28:51,544 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:28:51,544 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:28:51,623 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: my_model=test_model
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:28:51,623 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: my_model=test_model
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:28:51,631 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:28:51,631 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:28:51,656 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model
2023-09-20T18:28:51,656 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model
2023-09-20T18:28:51,659 [WARN ] main org.pytorch.serve.ModelServer - Failed to load model: test_model
org.pytorch.serve.archive.model.ModelNotFoundException: Model not found at: test_model
	at org.pytorch.serve.archive.model.ModelArchive.downloadModel(ModelArchive.java:107) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.createModelArchive(ModelManager.java:169) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.registerModel(ModelManager.java:135) ~[model-server.jar:?]
	at org.pytorch.serve.ModelServer.initModelStore(ModelServer.java:264) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startRESTserver(ModelServer.java:396) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startAndWait(ModelServer.java:118) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.main(ModelServer.java:99) [model-server.jar:?]
2023-09-20T18:28:51,659 [WARN ] main org.pytorch.serve.ModelServer - Failed to load model: test_model
org.pytorch.serve.archive.model.ModelNotFoundException: Model not found at: test_model
	at org.pytorch.serve.archive.model.ModelArchive.downloadModel(ModelArchive.java:107) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.createModelArchive(ModelManager.java:169) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.registerModel(ModelManager.java:135) ~[model-server.jar:?]
	at org.pytorch.serve.ModelServer.initModelStore(ModelServer.java:264) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startRESTserver(ModelServer.java:396) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startAndWait(ModelServer.java:118) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.main(ModelServer.java:99) [model-server.jar:?]
2023-09-20T18:28:51,672 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:28:51,672 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:28:51,738 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:28:51,738 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:28:51,739 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:28:51,739 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:28:51,740 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:28:51,740 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:28:51,741 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:28:51,741 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:28:51,742 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:28:51,742 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:28:52,563 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:28:52,563 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:29:52,540 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:29:52,540 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:30:46,433 [INFO ] epollEventLoopGroup-3-1 ACCESS_LOG - /127.0.0.1:50164 "GET / HTTP/1.1" 405 7
2023-09-20T18:30:46,437 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - Requests4XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695234646
2023-09-20T18:30:52,505 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:30:52,505 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:34:49,936 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:34:49,936 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:34:49,939 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:34:49,939 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:34:50,007 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:34:50,007 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:34:50,085 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: my_model=test_model
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:34:50,085 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: my_model=test_model
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:34:50,093 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:34:50,093 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:34:50,117 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model
2023-09-20T18:34:50,117 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model
2023-09-20T18:34:50,121 [WARN ] main org.pytorch.serve.ModelServer - Failed to load model: test_model
org.pytorch.serve.archive.model.ModelNotFoundException: Model not found at: test_model
	at org.pytorch.serve.archive.model.ModelArchive.downloadModel(ModelArchive.java:107) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.createModelArchive(ModelManager.java:169) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.registerModel(ModelManager.java:135) ~[model-server.jar:?]
	at org.pytorch.serve.ModelServer.initModelStore(ModelServer.java:264) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startRESTserver(ModelServer.java:396) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startAndWait(ModelServer.java:118) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.main(ModelServer.java:99) [model-server.jar:?]
2023-09-20T18:34:50,121 [WARN ] main org.pytorch.serve.ModelServer - Failed to load model: test_model
org.pytorch.serve.archive.model.ModelNotFoundException: Model not found at: test_model
	at org.pytorch.serve.archive.model.ModelArchive.downloadModel(ModelArchive.java:107) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.createModelArchive(ModelManager.java:169) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.registerModel(ModelManager.java:135) ~[model-server.jar:?]
	at org.pytorch.serve.ModelServer.initModelStore(ModelServer.java:264) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startRESTserver(ModelServer.java:396) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startAndWait(ModelServer.java:118) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.main(ModelServer.java:99) [model-server.jar:?]
2023-09-20T18:34:50,133 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:34:50,133 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:34:50,196 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:34:50,196 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:34:50,197 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:34:50,197 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:34:50,198 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:34:50,198 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:34:50,198 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:34:50,198 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:34:50,199 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:34:50,199 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:34:50,952 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:34:50,952 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:37:16,831 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:37:16,831 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:37:16,834 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:37:16,834 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:37:16,896 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:37:16,896 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:37:16,973 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: my_model=test_model
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:37:16,973 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: my_model=test_model
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:37:16,981 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:37:16,981 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:37:17,006 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model
2023-09-20T18:37:17,006 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model
2023-09-20T18:37:17,009 [WARN ] main org.pytorch.serve.ModelServer - Failed to load model: test_model
org.pytorch.serve.archive.model.ModelNotFoundException: Model not found at: test_model
	at org.pytorch.serve.archive.model.ModelArchive.downloadModel(ModelArchive.java:107) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.createModelArchive(ModelManager.java:169) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.registerModel(ModelManager.java:135) ~[model-server.jar:?]
	at org.pytorch.serve.ModelServer.initModelStore(ModelServer.java:264) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startRESTserver(ModelServer.java:396) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startAndWait(ModelServer.java:118) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.main(ModelServer.java:99) [model-server.jar:?]
2023-09-20T18:37:17,009 [WARN ] main org.pytorch.serve.ModelServer - Failed to load model: test_model
org.pytorch.serve.archive.model.ModelNotFoundException: Model not found at: test_model
	at org.pytorch.serve.archive.model.ModelArchive.downloadModel(ModelArchive.java:107) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.createModelArchive(ModelManager.java:169) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.registerModel(ModelManager.java:135) ~[model-server.jar:?]
	at org.pytorch.serve.ModelServer.initModelStore(ModelServer.java:264) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startRESTserver(ModelServer.java:396) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startAndWait(ModelServer.java:118) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.main(ModelServer.java:99) [model-server.jar:?]
2023-09-20T18:37:17,022 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:37:17,022 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:37:17,090 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:37:17,090 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:37:17,090 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:37:17,090 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:37:17,093 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:37:17,093 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:37:17,093 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:37:17,093 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:37:17,094 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:37:17,094 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:37:17,831 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:37:17,831 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:38:17,849 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:38:17,849 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:38:40,748 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:38:40,748 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:38:40,751 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:38:40,751 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:38:40,815 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:38:40,815 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:38:40,889 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: my_model=test_model
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:38:40,889 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: my_model=test_model
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:38:40,896 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:38:40,896 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:38:40,919 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model
2023-09-20T18:38:40,919 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model
2023-09-20T18:38:40,922 [WARN ] main org.pytorch.serve.ModelServer - Failed to load model: test_model
org.pytorch.serve.archive.model.ModelNotFoundException: Model not found at: test_model
	at org.pytorch.serve.archive.model.ModelArchive.downloadModel(ModelArchive.java:107) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.createModelArchive(ModelManager.java:169) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.registerModel(ModelManager.java:135) ~[model-server.jar:?]
	at org.pytorch.serve.ModelServer.initModelStore(ModelServer.java:264) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startRESTserver(ModelServer.java:396) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startAndWait(ModelServer.java:118) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.main(ModelServer.java:99) [model-server.jar:?]
2023-09-20T18:38:40,922 [WARN ] main org.pytorch.serve.ModelServer - Failed to load model: test_model
org.pytorch.serve.archive.model.ModelNotFoundException: Model not found at: test_model
	at org.pytorch.serve.archive.model.ModelArchive.downloadModel(ModelArchive.java:107) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.createModelArchive(ModelManager.java:169) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.registerModel(ModelManager.java:135) ~[model-server.jar:?]
	at org.pytorch.serve.ModelServer.initModelStore(ModelServer.java:264) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startRESTserver(ModelServer.java:396) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startAndWait(ModelServer.java:118) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.main(ModelServer.java:99) [model-server.jar:?]
2023-09-20T18:38:40,935 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:38:40,935 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:38:40,997 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:38:40,997 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:38:40,998 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:38:40,998 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:38:40,999 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:38:40,999 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:38:40,999 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:38:40,999 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:38:41,000 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:38:41,000 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:38:41,766 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:38:41,766 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:40:13,413 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:40:13,413 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:40:13,416 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:40:13,416 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:40:13,482 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:40:13,482 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:40:13,558 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: my_model=test_model
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:40:13,558 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: my_model=test_model
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:40:13,565 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:40:13,565 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:40:13,589 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model
2023-09-20T18:40:13,589 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model
2023-09-20T18:40:13,592 [WARN ] main org.pytorch.serve.ModelServer - Failed to load model: test_model
org.pytorch.serve.archive.model.ModelNotFoundException: Model not found at: test_model
	at org.pytorch.serve.archive.model.ModelArchive.downloadModel(ModelArchive.java:107) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.createModelArchive(ModelManager.java:169) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.registerModel(ModelManager.java:135) ~[model-server.jar:?]
	at org.pytorch.serve.ModelServer.initModelStore(ModelServer.java:264) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startRESTserver(ModelServer.java:396) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startAndWait(ModelServer.java:118) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.main(ModelServer.java:99) [model-server.jar:?]
2023-09-20T18:40:13,592 [WARN ] main org.pytorch.serve.ModelServer - Failed to load model: test_model
org.pytorch.serve.archive.model.ModelNotFoundException: Model not found at: test_model
	at org.pytorch.serve.archive.model.ModelArchive.downloadModel(ModelArchive.java:107) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.createModelArchive(ModelManager.java:169) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.ModelManager.registerModel(ModelManager.java:135) ~[model-server.jar:?]
	at org.pytorch.serve.ModelServer.initModelStore(ModelServer.java:264) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startRESTserver(ModelServer.java:396) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.startAndWait(ModelServer.java:118) [model-server.jar:?]
	at org.pytorch.serve.ModelServer.main(ModelServer.java:99) [model-server.jar:?]
2023-09-20T18:40:13,604 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:40:13,604 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:40:13,667 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:40:13,667 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:40:13,667 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:40:13,667 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:40:13,669 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:40:13,669 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:40:13,669 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:40:13,669 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:40:13,670 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:40:13,670 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:40:14,403 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:40:14,403 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:41:14,479 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:41:14,479 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:47:27,976 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:47:27,976 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:47:27,978 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:47:27,978 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:47:28,040 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:47:28,040 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:47:28,115 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:47:28,115 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:47:28,122 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:47:28,122 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:47:28,144 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T18:47:28,144 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T18:47:29,583 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T18:47:29,583 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T18:47:29,583 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T18:47:29,583 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T18:47:29,583 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T18:47:29,583 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T18:47:29,583 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T18:47:29,583 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T18:47:29,593 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:47:29,594 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:47:29,593 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:47:29,594 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:47:29,675 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:47:29,675 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:47:29,675 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:47:29,675 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:47:29,677 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:47:29,677 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:47:29,677 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:47:29,677 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:47:29,678 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:47:29,678 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:47:29,914 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T18:47:29,914 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T18:47:30,375 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=8104
2023-09-20T18:47:30,377 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T18:47:30,385 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T18:47:30,385 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]8104
2023-09-20T18:47:30,386 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T18:47:30,386 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T18:47:30,386 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T18:47:30,386 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T18:47:30,391 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:47:30,391 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:47:30,398 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T18:47:30,402 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695235650402
2023-09-20T18:47:30,402 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695235650402
2023-09-20T18:47:30,432 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T18:47:30,469 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:47:30,469 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:47:30,488 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T18:47:30,488 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T18:47:30,489 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T18:47:30,489 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - {'model_dir': '/tmp/models/c9775c425f7a44cfbff2dee71db31571', 'gpu_id': 0, 'batch_size': 1, 'server_name': 'MMS', 'server_version': '0.8.2', 'limit_max_image_pixels': True}
2023-09-20T18:47:30,489 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - {'createdOn': '20/09/2023 18:46:46', 'runtime': 'python', 'model': {'modelName': 'test_model', 'handler': 'handler.py', 'modelFile': 'model.pth', 'modelVersion': '1.0'}, 'archiverVersion': '0.8.2'}
2023-09-20T18:47:30,490 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Reached here.
2023-09-20T18:47:30,495 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T18:47:30,495 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T18:47:30,495 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 63
2023-09-20T18:47:30,495 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 63
2023-09-20T18:47:30,496 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T18:47:30,496 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T18:47:30,498 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:907.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695235650
2023-09-20T18:47:30,498 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:33.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695235650
2023-09-20T18:48:30,410 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:48:30,410 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:49:49,448 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:49:49,448 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:49:49,451 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:49:49,451 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:49:49,515 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:49:49,515 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:49:49,587 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:49:49,587 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:49:49,594 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:49:49,594 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:49:49,616 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T18:49:49,616 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T18:49:51,044 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T18:49:51,044 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T18:49:51,044 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T18:49:51,044 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T18:49:51,045 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T18:49:51,045 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T18:49:51,045 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T18:49:51,045 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T18:49:51,053 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:49:51,053 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:49:51,055 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:49:51,055 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:49:51,123 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:49:51,123 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:49:51,123 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:49:51,123 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:49:51,126 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:49:51,126 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:49:51,126 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:49:51,126 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:49:51,127 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:49:51,127 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:49:51,365 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T18:49:51,365 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T18:49:51,837 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:49:51,837 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:49:51,837 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=8343
2023-09-20T18:49:51,839 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T18:49:51,846 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T18:49:51,847 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]8343
2023-09-20T18:49:51,847 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T18:49:51,847 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T18:49:51,848 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T18:49:51,848 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T18:49:51,853 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:49:51,853 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:49:51,862 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T18:49:51,866 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695235791866
2023-09-20T18:49:51,866 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695235791866
2023-09-20T18:49:51,901 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T18:49:51,955 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T18:49:51,955 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T18:49:51,956 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T18:49:51,956 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - {'model_dir': '/tmp/models/ced866b9efe64a9a871db744b5472835', 'gpu_id': 0, 'batch_size': 1, 'server_name': 'MMS', 'server_version': '0.8.2', 'limit_max_image_pixels': True}
2023-09-20T18:49:51,956 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - {'createdOn': '20/09/2023 18:46:46', 'runtime': 'python', 'model': {'modelName': 'test_model', 'handler': 'handler.py', 'modelFile': 'model.pth', 'modelVersion': '1.0'}, 'archiverVersion': '0.8.2'}
2023-09-20T18:49:51,957 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Reached here.
2023-09-20T18:49:51,963 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T18:49:51,963 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T18:49:51,963 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 62
2023-09-20T18:49:51,963 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 62
2023-09-20T18:49:51,964 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T18:49:51,964 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T18:49:51,967 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:914.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695235791
2023-09-20T18:49:51,967 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:39.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695235791
2023-09-20T18:50:45,113 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:50:45,113 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:50:45,116 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:50:45,116 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:50:45,181 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:50:45,181 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:50:45,256 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:50:45,256 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:50:45,264 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:50:45,264 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:50:45,287 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T18:50:45,287 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T18:50:46,703 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T18:50:46,703 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T18:50:46,703 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T18:50:46,703 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T18:50:46,704 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T18:50:46,704 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T18:50:46,704 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T18:50:46,704 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T18:50:46,714 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:50:46,714 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:50:46,715 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:50:46,715 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:50:46,784 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:50:46,784 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:50:46,784 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:50:46,784 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:50:46,786 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:50:46,786 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:50:46,786 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:50:46,786 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:50:46,788 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:50:46,788 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:50:47,054 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T18:50:47,054 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T18:50:47,590 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:50:47,590 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:50:47,596 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=8606
2023-09-20T18:50:47,597 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T18:50:47,606 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T18:50:47,606 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]8606
2023-09-20T18:50:47,606 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T18:50:47,607 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T18:50:47,607 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T18:50:47,607 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T18:50:47,611 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:50:47,611 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:50:47,619 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T18:50:47,622 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695235847622
2023-09-20T18:50:47,622 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695235847622
2023-09-20T18:50:47,655 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T18:50:47,711 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T18:50:47,712 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T18:50:47,712 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T18:50:47,712 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - #################################
2023-09-20T18:50:47,712 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - {'model_dir': '/tmp/models/f4b3c5aef7ed4e0e850504c5e4211a52', 'gpu_id': 0, 'batch_size': 1, 'server_name': 'MMS', 'server_version': '0.8.2', 'limit_max_image_pixels': True}
2023-09-20T18:50:47,713 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - #################################
2023-09-20T18:50:47,713 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - {'createdOn': '20/09/2023 18:50:12', 'runtime': 'python', 'model': {'modelName': 'test_model', 'handler': 'handler.py', 'modelFile': 'model.pth', 'modelVersion': '1.0'}, 'archiverVersion': '0.8.2'}
2023-09-20T18:50:47,720 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T18:50:47,720 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T18:50:47,720 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 66
2023-09-20T18:50:47,720 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 66
2023-09-20T18:50:47,720 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T18:50:47,720 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T18:50:47,723 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:1011.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695235847
2023-09-20T18:50:47,723 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:35.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695235847
2023-09-20T18:53:29,644 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:53:29,644 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:53:29,648 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:53:29,648 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:53:29,717 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:53:29,717 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:53:29,793 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:53:29,793 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:53:29,801 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:53:29,801 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:53:29,824 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T18:53:29,824 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T18:53:31,220 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T18:53:31,220 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T18:53:31,220 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T18:53:31,220 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T18:53:31,220 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T18:53:31,220 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T18:53:31,220 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T18:53:31,220 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T18:53:31,230 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:53:31,230 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:53:31,232 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:53:31,232 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:53:31,299 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:53:31,299 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:53:31,299 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:53:31,299 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:53:31,302 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:53:31,302 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:53:31,302 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:53:31,302 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:53:31,303 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:53:31,303 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:53:31,552 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T18:53:31,552 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T18:53:31,988 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=8857
2023-09-20T18:53:31,989 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T18:53:31,998 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T18:53:31,999 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]8857
2023-09-20T18:53:31,999 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T18:53:31,999 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T18:53:32,000 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T18:53:32,000 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T18:53:32,005 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:53:32,005 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:53:32,014 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T18:53:32,017 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695236012017
2023-09-20T18:53:32,017 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695236012017
2023-09-20T18:53:32,053 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T18:53:32,094 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:53:32,094 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:53:32,112 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T18:53:32,113 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T18:53:32,113 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T18:53:32,114 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend worker process died.
2023-09-20T18:53:32,114 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T18:53:32,115 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T18:53:32,115 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 253, in <module>
2023-09-20T18:53:32,115 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T18:53:32,115 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     worker.run_server()
2023-09-20T18:53:32,115 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 221, in run_server
2023-09-20T18:53:32,116 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     self.handle_connection(cl_socket)
2023-09-20T18:53:32,116 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 184, in handle_connection
2023-09-20T18:53:32,116 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     service, result, code = self.load_model(msg)
2023-09-20T18:53:32,117 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 131, in load_model
2023-09-20T18:53:32,117 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     service = model_loader.load(
2023-09-20T18:53:32,117 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T18:53:32,117 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T18:53:32,117 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_loader.py", line 135, in load
2023-09-20T18:53:32,118 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     initialize_fn(service.context)
2023-09-20T18:53:32,119 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/d8e977fc00f74a1e9a879f0ba0498f74/handler.py", line 19, in initialize
2023-09-20T18:53:32,119 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     self.device = torch.device(torch.cuda(0))
2023-09-20T18:53:32,119 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - TypeError: 'module' object is not callable
2023-09-20T18:53:32,118 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:432) ~[?:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:213) [model-server.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) [?:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T18:53:32,118 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:432) ~[?:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:213) [model-server.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) [?:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T18:53:32,141 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.BatchAggregator - Load model failed: test_model, error: Worker died.
2023-09-20T18:53:32,141 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.BatchAggregator - Load model failed: test_model, error: Worker died.
2023-09-20T18:53:32,141 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T18:53:32,141 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T18:53:32,142 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery start timestamp: 1695236012142
2023-09-20T18:53:32,142 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery start timestamp: 1695236012142
2023-09-20T18:53:32,142 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T18:53:32,142 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T18:53:32,142 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T18:53:32,142 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T18:53:32,147 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T18:53:32,147 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T18:53:32,149 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T18:53:32,149 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T18:53:32,149 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T18:53:32,149 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T18:53:33,147 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:53:33,147 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:53:33,822 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=8887
2023-09-20T18:53:33,823 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T18:53:33,832 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T18:53:33,833 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]8887
2023-09-20T18:53:33,833 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T18:53:33,833 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T18:53:33,833 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T18:53:33,833 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T18:53:33,833 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:53:33,833 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:53:33,835 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T18:53:33,835 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T18:53:33,835 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T18:53:33,836 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T18:53:33,836 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T18:53:33,836 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T18:53:33,836 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T18:53:33,837 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T18:53:33,837 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T18:53:33,837 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T18:53:33,837 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T18:53:33,838 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T18:53:33,838 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T18:53:33,838 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T18:53:33,838 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T18:53:33,838 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T18:53:33,838 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T18:53:33,846 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T18:53:33,846 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T18:53:33,846 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T18:53:33,846 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T18:53:34,839 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:53:34,839 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:53:35,526 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=8898
2023-09-20T18:53:35,527 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T18:53:35,536 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T18:53:35,536 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]8898
2023-09-20T18:53:35,537 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T18:53:35,537 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T18:53:35,537 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T18:53:35,537 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T18:53:35,537 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:53:35,537 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:53:35,539 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T18:53:35,539 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T18:53:35,539 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T18:53:35,540 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T18:53:35,540 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T18:53:35,540 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T18:53:35,540 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T18:53:35,541 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T18:53:35,541 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T18:53:35,541 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T18:53:35,541 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T18:53:35,541 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T18:53:35,541 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T18:53:35,542 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T18:53:35,542 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T18:53:35,542 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 2 seconds.
2023-09-20T18:53:35,542 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 2 seconds.
2023-09-20T18:53:35,549 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T18:53:35,549 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T18:53:35,549 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T18:53:35,549 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T18:53:37,543 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:53:37,543 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:53:38,214 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=8921
2023-09-20T18:53:38,215 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T18:53:38,224 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T18:53:38,224 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]8921
2023-09-20T18:53:38,224 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T18:53:38,224 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T18:53:38,224 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T18:53:38,224 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T18:53:38,224 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:53:38,224 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:53:38,226 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T18:53:38,227 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T18:53:38,226 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T18:53:38,227 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T18:53:38,227 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T18:53:38,227 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T18:53:38,227 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T18:53:38,228 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T18:53:38,228 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T18:53:38,228 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T18:53:38,228 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T18:53:38,228 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T18:53:38,228 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T18:53:38,228 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T18:53:38,228 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T18:53:38,228 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 3 seconds.
2023-09-20T18:53:38,228 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 3 seconds.
2023-09-20T18:53:38,243 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T18:53:38,244 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T18:53:38,244 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T18:53:38,243 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T18:53:41,229 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:53:41,229 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:53:41,919 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=8944
2023-09-20T18:53:41,920 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T18:53:41,930 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T18:53:41,930 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]8944
2023-09-20T18:53:41,930 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T18:53:41,930 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T18:53:41,930 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T18:53:41,930 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T18:53:41,930 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:53:41,930 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:53:41,932 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T18:53:41,932 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T18:53:41,932 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T18:53:41,933 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T18:53:41,933 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T18:53:41,933 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T18:53:41,933 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T18:53:41,933 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T18:53:41,933 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T18:53:41,933 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T18:53:41,933 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T18:53:41,934 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T18:53:41,934 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T18:53:41,934 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T18:53:41,934 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T18:53:41,934 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 5 seconds.
2023-09-20T18:53:41,934 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 5 seconds.
2023-09-20T18:53:41,940 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T18:53:41,940 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T18:53:41,948 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T18:53:41,948 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T18:53:46,935 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:53:46,935 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:53:47,621 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=8979
2023-09-20T18:53:47,622 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T18:53:47,632 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T18:53:47,632 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]8979
2023-09-20T18:53:47,632 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T18:53:47,632 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T18:53:47,632 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T18:53:47,632 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T18:53:47,632 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:53:47,632 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:53:47,635 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T18:53:47,635 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T18:53:47,635 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T18:53:47,635 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T18:53:47,635 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T18:53:47,635 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T18:53:47,635 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T18:53:47,635 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T18:53:47,635 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T18:53:47,636 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T18:53:47,636 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T18:53:47,636 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T18:53:47,636 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T18:53:47,636 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T18:53:47,636 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T18:53:47,636 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 8 seconds.
2023-09-20T18:53:47,636 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 8 seconds.
2023-09-20T18:53:47,642 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T18:53:47,642 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T18:53:47,642 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T18:53:47,642 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T18:53:55,637 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:53:55,637 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:53:56,293 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=9002
2023-09-20T18:53:56,294 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T18:53:56,303 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T18:53:56,304 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]9002
2023-09-20T18:53:56,304 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T18:53:56,304 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T18:53:56,304 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T18:53:56,304 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T18:53:56,304 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:53:56,304 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:53:56,306 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T18:53:56,306 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T18:53:56,306 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T18:53:56,307 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T18:53:56,307 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T18:53:56,307 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T18:53:56,307 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T18:53:56,308 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T18:53:56,308 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T18:53:56,309 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T18:53:56,309 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T18:53:56,309 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T18:53:56,309 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T18:53:56,310 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T18:53:56,310 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T18:53:56,310 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 13 seconds.
2023-09-20T18:53:56,310 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 13 seconds.
2023-09-20T18:53:56,316 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T18:53:56,316 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T18:53:56,317 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T18:53:56,317 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T18:54:40,567 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:54:40,567 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:54:40,570 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:54:40,570 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:54:40,635 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:54:40,635 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:54:40,709 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:54:40,709 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:54:40,716 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:54:40,716 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:54:40,739 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T18:54:40,739 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T18:54:42,160 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T18:54:42,160 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T18:54:42,160 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T18:54:42,160 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T18:54:42,160 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T18:54:42,160 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T18:54:42,160 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T18:54:42,160 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T18:54:42,170 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:54:42,170 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:54:42,171 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:54:42,171 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:54:42,238 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:54:42,238 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:54:42,238 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:54:42,238 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:54:42,240 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:54:42,240 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:54:42,240 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:54:42,240 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:54:42,241 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:54:42,241 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:54:42,476 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T18:54:42,476 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T18:54:42,923 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=9244
2023-09-20T18:54:42,924 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T18:54:42,933 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T18:54:42,933 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]9244
2023-09-20T18:54:42,933 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T18:54:42,933 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T18:54:42,934 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T18:54:42,934 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T18:54:42,938 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:54:42,938 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:54:42,947 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T18:54:42,950 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695236082949
2023-09-20T18:54:42,950 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695236082949
2023-09-20T18:54:42,981 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T18:54:42,992 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:54:42,992 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:54:43,043 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T18:54:43,043 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T18:54:43,043 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T18:54:43,094 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T18:54:43,101 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T18:54:43,101 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T18:54:43,101 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 120
2023-09-20T18:54:43,101 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 120
2023-09-20T18:54:43,102 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T18:54:43,102 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T18:54:43,104 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:936.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695236083
2023-09-20T18:54:43,104 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:35.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695236083
2023-09-20T18:55:42,955 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:55:42,955 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:56:43,086 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:56:43,086 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:57:21,230 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:57:21,230 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T18:57:21,233 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:57:21,233 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T18:57:21,296 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:57:21,296 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T18:57:21,365 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:57:21,365 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T18:57:21,372 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:57:21,372 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T18:57:21,394 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T18:57:21,394 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T18:57:22,801 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T18:57:22,801 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T18:57:22,801 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T18:57:22,801 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T18:57:22,801 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T18:57:22,801 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T18:57:22,802 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T18:57:22,802 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T18:57:22,811 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:57:22,811 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:57:22,811 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T18:57:22,811 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T18:57:22,902 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:57:22,902 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T18:57:22,902 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:57:22,902 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T18:57:22,904 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:57:22,904 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T18:57:22,904 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:57:22,904 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T18:57:22,906 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:57:22,906 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T18:57:23,128 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T18:57:23,128 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T18:57:23,595 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=9507
2023-09-20T18:57:23,596 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T18:57:23,604 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T18:57:23,605 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]9507
2023-09-20T18:57:23,605 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T18:57:23,605 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T18:57:23,606 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T18:57:23,606 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T18:57:23,611 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:57:23,611 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T18:57:23,622 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T18:57:23,626 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695236243626
2023-09-20T18:57:23,626 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695236243626
2023-09-20T18:57:23,659 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T18:57:23,687 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:57:23,687 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T18:57:23,721 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T18:57:23,722 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T18:57:23,723 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T18:57:23,737 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T18:57:23,738 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T18:57:23,738 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/a9bb729a26dc447e8755c729602f598c/model.pth
2023-09-20T18:57:23,744 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T18:57:23,744 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T18:57:23,744 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 85
2023-09-20T18:57:23,744 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 85
2023-09-20T18:57:23,745 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T18:57:23,745 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T18:57:23,747 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:938.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695236243
2023-09-20T18:57:23,748 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:37.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695236243
2023-09-20T19:06:56,062 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:06:56,062 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:06:56,065 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:06:56,065 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:06:56,128 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:06:56,128 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:06:56,199 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:06:56,199 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:06:56,208 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:06:56,208 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:06:56,230 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:06:56,230 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:06:57,656 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:06:57,656 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:06:57,656 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:06:57,656 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:06:57,656 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:06:57,656 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:06:57,657 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:06:57,657 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:06:57,666 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:06:57,667 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:06:57,667 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:06:57,666 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:06:57,734 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:06:57,734 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:06:57,734 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:06:57,734 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:06:57,736 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:06:57,736 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:06:57,736 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:06:57,736 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:06:57,737 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:06:57,737 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:06:57,971 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:06:57,971 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:06:58,461 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=9776
2023-09-20T19:06:58,461 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:06:58,470 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:06:58,470 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]9776
2023-09-20T19:06:58,470 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:06:58,471 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:06:58,471 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:06:58,471 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:06:58,475 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:06:58,475 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:06:58,484 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:06:58,488 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695236818488
2023-09-20T19:06:58,488 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695236818488
2023-09-20T19:06:58,498 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:06:58,498 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:06:58,523 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:06:58,582 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:06:58,582 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:06:58,583 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:06:58,766 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:06:58,766 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:06:58,766 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/678dee56bd2e4ebe8d42ce14df82703b/model.pth
2023-09-20T19:06:59,132 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend worker process died.
2023-09-20T19:06:59,133 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:06:59,133 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 253, in <module>
2023-09-20T19:06:59,133 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     worker.run_server()
2023-09-20T19:06:59,133 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 221, in run_server
2023-09-20T19:06:59,133 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     self.handle_connection(cl_socket)
2023-09-20T19:06:59,134 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 184, in handle_connection
2023-09-20T19:06:59,134 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     service, result, code = self.load_model(msg)
2023-09-20T19:06:59,134 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 131, in load_model
2023-09-20T19:06:59,134 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     service = model_loader.load(
2023-09-20T19:06:59,134 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_loader.py", line 135, in load
2023-09-20T19:06:59,135 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     initialize_fn(service.context)
2023-09-20T19:06:59,135 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/678dee56bd2e4ebe8d42ce14df82703b/handler.py", line 36, in initialize
2023-09-20T19:06:59,135 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     self.model.load_state_dict(model_dir)
2023-09-20T19:06:59,135 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1559, in load_state_dict
2023-09-20T19:06:59,135 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     raise TypeError("Expected state_dict to be dict-like, got {}.".format(type(state_dict)))
2023-09-20T19:06:59,135 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - TypeError: Expected state_dict to be dict-like, got <class 'str'>.
2023-09-20T19:06:59,139 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:06:59,139 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:06:59,140 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:06:59,140 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:06:59,141 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:432) ~[?:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:213) [model-server.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) [?:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:06:59,141 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:432) ~[?:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:213) [model-server.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) [?:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:06:59,154 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.BatchAggregator - Load model failed: test_model, error: Worker died.
2023-09-20T19:06:59,154 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.BatchAggregator - Load model failed: test_model, error: Worker died.
2023-09-20T19:06:59,155 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:06:59,155 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:06:59,155 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery start timestamp: 1695236819155
2023-09-20T19:06:59,155 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery start timestamp: 1695236819155
2023-09-20T19:06:59,156 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:06:59,156 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:06:59,156 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:06:59,156 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:06:59,157 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T19:06:59,157 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T19:06:59,194 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:06:59,194 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:06:59,195 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:06:59,195 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:00,157 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:00,157 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:00,841 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=9817
2023-09-20T19:07:00,841 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:07:00,850 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:07:00,851 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]9817
2023-09-20T19:07:00,851 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:07:00,851 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:07:00,851 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:00,851 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:00,851 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:00,851 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:00,854 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:00,854 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:00,854 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:07:00,854 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:00,854 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:00,854 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:00,854 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:00,855 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:00,855 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:00,855 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:00,855 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:00,856 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:00,856 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:00,856 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:00,856 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:00,856 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T19:07:00,856 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T19:07:00,862 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:00,862 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:00,862 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:07:00,862 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:07:01,857 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:01,857 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:02,538 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=9839
2023-09-20T19:07:02,539 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:07:02,549 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:07:02,549 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]9839
2023-09-20T19:07:02,549 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:07:02,549 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:07:02,549 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:02,549 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:02,550 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:02,550 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:02,551 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:02,551 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:02,552 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:07:02,552 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:02,552 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:02,552 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:02,552 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:02,554 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:02,554 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:02,554 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:02,554 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:02,554 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:02,554 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:02,555 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:02,555 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:02,555 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 2 seconds.
2023-09-20T19:07:02,555 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 2 seconds.
2023-09-20T19:07:02,563 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:07:02,563 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:02,563 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:02,563 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:07:04,556 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:04,556 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:05,223 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=9850
2023-09-20T19:07:05,224 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:07:05,233 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:07:05,234 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]9850
2023-09-20T19:07:05,234 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:05,234 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:07:05,234 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:05,234 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:05,234 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:07:05,234 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:05,237 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:05,237 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:05,237 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:05,237 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:05,237 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:07:05,237 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:05,237 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:05,238 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:05,238 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:05,238 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:05,238 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:05,238 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:05,238 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:05,238 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:05,238 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:05,238 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 3 seconds.
2023-09-20T19:07:05,238 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 3 seconds.
2023-09-20T19:07:05,244 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:05,244 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:07:05,244 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:05,244 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:07:08,239 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:08,239 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:08,912 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=9873
2023-09-20T19:07:08,913 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:07:08,923 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:07:08,924 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]9873
2023-09-20T19:07:08,924 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:07:08,924 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:07:08,924 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:08,924 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:08,924 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:08,924 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:08,926 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:08,926 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:08,926 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:07:08,927 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:08,927 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:08,927 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:08,927 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:08,927 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:08,927 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:08,927 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:08,927 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:08,928 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:08,928 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:08,929 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:08,929 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:08,929 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 5 seconds.
2023-09-20T19:07:08,929 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 5 seconds.
2023-09-20T19:07:08,934 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:08,934 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:08,934 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:07:08,934 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:07:13,930 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:13,930 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:14,651 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=9896
2023-09-20T19:07:14,652 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:07:14,662 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:07:14,662 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]9896
2023-09-20T19:07:14,662 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:07:14,662 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:07:14,662 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:14,662 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:14,663 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:14,663 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:14,664 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:14,664 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:14,664 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:07:14,665 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:14,665 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:14,665 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:14,665 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:14,665 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:14,665 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:14,665 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:14,665 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:14,666 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:14,666 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:14,666 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:14,666 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:14,666 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 8 seconds.
2023-09-20T19:07:14,666 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 8 seconds.
2023-09-20T19:07:14,672 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:14,672 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:14,672 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:07:14,672 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:07:22,667 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:22,667 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:23,347 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=9931
2023-09-20T19:07:23,348 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:07:23,357 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:07:23,357 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]9931
2023-09-20T19:07:23,357 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:23,357 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:07:23,357 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:23,358 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:23,358 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:07:23,358 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:23,360 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:23,360 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:07:23,360 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:23,360 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:23,360 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:23,360 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:23,360 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:23,361 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:23,361 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:23,361 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:23,361 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:23,361 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:23,361 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:23,362 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:23,362 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:23,362 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 13 seconds.
2023-09-20T19:07:23,362 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 13 seconds.
2023-09-20T19:07:23,368 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:23,368 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:23,368 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:07:23,368 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:07:36,362 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:36,362 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:37,042 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=9954
2023-09-20T19:07:37,042 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:07:37,052 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:07:37,052 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]9954
2023-09-20T19:07:37,052 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:07:37,052 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:07:37,052 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:37,052 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:37,053 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:37,053 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:37,055 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:37,054 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:07:37,055 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:37,055 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:37,055 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:37,055 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:37,055 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:37,056 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:37,056 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:37,056 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:37,056 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:37,056 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:37,056 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:37,056 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:37,056 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:37,056 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 21 seconds.
2023-09-20T19:07:37,056 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 21 seconds.
2023-09-20T19:07:37,065 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:37,065 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:37,065 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:07:37,065 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:07:58,057 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:58,057 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:07:58,530 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:07:58,530 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:07:58,880 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=9998
2023-09-20T19:07:58,881 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:07:58,890 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:07:58,890 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]9998
2023-09-20T19:07:58,890 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:07:58,890 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:07:58,890 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:58,890 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:07:58,891 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:58,891 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:07:58,892 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:58,892 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:07:58,893 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:58,893 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:07:58,893 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:07:58,893 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:58,893 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:07:58,893 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:58,893 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:07:58,893 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:58,893 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:07:58,894 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:58,894 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:07:58,894 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:58,894 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:07:58,894 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 34 seconds.
2023-09-20T19:07:58,894 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 34 seconds.
2023-09-20T19:07:58,905 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:58,906 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:07:58,905 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:07:58,906 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:08:20,982 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:08:20,982 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:08:20,984 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:08:20,984 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:08:21,049 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:08:21,049 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:08:21,122 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:08:21,122 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:08:21,129 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:08:21,129 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:08:21,151 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:08:21,151 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:08:22,573 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:08:22,573 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:08:22,573 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:08:22,573 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:08:22,573 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:08:22,573 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:08:22,573 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:08:22,573 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:08:22,584 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:08:22,584 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:08:22,584 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:08:22,584 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:08:22,658 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:08:22,658 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:08:22,659 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:08:22,659 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:08:22,660 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:08:22,660 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:08:22,661 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:08:22,661 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:08:22,662 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:08:22,662 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:08:22,897 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:08:22,897 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:08:23,352 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10144
2023-09-20T19:08:23,354 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:08:23,362 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:08:23,362 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10144
2023-09-20T19:08:23,363 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:08:23,363 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:08:23,363 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:08:23,363 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:08:23,369 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:08:23,369 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:08:23,378 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:08:23,381 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695236903381
2023-09-20T19:08:23,381 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695236903381
2023-09-20T19:08:23,418 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:08:23,457 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:08:23,457 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:08:23,473 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:08:23,474 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:08:23,474 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:08:23,636 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:08:23,637 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:08:23,637 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/b5bd1c44504b4257a6062e543a0637fe/model.pth
2023-09-20T19:08:23,637 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T19:08:24,002 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend worker process died.
2023-09-20T19:08:24,002 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:08:24,003 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 253, in <module>
2023-09-20T19:08:24,003 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     worker.run_server()
2023-09-20T19:08:24,003 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 221, in run_server
2023-09-20T19:08:24,004 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     self.handle_connection(cl_socket)
2023-09-20T19:08:24,004 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 184, in handle_connection
2023-09-20T19:08:24,004 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     service, result, code = self.load_model(msg)
2023-09-20T19:08:24,004 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 131, in load_model
2023-09-20T19:08:24,005 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     service = model_loader.load(
2023-09-20T19:08:24,005 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_loader.py", line 135, in load
2023-09-20T19:08:24,005 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     initialize_fn(service.context)
2023-09-20T19:08:24,005 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/b5bd1c44504b4257a6062e543a0637fe/handler.py", line 37, in initialize
2023-09-20T19:08:24,006 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     self.model.load_state_dict(model_dir)
2023-09-20T19:08:24,006 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1559, in load_state_dict
2023-09-20T19:08:24,006 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     raise TypeError("Expected state_dict to be dict-like, got {}.".format(type(state_dict)))
2023-09-20T19:08:24,006 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - TypeError: Expected state_dict to be dict-like, got <class 'str'>.
2023-09-20T19:08:24,011 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:08:24,011 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:08:24,012 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:08:24,012 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:08:24,013 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:432) ~[?:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:213) [model-server.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) [?:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:08:24,013 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:432) ~[?:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:213) [model-server.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) [?:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:08:24,029 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.BatchAggregator - Load model failed: test_model, error: Worker died.
2023-09-20T19:08:24,029 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.BatchAggregator - Load model failed: test_model, error: Worker died.
2023-09-20T19:08:24,029 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:08:24,029 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:08:24,029 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery start timestamp: 1695236904029
2023-09-20T19:08:24,029 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery start timestamp: 1695236904029
2023-09-20T19:08:24,030 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:08:24,030 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:08:24,030 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:08:24,030 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:08:24,031 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T19:08:24,031 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T19:08:24,071 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:08:24,071 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:08:24,071 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:08:24,071 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:08:25,032 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:08:25,032 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:08:25,700 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10185
2023-09-20T19:08:25,702 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:08:25,712 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:08:25,713 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10185
2023-09-20T19:08:25,713 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:08:25,713 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:08:25,713 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:08:25,713 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:08:25,713 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:08:25,713 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:08:25,715 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:08:25,715 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:08:25,715 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:08:25,715 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:08:25,715 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:08:25,716 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:08:25,716 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:08:25,717 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:08:25,717 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:08:25,718 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:08:25,718 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:08:25,718 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:08:25,718 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:08:25,719 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:08:25,719 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:08:25,719 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T19:08:25,719 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T19:08:25,725 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:08:25,725 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:08:25,735 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:08:25,735 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:08:26,720 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:08:26,720 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:08:27,384 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10199
2023-09-20T19:08:27,385 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:08:27,394 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:08:27,394 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10199
2023-09-20T19:08:27,394 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:08:27,394 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:08:27,394 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:08:27,394 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:08:27,395 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:08:27,395 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:08:27,397 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:08:27,397 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:08:27,397 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:08:27,397 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:08:27,397 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:08:27,397 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:08:27,397 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:08:27,398 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:08:27,398 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:08:27,398 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:08:27,398 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:08:27,398 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:08:27,398 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:08:27,398 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:08:27,398 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:08:27,398 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 2 seconds.
2023-09-20T19:08:27,398 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 2 seconds.
2023-09-20T19:08:27,406 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:08:27,404 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:08:27,406 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:08:27,404 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:08:29,399 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:08:29,399 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:08:30,063 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10219
2023-09-20T19:08:30,064 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:08:30,073 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:08:30,073 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10219
2023-09-20T19:08:30,073 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:08:30,074 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:08:30,074 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:08:30,074 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:08:30,074 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:08:30,074 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:08:30,076 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:08:30,076 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:08:30,077 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:08:30,077 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:08:30,077 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:08:30,077 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:08:30,077 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:08:30,078 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:08:30,078 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:08:30,078 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:08:30,078 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:08:30,078 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:08:30,078 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:08:30,078 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:08:30,078 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:08:30,079 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 3 seconds.
2023-09-20T19:08:30,079 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 3 seconds.
2023-09-20T19:08:30,085 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:08:30,085 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:08:30,085 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:08:30,085 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:08:33,079 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:08:33,079 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:08:33,924 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10233
2023-09-20T19:08:33,925 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:08:33,935 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:08:33,935 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10233
2023-09-20T19:08:33,935 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:08:33,936 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:08:33,936 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:08:33,936 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:08:33,936 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:08:33,936 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:08:33,938 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:08:33,938 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:08:33,938 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:08:33,938 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:08:33,938 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:08:33,939 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:08:33,939 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:08:33,939 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:08:33,939 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:08:33,939 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:08:33,939 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:08:33,939 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:08:33,939 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:08:33,939 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:08:33,939 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:08:33,940 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 5 seconds.
2023-09-20T19:08:33,940 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 5 seconds.
2023-09-20T19:08:33,946 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:08:33,946 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:08:33,946 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:08:33,946 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:08:38,940 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:08:38,940 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:08:39,598 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10256
2023-09-20T19:08:39,599 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:08:39,609 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:08:39,609 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10256
2023-09-20T19:08:39,610 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:08:39,610 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:08:39,610 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:08:39,610 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:08:39,610 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:08:39,610 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:08:39,612 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:08:39,612 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:08:39,612 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:08:39,612 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:08:39,612 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:08:39,612 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:08:39,612 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:08:39,613 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:08:39,613 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:08:39,613 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:08:39,613 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:08:39,613 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:08:39,613 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:08:39,613 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:08:39,613 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:08:39,613 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 8 seconds.
2023-09-20T19:08:39,613 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 8 seconds.
2023-09-20T19:08:39,619 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:08:39,619 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:08:39,619 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:08:39,619 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:08:47,614 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:08:47,614 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:08:48,326 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10291
2023-09-20T19:08:48,327 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:08:48,336 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:08:48,336 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10291
2023-09-20T19:08:48,337 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:08:48,336 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:08:48,337 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:08:48,337 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:08:48,337 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:08:48,337 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:08:48,339 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:08:48,339 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:08:48,340 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:08:48,340 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:08:48,340 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:08:48,340 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:08:48,340 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:08:48,341 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:08:48,341 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:08:48,341 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:08:48,341 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:08:48,341 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:08:48,341 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:08:48,341 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:08:48,341 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:08:48,342 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 13 seconds.
2023-09-20T19:08:48,342 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 13 seconds.
2023-09-20T19:08:48,349 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:08:48,349 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:08:48,359 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:08:48,359 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:09:01,342 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:09:01,342 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:09:02,043 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10333
2023-09-20T19:09:02,044 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:09:02,053 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:09:02,054 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10333
2023-09-20T19:09:02,054 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:09:02,054 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:09:02,054 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:09:02,054 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:09:02,054 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:09:02,054 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:09:02,057 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:09:02,057 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:09:02,057 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:09:02,057 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:09:02,057 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:09:02,057 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:09:02,057 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:09:02,058 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:09:02,058 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:09:02,058 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:09:02,058 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:09:02,058 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:09:02,058 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:09:02,058 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:09:02,058 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:09:02,058 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 21 seconds.
2023-09-20T19:09:02,058 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 21 seconds.
2023-09-20T19:09:02,073 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:09:02,064 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:09:02,073 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:09:02,064 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:09:23,059 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:09:23,059 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:09:23,425 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:09:23,425 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:09:23,738 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10416
2023-09-20T19:09:23,739 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:09:23,749 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:09:23,749 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10416
2023-09-20T19:09:23,749 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:09:23,749 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:09:23,749 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:09:23,749 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:09:23,750 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:09:23,750 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:09:23,751 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:09:23,751 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:09:23,751 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:09:23,752 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:09:23,752 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:09:23,752 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:09:23,752 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:09:23,752 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:09:23,752 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:09:23,752 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:09:23,752 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:09:23,753 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:09:23,753 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:09:23,753 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:09:23,753 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:09:23,753 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 34 seconds.
2023-09-20T19:09:23,753 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 34 seconds.
2023-09-20T19:09:23,768 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:09:23,768 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:09:23,768 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:09:23,768 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:09:39,224 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:09:39,224 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:09:39,227 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:09:39,227 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:09:39,288 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:09:39,288 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:09:39,361 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:09:39,361 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:09:39,368 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:09:39,368 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:09:39,391 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:09:39,391 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:09:40,828 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:09:40,828 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:09:40,829 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:09:40,829 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:09:40,829 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:09:40,829 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:09:40,830 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:09:40,830 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:09:40,839 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:09:40,839 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:09:40,840 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:09:40,840 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:09:40,911 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:09:40,911 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:09:40,912 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:09:40,912 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:09:40,913 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:09:40,913 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:09:40,914 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:09:40,914 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:09:40,914 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:09:40,914 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:09:41,154 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:09:41,154 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:09:41,603 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10535
2023-09-20T19:09:41,604 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:09:41,612 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:09:41,612 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10535
2023-09-20T19:09:41,612 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:09:41,613 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:09:41,613 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:09:41,613 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:09:41,618 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:09:41,618 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:09:41,627 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:09:41,631 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695236981631
2023-09-20T19:09:41,631 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695236981631
2023-09-20T19:09:41,665 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:09:41,690 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:09:41,690 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:09:41,734 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:09:41,734 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:09:41,734 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:09:41,898 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:09:41,899 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:09:41,899 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/15c7423db6eb4cfabf61ba044d8baf2e/model.pth
2023-09-20T19:09:41,899 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - INFOOOOOOOOOOOOOO: /tmp/models/15c7423db6eb4cfabf61ba044d8baf2e
2023-09-20T19:09:41,905 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:09:41,905 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:09:41,906 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 240
2023-09-20T19:09:41,906 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 240
2023-09-20T19:09:41,906 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:09:41,906 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:09:41,909 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:1070.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695236981
2023-09-20T19:09:41,909 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:38.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695236981
2023-09-20T19:10:40,933 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:10:40,933 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:10:40,936 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:10:40,936 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:10:40,999 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:10:40,999 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:10:41,068 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:10:41,068 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:10:41,075 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:10:41,075 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:10:41,096 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:10:41,096 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:10:42,519 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:10:42,519 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:10:42,519 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:10:42,519 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:10:42,519 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:10:42,519 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:10:42,520 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:10:42,520 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:10:42,529 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:10:42,529 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:10:42,530 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:10:42,530 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:10:42,601 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:10:42,601 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:10:42,601 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:10:42,601 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:10:42,603 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:10:42,603 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:10:42,603 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:10:42,603 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:10:42,604 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:10:42,604 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:10:42,835 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:10:42,835 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:10:43,388 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:10:43,388 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:10:43,421 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10701
2023-09-20T19:10:43,422 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:10:43,431 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:10:43,431 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10701
2023-09-20T19:10:43,431 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:10:43,432 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:10:43,432 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:10:43,432 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:10:43,438 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:10:43,438 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:10:43,446 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:10:43,450 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695237043449
2023-09-20T19:10:43,450 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695237043449
2023-09-20T19:10:43,481 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:10:43,539 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:10:43,539 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:10:43,539 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:10:43,702 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:10:43,703 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:10:43,703 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/7fefe6252dda469fa3c970bff27d3749/model.pth
2023-09-20T19:10:43,703 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T19:10:44,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend worker process died.
2023-09-20T19:10:44,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:10:44,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 253, in <module>
2023-09-20T19:10:44,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     worker.run_server()
2023-09-20T19:10:44,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 221, in run_server
2023-09-20T19:10:44,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     self.handle_connection(cl_socket)
2023-09-20T19:10:44,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 184, in handle_connection
2023-09-20T19:10:44,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     service, result, code = self.load_model(msg)
2023-09-20T19:10:44,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py", line 131, in load_model
2023-09-20T19:10:44,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     service = model_loader.load(
2023-09-20T19:10:44,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_loader.py", line 135, in load
2023-09-20T19:10:44,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     initialize_fn(service.context)
2023-09-20T19:10:44,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/7fefe6252dda469fa3c970bff27d3749/handler.py", line 39, in initialize
2023-09-20T19:10:44,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     self.model.load_state_dict(model_path)
2023-09-20T19:10:44,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1559, in load_state_dict
2023-09-20T19:10:44,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     raise TypeError("Expected state_dict to be dict-like, got {}.".format(type(state_dict)))
2023-09-20T19:10:44,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - TypeError: Expected state_dict to be dict-like, got <class 'str'>.
2023-09-20T19:10:44,084 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:10:44,084 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:10:44,085 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:10:44,085 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:10:44,085 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:432) ~[?:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:213) [model-server.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) [?:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:10:44,085 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:432) ~[?:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:213) [model-server.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) [?:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:10:44,098 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.BatchAggregator - Load model failed: test_model, error: Worker died.
2023-09-20T19:10:44,098 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.BatchAggregator - Load model failed: test_model, error: Worker died.
2023-09-20T19:10:44,099 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:10:44,099 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:10:44,099 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery start timestamp: 1695237044099
2023-09-20T19:10:44,099 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery start timestamp: 1695237044099
2023-09-20T19:10:44,099 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:10:44,099 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:10:44,099 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:10:44,099 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:10:44,100 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T19:10:44,100 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T19:10:44,126 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:10:44,126 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:10:44,126 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:10:44,126 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:10:45,101 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:10:45,101 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:10:45,766 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10743
2023-09-20T19:10:45,767 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:10:45,776 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:10:45,776 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10743
2023-09-20T19:10:45,776 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:10:45,776 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:10:45,776 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:10:45,776 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:10:45,777 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:10:45,777 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:10:45,778 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:10:45,778 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:10:45,778 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:10:45,779 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:10:45,779 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:10:45,779 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:10:45,779 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:10:45,780 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:10:45,780 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:10:45,780 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:10:45,780 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:10:45,780 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:10:45,780 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:10:45,780 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:10:45,780 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:10:45,781 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T19:10:45,781 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 1 seconds.
2023-09-20T19:10:45,787 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:10:45,787 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:10:45,787 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:10:45,787 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:10:46,781 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:10:46,781 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:10:47,453 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10757
2023-09-20T19:10:47,454 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:10:47,463 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:10:47,463 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10757
2023-09-20T19:10:47,463 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:10:47,463 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:10:47,463 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:10:47,463 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:10:47,463 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:10:47,463 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:10:47,465 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:10:47,465 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:10:47,465 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:10:47,465 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:10:47,465 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:10:47,466 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:10:47,466 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:10:47,466 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:10:47,466 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:10:47,466 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:10:47,466 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:10:47,466 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:10:47,466 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:10:47,467 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:10:47,467 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:10:47,467 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 2 seconds.
2023-09-20T19:10:47,467 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 2 seconds.
2023-09-20T19:10:47,476 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:10:47,476 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:10:47,476 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:10:47,476 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:10:49,467 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:10:49,467 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:10:50,162 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10777
2023-09-20T19:10:50,163 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:10:50,173 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:10:50,173 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10777
2023-09-20T19:10:50,174 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:10:50,174 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:10:50,174 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:10:50,174 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:10:50,174 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:10:50,174 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:10:50,178 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:10:50,178 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:10:50,178 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:10:50,178 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:10:50,178 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:10:50,178 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:10:50,178 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:10:50,179 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:10:50,179 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:10:50,179 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:10:50,179 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:10:50,179 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:10:50,179 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:10:50,179 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:10:50,179 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:10:50,180 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 3 seconds.
2023-09-20T19:10:50,180 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 3 seconds.
2023-09-20T19:10:50,186 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:10:50,186 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:10:50,187 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:10:50,187 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:10:53,180 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:10:53,180 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:10:53,853 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10791
2023-09-20T19:10:53,854 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:10:53,866 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:10:53,866 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10791
2023-09-20T19:10:53,866 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:10:53,867 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:10:53,867 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:10:53,867 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:10:53,867 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:10:53,867 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:10:53,869 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:10:53,869 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:10:53,869 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:10:53,869 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:10:53,869 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:10:53,869 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:10:53,869 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:10:53,870 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:10:53,870 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:10:53,870 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:10:53,870 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:10:53,870 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:10:53,870 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:10:53,870 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:10:53,870 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:10:53,871 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 5 seconds.
2023-09-20T19:10:53,871 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 5 seconds.
2023-09-20T19:10:53,876 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:10:53,876 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:10:53,876 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:10:53,876 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:10:58,871 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:10:58,871 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:10:59,531 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10814
2023-09-20T19:10:59,531 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:10:59,540 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:10:59,540 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10814
2023-09-20T19:10:59,540 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:10:59,540 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:10:59,540 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:10:59,540 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:10:59,540 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:10:59,540 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:10:59,543 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:10:59,543 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:10:59,543 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:10:59,543 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:10:59,543 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:10:59,543 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:10:59,543 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:10:59,544 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:10:59,544 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:10:59,544 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:10:59,544 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:10:59,544 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:10:59,544 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:10:59,544 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:10:59,544 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:10:59,544 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 8 seconds.
2023-09-20T19:10:59,544 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 8 seconds.
2023-09-20T19:10:59,551 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:10:59,551 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:10:59,551 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:10:59,551 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:11:07,545 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:11:07,545 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:11:08,194 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=10856
2023-09-20T19:11:08,195 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:11:08,203 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:11:08,203 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]10856
2023-09-20T19:11:08,204 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:11:08,203 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:11:08,204 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STOPPED -> WORKER_STARTED
2023-09-20T19:11:08,204 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:11:08,204 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:11:08,204 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:11:08,206 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:11:08,206 [INFO ] epollEventLoopGroup-5-1 org.pytorch.serve.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2023-09-20T19:11:08,206 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:11:08,206 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:11:08,206 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - System state is : WORKER_STARTED
2023-09-20T19:11:08,207 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:11:08,207 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:513) ~[?:?]
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:675) ~[?:?]
	at org.pytorch.serve.wlm.Model.pollBatch(Model.java:276) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.BatchAggregator.getRequest(BatchAggregator.java:34) ~[model-server.jar:?]
	at org.pytorch.serve.wlm.WorkerThread.run(WorkerThread.java:186) [model-server.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:829) [?:?]
2023-09-20T19:11:08,207 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:11:08,207 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_STOPPED
2023-09-20T19:11:08,208 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:11:08,208 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Auto recovery failed again
2023-09-20T19:11:08,208 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:11:08,208 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stderr
2023-09-20T19:11:08,208 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:11:08,208 [WARN ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - terminateIOStreams() threadName=W-9000-test_model_1.0-stdout
2023-09-20T19:11:08,208 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 13 seconds.
2023-09-20T19:11:08,208 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Retry worker: 9000 in 13 seconds.
2023-09-20T19:11:08,214 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:11:08,214 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stdout
2023-09-20T19:11:08,214 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:11:08,214 [INFO ] W-9000-test_model_1.0-stderr org.pytorch.serve.wlm.WorkerLifeCycle - Stopped Scanner - W-9000-test_model_1.0-stderr
2023-09-20T19:12:48,950 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:12:48,950 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:12:48,953 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:12:48,953 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:12:49,015 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:12:49,015 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:12:49,086 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:12:49,086 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:12:49,093 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:12:49,093 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:12:49,115 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:12:49,115 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:12:50,521 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:12:50,521 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:12:50,521 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:12:50,521 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:12:50,521 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:12:50,521 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:12:50,522 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:12:50,522 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:12:50,531 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:12:50,531 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:12:50,531 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:12:50,531 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:12:50,602 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:12:50,602 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:12:50,603 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:12:50,603 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:12:50,604 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:12:50,604 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:12:50,605 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:12:50,605 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:12:50,606 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:12:50,606 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:12:50,862 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:12:50,862 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:12:51,305 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=11018
2023-09-20T19:12:51,306 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:12:51,315 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:12:51,315 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]11018
2023-09-20T19:12:51,316 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:12:51,316 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:12:51,317 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:12:51,317 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:12:51,321 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:12:51,321 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:12:51,332 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:12:51,337 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695237171337
2023-09-20T19:12:51,337 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695237171337
2023-09-20T19:12:51,365 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:12:51,365 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:12:51,379 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:12:51,437 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:12:51,437 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:12:51,437 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:12:51,612 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:12:51,612 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:12:51,612 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/d789c8e38d864e1d9573c7f0690e7289/model.pth
2023-09-20T19:12:51,612 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T19:12:51,996 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - ResNet(
2023-09-20T19:12:51,997 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
2023-09-20T19:12:51,998 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:51,998 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (relu): ReLU(inplace=True)
2023-09-20T19:12:51,999 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
2023-09-20T19:12:51,999 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer1): Sequential(
2023-09-20T19:12:51,999 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T19:12:51,999 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:51,999 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:51,999 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:12:52,000 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,000 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,000 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,000 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,000 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T19:12:52,000 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,000 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,001 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T19:12:52,001 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,001 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T19:12:52,001 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,002 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,002 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:12:52,002 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,002 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,002 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,003 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,003 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,003 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T19:12:52,003 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,003 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,003 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:12:52,004 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,004 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,004 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,004 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,004 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,004 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T19:12:52,005 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer2): Sequential(
2023-09-20T19:12:52,005 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T19:12:52,005 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,005 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:12:52,005 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:12:52,005 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,005 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 626
2023-09-20T19:12:52,005 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 626
2023-09-20T19:12:52,006 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T19:12:52,006 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,006 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:12:52,006 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,006 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:12:52,006 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,006 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,006 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T19:12:52,006 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T19:12:52,007 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,007 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T19:12:52,007 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,007 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T19:12:52,007 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,007 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,007 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:12:52,008 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,008 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,008 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,008 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,008 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,008 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T19:12:52,009 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,009 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,008 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:1479.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695237172
2023-09-20T19:12:52,009 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:12:52,009 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:46.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695237172
2023-09-20T19:12:52,009 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,009 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,009 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,010 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,010 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,010 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (3): Bottleneck(
2023-09-20T19:12:52,010 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,010 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,010 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:12:52,011 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,011 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,011 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,011 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,011 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,011 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T19:12:52,012 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer3): Sequential(
2023-09-20T19:12:52,012 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T19:12:52,012 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,013 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,013 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T19:12:52,013 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,013 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,013 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,014 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,014 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T19:12:52,014 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T19:12:52,014 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,014 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T19:12:52,014 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,015 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T19:12:52,015 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,015 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,015 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:12:52,015 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,015 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,015 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,016 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,016 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,016 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T19:12:52,016 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,016 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,016 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:12:52,016 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,017 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,017 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,017 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,017 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,017 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (3): Bottleneck(
2023-09-20T19:12:52,017 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,017 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,017 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:12:52,018 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,018 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,018 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,018 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,018 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,018 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (4): Bottleneck(
2023-09-20T19:12:52,019 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,019 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,019 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:12:52,019 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,019 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,019 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,019 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,020 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,020 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (5): Bottleneck(
2023-09-20T19:12:52,020 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,020 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,020 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:12:52,020 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,021 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,021 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,021 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,021 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,021 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T19:12:52,021 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer4): Sequential(
2023-09-20T19:12:52,021 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T19:12:52,021 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,022 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,022 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T19:12:52,022 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,022 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,022 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,022 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,022 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T19:12:52,022 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T19:12:52,023 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,023 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T19:12:52,023 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,023 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T19:12:52,023 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,023 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,023 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:12:52,023 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,023 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,024 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,024 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,024 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,024 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T19:12:52,024 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,024 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,024 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:12:52,024 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,025 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:12:52,025 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:12:52,025 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:12:52,025 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:12:52,025 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T19:12:52,025 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
2023-09-20T19:12:52,025 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (fc): Linear(in_features=2048, out_features=1000, bias=True)
2023-09-20T19:12:52,025 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - )
2023-09-20T19:12:52,025 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T19:20:11,417 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:20:11,417 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:20:11,419 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:20:11,419 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:20:11,482 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:20:11,482 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:20:11,553 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:20:11,553 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:20:11,560 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:20:11,560 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:20:11,582 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:20:11,582 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:20:12,998 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:20:12,998 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:20:12,998 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:20:12,998 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:20:12,999 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:20:12,999 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:20:12,999 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:20:12,999 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:20:13,008 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:20:13,009 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:20:13,009 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:20:13,008 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:20:13,093 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:20:13,093 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:20:13,093 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:20:13,093 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:20:13,098 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:20:13,098 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:20:13,099 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:20:13,099 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:20:13,100 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:20:13,100 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:20:13,332 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:20:13,332 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:20:13,791 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=11266
2023-09-20T19:20:13,792 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:20:13,800 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:20:13,801 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]11266
2023-09-20T19:20:13,801 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:20:13,801 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:20:13,802 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:20:13,802 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:20:13,807 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:20:13,807 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:20:13,817 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:20:13,820 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695237613820
2023-09-20T19:20:13,820 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695237613820
2023-09-20T19:20:13,843 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:20:13,843 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:20:13,857 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:20:13,912 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:20:13,913 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:20:13,913 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:20:14,078 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:20:14,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:20:14,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/3e386da50f1d4b6b86cc84d365428cab/model.pth
2023-09-20T19:20:14,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T19:20:14,453 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - ResNet(
2023-09-20T19:20:14,453 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
2023-09-20T19:20:14,454 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,454 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (relu): ReLU(inplace=True)
2023-09-20T19:20:14,454 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
2023-09-20T19:20:14,454 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer1): Sequential(
2023-09-20T19:20:14,454 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T19:20:14,455 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,455 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,455 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:20:14,456 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,456 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,456 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,456 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,457 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T19:20:14,457 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,457 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,458 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T19:20:14,458 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,458 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T19:20:14,458 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,459 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,460 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:20:14,460 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,460 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,460 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,461 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,461 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,461 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T19:20:14,461 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,461 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,462 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:20:14,462 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,462 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,462 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:20:14,462 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,462 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:20:14,462 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 605
2023-09-20T19:20:14,462 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,463 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,463 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T19:20:14,463 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer2): Sequential(
2023-09-20T19:20:14,462 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 605
2023-09-20T19:20:14,463 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T19:20:14,463 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,463 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,464 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T19:20:14,464 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,464 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:20:14,464 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,464 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:20:14,464 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,465 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,465 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T19:20:14,465 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T19:20:14,465 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,465 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T19:20:14,465 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,466 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T19:20:14,466 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,466 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,466 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:20:14,466 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,466 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,467 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,467 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,467 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,467 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T19:20:14,467 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,467 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,467 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:20:14,467 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,468 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,468 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,468 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,468 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,468 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (3): Bottleneck(
2023-09-20T19:20:14,468 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,468 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,469 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:20:14,469 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,469 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,468 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:1460.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695237614
2023-09-20T19:20:14,469 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,470 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,470 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:44.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695237614
2023-09-20T19:20:14,470 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,470 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T19:20:14,470 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer3): Sequential(
2023-09-20T19:20:14,470 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T19:20:14,470 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,470 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,470 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T19:20:14,471 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,471 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,471 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,471 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,471 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T19:20:14,471 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T19:20:14,471 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,472 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T19:20:14,472 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,472 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T19:20:14,472 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,472 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,472 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:20:14,472 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,472 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,473 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,473 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,473 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,473 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T19:20:14,473 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,473 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,473 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:20:14,473 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,474 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,474 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,474 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,474 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,474 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (3): Bottleneck(
2023-09-20T19:20:14,474 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,474 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,475 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:20:14,475 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,475 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,475 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,475 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,475 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,476 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (4): Bottleneck(
2023-09-20T19:20:14,476 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,476 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,476 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:20:14,476 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,476 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,476 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,476 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,477 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,477 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (5): Bottleneck(
2023-09-20T19:20:14,477 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,477 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,477 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:20:14,478 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,478 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,478 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,478 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,478 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,478 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T19:20:14,478 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer4): Sequential(
2023-09-20T19:20:14,478 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T19:20:14,478 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,479 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,479 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T19:20:14,479 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,479 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,479 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,479 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,479 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T19:20:14,479 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T19:20:14,479 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,480 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T19:20:14,480 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,480 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T19:20:14,480 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,480 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,480 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:20:14,480 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,480 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,480 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,481 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,481 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,481 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T19:20:14,481 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,481 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,481 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T19:20:14,481 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,481 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T19:20:14,481 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T19:20:14,482 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T19:20:14,482 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T19:20:14,482 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T19:20:14,482 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
2023-09-20T19:20:14,482 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (fc): Linear(in_features=2048, out_features=1000, bias=True)
2023-09-20T19:20:14,482 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - )
2023-09-20T19:20:14,482 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T19:20:14,482 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model.pth
2023-09-20T19:21:13,822 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:21:13,822 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:22:13,799 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:22:13,799 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:23:13,862 [ERROR] Thread-4 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:23:13,862 [ERROR] Thread-4 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:24:13,827 [ERROR] Thread-5 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:24:13,827 [ERROR] Thread-5 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:25:13,804 [ERROR] Thread-6 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:25:13,804 [ERROR] Thread-6 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:26:13,804 [ERROR] Thread-7 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:26:13,804 [ERROR] Thread-7 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:27:56,625 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:27:56,625 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:27:56,628 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:27:56,628 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:27:56,697 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:27:56,697 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:27:56,773 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:27:56,773 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:27:56,780 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:27:56,780 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:27:56,802 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:27:56,802 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:27:58,196 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:27:58,196 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:27:58,197 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:27:58,197 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:27:58,197 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:27:58,197 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:27:58,197 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:27:58,197 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:27:58,209 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:27:58,210 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:27:58,210 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:27:58,209 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:27:58,287 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:27:58,287 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:27:58,288 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:27:58,288 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:27:58,289 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:27:58,289 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:27:58,290 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:27:58,290 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:27:58,291 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:27:58,291 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:27:58,514 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:27:58,514 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:27:59,027 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=11677
2023-09-20T19:27:59,028 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:27:59,038 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:27:59,039 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]11677
2023-09-20T19:27:59,039 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:27:59,039 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:27:59,040 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:27:59,040 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:27:59,041 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:27:59,041 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:27:59,046 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:27:59,046 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:27:59,053 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:27:59,056 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695238079056
2023-09-20T19:27:59,056 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695238079056
2023-09-20T19:27:59,092 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:27:59,146 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:27:59,147 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:27:59,147 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:27:59,311 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:27:59,311 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:27:59,311 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/a3b41ea19d28430cad5d2f666c76f145/model.pth
2023-09-20T19:27:59,312 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T19:28:01,680 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T19:28:01,686 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:28:01,686 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:28:01,687 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2594
2023-09-20T19:28:01,687 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2594
2023-09-20T19:28:01,687 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:28:01,687 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:28:01,690 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3483.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695238081
2023-09-20T19:28:01,691 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:41.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238081
2023-09-20T19:28:58,984 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:28:58,984 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:29:05,405 [INFO ] pool-2-thread-2 ACCESS_LOG - /127.0.0.1:36536 "GET /ping HTTP/1.1" 200 7
2023-09-20T19:29:05,406 [INFO ] pool-2-thread-2 TS_METRICS - Requests2XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238145
2023-09-20T19:29:58,993 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:29:58,993 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:30:33,842 [INFO ] epollEventLoopGroup-3-2 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695238233
2023-09-20T19:30:33,843 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238233843
2023-09-20T19:30:33,843 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238233843
2023-09-20T19:30:33,845 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695238233
2023-09-20T19:30:33,846 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T19:30:33,846 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:30:33,847 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T19:30:33,847 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T19:30:33,847 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 355, in handle
2023-09-20T19:30:33,847 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     data_preprocess = self.preprocess(data)
2023-09-20T19:30:33,847 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:41820 "POST /predictions/test_model HTTP/1.1" 503 7
2023-09-20T19:30:33,849 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/a3b41ea19d28430cad5d2f666c76f145/handler.py", line 49, in preprocess
2023-09-20T19:30:33,849 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238233
2023-09-20T19:30:33,849 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 228335, Inference time ns: 6180031
2023-09-20T19:30:33,849 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     logger.log(data)
2023-09-20T19:30:33,849 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 228335, Inference time ns: 6180031
2023-09-20T19:30:33,849 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:30:33,849 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:30:33,849 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2
2023-09-20T19:30:33,849 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - TypeError: log() missing 1 required positional argument: 'msg'
2023-09-20T19:30:33,849 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2
2023-09-20T19:30:33,849 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:4.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238233
2023-09-20T19:30:59,050 [ERROR] Thread-4 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:30:59,050 [ERROR] Thread-4 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:31:11,615 [INFO ] epollEventLoopGroup-3-3 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695238271
2023-09-20T19:31:11,617 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238271616
2023-09-20T19:31:11,617 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238271616
2023-09-20T19:31:11,618 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695238271
2023-09-20T19:31:11,618 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T19:31:11,619 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:31:11,619 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:55572 "POST /predictions/test_model HTTP/1.1" 503 4
2023-09-20T19:31:11,619 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T19:31:11,619 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T19:31:11,619 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238271
2023-09-20T19:31:11,619 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 355, in handle
2023-09-20T19:31:11,619 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 94124, Inference time ns: 2703902
2023-09-20T19:31:11,619 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 94124, Inference time ns: 2703902
2023-09-20T19:31:11,619 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     data_preprocess = self.preprocess(data)
2023-09-20T19:31:11,619 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:31:11,619 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:31:11,619 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 1
2023-09-20T19:31:11,619 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/a3b41ea19d28430cad5d2f666c76f145/handler.py", line 49, in preprocess
2023-09-20T19:31:11,619 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 1
2023-09-20T19:31:11,620 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     logger.log(data)
2023-09-20T19:31:11,620 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:3.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238271
2023-09-20T19:31:11,620 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - TypeError: log() missing 1 required positional argument: 'msg'
2023-09-20T19:31:42,428 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:31:42,428 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:31:42,431 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:31:42,431 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:31:42,495 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:31:42,495 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:31:42,568 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:31:42,568 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:31:42,575 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:31:42,575 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:31:42,598 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:31:42,598 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:31:44,037 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:31:44,037 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:31:44,038 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:31:44,038 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:31:44,038 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:31:44,038 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:31:44,038 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:31:44,038 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:31:44,048 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:31:44,048 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:31:44,048 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:31:44,048 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:31:44,119 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:31:44,119 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:31:44,119 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:31:44,119 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:31:44,121 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:31:44,121 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:31:44,121 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:31:44,121 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:31:44,122 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:31:44,122 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:31:44,362 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:31:44,362 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:31:44,814 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=12250
2023-09-20T19:31:44,815 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:31:44,823 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:31:44,823 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]12250
2023-09-20T19:31:44,824 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:31:44,824 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:31:44,825 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:31:44,825 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:31:44,830 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:31:44,830 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:31:44,841 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:31:44,845 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695238304845
2023-09-20T19:31:44,845 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695238304845
2023-09-20T19:31:44,882 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:31:44,940 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:31:44,941 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:31:44,941 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:31:44,944 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:31:44,944 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:31:45,114 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:31:45,115 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:31:45,115 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/c1ff5183fa3a4c4dbe30f46642b0d074/model.pth
2023-09-20T19:31:45,115 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T19:31:47,448 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T19:31:47,455 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:31:47,455 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:31:47,456 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2573
2023-09-20T19:31:47,456 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2573
2023-09-20T19:31:47,456 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:31:47,456 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:31:47,458 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3412.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695238307
2023-09-20T19:31:47,459 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:41.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238307
2023-09-20T19:31:57,322 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695238317
2023-09-20T19:31:57,325 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238317325
2023-09-20T19:31:57,325 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238317325
2023-09-20T19:31:57,327 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695238317
2023-09-20T19:31:57,328 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T19:31:57,328 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:31:57,328 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T19:31:57,328 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T19:31:57,328 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 355, in handle
2023-09-20T19:31:57,329 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     data_preprocess = self.preprocess(data)
2023-09-20T19:31:57,329 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/c1ff5183fa3a4c4dbe30f46642b0d074/handler.py", line 49, in preprocess
2023-09-20T19:31:57,329 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     logger.log(data)
2023-09-20T19:31:57,329 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - TypeError: log() missing 1 required positional argument: 'msg'
2023-09-20T19:31:57,333 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:57320 "POST /predictions/test_model HTTP/1.1" 503 13
2023-09-20T19:31:57,333 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238317
2023-09-20T19:31:57,334 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 193925, Inference time ns: 8778811
2023-09-20T19:31:57,334 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 193925, Inference time ns: 8778811
2023-09-20T19:31:57,334 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:31:57,334 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:31:57,334 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 1
2023-09-20T19:31:57,334 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 1
2023-09-20T19:31:57,334 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:8.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238317
2023-09-20T19:32:24,737 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:32:24,737 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:32:24,740 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:32:24,740 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:32:24,803 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:32:24,803 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:32:24,875 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:32:24,875 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:32:24,882 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:32:24,882 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:32:24,905 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:32:24,905 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:32:26,306 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:32:26,306 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:32:26,306 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:32:26,306 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:32:26,306 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:32:26,306 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:32:26,307 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:32:26,307 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:32:26,316 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:32:26,316 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:32:26,317 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:32:26,317 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:32:26,398 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:32:26,398 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:32:26,399 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:32:26,399 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:32:26,400 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:32:26,400 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:32:26,401 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:32:26,401 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:32:26,402 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:32:26,402 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:32:26,647 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:32:26,647 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:32:27,121 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=12508
2023-09-20T19:32:27,122 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:32:27,131 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:32:27,132 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]12508
2023-09-20T19:32:27,132 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:32:27,133 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:32:27,133 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:32:27,133 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:32:27,138 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:32:27,138 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:32:27,147 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:32:27,149 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695238347149
2023-09-20T19:32:27,149 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695238347149
2023-09-20T19:32:27,184 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:32:27,199 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:32:27,199 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:32:27,244 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:32:27,244 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:32:27,244 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:32:27,423 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:32:27,424 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:32:27,424 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/e9c5c758676043bab8e9de0252b48f17/model.pth
2023-09-20T19:32:27,424 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T19:32:27,845 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695238347
2023-09-20T19:32:29,793 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T19:32:29,795 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:32:29,795 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:32:29,795 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2610
2023-09-20T19:32:29,795 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2610
2023-09-20T19:32:29,795 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:32:29,795 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:32:29,796 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3484.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695238349
2023-09-20T19:32:29,796 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:37.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238349
2023-09-20T19:32:29,797 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238349797
2023-09-20T19:32:29,797 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238349797
2023-09-20T19:32:29,798 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695238349
2023-09-20T19:32:29,883 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:32828 "POST /predictions/test_model HTTP/1.1" 503 2042
2023-09-20T19:32:29,884 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238349
2023-09-20T19:32:29,885 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 1949731522, Inference time ns: 2038063764
2023-09-20T19:32:29,885 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 1949731522, Inference time ns: 2038063764
2023-09-20T19:32:29,886 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:32:29,886 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:32:29,887 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 80
2023-09-20T19:32:29,887 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 80
2023-09-20T19:32:29,888 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:11.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238349
2023-09-20T19:32:29,880 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [{'body': bytearray(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x00\x00\x01\x00\x01\x00\x00\xff\xe2\x02\x1cICC_PROFILE\x00\x01\x01\x00\x00\x02\x0clcms\x02\x10\x00\x00mntrRGB XYZ \x07\xdc\x00\x01\x00\x19\x00\x03\x00)\x009acspAPPL\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf6\xd6\x00\x01\x00\x00\x00\x00\xd3-lcms\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\ndesc\x00\x00\x00\xfc\x00\x00\x00^cprt\x00\x00\x01\\\x00\x00\x00\x0bwtpt\x00\x00\x01h\x00\x00\x00\x14bkpt\x00\x00\x01|\x00\x00\x00\x14rXYZ\x00\x00\x01\x90\x00\x00\x00\x14gXYZ\x00\x00\x01\xa4\x00\x00\x00\x14bXYZ\x00\x00\x01\xb8\x00\x00\x00\x14rTRC\x00\x00\x01\xcc\x00\x00\x00@gTRC\x00\x00\x01\xcc\x00\x00\x00@bTRC\x00\x00\x01\xcc\x00\x00\x00@desc\x00\x00\x00\x00\x00\x00\x00\x03c2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00text\x00\x00\x00\x00FB\x00\x00XYZ \x00\x00\x00\x00\x00\x00\xf6\xd6\x00\x01\x00\x00\x00\x00\xd3-XYZ \x00\x00\x00\x00\x00\x00\x03\x16\x00\x00\x033\x00\x00\x02\xa4XYZ \x00\x00\x00\x00\x00\x00o\xa2\x00\x008\xf5\x00\x00\x03\x90XYZ \x00\x00\x00\x00\x00\x00b\x99\x00\x00\xb7\x85\x00\x00\x18\xdaXYZ \x00\x00\x00\x00\x00\x00$\xa0\x00\x00\x0f\x84\x00\x00\xb6\xcfcurv\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\xcb\x01\xc9\x03c\x05\x92\x08k\x0b\xf6\x10?\x15Q\x1b4!\xf1)\x902\x18;\x92F\x05Qw]\xedkpz\x05\x89\xb1\x9a|\xaci\xbf}\xd3\xc3\xe90\xff\xff\xff\xdb\x00C\x00\x04\x04\x04\x04\x04\x04\x04\x05\x05\x04\x06\x06\x06\x06\x06\t\x08\x07\x07\x08\t\r\n\n\n\n\n\r\x14\r\x0f\r\r\x0f\r\x14\x12\x16\x12\x11\x12\x16\x12 \x19\x17\x17\x19 %\x1f\x1e\x1f%-))-969KKd\xff\xdb\x00C\x01\x04\x04\x04\x04\x04\x04\x04\x05\x05\x04\x06\x06\x06\x06\x06\t\x08\x07\x07\x08\t\r\n\n\n\n\n\r\x14\r\x0f\r\r\x0f\r\x14\x12\x16\x12\x11\x12\x16\x12 \x19\x17\x17\x19 %\x1f\x1e\x1f%-))-969KKd\xff\xc0\x00\x11\x08\x02\xac\x03\xe8\x03\x01"\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1d\x00\x00\x01\x05\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x04\x05\x06\x07\x02\x01\x08\t\xff\xc4\x00G\x10\x00\x02\x01\x03\x03\x02\x05\x01\x05\x07\x03\x03\x03\x02\x03\t\x01\x02\x03\x00\x04\x11\x05\x12!1A\x06\x13"Qaq\x07\x142\x81\x91\x15#BR\xa1\xb1\xc13b\xd1$\xe1\xf0\x16r\xf1C\x82\x17%4Ss\x92\x08\xb2\xc2c\x83\xa2\xff\xc4\x00\x1c\x01\x00\x01\x05\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x03\x04\x05\x06\x01\x07\x08\xff\xc4\x00B\x11\x00\x02\x01\x03\x03\x02\x05\x02\x04\x05\x03\x03\x03\x04\x00\x07\x01\x02\x03\x00\x04\x11\x12!1\x05A\x06\x13"Qaq\x81\x142\x91\xa1#B\xb1\xc1\xd1\x15R\xe1\x07b\xf0$3\xf1\x16Cr\x82\x924DSc\xa2\x83\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xfb\xfa\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xbc\xcd\x14W\xb4W\x99\xaf3E\x15\xd5\x15\xceh\xcd\x14WU\xe6k\x9c\xd1\x9a(\xae\xb3Fk\x9c\xd1\x9a(\xae\xb3Fk\x9c\xd1\x9a(\xae\xb3Fk\x9c\xd1E\x15\xed\x15\xe6k\xcc\xd1Eu\x9a+\x9a(\xa2\xba\xa35\xcd\x14Q]f\xbd\xcds\x9a3E\x15\xd6h\xcds\x9a3E\x15\xd6h\xcdyGJ(\xae\xa8\xaa\xd5\xc7\x8at\xbb{\x83\twr\x0e\x19\x94d\n\x9e\x86x\xae"Ibp\xe8\xc3 \x8am%\x8aB\xe1$V*p\xc0\x10p~iL\x8e\xa1K#\x00\xc3 \x91\x8c\xd2\xf4S\x1dB\xfe\xdfL\xb4\x96\xea\xe1\xca\xc7\x18\xc9\xc0\xc9\xfa\n^\xde\xe2;\x98"\x9e#\x94\x91C)\xf84\xbc\x8c\xe3#<\xe3\xbds\x07\x19\xc1\xc6q\x9a^\x8a\xf34f\xbb\\\xafh\xaf3U\xaf\x12k\xf3h0\xdb\xce\xb6-<l\xf8\x91\x87\xf0}i.\xe9\x1a;\xbb\x05U\x04\xb1=\x80\xa5"<\x8e\xa8\x8b\xa9\x98\xe0\x0fsVj*\x13E\xd7l\xf5\xb8<\xc8r\xac?\x12\x1e\xa2\xa6\xe8GI\x11]\x182\xb0\xc8`r\x08\xa1\x91\x91\x99YJ\xb2\x9c\x10v"\x8a+\x96e@K0\x03\xdc\x9cW1\xcb\x1c\xa3(\xea\xc3\xdc\x1c\xd2\xa94\xa5\x15\xcb2\xa2\x96b\x00\x03$\xfbSK-B\xd3PY\x1a\xdaQ F\xda\xd8\xech\xa2\x9e\xd1E\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14W\x84\xd7\x84\xd7\x99\xa2\x8a\xf6\xbc\xcdy\x9a\xf34Q]f\xbc\xaf3^QEu\x9a\xf35\xe5\x14Q]W\x99\xaf(\xa2\x8a\xf75\xedsE\x14WTW\x94QE{E\x14QE\x14W\x84\x81\xd4\x81\xf5\xa3#\x19\xc8\xc7\xbd\x14W\xb4T]\xc6\xb5\xa6Z\x96\x12]\xa6W\xa8\x078\xfd)\x18\xfcC\xa4Jp\x97A\x8e2@S\xc7\xd6\x90d\x8dX)\x91C\x1e\x01#4\xa0\x8eFB1\x1e\xf88\xa9\xaa*\x03\xff\x00Q\xe9\xf9#l\xd8\x1d\xf6\xf1H\\x\x8b\x11;\xda\xda\x89\xb6\x82H/\x8e\x05u\x1d%\xfc\x92+}\x084\x14u\xc6Q\x86}\xc6*\xcdM\xeen\xed\xed\x13|\xd2\x04\x1d\xbd\xcf\xd0Veq\xe3\xadC/\xe5C\x00\x01I\xc09?Nk:\xd6\xfce\xac\xdd\xb9\x7f\xbb6\xecc\xd4p\x07\xc0\x02\xaa\xba\xa7X\x87\xa6\xc6\xac \x96\xe1\xdb8X\xd4\x91\xb7\xb9\xedV\xf6]\x0e\xf6\xf5\xb1\x85\x8dG%\x88\xfe\x95\xbc\x8f\x12X\x96#k\x85\x07\xf1q\xfd\xab\xdf\xfdK\xa6\x02Ai\x00\xf7\xdb\xc5|\xcde\xae\xeb\x92N\xa6DO/ \xb0\x19\x1c}j\xf05h\xbc\xa5bT9\xe7\x07\xe2\x98\xe9\x9di\xef\xe2w\x96\xdb\xf0\xc5N\xca\xd99\x1e\xf5.\xeb\xc3\xb2\xdb2\x01!\x93W\xfbq\xb5n\x16\xda\xbe\x9btq\x15\xda\x13\x8c\xe0\xf1\xc7\xe7P\x1a\xcf\x89m\xe3\x86xm\xf2\xcd\xb4\x82\xfd\x86}\xab(:\xe4\x11\xab\x9e\x18\x9c\xe3g\xb51_\x15 \x90\xee\xb1vS\xd1\x81\xed\xf9T\xd9z\x85\xb8M>xFm\xb5\x01\x9c})\xa8\xfa\r\xd9b\xdeS2\x8f\xe5\xd8g\xf5\xa7\xc6\xe9\x81b\x11\x89\xeap\t5#\xa6x\x96\xf6\xcd\xbc\xa8\x92\xe9cc\xea\xf4\x12\x07\xd2\xa1\x1b\\\x8f- \xb7(\xc1r\x14\xf0\x0ezsVO\r\xf8\x96\rjg\xb6X^\x19!\x8b|\x8a9\x04\x0e2\x0f|\xd5\x05\x9d\x8d\xad\xb5\xd4\x05:\xac\xca\xec\xf8P\x00\xf5|\x1a\xb3\xbd\x8ee\xb6\x91\x9f\xa6\x87E_Q-\xf9~j^\xf7\xc4\x11j6q\xdb\xdcI\x81\x9fW\x986\xe4\xfeu\xcax\xe5,mm\xac\xed\xad\xcb<+\xb1\xd9\x81\xda}\xb1Nue\x86\xde\xd2i\x9a\x0f>%]\xcd\xe9\x04\x85\xeeqY\xdd\x95\xf4\xba\x84\x9b\xed-\xb7\xdbg\x07\x8c\x04\x04\xe0\x13V\x97\xb7\x0e.Z\x18\xee\xccS4Y\r\xe5g\xd2\x08\xdf\'cU\xf6\x16P\xdc[\x19\x1a\xdc\x98\xd1\xf7\x06L\rDqW\xff\x00\xfdo<\x9c\xbd\xccp\x83\xec\x05y/\x8c<\xb5g\x1a\x93:\x8cr\xb8\xceOl\n\x81}"\xc6H\xc9\x8d\xa3g\x1dK\xa1\xdb\xf9w\x15\x17(\xba\xd3F[L\x87gE|\xe5O\xd0\x8a\x8foyr\xe1\x82\xf5h&\xc7,\x88\t\x1fe8\xa7\x87N\xb1\x90\x8d6\xf2)\xcf\xe5f\xd3\x9f\xff\x00\x8a\xaf\x9ag\x8e\xe2i\x929\xc4\x92\xa3\x0f\xc5\xb7\x05O\xd6\xa6\xef\xbcS\xa5\xc9o$F#\'\x98\xa4m|\x00k+\x8fP\xbc\x93f\xdbX\x15s\xc9\xddO\xdde\x9d\x14\xbcq\x1e\xfb\x82\x92\x7f\xa5[A;\xf9xg\xf3[\xfd\xc5t\xff\x00J\x8d7L\x89d\\)\x8cwP\xe1\x8ejCE\x8bQ\xb4\xba\xf3\xad\x86\xc4,J\x03\x9c`\xf6\xcd^\xa4\xd5\xb5\x17\x88\xaf\xee\x91\x8f\x1b\x97\x92>\x95\x8e\x1f\x10kv\xceR[\x18\xe5E\xe1J\xb1\x1c\x0f\x83S\xba]\xfe\xa5\xac\xa9h\xacc\x81\x01\xdad\x91\xf1\xc8\xec\x00\xe4\xd4\x1b+\xdbkt6\xf1Y\xdc\xae\x18\xe1H\xcf\'\xb1\xec)W\xfd2\xed\xdb\xf1\x12In\x14\x01\x96\x0c?\x7fsR\xfa\x9e\xa15\x81\x92I\xe47\t#\x05Ug\xe4\x13\xed\\\xc3w"\x05x\xa7d\xcf\xb3TU\xf6\x97q\x935\xcd\xd5\xbc\xf1C\x96(3\xc1\xf7\xe6\x99\xa5\xd5\x8ck\x8f%\x8fp#Rj\\2JY\x9aFh\xc1\'B3\x02F\xfe\xe3?\xd6\x99\xfc\x1c2D\xbeX\xf3\x1b\xf9\xd9A\xc7\xd3\x07\x15v\x93\xc4\x93\xdcZKbU\x9eF\x1b|\xccc\x8f\x9a_\xc37V\xbah\xb9\x8eK\x85o5\x83\r\xbd\x88\xebT\xdbX\xde\xf1$kV\x95s\x80Y\xc6\x00\xf8\xe6\x97]3S\x8e\x19U\x1a9\t\xe7\x8cd})\x0f%\xd0\xb9\x8eE\xb6i\xd0#a\xd4\x81\x8c\xf6\xc6FO\xcd \xdb[\x88\xa4\x8b\xf1+\x13\x16\x19V\xe7#\xfaV\xa8\xba\xf6\x9a\xd2<fVB\xab\xb8\xeeR8\xa6\xa3\xc5\x1aq|l\x9bnq\xbfo\x15\x8d\xc9}{b\x88\xdfz[\x90\xde\x97Bq\xb4{\x0c\xd2\x1a|\xb2]\xa1\x91\x83\x062\x16\'q\xeb\xed\xf4\xaa>\xb1\xe2\x83\xd2\xe5\xb4G\xb6#\xce\x04\xee5n\x06q\x95&\xa7\xdbx{\xce\x8eY\x1a}\x97`Gs\xf7\x02\xbe\x80:\xa5\x82\xaa\xb1\xba@\x18d{\xd4,\xbe-\xd3 \xb9\x11J$Dn\x16R=$\xfbU\x0e\x1b\x89\x18\xc6\x92\xb6W\xa6{\x8a\x90\x10%\xc2\x10\x80Hs\x9d\xa4`\xf1\xedWV=Q:\x9a\x06\xb6\x01w\x19\xd7\xcf\xcf\xa7"\xaa\'\xb1\xfc#\xe2bH\xecWa\xfa\xd6\xa4\xb2\xc6\xe1Hq\x86\x19\x1c\xf65\xd6\xe5\xf7\x1f\xadd>]\xc5\xc3\x87{\xa9c*6\x85\xcf#\x14\xfa\xde\x19\x93yy\x1a_a\x92*\xc4JL\xcc\x850\xa0\xec\xda\x81\xcf\xda\xa34\x1aP7\x98\t\xc6\xeb\x83\xfdkQ\xcdx\xcc\xaa2\xcc\x00\xf7\'\x15\x9b[\xeb\x17\x16;\xd44\x90\xa9<\xef\x1b\xd7\xf25\xc5\xe6\xb4\xda\x90X\xa5eq\x13\x1c\xb2d\x0c\xfc\xe2\x83<\x1d\xa6Bs\x8c\x13\x83\x9aH\x82c\xccM\x8cg db\xb4\xdc\xe7\xbd{YP\xd5\xae"\xb70\xc5z\xe8\xb8\xf4\x10s\x8f\x8ek\x8d\x1f\xc6\x02\xc0\xcc\xb7\xb3\xc9:\x9eT\x9e\xa0\xd2\x1e\xee\xdd\x1e52\x0c8>\xbc\x8d \x8e\xc4\xd3\x89ip\xe8\xec#\'I\x19\\\x1dG=\xc5k\x14UF\x0f\x17\xd9\\`\xc7o+\x0fqS\xf6\xba\x85\xad\xe0\xccRs\xfc\xac0\x7f\xad>\xa48\xd4\xa40\xf7\x075\x1d\x95\x90\xe1\x94\xa9\xf6#\x14\xfe\x8a\xe6\x8a\xedr\xba\xa2\xb9\xcd{\x9a(\xafh\xaf3Fh\xa2\xbd\xa2\xbc\xcd{E\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QEy\x9a\rsE\x14\x13\\\x93A5\xe5\x14QE\x14QE\x14QE\x14QE\x14QE\x14Q^\xe2\x8a+\xca\xf6\x99\xdcj6v\xb9\xf3gPG\xf0\xe7&\xaa:\xc7\x8c\xbfg\xc7\xe6\xa5\xa9\x10\x82\x01\x90\x8d\xdd~\x17\xa5&GX\x90\xbb\x9c(\xe4\xe0\x9f\xe9J\x8d\x1aWTA\xa9\x89\xc0\x02\xafu\xcb\xbaF\xa5\x9d\xc2\xa8\xeeN+=\x8b\xc7h\xf0\xb3}\xcc\xb1\x18\xc1\x19\x00\xe7\xe3\xadW\xf5\x8dn\xea\xfc,\xb39\x865\xe8\xa0\x1csIiUP\xb2\xfa\xb6\xe0\x1c\x7fZ\x90\x96s\xbc\x81\n\x14\xc9\xc6O\xfcV\x99q\xaf\xe96\xdf\xea]\xaf\xe5\xcdW\xb5\x0f\x18[\x98\xd9m\x0b\x06\xee\xc4s\xf9\n\xc8.5}0\x96cu\x97\x07\x08\x8c\xd9c\xf9\nm\x16\xb5\xc1X\xedq\xbf\xaa\xee\x03?\x9fZ\xa9n\xa6\xc2B\x1aHQ{\x05\xcb\xb7\xdf\x81W\x91x}\x99\x03\x15\x95\x88\xe78AW\xb7\xbf\xbd\xb9,^b\xbf\xeec\x92iO\xbd\x01\x0e\xc9._\xe7\xd7\xb4Vq{}w<h\xbex\x87\xd4pT\xfa\xbf:\x8a\xdb\x1a\x9c\xcf\xe7\xdcg\x07,\xe4\x0e~*\x9e\xeb\xa9\xf5\x18\xee\x19`t\xf2J\x8c\xbc\xa4\x96\xcf}\x85Z\xc3\xe1\xe8^5.\x02\xb0;*\x0f\xefZ5\xc6\xab\xa6\xdb+\x07\x96\x17\xe3\xfd$\x1b\x89\xaa\xee\x99\xa8^i\xb7s\xdc\xce\xed\xf7Y\xc1P\x85rQs\x91\x9c{T\x1cr\x95|A\x04q\x0e\xaaO^+\x9b\x89e\x95\x1c\xbc\xb8$rs\x85\xe6\xa0I/\x99\xa6Y_\\\x91\xe7\xcbe\x1aB\x93\xecNO\xf6\xabHzTq\xab\xc6\x07\xa6Lk\xd5\xb9\xc7\xc68\xad\x10x\xafGXY\xcd\xcc\x7f\xaf5^\xd4<gl\xd6\xcd\x15\x89vyX\x868\xc2\xa8\xe9\x9a\xcfd\xb4\x85\x1c\xe6B\xe7\xfd\xbd)\xdc0\x1e\x89\x08\xe3\xa9b?Z\xad\xfcoW\x90\x84\x92\xe5B\x81\x83\xe5\xa6\x1b\xf5\xedR\xa3\xe8}:&\xd7\xa1\x9b|\xe1\x8e\xd5b\x82K\xcb\x94X\xe1\x88;\xe0\x1fB\x92\xdf\xa0\xa9\xa8<1\xadL\xa1\xde\x14L\x8eL\xc4)?\x97Z\x88\xd3<J\xfa$7K$"Gy\x03\x02\x8d\xc6\xdccm9\x7f\xb4\t\x9b\xf0\xe9\xa8\xbfRI\xa9\x8f\xd6\xba|Y[\x8f\xc43\xae\xd8\x00\x81\xfa\x80sL\xcbk\xd4\xf5\xb0\xb5\xb7\x85S?\x9d\x8eI\xfd\xc5K\xc7\xe0\xbb\xc2$f\xbc\xb6P\x17\x80\xbb\x9b\xf5\xe2\xa9\xc6\xe5c\x91\xd1\x9d\x9c\x8e0\xa7\x03#\xads{\xe3Mr\xed|\xa4\xc4(A\xe1x\'\xf3=*,\x04\x08\xbe\xb5By=s\x9f\x9ao\xfdZ+\x82\xbf\x87\xb6h\x94r\xcewl\xfc\x1a\x95kgx\x81\xcd\xe4\xc8\xe4\xe3J\xa0\xc61\xf2*b;\xa0\x99"\xddq\x8e\x83\xfb\x12k\xc1v\xce\x1b$FO\x07\x1cc\xf3\xa8f\x92W\x00\x82\x1b=\xfdC\x15\xc1y\xb6\x90ww#h\xe3\x8aS_8\xdb;|\x7f\xc5K\x16\xc9\xce7\xf9\xa9\x99n\x1d\x81B\xe0\x91\x8cg\xbd)\xa2j\xdf\xb0\xf5\xc8\xeed%\xa0h\xccr\x10?\n\xb7\x7f\xc8\xd4\x10{\x82\xc0\xe3 c\xeb\\\xca\xd3\xc8v\xb3\x1e\xb9\xed\xfaTw\xea\x12\xa0-\x1b\x1djABG\x06\xb9%\x94R\xa3\xc6\xe0hu!\x86}\xebW\xd4<y\xa6\xd9\xda\xb2\xc58\x9eR\x1bj\x8ez\x8f\xed\xf5\xaa7\x86\xbcO\xfb:Y\xa0\x8e\xd6{\x85\x94\x87h\xa1\x8c\xc8\xfe\x9e\xe0\x01\xd3\x9a\x95\xf0\x87\x86,\xf5\x84\x9e\xea\xe9\xc0\x86)\x04a\x17\x01\x9d\xb1\x93\x93\xd8\n\xd5\xb4\xbf\x0e\xe9Z8\xb86\x16\xe6#0P\xe7ybB\xf4\xebW\x1d2\xdf\xac\xdf\xdb\xc3%\xd5\xd2.\xc4#\x0f\xcc\xab\xc6\xc3\xe7\x1d\xcdd\xef\xa7\xe8\xfd/\xf16\xd1@\xf2;\x15\xf3\x07\nH\xdfs\xf1\x9e\xd4\xdaK\xfbk\xcb\x14\x96;9\xa3r\xb9\xda\xf1\x98\xd8|\x10\x7f\xcdQd\xbd\xd5\xb5xg\xb0\x9bH\xbb\xb7\x18m\xb28\x1bp\x0f\x04\x10O5e\xd6u\xc6\xd2/\x92\xcd\xb4\xc7\x99\xe4]\xd1\x14\xe7x\xfas\xd3\xbdEO\xe2\x1f\x12yN\xf1\xf8re\x88\xa9\xfa\x8f\xa8\x02\xa1\xdf\x8b9/\x96Y\xae.L\xd6\xe7L\xa9\x04\x04k\xc1\xce\x1b\x03\x15\xcb\x08\xae#\x85Z+xtHu\xc4\xf2\xcc6\xcf\xb5Q\xdfI\xbf]\xab\x0c\xc4\x81\xdf~\x7f\xaei\xc5\xa6\x93\xe2\x19\x19\x96\t\xe4-\x8e\x8a\xc4\xd4|\xf7N\xee\xee\xca\xe0\xc8\xd9!zd\xf5\xc5[<)\xe2\x1bk\x11,wM\xe5\x9f3#\xcd\xe3x\xc6:\xfc{W\x05\xfd\x92\x84\x92a,q\xe4\x06*\xff\x00\x94\x1e\xe6\xaf\xeeV\xf28\x1c\xc6\x91\xcb \x1b)Ni\xcc~\x18\xf1lcs\x18\xdc\x90=%\xd4\x9f\xefP\xf7I\xaf\xe9\x13\x96\xcc\xb6\xa0\x8c0u%I\xeeFx\xad!\xbc]\xa3\x84bg\x8b\xeb\xbf\x8f\xe9U=c\xc6v\x97v\xf3\xda[Fd\x12\xa9F\xc8\xda\x80\x1e\xfc\xf7\xa9\xb7w\xde\x1d\x9a\xddQz\x91|\x90Tj\xd4u\x03\xb7\xb1\xe6\xa9l\xdf\xad\xc9>&\xe9q\x14;1\xd3\xa7\x03\xf7\x15^\xfb\xde\xa3s\xb4\xcf\xa99\x0b\xce\xd0\x00\x19\xf9\xc5h\x9a\x1d\x8d\xfc\x16?\xbc\t\x1b\xb3n\x0f\xbb\x0c\xc8G\x19\x1d\x80\xf6\xac\x82H\xb6)*\xc503\x9d\xc7\xad]\xf4\xaf\x1f%\xbd\xbaE\xa8\xdb\x97\x91\x14/\x98\xbc\x86\xc7\xc5r\xc7\xa8\xd8Z\xb1\x8e\xe6I!V\x1b:\x92w\xf9;\x9a\x93\xd5\xfau\xe4\xd0\'\xe0\xe0\x8eL7\xa90\x01\xfb\r\xaa\xed%\xf7\xdd%\x11\\\xcd\x118\xdd\xb6N\x0e=\xc1\x15_\xd4\x9b\xc4\xb72Ll\xb4\xc6\x16\xe0\r\x93\x81\x82A\x1dB\xf0N*\x99\xe2o\x11\xc1\xad]\xe9\x93\xdb@Q,$\xf3\x1862\xfc\x82F=\xb8\xad\r\xfc_\xa4y\tr\xd7\x89\x83\xd5T\x92\xe0\x91\xed\xefN\x1e\xa3cs-\xcc\x17\x1d]\x92\xd8\x10\xd0\x9c\x94w\x1d\xf2O \x1e\xd5W\xfe\x9dye\x1d\xac\xc9\xd2\xd6I\xa4\x04H\x84jT \xed\x80\xbd\xc8\xaa\x0c\xf6\x868Lm}\xb2@\x0e\xf1*\x9c\xee\xf6\xc7\x14\xd7M\xf1,6\nm\xee\x99Y\x91\xb0\xb2F2\xa4\x7f\x8aW\xc4Z\xcc:\xed\xd7\x9b\x13\x90\x91\xc7\xb3\x91\x82\xfc\xe7\'?\xa5T%\xb4\xb7v%\\\x92\x0f \n\xa7\xeb\x13-\xd7\x96\x96\xe66H\xdb(\xe7\x92\x07\xc6kOejZ\x00nQ\x91\xdce\xa3\xff\x00i\xfa\xe2\xb5\x0b\rZ\xdfY\x92[k{\x80\x92\x18\xcbd\x8e\x83\xa6@=M[c\x82(bQ\xe7\xcb\x91\xd1\x98\x0e\xbe\xfcb\xb0\x88\xa2X\x8a\xbaL\xc8\xe3\x95*y\x15.|A\xae\xc5\x19X\xef\x04\xaa?\x99s\xcd*\xca\xf5,\xe1o;\xa7\x19\xe4\xc6\xce\x8f\x8f\xdbj\x83}\xd1f\x9eE\xfc=\xd0\x8d;\xab.\x7fz\xb3j\xfa\xde\xb5\xa2_\x16\x9e\x04x%c\xb2Db\xdb\xb1\xef\x9e\x87\xe2\x9d\xdbx\xf2\xc9\xd7\x12,\x88\xe0v\x19\xfe\xd5G\xb9\xd5u\r]c\xfb\xf1\x1e\x8eT\x81\x80>\xb4\xd0F\x15\xb2\x18\x1cg<v\xa4G=\xcf\x98\xd3\xdb\xdd\\F\xaes\xe5\xc8C\x11\xfa\xd4\x81\xd2-\x9e\x18\xd2\xe2\x08\xcc\x8a0Z=\x81\xadN_\x17i\x97\xb6\xed\x08\xcb\xbc\x9e\x9c\x05<\x93\xefIX\xdcX\xdaN\x12\xe1\xb6,\xc8<\xb4,\xc1ww9\xe3\xadPlc\x96\xe2H\x85\xbc\x06Y\x1b8\t\xcb~\x82\xa4/\xbc\xd5\x90Ayn\xf1\xb8_\xc1  \xe3\xe3=\xbe\x95u\x15\xc4\xef\x13\xcb4\x8b$\x83HGt\xc2\x8co\x8d\xb9\xcdA~\x95k\x1by\x11\x16E`K(oW\xd4\n\xd4\x0cz|\xc9\xb4e3\xd1\xd4\xee\x00\xfeu\x19qek rB\xb6\x0f\xf0\xf0Mf\xd1\x02\x88\x04w\x12\x85\xdc\x0e\xc8\xdc\xed\xe2\xac)\xac\xaa\xc4\x91\xaeA^\x06\xf1\xbb\x8f\x93\xef\x9a\x9fc\xd4\xa4&As\x0c\n\xb8\x1aJ\x93\xbf\xd4`\x01Pf\xe8\xb2DT\xc3q#\x1c\xf0{\x7fz\xd0m\r\xa5\xad\x8c~T\x83/\xcb\x10r\xd9\xf6\xfc\xa9#\x7f,\x0e\xe29K\xe4\x0e\x87\xa75\x95\\\xc4\xdecKkx\xf1\xbb\xf2\xea\xa7\x0b\x9fl\x1a\xb9\xf8j\xd3\xefv\xb2M5\xef\x9b6\xf2\xad\x802\x98\xed\xc5=k\xd4.\xe4\xba\xfc0\xb7\x8a\x18U}\x12$\x9c\xfc`\xd4\x0b\xce\x8f\x05\xbc-u%\xc3HKn\xac\x8795p\xb2\xf1U\xd5\xbc\xcc$C"\x81\xc8-\xc5L7\x8d-\x8a\x15[r\xb2\x9f\xc2\x18\xf1U\x1b\x9d6d]\xd0\xcb\xb8\x0e\xaaG\xf85\x07\xf7\xa8\xa4%A\x8c\xb0\xc8\xda}9\xe7\xaf5r&1ad:\x8ev-\x8d\xff\x00J\xad[\x18n\x01h\x81\x00\r\xc2\x93\xb7\xd75|\xff\x00\xd62\xc5"\x89%\x80\xf7+\x8c\x10*\xf3c\x7fm\xa8\xdb\xa4\xd0J\xae\x08\xe4\x03\xc8>\xc6\xb0\xb9a\xb5\xb8\x01A\x19n0p\x08\xa5,^M(\x10\x92I\x1fr\xeaN\xda\xea\xcc\xc6B\x18F#\xc6\xcc9\x1fZnN\x9c\xa2<\xc6\xef\xe6\x7f\xb1\x86\xc7\xe9[\xd9 u5\xeeA\xac[\xf6\x96\xa9zx\xbfFU\xe8\x19\x8dI\xe9\xb7\xf7\x96w\x11\xcb2\xbf\xa4\xf2\x15\x89V\x15\xd8\xa7\x8af*\x9a\x88\xdf\x0f\x8c\xa1\xfb\x82j\x0c\xb6\xf2\xc22\xdar9\\\xfa\x87\xd8\xd6\xadED\xda\xebV\x17J\x08\x98!\xee\xad\xc1\x15&\xb2#\x80U\xd5\x81\xf69\xa7\x8a\xb0\xe4\x1a`\x10{\xd7u\xeek\x9c\xd1\x9a\xe5v\xba\xcd\x19\xaes^\xe6\x8a+\xaa+\x9a\xf74Q^\xd1^f\xbd\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(4W9\xa2\x8a\xf0\x9a\xe4\xd7\xb5\xc9\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x99^\xeaV:|e\xee\xae\xa3\x8cc\xa1<\x9f\xa0\xa2\x8e\xe0{\xd3\xdaNY\xa1\xb7M\xf2\xca\xb1\xa8\xee\xc7\x02\xb3\xadW\xc7\xf1\xc6\x8f\xf7\x18F\x07\x06Y;}\x16\xb2\xddW\xc4\xb7\x97\xb2\xb6\xfb\xa7\xb8\x91\xdb\xd2\xb9\xe0|\x00:TY\xaf-\xe0\xfc\xcf\x93\xec\xb5ii\xd1\xefn\xf7\t\xe5\xaf\xfb\x9b\xfcV\xe57\x8ct\x98\xee\x92\xde"\xf3\xb3\x1ce:g\xf3\xa8]S\xc5W\xf6\xf724*\xab\x0chI\x04\x03\xce;\xd6K\xe1\xd1\x7f>\xb3\x14\xaer\xc06\xc8\xc0\xe9\xdb-\xed\x8a\xd1n\xf4\xbbk\x88d\x8em\xef\xbb\xf1mm\xa3\x9f\x9a\xae\x9e\xfa\xeax\x98[\'\x92\xca\xc0\xeb~1\xfa\x1c\xfc\xd4\xb9:m\xad\x95\xc4k4\x86PSu\x1c\xe7\xf6\xaaM\xa7\x885]v\xf9\xa2K\x16\x12\x01\xbaF8\xd8\x83\xf9\x89\xab\xbd\xb6\x95\x04\x90\xb2\xccZm\xdc7$\x03\xfaVM=\xf5\xc6\x83\xaa\xea)\xa7^#Y\xe0+F\xc7sn\xc7M\xdd\xf0k\xdd/\xc6\x9a\x9d\x9d\xd4\x86H\x96He\x04\x85\xdf\x86\r\xefY\xaf\xf5\x8b;\x0b\xcdW\x06{\x97rIr\xda\xd17\xfeQW\xb2\xf4[\xab\x98\x81\xb3T\x820\xaaU@\xd2\xc7\xbe\xe7\xb5m\x90\xd8\xda\xd9F\x00D\x89@\xe0\x0e\xb5\x13\xaa\xdfi\xcf\x04\x91L\x03!\x18+\xd7\x8f\x9a\xc9\xf5_\x19j\xb7\xa5\x92\x1c@\x0fpr\xd5M\x9a{\xe5\x00\xcbu<\xcb\xe6\x06d\xdf\x8c\xf7#=y\xa8\xbdO\xc5sO\x0c\xd0\xd9\xc1\xe5\xa3)_2M\xce\xfd\xc0\x14\xe5\x97\x85\xa4GI\xae&\xcc\x80\x82\x00\xff\x005\xb4\xfd\xc2\xc7T\xb31G\x0cK\x11>\x99\x165\x0f\x9fpqP\x1a\xd6\x83w\xa4\xdbIu\x11\xf3\xedc\x03y\x03\x0c\xa0\xf1\x96_\xafqW=?\xc4~\x19[t\x9dg\x8a(|\xa0V<\xe0\x8c\x0f\xc3\x83\xedU\xdf\x17\xf8\xc7F\xbb\xb1{[\x07\x91\xcc\xe9\xb6BA\xda\x14\xf5\xfc\xeaL\'\xa7\xda\xf4\xb6\x12\xf5h\xae.\x04^\x92\xad\x96$l0\t\xe3\xe2\xb9l\xfdY\xaf\xe3H\xeceH\x0c\x9e\xbdk\xb0\x1d\xc9>\xf5\x9d\xa5\xcc\xa4\x92\x9b\x11O8\xf7\xae\x05\xdc\xa2B\xc1\x98\xb0\x19\xeb\x8e\xb5\'\xa1\xe8\xd7z\xec\xc1-b]\xa0z\xa5l\x85A\xf3\xf3\xf1Z}\x87\xd9\xee\x8d\x00\x06\xe5\xe4\xbb\x93\xa9/\xe9_\xd1q\xc5B\xb4\xb2\xeaW\xea\xaf\x11\xc4y\xc0f:F~=\xea\xfa\xfb\xaa\xf4\xde\x9c\xc5&|\xc9\x8f\xc8\x83Q\xc7\xcf\xb5co4\xce\xe5\xdeB\x0f@>+\xb4\xdcy\x1b\x8f\xd4\xf4\x1f\x9di^4\xd04m?MY-\xad\xe1\x86\xe4:\xecX\xc9\xf5\xa9\xe0\xf0z\xe3\xaek7DfU\xc4\x80\xb6=X\xe7\x1f\x95V\xdf\xa4\xd67O\x04\x85]\x80\x04\x90\xde\xfd\x8e{\xd4\xde\x9fy\x0fP\xb6Y\xe2FE$\x80\x18c\x8f\xa7jJq\xed\xb4{\x9c\xe7\x9a\xf6$,\xc8\xa6q\x97`\xb8\xe82x\xeb]2yCia\xd78\x199\xfdk\x99-\xb7.\xeeG\x02\xa2\xa4\xcaH\xce\x0e\xfb\xe0\x9d\xaaa\x07\x1bV\xb5\x0f\xd9\xd5\x90EK\x8dJS(\x19o-\x17nH\xed\x9e\xd5\x07\xafx\x01\xf4\xbb9o\xad\xae\xcc\xe9\x12\xe6Du\xd8\xc1{\xb2\x91\x90q\xedIi^;\xd4\xac-\xe3\x82\xe2\x08\xee\x0c(\x14I\xb8\xa9*\xa3\x039\xefH\xeb^>\xd4\xf5;v\xb6H\x12\x18\x9d\nH\xa0\xee$\x1e\xdc\xd5\xf4\xfdc\xc2\xadk"\xf9\x0e\xb3i!\x15U\x8b\x06\xfa\xe7\x06\xb2\xb0Zx\xa9/#-r\x8f\x0e\xbc\xb9m:J\xfc\x002*\x9e\x96\xe1\xf9g\xf9\x00\x0c\xd7la\x18\xca\xf4=\xc1\xc9\xfc\xa9\xa2N}F4\xc7\xb1\xceEzdy0\x1bp\xdc\x7f>?\xc5f\xbf\xd4a\x19\x08\xd99\xf6\xadg\x94\xc4\xefN\x95\xc1\xc1\x0c\xc8Gq\xdb\xf4\xa9\xaf\x0eY[j\xda\xb46\xae\xac\xc8\xaa\xce\xe0d\r\x8b\xf3\xf2j\t<\xc1\x0b\x1d\x8eT\x103\x8f~\x99\xa9\x7f\x0bA\xac\x1dn\x1b\xbd.&\x95\xa2FY\xd0\x90\xa8c~\xa0\xb1\xe0s\xd2\xa4X^\x89\xafm\xa2h\x9d\xf2\xe3(\xa0\x96#;\xe0w\xa8\xb7\xea\xd1\xd9\xdd:J\x91\xb0\x8c\xe1\xd9\xb0\x01\xc6\xd9=\xab[\xbc\xf0\x96\x95}\x08H\xe1\x16\xb2(\xf4\xc8\x80\x0f\xc9\x87qX\xee\xab\xa6\xcda}qes\xb4\xb4o\x8fO \x8e\xa1\x81\xf65\xf45\xbc\xd3\xac+\xe6E\x12\xc8G+\xbbw\xf5\x15\x8f\xf8\xb7J\xd5\xe5\xbe\xba\xd4$\xb7\x02\x00\xaa\xa1\xe3`\xca\xa0p7t95\xb2\xf1\x05\xa4"\xd2\x19\xad\xad%\x12)\xf5\x90\xa4\x00\x98\xfeo\xa5c\xbc7\x7fpn\xe5\x82\xe6\xee6\x8c\x8f@f\x04\xeb\xcf\xf2\x9e\xf9\xaa\xbe\x9d{s\xa24\xcfi \xd9+\x02\xf1\xbf+\x91\xdcc\xa1\xabBx\xe7P\x85rmP\xfb\xe1\x98\x7fqT\x8d\x81zO\xbd\xf3\xc8\xc7\x14\x8f\x93\x14\x84\t\x19\x8f\'\x80\x7f\xe6\xbc\xfd\xaf/#v0^2g\xb0j\xd9K\xd3\xec\xee\x0e\xa9m\xd5\xcfrF\xf5\xadxo\xc4\xf0\xebR\xdd}\xf0\xa4\x17H\xd8\x8d\t\xeb\x16;\x13\xd7\x9e\xb5ul\xa23\xa8\xc0\x03\xa8\xaf\x9b\x9d\x15\x18\xfa\x9b*F*b?\x11\xea\xcd\x0bD/\xa4\xda\xb1\xec\xed\x9c}~\x95eg\xe2\x99\xedb\x10\xcdne;\xe2P\xfe\xa2I\xce[5Ky\xe1\x94\x9a_2\tB&\xd9\x8c\x8d\x80\x1e\xd8\xa7\xda\xdd\xdc2\xeb7\xf2B\xe9\xb0\xb8\x00\xafB@\x00\x91\x8f\x9a\x81\x9eY\x9c\x05\xc9\t\xca\xf5\x1c\xd7k,j\x02\xaa\x83\x85\x1d\x8d3\x96}\xa5\x9c\xc6B\x91\x9c\xd4Y\'\x17\xb1\xb7\x9aS\\\x84\x96\x0b\xeew\xab\xf8`\x10""\xe7\x08\xa1A<\xec1K\x00\xe16\xe4\xe0rF\xeaR5\xd8\xeaXc\xfe+d\xd1<9\xa1\xfe\xcb\xd3\xeea\xb5K\xb6\xb8\x85di\xa4\xf5\xf2G \x0e\x80\x03V5\xd2\xad\x15}V6\xca>cO\xed\x8a\xbd\xb2\xf0\xb9@\x8e]I*\xac\n\xa9a\x823\xce\xd5\x9d\xb8\xf1=\xba;\xa2\xc0\xe7\x0cT\xea!NA\xc7\x1b\xd6\x04\xd2\xab\x12\n\xb7\xd7\xff\x001H\x95\x1c\x80\xb9<\xd6\x95\xe2\xf8\xb4H\xac\xa5X\xe3\x85/\x17\x065@\x15\x89\xcfL\x0e\xd5\x98\x84\x97\x02G]\xb9\x19\xc6~j5\xdb\xa4\x13\x98C$\xbay+\xc0>\xc7\xe6\xad\xecg\xfc\\\x02o)\xe2\xc9\xc6\x1b\xbf\xc8\xf8\xae\xd4\xa0\n\xac\xa0g\xafs\\\xfd\xda\x0c\xeeV\x19\xe9\xd0\xf5\xf6\xae\xd4\x11\xb1\xf1\xb8+)d\xeeFy\x00\xd6\x9f\xa2\xf8\x8f\xc3p\x04E\x89-H\xfeh\xc0$\xfdpi\xb8d\xb2\x9ae\x8a\xea\xea8\x03`\xa9q\x91\xfd\x85r\xfak\x8bX\xf5\xc1i$\xe7|\x858\xfdy\xac\xc7\xcah\xc0\xc2`\x1e@ \xff\x00\x9a\xe5bWB\x1b\x82NH\x03\x1f\xd0\xd6\xf3s\xac\xe8\x976\xb2\xb3\xea\x16\xd2&\xdc\xb2\xbe\xd6\x1f\xd6\xb0k\x97cu+A&\xd8\x8b\xbe\xc59\xe1s\xc7_\x8a\x9f|\xb6vm\n\xc3}\x1c\xe2@O\xa7\x1b\x0f\x9c\x13Qze\xed\xc5\xf8\x9b\xcd\xb2{s\x19\x1f\x98\x92\x0f\xea\x05u\x1d\xb0S\xd4\xf5\xebRV\x16F\xee\xfa\xd6\xc8\x05V\x9aP\x81\x8f\x18\xcf9"\xa2\xd6\xe9\xd0\xb0\xc9 \x8e\xbdq]Iv\xeaa\x92)1,l\x1d\x1c\x0c\x10G|\xd4U\xb9\x81\x00c\xea\x0b\xb9Q\xc9\x1e\xd5c$R\xba\xb8V\n\xc4\x1d,w\x00\xf65\xaf\xc5\xe0\x9d"$\x0b%\xd5\xd3\xbf\xf3\r\xaa3\xf00j\xaf\xe2_\x0f[iP\xc3<\x17M*\xbc\x9b\x1a7P\x08\xe3=GQQP}\xa0j\xf1\xaa@\xe26 \x11\xea^O\xf5\xa67\x1a\xe5\xe6\xa8\xdf\xf5/\xb7\x07\xd2\xaa03\xef\xcf9\xab\x0b\x9e\xb7\xd2\xa7\xb7\x11[\xd8:H\xc0z\xc8\xc6\x8f\xdfz\xa1\xb2\xe9\xbdr+\xa1%\xcd\xf0x\x819]\x8e\xa1\xfamS\xbe\x0f\xbb\xb2\xb1\xd4n\x12V\x11\xcf,aa\x90\x8c\r\xb9\xe5G\xcdjWvq\xdf[\x11{m\x15\xd4J?\x8b\x1b\x80?\xca\xc3\x91_=\xcd+9\x07q\'\xb7\x1c\xe6\x9f\xae\xb7\xac\xc3\x0f\x96\x97\xb3*\xed \xf3\xdb\xe34\xc5\x9f\x88$\xb3\xf3 \x92\x034y:4\xb0^\x7f\xdc\x08 \xd2\xfa\x8f@k\xc9\xd2\xe2+\x81\x14\x9bg \x9cc\xfd\xa4`\x8a\xf7Q\xb6\x86\xd6\xfa\xfe\x1byO\x95\x1c\xcc\xab\x9e\xb8\xf68\xa6\xfek\x15\x04\x1c\xe0\xe7\x81\xc0\xc5\x02H\x99ze\xb3\x93\xces\xf5\xf7\xa4q\x1a(\xf2\xd8\xe7w8=\x8f\xc57\xf8\xbc\xb1 \xaaj\xdfH;\x0c\xf6\x15p\x90\x90\x88\xacK\x95\x00j#\x9cw4\xa9\x98\x8c\x82\xcaGPOo\xce\x92\xfb\xc4\xc9 \x92\t\x9a#\xc7\xae"A\xcd(J\x91\xc3\xe7\x8ct\xc8\xaeB\xc2\xa7j\xb0\xcbv\x18\xc5:e,\x008=\xc5\x065\xdf+\xb7\xb6*b\xcb\xc5\x9a\xf5\xa3\x8d\xf2\x8b\x98\xc7\x04I\xc1\xfdEH\x17\xbc\xd6\'\x06(G\x99.IA\x8d\xa3\x1e\xe4\xd5a\xad\xe2!B\xbe\x08\xeb\xda\x96\xd3\xf5\x99\xb4\x9b\xd8dL<c\x89\x10\xf5#=\xbei\xe8\xfa\x8b[(\xfcL\xb34@\x8c\x8dZ\xb1\x9eq\x9a\x815\x84X\x92K[x\x96m\'\x1e\x9c\x03\xf5\xc5Y/t}r\x15\xf32\x883\xf8Nv\x9c\xfb\xb0\xc8\x06\x9a\xdbj\x1a\xa4\x1b\xe1\x9a/-H\'q\x1b\x95\x8f\xb6Ek\x1am\xf5\xa6\xa9l\xb2\xc1"\xb0a\xc8\xff\x00\x91\xfe*\x8f\xe2\x9d.}-\xe3\xb8\xb0R\x04\xad\xb1\xa1\x1c\x80O \xa8\xf6>\xd5\xa6\x96\x04[u\xbe\xb3\xb9\x92H\x88\x04\xe1\xb3\xb1\xf8\xac\xd5\x9fQk\x8b\x83e{k\x1cr\xe4\x85$`dv\xf8\xaa\xd9\xbb\xbc\xb5o2\x171\xe4\xe5\xb8\xca|pkE\xd2\r\xc9\xb6\xf3\'di6\xe4\x84>\x81Y\xd6\x9e\xd7\xfa\xa5\xc9\xb2(m\xdd\x91\x98\xc8\xea@\n;\x8e\x99?\x15)6\x9d\xe2]\t<\xd8X_\xdb\xaf-\xb3;\xc7\xc9^\xbf\xa5T~"\xee\xd0\xad\xd5\xa5\x94\xd3\xc5\x96\x12\xf9m\xa4\xa9\xc7:{\xfc\xedR\xef\xed\xadn\n\xdb\xc9<\x11L@*\x1b\xf9\x87\xb6\xaa\xd0%\x89\xfd3$\xa0\x9fb\x83\x14\xd5\'\x90\xb3bF\xb7\x95NC!;O\xe5T\xeb\x7f\x1c\xdb\xf9ae\x85\xd4\x8e\xd8\xcf4\xdbP\xd5\xe6\xd5`\x8f\xee,\xd1~\xf4\x02\xc7\x83\x9fj\xb2\x8b\xc4\x11\xb6\x96\xb6\x9d\xd9\xf4\xeax\x9b88\x1b\xee\xdcU1\xf0\xfd\xc6\xad3B\xa8\xb9\xc0\x90\x01\xb7\xe9\xcdip\xf8\x9bX\xb1?\xbf\xd9s\x10\xfe,`\xd5\xbbN\xf1%\x85\xfa)f\xf2\\\x8e\x8f\xc0?CY=\xb6\x93\xe2&\xb6Uk\xfbS\x90\x0f\xa86G\xd6\xa3\xf5\x08u\x8d>Eib\xda\x87\xa3)\xca\x1f\xa7\xb5]\xa5\xfc\xefne\x93\xa7H\xa4c`W\x7f\x90A?\xbdV7M\x85\xe5\xf2\xa2\xbc\x88\xb6\xfe\xfb\xe3\xe0\xff\x00j\xfa\x19d\x8d\xc7\xa5\xd5\xbe\x875\xdd|\xfba\xad^\xa9T"L\xf6\x91r1\xf9\x8e\xb5o\xb2\xf1n\xa1\tU\x94\x89\xc0\xeb\x91\x83R\xadf\x8e\xf2=q\x87R\x0e\n\xc8\xbaH?\xde\xa1\\Y\\\xdb1WUn\xf9S\x9d\xabS\xafsQ\xd6:\x9d\x9e\xa1\nI\x0c\xc8I\x1c\xaey\x07\xd8\x8ax&\x89\x98\xa8\x91K\x0e\xa0\x11\x9at\xa9\x19\xc85\x13#\xde\x95\xcd{\x9a\xe6\x8c\xd7+\xb5\xdek\xda\xe35\xed\x14WTQE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14Q^\x1a(\xa0\xd7&\x83^QExk\xca(\xa2\x8a(\xae$\x928P\xbc\x92*(\xeaI\xc0\xaa>\xb5\xe3\xcd7LIDX\x95\xd7\x8ex\x19\xf8\x1d\xeb\x8c\xca\x8aY\x98*\x8eI8\x14\xb8\xe3\x92g\t\x1cl\xecx\n2j\xf4\xc4(%\x88\x00w<UCY\xf1\xa6\x95\xa4\xb1\x8cH\xb3\xcb\x8c\xedS\x93\xf4\xe2\xb1\xedS\xc5\xba\xc6\xb6\xecL\xed\x15\xbe8U\xe3\xfaU\x7f\xef\x11Z\xb4\x8e\xb9\xdc\xc3\xab\xf2\xd9\xaa\xd9\xba\xa4)\xff\x00\xb7\x83\xff\x00sl>\xc3\xbdhm|;<\x987\r\xa7\xff\x00\xf1\xa7?s\xda\xb4mO\xc7\x1a\xad\xee\x16\x15\x16q\xb7O\xe65C\xbe\xd5\xc9vVg\x96l\x90\xcc\xe7\'5\x10\xd7\x92\xcc\xc4\x8c\xef$m-\xd4})T\x86\x187=\xcb\r\xdc\x80:\xb9=j\x9e\xe3\xa9\xcd>B\xc9\x85\xeeN\xc0\x7f\xcdim:=\xad\xa6\x93\xe5\r_\x1b\xb1?ZMb\xba\xbcwi\x17\xc9\x07\x1b\x8e{S\x94\xf2\xa2\xca\xda\xc3\xb9\xd4a\xa58\xeb\xf1M\xa6\xb9gP$fE^Bu5\x1a\xd7L0\x08)\x91\xc2\xaf_\xce\xaa%\xba\x8e\x13\x9dD\xb1\xe4\xf7\xff\x00\x8a\xb8Kv\x90\x00@\x00p\xa3\x8f\xf9\xab\x1e\x99\xaa_\xe8\xda\x84\x972&\xe0\xd1\x14\x93\'\x92\xbdx\xfaW\xba\xb7\x8d\xafu a\xb6\xff\x00\xa7\x8f\x18f\x07\xd4~>*\xb5,\x85\xb0e\x90\x82\x00\x18\xef\x83Q\x92D$\x0c\x91\xee,3\xf1\x81\xefT\xf77s\xcc\xdaE\xcc\x89\x1e0c\xd5\xb1\xef\xbd8\xbd:\xd4\xc8&x\x15\xa4\x00\x00\xd8\xf6\xad\xf3\xc2\xfa\x05\x8d\x86\x8dkt\xd0E-\xcd\xd4BGwP\xd8\x0f\xce\xd0\x0fN:\xd6?\xac\xa5\xac:\xbe\xa4\x90\xa7\xee\xd2V\xc0\x07\x0b\xcf$\x0f\x80j\xc9\'\x8e/\xff\x00b\xdbX\xad\xb7\x97:B\xb1\x99A\x04\x00\x06\xdc\x8cw\xc5gr\xbc\xb3\xbb\xe4\x1c\x06\xfe\xa4\xff\x00Zk\xab\xf5{k\x83gkc\t\x11\xc2\x98bW\x1b\xf0\x7f\xf9\xa8\xbd#\xa7^A=\xed\xcd\xdc\xb9i\\\xe9Ps\xe9\xce\xdfa\xda\x9d\xa4\x83\xcc\x18P\x7f\xc6i\xcb\xb1\nv\xa6H\x1f\x9f4\xd6(J\x00\xa4\xf0\x0ex\xeb\xf5\xa7;\x1c\r\xfb\x861\xd3>\xf5\x00\xb4h\x9e\xacdnj\xf3\x93\xb5%\x97\x93h\xdd\xdb\x9a\xf28\xce\xd0\xb8%O \x9e\xf5\xc2<\xa2B<\xbc\x0c\xe0\xe7\xde\xa5 \x89\xdb>\x9c\xb6\xee\x14u\xfc\xaa\xbf\xf1Q\xabzc,s\xc0\x14\xe1R\x07 \n\x9a\xf0\x87\x8a\xff\x00`\xea\x1fp\xbaQ\xf79\xd8\xee\x97\xa6\xc7 c?\x19\x15\xb9E\xa8Z\xb0B\xb2\xa9\x0f\xd0\x82\x0e~\x95\x8cY\xf87Y\xbdb\xff\x00qXU\xbf\x8ar\x10}q\xd4\xd4\xed\xe7\x80\xa6\xd3\xb4\xeb\x8b\xb1r\x8c\xf0!\x93j+.@\xe4\xe0\x93\xd7\xf2\xadwK\xbd\xf1\x1d\xad\xac\xbe_Lg\x86<\xb8\x12\x1d\x05W\x92\x06w"\xb1\x9dZ\xd3\xa1]\xdd\xa1n\xa0\x91\xcd!\x08\xc1=a\x9b\x81\x9cpi\xb7\xda!\x8emGL0J\xac\xc2\x17W\x03\x86\x039\x07\xe9\xcdS\x15B\x8e\x17\x1c\x8c\xed\xc0\'\xf3\xa6\xe1&\xb8%\xd8\x95$\x0c\x12rq\xf3\x9a\xe8\xdb\xc8\xa5Sf\xf2\xbcg9\x04\xf7\xacu\xdfUk\xcb\xc9\xee\xe4\x85\x87\x9c\xe0\x94C\xb0\xc0\xc0\xfe\x95\xaa\xb2\xb2[+H-\x96M^R\x91\xa8\xf2w\xcdu)H\xf2\x15w\x13\xcf=?\xa562M0\\2\xb8\xe8\xa4t#\xe2\x9d\x88\x99\xb6\x03\x959\xeax\x00\xf4\xa4V\'\'\x1b\xb0\xab\xd8~\x99\xc0\xa8\x13^\xc91\xd2\xb9T\xe0\x00qS\x91\x14\x0c\x9ek\xcd\xb2\x8cnE9\xe8\x07\xfd\xe9\xbc\x8c2T\x020}_\x1f\x194\xecG"?_G8=\xe9?!\x96R~A\xc7|{}j8W \x9f\x9fzVFy\xedH\xc7\x1b(m\x8b\xd1\xbfCO\xed\xad\xfda\xb7\x1ey\xc7\xb6\rx\x1b\xc8\xc2\xee\xc8c\xd3\x1f\xa7J\xf0\xc8D\xdc\xbb\x0e\xa00\xeb\x81\xdb\xe2\xb9\x95\x1aA$\xf1\x90v\xfd+\x87$\x1cm\xf3E\xe5\xbd\xf2j\x11H\x9715\x99 \xb2\xe4g\x07\xa8\xdb\xefR\x9a>\xafs\xa2^\x97\xb5\xcb@\xe7\xd7\x1eF\xee\xe3\x8f\xd6\xa2\xd9\x98\xa9c\x9c\xe7\x18?\x14\x93\xba\x96Q\x8eq\x9f\xfc\x15-.\xda\xdaA$\x04\xc7"\x90U\x97l\x1f\xad3%\xba\xdcF\xd1J\xa1\xd1\x86\x18\x1e\rk\t\xe3k)S\x98\xa4\x8d\x80\xe4\x14\xe7\xfa\x13U\xaf\x12x\xb1u[Ad\x8b\xe5E&\x15\xdc\x902\x01\xce\x00\x1d\xce9\xcdS|\xc4\x0c2\xcd\x92\x0eH\xff\x00\xbdv\xb0\xa4\x812\x80\x9c\xe1A\x19\xe7\xdc\x83S\'\xf17Z\xb9\x8d\xe1\x96\xf3Tn4\xb0Q\x8c\x8a\xae\x83\xa0t\xcbi\x92d\xb7\xf5!\xca\x92x4\xdc*FK\x80\xdf\x8b\x04\x9c\xe3\x0b\xdf\x8a\xe6m\xb7\x11\x01\x91\x83\xc1\x1f\xf6\xf7\xa7\xad\x0c\xb28\x8dcl\xee\x00\x003\xb8\xfd\x05X\xad\xfc\x0b\xae^*\xc9\xf7D\x84\x1c\x1f\xde\xb6\xc6\xc7\xd3\xad&\x08o\xfa\x89)ki<\xc4~m\x03 }q\xc5N\x9e\xea\xd2\xcc\x07\xb8\xb9\x8a x,\xc0g\xe9\x9a\xa4\x98\xc2\x9d\xa4\xe0\x9c\x8c\xe7$\x9at\xb0+\xae\x06\x00\xdb\xd4\xf6\xab\xcb\xf8\x03[E\xc8\x16\xcf\x83\xd3\xcc\xc1\xe7\xe7\x15]\xbd\xd2\xee,&kk\x80\xb1\xca\xbc\x91\xc1\xe0\xf49\xefE\xefN\xeav\x08\xafs\xd3\xe4\x8d\t\xc6\xa6R\x06}\xb3\xc5"\xdb\xa8\xd8^1[{\xd8\xa4`2UX\x13\x8f|T\x1f\x97\xb1\x8a~,\x1fO\xb5&\xf19`\xe0)\xe7\n\x18\xf4\xfdj\\\xdb##D\x8e\xcc\xc0\x9e\xf8\x1c\xd2-n\xc9\xe9(G\x1e\x92\x7f\xefU\x9et\x88\x01\x03c\xb0+\xfejp\xd2O?\xad8\xd3\xb5K\xfd1@\x82\xe2X\x13\x1c*\xb1\xdb\x93\xdc\x03\xc5MI\xe2\xcdV\\\xc6\xd7Rg\x18\xf4\x90\t\xe3\x9a\xab?\x98$\xda\x10\x92\x004\xbf*7,K\x9cd\xf1\xc95\xd8\xfa\x85\xe4jQn\xa5U\xff\x00b\xb9\xc51%\x9d\xb4\x8c\x1d\xad\xe2f\xff\x00qQ\x9aM\xe6\xf3\xa4gc\xeb\xcf%\x9b$\xd0HL\x11\xbf\x1f\xa8\xc5*\x8a\x19B\x95\xe5\xb2I=\xab\xa1\x1eU\x95X)\x00\x1f\xa9\xa4\xc5p\xe9\xc1\'<\xef\xb9\xa7\x8a\x8e1\x8aJ]\xc1\x81\xdazd\x1f\xad7M\xea\xd9\x00`s\x93\xf5\xa9\x03l\x1fnd$\xe3\xa0\xe8\x7f\xedC\xdb\xa4A\x08^I9\x1d\xb8\xf6\xa7\x9ag\x99\x0b8\x00/~Mp\x000\x07&\x99\x80\xce\xde\xd8\x19\x1cP\xf1\x87f\xc89nO\xb0\xf8\xc7\xb58TI\x03.\xec\xe0\xe7\xfe\xf5\xc2y\x8a\xe4\xe1\x88,x\xc6z\xd7b\xb9X\xff\x00/\xf3c?4h\'?\x14\xd1\xed\x1e&\x0c2Tv\x1e\xd4\xea\xd6\xcd\xae\xee\xe0\xb7\x8e\'2\xdc:\xacjN\x01\'\xdb\xe2\x9d\xf1**\x15 \xee\xcerpW\xdb\x1d\xa9k\x0b\x9f\xd9z\x8e\x9f}\xe4\x99>\xeb)b\xa0\xf5\x04\x15$|\xe0\xd5\x8cW6\x92K\x19y\n\xc6Y|\xc2\xbb\xe0g}\x88\xe4S\x12\xf9\xcb\x14\xba\x14\x19\x026\x80x\'\x1b~\xa6\xad7_g71\xd9\xbc\xb1_\xa4\xf3*\x12\xd1\x85+\x9c\x0eB1\xef\xf5\xaa\n+0fL\x10\x08\xc0\xcf\xbf\xf5\xad\xf6?\x11\xe9\xcd\xa7\xc7}\xe6\xa8\x80\xa8l\xf7\x1d\xb0G\xbflV\x11p@\xba\x9eh\x86\xd8\xe4\x99\x8a+\x0e\x80\x9c\x8a\xd2\xf5\xd5\xe8\xf6\xcbf\xf6\x12\xa3\t\x14\x97Ur\xdbvm\xf3\x8a\xcf\xf4\x0b\x9e\xabu\xf8\xc4\xbeC\x98\xd8\x04b\xa1w\xee\xbb{R\x1c\x90G\xe2\xcf\\\xff\x00j\xe9\xdd\x94\xede\xcfL\x0eI\xcd;P^F>X\x04\xaf8\x1dry\xa4\x84\x11\xab.\xd2\xd9l\xf2y\xac\xf3\\c`A\xdf\x9f\xedZ \xbe\xe2\x92U.A \xe78\xc7J\xef\xc8X\x0e\xecd\xb1\xf7\xe7\xebJ0b\xa5\x147<\x80F\x06zQ\x1d\xbbK=\xb4=\x1eWX\xd7=2\xc7\x194\xb5\xb9v:Td\x9d\x85$\x80\x01$\xe0\x0c\xe7\xe9L\xe4(B\xed\xc8\x19\xea\x0f\xf7\xaev( \xed\xe1\x86A\x1dO\xe7Z\x99\xf0\x1d\x91\xb6e[\xd9\x96R9r\x06\xc2~Tv\xfc\xeb;\xbc\xd3\xe5\xd3n\xe6\xb7\x95W\xcd\x89\xb0\xc39\xfa\x11\xf0G"\xad.\xedo,#G\xb8\\+l\x19H`\x0f\xb1\xa8\x16}F\xce\xf9\x9d \x90\x96]\xc8 \x82G\xbe\xf4\xc9\x9c\x9c\x1c\xf4\xc0\xf9\xc56\x9b\xf7\x85w1\xc79\x18\xe7?ZrUr\x01\xeaz\x13\xdf5\xde\xc6\\zx\x03\x1f<TAx\xcc0NGqS\xf4\x01\x8d\xab\x9bk\xfb\xeb2\x1a\xdew\x8f\x8e\xa1\x88\xe9Z\x97\x87u\xdb}J\xca\x16\x9a\xe9\xde\xe1\x13\x0e\\\xfa\xb2;\x1c\x7fJ\xcb\x02\x86a\x1e:\xf22\x7f:L\xac\xc8\xc0F\x9c\x03\x96\xfc\xbei\xdbn\xa1we"\xc9hAPN\xb8\x9b:O\xd3\xd8\xfc\xd5}\xf7M\xb7\xbe\x8fD\x83Kvp\x06kwgM\x9b\x83\xa9\x1d@\'$\x7f\xc5AI\xe2\xfbk;\xb9m\xee\xa2 \xc6F$_b2:Vj\xb77\x9b\x19|\xf9c\x19\xc6\x15\x89\xfd*>H\x04\x84\xbf\x9c\xc5\x9b\x92\xc4\x92\x7f<\xd5\xa3\xf8\x96\xfeDF\xb7\x8b\xc8\x95H\xd4ujV\xf8\xc1\x15Q\x0f\x86\xad\x81q;\xf9\xa8G\xa4c\x04\x1f\xad_\xf5\xcdC\xc3:\x9c3M\x1a\xa9\xba\t\xfb\xb2\xa3k\x13\xfe\xecc?\x9dR\xe3\xb8\x94~\xedw*g-\x8e9\x15\x1b\x1c~\\\x99\x0cs\x8e\t\xa7B\xe3\x18\xc8.s\x9ex\xfd\r".\xa95\xd34\x97^X\x91\xb6:\x14(#\xe7\xdf5g\x0fO\x8e\xd2/*&vA\xb8\x0e\xda\xb1\xf4\xab]\x87\x8b\xef\xb4\xf6\x1eb\xfd\xe21\xc1n\x8d\xff\x00z\xb7/\x8e4k\x88\n\xbb\x85\xdc0\xd1\xc885\x96eH\xe4mV9\xfaW\x1eBgp\x02\xad\xedo\xefl\x94\xfe\x16q\xe5\x9f\xfe\xdb\xfa\x80\xfaUe\xe7E\xe9\xf7\x8d\xaaH\x8a\xb8\xfed85\xb4Y\xebZe\xc2\xa8\x86x\xc2\xe0a}8\xc1\xedMu\x10\x1d\x1ak[r\xe5O\xad#=A\xee\xbf\xf1Y!\xb1\xba\x9a2c\xb1\x96E<\xf9\x91\xa98\xfd*\xc9\xa3x\x96M;l7\x90\x99#A\x8e\x98q\x8fpj\xe2\x0e\xbfx\x1a8\xeeb_-\xb9\x95A\x05}\xb6=\xbe\x95I?\x87c\x88\xb4\xb6\xb2\xb4\x8e\xbc\xc4O5?op$b\x8a\xcf\x14\x84g\x0cv\xb0\xa7\xf1\xea\x17V\xcc\xa5\xd9\x98\x83\xf8\xc1\xc1\x14\xc2}kG\xd4\xa3!\xdc\x16\xc6c\xe3\x12)\xea>\xb5\x01o\xa8\xfd\xe9d@\xc1\xd0\x026\xb1\xc1\x07\xeb\xefV\x82\xfa\x17*c\xb9\x04\x9d\x83)\xc7\x1e\xe2\xa1\xff\x00\xa7<\xca\xfee\xa9M\'\xd4\xac=\xfd\x8dl:_\x8b\xa5\x8b\tz\xa6D\xec\xe0z\x87\xd6\xafV:\x85\xa6\xa5\x11\x96\xdaP\xea\x0e\x0f\xb8?"\xb0m?V\xb3d\x8a\tB\xac\x9d\x0e\xf1\xd7\xf3\xf7\xab\xf7\x87\xb5\x1b}/\xceA\x19h\xe5`\xc4\x83\xea\x1f\xf2*\xce\t\xe2\xb8\x18G\x05\xc0\xdcpk?yg%\xa3\x1dQ\xb2\xaev\xce\xe3\x15\xa4QP\xf3\xeb\xdaU\xbaB\xd2]\xa8\x12\x9c.9?\x9f\xb5JE4S\xa2\xbcR+\xa9\xe8A\xc8\xa7H#\x91P\xb2)`k\xd0k\x8a\xf75\xca\xedwEy\x9a\xf6\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xaeMzk\x93E\x15\xe5\x14R\x1770ZD\xf2\xcd"\xa2(\xe4\x9a\x00\xce\xc2\x8e)lU_T\xf1=\x9d\x90\x91"ey\x17 \xb18U?\xe6\xa2\xf5\rr\xe6\xf8\x98\xedQ\xa3\x8b\x1c\x93\xc1o\xaf\xb0\xaco\xc5Ww\xd6\xd7pF\xd1\x10\x92d&\xdfV\xe2~\x9d1P\xfa\x85\xeat\xf8\x0c\xac\xac\xde\xa0\t\x00\x90\t\xf7\xc5N\xe9\xd6-\xd4.\x04A\xc2\x0cgr2q\xedS>!\xf1|\xf7\xab$1\xc8\xd21?\x8f<\x0f\xa0\xaa\\V\xe0\xe6\xe2\xe6R\xecNqI\xe1m\xf7I!\x06C\xd0\x0f\xe1\xa6\xa8\xb7\x17G$as\xd4\xd6J\xe6\xfaI\x9dY\xc9y?\x95;\x01\xf3^\x87c\xd3\xa0\xb4\x88\xa4K\xa1\x7f\x99\xfb\x93N\xe5\xb9S!d\x19#\x80\x07Jf\x96\xf7\x92\xca\xed \x013\xd3\xda\x9f\xc7n\x96\xe8:\x1c\x9eM\'+0S\x96\xc9<\x85\xfa\xfb\xe2\xa1I#\x1fT\xad\x93\xce\x90v\xab(\xd4\r\x90\x0cq\x93\xcdxZ8Wdc\r\xdd\x81\xfe\xd4\xc9\xe6p\xc4\'\xa9\x8fV<\xfeU\xd6\xc2\x81\x9bv\xf2}\x8fAM\x03\x93!1\xa9\xc8\xeeG\x1fJ\x815\xd9\x04d\xe3\x1d\xbf\xc5J\x8e\x11\xbe\xd9\xf94\xa7\xef7\x86#\x04\x8ers^\x11\x14{A}\xce\xc4\xf5\xed\xff\x00j\xe3\xab\x97f\xc1#\xa7L\xd7\x1bw1fA\xb7\xdf\xa6G\xbej\xaek\x93\x9d\x86\xe4\xf7\xf6\xa9*\x9fj?\x0b\xb0\x1c\x920\xdc{\xff\x00\xc5x#d8\xcf\x04\xf3\xc7\xe7J\x96\xdaLh\x0e\x0e=dq\x8f\x83\xf3J\xc3\xbb;[\x03\x8e_<\x01P\x16Gs\x85\x19?\xee?\xda\x96v\x19\xae\xed4\xdb\xfdB\xe5"\xb4\xb52\xc8y*\xa38_\x93\xd0\x0f\x93W\x9b_\xb3\x9dZU\x06{\x8bh3\xc9\x0b\x97a\xfd\x85]|\x10\x96\x1f\xb0\xad\xe4\xb5Q\xb9\xcb}\xe1\xf1\xcbJ\t\x04\x1f\xa0\xe9VMF{\xc8\xed&\x16Q#\xccW\xd3\xbd\xb0+\x7f\xd3|3`\x96+ur\xd2\\<\x91\t\n!\xdbq\x9c\x007&\xb0]K\xc4\xd7\xe6\xfd\xedm\x968\x15$1\xeb\x90o\x90q\x93\x9d\x80\xaf\x9f5\xdd&M\x16\xef\xee,\xfes\x15\xdcY8\x18=8\xab\x17\x85\xbc#\xfbZ6\xb8\xbc2\xc5k\xf8b\x0b\xe9i\x08\xe0\x90N}#\xdf\xb9\xaa\xa6\xb1u/\xden\xe5\xb8W\x92\xe7q\x12\x168#\x07\x04\x11\xd8\x0e\xc2\xbe\x88\xd3D\rmh\xb0\x11\xe4\x88#\x11\x91\xd3n\xd1\x8a\xcfxr\xc6\xd3\xacu+\xc9&\x8f\xf8P7\xf0\xed\xdb\xbe\xa2@\xd5\xef\x8co\xf3V\xfd{\xa8\xdet\xee\x9dj\x91\xbf\xf1\xa6\x18y\x94q\x80\t\xd3\xf5\xce\xd5\x97\xf8\x87\xc1\xa9\xa5\xdaMwgp\xed\x02.dI1\xbdG\xb8`9\x15#\xe1kM*\xce\xc6\xdbQ\x94\xa4\xb3\xca\x9b\x84\xaer#\xe4\xf0\xa3\xa0?5?\xe3\x9b\xd8-\xb4y\xac\xcc\x83\xcd\xbc]\x80{&y5K\xd2|\x06\x97\x960\xc95\xe5\xc0\xb5\x94o\x10\xa3\x9c\x10{\x9ep*GP\xb5\x8a\xcf\xaf\xb4}*\xca9$\x8e\xddY\xd0\x9c\xacL\xc7\x91\x9e6\xfd*\x1d\xad\xd4\xd7\x9d\x11[\xa8^<j\xf3\x15W\x03\xd5"\x01\xc6\xdc\xef[\x14rF@\xda\xcb\xd3\xf1{\xd7\xb2$\x13#\xa4\xc7z\xba\x95e=\x08=\x88\xa8\xbbK\x08m\xe1\x8a$w!\x14(,\xe4\x9c\x0e95\x15\xe2\x0f\xdazl\tqjU\xe3f\n\xe2L\x82\xb9\xe8F:\x8a\xd9\xbfS6\xd6rO%\x8eQ\x132\x05:\xb0;\xed\xde\xb2\x91\xf4\xf1=\xd2E\x1d\xde\x19\x9b\x08[\xd3\x93Hj\xbe\x0c\xd2\xa4\x82W\xb2\xff\x00\xa7`\x0b*\x83\x94\'\xdb\x07\xa6~+\x9d7\xc2\xbaRY\xc2e\x87\xef\x12:\x06y\x19\x88\xc1#\xf8v\x91\x81T\xfb\xedgSu1\x9dI\xb6:\xeda\nm \x9e\xd9\xe4\xd4\x9e\x81\xe2\xbf\xb8\xd9\xa5\xad\xec\x12?\x93\x1e\xd4\x919\xdc\x07\x03w\xb1\xf9\xac<]k\xc2\x92\xf5S+t\xc8\xed\xd1\xa2!\x9d\x902\x96\x1b\xfeU\xc8\x1bw\xadd\x9d;\xc4Q\xf4\xed\x0b~\xf30\x90\x10\x15\x88m8\xf78&\xab\x9e!\xd2\xce\x9d\xa8I\nJLl\x15\xe3\xcfP\xa4\xe3\x07\xe9\xefP)\t\xe4n\xdcq\xc8\x1c`f\xa65}E\xb5;\xd9n\tlp\xb1/\xf2\xa8\xe9\xd3\xaf\xcd9\xf0\xee\x8a\xba\xdd\xdc\xca\xccD\x10\x10fn\xa7\'\xa2\xaf\xc9\xf7\xf6\xacI\x86.\xa5\xd5\xe4\x87\xa7A\x95\x9aV\xf2\x97\xfe\xde~\xc3\xbf\xd2\xb5I3Yt\xe4\x96\xf6L\x18\xe2S#c\xbf\x1f\xad@\x95M\xc4\x90H\xed\x8e9\xc7Q\xf3^ml\xc9\xe6\x02\x06}X\xc7Q[\xabhzTvO\t\xb1\x87\xc9H\xceN\xc1\x90\x00\xeb\x9e\xb9\xf9\xacN4R\xa0\xe7v\xf6*\xc3\x8e\x83\xa1\xfaU\x8fZ\xe8\x12\xf4?\xc3\x89\xae\xa3\x91\xa6Vm+\x90\x01\\\x03\xb7q\xbe\xd5\x13\xa5u\x98\xba\xb0\xb81\xc2\xe8"`2\xdd\xc1\xdcq\xf4\xa6\x8c\x01\x8c\x00\xb9^\x83\xf3\xa4<\xa0\xbc\x91\xc1\xf6\xe4T\xe1\xb6a\x06\xf6\xb6\x90.\xf2A\x0b\xfd\x89\xa8\xfc\xab\xb1\xdb\xc8\xe7\x8e\xc7\xbe+;22y`\xb1\xcb(8#\x15r\x8c\x1868\x07}\xe9\x93)b\x0b\x00\x01\xc7\xe4)\x7f\xbb5\xc3\xa9\x85Y\xb6\xff\x00*\x16\xfdqC\xb1\x8c\xe5\xa2\xe4\x1e\x84t\xcdk\xbe\x00\xbc\x8a\xe7FP!X\x9e)\x9d\x1d@\xc1$\xf2\x18\xfeF\xad\xba\x07K\x1df\xfb\xf0\xd2\xdd\x18},\xc1\xb4\xea\xc9\x1d\xb1\x91U\xfd_\xa8\xbfK\xb37\to\xe6\xe1\x82\xe3V\x00\xcf~\reF\xcekv\x8cOm$D\xe7\x1b\xe3+\xf3\xc6k\xd5\x91\xa3!O\'\x9c\x83\xfc<v\xaf\xa2\xee\xac-5\x18^\xde\xe1\x03\xa4\x83\x1c\xf6>\xe3\xd8\x8a\xf9\xea\xee\xdd\xec\xee\xae\xad\xd9\xf7\x18\xa6h\xf3\xf0\x0e?\xadXx\x8b\xc3\xd2xw\xf0\xf2G?\x9d\x0c\xe5\x941\x18`F\xf8#5\x07\xa1\xf5\xc4\xebBeh<\xa9b\x00\x95\xceA\x07\xb84\xae\x93\xab\\\xe9z\x9a\xdc\x0bT\x95v\x15\xc6@`I\xceFkK\x8b\xc7v\x81G\x9f\x04\xb19\xed\xb3v~\x85sYh\x8c\x16\x0c\x06\xe5\xf8=\xe9\xc8\x04\x00v\x9e:\x8e\xa4\n\x85\xd3<E\xd5\xfaR46\xd3\x81\x19mZJ\xe4d\xf7\xde\xa4u\x0e\x8d\xd3\xba\x8b\xac\x93\xc2K\x81\x8d@\xe0\xe0v\xad&o\x1d\xa0\x8d\x8d\xb5\xa4\xd2\x1c\x7f\x10\x11\x8f\xeb\xff\x00\x15\x99jWW\x1a\x9e\xa1-\xdd\xd3+<\x83\xf0/EQ\xd0\x0c\xff\x00z^Ic\x8a5\xf5\xf5=Orzb\x9byy}\xef\xb5H\xeb\x8ex\xa5un\xb9\xd5z\xa4QEurYU\x83h\\\x05\x07\x1c\xed]\xe9\xbd&\xc3\xa6\xb3\xbd\xbd\xb8Va\xa7Y\xc9b=\xa9\xb6\xd0\x81\xd9y\x1d\x8d*\x8f+\xaa\x8d\xc5\x80\xcer2\x07\xc6i\xc2\xaa3\x85\xc1<\x02\xa7\xb7\xff\x00\x15\xe8\xf4\xef\xc2m\'\xa9\x1d1\xdb\xf35L\xa3Il?9]\x89\xe4o\xda\xad\x0b\x0f\xf6\xef\xce\xf4\xd6(\x96G;\x8fS\x9c\xff\x00\x8a\xeaKdR\xce\xa4\xe0g\xe4\xe3\x14\xb6\xdc\xe3+\x83\xd4}k\xd4\x8dx\'\x9er\x08\xf9\xa4\xaczTjPI9\xd5\xdcWK\xef\x9dD|S\x1f+\x968\\\x1e\xa4\xf6\xff\x00\xe6\x9e"\xab\xaer9\x1d}\xf3\xff\x00\x14\xaf\x92\xc5\x98.\x0ex\xc6:\xfbR\xdbDd.\xcc\x95\x03\x8c\xf4\xfc\xa9\xd8\x83\'\xab\x00`\xef\x9d\xf3\xf4\xe6\x90\xd2\x03\x80\x0e\xf4\xd5\x10m\x1bP\x1e0\x061\xd3\x9e\xb4\x18@b\x19=<\x83\xee{\xd3\xe8`\x96f\t\x14L\xcd! "\x83\xbb\xfaS\x99\xf4\xeb\xcb\x7fL\x96\xf2\xc4\x1b\x07,\xb9\xc9\x1d\xb2jZ\xda\xcd,z\xc4LQH\x05\x82\xe4\x0f\x83L\xb5\xc4j\xfaL\x8a\x18\x8d\x81;\xd4u\xbe\x8bss\x1f\x9bmn\xa4\x10@\xdd\xf1\xce8\xefH5\x8c\xd1J\x12x\xde6>\x93\x91\x8c}3W\xcf\x07\xddC\t\xb8\xb2\x97\xd0\xd2?\x9b\x12\xb6\x0fQ\x86\x00\xfb\xf1\x9a\xbc\\i\xd6\xd7\xa8cx\x83\x83\xef\x8a\xd4\xf4\xdf\n\xc1\xd4\xec"\xb8\x82\xf0\xac\xa0\x90\xd1\x9c\x10\x18\x1c`\xe3q\x9e\xd5A{\xe2)z}\xec\x90\xcdo\x98\xf6*\xe0\xe0\xe0\xf7\xdf\x9a\xc2\x9dDE\x88C\x85^O\xf7\xad\x0bC\xf0\xd6\x95{cmup\xed,\x92\xa6\xe0\xaa\xdb@\x07\xa7Jc\xa8xq\x86\xb1\x05\x85\xb4\xaa\xe6d2\x10I;\x1789\xf8\xabv\x95\xe1\x18t\xa5]\x97\xd7M\x83\x90\x9b\xf0\x83\xff\x00j\xfb~u\'\xa0xv\xf5:\x85\xc1\x97\xa6\xc3q\x14M\xe5\xbf\x9a\xc3@m\x8eW\x9c\x9cT~\xb5\xd6\xedM\x94\x1eU\xfc\x90I(\x0e\xba\x14\xea+\xb8\xdf\xdbzG\xff\x00H\xe8R\x06\x1f\xb3H\xcf9I\x18s\xef\xd6\xaa\x1e!\xf0\x95\xa6\x97k5\xfd\xb3\xbf\x97\x19\x1edo\xce\x018\xc8?\x15v\xf1\x16\xa1q\xa4[\xc5%\xb9V\x91\xe4\x0b\xb6C\x81\x8cd\x9e+;\xd4\xf5mgTC\x1d\xc3\xc4\x90\x9ce#$\xe7\xeaO\xf6\xab_\x107@\xb5K\x8b&\xe9h.BeZ(\xd5B\xb3\r\x89#\x1f\xa5@\xe8C\xad\\I\x05\xd0\xea\x0cm\x8b\xe1\xd6W-\x90\x0e\xe0\x03\x9f\xd6\xab\x11\xa1\x93\x0c0\xaa\xc4\xf2:\x9f\x9a\xe8[~%g#\x07 \xe3\x19\xa5<\x89"*\x0bdq\x83\xde\x9c,-\xb0\xfa\xb2J\xe7\xa7\xe8k\xce1\x97\xd2c;rs\xef[\xc6ln\x18`\xd2V\xdau\xd5\xdd\xc2C\x04m3\x9e}\xff\x00Z\x7f\xa8\xf8sU\xb0\x8a9f\x8aE\xda\xcaVU\xc3\x05`r:t\xab_\x80\xcc{\xb5b\xc72\tUzr\x10/\xfc\xd6\x83/\x934R!\xc3+)VS\xdc\x1e\xa0\xd6\xef\xa3xZ\xcb\xa9t\xaf\xc4\x1b\xb7Y\xa5\xd6\x13\x04at\x9cn;\xf1X\xee\xab\xe2K\xab\x0e\xa4`[Txc\xd3\xac\x9c\xe5\xb5\x0c\xecx\x15\x97\xd8x\xc8\xc7i$z\x85\xbc\xbfxP@d\x19W\xc7q\xed\xf3T\x9b\xfb\xc9u+\xb9\xae\xde \x0c\xa4`\x0e@\x00`\x01\xfaT\x9d\xd5\xba\xdb\xdd]C\x9fLr2g\xaepi\x16\xb7M\xdb\x95\xc7\x18\xe35\x94\x9a\xef\xa9H\x05\xbd\xcd\xc7\x98\xb0\xb9\x188\xed\xb6\xe7\x198\xad\x15\xad\x9d\x8c\x0e\xd3\xc1\x16\x932\x83\x9e\xd8;\xe0\x0e\xd4\xe7@\xf0\xfa\xeb\x92\\\x06\x94\xc4\xb1\x15\x18\x0b\x92I\xf6\xcfj\x92\xbb\xf0u\xfd\xbb\x16\x88,\xf1\xaf \x03\x86\xfd\r<\xf0\xa5\xe4\x16\xd7\xb2[\xc8vI>\n\x13\xc6\xe2\xb9\xc8\xfa\x9c\xe4V\xb0\x90\xa3\xa6K\xae\xdcrke\xd1:7L\xea\xbd9\x1b\x07\xceVml\xad\x827\xdb \xed\xc5fz\xc7Z\xea=3\xa80\x04\x18J\xae\x85e\xd8\xed\xbe\x08\xde\xben{%2bT\x01\x91\x8e\xde9\x04qC@U[\xae\xe6^\xa0\xe3\x81V\x7f\x15I\x0cZ\xe5\xech\x07\x01\x0b\x11\xc7\xa8\x8ej\xb8$\x0f\x88\xcb\x00\xdc0\x07\xfek%u\x1f\xe1.\xae \x12k\xf2ed\r\xef\xa4\xe2\xb5V\xd3\x1b\xabh&+\xa7\xcd\x8d_O\xb6\xa1\x9aN\x15iF\xd1"\x01\xc0\xf5\x8e\xe3\xbd$\xf6\x8f\xeb\r\xb4\x9c\xe1\x88#\x03?J\xecC"\xc9\xb4\xb6I$\xf4\xcf\x1f\x95L\xe8:}\xae\xa3\xa94\x13\xb3\x80\xb1\xee\xf4\xf0O8\x1e\xf4\xab(\xday\xa1\x8a5*\xf28U\x0c\xd8\x00\x9a.e[h\xa5\x95\xcf\xa1\x17Q\xc0\xc9\xc0\xaa\xf4\x96\x92E\x1ce\xa21\xab\xae\xe4$p\xca\x0e8\xa6\xc56\xb7\xa4\xe4w\x157\xa9\xd95\x85\xdc\xf6\xd2\x87\x012Sw\xf2\xe7\xa8\xf85\x1e\xd16\xec\xf2A\xc6H\xa5\xdcf)\x19\x19\x182\x9c2\xb7 \x8e}\xa9p\xb8\x965p\xc1\x83\x8c\xa9\x1c\x10x\xa6\x8cdv\x1b\n\xf3\xd0|\xd4\x83\xd9j\xf6q;\xdc\xe9\xee\xa8A\xda\xdb\t\xc6}\xc8\xa8\xcb\xc9&\xd3\x9e\x0b\x80\xa6U\x8aegOu\x15\xa8\xe8>\'\xb5\xbeRb\x9bx+\xf8{\xa9\x1f\x1e\xff\x00\x152\xce\xee\x00\xfa&\xb8\x96<\xe0)P\x08\x07\xe4\x1ej\x07P\x96{uG\x8a\xdd$_\xe6\xc9#\xf4#\x8aC\xc3\xbe)\xb2\x92\xde\xda\xd9\x9c\xdb\xca0\xa4\x11\x85?J\xb3\xea\x9a~\x9d\xacB\xc9r\xa8\xcd\x8fD\xeb\x8d\xea{\x1c\xf7\x1f\x06\xb2\xcf\x11\xc5h\xba\x9b5\xba\x042\r\xee\x80`+\x1fo\xafZa\x1d\xd5\xd2\xe1R\xe9\xc0\x1c\x15\xdc@\xfaV\x82\xc7\xae\xcff\x86\xcatK\xd8p\x15[8:q\xdf9\xcf\xf5\xaa9\xfa\x14wo\x15\xed\xac\xcfk+z\x88\xc6pM \x92\x8bi\xddC\xa91HW\xe3\x83\x8e>\xb5\'\x14\xb1L\x0f\x99\x18\x04\xf4u\xe0\xe7\xdc\xe3\xadE\xb5\xaa\xbb\xb3\x05\x01\xb98\xa1.\x11T\x07\x8f\xe8\x7f\xf8\xa6\xed\xef\x19\x1b\x04\x80\t8\x07\x8a\xbb\x92\x00\xc3\xb9lnG5c\xb2\xb2[\x8dE`\x92\xe8\xec(J:\x8fS\x11\xdb\x9a\x9a\xbd\xb5\xd5\xf4\xd8L\xb6\xd2\xf9\xf0\xa7%O\x04\x0f\x9a\xa3Ct\xea\x00r\xdbI\xf47FS\xefVkO\x10_@\x9eT\xd8\xba\x8f\x1bD\xa3\xf1\x81\xec}\xea\xc5."d\x93Z\xbe\x0e\xe1\x90\x9dk\xb7loU\x17v\x97\x05\xd1\x93C\xa8\xc0h\xdc\x0c\x1f\x9f\xad:\xb1\xf1\x0c\x97\x13\x01sj\xb1\xaf\n\x19\xf9\x19\xf7\xad\x06\xcfV\x97N\x10\xc9\x0c\x89\x87\xe7j\x9c\xa3\x01\xfd\x8dc\xadqn\xb2\x98\x96@af\'g\xf2\xfcT\x96\x9fz\xb1j\x16\xd6\xa6vh\x89$F\xdc`\xf6\x00\xd5\xa7J\xeb\t\x0c <\xc6Tb\x06\xb7#P$\xf1\xf4\xaa^\xab\xd0\x96a\xe6\xc2\x9eYU-\xa0\x03\x82\x07\xf45\xf4\xf6\x9fx\x9a\x85\x9c7(\xa4\t\x06p{\x1ayY\xa6\x91\xe2\x03\xa54v\xd7\x11\xe2\xd9\xb9B:\xa9=\xabE\x82\xe2\x1b\xa8\x96XdWF\x1c\x10kQ\xb1\xddNEc\n\xb2\x9c0\xff\x00\x9a_5\xedsEr\xb9]\xe6\xbd\xaes^\x83E\x15\xed\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QExk\xda\xe6\x8a+\xc3^QP:\xf6\xbfi\xa1\xdb4\x92\x1d\xd2\x11\xe8A\xd7\xeah\xf79\xc0\x03$\xfbW@,B\x80I\'\x00\x0eI\xa7Z\xb6\xafg\xa3\xdb4\xf7\x0e\x06\x07\xa5GRk!>(]wR\x91\xae&TH\x88\x10Bx\\\x93\xd4\xfd*\xa1\xadkW\xda\xf5\xe3e\xcb\x03\xf8\x8fe\x1e\xc2\xa2\xa5\xb7H\x97\x02B\x8a:\xfb\x9a\xa7\xba\xea\x8c\x85\x85\xb8\x05W\x96?\xcc~>+Og\xd0U\xa2\xcd\xc3\x11+\x8d\x94o\xa4\x7f\x9a\xd4/uk+D\xf56F\xec*\xaf,\xed\xf1\xf5\xae\xc5\xac\x8a\x8d,\xd1\x0f>@\x0e\xdc\x7f\xa6\xbe\xd9\xf7\xf7\xac\xc7L\xd5\xe2\xb1\xd5\x92\xe2\xe2\x17\x9fb\x91\x1f}\xa7\x1dqS\x9a\xc7\x8b.\xf5\x1bf\xb5\xb7O!\x1cbIz6=\x85P\xb7Uy!\x94]\xbef|\xf9QF\xa4\xa2\x81\xb6K\x1e\xe7\xf6\xa9\xcb\xd1%\x8ah\x92\xde?F\xc6I\x98\xf3\xf0\x05U\xae\xf3{\xabj\x06\x04\xcd\xbf\x99\x81\xed\x909\xc7\xe7J"\x8bp\x00\xfe\x13\xf5\x03?\xe6\x99\xc4\xdeR\x05\x8eL(\xfcc\x9c\xe3\xe2\x9726\x00\n2:\x0c\xf3T\xe90\x8a-LK9\xdc\xb7\xd7\xdb\xe2\xb5\xcb\x11\x01S\xf9T\x00>\xde\xf4K2\xa8\xc7G\xe0\xf3\xd8SW\x90*\x82H\xdc{\xd2l$\x96B\xdc\xe5\xba\x83\xc7\xc7\xe9\\\xce\xa7\xc9\x1cn\xc6F{\x0f\x80j\xbay\xdd\x8eT\xe7\xd8{T\xb4@0?Zl\xaeK\xec\xceA\xc9\x1c\xff\x00zy\x9c*\x94^\xa2\x92\xb5\x8f\xcb\x04\x91\x96#?\x00R\x8c7:\xe1py \x1e\x87\x1d\xea\xb1\xa4T\xdc\xbe\xa7?\xb5H\xc6O\x1b\n\xe1\xe0PU\xa4 \xf3\xcfl\x0c\xfb\xf6\xa5\xe4\x829T\x85r\x13\x1cg\xb8\xf8\xa4.\x00\x8cF\xf2+7\x98:u\xc5u\xe60)\xe4\x8c\x93\xc7<\x11\x9a\xaf\xb9\xb8*\xc5\n\xf7\x19\x1d\xf0\x7f\xad-T\x90\x08o\xf1^m m\x11`tc\x81\xc0\x15x\xf0v\x83\xa6\xeb\x13]\x1b\xcf\xde\xc7o\n\x9f$\x12\x03\x168\x04\x91\xcf\xe9T\xa9\x19\xd4\x82\xd8V\'\xf0\xfb\x1a\xd3~\xce\xe4\xb6\xb7\xd3\xb5\x19\xb3\xbaY.\x826\x7f\x95\x17\x81\xfa\x92j\xe7\xc3\x8b\x0b\xf5\x08\xff\x00\x11\xa4\xc6\x81\xd9\x83\xf1\xb0\xdbo\xadS\xf5\xd9\xa6\x8b\xa6\xccaf\x121UR\x9c\xeeFw\xfaU\xc2\xc4\xd8i1\xdb\xe9\xb1\x04\x85R2\xc9\x1ey\xc1bI9\xe4\xf3\xde\x9c\xea\x1a\x95\x8d\x94k\xe6\xddG\x19n\xec\xd5I\xd4<9w\xe2}~k\xf7\x93\xc9\xb5\x89Dp\xb9\x1c\xb6:\x95\x1cq\x93\xd6\xbd\xd7\xbc\x1d\x16\x9d\xa5\xbd\xec7\xd23A\x83 \x93\x03*N8>\xe2\xb5m\xd5<B\xb6\x17\xb2Z\xf4\xa4kx\x03yS;\x04&4\xfe`\x9d\xc68\xac\x8aXty.\xed\x12\xe3\xa8\xb7\xe2& \xc9\x18R\xdf\xc4~\xc5\xbd\xf3T\xdf\x12\\\xda\xeaW\xc5\xad\x97(\xcb\xb5\x9c\x0f\xc6\xde\xf4\x86\x99\xaakz}\xb9\x82\rM\x92\x14RV6\x01\xc2\xaf\xb0\'\xa0\xa6\xe0+\xb1a\x1f\x05\x86\xd0\t9\xcf\xb7\xcd8\x9a\x13n\xac\xa67By\xc1R\t?C\xf1^^o\xefL\xf7\x17^{#\xb1b\xcd\x19)\xbbv\xda\xbd\x04Z\xdb,0\xdb\xb4J\xea\xa0\x05\x0e\x03q\xf5\xa6\x97O{\xa8HI\x9d\xa4b\xc3/!\xec=\xbe\x9d\xaa\x7fA\xd75\xcd\x10%\xbc\x98\xb9\xb5Pp\xb9\xc3\xa8\xcf@{\x8f\x8ak\x0ch6n\'\xd4rG\xc7\xc5K\x05\x82\x1c\xb7\x00\xa8\xcf?O\xee)\xcb\t.\x96o:+\x93\x1c\x8a\xde\xa9\x03z\xb7\xdf|\xf3\xf7\xa6\xee\x92\xdeX\xbc\x99-\xd5\xd0\x8d\x97\x1bm\xb6\xde\xd5l\x8f\xc6\xfan\x06\xf5\xb8\x8d\x8fc\x17\xf9\xe9P\xfa\xef\x8a\x1bP\x89-b\x89\xa3\x8fpf/\xf8\xdb\x1f\x1d1T\xc7\x95\xae\xa7\x91\xb0v\xa9\xc2\x00?\xbf\xcdZ\xb4\xdf\x06\xea\x9a\x80Y\x1b\xfe\x95\x18d\x99\x07\xab\x1f\x0b\xdb\xf3\xabO\xf5\x7f\x12\xf5\x95\x9a\xc6\xd7\\\xca\xe3\r\xe5\xae\tS\xeeN\xc3?j\xacn\x9b\xd0\xfa[Gu9X\x8a\xee\xba\xdb8?\x00sU\xd5\xda\xd9?\xc2?\x8a\xb9h\xa4\xe4d\x8d\xdd[\xb0\x03\xdf\x15m\xd6\xbc*tk1p/L\xcb\x1b(p\xc0\x0e\x0f\x1c\x1f\xefU\xb32\xb88\xfc#\x00\xf5#\xebT\x97\xdd:n\x95!\xb7\xbd\x80E(@\xc1r\x0eCg}\xb6\xc7j\xb3\xb5\xbd\x82\xfa!5\xb4\x9ede\x8a\xea\xc1\x1b\x8f\xad2*\xe4\x8fR\xe3\x92X\x8fz\xb8x\n\xf6\x08\x93R\x8eK\x94BgV\xda\xdf\x8b\x01q\x9c\xf7\x15\\\x92(\xe4\x85\x9b \xb1\x039\x078\xf6\xa8\xdf\xb9\xda+\x9c\xa8-\xdc\x13\x9aWO\xea\x13t\xbb\xab{\x88t\xb1\x1b\x80X\xe0\xe7lm\\\xbc\xb5\x8f\xa8Z\xcbn\xecT67\x038\xc1\xcfz\xd3\xef\xb5\xb9\xf5\xc9\xa5\xd2\xf4\xceb \xf9\xf3\x83\xe9 u\x00\xfbv\'\xf4\xaec\xf0\x9d\x84\x11\x1f1\xa4w+\xc9\x07h\x19\xf6\x14\xff\x00\xc16\xd1\xae\x94\xd7\x05\x02\x99\xa5lg\x9fBzG\xf65h\x94\xda\xabd\xb8f=\x17\xdc\xd7\xaaY\xf4\x98\xba\x95\x9c\x1dK\xaa\xb4s\xdcO\x1e\xa4\x0f\xf9"F\xe1T\x1a\xc0\xddu\t,n\xa5\xb1\xb0V\x8a(_\x0eW\xf3;\x8eK\x1a\xaf\xa6\xb7\xa7[I\x16\x9b5\xe4p\xca\xb1&\xd8\x9c\x81\x95\xe81\x9e\x0fJz\xf6\x1a=\xcf\xaek\x1by3\xd4\xed\x00\x9f\xd2\xa0o<\x01\xa7k7\xd3\xdf\xdf4\xd2\xcb.\x02\x80\xdbU\x14t\x00\n\xadk\x1e\n\xd4\xb4\xc8\xa4\x97M\xd7/V\x08\xc7\xaa\x16\x94\x92\xa0\x7f)\xa8ww\x1dj\xca\x19^\xe3\xa5\xc7sl\x84\x94\r\x82B\x0e\t\x1b\xf6\xa7\xa0\xb7\xe9w2\xc6\xb0uG\x82v\x03Y\xc1\x0b\xa8\xf3\x820y\xa7\xde(\xd24kKT\x9a\xd7\xf7\x0edU\xd9\xbbpa\xf4>\xd5P\xd1\xf5;\xcd\x1a\xe6G\x81\x04\xb1JG\x9b\x11l\x1d\xc3\xf8\x94\xd3hl\x99\x97}\xcd\xdc\xd2\x16\xe0\xbb9\'\x06\xa4b\xb3X}`\x80\x87\xf8\x98\xf5\xc0\xf9\xaf=\x92\xfe[\xbe\xa1\xf8\xab+x\xad6\x18\x11v#\xf9\xb1\xb0\xde\xb6\xb0\xda\xc7\x05\x91\xb5\xb9\xb8k\xac\xe7%\xf3\xbf\xc6y\xabsx\xd2\xe9\x91\xa3\x87N*\xed\xc7\x99#\x83\xb3\xf2^\xb5N1\xa1%\x8e\xf7f%\xa4c\xd4\xe4\xff\x00\x9a\x9c\xd1\xec\xed\xafu\x08\xad\xe4\x9b\xd2\xead\xc8\xe0\x95\x1f\xc2?^\xb5\xa6\xa6\x89`\x8a\x11maP\x06\x07\x00\xf1\xf5\xadU\xa7G\xeb\x1e(\x87\xcd\xb8\xea\x11\xe9\x85\x8a) \x12\t\xc18\x03\x1f\xadP\xdc\xf5\x1e\x9b\xe1\xf9<\xa8\xad\x1c<\xa03i\'\x8e\x06I\xfe\x95\x88\xca\x91\xa9\x80*\x9d\xa0\x1e@\xf6\xf7\xad\x0f\xc3v\x1aU\xd6\x93\x1c\xfeDW\x13\xc8\xcd\xbc7>^\t\x18\xc7j\x97\xd4\xbc?\xa1D\x86k\xb2\xb0\xae?\x85\xb6\n\xccV\xd5#\x99\xe4\xb3\xb9\x96\x00d8h\xd8\xa9`\x0fR>\x95\x17\xf0G\xc2\xbdL=\xd4V\xd7\x86H\xd9Da\x86\xa5\x1bz\xb0A\xc7\xde\xa4~-:\xfd\x89X&\x9e\xd8\xa3\x82\\\xa9\xc1\xe7\xd3\x90w\xad)\xb4m4\xa9\xdfcn\x14\x0f\xe5\xc6\x05Qu\xdb]"\xdcDlg\x124\x8eVD\r\xb8.;\x8e\xb4\xca\xe2\x1b\xab\xd5T\x9fS\xba\x91\t\xe5\x19\xf8?8\x14\x9cV\x11&\xd4\x8dq\xb4\xf3\xcf\xfeu\xa8]c\xab\xa5\xf8\x11A\xd2b\x8b\xb7\x98p\\g\xfd\xbaG\xb5?ae%\xa3\x07\x97\xa9I!\x07t\x19\xd2~\xba\xa98\xd6B\xa4\x93\xee\x00\xf8\xae\x8cb@0\x9b\x97\'\x18\x1e\xdd\xf3Nd1\xa4d\x12@\xe8G\xc7\xc5u\xb0\xaa\x1cc\xa6F;\xfe\x95N\x11\x08 e\x80\\\xb6\xf9?\xf8j\xcf\xcc<\xe3\x19;S?+&1\xb8\x86\xc9%H9\n>Mx\xc8\xcc\xaa1\x92\xc7\x19\x1d\x00\xa7\xdb\x03:\xabq\xecs^\x95\\\xb2\xe0\x928\xc0\xfaR\xda\x00\xca\x06p3\x83\xfa\x0f|\xd1\xe7\x10G\xd34\x98\x88\x0c\x1d\xfd\x14\x1c\x0e\xa7\x8a\xe2H\xfdYe\x07o \xfb\xe7\xe9J\xa4d(8\xeb\x9c\x12=\xab\xb0\x1b\x7f\xa9q\x83\xd4\x7f\xc5\x18V\xc6P\x8c\x90Oq\xbf\x19\xa6\xf5\x90I\xd5\x9cU\xaf\xc0\xe29\x97P\x9c.$I\x84c\xdc.\xdc\xff\x00SW\xd9`Yctt\x0e\x8c=@\xf3\x91Y\x1e\x9b|\xfa&\xa1\xe7\xc6\x0f\x91)U\xb8\x1d\xb1\xd9\xb8\xee3Z&\xa7\xafAide\x89\xd1\xe4a\xb65\r\xc3\x13\xd3\xf2\x1d\xeb\xd2\xbc9\xd5\xec \xe8\xf2Cu"\xa3\xdb\x062l=a\x89!\x94w\xcf\x15\x88\xeb\xbd>\xf2^\xa9\x1c\xb0\xa9e\x9c\xaf\x96s\xf9H\x00`\xfbb\xb3K\xbbt\x82\xf6\xea\x11\x9f\xdd\xca\xc0\x1c\xf3\xe9<\x1c\xfb\x8ay\x16\xad\xabG\x1e\x13P\x90\xa8\x18\xf5\x05f\xfdq\x9ag\x1d\xa5\xd5\xdc\xdbc\xcc\xb3\xc9\xb9\x98\x8e\xe4\x9c\x96\'\xb0\xab\xbe\x99\xe1\x95\x8c\x03vD\xae\xdd\x00\xc8\x03?^\xa6\xb2\xdd?\xa7\xf5+\xeb\x89\x1a\xcdd\x81\x0b~p\xc5@\x07p\xa4\x8eH\xcf\x15\xa2\xbf\xbc\xb2\xb4\x861t\xc9+\x05\x18R\xa1\x89\xc7$\x03\xc5U|?\xaa&\x9d\xe2\x07\x9a\xfeB\x12\xe6\x0f,\xca\xc7;[p#\'\xb0=+]{\x98\x12?1\xa6@\x98\xfcY\x18\xacgQ\x10\xc5ys\x14xh\xc4\x8c\xab\xbb\x9e\xf8\xc510\xa3\x80<\xa0P\x95\xca\x9e\x98\x1f\x15g\xd2<Es\xd0\xe3\xb9\xb30$\xea\xb2\xb9S\xab\x041\xe7\x80r3P\xba\x8fC\xb7\xea\xd2Au\xe74\x04\xc6\xa1\x80PA\x03\x8c\x0c\x8c\x1a\xb0x\x9fU\x8bU\xb9\x8a(\x01h\xe1\xcf\xef;1oo|b\xab[\x82\x01\x91\xc8\xc8\x07\xfei\xd4\x8a\xdb\x00$\x00\x06\x07\xfd\xa9\x16\xd8\xa0\x12I\xdb\x9c\xd6{\xa8\\\xdc_\xdd\xcdw1]nFp8\xc7\x00\x0f\x8csWvpCim\x15\xbc@\xe8\x8c`o\x92s\xb9\'\xebM$R\xfeYV*88\x00d\x93\xda\x82\xad\xb8\xa8$\xed\xe3\xa7Z]T\x8eHm\xa0\xfe\xb5\xcb\xee\x8d\x8b\x0c\x16=\x8f\x18\xf9\xaa\xf2\xa5\xc0b8;\xe2\xa7\x06\xec1\xf1Dw\x17Ze\xccw\x96\xca\xcc\xc3\x89P\x1f\xf5\x13\xfeGj\xb3\xcd\xe3\x1bY\xad\xf6\xdbF\xc9p\xdc\x02\xc0\xf0O\xf3\x03\xedU\x9d\xcd\x96\x0c\t\xe0d\xfd}\xb1\\\xc7\x1b\x92\xcb\x9cq\x9c\xe3\xfa\xd4\x9b{\xeb\xfbbR\xce\xe1\xa3G8u\xc0;\xf1\x91\x9e\x0f\xc8\xa8\x97\x16V\x97L\x92O\x10fL`\x83\x8c\x8fc\xee+\xc4\x87\xcc\x96w\x90\xe4\x93\xb8\x93\xdf\xe6\xb8\xda\x10\xf6\xf4\x9c\x83\xdf\x14\xa8VVd\x94n\x00\x00\xa4\xf5=\xbf#^\x94\xc9]\xd8\x19\xe9\x8e\x07\xd3\x1e\xf4\x9d$\x004\xe1\x83\x1c\xe7s\xcfsR\xb5o\xce\xd8\x18\xc7\x1fj\xe3\xf7S\xb6\xd9\x01\xf4\xe0\x82\x0e9\x1e\xc7\xdf\xe6\xa5\r\xd6\xab\x14F4\xd6n\x0cDp\x0e\xd2\xc0{n \x91\x8a\xe3N\xd2.\xb5Gq\x1ck\xe5\x83\x87v\xe0r:|\xd4\x95\xfe\x89u\xa7\xc6\x8e\xe8\xb2)`2\xbc\x8f\xcf=*\xd6\xd2\xcf\xa8\x9bI.\xa3\xb7\x95c \x83*\x96\\\x81\xb7nEW\xdc\\\xd8\x1b\x88\xed\xa4\x9a&\x93 \x88\xdb\r\x83\xf1\x9e\rR\xee\xa0w&C+1\x04\xe4\x9fQ?S\xefM\xb2\xa5B\xb0\xc9\x1dH\xeb\xc5L\\\r\xd2zT\x80O\'\xe6\x99}\xd5\x15\x97\x8cd\xe4U$\x9a\xf2@\xc1\xc9\xc3\x1fz\xb6F\x1aFv\xdbj\xe2\x04\x8f\x1bH$\x0f\xc2y\x1c\xd4\x96\x95\xa7j\x13\xde\xc3saq\x1a\xbd\xb3\x00\xc1\xc9\x00\xa9\xe4\xa1\xc6z\xd3\x18\x91\x83\xbe\x13!OQ\xef\xda\xae>\x0b\xf2\x12\xfe\xfa7\xf4\xc8\xc1\x1b\x04\xf5\x00`\xfe\x86\xac\xba4\x0bw\x7fa\x04\x87\xcbG\x97\x1a\x94\x95#\x1b\x8d\xfd\xf26\xaa\xee\xad3\xdb\xd8^J\x8a\x1d\x96?\xcaF\xa0s\xb1\xc8\xfb\xd5\xb7Y\xd2l\xb5{\x14\xf3\xa2\xdb \x07\x0c?\x12\x13\xd7\x15\x8aK\x08\xb6\x9ah\xc9\xdcbvL\x81\xc7\xa6\xb7\xdb\xc1\xe6#\xa6\xd2\x14\xa9\xcb\x0e\xa3>\xdf5\x85\xcbf\xcb,\xd1\xf9\xb9\xd9+\x82s\xc9\xc1\xefZ\xbf\x1bG\x1a=\x9c\x89\x082\x10\xca\xd2p[\x00c#\xbf\xd6\xb3\xbe\x11\x96F\x8e\xea6\x94\xe8R\xa5c\xe4.s\x9c\x1aV\xd3O\xba\xd4U\x96\x0b\x7f5B\xfa\xfb\x0ezu\xe9Pw~\x17\xb8\xb1\xb9i\x8c2\xda\x12\xde\x96\xe5A\xfc\xc1\xad\x1f\xc2\xfa\xbd\xb6\x9b\xe7Z\xde\x00\x894\xbb\xa3\x94\x9e\t#\x18$\xf7\xf6\xab\xc5\xccv\x97PH\x85\xa3\x96\'\\2\x9e\x84T>\x97\xe1\xae\x9d\xd5\xbazM\x1fPd\xba\xdfZ\x1c`\x10v\x04s\x8f\x9a\x91\xd4z\xf5\xefN\xbeh\xa4\xb0\rlH\xd2\xe39#\xb9\xcf\x1fj\xa2xcI\xd35\x1d#\xef\x13\xda\xa4\xd2\xf9\xae\xae[%\x86\xd3\x81\xde\xa2\xfcC\xe1\x84\xb5\x8eK\xcb"Li\xcb\xc4NY\x7f\xdc\x0fq\xef\xdcS\x98\xaeG\x86\xf5I\x8d\xb1-l\xe4y\x91\x03\x92>G\xc8\xfe\xb5y\x8a[\rf\xd9\xda\t\x91\x83\xa1\x05G|\x8c\x1e\x0fC\xf1S,#\xb4\xba\x81\xbat\xeb\n^\xdb\xe5\x0e0\x0b\x15\xe1\xd0\xf7\xf9\x15\x1a\xe6\xe2\xf2\xce\xe5ocy^\xd2l0\x07$\x00\x7f\x94\x8e\xc7\xd8\xd6\x18\xb2\x89\x01\x12{\xe3\x9aBh\xcaG\xbfr\x95\xce0\x7f\x15:\x96\xd9\xe0\x9ex\xdd@\xd8\xec\xa7\x1f\x07\x14\x83*\x80#9 \x9c\x8c\xf4\xc5g\xd2\xeb\xd4\xc9(\xc3\x8c\x8c\xfc\xf1\xbdkt\x82\x01S\x9584\xdc\xb32\xa9\x1f\x96G\x14\xbc\x13I\x03\x0c\x1e\xbd\x8fC\xff\x00zIc`X\tIC\xf8W\xda\xbdB\xea\xa67PA\x1c\xb5M\x82\xf1\xd7\x00\x9d\xc7\x04So\x189\xdboj\x9b\x89b\xb8\x8d\x83\xb2\xb79!\x86\x1b\xf2#\xbdG\xcc\xb1G*H\xbb\x89\x89\x81\x00\xf0x\xa4b\x94DB`\xe0\x1e\xb9\xa5\xf7<\xdb\xd00c\x80pO\xf4\xcdNk\x98\xaec(T\t1\x8f}\xea7\x94Q\x89\xcf\xa4\xd6\x95k{i\xae\xd8\r\xac\xa1\x94\x0e\xbc\x15#\xdf\x1f\xde\x9c\xe9\xba\xa6\xa7\xa0O\xfb\xa6i-\xba\xbcG\x9c}=\xc5e67W:U\xcf\x9d\x13a\x7f\x89{\x11\xedV\xf95\xd8%\x826\x89\xc0~\xb8=\xbd\xea\xeb\xa7x\x84\r\x11]\xe5&\x07N\xb06\x7fo\xfe+-y\xd0\xca;\xacJ$\x82C\x9d\'\x95&\xbe\x85\xd2u\x9b-b\xdde\xb7\x90\x13\x8fRg\x955-_8[\xdf\xcfo$w\xdal\xdeL\xc8r\xe9\xfc\x0e;\xf1Z^\x9f\xf6\x85\xa7\xdc\xc6\x9et\x0c\x92\x00\x04\x98#\x01\xab[\x15\xd4R\x95\x1a\x95Y\xb8\x04\xe07\xd3?\xd2\xb2w}:{\\\xb0Vd\x1c\xed\xba\xfd\x7f\xcdh\x95\xe85\x1f\xa7\xeaV\xba\x94>d\x12\x03\x8f\xc4\xbd\xc1\xf9\xa7\xf5$\x82\x0e\x08\xaa\xe0A\xe2\xba\xae\xab\x81^\xd7+\xb5\xd5\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x15\xe1\xaeM{QZ\xb6\xa9o\xa4\xdaI<\xcc2\x07\xa5{\x93G4}\xb3M5\xedv\xdbC\xb4id`d#\xd0\x9e\xe6\xbeu\xd5\xb5;\xedn\xf5\xd9\xa6oY\xfc]\x80\xa7:\xe6\xaf{\xae_3\xbbeY\xba\x7f(\xa9=\x1f\xc3\xb3\xeaN\xab\x19\xf2\xad\xd0\xfe\xf6C\xd4\xfc\x0f\x9a\xa7\xbb\x9aK\xc70@\t@pH\xd8\xb1\xff\x00\x15\xaa\xb0\xb4\x87\xa6\xc5\xf8\x9b\x92\xa2B23\xb8A\xfej\x06!m\x02\x18\xa2\xdc\xc5[\xd4\xc7\xdf\xde\x91\x94y\xacI \x85\xc1\xeb\x8c|\xd6\x81\xad\xe9:>\x97\xa4\xdd\xcb\xb1\x03F\xb9W\xc9\xce\xe1\xdb\xe75\x9a-\xc8\xb8\x85H@\xaa\x06H\xce2j\x8e\xff\x00\xff\x00J\xe2\x17t-\xa0\x10\xabW\xfd2t\xbd\x8d\xa6\x8d$\n\x1b\x05\x9f\xbdx\xcc\x031\x8dr3\xd4S\x7f[\xe0\x12\xdb1\x92;\x9a\xe5\xa4\x92V(=9\x19\xdc\x07\x03\xe3\xe6\x95\x8c<k\xb5X\x93\xdb<\xd5\x0b\xcb\xa8\x92s\x8c\xfe\xf5~\xa9\xa4\x0e3K\x08\xd2\x14,Pn\xea~\x0fQK\xdai:\xbe\xa3\x0c\x93\xc7nY\x07\x00\xee\x00\x13\xdc\x00z\xd26\xf6\xf2\xcfq\x04\x01\xbf\xd4eB:\xe3\'\x93W\xadcX\xb4\xd1\xad>\xedm\xfe\xb9\x8fd\x08\xbdTt\xdc\xdf\xf9\xc9\xa6KBU\xdege\x89N\x00\x04\x02MG\x9ei\xa3h\xa2\x81\x15\xe5\x90\xe7\'$\x00+?U\x80\xb2\x80\xa3\x7f;\x89\xed\x83\xd2\x91\x95\x83~\xe5q\x8d\xbc\x8c\x1cW6\xf1\x88\xd5Y\xb0N\t\xe7\xe6\xbdU&Gg~z\xe7\xb1\x15K-\xc9\xf2\xff\x00(RF\xf8\xec1V\x8a\xa0\x13\xb98\xa4\xca\x05\xe0\x82}=3\xd7\xb58\xf2\x1eE\x04\x05\x03\xa1\xf8\x1d\xff\x00*Llvo\xc5\xc2d\x9c\x1c\n\xf4>\xc4,Wv\x07\\\xf1\xf1UH\xe1\xa4l\xfeP\t\xcf\xd3\x9a{\x07\x03\x1c\xd2\x8f\tm\xa1\xd5p\x9c\x0c\x1c\x0f\xca\xbd\x10.\xec\x13\x18\xe4\xe1{\xd2\x96\xee[\xcc\xdc\x03`\x06\x1bM\x12\xc2\xa1\xc3\xa1l\x92r:\x91\xf2*\x1c\xd2\t\xa4f\x03V[|\xf3\xce)@\x15\x18\xe3ji*\x92\xe06\x1c\x1e\xf8\xe8j\xf3\xe0\x8f\x0f}\xe1\xe4\xbay\xc8\xb7\x8eO\\A\x8a\xf9\x92\x01\x91\xbb\x1f\xc3\xcf>\xf5N\\r6\x93\xc7\x04S\x9d:MJ\xd2YM\xb5\xeb\xc2$>\xa5\xe0\x82}\xc05u\xd3\xef\xedl$\x8a[\x9bar\x81\x8eP\x9eOny\xde\xab\xef\xed\xae.\xad\xa5\x8a\t\xc4.\xc3\x1a\xc8\xe0w\xe3\x8a\xfa\t\xee\xac\xec\xe2g\x96h\xd1Tr\xcc@\x00~u\x98\xf8\xa7\xc4\x9f\xb6\xa3\x16\xb6\xc5\xbe\xe8\x8e\xa5\x9cp%=\x87\xfe\xd1\xfdMU\x9d\xa4,\xcd3\xbd\xc4\x84\x9c4\x8c\\\xe7\xe0\x1e)\xa5\xd4\xf9C\xb0\x1c\xb2\x8d\xc3\xe4qS\xfa\xc7\x8d.\xfa\xad\xbb\xda\xc3\x10\xb6\x85\xc1WQ\xbb0\xf6\xce\xdfqU\x1d+\xc36\xdd>u\xb8\x92C4\xaar\xa4\x8c*\x9f|{\xd6\x93\xe1\x1f\x0f\x80\xa9\xa9\\(%\xf9\xb7B?\x08\xe9\xbf\xea{W^:\xb1\xdd\x1e\x9ft\t\x1e[\x18\xca\x8e\xe1\xb9\xcf\xe5\x8a\xbc\xe9\xe3\xfe\x8a\xd4\xace\x07\x92\x98R1\x8fH\xe3\x14\xad\xc5\x95\xb5\xea\x84\xb9\x89e\xc7@FB\xf6\xad\xd4\x9d\x02\xd3\xff\x00\xa7\x1f\xa6[i\xd5"+y\x8d\x9c\x192\x1bQ\xef\xda\xb2k\xd6n\x7f\xd6\xc5\xf4\xe5\x8a\xc6\xcc\xa1\x07d\xdci\x15\x84\xf0Ux \x81\x8d\xb8\xc7\x19\xeb\xf5\xaf5\x13\xe5XI\x83\x89y\x1c\xf3\x90j~\xfa\xd2\xdd5\x8b\xcb;u\xccQ2\xf2;\x1cd\x8c\xfcU[R\xba\x8eiQw\x05\t.\xc4@F\t\x1f=\xeb\xc8\xa5\xb6k_\xc4\t\x19Y\xcb48\x03l\xa1\xc1 \xfcb\xbd"\tD\xfeK\xa8!J\xac\x98<\xe1\x86FE^\xfc\'\xa4Yi\xb6p^LVI\xda0GuL\xfb{\x9f\x9a\x96\xd4\xfcYi`\xa4\xbc\xa1}\x94rO\xd0\n\xcaA\xd6\xa4\xb7H \xb8hc=\x02\xe0\x10\t\xf7\xebJ[h\xcbnD\xb3L\xd28\xea\xccwd|\x9a\xb6_\x11\xdd[Y\xc7mel\xb6\xe8\xab\xb9\x1f\xcc{\xb1\'\x15U\'E\x86\xe2\xeeK\x9b\xdb\x9f5\x99\x8e\x95\xf6\x1d\x80\xf6\xa9\x8dC^\xbf\xf1\x04~_\x96\xc9m\x9c\x84\xe3s\x11\xc8\xcf\xd3\xda\x9b\xad\xbb\xc4\x98P1\xdf\'\xfaS\xb5TDa\x80\xbc\xe1v\xfb\x9f\xadp\xc1\xb9\x0c\xd8\x1b=\xea\x86i\xa6\xb9\x91\xae.ey\xa4a\x8dD\xfeQ\xed\xbf\x02\xac\xa3\x11B\x82("X\xe3\x07!G\x7f\x9f\xad3x\xb1\xbdC\x9fW\x18\xeck\x8f\xba\xef\x04\x05\x0b\xd4\xb6:\xe4\xf7\xc7\xcd?\x883\x1c\x90\x08\xceA\x1d:\xf4\xa7\x89\x1a\xb0\x90m \x93\x93\xeeq\xed\x8e\xb4\x9bkq+dq\x83\x859\x03m\xe9m9O\xaf\xbd5\xd3\xb5MgM\x80\xda\xc6\x90\xb4\x01HWb\xdb\xb9>\xc3\x8aR\x0b\xcb\xdb-B+\xd7\x91\xeeX\xa9I76H\x0cA\xf4\xf6\x18\xc7JVa\x14\xca\x06\n\xe7\x93\xcf\'\xb78\xaep\xaa\xc1\xc9c\xb7\x00\x01\xd3\xff\x00\x9a\xb03\\G\xe5\xaa\xddHV"\xa6/Q*\xb8\xdf \x1fj\x8b\xa6\x0627\xe1\x904\xa0\x896\xdd\xb3\xf3V\xa5\xf1s<k\x8bY\xc6x\x19\xe2\xa1u-v\xfa\xe67D\x88F\xa7 \x92\xdb\x98\x83\xc7\x18\xe9L\xe4\x9bjc\xf0\x92;\xf5\xc7Jh\x0bHT\xb1\xc6s\xc8\x00\x7f\xe1\xa97\xdd_\xa8]D \x92\xf2F,\xb8$\x006\xe2\xa3[\xf4\xeb(_\xcc[U\\\x1d\xb2I\xa6\xf0\x81\x95\x04\x1e\x01\x19\xcf\x1fZ|\xb3aB\x14\xc0\x1dry?#\xfe)\xa8\x1bX\r\xf9RN\x01\xc6rk\xb4r]\xd4)\'\x8eH\xef\xf3T\xf6\xce\xd0iU|d\xe3\x8d\xce\xdcU\x84\x809\xc9\xdf\x1b\xf3]\x18\xe5Y\xe1\xb9\x82S\x14\xc9\xddH8\xc8\xe7\x83R\xc3\\\xd76\x8f\xfa\xd8\xc0\xc7Q\x12\x83\x9f\xce\x98\xb0b\xbc\x8cc\x9a\xf0FN\xd0J\xfaW\x18?<\xd5\xacw7P\x19\x04\x17\x13E\xaf\x04\x88\xe4d\x04\x9d\xb3\xb6=\xaa4\x91\xc30_:\x18\xa4\xd3\xb0,\xa1\x88\x1e\xdb\xd7\x93\xc9=\xd4\xad%\xcc\xcdp\xd9\x1b\x0c\x9d\x87\xc0\xe8?*\xe0\xc6\xac\x00P\xdf\x078\xa5\xb7a\x86\xe4\x05\xb1\x81N\x13j\x84$\x92\xbdI\xf9\xa6\xc2\t\xa4b\xed\xa8\x96\xcb3\x0c\x9c\x93\xdc\x9a\xee\xbf-T*\xe0\x0e\x00\xd8}\x80\xa6Q+\x80\x18\x9c\x8cdc\xfe\xf4\xb9B\xea\xac\x15T\x9c\x06o\xa5.\xd1$AX\x12\xaa\xde\xc3\xfaW%\xc2\x93\x81\xc7a\xfd\xff\x00ZxF#\x05\\\xe3\xdcs\xf7\xf7\xc5$\xc8\\\xe5G\xf6\xa6\x12\x02\x031A\x8f\x83\xd7\xb7\x14\xae\xc0\x02\xb0\x1b\x81\x07q\x1c\x10GN=\xa9fR\xe4\xf2\xa78;O\xc58\x85\x93\xa3\x0e\xdc\x13H\x8e(\xcb\xe0\x10\xa1\xb8f\xf7\xcdu\xa4!A\xc6q\xc8\x14\x8d\x9e\x9fu{#\x04\x8c:\x8f\xe3\xc8\x00}I\xab\n\xf8b\xe9\x90\xe6XCg\x8eI\xfe\xb8\xa8\xfb\x0b\xdb\x9d\n\xe1\xe4\x8dE\xc5\xb4\x87/\x18\xe1\x80\xf7_\xf8\xad\x02\xd7X\xd2/#W\x8e\xfe\x1c\x11\x9d\xac\xc1X|\x10pEj\xba\x0fN\xe8\xf7\x11\xc9\x15\xe4\xa5nA:\x92G\n\n\xf6d=\xc7\xf4\xaa\x1e\xad}\xd4\xa0uh"\r\t\xc6\x97U-\xbfp\xc3\xb5g\x9a\x86\x99yd\xd1+\xfa=\\\x1e\x180\xee2\x7f\xf9\xa6L\x17\x078\x1b\x98\x1c\xe7\x8a\xb8\xf8\x9bV\xb0\xb8\xb7\x8a\xde\xded\x96E\x983\x15\xf5\x05\x00\x1e\xe3\xbdSe\xda\xf27\x1b\xb0r\x07o\xd6\xab\xba\xd5\xbd\x95\xa5\xdc\xa9i:\xcb\x1f\xa4\x03\xa8\x1d\xc8\xdcd{T\xde\x9b=\xcd\xc5\xacR\\Bcs\x9c\x8cc#<\xef\xef]\xed\x1eQ\xd8F\xe3\xee:\xe2\x9a\xac1"\x82\xb1(\x93\xaf\x03\xdc\xf3\xc9\xa5\xc6$PpJ\xe7\xd4z~\xb4\xab\xc1#\xac\x9e[lb\xb8R\xdd\xb1\xd3\xf4\xaa\xf3\x1a\xcc#eP\xd8]\x80\xdf\x1f#\xe6\xa7\x07\xd1\xb1ld\xef\xff\x005d\xf0c\xc5"_\xab\xb2\x9b\x85\x98eI\xf5\x14\xc7\x18\xf8\xcej\xc3\xac\xebv\xbaL,\xce\xcagpD0\x83\x92O\xb9\xf6\x02\xb3\x17\xb4q$s4\x8d\xe7\xa0\x1f\xbdS\xb1\xb7w\xe4v\xa7\x1ftDfw\x91\xd9\xdc\x8d\xce\xe7s}sZk~\xbf{g\xd3\x8d\x94\x16\xea\x1e<\x81p\xed\xc0bH%q\xf9\xbe\xf8\xaa[\xae\x8dku\xd4\r\xd4\xb7\x0c\xc8\xd8& ;\x80\x063\xed\xf6\xa8\xf9\xadWPI\x8c\x84\x9f;\x92\x01+\x8c\x9c\x93\x91\xd2\x9eG\x19U\x1eP\\\x1e9=\xc7\xcd(\xe5p~\xa1\x08\xed\x9fsK\x18\xc4\xc3o\x19\x03\xd4>:U\nF\xa5\xb6:\x9f\x9c\x83\x82I\xfa\xd5\xcbJt\x80v_n\xc2\x98\x95ee*\x99\xe0\x8c\xfc\xf5\xfc\xeb\x82\xbc\x80\x17o#\x808\xfa\xfd*F8\x8ce\x88S\xeb\xeb\xf9\xf5?Z\xf7\x04\x9c\xb0 \xb1=>\x0fZ\xe8\xb6\x04rFNq\x8e\x00\xdb\x9f\x9a\xe7\x9d\x83\xb0\xce\xdc\xe6\x99\x88B\x16P\xa3\xdf$\xf0i\xa3\xc3"\x89\x98\xc5\xbbkr\xc0\x92jY!\xf57\x1d\xf9^\x80\xfc\xfc\xd3\x9d2\xdf\xef\xfa\x82\xc3\xb8\x81\xb0\x92F8U\xe0\x90}\xcfJr+A;\xc7\x00\x04<\x8eU1\xeev\x15\xc6\xba\x10\xa4\x921\xca\xa2\xeac\xf07\xaa\xee\x19G\xe0\xf5v\xcf\xf7\xc5/\xb1Z2v\x8d\xe3\xa7\xfe|\xd6\xbe\xba>\x9e\xe8U\xad"<pJ\xf3\xfa\xd6}\xabi\xd1\xd9\\\xbcj8+\xb9z\x92\x07\xc7\xd2\xado|/?L\x84L\xd3$\xa8}$\r\xb0{Uu\x8f_\xb7\xea34K\x1b\xc6\xea23\xbeEU\\0b\x08\xc9\x04dv\xf6\xa5z\xa3\x03\xc7 \x8c\x9e\x86\xa7`\xd0\xef\xae \x13y!\xb7\x9c\x8epH#\xe6\xa3&\xb5xd\x91$@\x8c\x01\xeb\x9e\x0f\xb1\x15F\xf6\x17PF\xb24.\xa9 \xf4\x97\x04\x0c\x1f\x9a\xb8K\xbby\x99\x91%Fd\xfc\xc0\x10H?J\xbc\xf8VH\xa3\xd2\xad\xd4\xa6\x18\x16W#\x9fVy5)\xae\x08\xc6\x9bvX\x8cy,s\xf4\x19\xac\xc6\xcfP\xd54\xcf>\x08|\xb7\x85\xd8\xb8W\xceQ\x8fR1\xd4\x1fjV}GS\xbd\x80Cq(h\xf2w\x18\xf8\x04v\x1e\xfcV\xa2\xcb\xc5\x11A\xd2\x85\x83Y\xcae\x8e\xdf\xca\x04\x80\x17 i\xfd+7q\xe1\xe9\xa5\xea\x86\xec\\ \x8d\xa7\xf39\xc9\xc6s\xb7\xcdE\x0c\xc8\x18\x81\x97\xc78$W^Z\xed\x07vs\xc6\x0f\x1fCK\xb49\x8c\x15\x03\x8f\xc4q\xef\xd2\x9a\xf9~Xb\x10\x92\xc3\x83\x9e8\xf8\xacQW@5(9\x04\xe7\x7f\xd8\x0f\xd2\xb5\xc1\x83g\x07\x1b\xf1]I\x96P\xaa3\x8e\x0f\xc7\xcd7\xc4\xab*I\x13\x98\xd9\x0eRd<\xa9\xff\x00\x8fq\xde\x9e\xa4\\g\x18\xe7$\xe7\x93\x91@\x8c\xa8$\x0e;\x83\xd2\x9c\xc3\xb1\r\x821\xc1\xfaP\x1d@+\xb1\x1e\xc7\xe6\x9e6\xbf\xae\xa5\xb8\x8c\xc9j\xfe\xd2\x84`\xdf$.q\x9a\xaf\xa4l\xa5\xcb\xee`A\'\x9eC\x1e\xff\x00?5(#\x05v\xe7\'\xa8\x1f\x1e\xc2\x98I\x1b!|\x1e\x9d\xb9\xe2\x9c\xb8\xb9\xba\x94\xc2ev\x91W`\x19\xb3\x8f\xd6\x9b\x82\x0bx|\xc1\x14I\x19c\x93\xa4c4\xd8\x19\x02\x9d\xc8\xb2\xa6\xe0v\x9aU\xae\x9cF\x16\x19\x1e"r\n\x86 \x01\xdb\xbd*\xaa\xa5H=\x18p@\xc1\xa7_\xb0\xf5?(H,\xe4e\'%\xb1\xc9\x1e\xf85\x1a+{\x99\xf5\x1bh\xa5\x93B\xee\x11K\x15\xf9\xdb\x8avIm\xe3\xd3\xe7H\x89\x93\x81\xac\x80\t\xfb\xd4\x0b\xc0\x15\x9cow\xce\x0b1\xc9;\xbb\xf5\xcfC^\xc1y{`\xe5\xadf1\xb1\xe0\x9e\xbd\xa9\xf6\xcf\xdd\x100@\xdd\xf5\xcd4\n\xb99\x1c\x7f\x9fzm\xce\x1a2\x17I\xce\xa0T\xe0\xa9\xf8<\xd3\x9aU\xd5\x95\x80a\x8c\x10FA\xfbR$\x99\x83H[,\xcd\x969\xc9$\xf5\xcd2\x9a2\xa4\x1c\x121\x9cg\xb59 Gp\xc7$\x0fa\xc0\xe6\xa5\x06\x9f=\xd5\xb3\xdc%\xab\x18\xd0r\xd88\xf6\xfe\x94\xf2$\xb7%\xc2.\xb2\x01>\x9d\xce\x06\xe4\xd7Y\xd2 \xa5\x98(8\x03;nx\x15X\x03y\xc6pEz\x07%[\xd8\x8c\xfb\xd3\xb1\x08F\xcb\xc7\xf8{\n\xf2H\x8bgiRp8\xf9?\x1dk\x91M$`d\x82G\xf4\xa5\x10\x0f\x14\xcf\r\xb8\x9e=<c\xdc|R\xdb\xe3I\x04\x81y?\xa8\xf8\xae\xdd\x15\x19A\xc3q\x90~GQMJ\xa9f\x0c\xb8\xf9\x15c\xe6\xba\x90\xc8\xc3#\x91\xfe)\x92\xa0\x8d\xc5H:+\x02y9\xe7?_zJ\x17{69U\x90\x13\xdcpEwn\xca0$rSp\xdd\xd8\xe3<\xd6\xbb.\x85\xa3j:\\\x07\xcbEB\x83d\xf1\x0c:\x1fs\xfc\xc3\xebZ\x0e\x97\x13\xf57\x7f&TI\xa2MX=\xfboT\xddJ\xfa.\x9a"\xf3\xa3v\x8eF\xd2YFqY\xc5\xa4\xe8X4NG9\xf2\xcfa\xf1J\xdc\xdb\xe0\xfd\xe6\xd7*\x7f\x8dO\xc5Fj\xdau\xc6\x89zb\x9c\xe4\x0c4r/\xe1e=\x18\x1a^\xdbP\xf2\x88u9\xe0\x86\xcf \xe6\xac\xe1\xb9\x04\xbd\xb5\xc4e\x1d\x1b\xd4\x0f \xfb\x8abHVTI\xa0`\xe8\xeb\x91\xec\xc0\xf6\xad;\xc0\xf6\xfa\xc5\xd5\xd4\x171:\xc5\x0cG\x13\x02s\xb9O`+i\xaf\x9e\xb4\x1dj]\x06X\xe7\x89\x83\xdb\xcb\xc9Pzg\xb1\xad\x87B\xf1-\xae\xb9\xe6*\'\x96\xcb\xc8\x04\xe7"\xb66r\xa3\xc2\x8b\xe6\x12\xe0z\x83\x1c\x9f\xa8\xf8\xaf>\xeaV\x92Aq#\x88\xf1\x11>\x96\x03o\xa1\xf9\xab%z+\xca*]WWb\xbd\xaek\xaa(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a+\xc3^\xd74QI\xcb,pF\xd2H\xe1UFI\'\x15\xf3\xcf\x8b\xf5\xf9\xb5;\xc9v\xb11#m\x89A\xebV\xbf\x1d\xebm,\xe2\xce\x19\x08H\xf3\xbf\x07\xa9\xac\xa6/\xdfN$a\xe9\x8b\x80=\xcdV\xf5\x0b\x9d\x0b\xe4!\xc37\xe6>\xc2\xaf\xfa-\x96\xb6\xfcT\x80\x15_\xc8>}\xe9h\xf3k\x1a\x87\xe5\xd8\xe5\xbe\xbf\xf6\xa9\xfb?\x14\xdcYi\xd2@\xb6\xac\xc9\x1bev\xe0\x16\xcfj\x89i#\x9b\x0b\xe5\xf2G\x19\xe9I$m\xb4\x95O\xc2\xd9\x00\xf5\xcdQI<\x91j\x11J\xcb\xa9J\x82\xbc\xe3\xefZV\xb6\x86\xe9@\x9e-X`\xc7\'\x1b\xd4]\xf5\xfe\xab\xafL\x8dy\x98`S\x94\x80{\xfb\x9f\x9a\xe9`DT!\xc1\xe3\xbf\x7f\x9a\x9a{+\x98YZ{g\x886J\x96\x18\xcdD\xdd\xb7\x9b\x80\x8b\xb7\x93\xb7=\xf3\xefY\xe9\xc7\xe1\xf5\xb4\xae\xcd!<\xbeu\x1f\x9a\xb9\xb5\xf2\xf4"B\x15c\x03m8\xc56R\xccv\x93\xe9\x1f\x88\x81\xd6\xbbU!\x81U$s\xcf\xb0\xf8\xcfzZ\x18v\x85\x0e\xb9\xcfq\xd34\xe1\x960\xcc6\xf0\xbf\xe3\xfe*\xbbVF\xa6\xf7\xdbz\x9aH\xce\x0533\xcf\x1c\x91\xfd\xdeS\x1b(\xe1\x88\xce3\xedH\x08\xa5\x92V2\xca\xd236\xe6\x91\x87$\xfd)y#$\xa9.q\x9c\xe0\x1aV8v\x12\xe0\x8d\xc7\x18\xdcp\x05UL\xded\xa0\x90N?\xf3\x8ayp\xa3#\x19=\xf1\xbf\xebMf\x0e\xaf\xc2\x9c\x1e\x00\xef\xc7\xbdx\xcc\xa3n@oH\xc8\xa9\x19\x02;z\xb0Nx#\xa55\x11\xc7\x93\xd01<U}\xcc\xa4\x12\xa1\x81\xc9\xc8\xcd=\x19\x18\x19\x07aH\xa7\x98\xc1p\xbbs\x9c\xaf\xbf\xc5u\xbb$D\xa87\x9d\xa3\x93\xd3\x9e\xa7\xd8WJ%\xdcB\xb3w\x03\xde\x9c,.\x8b\xbd\x88g\x1c\x13\xf8\x8fj`;-\xbb\x1f_\xa8a\xb3\x8f\xca=\xa9{j\x1c|W\x92\x16\x8dv\xa6\x17\x80\x18\xe3\xff\x00?ZA\x0e\xe0T l\x0c\x9e\xbf\\R\xd2\x06\x9430nNpF0;Rq\xc6\xa3q\xda\x0fL\x9c\xe7\x15\x05[T\xdf\xf6\x8c\xfe\x9fJs\x85\xf9\xae\xd4a# m,\x7f\x0f\xcf\xc5<\xb6U@\xa1\x17h\x03\x07\xdf\x1e\xf4\x92/\x98\xa8\x15x\xe3\'9\xc68\xa7\x8aZ,\x8fS\x12F9\x19\x1f\xf6\xa5\xbb\x19$\x0f\xc2.4\xe1y\xa6\xd8\xe1H\xee~k\x92\x8a\x85\x89\x07\x03\x90~\xb5-\xe1;{K\x9dz\xd0J\x14\xa8\xdf"\x83\xd0\xba\x8c\x8f\xf9\xa8{\x95|\x01\xe6\x1c\xfb\xfb\xe3\xb1\xa8\x96\xb9\x9e\xd6\xe5&\xb7,\xb2#oV\x1d\x9a\xa5\xd8\xcc\x96wv\xd3<\x01\xd6\x19U\x8a\x1co\x83\x9cT{\x98\x9e\xe6\xd6x\x96R\xad$l\xa1\x87bF3_N\xb3\x05\xe0\xd4V\xa7\xa9\xdb\xe96\xd2\\\xce\xc1x"4\xcf\xa9\xdb\xb0\x15\x9b\xc3\xe3_\x11\xcf\n\xc5\r\x84\r \x00y\xb9\'$\xf7\xdbP:\xb4\xd7\x92B\xf7w\xd7-,\xe4\x15\\\xf4_\xf6\xa8\xed^\x8f{\xe38\x1a\xdeF\xb2\x82S&\x82|\xc9\x17J\'\xf9#\xda\xb1\x16>\x16\x9f\xcfE\xbb\x965MX\xd2\x8d\xa9\x9b\xf4\xe0R1^\xa5\xe3\xdd\x01\x99\x0c\xa4\x99\x19X\x82\\\xb6q\xf9W\x06\xce"\x88\xa6\x01\x95l\x85a\xca\x9c\xf0Fz\xd2\x1a<\x01a\x19=r\xcd\xef\x93\xda\xa5Y\x1c\x9c\xb2\x8f@\xc8\xc0\xe9^b\x0b\xcb\x1a\xbb\xe5\xb6\xc0 \x0e3\x93[\xa7+\x14\x8c\x88p\x01\xf7\xfbWi\x1cq"\xaa\x81\x80rO\xc5:\x08H\\\xb0\nz.1\xce\x7f\xad7!Y\x93\xd5\x8c\x1c\x10:\x1c\x8ay\x94T8Q\x80\x08\xe3\xaf5*8\xce\xa3\xac*\xa8\x03N\t\xdf\xf4\xfe\xf5\nF;\x1d\xc9\'zdv\xac\x921\xe4\x01\xc1\x1c\xe0\xfeu\xce\x00C\x90\xac\xcc\xd8\x07\x188=i\xc8\x84;#\r\xc4\x0f\xa7~\xb4\x10 \x0e\xc5:\x0c\x06\xeb\x9ak\xca;\x97\xd9}[\xe3l\x1d\xe9Z\xc6\xc0nv\xda\xa3\xb7\x95;@;p\xd9\xff\x00\x8a\x7f\x1b0\\3o<m#\x9cv\xf8\xe9IJ\x04`&6\xe4\xe0`\x8c\xfe\x95b\xf0\xd6\x9b\x16\xa5u(\x98\x1d\x90(\xdc\xa3\x82Y\xbb}8\xa9\x1d2\xc2{\xab\xe8m" \xc9!\xc0\x07!F\xd9?\xa0\x19\xa6\xaf.b\xb7\xb6\x92\xe2A\x84A\x93\x8d\xc9\xa8I\xe6\x8e1\xc2\x03!8\xc9\xcf$\xf3\xedMU\x1d\xc8 \x8fW_l|V\xafy\xe1}2\xe6"\xa9\x08\x89\xc6J\xba\x93\xc1\xf7\xc1\xebY\xdd\xdd\x94\xda|\xd2[\xc9\x8f1\x08\xe9\xd0\x8e\xc4|\x1a\xb8\xeb\xbe\x1f\xbe\xe9\xad\x1b\xdc\x84hX\xe1^,\xe078<\x1c\x9a\x81\xd3:\xc5\x9d\xfa\xb2\xc3\xa9d]\xd9_\x9c{\x8ev\xa6Rgn@\xdc=\xfd\xb1\\\x01\xb5\x8b\xf1\xc8\xe8\x07s\xfd\xe9uU*X\xa1+\xd3\x07\xfe)wOFBs\x8e\x9c\x0e\x95E\xe53\x82\xe1\xb1\xe9\xd4\xa3s\x8f\x9a\xb2.\x17\x0b\x8e\xf8\xa6+\x1aeX\xaa\xfaOq\x83J\xa8U\x04\x94=3\x8f\xfc\xefN\x04rD\x81\x97\x04\x94\x05\xbf\xf3\xbdz\xc5\x80V+\xd0\xf4<\xff\x00zq"\xf2\x7f2\x95`3\xba\xe4o\xb6sI2j\xe0\xe4q\xcd&\x19\x91B\xe7p8%\xbf\xb8\xae\xd8\xb9\xd8\x08,Fp=\xa9\x7f\xde\xb0\x07nq\xc7\xe5\xde\x96\x11\x84\xf2\xdd\x95[\xb7\xd3\x15-"g-\x86`\x98\x1c\x8d\x80\xcf\xdf4\xc9\x91Ga\x93\x9e)\x82\x02\x8b\x99\x17\xd5\x8c`u\xfaR\xf1\x95\xcbc\x1e\xff\x00#\x14\x16\x1b\x80\xc0\x0cs\x9fzT.Q\xc9N{`\xe39\xe75\xd8\xd4\r!_V\x90y\x1b\xec;\x9fz\xe3\xb6FH\xc6k\x87bP\x96\xe5Opz\x0f\xa5!\x1cq\xb0RS\xafl\xfb}i\xee\xdd\xc7\x00`\xf4<g\x8a\xec\x85>X\xdb\xc8\x18Rx\xe9N\x18\xc3\xbe\xb2\xca@\x00n3\xb94\x81&\x91\x80\x08\xfa\x1aA\xe3\x04(\xdf\x92s\xc0\x1c\xae>{\x83H\xf9g\xbfn1\xfc\xd4\xf7\xcb\x120\xc3\x801\xdf\xa0\xf8\xa5\x1e%\x8c\xa2\xa6\x08\xcf\xe1\xf7>\xff\x00\x14\xf7\x92\xb2\x92\xec\xa3H ls\x9f\xb7\xefI\x12\xe9\xc0\xce\xe6\x84S\xb5\t\xdd\x85\x1c\x0cq\xed\\\xcf\x1d\xbb\x8d\xaf\x0cn\xdd\x89Q\x93\xb7\xf2\xa7?\x84\x85\x00\x96\xdb\xea\xe3\x81\xef]L\x9b\x99H\x8dJ\xfb\x83\x81\x9a\x9c\xe9\x98\xd9\x06\x08\xd8\x1c\x8d\\\xedQ\xfc\xcc8;\x8e\xe3\x07\x15\x1ecU\xdb\x88\xc0\x07\xa7A\x8c\xf6\x15\xd2E\x08\xdb\x9c\xe0\x8c\x901\x91\x9f\x8as\xe5\x9f\xdd\xf0\x06O$u t\xaf3\xb7;\x86F\x08\x03\x18\xc52"T*Xm\xb6\xc4}\x0e\xff\x00\x14\xbf0\x9e\r2\xf4\xa3\x1d\xa3 \xf5\x03\xbf\xe5J\x14%\xd93\xd4\xe5ry\xfa\x0fjT\x05\x04\xfa\x98\xb0\x18\xcfn\x7f\xe2\xbb\xf2\xf7"\xeeR\xb9$7\x1d\xfbWQ\x01\'\x18\xeep;v\xc6iE\xc0\xc7\xf5\xa4\xd7c\x8e\xa4\x93\x80\xc4s\x83\xeci#\x11\x00/PNw\x1eG^\xd4\xbe\xdc1!GQ\x93\xfc<{\xd7x]\x9b\x99\xbb\x13\x9e\x0e3\xd8\xe6\x9d\xc6\xb05\x00\x08\x07\x7f\x8c\xd2u\xe9;\x1d\xb6\xda\x90\xf2P\xb1\x0b\x86^\xaa29\xc7\\\xfd(\nD\xa0\xe1\xb2y\x18\x1d\x8f\xb58H\x8b7\xa7\x1dF\xd3\xd8\x0f\xfc\x14\xe1"\xd8\xbe\xa6df<\x021\x93\xf5\x1d\xbe)k\x00r\x08]89\xd48\xdb\xb7\xf8\xa4\xb4\xb8\xceNv\xc6;\xd3B\xab3m\x03\x0c\xbc\x13\xb4\x83\xd7\xbdw\x1ch\xe9) \x1d\xad\xe9\xcey\x00\xf1\xc9\xa5&\x90!\x122n\n\x0e\xe5\x03\x07\x03\xfc\xd4\xc6\x95\r\x96\xa1j\x92\xab\xee\xder@\xe3\x03\xa61R\xad\xa2In\x84\x1a\xd0\xca\xea\xc4\x021\xa8\x01\xcf\xefQ\xe7\x9f\xc8\x87\xcc*\xda\x01\x03#|\x1a\x852\xa9\xfc\x08C\x00\x01by\xfc\xab\xdd\x0ee\x83^\x8dd\xe3\xcf\xb7x\xd4\xf6\xdc\x08o\xd4\xe2\xaeR\xe8\x96\xb2(19R\xa3\x8c\xf3T=~\x19\xecL.\xb0\xb9x$WG\x18\xe3o\xf5\xe6\xa6_X_t\xaf.\xf6L:\xdb\xc8\xb2zG\xa5\x82\x9c\x91\xb7\x04\x8ab\xd2\xee\xd7\xa9\xac\xb6\xa8\xc5ZX\xd9p\xdb\x10H\xd8\xef\xf3Z\xba\xb0\xc0\xe7\xb5g^,q,\xb1\x81!Q\xe9V\xff\x00\xeels\xf9T\xd4\x9e#\xb1\x9e\xd1^\xdeU\x92F\x00\x84\x1c\xb6H\xe8Gj\xa7K\x04\xb7v\xd3\xbc\x92\xfa\xe4r\xc5\xcf\xbfl}*\xd3\xae\xf5{k\xfb6\xb6\xb4u\x9f\xcc\x8c\xb1u>\x91\x81\xb0\xcdWt.\x9b5\xad\xd7\xe2.\x14\xc7\xa0\xe9\n\xc3rMh\xe6\x00\xb1\xa7\x96\xdf\x85\xb0>1\xd2\xa9\xbe P\xf3\xc2\xf9\xf5\xc8\n\xb0\xf7\xc7z\x9d\xd2\xb5\x1f\xbci\xf1\xcc\xfc1\x8f\xd43\xfci\xc1\xc7\xe9U\xfb\xc6]B\xe31\xb6\x0cY\xc0\'\x1fSNuY\xe0\xbb\xe9py\x03&p\x8e\x89\xf00x\xfaQ\xd2\xa1\x9a\xdf\xa8M\xe6q\tef\xfa\xf6\xfdj\xbd$@\x80v\xf2:\xf6\xcd1\r\xe5\x02\x02\xb2\x82\xc0\x92s\xdf\x8c\xd5\x87\x0e\xa4\xee\\\xe0p8\xcf5\x1e\xe8\t\xc1L\x93\x8cg\xb7\xd6\xb0w6\xa0\x95tb\xad\xb8\xfc\xbf\xde\xb60\xcf\xc8a\x91\xb7\x06\xbc\n\xccp\x07Pq\x8e\xff\x00Jeq\x17\x90\xdb\xceOl\x0f\x8a\x93\x81w&Cg\x03\x93\xf3\xd3\x15\xc5\xcd\xb4\x8d\x11*9\xe3\x83\xd6\x93$\x06H\x19\x82\x12t\xeaR7\xe2\x84\x94$\x80\x12\x00\xce\x08\xa4\x11\x13\xca.?\x11\x19\xcfz\xe8"\xb0\xc8\x8c\x9e\xff\x00\x9fz\xf6\xc5=%_9\r\x83\xf4\xa7\xb1\xacjO\xa0\xfa\xf8V\xf6\x07\xe9K\xb7\x8f\xcd\x8a& !+\x82=\x8drI43\x8c\x93\x83\xb7\xd2\x99\x94,\x14\xed\x18\x18#\xdc\xe3\xde\xbd\xbd\xb4Te\xde\x83\xf7\xaa\x1b+\xd3\x9e@\xf8\xa7;IB\x02\r\xc4p;\xe3\xebR\xb6\xfal\xb7\x1ar\xdd\xbb\x9e\x06\x122I\xca\x8fl\xfb\xd4\xd8m\x8d\xcaK\x12DY\xc4Z\xf5\x0e\x00S\xb99\xc7\xbdF\x96\xe9m\xccn\xf2\x05R\xfa>In*\xa3\xe5$\x0f\x0c\xb2\x01\xb2)\x11\x8bv \x10O\xf4\xad\x88\x04x\xd5\xd4\x82\xac\x01\x04{\x1a\xccf\xb6Y\xa3\xd82T\xf3\xf4\x1d\xeaW\xc2\x17\xf7\xd2Esa$\x06E\xb5 G#\x1e\x8az+\x7f\x8a\xb1\xf0\xdfR\x1d.\xf5\xad\x9a\x12\xcbv\xa3C ,u\xc6\t\xc1\xc0\xe0\x83U~!\xb3k\xfbD\xb8Y\x006\xe4\xea\x0cp4\xb9\x03;\xf7\xcdE\xf8\x9a\xc9-u\x04h\xe3\x01.\x14\xb3\x01\xc0\xdc\x0e\x0f\xebU\x99 \xc6\x0eU\x89\xed\x8ekN\xd7\xb4I/"Y\xc4\xa7\xcc\x85\x0e\xd8\xc8\xe3\x1dN\x0f\xbdg\xa2<\xef+&F0>\x0f\xcdVx\x93\xa7<\x1dJ\xe2Clc\x8a\xe0\xeb\x8c\x029\xc7\xab\x8f\x9e\xd5e\xd0/V~\x9f\x02\xf9\xfed\x90\x8d\x12\x1d\xfd\xf6\xfd\xbb\xd4y\x83$\xf1\x85\x1c\x0c\xf3Z\x97\x87\xad\xd7\xf6D\n@%\x10\xab\x83\xd0\xe6\xb3\xd8\x127\x93\xf0\x90y\x19\xec>j\xd3\xa5\xea\x7f\xb2\xdfd\x830\x90\x01\x03\x9e=\xc59\xe1\x89\xed\xfa}\xfa\xdcJ\xc3\xcbd1\x13\xfe\xdc\x90s\xf4\xda\xb9\xe2\x18&\xbd\xb11E\x9f1\x188\x1e\xf8\xdb\x15O\xf1\x16\x95\xfb3PdE\xccS\r\xd1\x9e\xf8\xce\n\xfdE@y\xa3\'r\xe0\x81\x82{\xd5\xf3\xc4\x9a\xae\x9d\xa9%\xbf\xdd\xa5Y|\xb7m\xddr\xb9\x1cU-\xe2b\xe5\xb0\xb8Q\xc9\xcd@\xeb\x90\xda\xc1\xd4.\x7f\x05*\xbc.C\xa6\x93\x95\x19\x19 \x11\xd8\x1a\x9f\xd2&\xb9\x96\xc2\xdd\xae\xa3e\x98)W\xd40N\x0e\x01\xfb\xd2/\x1a\xb2\xa9\x08H\'4\xdd\x83:\xa9\xc0 p\xb9\xeb\x8a\x90I9un\xe4c\xfe\xd4\x8c\xc8\x19\xb8\xc6\xe1\xd0v\xfc\x8dUG2\xaa\x1c>G\x18\xe3\x8a\xb0 \xe7\x8aA\x11K\x82\xa7\x95\xe0\x8f|\xd5\x97E\xf1\x0c\x9aR\x18d\x05\xadI\xfa\xf9y\xff\x00\x1f\xda\xab{\t,s\x82F\x0f\xcek\x88D\x92L\x10\x02p\xd8+\xef\x9e\x06*M\xb5\xdc\xf6\xb3\xc74\x0e\xd1\xc8\x0e\x01\x1d\xc1\xed\x8f\xebQnm\xe1\xbb\x85\xe2\x99\x03\xa1\x1b\x83\xdb\xe6\xb4mm-\xb5\x8d8\x84a\xba0^\x06\xea\x06z\xaf\xd0\xd6^\x88\xe9#c\x1b\x0f\x07\x1dA\xab\x83hz\xde\x9dn\xf2nT\x88\x8c\xbad\x1d\x9f?\x15W!\xf7\x15\x19\x19\xceMi\xba\x85\xdd\xdc\x92[Msf\xd6\xf3\x85\xc1\xdb\x1a\xc0\xe0\xe2\xaa:\\\x11C\x14\xd1Ct\xb3B\x1f+\x83\x9d9\xe4T\x95\xac\xb1@\xe06YX`\x8e\xd5f\xd1\xb5C\xa6^\xc5\xfb\xe0\x8b\xf8\xa2\x7fq\xecj\xa1o\xf8|\xa6\xe0\xf68\xa5\x12O5\x1a\xde\\\x07BJ\x1e\x86\xaezwQ("u\xc6s\xe9\x1d\xbeA\xa6/\xecR\xe1$\x8d\xb3\x820}\xc7\xc8\xaf\xa8\xb4\xcdn\xc7R\x08\xb1\xca<\xd2\xb9(\x7f\xc5L\xd7\xce^\x1b\xd6\xfc\xa9!\xdd\x95\x9a\t\x07>\xe2\xbe\x8a\x8d\xc4\x91\xa3\x8e\x8c\xa0\x8f\xce\xb6\xb6\xf7\x11]@\x92\xc6y\xd9\x97\xfd\xa7\xda\xbc\xe6\xea\xda[;\x89 \x90~]\xd4\xfb\x8fzPWB\xb9\x15\xd0\xa7\xa9\x8a\xf6\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a\xf0\xd3K\xd9\xbe\xedis6?\x04l\x7fAN\xcdT|c\xaa~\xcf\xd2\xda5?\xbc\x9c\xec\x1fN\xf4d/\xa8\xf07?j\xe8Vr\x11\x7f3\x1c\x0f\xa9\xac\x13V\xbdi\x9ak\x82\xc4\xb31\xe3\xdc\x9a\xefO\xb2\x9atKx\xe3\x0c\xec2\x7f\xc9\xcd4\xb9\x02k\xdbhq\x90[\xccq\xf4\xa9\xdd\x1e\xe9-u8\xd9\xcf\xa4\x86S\x8e\xb5\x95\x0e%\xbavw\xd8\xbe\x82~\xbb\x93[\xad&\xde\xcc,I\xeaH\xf5(\xfaqHjZd\xbaCA\xe7:\xb0\x97\xba\x83\x95s\xd0\x1a\xb2\xf8OO\xfb\xc5\xec\xd7R\x00\xd0\xdbF\x0f=\xe4\xed\xfaUo]\xd6F\xa7t\x88\x98\xf2\xa0\x93s\xf7\xcb\x0e\x02\xd5\xef\xc2\xe5a\xd0\xcb)\x19\x96\xe5\xf7\x7f\xf6\xf6\xae\xf4\xe3os\xd4e\xf2\xc90\xc6K&{\xe9\xdb\xf4\xcdG\xea\x13]C\xd2\x15\xa5\xdaip\x87\x1e\xcc\x7f\xc5W\xfe\xd0\xee\x9e\x1d2\xd4o\n\xd2\xdc\x82\x07r\x14d\xd5w\xc3ZA\xd7\'a#\x15\x82\x10\x1aW\x1f\x8b\x07\xa2\x8f\x93Hx\xebU\x8e\xff\x00S\x8a\x08\xc8e\xb4]\xa7\xbe\x1c\x9c\xb5!\xa1x\x8am*\xd6\xe6\xce\x1b\x12\xcd,\xa6M\xea\xdc\x93\x8c\x059\xac\xc5\xdd\xed\x9c\xde"\xbc\x92r\xd2[FB\xe9\x00\x92\xe5\x17\x81\x8fsV\xf6V\xf7\x96\xfd\x02\x18\xed\xd4-\xc3\x8d@\x9c\r!\xcf;\xfb\n\xd0\xf5{M\x12\xce\xc0\xa1\x81"HW\x86\xfe >\t\xeak*\x8ac8,\xe7\x18\xe0\x7f\x8a\xea\xfe\xea\xff\x00R\x99\x1e\xf4\x00\xa0\xfabRH_\x9f\x93I\x12\x11\x94!\xdc\xbd\x0fn\xbf\x15A\xd5:\xb1\xea7\x86U\x81`\x861\xa1S\x18\'\xe4\x81V\xbd.\xc9\xec\xad\xb4I;K#\x1dL\xc4\xe7\x1fL\xd3\xf9V \xaa2O9\xe7\x8aZ7\n\x0ey\xcey\xef\xcf\x1f\xa5$#fV\x01w\x1ceq\xc985\xe1\x1eF\xd6\x07q\xe9\xed\xd7\xf5\xe9U\xa5\xd9Y\x9c\x80\xaax?\xb5X\x00\x08\xd3\x9c\x9aM\xdeD1.\xd4 7\xac\x93\x83\x8cv\xfc\xe8\x80\xc7"\xeeR\x0f<{f\x96\xf2\x96U,@9\xe7\xb7\x1f\x06\xbd\x8b*cP\x08\nyS\xc63\xde\xa1\x0c\xbc\xcb\x900\x07\xa0\xe2\x9e\xd8)\xc7=\xeb\xc8"1\x87m\xec\xd9`NOJ\xec":\xb9n\x00\x18?Q\xde\xbdd$m8\x01\x94\xfa\x89#\xf2\xa5\xa2\x18E;3\xc8\x07=\x08\xfe\xf4\xdc\xad\xa8\x05\xd8(\x1c6{\xd7A\xef\xdc\x9aE\xd9\x84h\x88\xc7\x07\x19\xcf\'\x8an ,\xa0\x17\xc1\xcf\x00r3O[(\x87\xd29?\xfd\xa0\x1e\xe2\xbaEB\x8cB\x02:q\xefQ\xc2\x89I$\xe4\x85\xce\x93\x91\x81\xf6\xa5\xeb\xd26\x1d\xf9\xa4\xe3\xde\x81L\x89\x8c`6\x0fC\xf1N" \x83\x95\'\x03\x03\xe0\xfc\xd7\x90mX\xd8\xbc``\xe3\x04d\xe6\x95\xdc\x18\x84\x86@\x0ep@\x19l\x8aq\x19\x81\x0eOo\xca\x06[}\xbe)\xb69\xc8\xc7\xdf\xb54\xb8/\x93\xd7\x81\xc9\xcfojJ\x182W\x0b\x9d\xc0u\xe2\xa4\xbe\xef\xbd\x90\xc8\xa0\x11\x90\xdcrM\x024\x8d\x81L\xe4\x1d\xa7\xbf\xc5!\xc4\xa1\xf5\x92B\x96\xe7\x82\x05s\xcc]8\x1c\xe3\xedR\x96\xd0\xc7\x18P\x14\xee\x03\x9cc\xbdCk\xec\xe0\xdbA\x9c\xab6NGj\x99\xb7\x90\t"\xda\x17\x86\xf5\xef\x1d\xbf\xdb\xd6\xa1|BdMN\xd9\xd8d2\x12\xa3\xa7\xe9Vwd\x7f\xa6;#\x7f:\x86\xd2v\xc1\xf7\xc7\xd2\xa2\xda\xea7\xab\xab\x7fC\x11\x9fqE\xaa\x14\x8b\x11\xb1.\x1b\x93\xd3\xfaT\xde\x95\x04Wz\x9d\xad\xac\xc4\xb4o\xc9_p\xa3$\x0e\xf5\x15n$1\x80\xab\xb0\x93\xce}\xeb\xa8\xe6\x9a\xc2\xfa\xda\xf5\tf\x81\xf7c\xdc\x1e\x08\x1f\x955`a\x8ak)eB\xf1,\x91\xf9\x89\x8fI@}C\x1d\xf6\xfdiW+$\xb1\xdc\xa4l\x16F\x8d\xc2\x1e\xe1\x88\xdb\x7f\xadm\xa2\xd2\xd1\xe1\x11}\xd6/,\x0c\x04\xd86\xe3\xe9Y\xf6\xbd\xa5\x8d:\xed\x96\x10|\xa9\x80\x921\xd4\x8cpW\xf2\xab\xbe\x9d\xa9Z\xde\xc2\x8f\x0c\xa1\x81\xea3\xeaS\xecGcP\x1e0\x93c\xe9M\x9fNd\x07?\x91\xafR\xf1*\xf4\xfb\x9e\x86\xd7i\xa0\x98Lz$Ll\x19\x82\x11\xb7l\x1a\xc0tg\xbb\xb7\xea\x82\xdd\xcb\x80\xfa\xf5#g\x95\x1a\xb3\xbf}\xaa\xa2QT\x16l/Q\xf3\xc7\xd2\xb8x\x83\xa6\xdc\x96P8n\x9b\xbf:X\xc4\xd3\x06$\x10\xa0t\x1d\xf8\xcf?\x14\xd9\x98\x95+\xb8\x95_\xe5\x07$W\x9b\xb8P\x18\x98\xbd,\xa7\x1d\xb5\x1f\x9c\xf6\xad\x9a\x92H\xc3n\x0f\xe9I\xf9!z\xe3\xaf~)}\x17]]\x13S\x91\xe4\x04\xc3(\x0b"\x8eH\x03\xa3\x0f\xa5&\x17p\xf2\xdb<\x0fI9\xa63\xd9oV\x91"\x0f\xb9\xb6\x11\x9c`SQ\\\\\xdaI\x05\xc5\xa0\x0b,M\xaf8$\x8c\x0c\x11\x81O4p\\G,\x17\x03Tr.\x928\xe6\xb7\x0b-WO\xd4c\x0fku\x1c\x99\x19\xc2\x91\x91\xf5\x1dEP|X\xca\xfa\xc4 J0mF\xe01\xd41\xebT\x88t\xb9\xe1\x90\xb4fX\x9d\x06w)\xc3{\xf5\x15-\x15\xa1]\xaf$\x8d$\x92\x92\xac[\xd4\xccs\xd0\xe7\xbdhz\x97\x89z\x8f[\xb1[I\xfar\xc4VUg\x909\x00\xe9\xdb\x00\x1d\xf2I\xaaKN\x87i\xd2\xee\xcc\xf0\xde\x19\x14\xa1UB\xa3;\xfc\xd7[\x89\x1f\x84pz\x9e\xf9\xed\x9aq\x1ae\xf2\x10du\xcd*cW\xc6\xc9\x17\x03\xf1\x02\x07c\xf3NB\xaf\x98\x98\xc6\xec\x13\xc9\xf6\xf6\xaa\xc8\xe0r\xf9f\x04epv\xdf>\xd59\xe5\x18\xd8cc\xf6\xfa\xd4{+\x06!J\x82H\x1d\t\xf98\xf6\xebN\x08\x0eNFC\x80N}\x87Zp\x15\x98DH\xdc[\xa9\x03\xb5\n6bA\xc1\x07\xa1\xe4u\xe3 \xfc\xd3\xcb\x11\xd5\xa4\xfeNx\xed\x8c\xfd84\xd9\x93?_\xfc\xff\x00\x14\x91\x8dUNO\x18\xfc\\\xe3\xd8u\xafCa\xb6\x85\n\x01\xce\x0eN{S\x9f)Y\x1dT\x83\x83\x83\x8e\x8as\xfd\xab\xdf\xbb)C\xe6\x1d\xacz\x90s\xd3\xdb\xe2\xa5\x08%\xd8\xa0\x19\xc09\xed\xb7l\xfdi\xbf1w\xd4O?\xf9\xb51x\x81p\xc7\x1b[\xaf?\xf3J\x0e\xc0\xc46\xf3\xb8\xf4\xf9\x04PJ\xa6\xc0\x83 \x8c\x06<\xe3\xe75\x1e\xd7b\x16$6rq\x8fl\xfb\n\x834\xb0\xdb\x9dn\xc0j>\xa3\xb1\xff\x00\xe6\x9eUy\x06\x00\xce8\xa7\xb1\xab4\x99^\x17\xa6\x7f\xf9\xefNR2Y\x95\x90\x10\xa7<\xf0?Jog#\xcc\xa1\x06\x00-\x9c\x11\xd7\xdb\x15.U\xc2a\x08\xdd\x822G \xe3\xe7\xb5L\xb2D\x9a!*\xea#9;\r\xfe\x00\xa6&r\x8eT\xe3?\xf9\xbd \x89 \x8f/\x1ad.T|\x1fs^E\x0bF\x85\xd8.X\x9e\x9c`|{\xd2\xb1\xb1\x8c\x81\xb9\x89\x00\x83\x91\xcf\xd2\x95\x086\xee\xda\x0eO\xbe\x7f\xa1\xa9\xea\x88\xc5H\xc9eR7\xc6\xdf\xa0\xa8\xe5\xc8\xc8\xdb\x04\xf6\xefH6V-\xa8\x00\xc09\xed\xf9\xfc\xd7\x84\x92\x13\x086\x8fnr~i\xc0\x8d\x95\n\xb6\xf2Xv9\x03\xff\x003H?\x04\xa8\x0c6\x802{\x8f\xcb\xadrL\xa8\xf5\x12\xbb\x01\x8flv\xde\x85`x\xdf~k\x82\xdb\xd0\xb4g*O\xa8\x10z\x0e)4PW\x95;\xb7`1\x18\xc0\xed\x8ar\xb9\xc0m\x98\x1c\x80\xa4\xf4\xa4\x99p\xc5\x94\x1c\xf0\x0eO\x18\xc7O\xa56\xc3!\x1fQ<gc\xdf\xb8\x06\x94\xad\xc8\x1fo\xf9\xa4\xa4\n\xb2:\xa9\xcbq\xb8\xb7\x1c\xfb\xfcW\xab\x95\x1f\x85\xb6\x82T\x12z\xf7\xf6\xa7\x06\xd9ZM\xdb\x860zs\x8f\xa95\xecv\xe2S\x9d\xc3\x19!\xb6\x90\x7f#\xdb4\xb1\x0c\xc2V\xc2\x0c\x92t\x80\x7f\xf3\xef]\xf3\x13H\xc9\xe0\x0c\xd3I\x19\xf6\xb7\x1c\x1ew\x0ex\xf8\xae\xd1QS\xf1\xe0\x11\x92=\xcd*\xd0<}\x19\x98\xe4\x96<\x1d\xa0\xff\x00\xe7J\xe1\x12\'\xc8\x1e\xa2\t\xe0\x8e3\\\n\xeb/\xa8z\x88\xfec\x8f\xd3\x1c\xd7u)]\x8e\xd9\xe4\n\xec (\x1b\xcc\x04\x01\xc0\xed\x8e\x9f\x9d&\x01o0:\xaf$zs\xea#\xe2\x94X\xd1S\x04\xe0n<\x03\xfe>)@I\x03\x0c\xb9\xea@\x1e\xdd\x7fZ\x90\x06\xac\x12\x00!w\x1c\xe7#\x1d\xe9\x19\xc6ps\xbe\xc7\x8f\xe9II\x17\x9a\x10\xb2n \x91\x823\xd7\xb7\x1f\xd0\xd4e\xa4\xd7Z\x06\xa3<\x90\xdb\x99m\\\x03")\xe5O\xb8\xf9\xa9\xb5\xd8z\x0cpz\x1e\x84\xf3\x8c\xd2\x85\x14\x94\xf4g\xd1\x90q\xc7\x1d\xab\x92Z\t\x9a)\xa3\x94\xc5<R\x07I\x97v\x07\x18\xee7\x07\xb8\xa1f\n\xb2G$a\xe3u*\xc8x\xc75a\xb1\xd6\xb4\xab\xd8\x96H\xae\x97\x9e\xa38#\xe0\x83P\xba\xad\xed\xad\xe5\xd4pDC\x95\xfcEH\xc0\xf6\xc9\xf7\xa8\xd94\xcd=\xa4\x0c\xd1\xa6\x00\xe9\xb7\xa7\xd2\x9cGo\ne<\xb8\xd62\xa0\xa2\xa2\xf5?_\xf9\xab\xb9:\x8fR\xb8\x81m\xe7[`\xba\x86\xb7L\xe5\xb1\xbf\x07\xf2\xe4\xfdj\xba\x1b\x0b+y\xcc\xf1<\xe4\xe0\xe9V\xc6\xd9\xf9\x1c\xd2p\xd9Yl\xdf\xe5\x00X\xe3\xcc\x07\x07\x1d9\xc7\xf7\xa7\x05RH\x8e\xdd\x9e\x86\xc0b:\x83\xef\xee~\x94\xa6=o\xb7*\xa7\xf8z\x10>i4))e!\x98\xa62>\r2\xa28\xf0\x81\x11u\x02\xa7\x03\x1a\x8f9\xdb\xf5\xf7\xa9%\xd9\xb2\xc5\x98\xe0\x83\xb9\xce*$Z\xcf\x0c\xc5\x96\xf7m\xbb\xb9f\x8bh8\xcf$\x83\xc6\x05/\x1c\x11\xc8\xd1\xc6\xacO\x98\xea\x01\xfa\x9f\xf0)\xc1H\xc0m\xab\xb1\xca\x9c\x01\x92y\xf6\xcfz\x8f\xf3\x9a\t\xad\xdf\'\x11J\x18\xe4s\x8c\xff\x00j\xae&\x1bbr\x80\xa3\x1c\xb7\xa8\xb63\xce3\xc5K\x05\xe5\r\x83\x86\xc6\xdb\x01\x9cq\x9csV\xc6\xd1\xed7K\x18\xdc\x19\xbf\x8f\xbe@\xc5S/b\xf2ex\x98\x1c\xa9 \xf6<U\xfc\\\xac\xa5eV\x18\xe3q\xf6\xaa\xa6\xa1$\x177\xb2\xba\xb6\xf5l\x0fO8\xed\x9a\xbb\xebv\xd6b\xda7\x83\xcbF2\xe0c\x03*\xc3?z\xa9\xe9\x177~{\xac\xc5\xd9Dy9\xec\xc3j\x81\x01\xa2@q\xc1oony\xa7\x06\xe5\x00\x1c\x9c\x0e\xb8\xe4\xe3\x1e\xf5\xe9\x81\x03\x85P\xd8\x04\x9c1\'4\x84\xb6\xe1\x18\x14\x01s\x80\xd9\xe7\xe2\xb1\xf9\x9e\xdc\x16\x8fI\x0b\x80Fs\xc7qZL\xc7!\xdf9;\xd3\xcb+0b\x0cIc\xd4\x9e\x87\x9f\xfei\xc1\x89\x031e \x81\x91\xef\x83\xc6k\xdbs3\xb2F\x18>[b\x81\xdc\x9f\xafj\xbaA\xa3[\x94\xcc\xa0\xbb\x15\xc6I\xe9\xf4\xad\x1fK\xe9My\x18X#\n#\x03S?\x19\xfd\xea\x9a\xff\x00\xa9%\x9bfg$\xbep\xab\xce?j\xcd.2\xbe\x98\xdfq\xc8\x0c\xd9\xe9\x93Z|\xb6\xe8\x96\xf1"\x8c*p\x00\xe9\x8cUK]\xd2\xe3\x80b6\xc0q\xb4q\x92\x1b\xb7\xe5N\xed<GfmUn\xe6\xf2\xa7\n\x04\x88\xc0\xfe%\xe3#\x8e\x86\x9e\xe9~WG\xbf\xea6\xd7\xf2G\x1f\x99\x1ayn\xcc\x02zI\xc8\xc9\xeer>\xb5\x17\xa8\xf9\x9dJ\xd2\xc6\xe2\xd1^@\xae\xda\x94\x02[|o\x81\xed\x83P\x17\xb6\xdeE\xd4\xa5X\x05\x07p_\x9a\xb0xM\x12(5&<\x96\xb9\xe4\xf5\xe0(\xff\x00\x9a\xad^\xdd\x0b\xab\xc9\x19P\xec)\x84\x04c\xf35\xed\xac\x9a\x9e\x9e\xcf\xf7gI"\x90\x92VL\xfa[\x18\'\x8e\xb5Wew\r\x8fX\x17\x11\xc0\xd2\xc2\x92\xb8:7#X# \x1cm\xbdY^Z\xcdw\xd3<\x83"\xa4\x8e\x88}[~\\\x1c\x1f\x9a\xbf\xdfO\x0cP\xc8\xec\xc0(\x19$\xd6B\xd9\xf3d+\x8c\x8c\xb6\t\xf7\xa9\xc9\xbe\xfd1\x8c\xde\xde\x19\x86\xec\x85P\x15G\xc6\xdaf\xd6\xeb\x12\x00\xb1\x009\xe4\xf7\x1d\xfa\xd3\x9e"\xbfn\xaa\xd0\x15\x85\xa2Hu\x1c65d\xe0\xf6\xc8\xfd\xeb\xbd\x0e\xc0t\xc8\xe6\r(\x91\xe5#:\x7f(\xc6}\xf1Q\x16\x8f,W2r67\xe2C\xd3\xf4\xa9\x0b\x95*\x8cU\xf0\x14ey\xc7\xc74\x8a\xdb1\x95\x8aw\x1c\xd3\xb9\x17\x82\xaeI#\x82\xc3\x83\x9e\xdf\xadfm\x96A\x0c\xa8\xe1\xb1\xac\xe9\'\x8d\xcf\xfe\x1a\xbe\x91\x94\xc8\x85q\xc0\xc8\xa8\x01\x1f\x9aN\x14e\x86@\xcf\x19\x15\xe4hq +\x903\xbb#\x1f\x95?0\x84i\x18\xf0J\xf789\xf6\xaf\x15\x95%x\xff\x00\x89\x97\xa9\x1c\x12j6\x8ch.\xd8\xdc\x8e}\xf8\xda\x9f/\xce7\xda\xa2\n\x04\x93\x19\xc8\xed\xf4\xa5\xc4>r+2c\x07\x06\x9fI\x11*\x8aW\x05[\x18#\x18\xae\xe2\x95m\xd6M\xe5\xb6\xaa\x92\x01\x18\xe7\x14\xdaF\x89!Y\x1bLm\xef\xc0>\xc7>\xd5\xd6rW*2EB\xbc\r\x0b\x16\xe1\x97\'\x90:\xd2V\xb2\xac7PNT\xe29U\x8fl\x80}\xabJ\xbb\xf0\xdc\r\xa4}\xe6\xdd\x98\xc8\xb1\x86\xc6x`FH\xac\xee\xe8\x10\xa8B\xe78-\xcf@j\xd2\xff\x00\xa6\\\xf4\xbf!\xe5P\x16H\xc4\xb1\x90u\x03\xff\x00"\xab\xed:\x85\xbfPY\x84d\x92\x8ecpF\x08\xff\x00\xe6\xb6]A \xb9\xb5Y\x17\r\x1c\xd1\x0c\x11\xd0\xab\n\xcd\xad\xf4(\xee\xec\xee$\xf3\nH\xb2\x11\x1f<\x00\xbcr)\xee\x91\xaf%\xbe\x9f-\x95\xca9e\xf5@G\xa8}8\xf6\xa66\x1a\xa7\xdc]\x96GS\x1b\xb3\x00\xed\xc6\x0bu\x07\xfcV\xa6\xef\xac\xf4\xdb\xf9:t\xd3 \xd2\xc8\xe9:\x90F\x878\x1b\xf1\xf5\x15\x9e\xb5\xe9\xf7\xd6\x11_\xc7\x13\x1c\xac\x8a\xd17\xfb\x94o\xff\x00\xcdW\x1a\xdd\xe1wV\xc8tb\xac\x0f\xf8\xae\xcc^z\xac\xa1C:\x0e\x9d\rKj\xf2\xc1q4\r\x13\t\x13\x19f\x18\xfd*\x15\x0b+\xb8\\n\xcf\x18=\xbd\xaa\xadt[O,*\xe1\xd7>\x82\x0f;dU\xd2H\xd3C\x1c\xa5t\xb1\x1b\x83\xda\xa4\xf4\x94\r\xa8[\x80\xaa\x8d!\x08Y\xfaz\xbb\xfeU\xf4\xfd\xa4M\x05\xad\xbcL\xfb\xcaF\xaa[\xdf\x03\xad|\xb2\xec\xc5\x84\xa9\x19R\x9c\x9cW\xd2\x1e\x19\xd4\x86\xa9\xa2\xd9O\x9fX@\x8e?\xdc\xbcV\xef\xa0\\\t-\xe4\x8f\xba\xb0o\xafj\xc5x\x8e\x02\xb3A66 \xa1\xf8<\xd4\xf8\xae\x85p+\xb1W\xd5\x9b\xafh\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xaf\ra\x9e9\xd5\r\xe6\xba-\x11\xb2\xb6\xe9\xcf\xc15\xb6\\\xca!\x82i\x0f\xf0!?\xa5|\xc3<\xd2]j\xda\x95\xcb\xf2ds\xf9\n\xad\xea\x93\x18\xa0\x8dA\xc7\x99&\x0f\xd0\x0c\x9a\xb7\xe8\xd0\tn\x9d\xcf\x11!#\xff\x00\xc8\xec)\xa5\xa9\x12\xde]\xc88\xd8\xa1A\xae\xe1@\x92\xc8\xe7$\xb6zt\xe6\x84\x88A\x1c\xa3i\xfd\xe3\x92O\xf9\xafd\xde\x8aYH\x03\x03\x8f\x9fz\xc9\xf9\x98\x8cg\xf3\x02\xcc\xd8\xf7\'5\xb3Q\x968;\x10\x00\xfa\neu4a\xa1E@\x8a\x1f\x80\xa3\xaf\xc9\xa7\xf6\xd7w\xebj\xf0\xdb_\xb4J}LGbz\xe0\x1e\xf5X\x96\xe3t\xd1\x97|e\xf0\x05\\\xed,&}9\xee\x15J\xc4\x8b\xbc\xe0`\xf5\xc6*\x04\x12\xbd\xc1\xb91\x16\xd9N\xad$\x83\xa4\x0f\x83\xb0\xa9\x13\x08UbYB\x90XcV\xe39\xdb\x9e\xf5S\x8e\xc1\x91\x9bsorrY\xf9\'>\xe7\xde\xa5\xac\xed\x95\x07\x9b\x8c\x91\xc0\xe3#"\xbae}\xe5\x88\r\x95\xcfZR;\xad\xd1\xa8V\xc8\x07\x07\x1d?*\xcf\xe28\x18\x8c\x10N\xeb\xfa\xf3V%\x99\xc0\xc6>i;\x85\xf3\t!\xf0q\x81\x8eF}\xe9\xa1\x8c\xee\x1c\x1c\x03\xdb\xa7\x14\xeaK\x92\x99l\x06\x03\xa8\xc7?\x15\xdc\x08$`H8_Q\x1d\x8dW>\x89\xa5(\xad\x82NN\xdf4\xfa\xb1U\xc9\x1b\x01\\\xa6\xe5`FKm$\xd7\xa1\x99\x9b\x87\xc1\x03\x82y\xfc\xa9]\xca]\xc2p@\xc8\xda8\x1e\xc2\x9a\xc2\x04N\xea\xe3s\xb3\x02\xc0\xf1\x82;\xd49\\\x02\x00\xdd2w\xce\xdf\xe74\xea\x9c\x82{\xe2\xa7\xf4\xcd\x12\xf3RlC\x1a8\x0b\xb9\x898\x03w\x03\x07\xe6\xa5O\x84uh\x80\xc4\x11\x9c~ \x1c\x12q\xd3\x19\xa6\xda\x07\x88\xd7F\xb8c0\xfd\xcc\x80\x07\xc0\'i\xe4\x06\x1e\xf5\xa7[x\x83G\xb8\x8c:_\xdb2\xfb\xf9\x83\x8f\xaezV\xbf\xa0\xf4\xbf\x0e\xf5\x0b@g\xbdx\xaerK\xa3:\xa9\x00\x9d\x88\xc8\xe3\x15\x97\xeb\x1dS\xac\xd8\xdc\xe2+Tx\x08\x1a[I9\xf7\x07\x07\x9a\xc7\xefl\xae,\xf7G,R,\xe3\xd5\xb5\x86\x01\x1d\xb1M\x04\x0c\xcf\x14\x8c\xec\x14\x0c\x05\xec>qW\xcf\x18\xeb\xfa5\xe46\xd6\xd6\x8f\x14\xf7\x0b0,\xe9\xea\x11\xafq\xbb\xa7>\xd5Y\x10H\xf8\x91[\x05W=8\x07\xdf\xf3\xac\xcfW\xb0\xb6\xb7\xeaw\x16\xf6\x97"\xe9#\x08C&\xe3}\xf0H;\x91\xde\xae\xfau\xf4\xf7\x16P\xcd<\x06\x07r\xc0\xab\x7fQ\xf0i\xbe\x04i\xeb`\xc0\xf3\x8e\x99?\x9f\xf5\xa4\xa3\xc2\x92\xb2\x1c+d\xe1GA\xdc\xd3\xb7\xb5\xdeA;\xb8\xf6#\xf5\xa4cA\xe6\xb3\x148Q\xe9os\xdcb\xa22J\x1d=!p1\xb9\xed\xdf=\xcdK\x0e\xa5[|\xe6\x93B\xd2K\xe5\xaf\xf0\x8c\x1f\xe2\xcf\xcdz\x96\xcb\x1b\xb4\x91\xb0F\'\r\xdcg\xa7\x14\xf2\x1fW\xf0\x14\xe0\x12\x17\xa7\xeb]\xc8UyT\x07<d\xf0@\x1d\xb8\xef\\\x11)B\xef ;\x92\x1c\x0cc\xe9\x8d\xe9&V\x0cT\x0cdn?\xcd6y@\\n%\xb3\x8f\x8f\xd6\x88\xd5\x899F\x07\xf1\x100:\xf3\xda\x91F\xd8\xa4\xba\x8f\x81\xedN`\xe5\xf7\r\xa0{\xe6\xa2\xac\xfed\x88Ks\xc2\xf7\x03\xdc\xd7XhV\xc0\xfb\xd3\xf8# \x06tPO8\xeaqP^#\x9e3\xf7,\x8c\xb7\x9b\x9fWP;\xd5\x80\x1f6>Q\xb3\x91\x86S\x8fO\xc5S\xfcE\xb4\x1beEm\xef6\xd4P\x0eN\x06\x7fZ\xb3\x9d\xb1g$q\xe0\x89\x15w\xeeN}\xa9\xab0\x1a\xe5Y\xb6#?\xd2\xa5\xac\xdb\xcf\x18O\xe1\x0b\x9e\x0f9\xf6\xf9\xa9v\xb1Vd\x0e\xca~\xbd\x0f\xc5E\xda\xe9\xda\xc6\x95\xf7Y\xee\xadv[\xcf\xb47BF\xee\x99\x1d\xaa\xcac\x0c\xa5\xcbd\x8cs\x8eG\xfc\xd3\x96V\xf2"\xb2\\[:J\x85II\x01\\/ \xe0\xf6"\x99\xb8\x9du\x86\x8aUdl\x80\xc8Co\xc1\x19\x15\x08\xd6\xf7\x16w1\xcbk!\x89\xd4pW\xdb\xdb\xe4}jD\xc9{}!\x96\xeas+\xc7\xc0\x18\n\xa0\x1e\xb8\x1e\xf5\xc3m\x0e\xca\xa7,N\x17\xb3`\x1e\xff\x00\xda\x9d\xc7\xb9Q\\)\xdf\xce\xee\xe3\xebK\x89"/2\x89$\t\xac\xbbF\x1c\x94\xc8\xd8\x1c\r\x89\x1c\xd3R\xc8HF(\xa5\xc0\xd2\x1c\x81\xab\x07\xe7\x9cR;\xc8\x86T8\xf5\x0cc\xb7\xe7Lf\x99"\x8b-\x90\x14\xf5\x1c\xe7\xe9O\xe4\xc3"\x93\x13c\x9d\xdc`\x9fo\xca\x98\xbcm\xe9\x0e\xf8\xc0\xe9\xf1L\xdc\xb4\xa1Qc\xf5a\x02\x86\xc6\xd8;\xef\x9c{\xd7a\xd3\x9c\x91\xdf$W\xb1\x9c\xaeL\xa0\xe5y\xe3\x91\x9eE/\x14G\x1c\x1c\x1c\xe4\x83\x81\xc9\xfe\xf4\x9d\xa0\xc0 )\xc8\x1d\xc6s\x8a]@q\xb5\xbd#\xf9\x8f\x07\xf2\xcfj \x01\xe3\x89\xce\xecA\xc6\xe4~\xf4H\xc43\x01\xc6iIP\xf0H\xeb\xc9\xc8\xc7JF5\xc6\n\x85,\x0es\x9c\xfe\xb4\xee,:\x8d\xd9\xe9\xd7\xe4\x9e\xbfJ\xf5#}\xa5\x08\xce\xd6\xc1>\xc7\xda\xa6<:\xde7S\x90\xc3l\x0c\xee1Lk\xd2\n\x9e\xdc\xd7\x88\x04\xa4erH\x05F:\x91]\x92\x12F.\x99l\xed\xe0\x1e\xfcW*\x8c\xa7rL2\t\nG\xeb\xc0\xaf\x0c\xac\x98V$\x929\xeb\xc8\xcf\xf6\xa7u\x05@\\\xe9l\xe7V\xc4\x1f\xf9\xa6\xf1\x93\xe9\xdc{w\xa7!\x8c{\xb6\xe5[\xa9Q\xf3\xda\x80\x0b\xa1W\nN8$\xf4\xef\x83\xf4\xa2\x06\x8e@\xdbH\x00u\xdd\x9e\x0f||S\x90\x9b]\xb8\xc6A\x1b\x863R\xe3O1U\x96L\xc6A\x18\x1b\x8d\xe9\x86m$\x82=_<\xd71\xa4d0\xe3\x8e;~\xa0{sI\xcd\x12\x8c;\xf0N\x179\xc6p}\xa9\xca\xeeG!p\x07C\xc79>\xdd+\xc9\xedd\x91\xe0M\x9f\xbd\x90\xed\xc3\x02\x13? \xfbu\xa9M\x17\x99\x1e\xd1j+\xb61\x8c\x9c\xe0c\xe6\x9b\x12\x00\xe3/\x80FsQ\xdb\x1a\xf0y6\x99f9\xda\xaa9\\\x1cu\xec*DxB\xeaU/%\xcaF\xc7\xb6\x0b\x0f\xa1\xab\xa6\x9fe\x06\x9dn\xb1\xae\t\xc7\xad\xfb\xb1\xf75\xed\xe6\xa5kg\x11\x92i\x15W\xb6OS\xec\x07z\xd0G\xe1^\x9c\xb6\xc6~\xb1(-\xa0\x17P\xc5#M\xbd\xf3\xda\xa9d\xeb\xb7o7\x95a\x1f\xa7V\x03\x11\xa9\x9a\xb2\xfbh^\xca\xfe[IG\xae\'\xc6q\x9f\x9c\xfd\rY\x19\xd3b\xb1\\\x8c\xe3\x1e\xff\x00\x14\xceb\xf7\xf7\xb3^\x95 :\x85Q\xc6B\xa8\xeai\xda\xae\xe4\xda\xd20\xc66\x81\xdf\xe4Vg\xa6[\xfe\x19n\xa1\x8bx|\xd7\xf2\x19\x86\t\x8c\x1fNs\xf1WW\x12\x19|\x97p\x03\xe8_0\x03\xc3czFEM\xfb\xc9`\xdc\x021\x95\\\x0c\xfc\x0f\xce\xbb\x81T\xb3\x0f=\x88\xf5z\xb8\xe0\xe2\x9b\xc2.Hd\x9d\xc8q\x8d\xc3\x82?\xadH\xa9\x11\xa7Py\xe9\x9c\x13\xf4\xff\x005.\x02&q.\x86\x8cnH`A\xe7p@<\xd3R\x12\xa3NCv\x18\xdcW\xb1D\x80\xe1\xc8`\xcb\x86\xcf\xf7\x06\xbbt\x05r\x08#\x19\x0cNs\xcf\xb7\xc8\xa4?\xd5rXm9\xc1?\xf1N\xa3|\xfazo\x1cn\xf7\x1d\xb3\xf3S\xa1h\xdf)\xa7\nr\x03\x1eO\xebQ\xdfP\xc1\xce\xfd\xc5G\x8f/+\xb4\x8d\xacs\xe9\x04g\xe6\xbd\x11\x07?\xe9g\x9d\xc0\x11\xdf9\xe6\x9c\xec(\x1fw\x188\xc0\xe9\xefG\x94T\x10\x01\r\xbb \xe7,;\xe4\x1e\xf4\xcaDv\xd4\xa0\x01\xca\x81\x8c|o\x9as\xcc\xf6\'\xe0\xe6\xbd\x91U\xdb\xa9\x19\xc1\x00p8\xf7\xcd \xf1,e\x8a\xfaCz\x89Q\xc1>\xd8\xf9\xae\\H\x81\x9aIK\x8e\xbc\x0ey\xed^\x06\xcblh\xb8\x1d9\xc1=\x81\xc8\xa5<\xa8\xccu\xa6\x87\'b{~\x99\xc0\xa1U\x80\x18l\x8f\x8f\xf9\xaf\x0b\xe0n\xf3\t\x0c\xa7\x8c\r\xa7?=i\xab\x9c\xe78\xc0\xe3\xb7\x19\xa7\xa3j)\x1e\x96uB\x00#;y\xc6~i\xbc\x85A\x0b\xb8\xf2\xa4\xf4\xee>\x95\x1el\x98\xf2\\\x01\xdcg\xdf\xb6\xe7\xde\x9dB3\xb2\xfd\xe8\x0c\x81W\xd0\x03\x1c`\x0e\x08\x1d\xc0\xa3p-\x93#\xff\x00o\xd7\xdcW\x1eP\x81c"=\xcc\xf8\xc1&\xbbX\xdd\xb9\xc3g\xa7L\x8f\xcb\xda\x93\xaeR\xca\xa5p\xc3\x19P\x0f\x1f]\xb7\xa5\x9d;\x90v\xf75\xc8v9\xc8!\x1c``t\xfc\xab\xb2\n7\xb7\xa7\x19<\x86\xe2\x93\x91\xc3p\x8d\x90I\xe3\xd8\xaf\x07\xeb\xf5\xa5\x93\'\x87$\x92} s\x8f\xca\x9c\x8d\x839@\xc5\xb1\x8c7o\xfc\xf6\xae\x1d\x808\xc7;W1\xbf\x967\xe3v:\xa8=q\xeci\xdcr.\xd3\xb7;q\x9d\xa7\xb7\xc1\xa6O!\x88\x12\xe9\x96$\x85X\xf9\xc8\x1d3\xf3^4\xad\xb9\x08gP\x00>\x9e\xfe\xe0\xd3\xb1\xce!$j\xe0gN0w\xef\xbd%\xa3\xd7\xbe9\xef\x9d\xb6\xa7\xcd\x19\x91N$\xc7\xab8\xcf@;\x13I\xb0X\xe3#\x0b\x82rp\t\xf8\xcek\xa4\x90\xb9\xcey\x1d0:\xfdi\x9c\xf3I\xe6/\xef:g$\x0c\x7fCOM4Q\xa7\x98\x14\x92} \xed\xdf\xef\xfbSh\xae\xcd\xa7<oK\x10p\xa9\xbb\x1b\xf9T\x03$\x81\xd6\x92\xb9\xb4\x88bY\x17\xd2G\xab\xb9?\x974\xfa\xde1(\r\xb5\x1b#\xf1\x11\x9e\xb5 \xb1\xc2\x8a\xcd\x90[9$\x0c\xe2\xa4Eg\xf8\x98\xcb0]$\r%\xb7\x03\x1f\x07\x9f\xb54\xf7^K\x80\t\xcfp*\x9b\xf7;\xf8\xe6x\xd2P-\xa4\x19$\xe42\xe7\x8c|\xd3\xf5\x8b\xee\xf1,d\xa30`\xa0\x0e\x0e\xde\xd9\xcf\xf7\xa9\xa7\x8e0\xcf\xb9\x99\x8bc\x81\xce\x07\xbf\x1d\xf9\xa63\xc3\x1c\xf0\xecG\xc3\x15 1\x1c\x93\xd3&\x99n\x9d\x15\xa8\x95\xa19\x90\x86\xc2\xb3\xee>\x00;\n|^4\xdaC\x8c.FH]\x8f\xc9\xa5\xectg\xbae\x96\xe1\xb6\xa6r\x14g<\xf4\xcdKI\xa3\xd863\x16H\x1c\x1c\x9c\xd4\\:\xb9\x85\x92+\x95)\x95\x18q\xf8\x0f\xe7\xd8\xfc\x1a\x98\xfb\xece7\x16\x18\xc7Z\xd3\xf4\xabn\x88\xd6\xcc\xaa\x89+\x8d\xe5\xf3@.\x1b\xe4\x1e+9\xd4.:\xb2\xce\tw\x8dN\xc9\xe5\x9c.>\x08\xe6\xa3\xf4\xfd\x1a;=I\xe6\x07ryd\xaez\xee<\x7fAVf\x99cRX\xf4\x15I\xbf\xd6n-n\x15\x965\xf2Dy\xdcI\x04\xb18\x18\xc6\x7f\xadF\xcf\xa9\xeb7N\x11a\x8a\x14n\x8eX\xb1\xc63\x91\xd0S1\xf5n\x97\xd2\xbf\x11mmo)a)`\x88\x84\x82[\xbe{\nvN\x9b\xd4z\x89\x82i\xe5@<\xb0\x0b3\x01\x80>=\xea[V\xb9\x13\xc8\x14\x11\xc1\xc99\xc6\xdc\xd4k$awK\x96-\xc2\x9fn=\xfb\xd3bF\xec\xc97+\xd0\x0e\xe7\xde\xb8i\x96e\xc8\x18\xc6\x06\x18\x7fQ\xf3Y\x9b\xdb\xf1<\xf2K&\x92\xec}(H\xed\xb6\x08\xad\x1d\xad\xb0\xb7\x86(\x90\x9d*7a\xf3I\xcb\x08%\x0fD$\xf5\x00\x03\xfaS\xd9\x11\x9e2\xb8+\x83\x9cu4\xd9\x15\xd5v2\x8c\xe4\xe1@\xeb\xf1\xdcqRI\x1c\x803\x17\'\xd3\x85\'\x07<|THc\x0e_\x08\xe0\xb8\x01\x87\xb6\xdcg\xb5H\x92Lh\xf5\x03\xa4\x9c|\xd4s\xa2\x86\xf5\x0e\x83\x04\x81\x9ei\xbf\xdem}6\xee\x01,\t]\xdd\x8f\xb84\xf9\x19J(\xfcY\x19t<\x9e=\xb1I\x8bH<\xdd\xd23\x1fd\x1dq\xf3\xedL2L\xdaL\x06,\xb1\x01\xb5\xe3\x188\xce~\xd4\xe2\xba\x00u\xea\xdb\x8cs\x91Q\xe9m:\xce\xac\x15\x86\xe5 e\xba\x0f\x7f\x9a\xeac wVoP9\x00s\xf1\xc7\xbe*BA\x04l\x0f\x96\x06\t\x01\xa4<\x8f\x9cTu\xda6\xc9\x8a\xca\xd1d\xe3r\x83\xd7\xe3\xf2\xa6eT\xb7I\x0298b\xcc\x03\r\xb6\xf9\x0bOG!\x95\x94\x91\x8d\xb0\x0e>~\xf4\x92\xc2\xae\x8f!\x8c\xee-\xb9\x81\xc8\x18\xc7\\\xf6>\xf4\xce\xe0F\x84K+0\x1f\xc5\x85\xc9\xc1\xe0\x10\x05Kg\xf7\t\xb1\x94\xbf<\xb7p?\xcf\xbd5\x98FY\x15\x80\xf4\xfc\xd3s*\x98\xd7t9\n\xc7\xd8\x93\xbe\xf8\xefOF\xe7Q\xcey#\xe7\x03\xebQ\xb3oI]\x06q\xb7*z\x92)4B\xc2o0n\xc2\x1f\x8c\xf1\xdc\x9f\xf1OgP\xbc*\x0c\x85\xc7\r\x82y\xa6))\x13\x94\xc1\xcb\x03\x91\xd4~UE9H\xee\x00v%L\x83\x0b\xc8\x19\xe0|\xefR\xd5\x89L\x8d\x8e7\xad7G}\xfa-\x92\xee\xc80\'\xf6\xaa\r\xde\x93,\xfa\xbc\xf6\xb0D\x1c\x93\xb9\x14`aO\xb9\xf6\xa9m\x17W\xb7\xb2F\xb3\xb8\x94&\xc2v3\x1c\x02\x87\x91\xd7\xdb\xa5-a\xaaE.\xbf4\x90\xb0h\xfe\xee\xa1_\xb3\x10\xdc\xe3\xe3\x9a\xf4\xc9&\xe9\xbd[\xa4\xf4\x18\xa4\x9d\x15\xd6x\xa3e\x04\x16_I\x0c?j\xc3\xc4\xb7\xbd3\xa8\xf5\x89\x12"T\xc4\xee\t\x07I:\x81\x07\xf7\xaat\xf6s\xe9s\xaa\xcf\x1a\xefL\xe7\x9c\x86\x07\xb0?\x14\xc9\xb6\x16\x8dI\xdc\x1c\x1c\xabs\x8c\xd5\xbb\xc5q\xa9\xb7[\x82yIGn\xa1\xb8\xc5V \x8f\xce\x9dv\xe00F\xca\x9f\xe9\xcdf\xba\xcd\x98\xe9\xbdE\xed!`\xc9\x85\x91\x03~b\xacq\x9d\xb9\xe3\x15\x7f\xd3/\x8d\xfd\x92N\xe3\x0f\x92\xaf\x8e2\xbf\xfc\xd3`\xab\x02\xc9\x1a\x81\xb7<\x0e\x9c\x9aU\xb4k\xf4\xb77\xb1\xb2\x15\x03!\x01\xc3\xe3\xdc\n\xe2B\x03\xed\x9b\x81\xbdrG\xd7\x07\xebW\xb6\x96%\x89\x15YJ\xec\x18?\x14\xff\x00F\x82\xdb\xa9]\\G,\x8c\x86(\xc6\x8c\x1c\x10\xcd\x9d\xf1\xf1\x8ak\xa9\xdeMe\x14-\x1a\x06\xd6\xfe\xac\x8c\x82\x07o\xbdS\xb4\xe5\x97R\x93law\x15;\xb9\xc7\xebZ\x7f\xd9\xe5\xc4\x96\xf2\xdf\xe9\x92\xb6Y@\x90\x7fcY\xd7\x87\x00Mf\xedG\xe1\x05\xb6\xfc\x8c\xd5\xd7E\x94\xda\xf8\x9a\xcd\xb7`L\n\xe3\xdf<V\xc7\xc3q\xb3[<\xcc\xc4\xb8\x9d\xa3ob=\xff\x00Z\xcd\xf5\xe9\xb3+A\xa4\x04\xf2VE\xf7\x04\x7f\xc5l\x82\xbd\xaf+\xda\xd3Vb\xba\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xab\xbe(\xb86\xda-\xeb\x83\x82Wh\xfc\xeb\xe7X\x14\xac\x92\x92x\'&\xb7\xdf\x1a\xe7\xf6\x1c\xf8\xfea\x9a\xf9\xf9I\x17,\xa4p\xce+?\xd7d\xd0\xf6j{\xea#\xeb\xff\x00\x82\xb4}\x01r\x97g\xbeT}\x80\xff\x00\x9au+\x96v \x10\x00\x02\x9bL\x1cFI$\x0ct\xa9\x00#gn\x0e\xdc\x9e>\x95\xdb\xda<\xb1\xc8Y\xb6\xaa\xaf\x03\xb9\xcfAY\x89\x91\xa5\xd4\x14j\'<\x7fz\xd1\xa4\xaa\x9as\xb0\x18\xe6\xab\xfe\x11\xd1\xadu_\x10\xea\x13_/\x9d\x05\xa4bA\x1fb\xc4\x80\xabZ\xa6\xa4\xd1Zhw\xa9\x1a\xa8\x12\\2\xa8\x1d\x147?\xa5d\x1e\x19\xd5g\xb0\xd4\xef\x028T\x9e@\xb2\x923\xf8\x0e@\xf8\xfa\xd5\x9eMB{\xfdB{tGh\xa4\x8c\xb9#\x95\x0c\x9d9\xa6:gV\xb2\xb3\xf0\xfb,q\xe6\xeaW\x9678\xf5e\xb3\x8d\xfb\x801Pn\xed\xeeg\xea\xd1\xb3\xc8\x7f\x0e\x8a\x8e\xa3;zy\xfb\xe6\xa2\x04\x8c\t\xdd\x91\xce3\xefH\xc5\x1a\xe1\x82\x8criic$gn\x181\x04}:S@|\xb2U\x98\xf5\xecO\xd6\xb1\xcd8}%\x88+\xa7\x9c\xfb\xd6\xa1\x1bm\xa9p\x08c\xb3\xf1S\xc2\xa5aoP\x0cN\t\x07\x04Tp\x95X\x81\x8fW\xd38\xed^\xb4\x8e\xb9R\xcc\xc7h\xc9\xeb\x8c\x1a\x88\xb71\xa2\xbe7\xc8 `\xed\xb8\xfe\xb4\xf9$\xe2\x9f4\xa5`\x19s\xbc\x13\xf9\x0fs\xf4\xa4\xad\xa5\x17\x11\xac\x9eb\x91\xd0\x826\x93H\xc7$3\x07F\x8d\xb6\x10r?\xe7\xebN U\xf2_+\xe8\x04\x01\x9e\xd8\x14\xc0\x94\xb0bX6\x10\xed\x93\xdb\xb9\xa5k\x00|\xe7\xfa\xd39\xb14\x80\x8c\x95\x1d;\x93\x8f\x8a\xe8Y\xc3:\xf1\x12\xa9\x18\x03<\xe7\xdf#\xde\x9eI\x02\x85\x05O5\xd5\xac\x8c\x8e\xa0\r\xb9l\xf1\xd3\x1f5\x1c>\x8f\xfd\xd0?\x88}X\x19?\x18\xfaS\x9a\xb2=$\xed\xc59\xb0\xd3\xe2\x88\xf0A\xe3\x00\x1cq\xcfJ\x9d\xb6\xb6\x92\xeeo*$\xcb\x13\xb9\x8fl{\x93\xd8Td1\x82\xd26\xec\x928\x03\xa0\xc7\xcd^\xfc7\x1cb\xceI\x10\xaeZL>\x0f#\x03\x80\x7fZ\xd0t^\x9e\xbdB\xee8\x99|\xb4\xdd\x9c\x83\x92B\xfb{\x13\xfd*\xb3\xa9^\x9bKw\x94\x1dM\xb2\xa8<d\xd3\x8b/\x0c\xda\x8f]\xcc\x8d!\xea@\x1bG\xd3\x8ej\xa9\xadZ\xc3o\xaaM\x05\xa3\x92\xa8\xaa\xdbI\xfc$\xf3\x8a\xd0\xee/b\xb4\xb7\x92gm\xa9\x1a\xe4\x9f\x7fa\xf55\x96\xae\xf9\xe6\x92GoT\x8c]\x89\xea\t$\xe3\xe9V\xde)\x83\xa6Z\xc3aein\x8b#I\xe6;\xab\x7f\x13H\x18\xe4\xfb\x93\xdf\xda\xaa\xfa\x1c\xd7\xb72\xdc\xdcO;\x14U\xd2\xaaG\xa7\'~>)rAQ(\xdc\xc7\x1f\x1f\xa56\x12\xe3\x01"$\x03\xed\x93\x93\xf3N\x04\xc8d\x03\xaeA\xed\xc7\xd3\xf3\xaf\x0cl\x8e\xc5\x03z\xb9\x00.q\xfaw\xac\xb4\x85\x9c+\xa3\x8c\x06\xc30\x00\x90~\xe7\xb9\xab\xf5!r\x18v\xdb4\x98\x861o\x92\t\r\xdd\x8fS\xedJ\xdb\x84Y\x02\x15\x03\x1c\xf2;u\xe2\xbb(\xdbWj2\xb6\xe0\x1f\'88\xe6\x9b\x85\x90\x15bv\xa8ln\x03\x83\x8f\x9fj\x8d/\xf0\xda6H\x8f\xa7\x19\xc2\xec@\xf98\xa3:\xd5\x81ns\x8d\xea\xcf\x04\x11\xa4\x0e\xfep$\xa9![\xe7\xb6im\'IB\xc6\xeeh\xc0bO\x94\x08\xe5\x14\xf5\xe7\xe6\x9b\xd9\xceZ\x19\x10\x08\xc9)\xe8b\x0e~\x06E(<Ak\x04g\xef3\xac.\xab\x92\xad\x9e\xde\xde\xf5\xb8\xe8\xf2\xf4\x94\x96\xd2{\x97TH\xe2&5?\x97X8$\x93\xdcv\x15\x9d\xbd\x17\xc69\xd2\x00\xc5\x9d\x80b9\xd3\xf0\x05/\xe2k\x9f.\xc9`\xde\x0bN\xea\x8a\x0f\xb95\x15mp\xf0lfb6\x81\x81\xf2\x0e2A\xa8\x1b\x9b\xb9\xb5\xab\xf8\xae6\xb7\xdda\'\xcb\x07\xf8\xc9\xe0\x9f\xca\xa7\x14\xb3)`\xa3 \x8eO\xeb\xcdW_\xf5C\x7f\xd5nn\xe1fUTT\x84\x9c\xfa\x95rs\x8f\xa9\xda\xa5\xdaZ~\x12\xc6\x18\\\x02\xc4\x96q\xecOj$b$fub\x19\x8f p3\xcej\xca\x9arK\x04`\x06\x0e\x14\x12\xde\xf9\x1c\x8c\x9a\xae\x96\x00\x1f3s\x03\x81\xe9\xfcX\xab\xae\x8b$\x97q\xce^\x15X7\x05\x8b\x9fS\x05\x1c\x96\xa9\xfd\x12\x18o.d\x85\x81f\x95r\x01\x19#\x92rG\x03\x8d\xea/R\x99\xe0\x81d\x07HC\xb9\xcf=\xb6\xaa\xdd\xdc\x08\xc0B\\\xee\xc2\x9cw\x00q\xcd0:z\xaa\xbbg\x07>\xa2{\x8fz\xb9\xeb60\xc1nn\x94\x90\xa8G\x98\xbd}&\xa1\xc3(\xc8Q\xc1\x19\xc0\xff\x00\x14\xefQ\xe9\x8b\r\xe4\x91N\x8b\xac *F\xf9V\xce\x08\xfb\xe6\x91i~e\x81^&:I \xe7\xdcr*\x1e\xda\xd5\x17\x04\x90\xa5\xba2\xe4\xe3\x8f\xf3^\\\xda\xa4\x1eZy\xa0\xa3\x02U\x8f\' \xff\x00\xcdY-\x92\xd4&\xe9\x11IP\x0f\x07\x9aV\xe2\xc9o\x84~B\x85\x11\xee\x1c\xf22@4\xdf\xfa8\x96\xcd\x92!\x139\x00\xaa\x0c\xe4\xe4\x8dY\xe3\x9cR\x8d\xfe\x99\xbdz\x82\xef\x92q\x8e6\xaa\x9a[\x93\x9c\xb8m\xa7\x1b\xba\x1a\\oBc\xdc\xa4\x9erp\x01\x03\x9e\xbd\xe9{\xab9\xadd\x88:\x03\xea$c\x9c\x8aL\x97;\x0b \xdcq\xc0\xe8q\xc8\xcf\xc5W\xacf\xdd\x9d\x1a\'\x89\xd0\xe1\xb9\xdc\x11\xc7\xefR\xbc\xc1 V\x0c\x19H\xdb\x8ao)C\xb4\xbe\x06\x0f\xe2^y\xfa\x0e\xb5\xd1\x8c\x9c\x93\x83\x91\xc7_\xf3J\xb4g\x1c\r\xb9\x19\xce\xdf\xce\x9b\xa1W\'s8$\xe3\x00py\xee;SD.\xbfX\x04\xb7\x1b\x81\xb8\x18\xde\x96\x0eWc\xb0\xa7PD\xb2*\xb0!H\xe0\xb7\x1c\x8cf\x9d\xcd\x1c\xb2\x04\xda\xa3\x81\xb8\x81\xd3\xeb\x8am\xb7c\xe3\x04\x8eq\x9e\xa4\x83\xcd=\x8aq\xea\x0e\xea3\xc1V\xe8EO\xb6\x10\xe3\xca|\xa1b\x03\x10}\xb7\xa8\xd2\x16\xc8a\xbe8\x14\xa7\x87$\x13_\\\xb3\x10L(\xa1G\x07\x05\xb3\xce\x7f*\xb7j\x06W\xb4\x90\xa9\x05\xd0\x16L\xfb\x81U\x1d1`\xb5\xd4e\xf2\x9b1\xdc\xa2\x94=0\xcaz~y\xe2\xad7\xb3\x18\xac\xae_\x1c\x88\xdb\x1fR8\xad\xb7\x87\x8a\xc7\xd0\xae\xa3\x9d\xc6\xa8\xda\x7f5\x94\xe7l\x92\x0eG\xfd\xb8\xc5f\xba\xb0f\xea\x90:\x03\x86\x11\xe8\x07\xf4#\xf5\xac\xc6\x1f\x11\xf8\x8fTv[e\x82%\x1czWq\xfdZ\xa4a\xd1nf\x9a;\x8dJ\xe6Y\x98s\x82q\xb4\xff\x00\xc7\xd2\x9di\xd6\xe9\xa6\xda\xaa1\xcc\xad\xb9\xa4\xda\xa7\x1fJ\x91YY\x87\x12\x0e\xfe\x9e2+\x17kd\xf71\xc0\xddZ\xea\xe6\xeel+\xf9-&cBw\x19\\\xe3#\xbdif\xb8\x8e\'qeo\x0c\x11\xee\xba\xd5p\xcc>\xbc\xd17\x1cmU\x18\xf6\xce\x7fJEeuu\x8cm\xf5\x02Kg\xb8\xfav\xae\x1a\xe903\x18\x03q\xf5n\xe8?:\xe5Z6\x8f*\x14\x8c`s\xc1\x15=\xee\x15\xa5\xd5\x1c\xa3W\'\x9e;\x8d\xc7\xf4\xa8\xca\x84/\xa9\x0e?\xbdt\xc7w\xac\xa0\xcep\t\xeeG\x7f\x9a\x8f\xb9\x9d\xc4\x89\xbd\x95\x93o\x18\x1d\xaab\x08\x94\x906\x90\xc0w\xef^Of\xfei\xfd\xd0n\x07|\x0f\xad3qkq<\x00\xa3\x11\x96R\xd8Rr~@\xe6\xbb\x1c\xd1\xa4\x98ll\x0e3\xb7\xe9L\xadL\xad\x18\t\xe8 p\x0f\x7f\xd6\xa4\xa3\x12\xb4M\x18\xdd\xbd\x0f<\xf4\x07\xfei\x84\x8e\xd1\x10\xa1\xb1\xd8{U\x82\xc6\xc5\xe7\x8bt\xf32o\x1c\x01\xd4\x8cu53\xa5@\xf7\x0f\xf8x\xbc\xc9\x1d\x13\x0cA\x00\x01\xfd\x8dG\xbc\x9e8S\xcdr\xaa\xac\xdbm\x93\x9f\xefQ2\xb3\x91\x87@\x8e\x06==\x0f=i6\x95\xc8Q\xb8r\xa3\xeb\x8a[U\x8eM:D\x06o1\x1c\x10\x18\x8ex\xedQ\xab!\x95\xc2\xf3\x87\xc9\n~\x98\xa8w\x97\x0fmu-\xab3\xac\xc8UY\x0e3\xbf\x07m\xb7\xcd=\x00Y\xa1IT\x82\x84\x12\x18\x7f\xcd;v$.A=\x89=\xbe9\xaf\x15b\xd9\x86-\x8f\x90s\x8f\xa8\xf6\xafc\x97h\xc9V\x07#\x19\xe7\xa5vg#~\xdcu\x07+\xf3\xf5\xe9KI"r\x1d\xa4\r\x91\xf9J\x93\xdb\xdb#\xda\xbaC\r\x80\xc6\xfc\x83\\L\x81I\xcc\x84\xee !\x03\x91IG\x17\x96\xaepK1\xf4\xef9\xef\xd3\x8ehx\xd9\x8e\xf4rq\xc7\xac\xf0\xd8\xff\x00\x8a\xf5$\xc9$\x03\xbc\xe7\'\xfe)\xb2\xf1\x99\xb54x\xdc\xe89\xcf<\x9e\xf9>\xd4\xa1\x90\x98\r\x9f~\xd5\xe4\x86G \xed/\xb8\x9e\x08\xc7\x04q\xc7jN?K\x0e28\xde\x17\xa0\xfa\x83I\xfd\xe0\t\x94y\xca\t\xce0rs\xf3]\xc9.\xe6\x0e\xd2\x11\xdb\x1e\xe7\xbfJJ\xdcE!i\x03\x92\xca\xfb\xee\x0e\x06\x07\';}\xe9x*\x02\x90\x00"\x96\x99\x90\xa6\xd3\t*:a\x86\x0f\xf9\xa8\xf6\xb9X\xd1\x89\xca\x05\xc6\xdf\x81\xf9\xd2\xfb\xa4\x7f3a\x0c\x08\xe0\x1e*1\xadn8-\x19\x00\xe3\x8e\xbc\xd7.\xa6\xba8x!g\xc8+\xabH\xc0\xec7\x1d\x85*&\x85r\x1d\xc0\xdf8\xcf\xf9\xa4N\xa2\x92?\xfa\x8aH\xe9\x9cs\xff\x00zr\xb2\x16\xc6I,\xfd~\xbf5\xd7\xdc\xa0\x99U\xd6\x05FF\xc6\xdcr)\xc4v\x8e\xd8U\xc6G\'5\x15:\x7fX\xd7\x99\x8a\xc8\x1b\x1a\n\xe4g\xecO=\xa9\xd6\xbc\xb3\xc7\xa7\xd3\x8eA\xedK&\xec\x00\xa1\x98\x92\x07\\S\x91h\x93\x8d\xcc\xa7 \xe4g=Gzs\x14\x0b\x12\x80\x07N\xbfO\xf1O\xe1l\x9cm\xf4\xae\x01\x19\xadM\xb7KV\xd2\x97\x04\x1d@z\n\xe4g\x9f\xda\xa9\xe6\xbf#&1\xc7|\xe0\xd3hcp\x008U\x03\xd41NS\xa7\xa5\x88\x1f"\x97\x94!\x0cKq\xd0\xfbS\x07>\xa6\xe8zq\x9a\xb2\xf2\r\xae\xc3-\x80w\xd5\xbe=\x868\x15\x10O\xe7\xfb\x0c\x91\xdb\xfc\xd3\x8fJ\xab*\x01\xea\xe4\xe7\xdf\xd8SW*#r6\x81\xeck\x96\x960\xa4\x90\xc4\x93\xcb\x0e\xdd\xb23L\xa4\xc1\x90\xe4\x9d\x8b\xd5~z\x8a\x8dqt\xa1F\x85C\xc8\n\x0e\xca\x0f\xf4\xf9\xa9\x10\xc6ru\x16\xf7$\xf7\xc5z\x7fx\x02d\xed#\x07\xb0\xcf\xb50\x96(!!\x1f\x0b\xea\xc9C\xc0\xef\x83\xc7ju$\xbb@ \x0c\x1c\xf0\x0fJ\xee\xc6\xc9og\xd8\xc3tQ\x90\xceO\xbfe\xff\x00\x9a\xaegi\xa4\x8a\xde\x14Y.\x1c\xe9]_\x97\x04g\xf4\xa9Z\xd6$\x92Y\x18\xacJ2q\xceG\xf7\xa67\x1a5\xce\xa5lC\\}\xde\'\xe9\xd5\xb3\xces\xd7&\xa3\xf5k\x0b\xdb\x18\xa2&\xed\xe7\x80\x9d\xa0\x1e6\xb68\xfe\xd5{\xb9;\xd8\xe3\x85^\x00\x1f\x15Q\xf15\xda%\xb2Z\xf9\x81^FV\xeb\xc8U\xff\x00\x9aW\x88:gN\xb2\xe9\xb7\xd3\xb4\x92\x89\x960\x04\xc2B5\xb0\xe1t\xe7N\t8\xc5E\xe9\xfdR\xee\xe2\xea\xdd\x00O,\xb9>^\x90t\x83\xc9\xcf9\xaa\xf5\xbc\xb2\x02\x7f\x1a\xe1yP?\xcd?\x8bcd!\xeb\xdf\xdf\xeb\x9a\xafB\xca\xae\xa1\xdd\xb0\x0eG9\xce)\xfcw*\xa5\x98\xa79\xe3p\xe3\x1f\x95y\x95\xafS@\xa8$e\xc0\'\x92r\x07|c\x8a\xd4\xb1$\x9c\x0f\xda\xa7-\x9d\t\x91\xd1\x8e\xd4m\xa7r\x9e\x1b\xaf\x18\xea)t\x91aicI\x1b{\xc6\tb88\xe3<T|w\xc2D\x04\x1c\x86\x00\xe0dd\x0fjY\xa4\x86+b\xe20|\xc7\x00{\xe0rNkE\x1d\xf4F0c\x9d\x07\x96\xac\xe5\xf2F9\x1b\x00O5\x1c\xa9$\xeaS\xea!q\xb7\xefKd(\xc7\xf2\xe0\x1f\x91\xff\x00\x15\xda\xa6\xf6w]\xc5\xb2\x06\xdct\x19\xebM\xa2g~J\x1c\x11\xd7\x90\xb9>\xf8\xedO\xe3\x06=\xa4\xb6\x01\\\x80s\x91\x9e\xb5"\xd5\xc4\xf88\xf4~\x98\xec\x0foz\xe3\xb6\x8e\xfb\xfe\xb9\xa4\xa4R\xa9\x80H \xf2OB}\xa99-\xbd\'l\xb9\xea}\x86>=\xf1K\xab\x80@Y6\x8c\xe4\x91\xd0\xfe\xb5\xe4\xa67\x7f.1\xdb$)\xfc9\xed\x8fj[\xf9,\x84\xe41\x18P5\x1c\xe7\xe3\x07\x7f\xd2\xb8\x1d\x83\x01\xc7rq\xfdi\x94\x82X\xc2\xe1\xf7\x15\x07\x85\xe7\xebH\xc8\xd1:\x87\x03\xd3\x8c1\xe9\x8f|\xd5\x82xV\xda\xddUF\xe7nY\xb3\xdb\x1d?\xe2\xa3\x8cq\x82\xf1\x98NG9\x1d\x0e{\xd2nm\xde\xdd\x8a4\xca\x0b*\xe46N\x96# \x03\xef\x81\xbd*+\x95q\xa8)\xd8\x9c\x11\x81\x91\xdc\xd42\xc6\xca\xf26U\xbbm=1\xee;\xd3\x01 \x12\x07\x0e1\'\xe1\xc7\xf7\xc8\xa9\xb9\xa1l\x10#-\xce2\xbc\xe7>\xd8\xaa\xbc\xc6X\xdb1\xc5\xb5W\x8f\xc2z\xfbc\xb5f/\xae\x05\xb6\x81\xbe\xadE\xbd\xfb\xeejrL\x8f\x9fP\xce\x06\xd56\xa8\xb3B\xff\x00x\x8d$\x8c\x8c\xa9#\x9e\xbd\xaa\x1ek\x91\xa5\xa2^\xa8bm\xdfkF:\x98\x9f\x8e>GZsh\xac\xe8\xe5\x95\xb7\xe3\xa7@i\xad\xe4\x1etEX\x82\xae\xc3\xa78\xf8\xfaU\xbc7\x86kXd\xc1\x1a\x10\x95rrr8$\xfc\x1e3P\x9d\xd7\\\x88H!\x8e\n\xf6\xc7qV\x0b\xbb\xfb}[M\x02\x02$2\x00\xcb\xf9s\xcdq\xa4\xe9\x9e\\2]L\x8a$9\n\x84\xf0\x00\x1dO\xd6\x9d\xe9V\xf1\xdaYE\x04`\x01\xc8w\xc0\xc9\xcf`OJ\x99h\xa2[u\x08\x99\xda\x0f\'\xae{\xd6\xbc[\x9e\xa1-\xa5\xf5\xd1\x8eY\xa3\xb6\x0b\xb6\xc3\xdcg\x9c\x91\x93\xf1T\xb1\xca\xb6qKo\x0e\xa5F\x94\xb6O;\xed\xf1\x81\xb5QomVf\x988\'vy\x07\x18?\xf6\xa6\xb6\x0f}\x1cw\x10H\xc2UO\xc3.y9\xab\x1d\xd5\xb3\xb9,\xaa@Pri\x08\xed\x82\xc0\x83g\xe2]\xc4\x9fj\x89oi\xe4\xdc\xc90\x0c$\x00\xe9\x90m\x9d]\xbeF\xfd\xead\xb3\xa4\xb1"0\x0c\xb9\x07I\xed\x8a\x80\xd3\'6\xba\xa8\xde@\xde\xa5A\xf9\xab\xdd\x8c\xad&\xa9\xa4\x00@"\xe7\x07\xdc\x8e\xb5\x98\xeb1\xbc\xec\x1e#\xb0\x86]\xa4pr\r\\\xfc\x08\x977Z\xdd\x97\x98\xe6B\x8cY\x89\xec\x00\xedW>\x19\xbb\x92\x19\x9a\xd7wId,\xad\xf4\xff\x00\xe2\xaa\xfa\xe5\xba\xca\x86\xe7 \x18\xe3 \x8f\x921\xfd\xeb\xe8\x9a+\xc1^\xd6\xe6\xb2\x15\xd5\x15\xe0\xafh\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xaf+\xda\xf0\xd1EV\xbcY\x17\x9b\xa2]\x81\xd8\x03\xfaV\t\x1ch\xf2\xb3\x1e\xaa\xd5\xf4v\xad\x17\x9f\xa7^G\xef\x11\xaf\x9b\xad\xe3\x90\xde]\xe0p\x1b\x1f\x1cVw\xaf\x82\x1a\xc5\xb4\xe7%\xc1\xfb\x0c\xd5\xe7D\x93I\xba]X\xd9O\xeb\xb5+\x10\t\xe7\x97l\x05\'\x9fl\xd2\xcbp\xaa\xe9\x13:\x90\xcb\xbb\x07\xbe;\xd27\x12\xc6\x90\\\xe3n\xed\xa4\x1c\xf4?\xf7\xa8\xb4\xfd\xf4\x10K4XS\x1e\x03\xf7\xe2\xb1\xed,\xc8\xeaa\xc1\x03\x93\xbe1\xc6\xf5y$\x83}Y\xed\x8f\xf8\xa8\xab\x0b\x16\x8fW\x9a\xe5\x10\x95\x13q\xfc\xa7\xde\xb4;\x1by\x96\xf1\x9f\xca\xc0\x11\x90\xb8\xe0d\xff\x00\x93Q:U\x96\xe8n\xb2\xa7\x82\n\xb6x\xfc\xaa\xd4\xae\xf0\xc1\xe5\xe4\x97$2\xe3\xe9\x8cW:oMkx\xd9\x988_\xfd\xc5\xfa\xf1\x8f\xdbj\x85w~$`\x01\x19\xfc\xa7\xe9U\xedV\x06\x8a\xe5&hq\x1c\x84\x06\xe78\'\xe2\xaa\xf7\x96\x92\xc2\xe3\xb8\xdd\xd4\xf1\xd6\xafw\xad\x14\xf1\xad\xbb\x15b\xcb\x8d\xc7\x8c8=*&KQq\x11W_\xdeFN\x08\x1c\x11\xeck5\xd6,\xd5\xee%0\xb19\xf5\x00\x08\xd9\x8e\xec\xa7\x1b|\x8a\xb2\xe9\xfdCB\xaa\xb9\xf8?N\xc6\xaa\x8bo/\x98YA\x0c\x9d\x00\xef\x8e\xe6\x9b\xca\\\x90\t9\xec*dZ\xf9Nr\xe7\x8e\x1b\x07\xa55\x96&\x89\xd5\xf06\xb0\xe3\x8e\xd5\x94\x98\xb0P4\xb2\x80N\xa1\x9c\xfd\xf1W?\x8a^u\x03\xb6\xd4\xc69&\x88\x93\xc6\xd2}\x86s\xf1R\xb6\x19pE\xc7\n\xc3.\xc0\xe7\x1fL\xd3`\x91\xca\xc8\x19\xb6\xa8\xfe!\xd7\xf3\xa0F\xea$T\x9b\xd0G\x19\x1c\nv\t\x9fNK\x07]\xc6\x92F\xe7\xe4\x1e\xd4\xc3^\xa6H\xce\x0f\xbdHr\xe8\xc4\xe3\xaf~\x0f\x1d\x05t\x88\x8b4j\x17\x0cF\xe23\xc9\xed\xc5C\xf9\xa3#ccf:\xf7\xa9\x18f>\x93\x95\x00r[\xae?*\xe8\x9e\'p\x18q\x8d\xfeG\xcdLK\x8c\xaeC\x0c\x1a\x96\xdf\xb5\xb9+\xff\x00\xb3\x92y\xfaR\x96z\x8d\xde\x9d$\xbfwu\x02O\xc4\xae8\xf8\xa8\xdf9\xdc\x9c\xbb\x001\x96\xc0\x1fL\xd2\xa1\xd5\x163#\x07\x00\x9eO\xb9\xefO\xc3\xd4\x0cn\x1e)\x1a6F\xc8n\x0e\xfbv<b\x91#G"\x94\x91U\xd5\x86\xeaw\xf9\xa9)\xaeu;\xd9\x90\xdd\xbcr  \xc6\x8a6\xc7\x9f\x7f\x9f\xce\xba2\x05f\xdaY;\x1298\x1d?Zb.\x02\xf0\x92r{\x8f\xec3I\t\x9f\x0b\x83\xb4\x9e\xa4rH\x14O\xd4\x11\xdb_\x9a\xec\xe4\xeaf\'Q\xf6\xc0n\x7f^\xd4\xa8\x8a*\x85UUP0\x00\xd8~\x94\xf5\xd8\xa0Vr[\'\xd4q\x9c\x1f\x7f\x81B\xdc\xban"B@\x00\x0c\x12:{\xd3]\xe04j\x17wvl\xf4?C\xd8\xd7\x0b#/\xd0\xf5\xe7\x8c{\xd4\x19\xaf$\x8c\'\x97#/\xb9\xc9$\x1f\x9a\x90$C\xce\rL@\xc1\xe3f\xc0$\xf7\xeb\xf9b\x80N0\xcd\x8eq\xb5y\x18?\xf7\xa6\x89w\x1aF\x8a\x0e\x07\xb8\xed\x9f\x7f\xf3I\x8b\x90\xbc\x81\xd4\xe3\x8e\x80\x1au\xaf\xa2X\xe2\x05\xf5\x12\x98|l2w<SZ\xc1-\xdb}\xaan\xd9d\'\x0e\xf9e\xc0 t\xfa\xf1K]\xacmo!\x90#\x10\x84\x02Gj\x8c\x8ex\xc8\x8c\xee]\xca:\x0e1\xf5=\xcd<\x13\xc962\x83n8\x03\x1cc\xdf\xb5[Zu\x08\x966\x8dN\xee\xbbn_9\xdf-\xf4\xa8\xae\xfe\xb0\xd9\xc6\x0f\xd3\xf4\xa8\xdd\x11\xd9\xad \x88\xc6r\xa7\xf1g\x00`\xf7\xa9\x9d\x8b\xc1\x0f\x92\xa4\xe4\x01\x9e{sQ:xG\xf3\n\xfe\x06\x91\xb6\xe3\xa7\x07\x04\xd4\xe2\xbchT*\x8e:\xf1\x823\xef]\xb2\x7f2\x08\xc4\xac\xbe\x9fHbq\x8d\xc60\x07\xfeb\x93<\xca%}9\xdc\xe7\x14\xc6I\x9a=\xeaS*\xdd\xc19\xc7\xc8\xad#F\n\xb6\x16\xa0q\x88\xd7\x8c\xe7\xb5gs\xc5\x95\xf4\xe4\x86\x19\x18\xceA?Z\xb8\xe9\x12\xb0\xb2\xb6\xdc\xde\xa0\xb88\xf85\xad\xf0\x93\xbc\x1dN\xe7\xcd\xdc\x18=\'l\x01\xa8\x1c\x03\xde\xa9:\xeb,\xd6\x91\x058\xc4\x9b\xfc\xedRz\xdc\xc1t\xf9\x97\xae\xf2\xaa\x07\xe7T\xdd\xde\xa97! \x1c\xe3\x18\x1f_\xcb\xda\xa45\x1b\xb5\xbc\xb8\x10\xee\xf4C\xc8\xf6/Q\xadp\x8a\x19d;I\xc6\x00\xea+\x9dv\xf9/\xba\x84\xb3\xa4\xaa"\x89|\xa4c\xc3\x14\xc99\xfb\x9d\xab\xbd2?\xc2\xda"\xb0\xf59\xd6G\xb0lc\xfaT\x8d\xbc\xe2\x14\x9f\x8d\xc8c,X`\x9e9\xe9Qp\xea\x8b%\xcc\xb2$\xac\x91\xb3\x02\x01\'\x8e;\x81\xefJ&\x9bk\xa8Z\xddF\x97\x8e\x1eX\xb6\xa9\r\x8c\x15;\xbb{\xf4\xaan\x9d1Id\x8eb\xea2@ d\xe4{\xd6z\xf6\xfb\xa8[/I`\xb1\xac.]\x81\x0e\x08\xd4\xbd\x89\x18\xc79\xfb\xd5\x8c\x1f\x84\x90\xddz\x89a\x80F1\xb1\xef\xfbV\x90\xd7\x8b=\xb2\xa9\x90.\xfc\x0c\x82I\x1cs\x9a\x8e "\xa98\xf4\xe7\xd4\xbdZ\xa3G\x98\xbb\x0e\xf0\xca\xc3\x86#\x8c|\xd3\xe7\x03\xc9]\xe4\x96\x03\x07\x9e\xbf\xf1V?\xeaS^\xab\xbc\x90\xe9x\xd0\x0c\xb1\xdb\xb1\xcf~y\x14\x80\xb0\xc3\x80\xae0\xcd\xc0\xa5b\x9c\xce\xad\xba0\xa5H@\x07\x1cW1\xc7\x19\x91\x97\x05\xb1\xc9\'\xa7\xd0{\x9af%*\xc7q\xcf<`~\x11\xef\x9aH_&\xe6\n8\x1f\xd7\x1fZ\x8cz\x84*!3\xba\xb9\x04\x8c\x905\x12>\x05t\x95\x1a\xb4\x9c\x02;qR*cI\x03ob\x01\xc6\x08\xee)Yv\xa8\x19\x89Cds\xf1Q#PP\xe1Y\xc7\x1cq\xc1\xf7\xe6\x97k\xa5a\xb4\xe7\x19\xe1\x8f\xf74\xed\xbd\xfd\xb4\x8a\xe1d\x8f\xf3l4\xe7\x07\xef\x9abY\x82\x95;\xf1\xcei\xbd\xcc\xad\x13\xc7"\xe4\x10\xc1\xc68\xc1\x1c\xd4\xfe\xa7\xe2$:Z\x14R\xb2\xc9\xce\x18d\r\x87\x91\xc7\xbfj\x87\x96\tf^\x18\x80x\x1cq\x8aR\xd3E\x8d\x9e9\x1ac*\x8e\xc7\xf9\xaa\xd2\xcf\xfd[\xff\x00Y\r\x9a\x95K\x98\xc21b\x17\x198\xd4;\xec\x0fj\x85<\xb6\x92\xb4\x12\xcc\xc30\xb1#\x199\xf8\xa4\xf4\xdb\xbb\x8b\x98\xdc\xcb\x1e\xd3\x92x\xe4\xe3\xda\xa4\x0b\x05*\xbc\x9e\xe0\xd4\xa2\xe8\xc1\x8f\x1bq\xf1\\I\xa5<h}|\xfcU\x92t>\xa5ml\xaa\xcae)\x9fY#\'\x1b\xfe\xf4\xc9\xeav\xef!*\xfaA\xfe]\xea\x1a\xe41\x88\x9c\x1eW\x8c\x1a\x8e\x86\xfa@\x1br\x15U\xe0\x01\xc0\x18\xfaT\xdc\'\xc9\x05J\xe7\xb3}*\xb7x^\x19\x1f\xcaF\xd8I?J\xccu(\xa5\x80Gr\xb32\x9d\xc4\x91\xa8\xc9\xf7\xc9\xf7\x152\x1b\xc0\xc4\xc6\xcb\x91\xc85r\xd1P\xde~\xfa@\xe1\x11\xb0\x0b`\xee\xf9\x1f\x15lg\xb5d(c\x04\x11\x8c\xf7\xc5Vm\xa5\x16\xb6\x90\'\x1e\x94\x00\xe3\xdf\x15\x01\xab\xf8\x8d-\x90\xc7\x19c#q\x95\x19\xdb\xf3\xf5\xad\xdc\x1dG\xa7\xf8\x7f\xa4#]0yZ0\xd2\xe4d\xb3\x11\xf9@\xfd\xab9p\xf7\x1dB\xf1\xbc\xac\xaa\xaba\x00\xe0\x01\xde\xbd\x92x&\xd6\x12\xd4\x10Qn6\xff\x00\xee\x0b\xcd]\xc4\xd9\xef\x8a\xc5\xed\xafS\xef\xb0J\xb2\x10D\x8as\x83\xef\xde\xb4\xab\x8b\xc5\xb7\x81\xa5\xc9l\x0e\x00\xea~\x05f<#\xd7#T\xebs\xca\xaa\x9f\xc7\xf32;G\x8fH\xfbT\xce\xaa\x1aSh\x99\'\t\xa4g\xdf\xb9\xfb\xd7> \x90<V\xe9\x82[yl\x0f`*"\x08\xfc\xbe^B3\xc8\x07\x93M\x05\xf5\xc5\xdb\x87,\x13\x9cm\xee\x05I\xac\x19\x19.9\x1dz\xd5}\xcd\xc0\xeb]J\xe6\xfe\x08Y\x8bh\x08\x1b\n\x00Q\x80y\xce\xf5"\x0b\x83gm\x1c\x05\x80\xc6s\xdf\x93\x9aX\xc8\xb2\x15e\x0b\xd7\x8e\xdf\xda\x90$\xa9,F:\x91\x8e\xff\x00J\xed}\r\x81J\x02\xd98\xe8{b\x9bc,\xa4\xf9\x8f\xa2@Nt\x8c\x80q\xcd8/\x82\x8c\r\xc66\xc9\xa6\xa6\xed\xf0\xe8N\x03\x0e\x7f\xf0SI&r\xa5\\\xed\\r\x17\x80i\xdb[\x16;B\xe0{\x01IMa+\xae\x06UEV\xcf\x1fX\x95\x1c(\x96P\xa0\x81\xf2=\x8f\xc5,^\xa0=\x97\'5\x15jv\xa4\xac#\x0c\x0b\xe0\x80z\x03\xf1O\x04\x81\x89\xc1\xcf\xb8\xf7\xa4\x05\x95\xc0\x066\xfd\xda\x8eY\xb1\xb5q\x9fzAa@\xca~\xf0\xbc1\xdb\x9c\xfd3Tq\xf5\tzw\x93\x0c\xd0\x15\x18\xc1\x0cBo\x9d\xf06\xdb~\xf5\xd9:\x84Z\xc8i\x80=\xbb\xd4\xcd\x94\xdb\x0fQ\x8e\xc3\x1f\xde\xacp\xca\x8f\x8eA<q\x8e\x05W\xec\xec\x91\xd43K\xbb\'\xf8zU\x82$\x8a\xdfn\xc5\xe4v\x15\xeb\x1e\x1a\xb8\x9c[$\x8ecHp\x08\xcb\xea8>\xd8\xc8\xaa\xcb\xb9\xa2\x98\xfaX\xb3\x1fa\xb7\xebN\x96<.\xe1\x12\x90I=:\xd2d\x8eAU\x00{\x009\xa7r\x88\xd6\r\xfb\x8e\xe1\xd7\xda\xa2\xe5\x95I5\xb3\x96`\x14d`\xe00\x04\x8e\rV\xc6y \xe4q\x9aW\x83\x93\xc3\x0e\xc3\xdf\xdb4\xed\nl;\x80S\xff\x00\x9cT7\x9cw\x05\x03$\x9c\x01\xefR\x91\x9d\x83\x9e[\xb9?\xe2\xa2\xc1?\x99+\xa2\x00t\xfebF\xc0\xff\x00\x9azS\xa1\x14\xb1\xe7\x809\xaef(\x7f\x8b\x1d8\xa6\xcd\x93\x8e\t\xc8=\xa9\xec\xf2\xa4\xb0\xbcr\x00A^\xb8\xe4\x11\xde\xa1-K\xcaR(\xcf\xad\xba\x12qM]\xca \x9e%\xd9\xfc\xdf\xcb\xa4o\xa8\x1cc\x1b\xf3\x9d\xa9v\xef\xe6#\x9f\xcb\xa7\x9c\xf1\x8f|\xd2\xb2#@1\x9e=\xe9\x8c\xcf\x90\xd9`\xa4\xf1\xfaT\xa5\xee\x9fs\x04E\x96O0\x01\x96\x00\xf2*\xb74\x8f\xc6\x19\xb2O>\xdf\x9dg\xfa\xbbIft<2G\x95\xca\xa9\xdc`\xed\xb1\x1c\xd5\x95\xb4\xe9"\x86\x12+`\xeeG\xc7\xbd5\xbay\x04\x0f\xb4\x92q\xc9Q\xc9\xc7\x7f\x8aKB\xf1\n[\xa4\xd1J\xb2r\xe5\x86\xd5\xces\xda\xa5\xa1B\xf1\xb0d\'p\xc1\x1d\xa9{-"\x14\xe5\xe3\xc99=8\xcdf\xed\xec\xba\x8bu\x1b;\xbb;\xb3\x1b*0mK\x95\x00\xed\xbf\xbejT\xb7P\xbc\x12\xc52eI\x07\x00\xeeqOmo\x9e\xf9\xb1\x15\xbb \xee_\xaf\xe8)-G\xc2\x96\xba\x88i\x19\xe4YO&E>\xaf\xeb\xda\xa6V[M2/2vX\xf2zw?J\x89o\x18Y\x0b\xaf/\xc9>^\xd0C\x96\xe4\xb6zc\xda\xb5W7]\n+U\xb7\xeb\xddB\xdeY\x1c\xe7C\x8c\x15\xcf\x07\x0b\xf9~\xb5F\xd7\xbf\x84\x9fU\xaeb\xc0\xdc\x8d\xc9\xfa\xe6\xa9:\x9f\x87\xeft\xb5\x13+\x89b\x18\xdc0r>i\x8a\xba\x96OK.\x179\xc6?\xadk\x90\xdf\xe9\xda\x9cL\xb1\x959\xea\x8d\xc1\xa6w\xde\x1e\xb3\xbb\x10\x95\x85\x15\xa3\x1by\x1f\xc3\xed\xf9VF\xfb\xc1V\xd7\x8a\xd7]\x0e\xf6\'\x81\x95J\xa0m`\x90w\xc3\n\xbf\xb4\xeb\xe9"*\xdc/\xab$k\x1bv\xee*\x83k\x08\x9b.]V5oQ\xff\x00\xbd-,\xa2iA\x89s\x1a\x8e\xa78\x1e\xe4}jm\xfc/\x85o\xdco \xf0\x03\x7fZ\xf2;\x11lv\x95+\xb4t#\xfb\xd5Jtn\xa5h\x91\xc5,K\x12\xb3e\xe4\x19$\x91\xc0\xdc\x00\x07\xc0\xa9\xcd{\x03e\x92Md\r\x96\xa1m\xe4\x9d\x18G\xbd\x94c\x80\x0f_\xce\x9e\\\xcf\x1d\xb8;\xb6\x93\x8e\xa4\xf3\xcf\xd3\xde\xb9\xb9\xdc\x0bp0z}*\x1d\xd8\xcb"\x9cpr\x00=j\xba\xe2\xfd\xacc{u\x91\xe4|\x8d\x0c\xfb\x808\xd8\x1c\x8a\xea\xcd\xad\x83`\x01\x8d\xf1S\x10\xdc\x99\x07,\x0f\xa4\x1fW\xb7N\x95+g\x1c\xa1\xb2H%\x9b\x1d2H=*\x1e\xda(\xed\xd3\xcc\x93h*:u\xab}\x84~\\k4\x8b\x99Xd\x03\xfc \xf6\xfa\xd6\x97\xc3\xf0\xdc\xdf\xcf\n\xc8\xf8\x95\x06\xb6\xc1>\x95\xf7lw<\x01Qoo\xa3\x82\x17ld7\xa4\x0cri\x95\xf4SD\xc8\x9b\x06$#\x04\x9e\x84T)x\xe2b\xa6P\x19\x01\'\x07\x19\xc7P*kU\x95\xca&1\x959\xfaU\x0bX\xd4\xa1\x841F\x1b\xb1\x82@\xce\x7f\xefP|Qv\xd6\xd7\xb2\xac \xe42\x85\x0f\xecFH\\cpi\xab+\x96\x92\x04,F\xe0\xe7O\xb8\xa9\xd8\xaf\xa32M$d\x16\x8b\x00v\xfc]\xe9\xec7\xf04R\t"F\'8%A\xe6\xb3m*\xf1\xcc\x93\xcb\x92T\x809\xeeO&\xa5\xee\xf5\x05\x81Uc\x1cJ7\x0c\xf4\x1c\xf4\xfc\xab\x1f\x07P\xea6\xb3\xc8RPv:\x94\x8c\x82Xnp~\xc2\xb3}^\\\xde\xb1\xf3\x0e\xca\x00\xc1\xe3\xe2\xac\x87Y\x81T\xac\x96\xb1\x95\xf6\xc0\xa60,z\x8a\xce\x90A\xb5RU\xe8rq\x8f\x7f\xadT\x8bK3e[,y\'\xda\xaf~\x14\x02\x14\x91Z<\xc8\xef\x90I\xc0 \x0e\x95m\xd1o\xae\xae\xef\xadm//s\x0c\x81\x90\x8d\x038#\x81\x81\x9ei\x1d>\xf2H.\x10\xf9\x84);\x82\xc7I8\xda\xa4l\xed%P\x8a\xc8X\x1e1\xfejf{ux\xd3zl\x03\x80\x07z\x92Y\x06\x00\n\x03\x13\x8f\x93H\\\xc6v\x02J\xf3\xda\xbd\xaa\xc2\xce\x08\xad\xde(\xcbN\xa1\x00\xc1\x00`\x0e\xc7\xbdX\xcfr\xc6Ev"-\xf9\xcdWo\xe3\x05\x92%\xfe,\xeea\xed\xde\xa2uI\xbc\xb5R\x9c\x00\xb8\x03\x1d\x85I\xcb {\x88\x94\x13\xd7\x1f\x95IOe\x15\xc5\xb1\xdc\xdb0x8\xcf5\x1dak\xf1y\x1d\xbb\x85\x7f\xe5\xfb\x0c\xe3\x91N\xb5\xca\xdby\r&\xea9\xfb\xd6Qx\x8d&\xd5\xdb\x92y\x03\x1c\xd6\x8f\xe0u\x87H\xbe\x88\\)\x0fp\x9bP\x9f\xe1\xcf\xbf\xd6\xab\x96\xfa|\xd2\xeaLLO \x8d\xb9\xda\xa4\xf4\xadOG\xf0\xd8\x91\xe1\xbe\xbf\r\xe6)\r\x14=6\x81\xd0\xb7\xfcS\xbe\x19\xe9\xfag\x9e\xe2eu\xf2G\x97\x18#\x00\x9e\t\xa8\xbd_\xa84\x91\xc7\x04$\x1dd3\x9f`7\xab\xb5{E\x15\xae\xaaj\xf4W\xb5\xcduE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QExk\xda\xf0\xd1E\'"\x07GS\xd1\x94\x8f\xd6\xb0\x1b\x8b&\xb2\xd4\xb5(\xc9\xda\x0b\x9e+\xe8\x1a\xce|_\xe1\x99\xef\x1aK\xcbY0N<\xc5\xff\x005\x12\xf6\xdf\xf1\x10zST\x88u \xce2q\x82)\xd8%\xf2e\x04\xb6\x15\x86\x96>\xc39\xcdc\x976\xf2\xff\x00\xd4!PQ\xfa\x1e\xff\x00Q^%\xcc+i\x1d\xbe\x7f\x08=O\x0c\x7f\xc5^#\xb2\xb6\xb0\xb4\xc3~\xf1\x80\xe4\xb7&\xab\xd0\xe8\xb3^\xcc\xd2\x8d\xb1D\xc7\x80GZ\xc7I\xd2\xae\xad\x0cqD\x9a\xe4\x95\x0e\xb5\x038\x19\xce\xe7\x8a\xb8\x17\xd0\xcd\xa8\xbb\xe1\x10\xe5I\xdb\'\xe2\x9fY\xcboke\xf8\x9b\x0c\xa3w}\xb4\xe1.`\x8e\xdd\xd8\xca$^\xa9\xb4\xe4\x8f\xce\xa6WG\xb11\x85\x95\xbc\xc6\t\x82OL\x0f\x8aeq\xa7\xd8\xdb@\xc9\x0c*\x83\xff\x009\xa97\x16=OK2\xb4\x0b\x1a\xc4TnK\x0f\xb7\x06\xa1\x19\xedI;\xbe\xa2\xd99\xe2\xa9\xb7\xba\x9cl\xc7k\xe4\xa1\xc8\xfa\xd4\xc6\x95-\xd3A\x99a\xdc\x92\x1d\xc0\x8eH>\xfc\xf6\xaa&\xb9qmg#D\x89\xbd\xf3\x9c\xd5\xb3M\xf1^\x9e,-\xe3\xf2]Z4\x01\x81\xe4`{\x1a\xc6\xf4\xbbu\x92\xfe\xeb\xf1}@+$x\xd2\xa3bs\x82>p)\xf9\xae\n"\x14\x8c\x90O5\xed\xeaI\x03\xc8J\xaa\x8d\xdc\x13\xd4\xe7\xda\x99\xa28\xe5\xc0~2\x07\xd6\x9d\xde\xf8\xabL\xbbV\x06/H\xeb\x9a\x89\x1a\xcd\xb8S\xe5G\xb8s\xcfZ\xa9\xea]\x16(\xae\x99\xed\xefK\xc5\x9c\x8d\x88\xc1\xcf\xb7z\x93\x17SvL2\x10@\xfa\xd4\x85\xbd\x94S\x12@\x00\xe7\x90{S\x96\xd3$ G\x18Gf\xc6\x14rG\xd6\xab\xcb\xaa[\x1d\xfelG\r\x8c\xb2\xf1\x8f\x80*\xc1\xa6\xf8\x9bG\xd3\xa3)\x15\xbc\x85\x99\x8b\x12\x0e\xe3\x8f\xce\x9f\xe9\xb6=6B#\xb9\x92\x18\x17\x07T\x9a\x8e\xa3\xf0\x14\x0e\xff\x00Zn[\xc9\x01,\xa1\x98\xe7a\x8d\xa9W\xf0\xc6\xc8\x89\x92C\xe6u;z\x0f\xd6\xab\x97\x10\xdd[\x80@\x05\x03g\x1c\x1d\xde\xd5e\x97\xc6\x96\x8f\xe6\x0f\xbbK\xb5\xd4\x8c\xe0\x1c|\xe2\xa0n<C`\xe5\nZ\xca\xd88\x1c\x00)\xce\xa9\xd3\xfc6\xde_\xe0\xef\x16=*AoVN\xfc\x9d\xb7\xda\x97o\xd4/W:\x91\xb7;\x0e\xd4\xda\x1b\xb6u\xc1@\x08\xea1\xfdi]\xdb\xb1\xe9\xe8r*\xe3c\xe1\xd6\xbf\xb5\x8e{\x88\x8d\xa3H=\x00\xf2\xe0{\xb0\x1d3\xedL\xae|;\xa9\xe9\xce\xac-%\xb9\x8c\x1f\xc7\x08\xdc1\xf2:\xd6f\xe3\xc3\xf7\xa1\x8bE\x99\x90c,\xa0\xe5A\xf7S\xbd>\x9dj2H/\x86\x1d\x89\xfe\xf5_iv\xbbt\xe0\xf4\xeb\xfa\xd7&~G^\x98\xcez})[\x89R\xdeF\x8e\xe2\xd6kv$\x14\x0e0Y{\x91L\x1eKv8\x12\x109\xe0\xf6\xfa\xd5,\xb6\xf2\xc4\xe47 \xef\x8c\xe4\x1f\xda\xa5/S\xd8\x10N1N\xcc\x84\xe7\xd61\xfcY\xa4\xde@p\xd98\x04r)\x15}\x81\xf0\xca\xe3\xa146\x1b\x82\x9bON\xa2\x9a\xd0r2\r8:\x93\xf6"\x9dJ\xed\x1a\xc6\xccT\xac\x83\xd2Q\xbac\xb1\xf9\xae\xe2\x9d$\x1bx\xc0\x1c{\x9f\x9a\xe6\xdfJ\x17\x13F\xac\xc0FF\xec\x86\x04\x1e\xddEXG\x87\xad\xe3\x8c2\xe4g\xa1\xcf\xbdZ\xc1\xd1.\xefb\x92H   \xdc1\xdf\x8f\x9ai\xba\xae\x9c\x06\x97s\xedQ\xd1\xb6\xc29=9\x1d\xb3Jn\xfd\xd9Uc\x82\xdf\x84\x1e?J~<? q\xff\x00\xe6\x08\x83\x8c+d\x93\x9f\xa5<o\n^\xb4d\xad\xc2\xe4t\xc8 b\xba\xbe\x18\xeb\xed\xab\xcb\xb1v\x00\x1c\xe9*H\x1f \x1aP\xeaqm\x99\xd4}sQzM\xe2\xda\xc7-\xb4\x88\xecw\xb61\xc8\xday\xc8\xfaT\x95\xb5\xc1\x9d\xdcd\x14\\\x0c\xfe\x16\xcf\xd3\xe2\x95\xb5\xf0\xc4\xf6\xd2oy\x9fp\xe4\x10x\x1f\x15\xed\xc6\x98#\x1f\xbbfW\xc9$\x1e\x95g\xfe\x99\xd6\xed\xad\xe1y` DN"8RG\xf7\xfaSo{\x13H\xc5$\x04\xb0\x19=\xb3N\x9c&\x0boQ\x8e\x85\xb8\xe2\x9a6\xad5\xa2\x98\xad\xcb8?\xca\xb9\x03=\xf2j*\x7f0\xfe>\x1c\x7f\x17\xc7\xc57\x85d\x82V\xcd\xe3\x90\xde\x97\x18\xe9\xc7\x03\xfa\xd3\'\xaaL\xce|\xb46\xe4\x1c3\xa9\xc3\x0c\xfc\x12)\xb3(+\xea`\xd8\xe1M:\x96\xff\x00P\x99\x9e\x06A\x1c}r\x139\'\xdc\x9ei\x99\x85C$r\xdd\x10\xcc3\x83\x91\x8cT\xb66H\xdecz\x1b\x1bI\xebH\xca!\\\xb4\xb2F\xb98\xc3\x0c\x9e+\xb2[\x19r\xf37\x9a\xca\xc5@\x95\xb0\x15A\xe3\x900{R\x05\xf1\x07\x00\x90\x08\xed\xdc\xd7\x90Y\xc1\xb1\xc7\xde\x18\xae0J\xbe?\xb5#m\xa7li\xd5$\xda\xa0\x8c\x06<\x1c\xd2\xe9}\xa4\xfaUJ\xe0\x1c\x92\xa3\x00\x8f\xce\xbcmOJW\x91\xd7x\xe3\x9e\x98\xff\x00\xc1R\xd6\xdf\xa60\x8bT\xd6\x80! \xaa\xc9\x8c\xe4\x1c\xfe\x94\xdb_N5\x0f^\xfe\xebJ22#\x06\'o\x18\x00\xf7\x1c\xd7q\xdeH\x80\x0f,\xb0\x078\xcfZb5}=\xc8\xf5\x10O\xf0\xb7\x02\xba\xfd\xabh\x88v\xc3\x9e\x7fO\xa54\xd0\xd9\x87\xd7\x15\xe2\xc6\xa1{e\x89\x00\xe7\xda\xb9\xf8\xc9\xf1\x82\x18\xef\xf4\xa7\xadz\xd2gleq\xf3Lv\xce\xdb\xb0\x87\'\x801\xd7\xe9I\x9dhuK]\xd8\xe3\x93\x8e\x9f\x15\xc1\xf1\x14\xc2P\xb1\xaa\x8e\xa3\x18\xc9\x14\xcc\x89\xd3e*\xf3\xf5\t[\x07\x18\x8e29\xdb=\x85\x02\xeaq\x90\x13\xb7v\xa7\xb1Y\xde\xbb\x80\xb6\xd2d\x7f\x11\xc0\x15\xe3\xdb\xde\xc2J\x93\x92\x87\x90\x7f\xedL$\xf1\x06\xa3\x1b!\xf3N\xd2;\x0c`\xfbRR\xea\xfa\x8c\xa0\x13#F\x08\xe4\xe3\xf1|\x9e\xb5$\x7f\xa0E\x01\xf2\xff\x00\x1cX6s\x84\xc6\x0f\xd0\xff\x00Zo\xf1\x13\xb3n#\xe3\xdc\xd5\x9dnnZ4G\x98(\\\x8e*n\xd6\xfb\x80\xa5\x80\xda\xa3\x93\xdc\n\xcb$\xb9\xbfic\xdf<\x98\x1f\xc4\x0e9\x1f\x14\xf0\\\\\x18\xfdW\x12\x13\xd0}*\xc2\xd3\xc4F\xdeBV9\x8e\x90\x07\xa9\x86H\x03`rv\xfbS.\x84\x8f\xcc\xbb\x9e\xd5\xaeG\xac\xda\xa7-8\xc8\xfeS\xd6\x9c\xfe\xda\xd3\xdf\x18\x95G\xfe\xecb\xb1\x13st$*X\x80\xa3\xafA\x8ak6\xa3:J\xa9\x9fP \x93\xd4c\xe2\xad\xc7\x8e\xaf\xa3\x1e\xabe\x0b\xec\xc3zc\xf0\xca\xdc6\xff\x00\x06\xb7W\xbb\xd1d;\xfc\xf83\x8e\xbb\xb09\xa8\xab\xc9t\xf7_\xdd\\\xc5\x8f\x83\x91\xfd+"7n\x14\x15P2z\x03H\x1b\xd9c`K\x94\x19\xe2\x9a\x97\xc7\x9eb:7J\x80\xea\x1b\x95$o]\x16\xcf\x90D\xed\xb7\x00\xd6\xb3\r\xbb\xc8\xfb\x0c\xccP\x0e\t8\xa7r\xd8i\xee\xa5fx\xb0\xa3\xb9\x1cV45K\x96\x90\xaa\xcaH\xc0\xdai\xb4\xba\x9d\xca\xc9\xb2I\x0eX\x02=X\xfe\x95\x16\x1f\x15\xd9\xc7\x1b\xa9\xe8bRI>\xb921\xed\xc5(\xc51;\\i8\xec1Z\xfcZF\x9cg\x1eT\xa8s\xd0#\x0e\x7fJ\x90\xbck;4UoS\x01\xca\x8e\xd5Z\xf0\xce\x9a\x96\xdadz\xb4\x99y\xee\x03\xf9e\xbf\x81\x14\xe3\x8f\xad#\xaa\\\x17\xdc\xdb\xbdD\xd5\x7fV\xf1G\xfa}\xb2Ai\xd2 \xb3\xba\xbaU\x93P\xf5\x85\x8d\xb7\x04drj\x04\xf3\xc8d \xce\xce\x13l\xf1\xbd\x13\xeaQ+\x1f*5S\xeey4\x84Z\xad\xd4lq!\xc1=;Ue\xae\x0e\xf3\xc6y\xa5V\xe60\x0e\xe6\x00\x1fz\xc2\xc8\xf7n\xfekO!s\xfc\xc0\xe3\x19\xf6\xc61Q\xda\xed\x98\xe4\xb1\xfb\xd6\x89\xa7^-\xeb\x08\xe4\xc0s\xf8H\xe3?\x06\xac\x89h\x87\x0b\xbe0@\x1b\xb2\xd9\xc7\xe9Y-\xae\xa0\x90\xb0e\x9dx \xf5\xc1\x15\x1f\xaa\xda\xeb\xb3\xeaP\xdc\xe9\x0c\xa6\xde\xe0nf2\x95\x11\xc8O\xa9x\xceA\xea+]\xe1\xef\x12\x0b(\xa4\x82\xf6\xd3\xf1.\x0eRG\x93A+\xc9\x04\x90rG\xf4\xa9\x10N%:|\xe0\x98\x19\x19\xde\xb7%\xb2\x85O\xff\x00\xaa\x19 \xf1\x80E(,\xc3\xa7\x17#\xaf\xf2\x81\xd2\xb2+m\x1b]$\xb5\xce\xb0\xe8\x1f\xf1\x04\xcb\x10q\xd0g\x15/\x05\xa3\xe9\xd1\x08\xc5\xe4\xd3\xb1\x07\xf7\x92\x1e@=\x80\x1cV\xad<_n\x91\xb9=\t\xd61\xc8\x17\x0e9\xf6\x04R\x9ep8\xb8\x0c{zG\xf5\xa7\x1e+\xd4\xa3\xb7\x9a;X\x18\x15\xdb\xb9\x98\x1c\x82s\x8f\xe9U\x18n\xdfq\x07q=j\x03\xc5\xfa\xd3\xd9jp[\xee\x18KTb\x0f\\\xb9&\x98Z\xeb\xd0\xcaT\x9eH\x15\xe7\x9dQ.:\x95\xcc\xf7\xcfo\xa7\xf1\x07XA\xfc\xa3\x1b/\xd8US\xdd\x7f\x19\x81bpqZ\x8d\x96\xa2\xd1\x10Q\x888\xabF\x9f\xa8[\xca\xe1\xa5\x93k\xf4\x19>\x9f\xfbV@\x9a\x94l\x06\xd7\xe4\x8a\x96\xb5\xbd\x90\x8c\xee\xfc\xaa\'M\xea\x1dK\xa2O\x1c\xb0>\xa4G\xd5\xe4I\x93\x19>\xf8\xf7\xf9\xa9It\x0e@l\x121\x91\xed[<\x8f\xba#\xceA\x15[\x9e|\x023\xb8\xf6\x03\xadEY^\xdc5\xbc\xe1Af\x11\x12\x8b\x9e\xbcg\x1f\x9e*\xb4\xbe<\xb5\x8f\xc9\xf34\xa5y\x01\x1e\xad\xf8\x1f8\x18\xaf\\\xb6\xf1}\x97V\xb2\xb7\x9aw\x16R0dl\xabH=$g\x1aG\xe9R\xedKz\xb0\xa5\xf0F\xc0\x81\xfdj\xe3o|\xf6\x97*\xd3[\xca\x14\xa9\x19\x0b\x9cg\xbd=:\xdd\x91\xc8\xfd\xe8\xf6\xca\x11\x9f\xd6\xa9\x0f\xe3x\'y\x99\xec=$~\xe7k\xe4\xe7\xbe\xef\x83\xf1M\xa0\xf1\x82\x11 {TRA\xda\x00\xdd\x8fn\xb4\xdau\xdb+y\x1a8:\xe2<L\xcc\xde\xb8\x1f;m\xb98\xc6q\xb5Ll\xc8\x01{b\x18\x006a\xff\x005x\xb9\xd4\x19\xd5\x82\xa1\t\x8eO\\\x8f\x9aca\xaa\xc7\x05\xe4\xd2Lp\xbb0\xb8\xfa\xd5L\xf8\x9c#\x18\xfc\xc6\x93 \x9d\xc0\x9cg\xd8\x83\x8c\n\x88\xbc\xd6I\x93\xcc\x8d\x86\xd3\xc9L\x8c\x93\xf2\x05@\xbe\xf1\x1cq\xcdoqop^X\xa4\r\xa0\xa6@;\x8c\x9d\xf0@\xa5"\xfa\x1e6\\+\x8cg5\xb0\x1f\x10\xc1)\n\x8a\xc7<T%\xe5\xe5\x95\xb4\xd1\xbd\xc3\x94F\x7f\xc2?\x10\xee3\x8e\xd5BMjf\x910\xa9\x1a1\x07\xdc\x8f\xcc\xf1^\xeb25\xdc\x16\xe4r\xea\xdbC\x16\xc8\xa7n\xfcQs\xd5,\xa6\xf3\x0cR\xc9\t\x060c\xc2\xe7##\x1c\x91\x8fzf$Ky\x01]J\x1b\xf3oZ\x84\x1e \xd2b\xfd\xda\xae\xdfNKm<\x8e\xb9\xe6\x9d\rh\\\xd9\x99l\xe2`7\x15\xdc\xc0\x00H\xea\x16\xb2;-"K\xd6\x8a)\xa4#s\xed>\xb3\x9c/\\\x8fj\xbe]j\x11\xc1f-m\xd0,q\xa8D\x03\xb0\x02\x99\x97\xc57qY\xc8o$K51\x1f D\x98\x91\x89\xc6\x00\xf6\xfa\xd4[\xa9U\x0e\x94b\xccN\xe4\x9e*\xbb\xaajR\xca\xcc\xd29\'\xdb5Q\x92\xf4\x96\x19\x04\x90z\x0e\xb4\xfe\xf6t-\xb4\x8d\xd9\xee*\x0eX\xdb\xccl\r\xa0\x9e\x1b\xde\xbc\xd2 \xd33\xcb33\xbb\x92\xc5\x98\xe4\x93P\x9eF;\x8a\x9e\xb1\xd6\xa7\xb4\x95\x19\t\xc5i:o\x8a\xdat\x11\xc8@s\x8d\xacx\xfc\xab\x18@S\xd4s\xc1\xc7\xe7O\xe0\x95\x89\x041\x1c\xfb\xf45ec\xd4\xaf\xfaK\x96\xb2\xb9x\xd5\xbf<`\xfa\x1b;n=\xfeh[\x92\x8c\x0fz\xd9\xdf_\x869\x04m;\xc6\xe4\x81\xb4\xaeH\xfc\xff\x00\xcd5\x9e\xe7Ou\x0c\xfa\xd4\xbbq\xeb\x07\x07\x82r@&\xa9\xa2k\x89\xacd\x97%\xa4\x85@N\xc4\x82{\x9f\x8a\xa8\xad\xf5\xa2Ms%\xe7\x98R1\xb9\x8fM\xb8\xeb\xb4w\xad\x14}b\xf7\xa8\xc5\x16\xa4\x8eH\xdc\xb0\x01\xdaE\nG9\xd0\xdb\xd5\xfd\xbd\xe0(\\e[l\xe0)\xfe\xa2\xb5\xfbK\xcd\x02c\xbe\t\xd5\xca\x0ew\x90x\xf7\xedK]\xae\x97{\x16\xd8\x9e\xdcK\xd50@\xcf\xbdc\xa2\xff\x00N\xd4C\xfd\xd1]\xa4P\xa3q\x1bG\'\x8c\xf3RD\xa4q\x19\x96u\x8eH\xe4\xc3\xe1\xc2\xe4c\x04\x01S"\xb9\xb9\x92)m\x9f\xa6\xd9\xcbn\xe8|\xc1\x18\xd3\x9fr\x0e\xfe\xa0\x06iou\xeaV\xf3d\x0e\x0e\xd9<U\xa5\xa4K[\x88\xb7\xddE$b_R\xa4\x81\x88#\xb6:\xe35c\x97[U\xb7I#\x8cm\xdf\xb4\xe4\xfcf\xb1=C\xc4\x9a~\x99\xa9Al\xf1\x18\xb7F3++\x15\x00\xf3\x92\x0f$\x9fqW{\xbb\xa8\xa4\xb2\xb0x\xb0\xb1I\x00\x90u\xe7\xcc\xf5g\xf3\xaa\x8f\xc6_t;K\xf7\xb3\xb8\x10\x89\x99\x151\xebl\xff\x00\xda\xcc8\x1b\xd4n\xa3s\xe6E\x11`s\xd8\xf0*r\xe7Y\xb4\x99\\O\x10e<\x90I\x1fNEVn-\xf4]J6\x8cn\xb6\x7f\xe0\x95\x18\xb0\x07\xe4\x1e\xa2\xaa\xb7\xb7>a\xd8\xa4\xe4\x1f~?:h#t\xda^r\x83\xb1-\xb4\x7fZ\xa3k\x8b\xdb\x86I\xae.\x15\xdf\x7f\xcc\x8aI\xcf\xb9\xe6\xaa\xd2\xf2\xea0\x04r8\x03\xb6\xa3\x8f\xd2\xae\xf6\xda\x15\xcc\x11\xc5\x14{d\x00\x13\xe6/G=\xc8=\xa9C\xa5M*\x98\xa5B}YV\x03\x94c\xd7\x8f\xee*\x1fM\xd6.l$\x01n\xe3\x91\x08\xe5K\x83\x9f\xd2\xaf\xdaf\xa9\x16\xa7j\x1f\xc90\xca\t\r\x13\x10\xc7\x8f\xe2\x18\xea\x0fj\xb2\xe9\x96]2\xf5\x98I,\x91\\\x12N\x9c\x8c6{.{\xfcS\x13<\xce\xc5\xdbrNO\xd6\xaaKa%\x94\x81eS\xcf \xf6?J\xbb\xe90\x0f)2>sT\xfdkSQ\xa9\x08\x15\xb3\xe4\xae\x1b\xd8194\xbd\xae\xb3 \xce\t \xfc\xf7\xa8v\xade\xd2\xfa\xd3K2\xc9$1\x92\x17?\xd4\xe2\xb8\\\xb2i\x04f\xb4f\t\x90T\xb2\xe3\xb88\xa1\xae\x11\xd0\x8c\xf2\xa2\xaa\x11j\xb2H\xa0\xed \x81\xd4\x91H\rT\xac\xa4\x1c\x91[\xb4\xf1\xad\x8d\xab\xa4\xd0\xa0\x08\xed\xeb\\\x11\xdb\xe9\xcd\x08\xd2\xa9\x19$\xe3\xb14\xeb\xef\xb6\xb0\xdf\xb6\xf9pw\xe4(\xe4\xfbs\xedJj\xfe!\x86\xc2\x18c\xc6\xe6~@\xed\x8a\xa2\xeb\x13[A|d\xb7\x0c\xb12\x86b\x7f\n\xb1<\xa85(\xdab\xeb\xda\x7f\x95\xe6\x04\x99\x06\xe8$\xea\x01\xf68\xecj\xa6\xd7\xc4\xbda\xaen\xe0\xb7\x92$k\x82\xde\\\xd1\x8c\xe3\'$\r^\xfc|S\xf7\x17\x92J\x81O+\x8c\n\xb8h\xbe6\xd3\xf4\xef8\xad\xa8\xdd6\x0bs\xd4\x8f\x9a\xbei\x1e/\xb2\xd4v\xac\xc9\xe41\xe8s\x95?\x9fj\xf9>\x03u\x14\xaf\x1c\xd8,\x8eU\x80\xcf\x05N\x0f5\x7f\xd1\xa6\x9aI-\xa2\xe8$e\x18\xef\x82j\xdb\xa4\xf8\xcf\xae\x8b\xd8 \xbax\xee\x10\x90\xa4h\nNN9P7\xa8\xa2g\x03 \xfd\x8d}A\xc1\x19\x1d)\x19.m\xe28y\x91O\xb1"\xab\xbe$\xd4\xdbI\xd3V8\x08Y\x9dB\'\xfb@\x1dk%\xb5\x9eF\x99\xe4\xb9\xbaw$\xe4\x96<\xd7\xac\xde^Cd"\xf3\x01&C\x80\x01\x03\x03\xdc\x9a\\\xb7~[\xe8U\x04\x81\xea\xdf\x8a\xdf\x92X\xa5\x19I\x15\xbe\x874\xb5d\x16\xfa\xa2Z\xed\x96\xde\xe3\x04u\x00\xf5\xadKN\xbb\x17\xd6p\\c\x1b\xd7\'\xebN\xc3q\x0c\xf9\xf2\xdc\x12\x00$\x03\x9cf\x97\x05\xc0\x97 \x8c0\xde\x9e\xd1E\x14\xf5I\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xb3O\xb4\rJ\xf6\xcd\xf4\xb8\xedgx\xf7\t\x19\xf6\x9228\x1c\xe2\xa3^]Gem5\xc4\x80\x95\x8cd\x81\xc9\xdf\x14\xdc\x92\x08\xd4\xb63\xc5iD\x802j2\xe3X\xd2\xed[l\xd7\xd1+\x7f(9?\xa0\xac\x16MoQ\x923\x1c\xd7\x937\xc1c\xd2\xa3\x1eg\x9e[uY\x0e\xf0\xe3?<\xf6\xac\x9c\xbe5\xb4VE\x8e\xd2F\xc9\x1a\xb5\x10\x08\xfa\x01\x9a\x8cn\x98\x8fJ\x01\xf5\xde\xbe\x9e\x04\x10\x08<\x11\x9a\x8a\xd7\x1eH\xf4\xcb\xa6N\xbby\xfaw\xa4\xb4\x1dV=V\xc27\x07\x12\xc7\x84\x95{\x86\x1d\xfe\x87\xb5KO\x10\x9a\x19# \x10\xeaG=9\xad\x9d\xbc\xd1J\xb1K\x1b\x06\x8d\xc0e#\xb85$\x9f23\xa4\xf26\xac:\xf6x\x82\x80\xcc9\xa8\xfb\xbdYb\x81Dl2\xbc`U\x83\xc4\x1e\x1c\xb7\xb2\x8d\x8c\xba\xb2\x07\x1c\x88\xc2\x92s\xf3\x8e\x95\x9e\xbf\x87\xef\xae\'\x88F<\xc5\x91\x80\x12!\xc8\xe7\xdf\x1d*\xa2\xfe\xf4Ev\xf6\xf0\xf9rL\xe0a\x15\xc6\xb0=\xf1\xcd1\x1bl\x03\xb6\x9d<\xd3\x86\xf14\xb1\xa1W\x97\x0cs\x86\x1c\xfe\xb5\x17/\x88o\xa4S\x87\x12\xc6\xad\x8e\x06\r[\x93\xec\xe3Y\x8e\xe4@\xd6\xd1J\xac\xbb\xbc\xd2\xc7\x03\xe3\xebR\xd0}\x9bj\x16\xe8\xc1|\x9c\x96\xce2qL\xff\x00\xa6u\x0b\x90\x82Yt\x000Am\xff\x00\xc1\xa7<\xd5\\\x90\x8c\xdfcX]\xf3\xcdq8Y\x17n\xe3\xd7\xbd*\x96\xcf\x0cl\x18\x02\x17\xdc\xf5\xad?\\\xf0>\xabh\xea~\xe6fRr\x1a1\xbb\x9f\xf1Y\xbe\xa6\xd2!u\x91\ns\x821\x821\xefT\x17=\r\xac\xfc\xc2c8-\xe9ll~\xf5%n\xf5\xe9Q\xb1\x1c\x83\xcd@\xdcN`\x04\x94%\x0bp\xa0\xe3\x04\xd5eu\xa9\xedg\x95VF\x89On\xc7\x15?pa\x9fr/\xa9\xd7\xb9<}*\xa7yh\xed\xbb+\xb4\xf3\x81T\xb3Y\xca\n\xe0j\nj\\.\x87:\xb6$T\xf5\x97\x8a\xede>L\xc1C\xf1\x93\xbb\x8e}\xea\xe3\xe4\xc6\x12\'\x0c\x00\xdb\xc1\x1d\xc7\xc5|\xef=\xbd\xe17\x12\xc4\x84\x10\xc7\xa88?\x15\xa1}\x9d\xe9\xfa\xc5\xff\x00\x89t\xbd/S\x9e\xf6\xd2+\x95`\xaeS\r\x80\x85\x94\r\xe3\x18l`\x1a\x0fI\xf3a2\xb4$\x8d\xbdA{\xfd\xa9\xc9\n %e\x03\x00\x92\xa4\xd6\xbf\xa7h\xda\xce\xac\xe6K+&\x95\x14\xec~@@z\xf2Mj~\x1d\xf0\x85\xbe\x97\x17\x99}\x14W\x17%\x83\x0e2\x91\x11\xd9s\xd4\xfc\xd5\xabH\xb5\xb4\xd2\xada\xb7\x85\x02F\x83\x0b\xef\xcfROr{\x9aZ\xf6\xea\x15\'kt\xae,=2\xca\xd3\xf1\x92\xdc\'\x9a?\x96B\xbbg\xb8\x15W%\xc4\x92eF\xcb\x9e\xdc\x9a\xe4\xb7\x0c\xa4\x0f\x9a\xf6\x0b\xe4@\x15\x8f\x19\x18\xa89/\xc6\xfc\x06\x03\xf5\xa8\xb7\xbf*\xcc3\x81\xdcu\xac\xb4\x9e4\x8a\xd2eh\x1fQ\x05\x94\x9cj\xc8\xa6\xbc\xa6\xabf\xa1i\xa7j\x91\x88\xeem\xd2P9\\\xf5\x07\xdc\x11\xd2\xaa\x13xGA\x13\xab\x83<\x7f\x880\xdf\x90I\x1dzg\x8a\x0f\x88V\'P\xe4\x04=[\xda\xb8}Uf`\x14\x1cd\x9c\xf5\xcdI\xba\xf1WL\xbdA!\x82&\x90\xb8\xfc\xf1\xf3\x8d\xc5p<\xb1\xe4+\x90>\rU\xfcG\xe1\xb4\xb1\xb07z{H\xe6\x1c\x19\xa3s\x90GB\xc3\x1d>k.\xbc\xfb\xd5\xc4\xd1\x84\x98\xc2\xca\xea\xd8\x03\xd8\xf4\xe7\xfb\xd6\x9d\xe2O\x1bi\xfa/\x99e%\xdc)v\xf1d\xac\x84m@\xfcz\x87s\xf1Yy\xd7\xb46\xda?hZ\xa9\x00\x05>b\x9c\xe3\x93\xfd\xea\x1d\xa5\xaf\xe3\x01\xb8\x11\x88\xd4\xb7\xa3\xd3\xb1\x1f\x03\xb5Y[\xcd0OP\'\xd8\xd4\xd8\xbb\x96\x1d\xbb\xe4|\xb0\xc9#\xe3\xdf\xe2\xa74\x96\xd6/g\x02\xd0\xb0\x0b\x82\xe5\xf3\xe5\xa8=\xdb\xfe)\x7f\x0fxf\xf3\xc4\x86\x0b\x96\xb8X\xac\x10\xff\x00\xac\x98\xdf!\xee\x10\x7frzV\xa8\xd66\xbau\xa0\xb4\xb3\x81R1\x9e3\xc9\'\xa9by\'\xe6\x89\xfacZC%\xe7\xa9V?\xc9\x8d\x8b\x11\xed\x8f\x9e\xf5\xc9/\x02\xfa\x06\x0b\x1e}\x85U@kvEk\xa9.0\xde\xbc\xfaT\x8fe\x03\x9c~uf\xb6\xd5\x968\xd5\x02)P:d\xd5n\xe9H*02\xbe\xd4\xd9\xa4\n\x06N\xd3\xd4|\xd62\x1e\xbb\xd5\xe0\x9f\xcf\x82\xf6X\x9c\xed\xa4\x12F=\xb0sL;\x17\x18c\x9cU\xa6Mcw\n\xaa\x06z\n\xea\xebV\x8eH\xb6\x88\xc6\xed\xbc\x9e\xd9\xfaU.I\xf0=.\x01\xcf\xe7MM\xeb\xab2\x93\x9c\n\x92\xbd{\xc4\x04\\c\xa9\xca|\xe5\n\xf9\xdfa\xed\x9e9\xed\\\x05F\x0f\xb7\xcdM\\@\xd7\t\xba\x1b\xa4\x85\x8f\x1b\\\x1d\x84\xfdGO\xd2\xaa:\x9bj:Q\x8d\xae^=\x92\x12Q\xd0\xeeRW\x823R\xe6\xf3r\xed\xe4\x0f\x9aP\xfd\xda\xfa\xce[[\xa8\xfc\xc8%\\:\x9e\xa0\x8e\x85Ob;\x1a\x8f\x15\xdb\xa8Ar\x85\x808\xd6\t\xd5\xbfs\x93\x83O-\xe3+\x00H \xf3TG\xd6\xee\xaeX!\xb8+\x92v\x9d\xd8\x04\xf5\xea:W\x1f\xb4\x1b\xf0\xc9*\xb9\'\xa1l\xe7\xebTm^\xda\xefG\xd5/t\xd1&\xf9a\xf5D@\xc8eq\x95c\xf9\x1f\xd6\xa3\xac.f\x16\xb7\r-\xd0\x05[\xf1\x1f\xc4\x0f\xcf\xfc\xd6\xb3\xfd,H\x81\xc3\x82\x08R=\xce{\xd5\x80\x93*\x08\xc6+E{\xb9#\xde\x81@\xc9\x05\xbe1\\C\xa8\xc8\xc1\xc6\xdd\xca\x01\xe4\xf5\xce8\xfc\xaa\x9e\xda\xb2\xc6\xbec]FY\xf9\x11\xee\x1c\x8e\x9f\xd6\xba\x9bT\xb4\x8e\x17U\xb8\xf5O\xb7b\x8f\xc5\xc9\xc1\x04\xfb\n\xe7\xfac6\xdar;Wu\x9e\xe2\xae\x10\xdc\x98\xda9\x04\x9c\xed;\xa3+\x91\x93JK{3+a\x8e\xdcd\xaex\xe2\xaav7\xf1\xc8\xc57c\xca nc\xe9=\xf3\x9fz{=\xcc\xb2\xb3\xa0xv\x90\x08l\xe0\x8cv\xf9\xcds\xf0\x12j\xc6\x08\x19\xda\x92d\xdfz\x91\x87U\x99\xa6$(P\xa0\xf7\xcej^\xcfPi\x11\xd9\xd4g={{\xd5LM\x04Q,\x8e\xdb\x18\xf4\xff\x00q\x1ct\x14\xc9\xf5\xf4\x81\xe6H\x818`B\xbfC\xee\x0f\xb1\xae\xbfNf\xf4\xaa\x85\xdb\xf4\xa3\xcc\x07;qW\xf9\xafZvP\xbbs\x9e\x00\x1cq\xefK\x9b\xf9\xe2\r\xe60+\x9cq\x9f\xedY\xbak\xb7\x17\x17\x08P\x0bs\t\xfa\x86\'\x8c}*r\rU\xae#u\x1e\x91\xb8\xaes\x9e\xbcd\x03\xed]\xff\x00O\x91\t\x1ea\xc9\xe4\x81Ig\xd8eA\x1fZ\x9b\xba\xd6\xe6p\x02@\xc4\xfb\x9e)T\xd5n\x85\xb9\x059\xe4\xe7\xb0\x02\xa1\x05\xc5\xa5\xbf\xdd\x97\xef`\x97R\xe3y\x1b\x88\x1dO=@\xa4ou=:\x0bG\x9eK\xc5H\x9b8\x00\xf2\xdf\n\x07\'\xf2\xae\xb5\x84\xda\x867f\x188\xceH5\xcf1\x08\x00)\xe7\xda\xac\x0bz\'\x8d\x8be[\'\x18\x1d\xfd\xf1K\xc3\x94\xc4\x98\xdeA\xc7<sT\xbb\x7f\x11\xda3\xdb\xc7er\xb2\x97\xfc+\x82\xa4\xf1\xceO@=\xe9\xc9\xd7\xb2\xff\x00\xea\xb0\x00\xe0\x80\x00\x00\xfcg\xfb\xd2\r\x83\xa9]A\x81\xcfq\xfdsAr\x01\xc7\x15l{\xc8\xd0:\xcb\x13\r\xcd\xfc<\xe0\xf6\xae<\xe8&B\x19H\x1f\x87$\xf5\xf9\xe3\xa5U\x1b\xc4h\xc1\x91\x88\xf4\x9e\xa3\x04\x80>{\xd3i\xf5\x99f\x8d\xe3GT\x04\xf0X\x0c\x9es\xc9\xae\x9b1\x8d\xf7=\x89\\\x01I\x0c\xd9\xc6\x08\xf7\xde\xac\xf7\x0ccP#\x00\x82\x00\x0c\xa7\xa7=**\xea\xe6\xd5\x90\xbbJ\xc5\xb2G\x03w=\x0eMU\x17Z\x96\xd9\x81\x91\xd9\x95I9\xcey=1M%\xd5\xca\xc5\xbbz\xed\xe7*v\x8c\nv>\x9e\xe0\x8fNrv\xa5e\xbd\xeb\xea\xbd\x0e\xf2\t\xbc!\xa1\xa4Ro"\xdf\r\xef\x9d\xc4\x9a\xadkW\x0258\xe0\x9e\xb5\x07\xf6_\xad\xa6\xad\xa2\xdci\xa5\xc1\xb8\xb1\x90\x903\xf8\xa1\x90\xe4\x1f\xc8\xe4W~8w\xb2\xb6\x0eA\n\xeaFzr;~u\x9d\xea\x91\xdd\xdcu\xc8\x85\xc4`z\x12(\xc8\x04)T\x18\x1f|sTW\x99\x8cI\xff\x00\xe4I\xfb\xd5\x1a\xfb\\\x16\xe4\xed$\xb6x\xc1\xc6~\x95Q\xbd\xf15\xd3o+.\xdf\x80O\x19\xa8-[Qq\xb9\xdc\x85\x03\x8e\xbf\xd2\xa9s\xea\x8b#\x11\x92\x00<\xd6\xdf\xa7\xf4X\xd9U\x8cA\xbd\xcf5^\xb1\xc9 \x1d\xea\xd5>\xb3q+\x12\xf3\x12H\xfa\xff\x00z\xb8\xf8;\xc7\xd7\x9e\x18\xb8\t!762\x91\xe6\xdb\xe4e\x7f\xdc\x99\xe8\xdf\x1d\rc\x82\xfa2F2>h\x17\nNrx\xf7\xefW\x0f\xd3"t\xd0\xd1\xe0\r\xc6\xdc\x1f\x8aZ\xc6al\x83\xbf\xed_\xa0zN\xa3\xa6\xeb\x16\xf0\xdfX\xdc\xa4\xb6\xd2\x8e\xa0\xfe\x16\xf6a\xfc\'\xdcT\xad\xc4Q\x08\xdd\xdd\x95\x15FX\xb1\xc0P9\xc9\'\xa0\x1d\xeb\xe1?\x0e\xf8\x93W\xf0\xfc\xe2\xe3O\xbe\x92\x12\xc4oL\xe5\x1c\x0e\xcc\xa7\x82*\xeb\xac\xfd\xa1\xeb\xfe#e\x82iV\xde\xd3\n\x1a\xde\x1e\x14\x91\xdd\xc9\xe5\xbe\x87\x8a\xae\xfc\x19\x81\'\x8f\xca\x8d\x95\xb8n\x0f\xe9C\xce\xab\xb9\xce}\xa9\x7f\x17k\t\xabx\x8a\xfex\t0\x07\x11\xc2\xde\xe9\x1a\xed\x07\xff\x00\xbb\x19\xa6\x16\xd3J\xa0\x15c\x8c\xd3\x08\xa1o1\x81\xe4\xb1\xef\xd0\x9a\xb0Ah\xca\x9c\xafR*\x04\xc6(\xd1P\x01\x80\x00\x15\x01\xa6\x05\x89\xa9[\x0b\xb7,\x17\x07\xf1s\xedW\xad6gVP\xc4\x90{\xd5OO\xb2\x0c\xc0\x007c5q\xb4\xb7p\xbb\x1b\x82\x80c\x9c\x7fz\xca\xf5\x17\x88\xea\x00\x0f\x9a~\x19\x1b \xd5\xe7K\x95\xa3+&F\x01\xe0\xd6\x7f\xe3k\x05\xd3\xf5\x04\xbc\x88(\xb5\xbb,\xe8\x06=2\x7f\x12\xfd\x0er*\xd3\x0c\xcd\x1a\x80\xcd\x80z\x9f\x8a\xcb>\xd7<P\x9an\x97\xa5\xd8?\x96\x1a\xe2\xe1\xa6I\x19\xb9U\x88m\xc0\x1f\xee-\xfd)\xce\x8b4\xb7O\x07LH\x8b+\xb3>y\xc3\x00w\x1fj\xba\xb2v\xf3\xd7I\xdd\xb6\xc7\xc5-\x05\xec\x060\x03\x1c\x80O=\xf1\xfd\xa9\xbd\xd5\xc3<j\xd1\xb1W<\xf5\xe3\xf3\xac:O\x1a\xc7\x12ok\x88\xce\x17\xa1!y\xa8\xb6\xfbAl\x81\tY\x18\xfe \x1c\x9cV\xaa?\x0b\xde\xb3jX\xf8=\xc6\xd5y\xa5\x87-[\xdak)\x03,S\xb8`\x06\x0b\xa8\xcdv\xfa\xcd\x9c\x91\xfa.\x08=y\xe3\x1f\xf7\xaf\x9c\x9b\xc5\xd7\xf3\x04\x1fv\x93\x8e\x08\x04c\x1f\x15\xdc\xda\xfd\xe4\xa5O\xdd\x99\xc0\x18\xc1!@\xa9_\xfd)&Af\n{\xe0\x8cW2\xbf\xee\xdf\xeb[\xe5\xc6\xb7m\x1cA\x85\xea)\xdb\xc8,I\x18\xfaT|^0b\x98K\xb2\x13w;\x97\x1b\x87@Eav\xf7\xda\xa4\xad\xb5\xe2]\xbb\xb3\xc3\x1c\xd4\xc5\xbd\xae\xa5p\xad\x1a#\x03&8\x1c\xf2)\xd3\xe1\xebh\x01\x12J\xa7\xe7#\x8aC:(\xdd\xc5o\xbe\x11\xf1k\xc9\xe2\xbb\x0bY$m\xf7\x02H\x91\x98\x82\x06P\xe3\x8fsZ\xad\xf4\xc5T\x92\xdd\x06I\xf6\xc5|\xc3\xe1o\x06k\x96z\xae\x9f\xa9\xcd\xa9yB\x1b\x98\xe5H\xd5C1\xd8\xd9\xc6s\xc6}\xebs\xfbH\xd6\xc7\x87\xed\xe3H\xff\x00\x1d\xd4\xa4Dz\x8d\xa0d\x93\xf9\x1a\xc8\xf5\xbe\x9f\x0c\xd7\xf6\x10\xd8\xcc&\x07\xd2\xc1s\x80\xe7|\xef\xf0;{UM\xe3+\xc8\x9eY\xc9\xc6\r)\xe7#\x9c\x92>+\xd0Q\x89;\x80?\x15\x92Xx\x82\xf6V\x0c\xd3o\xfa\x9c\x7fJ\xbc\xd9j\xcb*\xa9|g\xa7>\xf5\x1a\xe7\xa6Om\xce\xff\x00J\x8cd\t\xe9\xa9\xf6\x8aNJ\x9d\xc7\xa8\xc5s\x19e\'<\x03\xed]\xad\xc4s\x04\xf2\xdbc\x03\xff\x00\x98>\xf4\xe0\xc4X\x06\x07\x04\x1e\x0f\xfc\xd5qb\xbb0\xc55*\x16\x19RI\xa9I\xf58\xec<9\xac\xdd<\xcb\x1f\x93\x02\xb6\xf6\x19\x00o\x00\xf1_8j\x1fhZV\xa1y\x1bOy\x10}\xec\xbe\xa9\x17\x85S\xec:\x1a\xd8\xfcK\xa3^x\x83\xc1\xfe&\xd2-\x15\xcd\xcd\xdd\xa8TE 3\x15ul\r\xd8\x1c\x81\xde\xbeq\x8b\xec\x9bRHb\xb5\xb8\xf0}\xdb\xba72\x08\xc8g=\x06\xe6S\x8c\n\xda\xf8mz\\\x9d5\xd6\xee\xe9\x90\xc7;\xaa\xc6\xac\x06A\x1a\xb5\x10H\xcf5ea*\xacE\x98\r\\o\xcd^\xe0\xfbF\xf0\xce\x9a\xd3<\x1e \x81C.\xdc)\x0cN9\x04\x83[\x96\x8aZ+(.\xee#\xff\x00\xab\xbbE\x94+\xa8\xdd\n8\xca\xaf\xc3c\x93\xdf\xb5d\xde\x13\xfb\x1d\x83N\x969u\r6\xd2\x08\xdd\xa3-\x06\xd1$\x84#\x06\xf51\xc8^\x9c\xe2\xb5\xc4\x91n\xae^F<\x97\'\x8f\x9e\x95Y\xd7\xafl\x16\x1f\xc3t\xf9\xee\x1dA>c\xb3\x0c}\x06?zM\xcc\xe7 \x00\x01<\x9e\xf8\xa7\xba\x87\x86\xb4\xcf\x10Ejo#c21+"\x9c\x12Xckw"\xa1\xbcK\x7fm\xa1\xe8z{3H\xd1[D\xb6\xad\x85$\xef\x8cm\x00\xfbd\x0c\x8c\xd6\x81\xa43#\xefd\xc9\xe3g\x1d=\xcd6\xd7|94\xdfx\x96(\x16\xea\x0b\x88\xc8\xba\xb7n\x8e\x0fQQ\xbawM\xea\x13\xf4\xb4\x9d\x96[\x88V\\\xb4\n7E\xceu\x03\xc9\xef\xb7\xb5A\x92|\xe9C\x92\xab\xda\xbe\\\xbf\xf1f\xa1t\xc4Z\x7f\xd3G\xf1\xcc\x87\xe4\x9e\xdf\x95F\xc2%\x95\x84\x93\xc8\xf219;\x98\x9f\xefZ\x1d\xf7\xd9\xf5\x94s\x13a\xa9y\'\'0^\xab\x06S\x9e\x00d\x07p\x02\x9a\xc5\xe0\x8dE[\x11\xdeYH\t\xea%#\xfa2\x8a\xbeK\xae\x9b\x1ai\x81\xe3M\xbb\xec\xdf|\xef\\2\xc7\x8fF\xff\x00\x14\xd2\xc4\xc21\x94\x07<\xe6\xadVZ\x8c\xb1\x10"\xb8\x922?\x0e\t\x1f\xfcUe\xf4\xd9\xecn\xe7\xb6\x93\x02H\x9c\xa3`\xe4n^84\xfa\xda\xd6w\xfc$\xb6\x7fJ\xab\xbaH\xd8\x92\xcf\xc7\xbfj\x8a\\\xea\'Q\x15f\x17h\xc7q\x1e\xa3\xd4\xe7\xa9\xf9\xa7\xd1\xde\x15\xda\x018\xa88ld\\\x89%U\x03\xf8@\xcd<\x8e\xde@\xa3\xd5\xc0\xeaGz\xa7\x928N}Y\xa5\x87>\xf5\'-\xfb\xe3j\xe7=\xc04\x97\xde\xeeX\x9d\xccp:b\x91\xf2\x89\x19\xc6s\xdcWd;\x80\xbbz\x7fz`G\x18\xc0\n9\xa7D\x87s\x9aF\xfa\xee\x05\xb5&k\x80\xacd]\xaaz\xb8\x1d@\xf9\x15y\xf0\xcd\xcce! \x8d\xa3\x18\xc7\xb5|\xe5u\xa8\xc9w\xab\xca\xd7\x0f\xb0#\x98\xd5\x0e}88\xfd}\xebm\xf0L\xc2a\x97`V\x04\xc9\xfc\xba\x0f\xce\xafR\xce[9\xbaqL\x172.s\xc0\xd4\x7f\xb5C\x13\xf9\xb31\x1cc\x1f\xa59\xbd\xb3S\xaaj\xcc\x91\xe3m\xcb`\xe7\x83\x93\x9aR\xcaG\xb1\xbd\x86r@1\x9d\xe0\x9fq\xd2\x95\x9a\xe5\xe0y\xd8\xa2\x96\x9efs\x9e\xdfJK\xef3\xac\x84[\xc4\xaf)\x1e\xa6+\x95\\\xfdx\xcdt\xdc\xc3\x1fQ\x13F$\xd4\xb3\x19=+\x92\xbe\xa2F\xdbf\x9e\r\x95#5g\x93\xc4\x9a\x86\xa5 3m\x94\xe3\xa5y,\xc1\xf9\x92\xcf\x06\xa0\xec\xc4\xef8\xf36o\x07\xf8@\x04~\x956\x9a\xfe\x8f\x0c\x86\xde\xeeF.\xbc>\xc5\xdd\x83[\x8e\x9f\xe2;\x9b\xa4qy{\xa3\xd4\x02\xb4\xea\xa1~\xfe\xd4\xd1\x8b|\xf7=\xf3\\\x84g\x07\x10\x81V(|z\xfa,1Y<\n\xec\xab\xe9^\xff\x00\x9dBO\xaaX}\xdeG\xb2t-\xfc,\xc7\x91\xf9U^\xd6\xd5\xaen\x1e\xe2F\xf3dl\x16c\xcdX\xddu\xb9:d*m\'\x82Y\xa5\xc6J\x05e\xc0\xa5&\xa5l\xab\x10x\xda\xb6o\x0cx\x9bT\xd5\xb5"\x97\x11\x8f&X\xcb(\x1cl"\xb4z\xc24\xdb\xc9\xec&\x8aX\\\r\x84d\x0e\xff\x00\x06\xb6\xfbK\x84\xbb\xb6\x86t\xe9"\x06\xadgE\xea\x9f\xeav\x8a\xce\x7f\x8c\x98\x12l\x009\xee1\xda\xac-\x1c\x90\xca\xccI\xceF}\xa9\xc5\x14QW\x152\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a\xc4\xbcix\xf7Z\xdc\x88\xc8T[\xa8\x8dA=A\xe4\x9f\xce\xb6\xda\xc3\xbcq\x87\xd6\xee\x1e \tUP\xc3\xdc\x81Y\xef\x13\xb3/H\x9b\r\x8c\xba\x82=\xc7\xb5E\xbb\xfc\x89\xbf\xf3UU\xd1@9\\\x8f\xedM\x00X\xa4\x8d\xd1\x97*\xc0\x81\xedN\xa3\x98\xc9\x19\x05v\xed\xeej>tF\xc3#\x1d\xc3\xe3\x15\xe2\xb7\xb3\xf9`\xb2\x91\x91\xb8\xce\xc7\xedQ\x06*~\xc7\xc4\x93\xe9\xb7+4k,l\x0e\tR\n\xb0\xf9\x07\xa8\xab\xb4\xff\x00ip\xfd\xd3\x11X\xc9\xe7\x91\x8d\xc4\x80\xa0\xfb\x81Y*\x89Hb\xc0\xf1\xdb\xb7\xe6i\x0fF\x18u\'\xb88\x14\x9b?\x19\xf5\xeb\x0by \x82\xe1\x04g\xf2\x92\x80\x95\xcfu\xf6\xa7Ad\xe1\x88\x07\xb5X\xaf\xb5\xb7\xbd9}\xe4\x9eI\xebL\xado\xe7\x82Uer\x84\x1e\x18\x1cT#8\x00\xfa@>\xfb\xab\x9f\xbc2\x9c\x0e\xbfZ\xa3\x92\xf6\xfei|\xe6\xb9s.s\xaf;\xe7\xdf4\x06\x02\xbe\x9a\xf0\xb6\xaf\xfb[L\x8d\x9eM\xd3G\xe9s\x9eN:\x1a\x9e\x9a\xea\xde\xd9KM2 \xf9 W\xcb\xd6\x1a\xdc\xfan\x1bk2H@*\x0e\x08\x03\xa9SR\xed\xabY\xde\xef\xdb,\xb1\x95\x00\xfa\xf9\xeb\xf4\xce+\xd6:\x7f\xfdC\x85:e\xb8\xb8\xb72]F\x81d\xcb\x84\x0cF\xda\xb2G\x7f\xebO\t\x88\x1av\xcf\xb9\xad#Y\xfbC\x8a\xd1\xc4:v\x97=\xe3\xb3\x84\xf3\x0f\xa2 OrO8\x15\x9f\xf8\xcfH\xfd\xb9c&\xa2\xd76\xc9w\x14[\xa5X\xb8\x88\x80?\x08\xef\xf9\xd4L\xecJ\xb4\x81\x83(\x1f\x89Nq\xf5\xefPW3I,r#\xb1!\xcf~\xe2\xa1\x1f\xfa\x93+\xad\xc2K\xd3\x90\xa4\x83\x11\x85li\xf6$\x9c\xe7zi\xf2YX\xc8r7\xf8\xac\xd9\xed\xae\xe3\x91\x9f\xd3\xb9{(\xcf_\x93P\x9a\x84w.\xc1\x9c\x05\xc0\xc7\xb1\xc5h\xabk\xbd\xa5\x04\xa8\x00\xe0\x1cd\xfc\xd3\x01\xa1^jW\t\r\xb9Vc\xd3\xa8!{\x92{\x01Y\xd8\xfcA};\xe9{\x83\xb9\xe0\x0cs\xf4\xa9"~\x08\x1b\xd5\x06\x0f\x16k\xba&\x99s\xa6X\xdd\xa4P\xcd0\x95\xbft\x8c\xfb\xc7p\xcc2:T\xff\x00\x84\xbcA\xe3\x7f\x16\xf8\x97J\xb5\xba\xd6\xaee\x869\xa2\x9ew;p\x90\xdb0rr\x07\x1d0=\xc9\xad\x01>\xcc\xbc6J\xfd\xeaK\xbb\xa9\x00\xf5\xe2A\x1a\x13\xf0\x00\'\x1f\x9d[t\xad\x13L\xd1|\xc5\xd3t\xe8-U\xd1U\xcags\x80s\x86$\x92@\xeb\xd6\xa4\\\xf8\xfd\xad\xad\x1e\xde\x0b\xeb\x99X!@\x81\x98F;`\xee2(\x10F\xef\xad\xa1B\xc4\xe7Q\x199\xab\xe9\xbf\\3;`d\x95\x15\x15q\xa8\xa9\xc9\x0c\xdf\xda\xa3\xc8v\xf5\x17\xff\x00\xb5G\xde(A\xcbn8\xcf\x06\xbc\xc1\xaf.\xaeB\xa4\xb3\xb3o\xbe3\x93\xf5\xa9\x18E\xdc\n\xf6\xe7QT\x01\x94\x93\xf4\xa8\xe6\xd4\xd2\\\x00\xc0\x1a\x8b\xb8\x95W \xa0?\x9dB\\\xdd[D<\xc7\x05\x06x\xc5L\x82\xc9\x18\x00\x14\xe7\xb1\xa6\xd9\xf3\xc1\x15b\xba\x9f\x7f\x1b\x81\xa9\xad*6\x86\xc9\xef\x0b\x06\xdb\xbfb\x8epTu?>\xc2\xb3\xa8\xbcA\xa6\x86Uk\xc5L\xff\x00\xfbN?\xa9\xe2\xae\x9aM\xfced\x84\xb8h\xae\x17i*~1\x90zdT\x89\xad\xe4\xb7OTl\xbd\xc3\x11\xed\xde\x98*\x0b\xea;\x8a\xf9\x9bX\xd1n5}F\xf3P\xb9\x95\xe4\xb9\xb8\x95\x9d\x86\xff\x00H\xc9\xe0\x0f\x808\xa6\x9a7\xd9\xfd\xef\x895\xcb->\x08J\xf9\xb2\x00\xf2\x7f\n \xfcNq\xec?\xadm\x9a\xe7\x85\'\xb6\x12M\x00Y\xe1\x1c\x96N\x19@\xfee\xeb\xfaqZ\'\xd9f\x83\x1d\x8d\x96\xa1\xabH\x99{\xa6\x10\xc6OQ\x1c|\x9c}[\xfbW\xa3tn\xa8\xd7m\x14qL\xa25N\xdc"\x81\xc6\xdcT\x83t\xea\xa7\x90@\xc0\x1d\xabB\xb2\xd3\xed4K\x0bK\x1b\x18\x846\xf6\xd1,h\xa3\xf9Tc\x9fr{\x9am~\xec\xc9\xb8\xb89\xc1\xc7\xfcT\x8c\xf3n`\x00\x04c\xe9\xd6\xa0/fb\xfe\xac\xe1p8\xe83U~+\xb9\x8cY\\,e\x8a\x93\xa1Td\x0c\x9eO\xb5AF%\xf2N\xfc\xe6\xa2g;\x94\x9c\xfdj2c\xeeq\xc74\xfaFWc\x86%@\xeb\xd0T-\xfc\xc9\xf8\x17\xae:\xf5\xc0\xaf6\xb7BX\x0c\x7f\xc5H\xceO4\xd2I2I\x07\xe9MD\x85\xb3\xc8\xe3\x82M \xf2\x97\xfc+\xb4\x1e\x9c\xe74\xd4\xcaT`.y\xcfsV\xe9\x16\xdf4\xf2\x8cc\x82*aU\x8er8\xc6i\xfd\xbf\xe0\x90g\xaf8\xaa]\xc7\x88\xac4\xf6\xff\x00\xac\xbe\xb6\x84\x8cq$\x80\x1f\xd3\xadHi\x1e-\xd0\xf5\x99E\xbd\xa6\xa1\x0b\xce\xe4\xaa\xa6p\xc4\xfcg\xadv[+\xbf(\xc8-\xe41\x8d\xcb\x85%G\xde\x91*d\x16\x1d\xab\x04\xfba\xf1\xad\xd7\x87\xfcr"\x82\x1f5\x7ff\xda3\xa8b\xa4\x96C\xc7\x15\x967\xda}\xdc\xad/\x9b\xa3\xc6\x03\x1e\x81\xb1\x9f\xaeEi\x9fk\x9e\x0f\xd7e\xf1\x96\xa3{\xf7X\x9e\x0b\xa0\x9fvep\x0b$H\x13\x1e\xacz\x81\x1c\x8a\xc6\xa7\xf0\xbe\xb8\xae?\xfc\x9a\xe7\x9e\x87fG\xea+\xdb:\x1c]\x06n\x95\xd3D\x8b\x03H-\xa3\x0c|\xdcz\x80\xc1\xd8\x11\xb85an\xf8\x8a?X\xd9GaR\x92}\xa4\x82\xe1\xff\x00b!a\xf8s\'\x1f\xda\x99\xa7\xda,\xa2G\x95\xec\\\xc8s\x8cH6\x8c\xf6\xe4t\xa8\xf5\xf0\xc6\xb4\xdb\x8f\xeck\x9cd\xff\x00\xf4\xeaF\xcf\xc0^#\xd4\x0c\x86\xdbC\xb8\x90F2\xe4&v\x8f\x9cg\x15na\xf0\xec*K\x88\x94c\x04\x99\xbf\xc9\xa7\x0c\xc7\xb3\x8f\xda\x9d\xff\x00\xf8\x8biq\x95\x9a\xc6TP\tV\x0c\x18\xee#\x1f\x1cT\xd5\xaf\xda\xa5\xa4PG\x0c\x96\xf2\xb1E\xc2\xca\xcb\xdb\xe4\x03^i\xbfc\x1e\'\xd4e\x89\r\x83\xc6\\\x16\xc9\x89\xf6\xed\x1c\x92Y\x80\x1d?^\xd5\xa1K\xff\x00\xf2\xdd\xa9\xe9\xf7Q\xac3[j\x80\xa6\xef5e\x11\xc6\xa4ve|\x1c\x9e\xd5\x1aH\xbc7,d\xa8i\x02\xb6\x02\xa3\x13\xbf\xc6i\xb6\xbaE\xd9\xa4\\\x9f\x8a\xa0\xaf\xda\x842\xedcg3aq\xb8!8\xf9\xe4\xd2R}\xa5Y\xbe\xfc\xc50#\xa3\x08\xfb\xfb\x9a\xd1n\xfe\xcau{\x11"\xcd\xa3\x00\xa8v\x92\xa08\xc8\x1c\xf0\xa4\xd5j\xeb\xc02\x95d\x93Bm\xb9\xe4\x84\xdaz|\xe0\xd5J\\xm\xdd\xbf\x84\xc3Ka\xbf\x886>\xc7=\xfe+\xa2u\xf7S\xf2*\x997\xdaXW\x1b\x16V\x00\x83\xc0\x18\xff\x00\xc1M\xe7\xf1\xfc2\xa6\xe1\xe6o\xe9\x82O\xf8\xa9\xd3\xe0k;|\xe3H\x97p9\xf5\xab>G\xc7j\xec\xe8\x90DB\xad\x91N\xc0yx?\xa6*\xc1d\xe8#I\x8a\xd5\xce;\xea\x03?\xa6i?\x88\xdf\xb7\xe9UX\xfc]\xa9\\:\x18,\xe4m\x83\n\xf9#\x19\xfa\xf4\xa7\x91\xeaZ\xfc\xcc\n/C\x9d\xacr\x01\xabU\xa6\x859\x0f\x98\x02\xaex\xdd\x80~\x95g\xb7\xf0\xe6\xd5@\x033\x12\x0bm\x1d\x14S\x17\x1dK\xa6\xc2N\x8bh\x87m\xce\xaaK\\\x1f\x81X\xfc\x97^(\xb5\xc1\x8e\xda\\\x02x\x89\xce}\xfapi\x83x\x93]\xb5dv\xb3\xb8FN\xf2+\x11\xfds[\xc4\xba3Fx\x8d@\x1d\xb1\xfd\xeb\xc8\xb4\xb7\x90\xa6\xe5\'#\x91\x8e\x00\xa4/]\xb2+\x97\xb1\x85\xc67\xc1#?\xd6\x93\xf8\x93\xefXu\xbf\xda\x16\xaa.c7\x13Hb\x07\xd4\xa8\x13p\xfadS\x9dG\xed\x1bP\x96y\x05\x92\xec\x87\xa2\xb3\xa8\xde~O\\}+G\xd7<;\xa5\xcadY\xaccn\x17-\x80\x1b\'\xd8\x8ej\x85{\xe0\xdbd\x02[9\x08\x07\x1e\x899\x1f\xadX\xda\xddt\x1b\x92\x925\x88\x8c\xe3\x00\x10\n\xfb\xf6\xefJ[\x80N\xec?J\x8d\x83\xc7\x1a\xfc\xd8W\x96"\x07L\xa0\x03\xfaT\x94~!\xd5\xef\x0e\xc7\x9e-\xa4\xe7\x1e^M1\xb3\xd1\xcd\xbd\xc1Y\xe1\x08~z~\xb5t\xb0\xb1E\xf2\xd9\x13.\xe4\x05\xe3\xa7<qN]\xbfN\x87x\xad"\xe3b\x00\xc5q\xe6#\xbe\xd5`\xf0/\x8a\xb5?\rx\x87N\xd4\xd0\x99"\x85\xf6\xcf\n\r\xbedM\xc3/?\xd3\xe6\xbe\xe0H\xb4\x1f\x1c\xe8l\xc9*M\x15\xc2\x86h\xcf\xa6D=G\x1dU\x87\xbd|\xa1\xe1\xcf\r\xb0\x9a9\x1d#\x0crTI\xc9\xcfs\x81[\x06\x97\x13[\x82\xca\xc5$\xfc\'o\x1bJ\xf1\x81\x8a\xf3\x8e\xbb\xd4\xec\xa4\x93I\xb7\x12\x05\x07\xf2\xb6\x82\x1b\xb3)\x03\x91\xefU\x973+\xb7\x19<\x1f\x91Yo\x8c\xbe\xc7|cm{,\xbax\xfd\xa5i\xd6=\xa5VP;\xa9By\xc7\xb8\xebX\xc6\xa5\xa3j\xdaD\xad\r\xf6\x9duh\xd98Y\xe3d\'\xe9\xb8s\xf9W\xdb"\xe2W>\xa9\x1f8\xc0%\xba\x91]L\xb1\xeaV\xadg}\x02^[I\xe9x&\x1b\xd0\x8fp\x0fC\xf29\xa8v>3\x9e\xd8$w\x16\xcb$k\x81\xa9p\x1f\x1e\xe7\x18\x07\xf6\xa6V\xe3H\xd2\x10\x01_\n\xc7\x1c\x8e\xdbS$\x91\xd0\x0c\xd3\xf8\xa0\x91\x93vx\x07\x05\xbb~\xb5\xf4w\x86~\xcf#\xd0\xfe\xd1/\'\x88\x13aif.\xed\x0b\x9c\xb07\x1b\xa3Tc\xdc\xa1\r\xcf\xc0\xadB\xe6E\xb7P\x91\xaa*\x11\xf86.\xdf\xd3\x18\xab\xce\xa5\xe2\xcb{W\x81a\x87\xce\x12F\xae\x08m;0\xcf\xb1\xedMH\xe4\x83\x9d\xab\xe3{T\xce\xd1\x92FFqW=\x1fO\x132\xbb\xa9+\xb8\x0c{\xd6\xf3\x7f\xe1\xbf\x0c\xeb\xd02\xdc\xd8Cmp\xc3+uj\x8b\x1c\x80\x8f\xe6\x03\x01\x87\xb8?\xadu\xa7\xf8\r-\x95<\x9b\xfb[\x80\x08\x03\x07c\xf3\xfe\xd6\xe9U7>%\xb5\xb8\x81\x8ca\xd1\xf8(\x7f0\xfd9\xa8\x12E+\x91\xa0\x06\x07\xb8\xaaE\xbe\x8f\x1c\x85\x0e\xc6\xe3\x90A=~\x95d\x8fDv\xdb\xc1\xce3\xc0\x03\xff\x00\r_m\xbc/s\x12\x82-\xc1\x1d\x01\x0c\xa4~\xb5%\x0e\x9f\x0c\x04\x1b\x8b\x84Q\x8f\xc2\x9c\x9c\xfdzV^\xe6\xea\xf8\xe9&\'\x8dO\xe5i}\x00\xfd\x0bb\x97\x1d\xa3\x9f\xcd\xde\xa9V:Q\x89\x99\x81`q\x82A\xebR\xebf\xc5\xbd#\x92@\xabR[\xe9r ?{h\xd8\x0ca\x97?\xda\x9eEki\xc7\x974nH\xeax\xe7\xe8j\x17\xe1\xee\xee\x1d\x0f\x99\t\x0e\x01\x18\x95\x0bc\xff\x00\xc4\x1c\xd4\xc4\xb7\n1\xedUck\xe8\n\x0epq\x83\xef_\x11\xfd\xb5j3k\x9e1\xbd\x82)\x0b\xdb\xe9\xea\xb6\x91\xa8\xce7G\xcb\x9f\xcd\x89\xaf\xb5\xfcc\xad\xd8xGL\x97Q\x9c\x92\xc4\x95\xb7\x80~)e# \x0f\x81\xd4\x9e\xc2\xbe\x1e]:k\xa9\xa5\x9eV\r$\xae]\xdd\xb9\xcb1\xc95\xbd\xf0U\x9f\xfal\xf77\xb3\xaf\xa9WDd\xf0s\xb9"\xac\xac\x94+\x97;\x000+0\x83A\xb9\x95\x810\xf1\xeeO\x15j\xb2\xd0\xe5\x85\x00\x12\x04\xc8\xec\xa3\x93W\x84\xd2\x98\xed\n\xe0\x93\xd7\x03\x8a\x99\xb7\xd3\x81\x040\x00\xa9\xc6@\xff\x00\x9a\xdb\xddu\xd7u\xc6\xa1\x8fl\x7f\x9a\xb0i\x94\xd5\x03\xf6}\xf5\xa0\x0f \r\x11\xea\xc0r\x07\xb9\xa9KhP\xe0\x81\x92{\x9fj\xd1\x06\x8e\xf3\xdb\xb4[\x15\xb7\xae>\x83\xde\xaa\xd0i\xeb\xa6\xdc\xc9g37\xe2\xcc\x0cz0\xfe_\xa8\xaa\xd5\xeaKr\xb2\x0c\x8dk\xbe\x17\xb8\xf7\xa8\xef&T\xe98#\xb0\xa9\x1b\r>\'\x8c\x83\x18\x05\x87$\x8e\xdf\x15t\xb5\xb7\xfb\xb3E\x1a\x8d\xfb\x80\'\x18\x18\xc7o\xce\xa0\xed %w$\x84\x10z\x1eEY\x04/\x01\x82B\xc4\xe3 \x93\xdf<\x8e\x95\x9d\xbd\x99\x9d\x88/\xcev>\xf5Q,\xees\xb9\xab\\n\xea`\x1e`\x07a%@\xc63P\xff\x00k\x8en\xb4_\x07\xde\x10\x08\xc4\x90\xcb \xfe\x07\x00\x00\x08\xf6;jB\x162\xbc\x7f\xbb\xc6\x14\xe3\x91\xc0\x1e\xdf4\xb7\x8ctU\xd6\xfc\x03\xac\xda(f\xb8\xb2Cyj\xdd\xc3F9\xc7\xd4dU\x15\x9c\xebk\xd4l\x19\xf0\x14\xce\xaa\xc7\xfd\xba\xb2\xba\xb6\xf6\xcdv\xd1\xc3\xdc\xc4\xac\xd8\x0c\xc0\x13\xed\x9d\xab\x15\xd2\xa5!\xc2n\xef\xd3\xb1\xab\xc5\x9c\xcd\x16\t#\xaf_\xad|\xe7a\xe2\rF\xc5\x93p\x12\xaa\xf4\xcf\x07\x1fZ\xd8\xbc7\xe2\xdd\'P\xd9\x0c\xd2\xf9\x12\xb0\xc0\x12t\xcf\xd7\xa5mz\xcfJ\xb9\x85ZA\x1f\x98\x9d\xcaoW]K\xc3\xfdB\xd83\x88\x8b\xa0\xee\xbb\xe2\xb4\xdb[\xfe6\xb3\x02r\x06*\xc3\x15\xfb\xac\'\r\xf8q\xb7=\xbe*\xb8\xb6\xaa\xca\xac\x17 \xf4\x91\x0f\x18\xa7\x04\xed!wzOP;V\x16h\xa2\x90\xec;\xee*\x85\x0b\xa1 \xe75\xa2\xf8V\xf7\xef:\x88\x85\xc7\xac\xaf\x1f \xd6\x81r\x96\xb6\xeae\xb8\x95"\x8d2w1\n>\x9f5\x82\xda\xdd]\xc0\xe2X\'hd\x88\xed\x0c\xa7\x04\x02:\xe6\x92\x9e\xe2\xfbP\x93}\xcd\xe4\xb2\x9c\xfe\'b\xc6\x95l"\xb7\x8eU\xd0\xacZ@\xd8<\x0c\x01\xfa\xd0\xd7>^\xc4\x12j\xe7\xaf\xf8\x99&\xf3-\xb4\xd8\xa4d9\x12O\xb4\x8c\x8e\xea\x83\xae\x0fsQ\x96bO-$\xf5`\xd4E\xbc \x10\xa5\x9b$n\x1c\xd5\xcfF\x11L\x05\xbc\xa0\x1c\x90\x03\x01\x92\t\xf7\xf7\xa8\xae\x12i#\x8be.\xd8\xcf\xc9\xd8Ts3J\xd9<\xe3\x8a\x95\xd3\xef\x9dcP\x8c\xa4\x8e\x08|\xe4U\x8e\xc3]\xb8\x8cm\x93\x07\xe0\x0f\xf3P\xe7K\x8a3\x91#u\xc7\x03\x19\xfdi\x06I\xe3\x90\xa4G\n8\xc9\xe4\x81\xfej\xf2#\xd4\xfa8\x8fD\xce\x86=\x82\xa3\x03\x91\xf4\xa09\'9\xab6\xaf\xa6\xe9\xfe"\xb2\x91\x93dW[s\x198\x07p\xe9\xf9\x1e\xf5\x91i\xad"O\xb5\xc7\xef\x15\xb0~\x1b5tW\x9a\xdeF\xdf0\xe0c\x1e\xe0\xd5\x02\xde\xe6(\xb5\x8b\x95\x88*\xc7\xe6\xb6\xc0:(\x06\xa0u\x0e\xa4:\x8b\xb4\x9f\x85\x11]F\xa4\xca\xcb\x8c9\x1bd\x81\xc1\xa5\x902\xa7\xdc\xe2\x9bj\xb7\x01\xb5\x9dQ\x99Cm\xb8a\xd38\xe7\x1f\xady\r\xd2\x06<\x01\xc7J\xa8\xf8\xca\xe2\xfb\xc3~"\x92\xe8C#i\xda\xab\x99-\xa5<\xa7\x98\xdc\xbcE\x87GS\xd0\x1e\xa2\xbd\xb3\xbe\x8e\xe6/6\'\'\xf9\x94\xf5_\x83R\'\xb0s\x1csgTr\xa8eq\xc1\xcd?-\x9b\x84Y\x14\xeaV\x19\x15y\x8aQ,\x80\xa9\xe0\x03\xb9OCR\x96\x86!\xc3)\xc7lv\xf8\xe7\xb5S-\xef\x940.\x02\x9e\x99\xecjun\xc9Q\x85\xe7\xa9\xfaUT\xb1\xc9\x13&\x06\xc3\x8a\x8829\xad"\xc3C\xd3\xee\xb0\xd1\xccK\x11\xf8J\xf0\r/w\xe1\xd1n\xe8s\xe99\xfc#\xd2q\xda\xaa\x1a^\xb6\xd0\xca\xbc\x91\xef\xcfZ\xd1\xacu\xc8.\xa3\xf2\xa5\x01\x81\x1d\xf8"\xb4\x9d?\xfd\x07\xa8@\xd0\\@\x96\x97[i|\x9d$\xfe\xa7\x9aX;s_6\xfd\xa1h\xebg\xadA,P\x84\x8e\xe6 \xc5\xb1\x80\xd2)\xc1\xcf\xcdZ~\xceU\x05\xcd\xd3\x19\x0f\xfa\x1bv\x16\xe8s\x9e\x9d\xebX\xd4\xf4m7Z\x89\xa2\x9e%\x9a\x169P\x7f\x10>\xe0\x8e\x84V\x0b\xafYO\xa3j2\xe9\xf6\x86D\x08=r\x81\x82\xc1\xb9\x18=\x86:\xd7\x03L\x8b\x12\x1d#\xca|\x06\x07*Tw\xfb\xd4c\x11IL\x83u<\x8f\x9a\xd4\xb5-CLI\x99Y\x83\xc8\x8a\xdb\x11y\xf5\x9e\x99\xf8\xa4\xf4\xa4\xdf\xea\x91\x8b)\xed\xeck;\xd1\xednV5f\xe4\x83\x81\x9e\xf9\xab\xdd\x95\xf4P\x05R@l\xf7\xf9\xaa\xe0\xcb\x1c\xc4\x927r\xc5\x82\xf3\xf1O+d\xe7\x18\xabrG\x0cE\xca\xf7\x03\x9cv\xac\xf6}\x86\xeaY\x1fq\x0f#\x10\xca\x07sV\xf95\x05H\xf2\x8a\x19\xfd\xbbUm\x19\xa5\xbb`\xf1\xe1X\xe7i\xed\xf4\xa5\xdf\xc8%\x8e00\x06\xb3\x81\x8f\x7fzt\x11M\x85\xbbF\x99[\x9d\xc1\xbaeNA\xaf\x04\xb7V\xec\x1d\x19\x94\xe3\xaa\xe7\x15a[X\xc3\x00\x07\xa4\xf0E8\xfb\x9c\xa3p1\x86\xc7_\x91]\xb6\xb5w\xc1\\\xf6\xe3&\xbb\xb5F\xd9x\x82A\x95\x96#\xbcp\x18\x0e\xbf\x95}\x11\xe0\xb9\xee$\xd1\xa3I\xed\xe6\x89\xd1\x89\x1eb\x95\xca\xb7#\x19\xebY\x07\x84\xf48\xef|Ej\x18\x0f.#\xe6\x15<\xe7\x15\xf4`\xe2\xbd[\xc1\xfd2Kky.\xe4\x95\x89\x94\x14T\xce\xd8\x04z\x8f\xce\xd5&\xd1\x18\xb9|\xe0.\xdfZ\xf6\x8a(\xad\x9dXQE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14Rs3$R2.\xe6U$/\xb9\x03\xa5|\xfd4\xb3\\\\\\\xbc\xeaw\xbc\x8c[>\xf9\xaf\xa1k!\xf1F\x9e\x96:\xa4\xd2m\x029\xc6\xf1\x8fs\xd6\xb3>)\xb7\x96k\x04t|,O\x97\x1d\xb0v\xcf\xda\xa1\xdd\xa9\xf47`q\xfa\xd5D\xdb\r\x8b\xd7\x92I\x18\xf7\xa6SZ\x7f*\x02s\xc5K\t!\x03`?\x9flR/s\x14(\xce\xdf\x88\x8c\'p\x0f\xbdx\xd7P\x8e\x06\r\xad\x80\x1aw9\xe3\x15\x19H\xda\xa0/\x08O\xfau\\*p\xdf\xeeoz\x8eh\xc9\'\x03\xb7Z\x937\x053\xea\xceI\xcey\xe7\xf3\xa6\xd2\xc8\x1eA\xb4\x03\x9e\x8a\x07\xf6\xac\xa3:\x93\x95\xc8\xcf\xf2\xe3`+\xa5\x81\xe4\xd4y@\xbe\xe4\xfb\xf6\xae\x166p\xc5\x14z\x7f\x13\x9e\x14~\x7f\xe2\x9eJ\x91\xdb(\x96\xe8\x91\x91\xe9\x84~6\xcf\xbf\xb0\xa63]\x1b\x85\xdb\xb4F\x8a}\x08\xbd\x05IT e\xf3\xf4\xa4\x17\xc6\xd9\xc7\xc58\x82kI1\x1b\x96s\x1a\xb33(\xc0\xe0\xf4\x04\xd3Iog\xde6\x84D\xcf\xe1^\x9f\x99\xef\\\xdbG\xb2;\x99\t\xe0\x80\x99\xf9\'?\xe2\x91\x90G\x18\xcb\x11\xff\x00jX\xd3\x92\xa1F\x0f\xc5\x19v\x0b\xda\xa6\xed\'hf\x8aTc\x83\xc8\xef\xc7qIjP\xed\x9eU\x07\xd3\x92\xcb\x8e8<\x8ai\xa6]\xa4\xcb NDM\x8e\x9c\x10y\xe2\xa6u8K\xad\x94\x8b\x19!\xa1\xf5\x11\xfe\xd6"\x90\xaa\xc0J\x879B\x1b\x07\xb0;~\xf9\x14\xe1$\xa8\x1e\xd5\n\xb1G\x02\x0fI\xc0\xf6\x19\x1c\xd4\xf7\x83\x81k\xeb\xe4\xc1P\xd6\xc7\xf3\xc3\na\xfb\xa7\x0c\xa4\xe0c\xa5Z|\'\xa7yb\xea\xf00m\xc7\xcaLu\xc7\xe2&\xacl\xd0\xb4\x89\x8c8\xd0\xe4\xe3\x9e\r)3\xa8|T\xa3Zm$\xed t\xcd{\xe4\x14\x00\x9f\xd3\xbdLyD\xb0~x\xc7ZO\xee\xccN\t\x04\x9e~\x95Kq\xd1\xa6\x91\xf3\x14O\xeb>\x9fo\xaf\xfcT\xd1(Q\xb9\xa8\xb6\x8c,r\xb9\x1c*\xe4|\xd5Z\xed\xff\x00\x11\'\xe7?5m\xd5\x08\x8f\xcb\x88\x1f\xe0\xc9\xaaV\xa0Yy\x19\xe9\xd2\xa1\x9b_\xc2\xdd\xbc\x04\xe5\x90\xe1\x8f\xcf\x7f\xd2\x9a\x92c\xa75\x01q0P\xcc\xcd\xc1=*\xa1\xac\x13p\xc5O<\x00\x07\xb0\xab-\xf2\x99\xdc\x81\x90\x07\x18\xfe\xf5\x9f\xf8\x9b^\xb1\xd2\x91\x8bJ\x1aS\x90\xa8\x0eI8\xc5i\xfad/$\xd1,hY\xcf\x00v\xaeAoqu \x8e4-\x93\xdb\xbdV5V\x86\x18\x8b9\n\x88\x0e\xe2j\x83\x07\x8e\xf5\r*\xe6&\xd3.\x1a!\x1c\x81\x99s\xb9\x18\x03\xd0\xa9\xe0\xe6\x98\xea\xf7w\xda\xdc\x8c\xccXG\x9c\x88\xc1\xe2\xab\xcb\xa4\xcc\x0eH \x0e\xc2\xbdB\xc7\xa6Z\xac\x05n\xcaHH\xde3\xb8\x1f_z\xd9\xd8t\x08\xa2L\xdd\x1c\xbe? \xed_z\xc1\xa9\xa5\xe5\x9d\x8d\xf4\'1\xcf\x02L\x9f\xfbdP\x7f\xcdk\xfaT\x11Y\xe8\xd6I\x1cj\x83\xc8\x0c\x14p\x01\x7fW\xf9\xaf\x99\xbe\xce\x1ei\xfc\r\xa2\xac\xad\x96\x88K\x08\'\x93\xb5$!G\xe48\xaf\xa4\xa3\x98K\xe1\xeb)\x01\xc7\xfd2\x02~@\xc7\xf8\xac/\x87\xe3\x8b\xa6]\xf8\x8c\x02\x19\xed \x94&\xfc\xaa6+\x1bt\x86)\xe6\x8b9\t!_\xd0\xe2\xa1\xee\xee\x82<\xc3\x83\x83\x85\xc7\xf7\xa8K\x8b\x97\x95\x15\x0bt\xe4\x8frk\xbb\x87.\xe4\xed\xe0\x0f\xedQroa\xb8\xab\x00O\xb5`\xe6\xba\x96\xeaY\x19\x9c\x85f\'N{\x13\x91\x9f\xa5G\'|W\x17\x13\x88\xe2\xdc[\x00v\x1e\xf5\x95\xf8\xb3\xc7\x9a?\x85\xa3W\xbf\x98\x99\xa5\xcf\x97\x04c2\xb2\x8e\xe0v\x1f&\xb4\x8dA\xa2\x83O\xbb\xb9|\x14\x82\x07\x90\xe4\xf1\x84\x04\xff\x00\x8a\xfc\xfd\xd6>\xfd\xad\xeaWz\x85\xe34\x93\\\xb9vbO\x19\xe8\x00\xf6\x1d\x00\xad\x87\x83z\x15\xb7W\x9a\xe1\xeede\x86\x025\x01\xb1b\xdc\x01\xed\xc6\xf5\xa0\xe8\x9d-\xfa\x8b\xc8A\xf4D\x17?$\xf6\xab\xbe\xab\xf6\xdb\xe2+\x8b\x8c\xe9\xd6\xf6\xf6p\x02p\xac\xbel\x8c>Y\xb8\x1f\x90\xaa\xd5\xdf\x8f\xf5\xedE\x0f\xde\xf5\x9b\x97V\xeb\x18}\x8b\xfa&\x05V\xff\x00b\xc8\x06|\xaf\xd75\xe1\xd1\xc8PJ\x8f\xa6+\xd8 \xe9}\x02\xd8 \x86\xce\x15+\xb0m \xb7\xearkL\xde\x1f$\r1\xaa\xe3\xb8\xcf\xf7\xa7\xab\xabBN\xe6~I\xc9$\xf3\x9f\x9a\xd9>\xc6f\x8bT\xf1\xb6\x9d\xceM\xa43\\g\xdfj`\x7f\xfdU\x85~\xcaf\x1f\xe9\xe3\x9fj\xd2\xbe\xccu\xb8\xfc\r\xe2\x06\xd4\'\xb0\x96\xe2\'\xb5\x92\x17X\x88\x0f\xeb\xc1\xc8\xdd\xc7j\x8d\xd7m\xd2^\x93~\x96\xd9i\xda\x16X\xd7 d\x91\x8coPn\xba\x15\xc2\xc3.\x8fQ\xd3\xb2\x8eI\xaf\xba\xae4\xeb-HG\xf7\xbbd\x95c;\xd0:\x03\xeb#\x19\x19\xfa\xd6+\xa9\xf8\'[\xd1\xe7\xf2\xed!\x96\xfe\xdeW>Q\x8dK:\x7f\xb5\xc0\xe9\xf5\xe9N4\xcf\xb6+\xddb\xf6[m;\xc3\xa9\x04QG\xbf\xcc\xb9\x97{\x92N\x00\n\x80\x0f\xebWq\xe2\x1dJH\xc4\x93\xcc?\x08;\x14mNy\xe0\n\xf1\x94N\xb1\xd1\xc8\x8aX\xd1T\xe5\xbc\x86`\xd9-\xdf\xd2N+#r\r\x8c\xa6\x19\xc3$\x98\x04\xaf\xb05\x8c\xea:V\xafb\xf1\xc3u\xa7Oo$\xcc\x16 \xea@fn\x00\x07\xa1\xad\xb6\xda\xdf\xf6\x15\x9d\xbd\x85\xa2\x08V5\x05\xca\x93\xeb\x97\x03s\x13\xdc\x93R\x1aV\xa1i\xab\\\xda\xc3t\xa9\xb3\xcdV\xc1]\xc00\xe5H\xf6 \xf7\xa9mkNx yOFb\x17\xaeM3}uw}\x04Z\xedB\xa4,L\xa06FN\x02\xb1\x1e\xdb\xedHiT\xc7\x94c\xf5\xac\x0f\xc7\xdfi:\xa6\x89}\x1e\x9d\xa7]\xb9\xba\r\x0e\xf3\xbf\x93$\xa7\xd2\xac[\x80\xbe\xf5\xf4\\6\xae\xd1a\xc2\xef(<\xcc\x1e7c\x9d\xbf\x19\xaf\x89<gm8\xf1\xae\xb6eQ\x87\x99\x1dN8\xd8Pm5\xf7\x9d\xb4Gddd\x80\x8b\xd0\x7f\xb6\xb4\x97=*\xd1-:"\xc5\x12\xea\x96"\xf2\xc8\x06K\x17U;\xfcnj\xcf\xa9Y%\xad\x97K\x95\x1f&x\x8b7\xd7\x00\xff\x00z`\x96\xd1[\x18\x8b$M\xbd\x0e\x14r@<r=\xea3Q\xd2mn\xd8\xc8\xea\xcc]\x80\xc3\x1c\x82q\xc7_\x8a\xb8\xcbi\xbd\x0b\xe0)\xcfLv\xa8\xf9-\xc0\x93,\x9c\x00q\x9e\xe4\xf7\x1fJo\xaa\xf4\xcb\x8bh\xbc\xa8\x87\x97\x1b\x15+\x8d\x86q\x82MS\xc6\xdb\xe4\xd6q?\x86\xe1\xdb \x8a\x0f,\xafr2\x07\xe5Qm\xe1\x87#-\xfb\xe3\xb8\x1c0\x04{p+W\x9e[kE\xdd+\x12O\xe1L\xe1\x8f\xd4\xfbT"j\xd3\x89$0b=\xd8\xe1F0\x07\xb5eew\xb4p\x8fxX\x83\xeb\n\xa1\x98\x0f\xa9#\xf4\xcdK\\\xb7\xbf\xc5f\xab\xa1\xb3\xc2\xc5\xec\x966\x05\xb2\xcb\x1e\x14\x0c\xe3\x9e)\xa1\xf0\xf7\x97\x134\x1bd\xdd\xf8\x8b~,\xfe]\xbd\xabY\x8f^\xbfF\xf5L\xdcv\' \xfeF\x90{\x9b\x0b\x89\x0bKa\x16Xz\x8ae\x0f=\xf8\xe2\x9e\x1dJ \x08Y%\x19<2\r?\\\x82O\xda\x82\x84\xf3\x8a\xc5\xde\xd1\xe3fy"b9\x19\xc7\x19\x1cu\xf8\xaeSN\x8aE/\xb4\xee,Kc\xa6q\x8e\x07\xfef\xb5\xa9\xb4h\xe3\x85\x1a"\x1e,`\x9c~\x12{7\xfc\xd5J\xebJ\x8b\xef3"\xb6\xcd\xaa\xad\x95\x1e\xfcr*d\x17\xe7b\xe8B\x11\x90\xc0\xecE2\xc9\xbe\x03o\x9a\xc8|E`\x89\x1a\x98\xd7,A/\xb7\xb0\x1cd\x8a\xa0\x08N\xc6\x04\xfaz\x80O\\s\x83[\xbd\xf6\x88g\xb9*\xd2\xb0\xdf\x19Rvs\xe9\xe4\x1a\xab\xdexYt\xf4yX\x99\x80=\x15}G=\x075\xa5\xb0\xea\xd0$k\x11rX\x91\xa7 \xd3\xf1.\x0e\xe75\x9bZi\x13js\xc5o\x1c\x0c\xd2LUQ@\xc9f<\x00+z\xd1~\xc7\xc5\x96\xd9.u\xebE`\xb8*\x91;0\xf7\xe4\xe0f\xaf\x9e\x13\xf0E\xaf\x86m~\xfdy\x0cgS\xb8\xc1\n\xde\xaf\xbb\xa9\x18\xc0?\xceG\xe2\xf6\xe9O\xef\xa5(\xc7a\nr2~*\x07[\xf1\r\xc5\xbd\xc0\xb5\x89cl\xa7\xf1\x15\xb2t\x93\xc0\xd8\x8d\xf1I\x9a@A\x03\x81\xdf\xde\x98Yx_@\xb3\xd8\x01\xb9wN\x0b\x99\x00\xcf\xe4\x06\x05:m\x1b\x19k[\x84s\x9c\xf9o\xe98\xf8=\rG%\xdb\x07\xf5p\x0f\x7f\xadC\xeb\xde2\xd3|7m\xe6\xde\\a\x9b\xfd(\x94n\x91\xcf\xfbW\xdb\xe4\xf1Y(\xc7P\xba\xb8\x0b\xa4\xdc<\x9b\x04\xc7\xf4\xc57\x04\x0fr\xc1#\x88\x92N\xc1FI\xab\x01\xd3\xefwl{i2{\x058\xc7\xd6\x92\xd4\xf5-\x07\xc2\xb6\xebq\xae\xeb1Y\x82\tTc\x99\x1f\xff\x00j\x00X\xfdk\xe5\x7f\x13\xfd\xa3\xf8\x9f^\xb8So\xa9\\\xd8[+\x13\x1c\x16\xf2\x14\xe3\xdd\xd9pI\xfe\x95\xa6x\'\xec\xcf\xc9\xf2u\xcf\x12\xee\xbd\xd4$\xc4\xb1[\xce\xdebE\x9eU\xa4\';\xdf\xb8\x1d\x05i\xe4\xe8\x16\xdd.\xd9.z\xad\xc8M\x7f\x96\xde3\xa9\xc9\xf6\xce\xc3\xea{U\x9d\xd7D\xff\x00N\x85&\xbc\x97F\xaf\xcb\x1a\x8c\xb1>\xd5\xaeY\xeb\x91jv\x87Q\x86\xcakxnQE\xb8\xb8\x01fx\x13%de\x1f\x841bTu\xc75P\xd7\xbcM\xa6\xe9i\xba\xea\xebh+\x81\x1a\xe5\xe4\'\xe1G4\xaf\x8bu9\xf4\xdd:\xea\xe39nA$\xf2\xc7\x1c~U\xf3u\xd5\xc4\xd7\xb7f\xe2\xe6F\x96f>\xb6n\x98\x1d\x00\x1e\xc2\x8e\x97\xd2\x93\xab\xcd%\xd4\x9f\xc3\x80\x1c*)\xc9\xc0\xed\x93\xfdj\x82(\r\xd3\xbeIX\xd4\xfd\xcf\xc5h\x97\x9fj\xa261XiR+7\xe0\x92\xe3\x80q\xec\xa8\x7f\xb9\xad/\xec\xfa\xe7\xc4:\xcd\xa4\xba\xbe\xafq\x1f\xdd\xdd\x8aZ[\xa4J\x81\x8a\x9fT\x84\xf5 \x1e\x00\xf7\xac/G\xd2\xdfQ\xd4,\x95\x97i\x9aD\x861\x8c\x92$`7\x7f\xc5}\x8b5\xa5\xad\x92Eik\x0f\x97\x05\xb4k\x0ck\xec\xa81K\xf1\x1c};\xa7\xd8\x04\xb6\xb6\x8de\x91\xc2\x97o[c\x93\xa79\xc7\x15*H \x84*\xc7\x1e\xfd\xc9\xde\xa3o5;\xb1\xb5L\xa7\x00q\xec\x05Wn\xb59\x06\x03HGqR\x9a\x86\x19H\xc6\x0f\xc7Z\xce\xb5]wC\xd3\xa41\xddjq\xab\xa9\xe65\xf57\xe6\x06qY{(\x1e\xed\x81\xf2\xdeW\xf6\x00\xb1\xfe\xf4\xc0\xb7\x9ef\xd3\x12\xbb\x93\xd9Fj\xdb\x06\xa5$\x8e\xa8\xcf\x8c\xf4\xa9xg\x9c\xe0d\x81\x9c\xe75\x97\xd9x\xe7\xc3\x1eh\xff\x00\xadU\x00\x8f\xc6\xac\xbf\xdcV\x89\xa6j\xbaF\xab\x16\xfb\x0b\xe8&\xeeU\x1c\x12>\xa3\xa8\xa7/\xecn-\x86\xa9,\xa5\x8d\x7f\xdc\xc8@\xa7\xda\xc2\xf6\x05-$.\xa3\xe4\x11U\xbf\xb4\x8d\x16mV\xcfB\xd4<\xd9\x19 \x12Z\xb2g\xd2\xa4\xfa\xc3\x0f\x93\xd0\xfd+(]\x06P\xc1\xb7\x05\\`\x13\x83_I\xea\x08\'\xd0^\xdf\xcbV?{\x8c\xe0\x9ctSU\xeb-\x16\x1b\xa8\xb7\x1be\\\x9f\xc2\xfc\xf4\xfaU\xe5\xa7X\x99--"V\xd6DAq\x91\xb6\t\x00o\xf0+\xa8\xe5Tf\xb1\x88\xb4\x99b\xc6\xd8\x8b\x0c{c\x9f\xad:\x86\xc1\xe2\xb9Q$2\x1f0\xe5T\x0e8\x1c\xfeU\xb8\x1f\x0e4)\x1b\xec@\xa7\x04\x83\xd5W\xfe)\tt\x1d\x97\x0f3D\xb20\x18R\xa3\xf0\xaf\xd3\xe7\xbd9q\xd4n\xa1\xd5\xe7\xdb2ex\'}\xf8\xda\x96&\r\xf3Yz\xdb\xc9\x14\x92\x16R7\xe3wa\x81\xd0\n\x8b\xd54t\xd4\x10\xa3\xc5\xc7U8\xe4c\xbeEk?\xb3!%\x89\xfc$\x9e\x83\xa7\xd2\x9b\xc9a\x0cm\x807)\xcf?\xf6\xa8Qu}\x0e\x1d2\x18px\xe2\x92]\x81\x04s\xd8\xd6-gcyo \xb6\x98\x82\xd9\xc4R\x01\xf8\xf9\xe8\x7f\xdd\xfd\xebK\x83\xc1\xbe\'\x96\xc1&k\x1f-\x0f\xadVGTv\xfa+\x1c\xfd+F\xf0\xde\x95\xa7\xc1\x04\xba\x9c\x96\xa9$\xc2]\x96\xfb\x86B\x15\x1c\xb8\xf9\xe7\x8au\x7f\xa9\xacD\xb3\xb3\x1cw\xeb]\xbd\xeb\x80\xb2\xaa\xc0$\x95\x978\x07\x01O\xce\xdd\xfd\xaa4\x91\xab\x92\xect\xe7\x9cqX\xfcv\xf7\x96\xf3\x88\xe6\xb6\x966F\xf5\xef]\xa4\x0f\xce\xae\x16L\x92\xdb_\xa0 \xabYO\x95\xcfm\x84\xd5\x99\xaet\xcdV\x15\x86\xf2\xdc8<$\x80\xed\x91>A\xff\x00\x06\xab\x96\x16\xef\xa6\xf8\x85\xecd`\xc5\xa1\x91\xa2`8t#\x86\xff\x00\x91\xefP\xe6\x94\\\xdb4\x83\x02H\xd3S\xa0\xc8+\x8f\xaf\xf6\xa8\xc8\xbeT\xd1\xb2\x9dK\xacgz\xf8\x9e\xe2\xc6\xd5@\xc4\'vA#\x90\x00\xfc\xbd\xeb\xb4O,\xa8XT`t\xdb\x92\x0fj\xd4~\xd0\xfc+\'\x87\xf5{\xb3\x1c\x05m.\x98\xc9\x01\xfe\x1c\xb1\xc9O\x8d\xbf\xda\xb3`\xb2(\xce6\xfayq\xc7\xe4\t\xafa\xb2\xbfK\xfbHg\x8eMH\xea\x08\xc9\xcf=\xbe\xd5\xf4-\xa0\x87\xa9\xd9\xdb\xdc\xc2\xc1\xa3\x95\x01\x1f\x07\xb8?"\xa5t\xbd{W\xd2\x0f\x99m\xa8I\x10,\x03G\x9c\xa1\xfa\xa9\xe2\xb4\x8d+\xed\x0fN\xb8\x1bu[\x7f\xbb8\xc7\xef\xa3R\xd16x\xc9\x1dV\xb1\x99\xca4\\\x16m\xccH\x18\xfe\xb9\xebM\x80\x0f\x1b ,}Ch\xc7Q\xdf\x8aj\xeb\xa3\xd9_\x02\xd2\xc5\xa5\xc9\xfc\xe9\xe9a\xf7\xef\xf7\xa8\xf7~\x17\xb0\xea+\xfc[p\x1b\xb3\xa6\xcc>\xff\x00\xe6\xbe\xaa\xb6\xba\xb2\xba\x85\xa5\xb4\xb9\x8ah\x9b\xf1\x18\xdc6\x01\xe8N)\xcb\xc4\xd1\xed\n@\x04\xf5\xaf\x94\xac./l.\x04\xd6W2\xc3\'f\x8c\x90H\xf6>\xf5\xbcx;\xc5\xd2\xeb\x16\x82\xcbP\x00\\#\x13\x1b\x81\xb4H\x83\xaf\xe6\xb5\x91\xea\xbd\x02{\x043E0\x9a }@\x8c0\x1e\xf8\xefX\x0f\x12x\x0e\xef\xa6\xd9\xcb}o!\x9a\x18\x86\\i\xc3\xaa\xfb\xe0r\x05]S\xce\xf3\xa3V\x04)9\x04g\x93W\xaf\x0eD\xc6f\xf5r\x08\xdb\x91\xfa\xe6\xabvC\xcc\x93c\xfe\x01\xf8y\xcfZ\xbeh&8d\x8e@\xa9\x8d\xdc\x0098<\x8a\xcc\t\xe3[\xaba&\x15D\x8b\xa9\xbd\x86y\xfa\xd7\x9bB56sV\x99t\xab\x92\xc1\xd6x\xceq\x90Y\xbf\xcdF\xdd[\xb5\xba\xb8,\xa5\x88\xe0+q\xcf\xcd[g\xba\x8d\x97t~\x96\xe3\x01\xb8\xc6zUV\xec\xb08!\xba\x9c`pMn\xfcM\x15\x85\x9d\xb3=\xb9ff]\xd81 go\xd6\xa4(\x05\xb0*\x9d\xab<\xb0\xda\xc8\xe0m\x92C\xb5X\xf6\xaaM\xae\x9f+\xcb\xe6\x00\xd9\'\xfa\x9a\xd3\xb5\x1bcso\x1a\xe0\x12e\x1c\x9f\xa1\xa7v\xbaP\xb7H\xcb\x1e\x8a3\xbb\x91\xc7\xb7\xc5`zZ4\x9eb\xef\x8c\xe5\xd8\xfb|\xd4\x93\x18\xd8\xd5V+k\xe3k-\xbc\xb6\xe9=\xb4\xbcKo(\x0e\x8e:r\xa7\xbf\xf5\xac\xa7\xc5\x1a\x12\xf8Z\xf2\xce\xfe\xca9\xa1\x82\xe1\x985\xbc\xa7!q\x8c\xaa\xb1\xe5\x97\x9e\xfc\x8a\xd5\xfcg\xe3\xbd\x1b\xc1\xb6\xcc\x19\x96{\xe9#\xdd\x05\xa2\x9eH\xe8\x19\xc8\xfc)\xfdOj\xf9JO\x15\xea\xfe#\xf1\x1b\xddj\xb7\x9eq\xb9S\x1a\xa8\xe1#\x03\x95X\xd7\xf8@\xfe\xbd\xeba\xd3\xbaT\x9a%\x95$\x93\xc8T9F\xfc\xaf\xef\x81\xfe*\xe6\xcf\xa4\xde\xcbk5\xd0R\x91"\x96\x19\xfel{V\xc9\x0b\xc3(\x8eUPw(e8\xe3\x9f\x8a\x91I]\xfa\x05\x1e\xf8\x15^\xd2fY\xad \x8dO\xae5\x03nz\x8a\xb1C\x13\xba\xf0ps\xd0U\r\xca\x08\xdd\x94\xff\x00)\xc0\xcf\xb5P\xceT1\xc1\xd8\x9c\xd2\xe6YT\x10?Zo\xfbr\xfe\xc5\x94\xac\xb9\xdb\xee2*Aba\x1b\x19[\x8f\xe1?\xe2\xab\xd7pI3\x80\xb9\xeb\x83\x9af\xddb\x91\xf0\xca\xa4g\x9a`\x93\xb6\r]\xf4\x8f\x16j2\xe0\xad\x91a\xbb\xa8<T\x95\xdd\x95\xd6\xb9\xa8\x8b\xe9\xed\x84A\x91W\x03\xa1\xdb\xc7z\x95\xf0\xde\x91\xe5X[.\xc5\'ha\xbb\xdc\xfb\xd5\xfdm\x16X@1\x001\xd3\xe9[\x8e\x8d\xe1\xb4\xb8\x85\xdf\xf1\x12\x08\xdb\x04E\xb9RG\xc9\xce)Yf\x18\xe7\xe6\xb1\xedj\xc6}*%1\x80\x01\xee\x07\xf5\xa8M#u\xee\xa7\x10v;cR\xc4{\x9a\xd45\xdbG\x96\'BG\xa40\x19\xfe\xd5\x94):U\xc2L\xf9Bd\xf2\xc7\xe6*\xa3\xad\xda\x0b+\xd1\xa23\xa0cJ\xf3\xc6\xe4W\x02\xf3\xcdk\x02\xd6$\xb0iY@\xd8\x87&\xa04\x80\xb7N\x89r\xbbe\'\xd0\xc3\xb8\xed\x9aqy\xaa*\xf8vI\x0b\x94\xc8\xda\x8a\x06K56\xd2\xe47/ip\x06\xce\x17\x8f\x9a\x85\xd4ncs\xd2\xdd"\x1a\n\xa6\xa5?\xcd\x93\xbf\xd3\x8aR\xecqV\'\xb2X\x9c\x8d\xacOl\xfb\xd7\x08\x9bFZ\xa5\xe6&Y\x08^B\x9ek\xc8\xed\x9a\xed\xd2\x14\x88\xb3\xb7\x03\x1f\xde\xb41\xdaFn\n\xda\x83\xbba\x063\x93\xed\xb5,g\xbdZ|\x03\xa6\xe6K\xab\xf6\x07\x8f\xdd\xa7\xf9\xadB\xa2\xb4k\x04\xd3t\xeb{a\x82\xca2\xe4wc\xd6\xa5k\xd5\xecm\xbf\tgo\x07t@\x1b\xff\x00\xc8\xee\x7fz\xb5\xb7M\x11(\xeew4QE\x15.\x9e\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xa9\xfe4\xd3M\xf6\x97\xe6\xa2\x93$\x07w\x1dv\xf7\xab\x85x@ \x822;\x8af\xe2\x08\xee`\x96\x19\x06RE*~\xf4\x89\x10H\x8c\xa7\xb8\xaf\x97\xa4{\x98\xb26\x1c\x7fZg1\x96L\x00\xac\xb8\x1cn\xe6\xbe\x8d\x9f\xc2\xfa%\xc5\xc1\x9eK1\xb8\x9c\x90\t\x0b\xfa\nqq\xa7hqD<\xfb;UE\x18\xf5(\xaf/\xb9\xff\x00\xa6\xb2\xdcI)^\xa8\x15s\x98\xc1B\xdf\xae\xe3\x15\x03\xf0\xb2\x00u:\x81\xef_-\xca\xec\x07\xaf\x1e\xd9\x14\x9a]\x94\x7f\xdd(\xdd\xd9\xcfQ\xf4\xf6\xad#\xc5\x9aN\x89p^M!\xc2\xba\x8f\xdeF?\x0f\xd4Vc\x042\x99\x8c>\x95b\xc0z\xb8\x19\xaf9\xea}\x1a\xe3\xa4\xdf\xbd\x8c\xa5$\x90`\xa3Fr\xae\x1b`G\xdflT6WW\x189\x19\xfc\xc3z\xecb_S\xe7\'\x96$\xe7\x9f\xce\xbc1\xa0$\xe1Xg9>\xf5\xe9\x8d\x8b\x9fX`\xa7i\x0b\xc8\xe3\xda\xbb\xb8\x95U}[Tc\x18\x1dj\xb7\x1f\x98j:\xb3\x8d"\xa4G\x1e@$f\x9b\xcbv"\x83\xcb\xc8\xdaX\xb6>O\x14\xc0A-\xdf\xefY\n\xc5\xd8\x1f\xe2\xfc\xbd\xa9\xfd\x86\x9c\xf7k\xf7\xab\x81\x98\xf7a\x17\xdf\xe3\xe9V\x98l\x1eR\x0b\xa6\x13\xb2\xd7$\x9d``\xaa5?s\xfd\x85I\xd1\x81\x93\xf6\x15\x13\xa4\xd9\xf9j\xccT\x03\'?\x90\xe9R*\x19\x9el\xb3mE(;\xf3\xd6\xa5s\x14E\xe1\x8f\r9\x00"\xe3\xf0\x83\xd5\xbf.\xd5\x13z\xdfrC\x08s\x9crGS\x9a\x9bcm&\r\xfc\xaaB!9\xdfm\\*\x9f\x9d\xa9\x87;\xe9\x07s\xcd3dU-\xbc\xa9$g8\xc1?Z\xb8\xf8y\xd9-\x02\xa9\xc0fb@\xfa\xd6~\xb2\x17\xef\x9ep@\xabg\x86oB\x85\xb6s\x82\x18\xed\xc7R3\x9cSq?\xfe\xa9H>X-\x8d\x8e\xf8\'<\xd3\xf1\xf1\xf6\xab\xd2\xc4\xe4\x8c\x82>:\x9ar\xb1m`\x0e3\xd7\x15\xda\xb0\x01v\x9f\xaf\x15\xcc\xb2yY<\x9fs[\xc8-\xecm\xd4H\xe7e \x968\xc7\xedM1j\xa8\xebNV\xee]\xc7\xbf\x1fLqU;\xb9c\xc3\xe4\xf20F{|\xd5\xb7Zx\xeeF\xf5R\xac\x063\x8e\xb5\xf3?\xda\x17\x8c.\xfe\xf1u\xa2\xd9?\x93\x1a\x90.e\x1f\x89\x8e?\x00=\x87<\xd6\x06\x0e\x9d\xfe\xa7\xd6n\xe3\xb5\x98H\x8d3\xc8e\xec\x14\xb6r~w\xc5Y\xf4\xae\x9dq\xd5/\x16\x08\xd7\x1e\x9dLO\x00q\x9a{\xe2_\x1a\xdb[G<\x16\x0c\xb2\xcd\xca\xf9\x80\xfa\x14\xfb\xfc\xd6\ru\x1c\x97W\x12Mss\xb9\x8brs\xcd/\x85\x04\x82y\xce3\xda\xb9}\x9bTm\x1cu\xc7\xb7\xfc\xd7\xa8t\xce\x9d\x07KB\xb0\xe4\xb3~g?\x98\xd7\xadt\xbe\x85\x0fMB\x10e\xc8\xdd\x88\xde\x96HT\'\xa6U\x1f\xdf\x9a\xf1\xad\'\x90\xe1dRz`\x1c\x7fz\xf2"\xbc\x8c\x00O\x157\xa4i\xb7:\xbe\xa1oem\x1e\xe9\xa7p\x8b\xce0X\xe0\x93\xf0:\x9a\x95,\xbeJ\xbc\x8c\xe0*\x82\xc5\x9b\x80\x07z\xb4k\x08Q\x1eY\x0e\x15Af$\xec\x00\xe6\xbe\x91\xfb=\xd2\x9e\xcb\xc2Z4R\xfe\'W\x9d\xbf\xff\x00k\x96\x1f\xd2\xb5\x8d>\xf0\xb5\xb2i\x88\x03\x9d\xae\xeas\xc0\x00\xf2>\xbd\xea\xa8\xb2\xa5\x8d\xb4Vv\xa8\xa5a\x89#\x0e?\x95F0\xa3\xf2\xa6\xb0]Oi:O\x1bmul\x829\xe6\xbc\x81/\xdd\xae\xae\xe7%\x80\xbb2\tq\xb1\xf2\xe49 f\xbc6\xe1\xbc\xfb\x9b\x89@\xff\x00\xdc\x95\x98}\xcej\xd1p\x85\x0bg9=sL&$\x85\xcf$\x1f\xf1R\xe2\xee\xdbS\x8b\xce\x88m\x93\x03\xcc\x8c\xf6\'\xdb\xe2\xa2n\x19cFi}*\x80\x96>\xc0\x0c\x93T\x0f\x18\x86w\x8c8p\xad\xe9a\xdcv\xa8\xc6&i\x15p}G\x8a\xc9~\xd4\xf5ymtx\xb4\xabf\x02k\xef\xf5y\xe9\x02\x9e\x7f\xfe#\xc7\xeb_4Ka\xa93\x8f.\xd9H\xc7\xe2,\x00\xab\xef\x885k\x8d{V\x9a\xfe\xe0\x10\x18\xe1P\x1fJ\xc4\xa7\xd2\xa0\xfd?\xadC\xa2\x83(\x0c\xfbPw\xafd\xe8V\xed\xd2,#\x8bJ\x19\x0e^S\x8c\xfa\x8fm\xbd\xb8\xaf\xa1|7\xe1\xb3\xd2\xfad12\x8f5\xc6\xb9H\xff\x00q\xed\xf6\xe2\xa1#\xd2\xf57Rd\xd8\xb8\xeb\x8eE!&\x9dr\x99\xf4\x16$q\x81V\xa0\xaf\x90\x0c\x98\x05w\x8cr0:f\x85V\x1b\x8bnU\x00\xfc\x1f\xca\xad\x05\xec\x80\x93\xe8\xc7\xb0\x15p\xfd9A\xc9L\xd5-\xadnT\x12a \x0fq\xd2\x90\xd96q\x82?*\xd0"W`\t\xe4~.NF\x05I\xc2mB;Im\x1b\xe4\xfay\xee=\xf9\xefK\x1dD\x83\x86\x8d~\xb9\xa6\x1a\xc57\xf4\xd7_f\x1a%\xc5\xdd\xcd\xfd\xec\x85\x964)\x08_\xe6\'\xd4k\xe8)4\xf3,@*\xfaG\x00{\xd6e\xe1=f\xc2\xd6\xf0Z\xc7\x18\x8d.\xd9U\x86\xdc\x05\x90p\xa7\xf3\xe9[\xda\xc1\xe4YE Efa\xc0f\n>\xa75\xe7^%k\xf9\xba\xc2\xacq\xf9\x86@\x0cA7\x1a@\xc1\xcf\xb61\xbek\xc3\xbce\xd3.!\xeb\x934\xd8\xd3*\xabFx\x1a@\xc7\xf5\xaa*\xdb~\xce-!!_\xff\x00\xa6=\xdb\xb5k\xd7\xaf\x1e\xb1\xa3X^G\xf8%\x846=\x9f\x18#\xf25\x82\xeb77\x13^H\xc5\xce\xe0pT\xf1\xb4\x0e\x98\x1e\xde\xd5}\xfb>\xd7R\xea\xda\xe7D\x95\xf0\xea\xe6km\xc7\x96\x07\xf1\xa8\xf9\x1dh\x89\x0f\xfaWP\xb7 \xb4\xd7\t\xc8\xe3Rn\xa3\xf5\xaa\x01k\xe5\xa61\xb0\xe6\xb2O\x1exh\xdc\xeazu\xe41nq46\xf3\xaf\x1c\xa3\xbe\x01\xff\x00\xed\'\x1fJ\xfa\xd6\x0bdV#\xa0\x07\x07\xf2\xe2\xb2M\x7fLI\xcc\xf1\xc8\x81\x95\x81V\x04p\xc1\xba\x83P\x9a/\x8do|\x12\x8b\xa7\xeb\xc2\xe2\xe3K\x07m\xa6\xa0\xa0\xc8\xf0\xafh\xa7\x1dH\x1f\xc2\xddj_\x87\xba\xc2\x14\xb6\x8ed\xf3\x1a\x10B/\xf3\x11\xce\x07\xb9\xa9q\xfe"\xfe\xda\x0b\x1c\x83%\xb1\x7f%;\xba\xb9\x19\x03\xdc\x8cl+w\x9f\x08\x18\t7\x0cUwQ\xbd[{q!a\x90\t\\\x9c\x01\xc7$\x93\xedY\xce\xb5\xf6\xc5\xe1kh\x19\xec\xa7\x96\xf6\\glq\xb2\x80\x7f\xdc\\\x0c\x7fZ\xf9\xef\xc5\x1e3\xbe\xf1<\x93\x1b\xab\xa9!\x89\xa4R\xb6\xa8\xe4F\x061\x96\x1f\xc4\xd5sy%\xefVvH\xa3\x92\xde<c[\xa9 n\x0e\xc1\xb0N?J\xb9\xe9^\x0f\xea\x97\xce\x0c\xb0\xb5\xb4@\xee\xce\xa4\x1f\xb0\xad[\xc4\x7fj:\x0e\x91p\xf1\x06\x97S\x9f\xaby\x0c\xa5\x17=\x8b\x9e?L\xd6\x7f\'\xdbU\xfe\xfc[\xf8v\xd8\x0c\x8f\xc7;\x9e? +7\xf2\xed\x04{\xbc\xa2\xc0\x01\xceq\x83]*Y0#b\x82\x07RI\xe4\xf4\xe9\x8a-\xbc7\xd1`@%\xb4\x92\xe1\xff\x00\x99\xdd\xc8\xc9\xfa)\x15\xbd\x83\xc1\xdd6\x04P\xf1\xb4\xad\x8f\xcc\xc4\xef\xf6\x15\xf47\x85\xbe\xd24_\x11:[^@t\xdb\xb6\xe1\x16G\r\x14\x87\xd9\\\xe3\x07\xe0\xd6\x8cadl\x80k\xe31\xf76P\xb8\xcb\x0c\x0c\x13\xc5k^\x10\xfbC\x9fK6\xf6:\xc4\x8d=\x9e\x02\xa5\xc1$\xc9\x17\xb6I\xfcK\xfdEg\xfa\xd7\x86<\xb0\xf3\xf4\xe4|nZ\xdd\x8eO\xff\x00\xa1;\x9f\xa1\xaa\x0e\xb1\xe1&Ei\xac\x830\x1b\x98\xcf#\xff\x00\xc7\xdf\xe9_@\xd9\xdd\xfd\xdd\x98\x11\xb9\x18a\xd0\xf2\x08\xf65\xc6\xa1\xa6[\xb7\x97uk\x13c\x91\xb0\xf7\x07\xaa\xff\x00\xc5pUYC\xa6\x08 \x15#\x90A\xe4\x11\xf5\xa7\xd6S\xa3\x89-\xe7,\xb1H0J\xf0\xca{\x11\xf2++aw\xe5H\xb1\xc8G\x94O\xf3\x7f#\x1e\x08=\x87\xbd`]\x08?=\xaa\xa5=\x97\x9a\xe8\xca\x8cps\xbb\xeb\xd8T\xee\x91\xa4Ej\xa2\xfe\xea%\x92@sn\x84p\xa5\x7f\x8c\x8e\xe4\x1e\x9f\xad>\x9e\xc9t\xe8\xbc\xb5B\xca\xd8\xf2\xa4\x07\xd2A\xff\x00\xcei\xa2y\xc8\xa3s\xe4v\x02\xac\xba\x85\xc7\xe0\x99B8\xf3\xda0\xc0\x8e\x10\x9e\xfcnq\xb8\xc7\xd6\x9a\r\xc8\xc5<\xbb\xbbg\x198,\xdd\xea\xb1vw\x92Y\xeabYZPWg\x07\xaf\xc5Wn\xd0\xc7\xbbq\x00\x03\xfd=\xea\x96\xdb,\xf9f\xcb\x1d\xc9;\x93\x9am\x88b\x00\xde\xab\x9a\xee\xaa\xbaN\x9f5\xc6\xdd\xee\x06\xd8\xa3\'\x1b\xdc\x8e\x07\xd3\xb9\xf8\xaf\x9d\x9f@\xd7\xb5\xedFI\xe6g\xb8\xba\x9d\xb7t-\x90z\x00\x06p;\x01\xd2\xaf\x1a\xdf\x89\x1fP\xd4\xa4(\x07\xddc\x05m\xc3\x02\x0bs\x82\xe3\xa7R?*\xe6?\x10\xeaV\xce\x9fw\xb8\xf2\xd5\x90y\x8bo\x88\xf7\x0ct$\x0e\xbc\xf3^\xab\xe1\xfbX\xfadA\xe6,\xb2J2\xfaP\x16\x03\xfd\xa0\x92\x00\xf9\xafe\xf0\xe7\x86\xdb\xa7\xd8\xac\xb2F\xa6\xe6U\x0cCg\xd2;/\xf9\xa8\xb8\xbe\xc9<@Hk\xa3\x05\xb0$\x03\xe66H\xcfl.k\xeaO\x0c[\x17\xf0\xee\x8b\x1c\xf2\xa4\x92\xc1j-\xd9\x97\xa1x}\x1d\xf9\xe4\x00k\xe5K\xddV\xfa\x7f5\xe4\xd4\'9\x1c\x06\x91\x89#\xbf\x19\xadC\xecg\xc41\xc5s{\xa2\xca\xc7\xfe\xad\x8d\xcc\x19<+\xc60\xe83\xdd\x97\x9f\xca\xa6x\x97\xf07\xdd84P\xcc\x1a\x17\r\xaaV\x0c4\xf7\x04(\x15\x0b\xc6\x1d\x1a\xea~\x94\xf3\x92\x8c\xd6\xcd\xafJ&=<6\xe4\x9e9\xab\x8f\xda\x0e\x9b\xf7\x9d!\xa3\xda2\xacs\x8f\x9e\xf5\xf3\x9c\xb6\r\x1f\x9b\x1b\xaf\xac\x02\x06\x07\xbd}\x99\xafXCwnAM\xcd\xf4\xcf\x18\xff\x00\x15\x88j\xda\x17\x93\xe7H\x00<d\x81\xdc\x03\xd7\xf2\xac\x97J\xbe\xff\x00Mi-\x18\xe4k\xd4\xbfz\xf1\xddo\x13\x128;\xfd\xc5Ax\x0e\xd9\xee|S\xa1C.]E\xdaI\xc0\x1e\x95\x88o#\xe9\xc5}\x11{0\xdf+\xe7\x81\xb9\x89\xac\x9b\xc06"\xdb\xc4\x96\xd2\x95<C6\xdc\xf072\x11\x8c\xd3\xff\x00\xb5\x9dj}#\xc3\xc6\x0bw\xdb5\xf4\xbeNq\xf8b\x03s\x9f\xec*\x1fW\x1f\xea\xbdG\xa6YB@29\xc9\xc6\xc0\x1co\xf6\x19\xa9\xfd6\xdan\xa9uoo\x19\xcbM @}\x87$\xfd\xab%\xf1\xdf\xda\x15\xdd\xf5\xd4\xf6\x1aM\xc3El\x84\xac\x93\xa1\xc3H{\x85=\x94{\x8e\xb5\x91\xb2\xeeff|\xee\x198\xces]9X\x99\x90\xcb\x91\xb79\xc1\x1d}\xb3^\xc7\x87R\x02\x8c\x05,[\xfc\xf5\xafM\xb0\xb0\xb6\xe9\x96\xe9\x0c\x11\x85P\x06[\x1b\xb1\xf7&\xbd\xae\xcf\xa1A\xd3\xa1X\xa2\x8c\x00\x00\xcbcv>\xe6\xbc\x11.r\xa7\xf5\xa9\x0b\t.\xad\xa6I\xed\xe6xeB\x18H\x84\x86\x07>\xf4\xc9&P\xa41\x1c\x0c\xafN\xb4\xf5e\xde\x7f\x089\xc7<\x0cq\xd3\x02\x9f\x97QR\xac\x01\x07c\x9fj\x94l\x81\xd8\xa0 \x8c\x10F\xc6\xbe\xae\xfb6\xf1\x13\xf8\xa3I\xba\xb5\xbc\x9dM\xfd\xa3\x82\xe4\x007\xc6xW\xc0\xfd\x0e+F\xb5\x88[\xc5\xeb\x88\xe5I\xe0s\xdf\xbe+\xe2\x9d\x17[\xd4t\x1b\xfb]B\xc2o&h\x89\x01\xba\x86\x1d\xd5\x87u=\xc5}3\xe1\xef\xb5\r7\xc4";Ao\xf7ME\xd3,\x8cAFe\x1c\xf9g\xbf\xb8\x07\x9a\xf3\xee\xa5\xd1\xd6\xc2Yn\xe0\x8b\x11\x80\xcd\x85\x19\xd3\x9d\xf8\xf6\x06\xbc\xdb\xc4^\x18\xb9\xb4\x96K\x9bhK[7\xa9\x82\xf3\x1f\xbeG\xb5_u-R\x1b\x04A\x1a\x89&e\x1c\xb2\xfe\x01\xf4=\xcf\xcdD[k\x86y\x08\xb8\xc9\xdcF\x1b\xb8\xf6\xa8{\x93:\x19]\x9c\xb8$\x9ey9\xa8Xfs)\xc88\xcf\x1d\xb1\x9a\xceOs=\xfb\xbc\x8d)P?(R@\x1fj\xc43yL\x07\xedZ\x0c\xf6\x88U%S\xf8\xf3\xea\x1d\x0f\xd6\xa1\xe4\x848`\xc0\x00\x0f\x07\xde\xa5\xf4\x857Q\xbd\xb9\x9b\x96_A=7\x0e\x94\x92\xc7\xe6\xdcCn\xc1T\x86\n@\x18\xe9\xd6\xab\x19\x1fJH\xa3\x01\x9bG\xff\x00\xb0\xe6\xa4\xa9\x0c)W\x88X\xd9\xc7n\xb2\x921\xe62\xf6\x0c\xc3\x9cU>\xf6\xea\x1b\x89$\x85.\xa2.\x87\x0f\x18`X\x1ff\x03\x9a\xaf\xfd\xad\xf8\x9a\xefG\xb2\xb5\xb5\xb2\xb91\\\xde;\xb3:\x9fP\x85\x06\x0e=\x89\'\xad|\xe9n\xd72\xc8dY\x1c\xcd\xbb;\xc3\x1d\xcd\xee\xd9\x18\'\x03\xadiz?\x87\xa6\xeaP\x1b\xe9\'\x11+\x92"\x1au\x12\x14\xe9\xc9\xcfm\xab{\xe1\xef\x03M\xd6\xbay\xbd\x92\xe0B\x8f\x91\x10\xd3\xab!N\t;\x8d\xab\xe9;{{\xa5\x95\x82\xe7\n\xdd\x0f?\x9ej\xd3\x12\xc6\xd2Y\xcdq\x11im\x89\xf2\xa5\x1c:\x83\xc1\x07\xddO\xb1\xac\x0bK\xf1\x86\xa3g$q=\xc3]\xc6GF\x18t\x03\xfd\xfd\xf8\xe7\xbdk\x1a7\x8a-oc!.72\xf5\x8d\x97\xd4\x07\xd3\xda\x98\xea}.\xfe\xd8k(\x19pF\xa4\xcf\x07c\x9a\xa9\xea\xfe\x0b\xea\x1d\x1bT\x92\xa1x{L\x9e\xa4\x1f_j\xb9\xf8\x9fF\xd2\xfcW\xa5Kh\xeaW\xccN\x18`\x95q\xf8]}\x88\xf6\xaf\x8e\xbcG\xe1\xdb\xad\x02\xfe]>\xf6&c\x13\x86\xe1\x88WF\xfe5\xcfo\xfe+\xea\xe1\xae\xc4A+\xe5\x02:\xe5\xb0q\xf4\x15U\xf1\xdd\x9c\x1e\'\xf0\xcd\xf4\x88?\xebt\xf8\xcd\xc4l\xa3,\xd1\xaf\x0e\xbf\xa5H\xe8\x1d^\xf6\xc2\xf4$\xeb\xff\x00\xa7\x9eE\r\x81\xa7C\x9c\r[{\xf7\xa9\xbe\x0e\xeb?\xe9=F\x1b9%\x0fku*\xab\x0e4;l\x1c\x7fz\xf9!\x95\xd9Uw\x00\x98\xda0p=\xf9\xf8\xcd5*w\xe4\xf5\xef\x9a\x93\x92\x14\xdc\xa60\xe0\x1cc#\x9c\xfcR\x05If$r\x0f\xfef\xbdy$\xdbj\xf7\xc3f\x01\x1bW1\xa6\x0eG_\xedS6R]Y\xbd\xbd\xd4186\xc0\xb2\xb1\x18\x1b\x98\xe3?"\xa3c\x00\x0c\x80A\x03\xa8\xa7\xc8\xbb\xa2/\xb86\xdcey\xe0t\xcdG\x98\x86\x18 \x10v \xef\x9c\xedS\xd2\xd69c\xd0\xc8\n\xb0!\x81\x19\x04\x1d\xb1_B\xf8s]\x83V\xb0\x86\xe9\x7f\xd4Q\xb2d\x1f\xc2\xff\x00\xf0z\x8a\xd2\xf4y\xa5\x17\x10\xa26Al\xf1\xfa\xd7\xcd\x9e\x19\xbe6\x1a\x95\x9a\x89\xd5\xa3\xbb"\x17\x89\x01\xc0\xcf\xf1\xe3\xeb\xcd}\x13\xa0\xc6~\xf0\xac\xc7\xd2\x8ax\xf95\xe5\x1e \xb3K9\\\xaeB0,\x80\xfdx\xfb\x1a\xf9o\xc7~\x19_\r\xf5\xf5Kq\x8b[\xa1\xe6\xc2?\xda3\x86_\xb7\xf4\xad6\xe4\r\x89,r\t\x01PH\xf6\xf7\xfaTsl1\xc8\xe78\xeb\xeeF)\xdcM4\xb1\x12\x91\x90\x07\x19\x1c\xe4}+\x8beC)F\xda23\x82}\xbe\xb4\xf5\xcd\xebu\t\xed|\xac\xaa\xce\xb8\x01\x81\xd3\xab\x18\xc8\xce\xff\x00j\xca\xa4`\x1d\xc7zN\xd2\xd2y\xc6]\x82\x85\xf5\xa2\x7f\xcdG\xebZ\x8d\xae\x9dgwqu \x8a\x0bx\x99\xe6q\xd9W\xd8{\x9e\xc3\xde\xad\xe8\x88\x15\xca\xb1\xc0\xe0\x0f\x81XW\xdb\r\xcc\x91h\xb1Z\tB\xfd\xf6\xf1U\x81\xfe$\x89K\x9f\xcb8\xab7\xe9i\x04VP,\x8c|\xf91+\x83\x9fH\xe7\xe9\xb0\xab~\x95dz\x97P\xb4\xb4\x19\x02Y\x02\x9cr\x17\x93\xfbW\xcc^*\xd4\xe7\xd5\xf5\xddR\xfaX\x99\x92\xe6\xe5\xda=\xdf\x89c\xe8\x8b\xc6G\xa5@\x15_\xd3\xe3\x8d5==\xd5H\x1fxO\xff\x00\xaa\x9c\xde\xcaa8\x0c\xac\x07Q\x9agm=\xbb\\B\x15\xf0D\xc8\xd8<g\x07\xb5o\xa2B\xb6\xdaUp\xba4\xed\xc61\x8e+\xd8\xaf,\x04V\xad\n\xc6B,Z\x00\x1d\x80\x18\xaf\xa0\xf4\xed3\xf7\xca\xe8p\x11\xb1\x91\xef\xda\xb5\x0b\x1d\x1d\xae\xadD\xa8\x98e8#\xa0<u\xaa\xf6\x93\x02\x8d\xdc\x0e\xb9\x1f\x19\xadKBH~\xe73\x85e\xc9\x00\x10{\x83\x9e\x95\xe6\x10\x8f\xf5.\xa5\x1c\x12\x13\xa7K\x12s\x83\x803_=\x84*\xce\t\xe0\xed\x9a\xa1]i7d\x8f0`\x0e\x83\x1c\x1am\x16\x98\xe6h\xe3\xfcD\x9c\xf0+@\xbf\x8c\xc9\xc0bc\xc1\xcey5\xee\x9bm\x1cD3\xaa\xeea\xc1>\xd9\xe9OGa\xae\xef\xc8\x8d\x88A\xfc\xcd\xc7\xedJU\xef\xcd:\xb1>J\xa0l\x8c\x01\x8c\x1e\x95f\xb6\xbcF\x05\x0b/\x03\xe8i\x84\xb0\xa2\xc4\xc602OQ\xd0\xe6\x9a\xdai\xbf\x7f\xbd\xb7\xb5\xc9V\x95\x80\xcf\\\x0e\xe6\xb6v?\xea\x9d"h!@\'\x0e\xca4\x83\x80K\x1c\x01\x9a\x90\xa3Q\xdbcN\xef\xd2\x1b\x80\xd1\x87]\xe7\x90\x01\x04\xe7\xe9Xw\x8el\'\xfb\xbc\x05T\x86\x8e\xe1Y\xbe\x98\xc6k|\xb7\xf0\xa5\xce\x93\x7f}\xba\x17\x9bv<\xb9\x82\xe7(\x7f\xb1\xf7\xaa\x86\xb9\xe1\xf9<Cp\x91\xd9\xc8\x03&w!_\xc4\xc3\xa5O\xea\xb6w\xf7\xb6P\xdc\xc9`a\xbb\x12\xb2\xad\xb8:\x89\x00\xe3\x907\xf7\xdb\xb5-c\xd3.\x0f\x1c\x1aGO\xb1\xb2\x7f\n\xc6\xd7`.\xd8w\x96n\xd9\xa6zD\x11\xaf\x96\xe5\x80\x0b\xca/\xf6\xa8\x7f\x17\xc3\xad\xc3\xa5E\xa55\xb9\x89"\x88\x06#\xab\x95\xfav\xa5\xbc\x1e/5\x0b\x00\xe6\x00\x04Ci\x91\x8e\x01#\xb0\xac\xa7V\xb0\xba\xb9\x97\xa3\xdbAfC\xdb&\x99\x14\xae\x93\xa9\x06I?JI\x8fH,}\xea\xdd\x1c\xdbD\x84\xf5ni\xdd\x9e\xb7>\x993}\xd1ci\x9d0Y\x86q\xf4\xa8)b\x9cH\xc50v\xf4\x19\xefR\x1al\x08\xe4\xb0\x18p}@\xd5\x87J\x9e{\x07F9\xf3\xc6B\x0cq\x9eN\xfd\xe9\x01X\xf1\xb5[\xfc\x18\x9a\x94\xfa\xd4\xd77\x17\xd2\xb0(\xc5\x93\'i\'\xe2\xb5\xaa\xa4\xf8B\xcd\xd1n\xae]p\x1b\n\xb5v\xafV\xe9~i\xb0\xb7i]\xd9\xd8\x16%\xceO\xa8\xe6\xacm\x13D_V&\x8a(\xa2\xa7\xd4\x9a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a)\x8d\xce\xa7af\xdb..\xe3\x8d\xb1\x9c1\xe7\x14j\x1a\x85\xbe\x9bn\xd3O&\xd1\xd1~O\xb5`7\xd7\xb7Ws\xdc\xcb3\xef29\xeb\xd4\x0e\xd5Y\xd4\xfa\x9c]6%f]L\xd9\xd2\xb9\xc7\x1d\xcdF\x9e\x7f,\x85P\t\xef\xf1_B\xac\xb1\xdcA\xe6C uu%YNA\xac\xc6\xe2\xc6yL\xa6y\xdeC\xb8\xf0\xc7\x81T\xbb\x0f\x1b\xea^\x1eU\x856Ons\x84~6\x9f\x83Mn<w{r\xd2\x14X\xe2\x0cI\xe0d\xfe\xa6\xaa\'\xf17H\x96\xd0j\xb8ef\xe5\x00;m\xef\xc1\xa8\xf2J\xb2\x84%NFv\xedS\xad\xa6N\x97\xa8\xe3\x0b\x16\x181\'\xaeG@;\xd5\x07V\x80Gp\xec9\xda\xdc\x0f\xce\xa4\xe1\xd7\xaf./\xad\x0c\x8c\xd2\x8f5z\xfbTv\xa9:\xcbu.\x1dH\r\xdb\xbdy\x17\x8ae\xb3\x96\xe2\xce[=e\x7f\x88\xae_\xbepF1\xda\xb9\x12\x07V\x1e\xc4\x1a\x8c\x96G\r\x85b\x07\xf2\x8e\x05uka-\xf4\xb8*6g\'<\x0f\xad%\x9c\x93\xc7^\x80\xf7\xa8\xab\xa9\xee\xa4`\xae\xc4*\xf4E\xe8+7\x1a\x16\xd8\x10\xbe\xe7\xbd*G\x11\x01\x81\x93\xda\xb5\x1bh\xb4\xbd>%\x13\xdeB\xa0t\x05\x87\xf6\x19\xa6w^ \xb7\x91\xc46*v\xff\x00\x14\xcc1\xff\x00\xf0\x83\xfd\xeb9\xb6\x82I\\69\xedV\x1bkVL\x96\xc9\xcf\xe4*\xce\xd64\x0c\xab\x1c\t\x80F\xb9\x0e\xec~3\xfe)\x93#\xbeO\x04\xf1V\xa1q\x14\x11\x93\x18\x1ed\x9f\x89\xb1\x93U\x9b\x99\xdai.\x0e2FGL\xfcS\xa9\x16EUm\xc4s\x82\x07o\xce\x90UXL\x1ca\xa5\x94\x03\xff\x00\xb7?\xe6\x9d\xeb\x1dG\xcd\x11[\xa2hT\xdc \xd9~\xb8\xf9\xa5E\x11\xceI\xcei(\xa1f\xdav\xd3\xb8T\xc50\xf2\xdc,\x83\x0c\x06y\x04w\xfa\xd2\xba\x84\xb0i\x90\xb3+\xa2\x9d\xa5\x99\xdb\x00*\xfb\x9a\xc6\xb5o\x1e\xd9C 6q\xbd\xdbo\xc0\x97w\x97\x19\xc7\xb1\xc1&\xaa\xed:}\xe5\xec\xac\xb1F\xc4\xa9\xdc\x8c`\x1f\xaf\x15kiaux\xc1m\xe12\x1e\xe7\x80>\xe6\xbe\xac\xb0\xd5\xed\xae\xa0\x8c\xbc\x88\xb3c\x0c\xa4\xe3\x91\xdc|W\x97\r\xe7\x02rp3\x8c\x1e+\x04\xf0\xaf\x88n|Gg$\xb3*$\xb6\xd3\xf9R*\xe7\x042\xeeV\xe7\x9c\xe3\x83\xf4\xad\x06\xde{\xd8J\xacs\xc8\xb9=3\xc7\xf5\xa9]F\xf2\xf2V\x167X\x0e\xa7K\x15\xfec\xd8\x91\xfb\xd2.-\x1e\xd6ib\x91p\xe8p\xc3\xf7\xab\x14\xe8J\x80q\x91\xc5|{\xf6\x89j\xb6\x1e-\xd6b\x8d3\xe6\xc8\'\\\x0e@\x91C\x1f\xcb9\xaf\xa9\xee<E}o \x8flS)\x18o21\x9f\xd4b\xbey\xfbd\xd3\xca\xc9\xa4\xebJ\xf97(\xd6\xf3\x03\xc6\x1e?R\xf4\xf7\r\x8f\xca\xa5\xf8f\xd9:wYH\xbf\x14$\x17\x11\xb4x\xd3\x8fP\xc3\x0e\xe7;\n\xd3\xf8\x1eU^\xb8\x91\xb6\xc2x\x99\x07\xc9\x1e\xa1\xfd+ $\x8c\xee\xeb\xdb=~\x94\x8c\xce\xbf\xed8 \x06S\xc61\xedLL\xaa0\xdb[q\x1d\x0f\xd3\x83\x9a@\xe5\xd8\x92z\xf55\xeaK\x167\'\x15\xee)f3SK#4l\xcc\xe3!\x86\xe3\xc0\x1f\x15\xaa}\x93\xba\x8f\x14\xf9N\x03\x16\xb5\xb8\xf2\xd8t\xdc\x17\xaf?\x19\xacl\x96+\x1b\xbbn\xec3\xcf\x1f\xf9\xd2\xaf\x1e\x0e\xd4\x8e\x9d\xe2m&\xe8\xc8\x91,WI\xe6K\x92\x00\x88\x9c>\xef\x8d\xa7\x9a\xa9\xeb6\xc6~\x99}\x12r\xf0\xb8\x18\xf7\xc6\xd4\xc7V\xe9\xa6\xe7\xa4u\x18c\x1e\xa7\xb7\x90\x0c{\xe9\xda\xbe\xa9etf$f\xbc\x8e6\x91\x82\xed#\x9e*u-\xe3\x98,\x91\xba\xba:\xeeWR\x08e<\x82\x08\xeci\xd46\xa3\xcc@\x07z\xf1\x11>\xa2\x11W.v\x03\xe6\xbevXJ~a\x8cs\x9a\x8c\xb6\x82X%WF!\x81\x1f9\x1e\xc7\xe2\xa4u\x88D\xfaN\xa0\xc8q\xbe\xd6P\x0fum\x86\xa4~\xecT\x1c\xae\x00\xeaqP\xba\xf5\xf2\xe9~\x1e\xd5\xe7r3\xe4\xb2\xc6\xa4\xfe)$\x1b@\xfe\xb4\xcb%\xc1\xba\xb7S\x11\x12\x19\x14(<\x9d\xf1R\xec\xed\xda\xe6\xf2\xce8\xd7S\xb4\xc8\x10\x0frv\xaf\x91^$@\xa7pnG\x00\x1fl\xf7\xa6\xad\t1\t1\xb8\xb6\xed\x9c\xf1\xc1\xe75#/\xa0F\x8c\x01;\x89\xdd\xf8\x94\xe7\x81\x8c{Sr"\x8c\xc8\xb1\xeee\xfcc#\xd2\x0f\xfb\x8f\\W\xb3\xa3\x9c\x0eI\xcf\xed_W\xc3o\x85\x1boL \xf3\x04[\xe5\x04\x06RS\x07=\xe9\xe2yF0\x8c9\\\xe4\x13\xc8=\xa9\x9c\x12\x17\xba\x9bd\x8d\x86\x89\xd53\x83\xdb\xa1\x15\xd5\xad\xca\xb4\x84\xe7\x04\x96\x0c1\xc1S\xfe)\xf7V:\x8e1\x80\x0e\xd4\xe4\xf6E\xb5m\xf3\xb5I\xa2\xaa\x86P<\xcc\xe0\x002\t\xc8\xff\x00\x14\xaa"$\xa3jr\xc3\nH\xcb\x03\xee1M\xe3\x9a\'I\x03\x95\x08\x0e\x11\xc2\xe0\x92?\xc5teT\\\x1c\x83\xc6\x0b\x1c(\xdd\xd3\x83\xde\xa2\x90\xc4\x91\xbeN\xd5\x00\xd9\x1c\x91\xa6\x9e\x0cCq\x04\x8b(")\x15\x95\x81>\x92\xa7\x8e\x7f.+\xea[\xf9\xa4s\x1a\xbe\xdd\xab\x12(\xdb\x9ct\xcey\xfa\xd7\xc9;\xc21\xcb\x86\x1e`F+\x83\x93\xd7\xb5}=\xe1\x8dr\xcb\xc4:e\xbd\xbbL\xa3Q\xb5\x85c\x9e\x13\xc1`\x83\x01\xd7=A\x1d}\xab%\xe2\xa8\xa5H\xad&\nY\x13Pr\x06\xe0\x1c`\x9fa^e\xff\x00R:5\xc3\xdbt\xfb\xb8\xa1,\xb0\xb3\x89X\x0c\xe9V\xc6\t\xf8\xda\xa1u[1!\x12*\xe5\x93\xf8\x8fq\xedT\xe1\x15\xc47h\xd0\xb3\xc7 9F\x07\x04c\xb8#\xda\xb5K\x9d:L\xb6\x01 \xf6\xa8\xd6\xd2\x81o\xf4\xff\x00\x0f?\x9dR\xdau\x15\x8d0X6\xd5\xe4j\xc4l\xc2\x9ci\xda\xac\xf3\xc0\x8b{\x1e\xe2\xa0\x0f1z\x90?\x98\x1e\xa6\xa7d\xb5\xd2nbd\x9akvW\\2\xb9\x18 \xf6 \xd4-\xb5\xbc\x912/\x96\xbbH9n\x84R\xd2\xe9\xacw\r\xc1\xfb\x82G\xbdG\x16KrL\x90M\xe5\xe0\x92B\xf6\xfdi\x89\x11s\x9d#<\xfbUcR\xfb)\xf0\xa5\xce\xf9\xe3\x9d\xec\xd4\xe4\x93\x0c\xcb\xb0w\xe8\xd9\xaa>\xa1\xf6Y\xa7<[\xb4\xcf\x12\xc5#\xe0\xe1n#\xc09\xff\x00r\x8e?J\xd1g\xd2\xdd\xca\xa8\\\x12s\xed\\\xc7f\xf6\xed\xc8\xe7?\x9dY\xdb\xf5\x1e\xadj\xa0\xff\x00\xaaL\xfaN\x00u\x04}\x0e\xac\xd5\xc5\xb7\x88:\xe5\xb1A\x15\xfc\x84/\xf2\xb9\x0e?\xff\x00j\xf9\xae\xfbM\xbc\xd2\xaf%\xb4\xd4 0\xc9\x11\x1b\xd0\x10C\x03\xd1\x94\xf4 \xf6"\xa2\x8a\xecVc\x19\x1bO,\x06@\xcfL\xf6\xad\xb3\xed\x1e\xde\'\xb3\xd2d0\xc9$\xf1\xbc\xab\x84\xfcF0\xbb\xba\xfb\x03\xcdab\xef\xcb`VL\x96@\xdb\x1d\x0b.\xecc\'\'\x93\xfd+\xd0:E\xdb\xf5\x0b8\xe7)\xa5\x8e\xcc\x07\x19\x07\x1b|\x1a\xf6\xef\x0e\xdd7X\xe9p]4a\\\xe5]G\x1a\x94\xe0\xe3\xeb^\x89Ff*\xce_\x0b\x93\xb4\x9c\x93\x82y\xed\x8a\xedK\t#\xdcK\x03\xf8\x87A\x81\xedL\xe2m\xa5\x8c\xdb\x94\x9eH\x07\x19?Ol\x8ei\xe3\xca\x05\xca"\xa9\xe0\x01\xb5\x86\n\x93\xd7>\xfc\xd5\xab.\t\x00gn~\xd5xl\x818\xd3[\x17\xd9\xd7\xda\nXI\x16\x8d\xaa\\1\xb4v\xdbmq!\xff\x00D\x93\xc2\xb1?\xc0}\xfb}+\xe8fQ\x95a\xdf\x90GB+\xe1\xb9\x90\xc12\x06U\xe4(^r\x00#\x1f\xd2\xb6\x1f\x02\xfd\xa1M\xa7\xcfo\xa3j2\xa4\xb6d\xacp\xcd\xbf&\x02x\x00\xb1\xea\x87\xfaV\x03\xc4\x9e\x1b\xf3\x8b_X\'\xa8\xa9ib\x1f\xcd\xee\xcb\xf3\xee;\xd7\x9ax\xb3\xc1\x86E\x92\xfe\xc2?V\x0bK\x10\xef\x8eY~}\xc5}+gv\x84}\xde\xe57\xc2\xc4dw\x1f#\xd8\xd3\xc9\xb4\xb5\x8c\xe08e#*\xc3\xf9OCP\xbb\x00!\x81\xeb\xedSz]\xdb\xc8\xd3C$\x84\xf06\x03\xd0\x00:VS\xa5\x1bK\xd7K;\xcf\xff\x00\xe1&\xf9S\xfe\xc3\xff\x00i\xed\xeck\xc7\xa6VPH\xe6\xa0\xee#\x11+\xf5\xeb\x80qY\x17\xda.\xb0\xba^\x94\xf1\xac\x85&\xbb&%#\xaa\xae=G\xfc~u\xb6\xdf\xe1cu#8\x19\x1fRs_+}\xaf\xc9*\xea\xbab\x11\xfb\xb5\xb6r\xbdpX\xbf?\xda\xa7x~\xc69z\xdc03\x02\x10\x96a\xf2\xa38\xfdj\xfb\xc1\x9d>>\xab\xe2n\x99o(\x05\x01iJ\x9e\xfeX,\x07\xea+6\x8d\xdc\xce\xb8\x00\xe7\xd4MH4\xa5\xd3\nX\x9c\x96 \x1e\x80\x7f\xc5@M"\x87\x0b\t\xf4\xf9k\xf8\x8f\xb8\xe7\xb9\xefH\x89\x19y3\x11\xc7c\xdc\x8e\xa6\xbd`\xdb\xeb\xd2x\xdba\x8a\xfaa\xec\xf0\xa0\xa9\x03\xe3\x14\xf6{\x83\xbc\x83\x9e\x07\x1f$\xd2\xdaF\xb1.\x8d\xaa\xe9\xf7\xf6l\xad%\xac\x8b/|\x12\x0f*\x7f.\rD\xb3\x89\n\x1f8\xeeV\xce\xf0\t\xe3\xdf\xe9]\xdbZ5\xc3\x98\xe3\x9e-\xc4w;s\xdf\x00\x9e*B\xdbG2\x18\x9dr\x1dJ\x95<\x10v\xa8\xb2X\xc5:I\x1c\xb1\x82\xac\x85Xv \x8c\x1c\xd7\xe8\x1f\x86\xf5\xed?\xc5:=\xb5\xf5\x9c\x80\x07@\n\xf7F\x1dQ\x87\xb8\xaa\xf6\xbd\xa4\xa3\xf9\x9c\x00\x1b<\x8e\x95\xf2\x7f\x85\xbcU\xac\xf8?Scgtv\xe5CB\xcd\x98\x9f\x1f\xce\x07O\xa8\xaf\xa9|;\xe3\x9d\x0b\xc6\xd6\xdfv\x89\xcd\xbd\xf8\\\x9bI\x08\xc9#\xaf\x96\xdf\xc4?\xad`\xfa\xff\x00K\xb9\xb6\x80\x03\x1b\xb1\x80\xe69\x80\xdc\xafeq\xd8\xf6\xcfz\xf0\x1f\x14x\x1a\xff\x00\xa2K,\xf0F\xd3\xd8\x92Hu\x191\x83\xd9\xfe\x9e\xf4\xdfM\xb5k{\x8by\xd5\x02\x94`\xf8\xc7n\xf5\x92}\xba\x82\xda\xc6\x97\t\x94\x08\x85\x91h\xc6OVr\t\xc7\xe4+\xe9\x07\xd3\x1a\x05,\x0602s\xd0}k\xe4\xef\xb5\xcdR\x1dW\xc41$.\xb2\xc1m\x14v\xa2E9\xdc\xcb\x96b=\xc6[\x19\xf8\xa8\x1e\x1b\xb6\xb9\x1dn\x06\x96\x12\x1a4v$\x8f\xca\x08\xc6>\xf9\xa7?\xe9\xd5\x83\xcd\xd7\xd1\xd62\xd1\xc3\x14\x8c\xcd\x8d\x86F\x07\xdfz\xc6\xdd0\x0f\x982\xd9#\xaeH\xc5p\xac\xea\xa4*\x826\x9d\xc1\x86G\xd4w\xa7\x12[1\x92R\x1b\xd2\x0ew\x1c\n\xe28\x11\x89\xdd#t\xea\x14\x92O\xd2\xbdq#\xd4\xa3#\xe6\xbd\xe4\xda.\x0eSjl$\x01Ha\xb8\x85\x01OL\x7f\xcdH$\xa0\x1d\xb8!\x80!\x80\xf7\xf9\xfc\xe8\x16\xf0a\x8e\xc9\x18/\x7f\xc2\x0f\xd7\xae+\xb8\xfc\xb2e\xc8 \xb2\xe1B\xfb\xe7\x8e\xb5\xc9 b\xa4\x81\xb0;\xefM=\x88 \xe1w\xa7\x8a\xeb\xb6<\xe1q\x9f\xa6Ew\x16\xa0\xf6s\xc1u\x04\x84M\x14\x89,l\xbdA^G\x1fZHO\x95e\xf2\xb2v\xe0drX\xf5&\xb8HZ7\xdf\xb9H\x1d=\xc9#\xda\xa0\x18\x93\xd4%+\xc7\xe5\xe7#\xda\x98\xff\x00NVVYH\xc1\x04\x15\xe7#\xda\xbe\xbe\xd2\xb5x\xb5\xad"\xc6\xfc\x01\xb6\xe2\x05r\xbdv\xb7u\xfc\x8f\x14\xe2;ef\xf4\x01\xcfc\xdb\x9e\xd5\x89}\x98\xf8\x86h\xe7\xb8\xd2._r\\\xb9\x92\x0fd\x90\x0c\xb2\xfd\x18\x0e>k\xe8+Kwv\n\x83=\x0f\xcdx\xefW\xb2~\x93}<+\xf9Kj\x8b\xbeT\xf1\xfe+\xe7/\x13\xf4iz/V\x9e\xd5\x94\x98\xc9\xd7\t\xf7F\xe3\xf4\xe2\x9di\xca\xd0J\xb9\x1d\x0er;T\xe6b\x9fX\x92X\x1c\x9c[3\xb0#\xf8\xc0\xc1\xa6R:\xdb\xc0Y\x97\x91\xd3\xdb&\x9bhw\xa5o\xb0p\x1eh\xde,\x9e\x99a\xfej\x05\x94\xdf\xc41\xb8\xfe\x13\xca\x8c\xcc\x01\xd4\n\xe4z\x7fZ\xa8D!~q\xb5|\xcf\xf6\xb5x\xf3x\xbaHyo&\xd2\x18\xd7\x9c\x05,\x0bg>\xf95C\xb4\x9a\xe2(C\xa4A\\\x12\xb2\xb09g<\xe3\x81\xce1\xc1\xad\x0f\xed_J\x96/\x18\xdd\xb3\x16-s\x14RD:\x0e\x17i\x1f\x91Z\xcd\xed\x18\xa9\x8fw\xa4\xee\xdc\x1c\x8cd}Gj\xf5\x9e\x8ec\x1d\x0f\xa6\xacg\xd4\xb6\xf1\xea\x18\xc1\xd5\x8d\xff\x00z\xfa\xb3\xc2V\xd07\x86z)\x8c\x82?\t\x198\xf7#\x7f\xde\xac\x08\xaeQe\xda\x039 \xa9\xc6T\xfb\x801RQ\xbc\xd0\xcceG!\xe2\xc2\xabFr:\xe4\xff\x00J-`\xb3\x032]\x99$$\x1eFT\xafN\xbd\xcf4\xbd\xd7\xdd\x13S\xb4H\x06c\xf2X\xb2\x9cv\xf7\xf9\xae\xcdn\xfeQ%\x93N3\x8d@\xed\xf4\xfd\xaa\xe9\xa0\x86Ex\xda \xca\xc0\xe42\xe5H\xf69\xab\xde\x8b\xa8\xdbk\x0e\x90LR\xde\xf0\x8fH\xe8%\xff\x00\xbf\xc5[Z\xcb\xf6E\xad\xf5\xed\xd4\xc8\x90Ek7\x98\x0fB\xa620s\xdc\xf6\x15\x86\xcbr\xb2\xdc\xbe\xd1\x80\xcaF@\xe4\x01\xd3\x06\x9b\xeb:\xee\xa5\xabA\r\xbc\xf7\xf3\\E\x15\xb3\x14Wl\xe3\x8e\xa7\xfeO5\x9a\x97\xa1Iqq\x18\x8aq\x1c\x0c\x7f\x88\xa4d\x81\xff\x00o\xd7\xe6\xbc\xce\xff\x00\xfe\x98X\\uh.\xade\xfc<>`y"\xdfl\x1c\xfa?\xe7\x8a\xa7\xe9p\xd9\xcf\x7fg\xf7\xd9\xda8I\xcb\xberF\xde\xdf\x02\xa1\x9fo\x99)\x04\x1fQ \xfb\xf3R\t\x03\x99<\xb8\xd8\xb3`\x1e\x9f\x9f\x7fjw\x0e\x83\xa8M\xb1\x96\x02\x15\xd42\xee\xe0\x10k|n"\x8d\x00wU\xdf9\'\x19\x07\x8a\xf5\t#T \x96\x03\xb6\t\x15\x0e\xaaNx\xe4\xfbqS\x10\xda\x84\x008\xf5ua\x91\x82\x99\xe0\x8c\x1f\x83\xf4\xa9\xfb\x7f\x08K"\xa9\x9a\xe4+\x1f\xc4\xa83\x8f\xce\xacv>\x11\xd3a\x1ed\xac\xeev\xf3\xb8\xfe\xbc\n\xab\xb9\xea\xd6\x880%\'\x1d\x94\x13\xfe+\x9f\x88\x86<`\x93\x8faT;6d\x942\xc8v\xa3z\x08\xe4\x82:q\xed__xe\xc5\xed\xad\x94\xe8\x03\t\xe1Gc\x8e\xe4d\xd6\x14\xb0YD\xe2\x18-\xe3\x8a\x04\xff\x00Q\xc0\x03?\x15\xbc\xf8&K[\xbd"\xdf\xee\xf2\xa0(\x19%\nyS\x9c\x81\xf01X\xff\x00\x11H\xb7\xebi\x88\xca\x01&\tb\x00\xc1\xf7=\xb8\xaf&\xff\x00\xab\x10\xa5\xe7O\xe9\xd7+\x11\x0f\x04\xe5r\x06p\xb2.\xf9\xfb\x81W\x89\xb5d\xb1S\x05\xa4k$\xe7\x01\x9c\x8c\xaa|c\xb9\xae!\x95\xe0\x85\x8c\x98vc\x97\'\x82>\x95\xe4\x90\xd9\xdb\xdb1R\x06\x0eK\x1e\x00\xc7rOO\xadd\x9e(\xfbE\xb4\xb1\x8e{=)^\xee\xe8\xab/\x9e\x87\x10\xc4\xc4`\x10\xc7\xf1\x11\xd7\x8e>j\x03M\xd4\xe5\xbc\xb5\x82\xd6X\xe7\x11C\x88\xcc81C\xab\x9c\x9e\t\xf7&\xbc\x7f\xa7t\xab\xae\xa5 \x8a\xde\xdd\x98\x96\xf51\x1b\x01\xee\xc7\xb0\xab\xbe\xb9\xf6\x87\xe1\xdd\x01\xcc7\x17--\xc8\xfcp@\x03\xba\xfc? /\xd0\x9c\xd7\xce_h~8\xb6\xf1>\xa1\x14\xd1G$\x16\xb6\xf1\x18\xe1G \xb9,r\xccq\xd0\x9e\x07\xd0U]\xe2\xd4\xef\x18\x14\xb0\x95\xf77\xa9\x87\\\xf7?Zm\xa8h7\xc2\x10\xcbd\xe5\xdc\x1c\x13\xc0\\}{\xd6\xee\xd2\xc6L\xa1\x99\xdaF\x18\xcbl\x06}\xeb\xd7z?\x86\xbaOB\x96;\x85\x95\xa5\xb9T+\xe61\xd8j\x1b\xe9\x1d\xaa\x13\xcc\xb4\x94\x134\t\x81\xf8F;|\xd2\x96z]\x95\xf5\xfd\x84I\x00\x0f-\xc2\x04\x00\xe3<\xd4o\xec\xcb\xc8\x98\xf9\x8b&\xe0=\xea\xff\x00\xf6}\xa2I\x7f\xe2\xad-\x9c3\xb4\x04\xc9\xb7\xaf\xe1S\x83\xfdj}\xdb\xb5\x9d\xad\xcc\xc93a"f\xc2\x9c\xee\x06\xc3\x1fZ\x97\xd5oD6wsk\xfc\x91;\x0f\xa8\x1bW\xd0Z}\x90\x0f\xe5\xaf$\xf0=\xab[\xd2\xb4\xd8-\xacv\x9fQ\xc6MUl4\xd5GR\xea\xa0+\r\xfd\x8e\xdf\x8a\xb7]\xea\xfa}\x9c/\x1a\\\xc6\xcd\x8c\x04NN~\x82\xb1\xbe\x0f6\x90\xc9{\xd4\xaf\x1e4\x11\xa6\x98\xf5\x90\x0eNs\x80~\x95\xf3\xdf\x94\xd9$\x8c\x93\xb9\xa8\x1dL\xc4\xceQG\xa4\x0c\x0fni\x9a#\x17\x04\x02W\x1c\xd3f\xb8k\x8d\xe4\xaf\x07\xdf\xda\xac\x03\xc2~,\xb8\x86\tlZ\xce\x11"\x86c>X\xe0\xf4\x00\x0e\x98\xa5\xf4\xc8\xba\x87\x88\xef\xeed\xb3\x87*\x08fo\xca\x14\x0c\xe0oO\xc1m\xad\xd6=h\xb9\xe4\xb1\xc0\x1f\xa5u\x02\x80\xa0\x82Nz}*w\xc36\xcd&\xb7\x14\x85p"\x8d\xd8\xfec\x14\xd6\xdb\xc1\xfe)\x8aXD\xd7\x96RBB\x890\xa5X\x10y#\x1e\xfd\xabB\xd2\xb4h\xf4\xb9.\x1cJd2m\x00\x91\x82\x14v\xe3\xe6\xbd?\xa5tK\xc8%\x85\xaeQTD\xc1\x86\x97\r\x92;\xfe\xb4\xbf\xc2\xb4s(\xd6\xae\x01\xc9e\xce?p*j\xab\xf6Z\x14Vz\xb5\xed\xf0#\x13cj\xfb\x1e\xf5`\xa2\xb5\xf8\x07\x19\x00\xe0\xe4g\xb1\xe35)\x91X\xa9#\xf2\x9c\x8a\xab\xf8\x9bC\xb0\xd4t\xfb\xd9d\xb7\xcc\xc9\x03\x94q\xd4\x108\xac\x0bDk\xbd<\x1b}\x80\xdb\x8e\xdd\xf3\xdc\xd7\xd4\x8c\xaa\xcaU\x86A\x18#\xe2\xbe{\xf1=\xd4\x1a6\xb5y\xa7\xc3\x0e\x14\x80\xc8\xd9\xe0\x06\xac\xf7^Q\n\xdb\xdf+\x04h\x98\xa3\x1c~`\xf8\xc0?\xa5C\xba\x88\x92\xbaG<\xe3\xdcw\xa9\xcd&\x1d\x12\xf2U\x8ay%\x12H\xc0 A\xefW\x94\xf0V\x94\x8d\xb8I6\x7f\xf7b\x8f\x0b\xf8wJ\xd3\xedm\xef!S4\xd3F\x1c\xcc\xe7\'\x9foj\xb8T\xfb~\x9dl#C5\x95\xb1\x979$ ?\xb9\xa5A\x07\xa32\x00s\xb8\xa4-\xed\xe2\xb5\x868b\\*\x0c\n^\x8a*\xca\xa5\x80\x00\x00\r\x85\x14QE\x15\xda(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a\xa4x\xda}\xb6\xb6\x90`\x11#\x96?\xfd\xb5\x8cjwk\x181\xa9\x03\xb0\xf7&\xb6\xef\x18\xe9\x97W\xf6P5\xa4FI\xd2M\xa1G\xb3q\x9f\xca\xaa\xb0\xfd\x99\xfe\xe4K5\xfen\x8f\'\x8fB\x8faY\x1f\x10\xf4\xae\xa3\xd4\xe6\tn\xaa\x10D=lq\xf6\x15]*H\xd3>\x10\x9e?LVW\xf7\x01y\x06\xd7\x1c\xe3\x86\xc7CU\x85\xd35!1\x8f\xee\xb2`\xb6\x03\x11\x85\xfdO\x15\xac_\xe8\xf3\xe9\x17on\xee7.\x08a\xd1\x81\xaa\xde\xa3\'\x9d#\xc4\xc4\xed\x07%\x7f\x875\xe7=C\xa4~\x02)\x12\xe88t *\x82\x06O\xd7}\xa9\xad\xd8\xe3\x8cs]Agk\xa3i\x8fq4\xe9-\xe3\x82\x90\xa2\x9c\xaa\x13\xd5\xbeqUD\x0b4\xdeZ\x90[\x04\x96<\xd2\x1a\xad\xd7\x94\x84)\xc6:\n\xebDG6\x86i82\xb6W?\xca8\x15\x9b\xea\xb7Kp#h\xed\xd6\x08\xa1A\x12 %\x89=\xd8\x93\xc94\xfcxE8\xdf;\xd7|\x89\x91\x18\xf3\x8c\x7fZ\x9e}!\r\xbcw$\x02\x1f\xaf\xc7\xd6\xab\xd3\xb1\x86\xedN3\xe8<\xd6\xa9c\x0c\x13iV\xa1\xd3ph\x86~sQ\xad"\x0f&\xa6\xc6\x16"\xd8>\xf9\xc59\xa3\\c\xdf5R\xb4\xd2\x91\x8a\x94B;\x8a\x9a6h\xb1\xf2\xbc\xd4\x96\xe1m\x85\x8e\x10Tu\x1f\x15\xc4\xd7\x08\xea0\xa4\x1e\xe2\xae\xd7\xa8t\x98-f\xc4\x80J\x17p\xca@\xc9\xdbozl[JY@\\\xe7\x8cU~u\x03v\xe5\x1cs\xc7LV1\xe3\xaf\x10^=\x94\xdf\xb3\xee\x1a6\x8a\xe0G1Q\x86\xe3\xa0\x1e\xc3=}\xebj\xd4\xa6\x8f\x80\xab\xb1@\xe9\x9c\xf3Y7\x88\xbc!\x0c\xe2\xe2\xe2\xdd\xa5W\xbc\xc9\x94g\x80\xdd\x88\x15]\xd0\xe7\xe9_\xea\x92I~\xed"\x7f\xf6\x9dG\xa7Vy \x8d\xc5j\xfa7N\x8d]^\xe5t\x9c\xfa\x14\x8c\x8f\xbde\xde#\xf1N\xbd\xe2\x10\xb2\xdd~\xea\x00\x15|\xa8\xf3\xb0\xb0\x18,\xde\xe4\x9e~*\xb2\xa4\x0bK|\xf7*\x07\xd7<\xd5\xaf\xf6\x17\x88\xedm\xe5\x8aHRT~\x0e;|\xd5m\xad&\x89`YP\xa0L\xaf<z\xb3\xd2\xbd\t\x0fKEH\xec$_)H8\x18\xce~\xd5\xe8]2\xce\x08\xd0$*\xa1T\xe4\x01Z\x8f\xd9]\xe4Qk\xb7\xb6\x12\xb7\xaa\xfd3\x08=\xe4\x87-\x8f\xcdI\xaf\xa2\xbe\xe8\xfb\xf8\\\x1cc\x02\xbe\x1e\x92i\xe0\x9e\xceh\xa5xd\x8c\x90\x1dIR\x18t \x8eA\xab\x1c\x9e/\xf1\\zL\x0b\xff\x00\xab\xaf]\xa6g\x8a[o0\xeeT^\x8d\xbb\xaf5K{\xe1\xbf\xc6\xdd\xfe)\x1du>\x90\xd9\'\x00\xa8\xc6F\x01\xedU\x9d_\xc2S\xf5\x0b\xa5\xb8\x86\xe68\xfc\xc0\xa1\xc3\x02w\x1bdc\xe0W\xd3\xfa\xe5\xce\x95\xa4D\xd7\x1a\x95\xec\x16\xb1\xa8\xdcL\xac\x14\x9c{\x0e\xa7\xe8+\xe5\xef\xb4o\x1c\xc3\xe2\x99\xedm4\xf8\xd9t\xfbR\xcd\x1b:\xe1\xa5\x91\xb8.}\x87\x18\x02\xb3\xbb\x8b\xab\xab\xc9\xcbL\xf2H\xe6<e\xd8\xb1\xfa\xe4\xd3M\x8c\x87\x1f\xe6\xad:g\x86\xa1\xb2\xb9\x17SM\xe6\xcc7A\x80\xaa\xbbc o\x93W\xbe\x1f\xf0u\xa7H\xb8K\x99&3\xce\xa0\xe88\xd2\xab\x9d\xb2\x06\xfb\xd7$\x10NA\x04\x7f\x8a\xe9Fy \xfbWd\x13\x8c\x9c\xd7\x98\xce>?J\xd1\xe6\xb7\xca\xa7c\xcf\xc5,\xacs\x9e\x0f\xbei\xdc\x13\x15!KzGl\x7fcLWvF:\xf7\xf9\xa7e\xb2\xcaY\x14`\x00@\x1by\xcd0\xe0\x1d\xb1Sb\xdf\x03\x1b\x1a\xfa\x03\xec\xcb\xc7\xdfs\x96\x1d\x1fT\x94%\xa4\xff\x00\xfe\x96W8\x119\xfe\x13\xfe\xc6\xfe\x86\xbe\x93ON8\xe5Nz\x7fJ\xf8\x02\xca\xe1c\x94;\xa1h\xd0\x12\x88}@\x82x\x1c\xd6\xff\x00\xe0O\xb4\x86\xd3b\x87O\xd6Y\xe5\xb4\x18Hg\xfcR\xc3\xc7\xe1u\xeaW\xdb\xb8\xaf4\xf1\x1f\x87Yn\xbf\x1dg\x16\xe7yb\x03\x9f\xfb\x97\xe7\xdcw\xaf9\xf1\x97\x83Z\xe1\x9f\xa8t\xd8r\xed\xbc\xd0/\xf3\x1f\xf7/\xcf\xb8\xef_F\xceL\xa1\x02\xafS\x8f\xa9\xaf\x98\xbe\xd0|P\xfa\xd6\xa9-\x94\x12\xb0\xb3\xb2\x95\x91c\xc7\r"zY\xcf\xd7\xb7\xb0\xaf\xa0\xef<K\xa1Z\xe8\xd3jqj\x16\xd3D\x91\x12\x9e\\\x80\x97s\xf8T\x0e\xb9\'\xb5|z\xf29i\x19\xa2"R\xdb\xd9\xfb`\x9er>\xb5\xcb\x0bqw\xd5f\xbd\x91U\x8cp\xc6\x13la\xdb\xf3s\xdc\x7fz\x87\xff\x00L\xfa(\xfcU\xf5\xe5\xcd\xb3\x06\xb7"8\xb5\x8ca\x8euc=\xc0\xfe\xb5\xcb\xc7\x94\x85\x8bI\x18\x0cJ\xee\xf6\x1f\xe2\x93\x18U\x93\xd2\x1b<\x83\xce\x0f\xc7\x1e\xf5\xd9\x18\xcb;3\x06\\\xabu;G\xc7\xbd4\x91vD\xe6Y0\xae\x99@8,s\xfe:\xd6\x9dFp3\xde\xbd\xca \x08\xe7\xbd0\x95\x102\x96%]\xdf%\x80\x01B\xfc|\xd2M\xb1\xb2\xc7\xb0\x03\x03\x95\xce1\xf5\xe6\xbb\x99K\x03\xea%\x00\xfcD{q\xc7\xb6i\x12\xa1\xc9\x01\xd4\xb3m\x00m\xc6\x7f\xe3\x15=x\x1b\x9a\x9e\x14\x107\xa7)2\xdc>\x08\xd8N8\x1f\x84\x1c\xe0\x92{W\xa5\x94\xed\x8bb\xae$\x192\x1e>?\xf9\xa4\x03G\x14\x87*\x0b\xa8\xc7P\x17v{\xfcR\xa3c@\xea\xd2\xa0n@\xc6Ib=\xf3\xd8\xfb\xd2J\x81\x8c\x03\x8d\xb1\xfei\x93\x1a\xf6\x07\x1d\xa9g(\xce\xf3\xa1(\xc8\xe0zy\xce;\xff\x00\xc5J\xe9\xf7\xd7\x96Wk=\xb5\xcc\x82\xe5\x1b|rF\xdbB\x13\xdf\x9e\xf5\x13\x1d\xb9\x94\xa4k4{\x0ba[\x07\x93\xc1\xc7jp\x19\xe2\xdbu\xb8\xb1W*{\xfa\x80\xc7\xc7\x18\xa6$Eu(@l\x824\x91\xdb\xb05\x12xcude\x0c\x18\x15*\xc39\x07\xb1\xaf\xab|\x13\xe2\xeb_\x14A\x1d\xad\xd8H\xb5%ORcj\xcd\x81\x9d\xd1\xfc\xfb\x81\xf9U\xc6\xe9-\xec\xce\xd9\xe7\x8a\r\xe0.\x1d\xd53\xf1\xea"\xbe+\x8e\xf2H\x82O\r\xc4\x9b\x93\x94pJ\x18\xfdX\x1bH9\x06\xbc\xbc\x9a\xe6\xe4\xf9\xb3\\\t\x946Iv,\xc7\x07\x04\x02\x7f\xa5bg\xf0t2\\3\xc1t\xd6\xea\xcc} g\x19\xec\x06\xd5\xe57\xff\x00\xf4\xca\xd6\xe6\xf9\xe5\xb7\xbe\xfc=\xbb\x92|\x9f/QV\xf6S\x91\xb5}mi\xa9\xe8W\xf7r\xdaY\xea\xd6\x93\xdcFN\xe8\x92@[\xf2\x1d\xff\x00*\x9bXWk!PA\xaf\x85\xe4\x94G4\x97\x10I$2\xa4\xf9\x8fk\x9c\xaeNA${c\x1cV\x9d\xa2}\xad\xeb\xba4B+\xa2\xba\x9cQ\x85\x19\x9d\xb6\xca~U\xc7$}sM\\xF\xfa\xd1\x92k\x0b\x9f8\xe3\r\x1c\x98V9\x1b\xe0\xf0A\xf9\xaa~\xad\xff\x00L/!\x8c7N\xb9\x17\x1b\x0c\xc7 \x08\xd9\xf8#j\xfaT\xe9\xcaI;y8\xef\xd7\xf5\xa8\xadAt\xad\x12\xd6[\xedJ\xf1"\x819,\xc7\x03>\xc0u\'\xd8\n\xc7\xb5O\xb6\xfb\xa9at\xd34\x84\xb6c\x1eD\xb3\xb7\x9aK{*\x80\xa3\xf35\x90j:\xce\xb1\xe2)\xa5\xba\xd4u\x17\xbae\x03h\x95\xf6*\xe4\xf4U\x04\x00>\x95:\xcb\xa2_\\$\x7f\x8b\xb5\x8a\xd5\x17\x92Hw$\xfb\x01\xe9\xfd\x7fJ\x81\xd2?\xe9\x9fU\xb9\x90I\xd4e\x16\x90\x825(!\xa4a\xec1\x90?Z\x9c\xf1\xdf\x8dW\xc4\xf7\xb1\x8bL\xdb\xd9Z\x83\xe4/\xff\x00Q\xcb\x1eY\xb1\xd0\x9e\xc3\xb0\xac\xe6RF7\x03\x9e\x87\xa7\x00\xf3\xc6{\xd3\xe9\xe0\x11\xe66(\xac\x0e\xe5#\x9c\xe7\xb7\x19\xaf6D\xf1\xa8\x111\x93p%\xb2s\x8fo\xd6\xb7\x16p[\xd9\xdb\xc5\x14(Dk\xc7\xdf|\x93^\xd1a\xd2\xadz}\xa46\xd6\xb1h\x8a5\xc0\xf7\xfa\x93\xdc\x9e\xf4\xdeE\x89#\xdc\x14\x96`0\xd9\xe8G^\x98\xa7\n\xd0\xf9,\xcc\x87\x922;3\x1e2\t9\xfa\xd2\xb7\x08#\x12\x08\x89\xdaN\xc2\x8d\x83\xea=\xd7\xe0{\xd2\x028\x91`Vd\x05]\xb7d\x1c\x90;\x1faOj\x0c\xa3s\xcf\xde\x9f\xf2\x97\x03\x19;\xd7\x86?0\x15.\xac\xc7yR9\x04\x0e\xd9\x1d\x0f\x14\x80\x8e\xe1\x08\x8c\xab |\x1c\x1f\xe2\xff\x00\x9ar\x01\xd9\xc3*\xe0\x90\xcb\xd0\x90\xddy?\xa5\'t\xdc\xa8Tl*\x909\xc8\xe0\xf5\x1e\xf4\xa5c\x9d;`\xfe\xd4\x14\x19\xc1\xc6\x0f;W\xd2\xbff\x1e9:\xb4k\xa2\xdf\xc8\r\xc41\xe2\xdeV\xe1\xa5D\x1d\x1b\xfd\xc0~\xb5\xb0D\xe6\x0b\x95a\xef\xd2\xbe\x14\xd3/\xee,\xaf\xad.m\xe71\xcd\x1c\x82M\xe4\xf7\x07\xbf\xc5}\xb3\xa1\xeaV\xfa\xe6\x95\xa7\xeaP\x90Vh\xc3\x11\xec\xc3\x86\x1fPk\xc9\xfc[\xd2\x17\xa6^Gyn\xba"\x9c\xee\x07\x0b \xdfo\xaf5\xe0_\xf5\x0b\xc3Q\xf4\xab\xc8\xae\xedS\x16\xf7$\xe5@\xd9$\xe4\x8f\xbf"\xad\x1a\x95\xb9Lp}K\x9ey\xc0\xaf\x9f~\xd8t\x9f?K\xd3\xef\xd1[\x16\xf2\xb4r\x11\x8e\x16A\x90O\xc6Em\x1a~\xb3\xe6Mw\xa4^1\xfb\xc5\xbc\xcd\xf7w\xeb\xbe2s\xb4\x9fp:|T_\x8ate\xd64\x8dB\xc4\x8f\xf5\xe2!\t\xe8\x1cr\xa4\xe3\xe4T$\xb8\x8f\xa6u\xfb[\xa8\xc8X]\x95\xf09Ua\x86\x07\xe9\xbda\xbc9\xd4\x07I\xeb\x9d.\xf8\xe4,3\x81\'\xff\x00\x83z[\xf65\xf0\xf0\x11*\x8d\xe9\xbb\n\xc0\x15`9#\x8c\xf0zw\xa4\xb7*\x12\xc0+\x12A\x1cd\x8f~\x0f\x14\xe6{ya\x96U\xc0,\xae\xc0\xe0`\xa9S\x8e\x9d\xa9\xa3\x8d\xaex\x07\xa6pz\xd7\xb4&\x1b|\xe7#\xde\xbe\xb9\xca\xb0\x04\x1c\x86\x19\x1d\xc6)#\xc1![\xa8\xc1\xf9\xa7\xd6\x88\x92K\r\xbc\xa5"V`\x0c\xac\x0f\xa47\xbe:\x8aAb\xc4j\xf8\xc8bx\xc6z\nwd\xb0\xb3(\x92\x07u\x07\'kc\x8fc\x91O+\x80y\x18\x1c\xe7\x8aoFA?\x1d\xbf\xe6\xb4X|\x03r\xb0\xef\x86\xee)\xa4$:\x94\x07\x0c\x87\xba\xfb\x8f\x8aV?\x01\xf8\x8e\xc9>\xf1\x02\x80\xd1\xe1\xd3\xc9r\x1b\x83\xc1\x07\xa8\xa8\xbd\x13^\xd44LE\x10\xf3aI8B\xdc(n\xd9^\xd5\xa1Yx\xdaTso#K#;y\xa7q\x0b\x82?\x12\x03\xfd\xaa\xc8\x1e\x8bt\x06\xb2\xc8\xc4`\x80r8\xf9\xe6\xa8\xae\x97\xab\xc7\xa8 \x82d?\xee\x18\xc8\xf6\xc0\xaa\xc5\xe4~3\xd4`0\xcd\xa8\xdf\xcb\x81\xea\x82I\x9bq\xf8\xda\xc4f\xaa3\xe8\x1a\xcc\xc1\x04\xb6\x17$\x8eH\xd8r?/\xca\xb7V\xf1\x96\x89z\xa0\xcd\x00M\xb9!]\t\xce?\x8409\x06\x92\xb7\xf1v\x97\x1aH\x93\x86Q\xbf!\xbdY\xda{\x0c\xf7\xfa\xd2b\xe9\xfd&\x13\xa2\x1b\xd5P\xdb\xfap2~\x95\x06\x1b\x8b\xcbh\x88\x8f\xa3,X;\xa2\x00\x07\xdb\x1c\xd7\xcf\x8f\xa0\xde\xb3\x82-\xa5U\xcf!\xd0\xee\x03\xdf\x03\xad7\xb7\xd1\xf5i\x89\x02\xd2`\x91\xf0}$d\x13\xd3\xb7Z\xfaRO\x10\xf8s\x877\xc8U\xc0\nrx\xed\x921\x91\x8a\x86\x9bQ\xd04\x8b\x99\xae\xa3\xba\x13\t[\x98U\xf7\x06\\cw\xb6A\xe6\xa7\xb5\x8d\xaaF\x1b\xfdIXc\x07q\x91N\xc7\xd5n\xa4,\xad\xd3dV\xc7\xa7 \xe0\x9c\xf1\x9a\xc3-\xf4]Q\xa5\x9e(m\xdeM\xc8T\xa6\xd6\xef\xff\x00\x15\xe4\xbe\x1d\xd4\xa3}\x92\xdb\x05t`J\x92\x01\xdaG\x1c\xf4\xad\x8a_\x19\xd8B\xb2\x9b{>@%I\xc0$\xf6\xcej\xab\xa8\xebr]H$[x\xa33F3\x86\xdc@\xc7L\xf6\xaa\x9b\xcf\xf4\xe8c\xd4\x97\xc5\xe4-\xc0\xf6\xc5O\x82k\xa9\\\xeb\xb4\x11\xa9\x1c\x96\xc9\xcf\xda\xa9Q\xd8\xbc;:\x82\x01<s\x8c\xd2\xdftU]\xec\x03\x003\x8c\x81N\xfdk+\x003\x91\xdf\x8cW[K\x82\x1czv\xfb\xe3\xfbVq\xa6brN\xc7\xf5\xa9"\x16-\xbf\x14\xbd\xa8\x8bH\xb9\xb2\xbf\xb6p\xed\x1c\x90\xceG\xb6\x1b\xd5\xfa\n\xfa\xf3H\xf2\xe7\x8c\xcc\xb2\x00\xa60\xe8FNU\x80 \x0f\xd6\xbeD\xfb\xbb\xca\xc5x\xe3\xa8\xc7\x18\xfa\xd7\xd2?gZ\xdd\x95\xe6\x91\x06\x99%\xca\xa5\xdd\xb8\xd8\x11\xb0\xa6D^\x9bNy\xc5e\xfcMo\x1d\xe9\xb4\x9f\xcb\xd9\x0b,\x80\x13\xf9H\xc8\xdf\xb0\x04W\x99\x7f\xd4\xce\x8d%\xcd\xa5\x9d\xfc1\x97krV]#\'C`\x83\xf4\x18\xabv\xa6\xac\xe9\xb5\x98\x90\xaaJ\xe0\x7fz\xa7y\xa5%L\x120\xd9\x04U\xf2\xf1%x\xc8PP\xe0\x86\xc6y\x07\xb1\xfd*\xbf\xfb/%]\x89\xc8\xcfj\xc9]\xb5\x9aM\x88\t(c\x04go\x8d\xb3\xb9\xc5x\xba\xc6Yw\x1b\xe6\xa9\xdfi\xfax\xd7t\x1b}a\x10\x0b\xcd;\xd30\x1f\xc6\x8eq\xb8~u\xf3\xf4vF2\xacAT<\x1c\xf3\x80:\x8cW\xd6\xf7\xb6+.\x99\xa8A \xfd\xd4\xb6\xcf\x1b\x1f`\xc3\x00\x9f\xa1\xaf\x9f?ei\xd11W\xbb\x96R\xa4\x82#\x8c\xed\xf9\xe5\x88\xef\xf1Z\x8f\x0e\xf5)\xa5\xb5\xb9\x8eC\xf9$\xc8m\xb7\x0c3\xfdrk\xdc\xff\x00\xe9\xa7Y\x11\xf4k\x8b+\x89\x7f\xfeZo\xe1\xe4\x13\xe8}\xf1\xf69\xaa\xd2+z\x1d\xd0\xf0F\xdcq\x8c\xfc\x0f\x8at\xb0K#\xdb\xc9\x9c\x95B\xa7\x00d\x0c\xf7=\xea\xe2\x89b\x14,z[\xc8G\xf1K)\x1f\xd1\x00\xa2;+\x8c\x9d\x96\xf1 \'\xa6\xdd\xdf\xff\x00Vj\xce[\xe0\xab\xf9\xd7~Fx\xad\xf3u\x9bP\x0e\x11\xf28\xd8`\xfe\xf5S\x167\x0c\x8c\x0c\x0b\xea`U\x89\xdd\x8fs\xf54\x90\xd1R\'\x0c\xc3\x7f\xa7k\x0e\x07\x03\x9cc\xda\xaf\xb1\xe9Wm\xd6G\xc7\xb0\xe0\x7fJy\x16\x80O%sP\x8fVX\xf3\xfcU\x00\xf6\x15\x06^\xb4NBG\x8c\xf2I\xac\xf8i\xcc^2\xaa\xa9\xc8\xdc\x14v\xa98\xecn\xa4#\x12m\x1f\x0b\x9a\xd0\xa1\xd0\x94c\xd1R\xf6\xfaB)\x1e\x81P\'\xebh8\xc1\xc7\xbd@~\xa9!\xe5\x80\xc5f#H\xba$\x04f\xe3\x1c\x9e\xe7\xe8*R=\n\xf9\xd4e\x98\x9f\x81\xff\x005\xabA\xa6G\xc7\xa2\xa7\xadt\xc8F2\xa2\xa0\xafW\x9e\xe1\xf4\xc6\xa87\xe4\xd4\x19\xfa\xe0\x8co\x96\xacm<+s**\xb6\xef\xd0\n\x97\xb0\xf0U\xdco\xbe)\xa7\x81\x8f\x05\x91\xca\x92>H\xc5m\x10\xd8D\xb8\xc2\x01R\x91Z\xc6?\x84U\x8d\xba\xddH\x7f\x8b:\x95<\xa8\x18\x06\xa8\xae\xbcF\xce\xac<\x94 \xfb\xefY}\xb7\x81\xc4\xe4\x1b\xa9\xa6\x9b\x8c~\xf6F\x7f\xeejj?\x05ip&\x05\xac\x7f\xff\x00\x08\xad\x04B\x17\xa0\xaf]A\x1d*\xee9\x96\xd6"\xa9\xb1\x1f\xa5Q?V\xb8c\x85!\x17\xd9F\x05g\x13\xe8\x16P\xa1T\x88\x00;\x00\x05U\xb5-\x12)T\x83\x10\xe3\xa5j\xd7p\x13\x9e*\x02\xe6\xdb9\xe2\xb0\xfdK\xae\xdf\x9b\xc6\x8c\xce\xea\x83\xb6p\rO\xb7\xb92.Kd\xd6\x01\xaa\xf8y\x15\xc9\xf2\x97\x1fJ\x90\xf0|6\xda6\xa3,\xe4\xb4-$[\x04\xab\x9c\x8es\x83\x8e\xc6\xb4\xab\xdd=%\xc8d\xa8U\xd2\x10?\nG\xc5J^\xaeg\xb4hd\x91\x80a\x83\x83H\xbbE\xb8\x86Hd\xce\x87\x188\xa9\xd7\xbc\xb5\x9c\xfe\xf7VF\x04w|\x7fJ\xea&\xb2\x8bs\xac\x9e`=\x90g\xfa\x9af\x9a<2\xa0\x059\xa7\x10\xd9\xdc[2\xa0\x88\xba\x13\x81\x8e\xb5HD\'!%r\x7f\xdap3Tqxo\xa63fIe?\x19\x00\x7fJ\xb3\xf8K^\xd3\x17T\x92\x1dKLU\x89\xb0"\x91\xce\xed\xa7\xdd\x87N\x7f\xa5}\x04\xa5YT\xa9\x05H\xe0\x8e\x98\xaf\x9f\x1fC\x91 \x13\xcb\x03F\x07r0y\xad_\xc3\xfa\xce\x9e-l\xed\r\xc8W\xd8\x15\x11\xcf\xab>\xd5\xed\xff\x00\xf4\xef\xaaI\xf8y\xba]\xd5\x9a\xda<*\xb2E\xacyo"\xb9=\x8f\xe6\xc1\xefT\xbds\xa7\xd9[\x98\xe5\xb1S\xa0\xe5d\x03\xd4\x01^\xf9\xabu\x14Q^\x9dY\xea(\xaf\r{E\x14\x85\xcf\x9am\xe6\x11.d(B\x0c\xe3\x928\xe6\xb2\xdf\x0f\xfd\x9c\xe2{\xbb\xcf\x10\xc8/\'\x91\xf3\x1a\xef%UkY\xa2\x9a\x96\x18\xa6\xf2\xfc\xc8\xc3\xe8b\xca\x0e\xe3<g\x14\x86\x8dY\x819\xd8c\x14\x940\xc5o\x14qD\x81\x11\x14*\xa8\xe8\x00\xa5h\xa2\x9d\xa5\x81\x8d\x85\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14Q^\x1a(\xaa?\x8a\xf4k\xcb\xf9a\xb8\xb6\x88HR2\x18\x03\x82k&\xd54\xb6!\xdc+$\xab\xf8\x90\xf1\x9a\xfaB\xa05\xbd\x0e\xdfT\x85\x98([\x85_C\x8e9\xf65M\xd5\xba5\xbfS\x8eMJ<\xc2\xbbg\x82@\xdb\xe9P\xe5\xb79gC\xb9\xdc\x8f\xf1_$\xebp\xb1\x8c\x92:\xf1V\xc7\xb6\x86-:\xd6%\x18h\xe2\\\x1f\xcb\x9a\x96\xd7\xb412M\x0b\'\x95p\x9cm<\x02EF\xdfF\xe2\xd6\x12A\x05\x10n\x1f\x961^%\x7f\xd3&\xb3\x92\xe6\x19\x10\x91\xbe\xe4ps\xbf\xdcS<\xaf\xd2\xaa").5\x1bX\x95\xb7\x16\x97`\x1f\xfb\x85k\xf60\\Y\xd9\xc1o(\xc1Q\x8c\xd67\x89!\x9dnbf\r\x1b\x87\x00\xfb\x83\x9a\xde\x1a;\xeb\x9d&\xce\xfd\x10I\x1c\xd1+\x92\xbc\xe3#\x9ao\xa6\xf4\xc7\xbc\x86\xf1\xe3Y\x9aKh\xc1e\x8cg\xd2N\xf9\x1c\xd3\xf0\xbe\x10\x02\x075\x174\\\x9aq\xa7h\xb3_Hrv\xc6?\x13\x7f\xc5t\xab&\xc4,\xbe\xa3\xd0}kC\xb2\x86\x1b[H\x94\x10\x0e\xd0O\xb95i\xe1\x8f\x08[\xf5\xbe\xa7,\x97\x88\xe2\xd6\xd8+\x18\x8eW[7\x00\xfcU\xbe\xaf\xc2\xc2\x8c1\xe6?\x7faX\x7f\x88\xf4\x89\xec/\x84lI\x8d\xcf\xee\xc9\xee)\x85\xfd\xba4\xe1PzUT~x\xe6\xaf>+73\xea6\x82h\xf6\xc6\xad\xfb\xb5\x1d\xc7rj\xa8#\xdcX\x9e\xe4\xd6W\xc4\xf6\xf6\xdd/\xadu\x0bKX\xd9!\x8e_@q\x86]\xb3\x81\xf1\xbe\xdf\x15\xa4\xe9\xba\xae#\x85\xdf\x04\xe9\xdf\x1cT\x0b\xe9\xe8\xeaA^\xb5L\xd5\xbc\x1d\x15\xd1,\x83\x1c\xe7\x18\xc8\xcdj\xbeP\xc0\xcfz\xf3\xee\xe0\x8e\x95Mo\xd5\'\xb6}Q\xc8A\xadE\xb3\xb4\x04\x158\xaf\x9c\xf5\x1f\x04\xcf,m\x19 z\xb7\x02>*\xb7u\xe1\x9b\xdbfG0\x17+\xd4\x81\x9c\xe7\xe2\xbe\xa5\x9bOG\xfe\x1a\x87\xb9\xd1\x94\xe7\xd1Z;O\x15\xdc.\x95b\x08\xf6\xab\xd8o\xf2\xa0\x1cW\xc8\xf7\xfaT\xd6\xd71Hc-\x13\x02\xad\xc7*z\xd3y\xec\xe2\x8fo\xa4\x8c\x8c\x12:`\xd7\xd3\xd7\x9e\x1d\x82\\\xef\x81[\xea*\xb5y\xe0\xfb)\xc3\x06\x88\x8c\xff\x00/\x15\xa5\xb7\xf1\\N#\xd7\xa8c\x92\x0f5c\x1d\xea\xfarO\xda\xbeu\xb9\xb6\x92\xdbd\x9b\xb2\xaf\x9c7\xd3\xde\x9b)\xc0\x07\xa6kw\xb9\xf0E\xbb\xc5\xe5\xab\xb0\\\xe7\x04f\xa1\xa5\xfb<@7\xc3/\xab\xa8\x04`~Uo\x17\x88\xba{\xa8\xd7!\x07<\xe2\xadb\xea\x10`j\x7f\xda\xb2\xe8\x11\x92h\x0b\r\x9c\xee\r\x8fni\xfbB.\xa23\x17f\x95\xe4!}\x80\xf9\xf6\xab\x91\xf0\xad\xed\xbam6!\x80\'\x0c\t\'\x14\xee+\x0b\x98-\xa5\x85-\x14\x96\xc0%\xc1\xc0\xc79\x18\xfd9\xa7\x8fS\xb6s\xa9e]\xb8 \x8a\x9d\x1d\xd4m\x82\x8c\x0flg\xb5gF\x19Sk\x1c\x9c\x81\x8c\x0e>\x95/oz\xbbbI\x18\xae\x08\r\xc6\x06A\xeaqV\x88\xb4\xb7r\x1ap\xd9\xdcIU\x1e\x80Fp}\xf1^\x1d\x05<\xc9\x19rU\x98\xb2\xb8\\\x10O\xc57-\xfd\xbc\x8b\x87l\xe0\xed\x83V\x0b:2\xe0\xef\xedLV\xe1\x15\x06\xc9\t\x06@I\xe83\xdb\xfaS\xa1,RH6\x92\t?\xc4\xdc\x11\xee}\xab\xa3\xa7\xbeLaY\xf8\x19\xc2\xe6\x9d%\x91\x017\xa1\x1bF\x17\x8e\x80s\x8a\x80\xf2C\x8c\x83\xbf\xd6\xb8\xb2i<\x1d\xe9\x16g\x84\xe5B\xab9\x062\x0e\x08\xed\xc6)\xa1\x89N\xc0\xe5@\x8d{\xb1\x04\xe7\xe2\xa6M\x923\x02\x10\x83\xeez\xf3\xd4\xd2\r\xa7\xb7\xa9\x83\xe5\x87@GZm&\x8c\x7f6\x0f\xbdL\x8a\xe4\x0eN3P.\x1aH\x0e\xd6c\xb7q\xc3`n\x00\xe7\x06\xa3T\x9d\xee\xce\xe0\x0er:\x9cg\'\x1e\xd5f\x9e\xc2Y\xb2\xcf\x90\x08\xc9\xdb\x81\x9f\x81\xedQ\xa3Lp\xe5\xe3F\n0\x06I\xc8?\xe6\xa6\xc5<Z[,*\xc6+\x94 \x8dB\x98,I?\x9d\xbet\x8fn?\x16rA9\xe3\x15\xdc1D\x93\x80\xe8d\x00\x81\xc0\xe3\x18\xfe\xf4\xf2[f\'v\xdf/\xb1\x00\x13\xf9\xfeU\xec\x91;\x87\x927"@A\xdc:g\x18<v\xa7<\xd0A\xf5\x10\x08\xc7\xd0\xfdE+\xce\x19\xc6v#\x1fJo\x07\x97,\xab\x1e6\xc6\x0b\x9c\x0e9\x07>\xa3\xed]\xc0\xcc\xaaa\xcf\x98\xef \x00\xf2\xc4\x8cc\x81N\xed\xe1\x1b1\xe5\xf3\xb4\x02Gn\xc4s\xd8\xd7m\x01I6\x88S\xf1\xe4\x12I\xc0\x1d\xb3\xf3M4\x8b\x96_\xef\xdf\xde\x9ayA\xc8\xfd\xab\xa4\x8b\xcb\xf3I\x94n\x1c!a\xb4\x0fo\xa5#\x14N\xd3\x99\x0c\x04(b\xc3i9_c\xcfsO#\xb5\x9d\xa3\x0c\xe4z\xf2\x15z\xe3\x1c\x12s\xd3\x15\xd4\x91HX\x82\x08c\x93\x92\xd8%GN;b\x98\xf3\x06Xj\x07;\x13\xedLk\xe4l\x7fj\x8c\xba\xb5D\x8e\x12\x88\xcb&Ih\xfd\xf9\xcf8\xf6\xefHN-\xdd\x14\xf9l2H$\x102\xb8\xe8\x07qS&&!\x8eTm\x00\xec\x03#\x9cg\x1d\x7f3^\xbd\xb4r\xc7\x85@\xd8`Tt\xc1\xcd-g\x03N\xa2N\t\xdf>\xf4\x19\x06\x06I\xe6\xab\xf1\x8bD\x86D\x91\x18\xc8\x8c\t}\xb9!A\xeb\xf3\xc7QH\xc6\x11\xfc\xb2\x08\x06L\xab(>\xa1\xb7\xf8\x8e\x7f\xa0\xa9\xe9"\x05\xdc\xbcx\x12\x1cp?\xbf~\xdcW\x12\xdbD\xe5\x15\x15@T\x0c\x8c{\x9f\xaf\x1e\xf4\xf2\xdc\r\xf3\xab-\xbf9\x03jO\x9b\xbe7\xdf~j\r\xa0\xf3\xf2\xec\x19H\'{\x9c\x00A\x19\x07\x1cQu\x07\x01\xcb.\xc4*\xa0.r\xc3\xe3=8\xe4\n\x9c\x92\xd4\x97\xca\xede\xdc\xac\x0b\x0c`\xa8\xe8\x7fJT\xdaE\xe7\xeev\xde\xe7\x922\n\x86?\xd0\x01]\xfcP\x05Nv\x03`(2\xf1\xea\xed\xc5@\xbe\xc6HY\xcb\xeeQ\x95\x90\xfe"\x0fO\xd2\xbc\x92\xda6\x88\x03"\x97Ugi\x17\'\xafL\xe3\xa9?\xd2\xa6\xde\xd3{\xb7\xa1v!=q\xc8\xa5c\xb7\xc4\x93K\x0cj6\xe4n+\xc1\x03\xbf=\xcfa\\\xfcHP\x08\'m\xf9\xdb\xe9H.\xb8\x18$}*\xb1\x14W\x0b\xe5\xf2\x00\r\x9c\x93\xe98\xe7\x1fO\x9aNY\x19\xf6\xeef\xf5\xb9m\x84\x00\x01\xc7\x15ckuUO8\xee+\xd1T\x91\x80y+\x9f\xefQ\xf2ZD[\x0b\x160H\xc63\xfa\x1a}\'F9#\xee\x05$\xb0\'\'\x1f\xa5E\xb4\x04\xba\xaa\x00\x19Pnl\xe4g8$|\x1a\xfa\'\xec\x7fW\n\x97\x9a,\xb9V O\x17`H\x18p=\xb3\xc1\xacv\xdbOe\x8d6\xc6\xc1\xf7g\x81\xea\x07\x15t\xf0|\xc3O\xd7\xb4{\x8d\xc0\x118Y\t8;d\xf4\x11\xf29\xaa/\x10\x84\xbf\xe9\x97P\x1d\xc8R\xc8{\xea]\xc5g|Sa\x17U\xe8w\xb6\xe4e\x92"\xf1\xfb\xebM\xc7\xeb\x8cV\xc9\xe2H\xda=b9\x94\x95\xf3`S\x91\xd42\xfas\xf5\xe2\xa4\xf4\x8dy/qkx\xc1n:#t\x12\x0f\xf0\xdf\xde\xbd\xf1\x15\x81y\xe2\x95A\xc8\x18o\xc8\xf1T\x8b\x88\x1e\x19\x8f]\xca\xd9\x04pEy\xd4I\r\xfd\xacA\xcf\xac \xc3w\x04W\xcbN\x85u\x81\xd9\xcf?;\xd6\x7f\xf6\x9d\xe1\xa8\xb4\xddt\xdeF\xbba\xd4\x11\x9c\x01\x90\x16U\xfcC\x8f|\xe7\xf3\xac\x8ex\x14l\x0b\x10\x04.\t\xf7\xaf\xa4<z\xb2\xeb>\x1f\xd1\xb0\x86[\x94\xbceb\x078\xd9\xd7\xf3\xe2\xb2U\xf0\xd6\xa3!\xc0\xb4q\xcf;\x88\x1c\n\xf4/\x0f\xf5\x12:e\xb8\xb9\x98k\x8f1\x9c\x9cd!\xc0?\xa5}-\xe0N\xa3%\xdf\x86\xfat\x97\x0e\x0b"\xb4Y\'\x95\x8c\x95\x07\xf4\xaa|V\xaf*\xe3\xd0\xbe\x8c\x0cg\xa8\xff\x00\'\xb9\xa9T\xb4\x96\xddLo\x12\xa9\x04q\x8fP\xfd\x7fZ\xb1\'\x86/_\x91\xb1FG\x04\x8c\x8c}*r/\rHQRI\xd7h$\xfas\xd4\xfc\x1a\xb1\x9b\xa9\xc01\x99F9\xc5k\x1e\xf2\x05\xc7\xf1\xd3\x1e\xd9\xaaQ\x83\x1b\xa3$\x86=s\x91\x81\xed]\x84!\xc6\xd0N9$v\xff\x00\xb5_\x93\xc2\x96\xb9Rd\x95\xbd\xf8\x03#\xdb\xbdJE\xe1\xfb$P\x05\xb9orI\xe7\xf4\xc5C\xff\x00U\xb7\x04\xff\x00\x18\x0f|\xed\xfaTG\xeav\xa0m&\xaf\xa0\xac\xd1T\xb1*\\\x90\xd8`G \x1f\x9fj\\\xda8e"O0\xb0\xe4\x8eG=\xbe\xb5\xaa\xb6\x91k!Q\x1e\x99m\x18\x18\xe0\x069#\xdfq4\xa4:<\xd0\xe7\xc9E\x8c\x93\xd5T\x06\x19\xf6=@\xa8\xb2u\x9bU|y\xc4\x809\x03\xfc\xe2\xa1\xb7U\x84\x8c\x85`}\x8e\x05ecK\xb9w`\x91M\xb3\x18\xfc\'\x1cs\xda\xbb\xfd\x8fv\x10\x11k \x04\x1c\x92\xa7\xfc\xe2\xb5y4\x8b\xc9\xb1\xe6M+\xe3\xa6\xe6\'\xadq\xff\x00\xa7\xa4=A\xa6[\xaf[\x0e\x18\x908\xc9\x03\xf5\xa6\x0fT_`>\xf5\x95.\x91tY\x18*\xa7n\\\x03\xcf>\xf4\xa0\xd1e\x04\x1c\xa1\xf8\x04\x93\xfd\xabWO\x0f\x11\xd4S\xc8\xf4\x05\x1dV\x98\x93\xc41`\xe3\x1f\xad4z\xae8*+\'\x8fE%\xb2\xcc\xc0\xee\x07*2q\xed\xcd>\x87C\x88F\xc1\xa3\x95\x9c\x9e\x0e@\x18\xf9\xe2\xb5\x88\xf44\x1f\xc1Oc\xd1c\x18\xf4T\x07\xf1\x1684\xc3\xf5\x82?\xfb\xd8\xfaVU\x16\x92\x88W\xcb\xb2\x00`n\x0c\xec\xc1\xb1\xef\x8cqR\xd1A{\x1e<\x8b[XH9\x0c\x90)`~\x0bn5\xa6\xc7\xa4\'\xf2S\xb4\xd2\x17\x8fEE>#\x9c\x961\x83\x93\xc9Q\xfe*\xba~\xad\x1b\x8c<\x8c\xc3\xd8\x9a\xa6Xk^+\xb4\xc87\xedp\x87\xf8.\x14H\x07\xd3\xa1\x156\xbe$\xd7\x99HkKL\x13\x9e\x15\xc7\xff\x00\xddVD\xd2\x07\xf2\x8aXi*?\x84Ut\xd7\x0fr\xda\xda\xc81\xc65c\x07\x06\xb3\xb3\xc3\xd0fr\xef\xd3\xe1,N\xe4(\x19\xfd*\x83\xa8>\xb1\xab\xa1\x8a\xe2m\x90\x9e\xb0\xc66)\xff\x00\xdd\xdc\xfet\xc6\x1f\x0f(\xc7\xa2\xb4\xf1\xa6\x01\xda\xba\x1ax\x1d\xa9\x0buu\x14z#\x83\xcbA\xd9p\x05J\x86\xf6\xce\xd61\x1d\xbc)\x1a\x0f\xe5Q\x81\xfbU\n\x1d\r@\x19_\xe9R1\xe9(?\x86\xae\x02\xc8\x0e\xd4\xa7\xddT\x0e\x95\x1aI\xee\xc8$\xe7\xf5\xa4\xbfT\'\x83Ud\xd3\x95q\xe9\xa5\x85\x9a\x8e\xd5`0\x8fj\xe0\xc5\xf1P\r\xdb\x93\xb9\xa4~5\x9b\xbdB\x8b`;R\xe9\x0e;T\x8f\x95\xcfJ\xf3\xcb\xf8\xa4\x99\xc9\xefI7\x05\xbb\xd2q \x15%\t+\x8al\x8b\x8au\x1a\xf4\xa6\xbc\xe7\x8d\x83+\x10j\x1c\xcd\xab9\xa9X\x98\xe2\x9f#t\xa8\xf8\xb2}\xe9\xe2d\x1a\xd6Z]\xc8UX\x12A\xefT\xf2\x81\x93O\xd0\xf1]\x91\x9aE\x0f\x14\xb0\xab\xa4\x9c\xba\xe0\x9eEAa\x83M\x9e\x1d\xd9\xa8;\xcbr\x18\x90*\xccFi\xac\x91\x06\xedU\x1dJ\xc5.#\n\xa0\xab\x83\x90\xd5"\xdev\x8d\x81\xce\xd5L\x92\xdc7\x18\xa6\xa6\xc5I\xe9\xc8\xe9Vi\xed\xb6\xb7\x0b\xd7\xb7\xbd6h\x80\x19\xf6\xac|\x8d-\xb4\x8d\x1bd\x10qV\xebp\x1c\x0f\x9a\x83X6u\x14\xee\xcd\xb6\xdd\xc0\xe17\x04uc\x9e\x9c\x1a\xf6ps\x81\\B.`\x91%ON\xc6\xdc\xbcw\x1e\xf5.\xc6UK\xaby\xa4\xce\x98\xe4Vb\x06p\x01\xceqJh\x84\x88\xe3 jR0N+C\xbe\xba\xb3\xd67C\x1d\xc0\xde\xb13\x01\xf2\x05g\x9e\r\x92\xeb\xf6\xf46\xba\xa4DM\x14\x84\xe1\x86>\x87\xe9R07\xef\x03\x97*Y\xb2\xc4{\x9e\xf5i\x11\xc5=\xcd\x84\xd3"\x0b\xa8\x18\x18g\x07\xd3"wRk\xdb\xfa\x1f\\\xb3\xf1oQ\xb2\xba\x9d#\xb6\xb8\xb4\xb8RH\x19\x8eU$a[$\x95#\x1e\x92v\xce\xd5\x96\xbd\xb7n\x9bk<1\x16\x929##\x07\xf3)\x1d\xc7\xb8=\xebG\xa2\xa3\xa0\xd4m\xe6%C\x80A\xc1S\xd4\x1a\x91\x04\x11\x91^\xb8T\xaf"\xb2a\x83pk\xc3^\x8a\xf0\xd7\xa2\xb9]\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xbc5\xedrh\xa2\xbc\xaf(\xcd\x15\xda\xe52\x9fN\xb0\xb9\x93\xcc\x9a\xd2)\x1f\x18\xdc\xc3\'\x15\x15s\xe1-\x06\xe8\xb6\xfb 7\x0c\x10\xa4\x81V*)\xb9"\x8aQ\x89"G\x1e\xcc\xa0\x8f\xde\x92cC\xca\n\xabY\xf8\'\xc3\x96K2\xae\x9e\xb2\t\x06\x0f\x99\xea\xe3\xe3=+\x8d@\xe9\xfe\x1e\xd2\xd6\xce\xd96G\xce\xd4\xcep;\xf5\xab[\xba\xc6\x8c\xccp\x00\xc9\xacW^\xd5\x86\xa1\xa8\xdd2\xc9\x98\xe2\x1b\x17\xe4\xf7\xaa~\xad\xd4l|?c\xf8\x83\x1cQ\x92|\xb8\x94\x00\xbb\x9d\xcf\x1d\x862ipZ\x89\xee!\x824\x00\xc8\xd8$s\x8e\xf5+\xa4j\xba|\xfa\x8c\xa2r\x13p\x02=\xc3\x00\x9a\x99\xd7\xecg\xba\x81f\xb4\x98\xac\xd0\xf3\x1e\x0f\x06\xb1MF\xf6\xea$\xca`(<du\xa54\xbf\x1e\xde\xd8\x85K\x89@L\xe0o\xe5\x7f^\xa2\xb1\xf6\x9e4\xe9\x1dF\xde\xe2\xca\xe9$E\x94\x91\xe7D4\xeew\xc8\xc1\xceA\xe0\xd6\x9a\x7f\x0f^DVx\n\xb6\x9f\xe4\'\'\x15b\xb7\xb8\xd5\xae5\x9b\x04\xd4\x0c\x84\xef\xc0\x0c1\xc6;R>^\xd7q\x8e\x8c\x7f\xbdIi\xbe }gT\xb0Y\x04~Z\xc9\xbf\xcc\\\x1c/N\xa3\xeb^\xdf\xda\xfd\xd6\xeaU-\xb9w\x1c7\xbek\xcd<Sc\xe5\xd8\xa5\xccW\x93^G\xf8\xe9CM("OR&5g$\xfeR3\xc5X\xf4\xe2Rf\x8d\xe2X\xdb\xcb\x07J\xf1\xb1<S\x15\x8f&\x94\xf2\xe8V,p\xa3\'\xda\x9e \x822\x0c\xd2\xa8\xff\x00ny\xacL\x16\xb7\x17-\x84P\x17;\xbb\x1c(\xfa\x93W^f\x9f\xf09\xa6\xa2\x1d\xdd\x06~\x95\xd2\xd8<\xa3!x\xa7O\xaaB\xb9\xf2Qv\xf4\xc9\xe2\xa3\xa4\xd4\x91\x80Cp\xaa\xbc\xf0:\x7fJ\xb1\x16\x16\xf0\xb8\xd5,\x93\x8c\x1f\xfd\xb1\xa1I\xce\xde\xa6\xe4S\x88f~\x17O\xd7s\xfaW\x92\xe9#\xbb\x0e\xbe\xdd\xbd\xea2\xe3M\xb5\x8d\xb6\xc9 RFx\x19\xa5\xa4\xd4\xf6\xe4@e\x7fr8\x15\x11,\xf7\xf2\xb1>Z\xe0\xd4\x82\xf6\xc8\x00\x8e\xdb\r\xb6u\xc8J\xfe\xc4f\xa6F\xb3\xff\x003\xe0~\x86\xa3\xb5\x1bHa\x86y\x11\xd4\x84RA<v\xaaV\x97\xab\xcc\xd1$w6a\x9f82\x0e\x98\xf7\xc5\\\xee\xac\xae\xae\x94\xac\xad\xe88\xca\x8e\xf8\xa6\x83K\x8e\x01\xf8qR\xad\xee!H\x9d\\+\xb36F3\xe9\xfaT\xc4r\x06\xed\x9a\xab\xea\xb3\\L\x15-\tQ\x8eX\xaf#\xe9T\xd9t\x8b\x8d\xed+\xcd&\xf3\xfc[\x8ekP\x92\x0c\x92\xb1\xc7\x93^G\xe1\xe9n\x0efb\xaa{\x0e\xb5c\x07RKd\xe5P\x1e}\xcd9\xaf\x8c\x9f\xde\xb1\xd7\xb2\xbaG\xdb\x0c\xb2\xee=\x02\x92io\xd8\x1e#\xbc(Z\xe6d\x03\xa6[\x9f\xd0V\xfde\xe1\xfb;u\x1b!P}\xfb\xd4\xcczd#\xff\x00\xa6)2\xf8\xa8F\x7f\x87\n\x92?\x99\x80&\x94.U?\x9d\xb1\xec\t\x15\x83i\x9a\x0e\xb5c)\x91\xe7k\x9d\xdf\x89%\x03\x1f\x969\x15b6Z\x8c\xc9\xb4i\xb1\x0f\x90Ml)\xa7F?\xfab\x9e%\x84c\xf8ET\xcf\xe2C#\xebhSW\xc6\xdf\xb0\xa7?\xd6|\xb0\x00-\xb7\xfd\xc4\xd6\x184\rP\xfe+h\xb0{m?\xf3H\xff\x00\xe9\xfdMI?vV\xecy \xd6\xf9\xf78\xc7\xf0\xd7\re\x19\xfe\x11M\x8f\x12M\x9f\xfd\xb4\xa7\x17\xc4R\x03\xdc\xfd\xeb\x03}\x16\xe4\x8c5\x9c\x80\x0f\xf7\x03\xfaqH\xbe\x88\xf9\xce\xcb\x81\xed\xe9\x07\x1f\xd6\xb7\xd6\xb0\x8c\xff\x00\r"\xdat\x7f\xcbN\xa7\x89\x1f\xfd\x98\xfa\x1f\xf3RS\xc4\x8e;\x1a\xf9\xf9\xb4\x04V\'s\x03\x8e\xa5:\xfdi\x1f\xd8Q\x95#\xcfL\x1e\xe66\xfe\xb5\xf4\x1f\xec\xd4\xceB\x8f\xd0\x1e\xb5\xc1\xd2\xa2=c\x8c\xfdQ\x7f\xe2\xa6\'\x89S\x03T\x92\x03\xf0\xa0\xd3\xe3\xc4\xcc?\xf3\xfe+\xe7\xd3\xa1\xc7\xb0\xa8\xb8\x88\x1cc\x9c\xe0\xf3\xed\x8a]4\tg\n\x91M\x04\x9bF\x00\xdd\xb4\xf3\xf5\xad\xdc\xe8v\xad\xd6\xd6/\xff\x00\x86\xb9\xff\x00\xd3\xda{~+\x14?\xfbIS\xfei\xe5\xf1\x14\x0c@7\x01w\xe5\xd4\xe3\xf6\x14\xb3\xe2\x81\x8d\xc1\xcf\xd0\x7f\x91X\x84\x9e\x1e\xba\x12\xa3\xc8-\xd4\xec\xc7\xaaQ\xd0RRx~a\x872@7\xe4\x16\xf3\x14\x8cu\xad\xb2o\n\xe9o\x92\xb1J\x0f\xc9\x06\xa3\x1f\xc1\xf6\xdc\xe1\x063Kn\xbb\x0c`\x0f\xc4#{\x14\xdf\xfa\x9av?\x12\xa3c2\x01\x8e\xc5O\xf9\xacs\xf6<q\xb2\xaf\xde\xed\x88\r\x90\xa6A\x8e}\xc8\xa5\x13O\xb5\x8c\xed7V\xe3\x8d\xb9\x1b\x88\x00~]ke>\x11\xd3\x16\xdf\x0b\x0c\xa6b9b\xc0 \xfa\x002i\x99\xf0\x8c\x1d\xd6\x9d\x97\xae\xda\xa0\x00\xdc\x07,\xa0\xe5\x7f\x97=\x8f\xcd8\xbe"\x89\xb3\xfcLo\x8d\xc7?5\x92\r:\xd39[\xd8\x14\xe0`\xe1\xf28\xe7\xb7zM\xf4\xdb\x0c\x90\xf7\xaa\xc5\x8f\xa9\x95\x1b\xfc\n\xd7\x0f\x85!\x1d\x12\x91o\x0bD?\x82\x90:\xed\xb9\xc7\xf1\x9c~\x99\xa5\x0e\xba\xa7\x89\x97\xf4\xac\xb5,4\xb0\xde\xad@\x80H-\x88[\xb7N\x00\xa4\x08\xd3\xa2|\x85\xbb\x9b\x00\xa8\xf4*\x8c~f\xb5F\xf0\xbc_\xc9H?\x85\xe3\xfeJZ\xf5\x9bb}R\xc8s\xd8\x90?\xa0\x14\x93\xd6\x1d\xb8\x9c~\x82\xb2\xd7\x93LPJiWL\xc4\xf3\xbaE\x03\xf2\xc04\x82\xdc@\xa1\x97\xf6\x19`}\xe6?\xf1Z\x89\xf0\xd2\x8c\xfa)3\xe1\xc5\x1f\xc1O\xafW\xb3\xc6=G\xea\xed\xfei\xb3\xd4\xa6?\xff\x00P\xdb\xfc\xd6p/\xc2\xa8\x11h0+{\xc8\xec\xff\x00\xd3\x02\x91iu\x19\te\xb4\xb4B{\x08\xb3\xfd\xcdi\x83\xc3\xab\xfc\x94\xe5<>\x83\xf8(\xff\x00W\xb3M\xc4`\x9f\x92[\xfa\x93L\x9b\xc7\xceL\xcd\xfa\xd6[m.\xa1\x03\xee{H$\xe3\xa6\xdd\xbd>\x9d\xe9\xfc7\xed\x1e\x0bi\x1e\xa0A\x05X\x0eGC\xd2\xb5\x04\xf0\xfcG\xf8\x05=\x8f\xc3\xb0\x9c~\xe8~\x95\x1aN\xb7f\xc4\xea\x87$\xed\xb1#\xfaR[\xa8\xb0\x04\x19\xce>\xb5u\xd2\xee\xad\xfcE\xa5\xda^!\xdb\xe6F7\xa1\xe4\xa3\x81\x86S\xf2\rU<E&\x9f\xa4mk\xa6m\xcc\x0e\xd5E\xdc\xccGP?\xefN-tImIh\x1aHI\xeaP\x95\xfe\xd4K\xa1\xa4\xce^`\xd29\xfe\'$\x9f\xebY\xd0,\xe0d\xfe\x1c\x88\x81\x8e\x08$\x12\t\xc8\x1b\xed\xb7\xbdy\xbf\xff\x00J\xd95\xf4\xce\xf7\xf9\xb7v\xcf\x96\xab\x87\x1f\x19\xfe\xf5\x8a\xea\xfa\xa6\xa1\xabL\x9bm|\x9bx\x891\xc7\xb8\xe7\x9e\xa5\x88\xeaM\'\x07\xde\x17\x86\x89\xf1\xf5\xcdm#\xc3\xb6\xdf\xfe\xc8\x0f\xca\xbd\x1e\x1f\x84\x7f\xf4\xc7\xe9W#\xafY\xa4K\x1a@\x15W\x81\x9a\xda\xda\xbd\x8d\x94\x11\xc1o\x84\x8d\x06\x15Ef\x96\x8f \x18\xd9\x9cv<T\xf5\xaf\x94p\xcf\x03~Db\xae#@\x80\x7f\xf4\x85,\xba\x1ck\xd1qQ\x9f\xac\xc4\xe4`pv\x07qN\xb5\xec\x07\xf9\xea\x1e\xd6\x1b9\xc7\x11\xb0?"\x9f\xa6\x9dn\xec\x02H\xbfJ\x98\x83J1\x95#\x90;\x1a\x98\x86\xcc9U\x91#\x07\xb3\x10G\xeb\x8a\xbb\xb5\x82\xda\xfe$\x0c\x11\\\xb0\xdc\x0c\x03\xf1\x90v\xaa\xe9\xaf\x95\t)!#\xebP1h\x87\x8c`\xd3\x85\xd2\\\x1f\xc2*j}\x12\xfa \x92\x07!\x0bd<m\x95\xfaqL\xde\xe3R\xb6\x93j\xb0\x99\x7f\xdc?\xcdv\xf7\xa2[\xdb\x0c\xdcY]D\xa4\x8c2\x9d\\\xfc\x1cT1{$\xe31\\\xc6\xff\x00\xb5!\xfb0\xa8\xe5+\xa5\xb0\x07\xf8E<]h\xa1\xc5\xc5\x99\x03\xddy\x14\xee;\xdd6\xe7\x04J\x14\x9e\xcd\xc5SM\xd2\xece8\xb7\xbd\x01\x86\xde\\\xb9\x8d\xbf\xff\x00je\xa7\xbc]\xda6\xc7\xfb\x97q\xfbTH\xb2\x19\xc6\xda\xe8Y\xff\x00\xb6\xa7|\x84 \x14pG\xc5zc\xc09\x19\xaa\x8b\x8e\x93}\x06\xac\x821\xb8<\x82>\xd4\xd7\xe3\\\xf7\xa8Qk\xf1J\xad\xb0\xe3\x8a\x95X\xe38\xceW\xe7\xadz"\x00\xe3 \xfc\x8a\xab\x92\x0b\xa4\n\xc4\x06Rq\xb1\xfe\xdc\xd2\x1a\xe9\x8ew4\xd1-\xc0\xedO\x12\x01\xedNV\x13\xc7\x1cR\xea\x95yg\x11@\x80\xa6>\xb5\x0eK\x82s\xea\xa6\xcb\x08\xf6\xae\xc4#\xda\x9e\x84\xae\xc2\x13WI\x16\xac\x00\xa4\xe6\xa3\x19\x8f\xbdGy#\xda\xb80\xe7\xb5Ky5\xc9\x86\x96\xf6.W\xf2\xd7\x05\xc7\xcdD\x18\x80\xedI\x98\xaa\\\xc1H\xb4$v\xaa\xe9\xeceP}\x04\nug\xcfz\x88x\x8d"c\xf8\xa9\x83\x18\xa4\x9a\x00j\x82\xe7\xa7\xc8\td\xfd*B\\{\xd4G\x97@\x88\xfb\x8a\x93\xfb\xb7\x19\xeb\\\x1bcQ\xbf\x05w\x80|\xae{f\x9d\x17\x0b\xfe\xea`#\x1e\xf4\xe1\x15A\x14\xe9m\x97\xbd* \x8f\xe9O\'M\xb9c\xb8N\xdb\x13Hy\xd4\xf74\xb4\x18\xc6;T\x9a@\x1b\x9c\x8a\x8bU)\xde\x9d\xc4\xe4\x1ek_\xd3\xa4\x8a0\xb1\xcb\x0e\xae\xdc\xe3\x15]0c\x92\xadNvm5\xd8\x02\x95F\x0c\x06i&\xc8&\xae$\x828\xd4H\x98({{T@\xc4\x9c\x1ek\xde\x95\xc1\xa5\x15\x869\xa4\xdb\x03\xa1\xa8\xd3*\x88\xd5\xc3\x02\x0fc\xc8\xae\x8c\xe7\x18\xa4\xa5Du \x8a\x86\xba\xc2\x8e\x07\xc6jJiB\x83\xcdf\xfe(\xf1e\x96\x93<\x16\xad0\xf3e\xe5\xf0y\x8d?\x98\x8f\x9a\xcb\xdf\xa3^\xca\xb6\xf0\xc5\xaeV\xe7H\xc9\xd2\xbb\x93\xf6\xab+(]\xdc\x00\rOD<\xf9\x9b\x03\x858\xfa\x9a\x9dX\x01\x8f\x18\xea9\xaa\xe6\x8b\xa9\xe9\xfa\x8d\xbcr\xc1s\x1c\x83\x1c2\x90j\xd3\x19e\x1e\xeb\xee*\xee\xce\xc2\xce\x18\x8a\xc2\xe5\xd4\x8c>v`\x7f\xee\x1d\xa9\xfb\xa6\x900\x04i\xd3\xc7\xcdD\x88\x9a&*G\x14\xed%\x92\xdf\x00\x8d\xc9\x91\x95=?/j~\x04ny\xc6iy\x92\x06EP8\xc7_\x9a\xab\x83\xa1\\\xc0\xd3\xdc\xda\xdf\xacM\x19\xccg;\x9f\xfbO\xc7\xbdG{\x80\xfaU\xe3\xc8<\xd2W\xe8\xd7\x16\xbf}\xb2\x99\xbc\xd8\xc0\xdd\x8f\xc4@\xfe\x17\xff\x00\x06\xac\x9e\x14\xd6\x0e\xa3hc\x95\xbf{\x19\xc1\xcfZ\xa7\x94\x9e\xd5\xbc\xc8\x98\xe0\x8e~G\xb1\xaa\xdd\xe6\xba\xfe\x17\xd6\xf4\xadI \x91\xac\xef\xa6\xf2.\x920HI\x0f\xe1a\xed\x9e\x84W\xb3xG\xc5\xb7=Z\xe6\x0b\x1b\xd4\xfc=\xd2G\x87\x8d\xb2R@8t?\xd4Vz\xff\x00\xa5\xc7\x1c2K\x10\xd43\xa8\x11\xc8\xf85\xf4\t\xafi8\xa4\x12\xc5\x1c\x80\x10\x19A\xc1\xeb\xcdv+\xd28\xac\xf8\xde\xbd\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xaf\r\x14W\x95\xc95\xe9\xaeM\x14Pk\xca(\xa2\x8a+\xdc\xd7\x94QEP<g\xab\xea\x11\x04\xb0\xb2\xb5\x95\x9ea\xf8\xd5I\x00Vn4\xeb\x9d;\xca[\xe8\xde1#d\xe7\xa9\x15\xf4)Db\tPH\xefX\xef\x8f/\x03_\x85\xcf\xa6\x18\x89\xc0\xf75\xe6_\xf5\x0f\xa4\xa4\xb6m\xd4\xa5\xbc\x9aI"\x92(\xedm@\x1e^]\x80 \x81\xb9-W\x1d\x01\x0bu(\xf0\x07\xe5b\xcd\xdc\x00*\x85\xaf\xddC;m\x89\x02E\x18\xc2\x0f\x7f\x93Y.\xaf\xa9\x08>\xf2\x91\xdb\x1b\x92\xa8KF\x0e1\xf3WO\x12\xbd\xe6\x99%\x88*\xa2[\xac0F\'0\xa1\xff\x00\xea\xc8\x06x\x1e\xd5\x1f\xe3\xb9\xf4\x8f\x0bi\x91\xc7k\x0c7z\xb9#}\xcb\x82\xae\xdej\xe7z\x81\xd4{\x03\xc5@\xf0\xef\x83\xaeeY\xfa\x97Y\xcd\xba\xa8\xf3<\x9c\x05\xc0\xed\x91\x8d\xbe\x05j\xaez\xb41\x1b{kO\xe3I#iR7\x1brsP?dW\xfa\x8akZ\xf8\x96eX\'\xd3\x9b\xcb\xb5\xe4\xb2\x92\xcb\x86\xf8\xad\xeei\xde\xde\x19\xe1\x99U\xe5`\xa6I\x19\xbf\xd3\x03\x9d\xb9\xe9\xf55\xf1\x7f\x84\xbcs7\x845\xf6\xbd6\xbfz\x96\xe0y2+6\xd3\x96a\xcfC\xd3\xb0\xab\x0f\xda\x87\x8enu\xbb\xd4\xd3-|\xdbx`#\xcdD\x93\x89U\x86w\xb0\x1dOlWz\xa7\x87/\xba\xfd\xc2~\r\x16\xda\x08m\xccM+\xe0\xa9\x0eNB\xaf%\x88<\x9cc\x15\xc9\x17\xf0\xf3\rc[J\xc1\xb6\xecW\x1c\x9fa[v\xab\xe3\xbd\x0bN\x86\xfc\xc7v\xd7\xb2Z&\xf9\xa2\xb4\xf5l\x19\xc7\xa9\xba\x0e~k\x0b\xd4\xfe\xden\xf7L\xba~\x83\x10\x0b\x9c\xbc\xd2\x17o\xc8.\x05f\x16W\x1a\x94\xb0j\x16V*\x14\xcb\x19\x13\xb36\x10\x0e\xb8=\x87\xc5Wmt-F{\x91\x13BT\x027\xc8\xc4\x85\x00\x9e\xc7\xbd?\xd3<\x17\xd0zp\x8c\xb9{\x99\xb4\x1d^i\x00g\xfe\xd5\x1d\xa9\xd3%\xc9\xd4B\xe0j\xc0 \x7fZ\xde\xf4\x1f\xb6+\rNE\x83QI,\xe4$\x00\xe4\xe62~\xbd\xabl\xd2\xddn\xc2:\xb0da\x90A\xc8 \xd7\xc6\xe7\xc2\x1fsc%\xca4\x86A\x94^@+\x9e\xab\xff\x00z\xd1<\x19\xe3{\xcf\r\xc9\x1c\x17Q\xbbXn\xdb\x82r\xf1\xfc\x8f\x8f\x8a\xa2\xf1\x07\x86-\x9a9\x1f\xa5+\x07Q\xea\x88\xf1\xff\x00\xeaN\xf5m\x05\xcc\xf1\xa6\'U\xdf\xf2\xb0\xe7\xef\x8a\xfa\xde\xde\x10#\xd88\x04\xe4\x8fzpm\xd4\x7f\rEh\x9a\xbd\x86\xado\x0c\xf6\xd7q\xbcr\x80R@}\'\xeb\xedVG\xb7\xb8\x8dC<Gi\xe8\xc3\x90~\x84W\x93\xcbm\x7f\xfcF0JV3\xa5\xce\t\xd1\xf0}\xbe\xf4\xdb\xcd\x87\x00\xb0\x04\xfe\xf5\x14\xd0)\xedQ\xd7\x16\xcaG\'\x1f\xde\xac^K\xb8\x18S\xcf\xc5t\xdal\xca\xa1\xcc\x0e\x01 n*z\x9an/\xc4n\xcb\x14\x84(\xc9!I\xc0\xf74\xb1r\x89\x80\xce\x01<UV\x0b@\x1b+\x18Q\xeez\x9a\x93Kpz\x8a\x95\xfb\xa1F\xc3\x82\x18v#\x14\xba\xc0\x07Jjk\x96\xd4C\x02\x08\xd8\x83\xc8\xa1\xaeW\x1b\x1c\xd3\x14\x84\x0cqN\x16/\x8ar#\xc5(\x12\xa24\xa4\xf7\xa8\xed1=\xe9%\x8e\xbb\xdb\x8aP-{\xb6\x99-\x9e\xf4\xc9l\xd28\xaf6\x8a[o\xc5z\x16\xbb\xab\x15\xcdT\xdff{W\x9e_\xc5:\t]\x84\xf8\xa09<\x02h2\xe3\xbd3\xf2\xab\xdf({S\xd1\x11\xae\xbc\xa3K\t;q\x1b~\x94\x9f;\xe6\x99yc\xda\xbd\xf2\xc7\xb5<\xf2\x8f\x14yF\xbaa\xb8\x1f\xfd\xb3\\\xf3~i\x9e\xc1^\x18\xc7\xb5<X\x9d\xce\x15r}\xbe\x95\xc1CH)2\xaa\xb3F\xc1I \x1clH\xe4\x03\xf7\xa0K\xbe5SO({W\x06\x11\xedOv\xd1\xb3\xe2\x92$4\xbf4\xfb\xd3\x03\x00=\xa9#n\xbe\xd5\'\xb2\xbc\xd9\xf1J\x13\x11\xde\x96\'#\xbdD\x9bu\xf6\xa4\x9a\xd5O\xf0\xd4\xc9\x8f\xe2\xb81\xf3\xd2\x9c\x13\x9fzqn[\xde\xa0\x9e\xd1OjD\xd9\x83\xda\xac&0{W\x06 :S\xabr\xde\xf4\xf2\xdd\xb8\xeej\x03\xeec\xda\xbb[1\xedS;@\xea+\xd1\x18\xf6\xa5~!\xfd\xe9F\xed\xcfz\x8dK@;S\xb8\xa0\xdax\x14\xf9"\xdd\x8c\n\x90\x86\xd3\xa1$\x0c\xf4\xa9\x16p\xde]\xca\xbeJ\xb6\xdf\xcd\xd8TI\xae\xf0\x0e\xa3L\x16<\x8f\xc3\x8a\xe4\xda\xee\xe7\x15k\xb6\xd2ZL3\x15\x08{\x8esN\xe4\xb4\xb0\xb6]\xcc\xe7#\xa0\xe3$\xfd+{\x17\x83\xfa\xb5\xd5\xa8\x9a\xed\xd2\x18\x80\xc9iX.\xde\xe0U[u4W\xd2\x99c\xec7\xaa1\xb4#\xb5s\xf7o\x8a\xb1K\xb5\xd8m\x00\xe7\x93\x81\xd2\xb8\xf2\x0f\xf2\xd50\xf0\xd3J\xe4B\xc5\xd4\x1d\x98n\x0f\xe9\x9a\x92/\x1b\x03;T\x1a\xdb\xe3\xa0\xa7\xb0\xc1\x19\xc7\x98\x87\xf2\xa9/!\x87\xf0\x0f\xd4W^S\x8f\xe1\xfe\xb5\x7fc\xe1\xc9\xad\xd9K#0\x1f\xcaS#\xf7\xa6\xde\xebP\xfc\xd8\xf9\xcd3\xfb\x94D\xf0H\x1f"\x9c\xc7i\x16F\xe6\xc0\xf7\xc6iuG\x1d\xab\xdd\x8f\xed\xfdEh\xad\xbaZD\xda\x96\xcfrw\x18`\rFi\x9c\xed\xe6\xfe\xe2\x88\xc7\x90O\x96r\x0f\x04\x11\xc1\x1f"\x99\xdcX\xdaNK\x01\xe57\xcf+\xfa\xf6\xa7,\x18u*?:A\xe4P2\xd2\xa2\x8f\xaej\xdc)\xf2\xbc\xa9\xa1S\x109\x0b&\xc0}\t\xc1\x14\x85fV,\x92\x10\xc4r\xbc\x9f\xaf\xbdEM\xa4\\\x00J\xc5\xe6\x01\xddHaU\x8b\xfb\x10\x03\x02\xbbH\xed\x8ejsQ\xf1\x97\x87\xfc<\x8f5\xd6\xb5o\x0e\x06\x08.\t?\x90\xc9\xac\x97\\\xfbr\xf0\xf3J\x86\xca\xd6[\xb6rUe\xf2\xf6F1\xee[\x9f\xe9Q.:WE\xba\x83\x11H\xe6BwE\x02E\x1f\xfe\xcb\x8c}\xeau\xac\xfdK\xcd\xf5D4cf9S\xfa\x1a\x98\x92]V\xd1\xcf\xdd\x9aN\x9c\x11\x9cR3}\xa0I\xa1\xc7\xbbW\x92\xd4F;\x99\x02\xbf\xe4+\x14\xd7~\xd2<S\xaa\x86Dx\xec\xe1f \x88\x08\xde\x17\xdfs\x7f\x8a\xcc/,n\xb5+\xa7y\xa5\x96\xe2L\x02X\x92\xe7\x8e:\xfd*\xae\x0f\x0c\xc0\x8f\xb5\xf3*r@\x03q\xed\xcd_0i\x13\x12[\xa9j\xfb+B\xfbO\xf0g\x88$Xm\xb5t\x8ebp#\x9b\xf7D\x9f\xf6\x96\xe0\xfeF\xb4x\xa4\r\xc8#\xb1\x15\xf9\xee\x9e\x19k$\xd5\xfe\xf2\xa4MnT\xac\r\x94e\\d\xb9\x1dN:b\xaf>\x14\xf1\xc7\x8a\xfc=\x142Y\xea\tuf\\(\xb5\xb9\xdcS\x1e\xd1\x93\xea\\`\xf4\xa6z\x87\x83\x80s%\xa3\xb9\x07\xf9\x1dw\xdb\x9c\x11\xed\xf4\xaa\xd7\x88\x1c\x80WW\xb6k\xed\xd8\xa6\xdaFG\xebR\x91G\x14\xea\x02\xfa\\\x9f\xcb\x15\x8a\xf8g\xed_\xc3\xba\xe2\xacw\xa1\xf4\xb9\xf7\x05\xfd\xf70\x16=1/A\x9e\xdb\xb1Z\xd42aU\x91\xb2\xa4d\x10r\x08=\xc5W\xdaY\xddYHR\xe6\xdcK\x0e\xe0\xe4n>\x9e\xdfZ\xac\xb9\x85\x97\xb1F\xa9\x96\xb1\x919\xc6G\xc5$c#\xb5\'\x1d\xe4\x83\x1e\xb3O\x16\xe9\\a\x805x\xb0\xf4\x99s\xe4\xb3\xc0q\xf9_q\xfa\xd5i\xf3\xd3\xf3\x00\xdf"\x9a\xed5\xc1V\xa7D\xabt\xa3\x02\xa3\xb5\xa0\xc9\xf5d{\x8a\xe8r;SR\x8ci6\x8d\xbd\xa9\xf6\xd1\xed@\x1f\x14\x93f\x18`\xea\xde\x94%"\xa2\xda\x16\xfeZD\xc6s\xd2\xa6\xf6|RL\x83\xda\xa1O\xd2P\x0c\x91\xfa\x8aqn\x0f\x18\xa8\xc5O\x8a\xec\xc7\xf1K8\x0b\xc8\xa6\xe6F\xcfZ\xa9\x9d\xa0\xb7\xc2\x11\xbd:\x0b6\xe2\x92h\x9b\xb5#\xe5\xbez\x1f\xd2\x9dn\xcfz\xf43\x0e\x86\xaa\xdcB\xed\xf9\x9c\x0fq\xbd:\x1d\x87\xb1\xa6\xc1\x1a\xbc\xf5\xaf#4\xec\xc8q\x82\xa2\x80\xa4\xf3\x8a\xef\x90\x8c\xc0C3\x12=\x86\x08\xa3Y\xee\x05\'\x1c\xe0u8\xa7"\\\x8e\r#$a\x97\x04})\xb0\x0c\xa7\x83O=\xe5\xc5\xa1\x11\xb1\xd4\xa4l\xc3cI\xd0\x8f\xb8\xd8\xfbS\xdd\xd9\xa4\xa4|\x0e\xb4\x97\x99\x81\xea\xa8\xbb\xdb\xe8\xad\xe1\x96id\t\x1cjY\x99\xba\x00;\xd4;\x8b\xe4\x0b\xb1%\x9be\x03\x92~\x94\xb8\xe0.\xc0\x01Q>&\xd7\xe0\xd0\xf4\xe9\xee\xe5\xf5\x11\xe9\x8a1\xd6I\x0f\xe1Q_\'\xfe\xd4\xbd\xd45\xcb\xa9o\x97\xcc\xb9\xb9\x94\x90\xacp2F\x00\xc8?\x84t\xc5h\x1a\xf6\xb7\xa9k\xba\x9d\xc4\xa8\xb1}\xda5Ao\x14\x8e\x17\xcbBr\'\r\xc8$\xf7\x1dj\xab\x16\x9b\x0e\xa1\x7f3\xa4\xc1Li\x81\x81\x96f\xc7\xfa\x99<g=F+\xd3|3\xe1v\xe9\xd6\xa9yp\xc3\xf1\xd7\x0c\x0b\xc6\xc0a#\xcf\xe4\xdf\xbf\xbdj\xba|i\x00et\x18e\xdd\xbb\x83J\xc3q\xaa[\x9bq\x06\xa0\xd6\xe65"\x11o\x19 \x9c\x9fK\x9e\xb8\x07\xb9\xab\x96\x95\xf6\xc56\x97<vZ\xcd\xa7\x99\xe8\x05n 9\xdc:z\x94\xf7\xfaVk\x7f\xa8%\xa1\x969Ze\xb8\x87\x82va_?\xc4\x08\xe3\x06\x9c\xe9\xd6ZK\xda-\xf3\xc6\xe6I\x00\xda\x8e\x14\x9e=A\xa3\x1d~\xa3\xa1\xadwV\xf0\xefL\xea\x89\x13\xb2\x85\x9c\x90\x16d\xcaH\xa0\x0c\x10\xc5y\x02\xa3\xcbo\x89\\4yNq\x9d\x8e}\xab\xe9[\x0f\xb4/\n\xea*\xa7\xf6\x8aD\xc7\xf8e\x063\xff\x00\xfdU\xb2\x1b\xab{\x94\x0fmt\x92\xa9\xe9\x86\x0c?\xa5|u&\xb2\xeb.\xdb\xad=\x1e5\xc93\xf4R?\x87\x8e\xd8\xe8jWO\xd5\xe1\xbaEK\x08\xa70`\x8b\xb6\x82M\x866<\xa9R\x08\xc0\xac-\xcf\x84\xa6Yf\x8e\x1e\xa0\x1bF2e]/\x82q\xca\xd7_\xa4)Udf\x19\xed\xb3\x0f\xed__[\xde4/\x89\xa1\xdc\x87\xf3\xa4u\x9d\x1e\xcf[\xd3\xaf!\xb5\x9bc\xc9\x1eB\xf4!\xd7\x95a\xf2\x08\xcd|\xc4\xbe \xd5 *\x0e\xab|\x9b\x00\n\xab!l\x01\xef\x9e\xa6\xad\xba^\xb1\xaaX\x18\xae\xa4\xd5\xde\xe5f\xf5\xc6\xca\xe4\xe1\x08\xe4\x10{\xff\x00j\xb9\xe8\x1d\x07\xac\xc2\xd0\x0b\x8b\x8b)!IC#\xb1"h\xceq\x94`\x07\xe9Tw\xf6\x1eN\xa2\xa5\x8b\x15>\x95\\\xab\x003\xb85\xf5\x1f\x84uV\xd5tKG\x95\x87\xdebO*\xe5z\x15\x95=,\x08\xfa\x8a\xb3\n\xa3\xf8\x0e\xc8Z\xe9\x06w\x97\xcd\x9a\xf2F\x9aY\t\xcb\x12\xde\xf8\xf6\x1cU\xdf5\xeb-\xab>\xa03\x81\x9cq\x9e\xf5\xe7\x84*\xb3\x859P\xc4/\xd0\x1d\xab\xaa+\x9c\xd7\xb9\x14\x9a+\xda(\xcd\x14QE\x14QE\x14QE\x14QE\x14QE\x14Q^d{\xd1\xb8{\xd1E{EpdQ\xde\xb9\xf3V\x8cQ\x9aV\x8aD\xcc+\x838\xf7\xae\xe2\xb9\x9asE23\x8fz+\xbaMsU=\xa2\x8a)4\xaa(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xb9\xafI\xaeI\xa2\x8a\rrh\xc8\xa0\x9a(\xaf(\xa34f\x8a(\xaf(\xc8\xaeK\x00\t\'\x18\xa2\x8a\xa3x\xc7\xc7\xbaW\x84`\x94\xdc:\x99\x96=\xe1\t\xc6s\xc0\x1e\xf9&\xber\xf1|w\xde\'a\xe2k\xf9\xaet\xfb\x0b\x18\xe0\x9eX\x83m\x0c_\x04D\x9f\xcc\xc7\xde\xb4\x0f\x12\xda\xe8~*\xd6\xeec\x8fR\xb73\xab\xb6\xe06\xbb\xc6\x91\x1c\x923\xd0\x93\xc5c~4\xf1\x8f\x87\xad\xf4\xd8\xf4\xfb\x0b\xa7\xbd\xb4\xb4p\xd2C7\xa4<\xa7;\x88\x1f\x07\x9c\xd5e\xf2C ?\x88\x11\x98\xd0\xe6<\xff\x00\xbcm\x9a\xd2\xf4kf\x91\xa3\x16\xeb\'\x9c\xdf\xfb\xad\x8d\x82\x1e\xc3\xb6\xf5K\xfbM\xf1\xd4w7\x96\xb7\x9aM\xf9\x8b\xcd\x83\xc9\x9dU\x8e\xf21\xf8[>\xdd3UM\x7f\xc7z\x96\xa9m\xa6\xdb\xdf\xdd4\xed\x08\x8c,\x91\xa8\xf5"\xaf\xa7su$Vq\xa9L\x9a\xae\xa14\xfb\x02F8\x00{\x0e\x9fZua%\xed\xe2Z\xd8G\x05\xbb"6\x11\xc8\n\xdb\x8f>\xa6\xefU\xb7\x13\xbd\xc9\xb9\xc37\xf1P\x06E\'\x07\x1cV\xc2>\x97mc\x15\xbe#Vd9V8$g\xe6\x99jF\xed\xb5O\xbc\xab\xfa2\x19G\xf1\x02*\xddae\xa8x\x86\xeeK\x85\xb3y\xa2U\x12L\xff\x00\xc8Uq\x92G^;V\x87\xe1_\xb3\x99u\x1d/N\xbf\xbb\xb3y\x96}D\x99<\xb7\x00\xad\xb4$,\x8cA\xe89\xe0\xf4\xad\xb6\x0b}?\xc1ZV\xa3>\x9d\xa4\xc9\x1c7\x8a\x92\x8b\x087J\xf1\xc1\x92\x16\xe2w\xed\xe6p1\xc0\xdbS:m\x85\xd1T\xf3\x0f\x95\x08\x8c\x12q\xc8\xc1\xc6\xdf\xd6\xa8\xfa\x9fQ\x867\t\x08\xf3e/\xa4\x0c\x8d\x8epA=\xab\xe6\xed\xad\xa5\xe9\xd7\xb6\xb6\xf1[\x0f.\xec0\x92fU\x9f\x05A9\x19<\x1f\xce\xa2\xe7\xb5h\x0e\x9fy%\xbf\x91\x1d\xc3\x16\x08d\xdd\xbb\xe4\x0cp9\xe2\xa5\xae\xfc/s}\xa8=\xc4\xae"\xb5\x17\x18\x9aR\xa4\x0f0z\xb6\xed\xc99=~\x94\xce\x1dZ\xde\xfa\xe6\xea\xda\xd2\x08\xa0\xb7\x0e\xd1\xe6oQ\xdb\x93\x92\xbf\xcb\xd3\x809\xaai\x96T\xd8\xc4\xe5\x8b\xe1u`.\xc7\xf3o\xbf\x1cU\xec\x05<\xb2<\xc0\x0f|o\xbe8\xda\xba\xb9\xba[\xa5\x82+\x92\xf1\xbazd\x8b\x80\nv\xc6:\x1a\\\xe9\x9aL\xab\x02-\xfc\xea\xcc\xa3\xf7l7\xe0\x9f\xf7\nB\xce\xc6\x01\x1c\xd2\xbc\xac\x81\x7f\n*na\xdf\'\xd8}i\xee\x90\xd6\xfa\x84L\xee\xeb\x04\x90I\xb6E\x00\x97\xca\xf3\x9c{Ue\xc3]e\xb4C\xf9\xc69\xc1\xf8\xcf\x14\xe8\x8fP\x05\x8f\x15\x1b?\x88\xb5\x1f\xb3\xedF3\xa7\xdd\x03\x1c\x982B\xff\x00\xe9\xb8\xf7\xc7c\xf3_Dx\'\xed\x86\xc3Q\x86(\xcd\xe7\xdc&~<\x99X\x18\xc9\xff\x00k\x1e+\xe7o\x10XY\xea\x0c\x86ks(\x9d\xb8\x9d\xf2\x08\x00\xff\x00\x0f\xb0\x1d\xea\x12k\x87\xd2\xb7Y\xe1\x1e\x1c\x0cn@r=\xf21U\xad\xd2,\xfa\x84I1\x92\xe2\xd6\xf9\x14\x8f\xc5A\xe9c\xed\x9c\x11\x91\xf5\xa8\xd7\x11\xb8V>\\r\xc5\xddN\xf5\xf7\xfax\x9a\xfc\xa0d\x9e2\x0f!\xc2\xa9\xeb\xf3Mg\xf1\x1d\xeb\xeeI\xee\xcb\xc7 \xc1\xdd\xce\xd2\x0eA\x1e\xc6\xbe(mKU\xd2#2\xdaj\xd7\x10*\xb0\x11\x88\xa5\xdc\xa0\x91\x9c\x15\xe4\x1ao\'\x88|I\xe4\xc5-\xdf\x88\xb5\x19D\x92m1G&\xcc|>\x06ERM\xe1o\x12H\xc6/\xfe\xa3\x9ah\x8a\x95\xd2^L\x90F\x0eW$q\xefQT\xd8/\xa8\xda\xa2\x9c\x8d\xf4\x8e~\r}\xd5\x0f\x88?h1\x8a\xe9\xd6FS\xe9\x90\x0fP\xff\x00\x9av\x18\x03\xc1\x04v5\xf9\xf3\x07\x8a\xb5\x9b}ON]7Zt\x99$\xc1\x90J\xce\x8a\xeb\xc9\x8f\r\xf8\xf8\xe3\xd8\xd7\xd5^\x0b\xfbG\xb3\xd6\xda=>\xfc\xc7m\xa8\xf4\x0b\x9cG1\x1dLD\xf3\x9f\x83\xcdf\xbcW\xe1\x0e\xbbk\x02\xdf\\\x16\xbb\x00\x7f\x12\\\x13*\x81\xdd\xf9\xc8\xf9\xe4R\xa0{Y\xb2\xb0)U\x1c\x0c`\x1f\xa5l \x8a\xf6\x9a$\x9d0x\xa7*\xd5\xe6l\xa5iL\x85k\xba1\xf3FiE u\\\xd7\x14\x06`\x0b\x05\x1e\xe7?\xda\x9b?J\xf1U\xb6\x93\xd0{\xd7\xa1s]\xe4\xb63\xd2\x94P*j\xda\xac\xa5tj\xd2\x17\x96\xe4\x9f\xec)\xb2\xc4f\xb9T\xa7\x0b\x18\xaf\x14R\xb9\xc8\x03\xda\xae\xac\xecb@u\xae\xe0m\xf2i\x86b{\xd7\x9b@\xaf0=\xab\xba\xf2\xac<\xa4\x03\x01\x00\xa4f\xb8\xc5xE)\x8a\xf3\x14\x86\x88{Ws^\xc0L,\xd2l\x0c0F\t\xa46u\xa5\xd5K0\x00rx\xc5z\xcaT\x95#\x04\x1eErKv\x96\xd6\x14(\xdeLn\xd8\xdbmo\xb9\xdf\x1d\xc0\x1b\x1a\xe0`\x18\x9e\xe4\x0f\xd0S\x7f/\xe2\xba\x11\xd2\xe0W@Tt\xe9\x91\x926\xdf\xe9]2\x1am\xe4\x8e\xf5\xe1\x84T\xa4v\x92J20)\xe2i\x83\xf8\xdc\xfeUum\xe0\xdb\xdb\xd0\xa6+/I\x19\x0c\xd8Q\xfb\xd3\rv\x91\xf2\xfb\xfbUm\xa2\xa4\xbc\xa6\'\xa5X\xaet\xf6\x8b\xd4\xa7r\xf7\xf7\x14\xc0\x84\x18\xc0\xedU\xd7\xbe\x14\x96\xcef\x8e\xe1|\x96\\m\xd9\x81\xee\x0fzz;\xa0\xea\n\x9c\xd4Y\x89\x87jH\xc6A\xe9RlT\xd2L\x07j\xaan\x8c\xb9!$c\xf6\xcdHY[\xda\xa3\xfc\xa6?\xc3K P\xb8\xdb\xcf\xb59\x039\x19<\xf5\xc0\xa0El\xa72\xcc\xc0\x0e\xd9\x00\xd5\xa5\x97B\x95\x182\xb2\x00F\x18\xca\xca\x00\x15\xd3.F\x0e~\x00\xe6\xb8P\xa0s\x81\xedN\xa3\xcb\xf0\x8a\\\xfcT6\xa1\xe2?\x0fh\xf1\x19.nm\xe2\x1f\xcd3\x81\xfaf\xb3\x9d[\xed\x9fJ\x89]4\xe8\'\xbc*2\n/\x97\x1f\xff\x00\xc4\xf8\xfe\x82\xb4\xd6\x96Vql\x935\xc9\x03\x18\xb6B\xc3?.\xd8Q\xf7\xae\xa5\xad\xd5\xc7\xe4\x81\x87\xcbm[[Iw\x1cAd\x9dcO\xe5S\xcf?J\xaf\xeaZ\xe6\x91\xa4\xc6\xd2\xde\xdf\xc5\x12\x8f\xe2\x91\xc2\xe7\xe9\x9a\xf9W_\xfbN\xf1\xa6\xa5\x94\x8ex\xf4\xc4bF#R\xf2c\xe5\xdb\xa7\xe8*\xaet]J\xf9\x8d\xcd\xc5\xe5\xd5\xc4\xaa2\xf2J\xdb\x99\x81\xe9\xb47o\x9e\x95v\xf6Ww-\x1a?\xf0p\xa3H\x95\x9ay\x00\xc7\xb6\xca\xbfl\xd4\xebn\x8d\x80^I\x14\x0c\xef\xa0\x01_K\\\xfd\xadxb\x16\xfd\xd5\xc4\xb2)8\x0e\x90\xb9S\xf4$\n\x87\xba\xfba\xd2bR\xc2\xda\xfd\x86p1\x10P\x7f2\xd5\x8a[\xd8\x89\x88]\xea\xe0zc\xe7af\x003\x02\xa7%Ts\xea\xe8M\'\xe2\t\xec\xac\x9a\x08m\xef-\xee& \xbc\xc5\x08h\xe1\xf6PG\xa4\x93\xcfN\x95*O\t\xc8b3\xc9\xd4\xa71)\x00\x930\\\x9e\xfaB\x81\x9f\xb5K[K\x14`\x826.F@#?\xaf\xb5iS\xfd\xbcY\xab\xec\x8bK\xb9s\xfe\xe9\x11\x7f\xb04\x83\xfd\xb9\xdd\xecfM\x08\x90;\xb4\xc7\xfc-cVZLW\x17\xe9\x11\xb4g\x92E\x0e\xb1\x81\x8d\xaaF\xe0\xd8\xe4\xed#\xbd^W\xc0\x97\xd7\x02\xdbe\xba\xacL\x87\xf7\xcc\xa4\xa09#\xaf\xfc\xd7S\xc3\xf0k\xd1\x1cW\xae\xc0\x02\xd9\x9aQ\xb1\xff\x00\xf6\x14\xb3\x15\x8cj\x0c\xa8\x8b\x9e3S\xa3\xed\xdbZ\x97!4H\x10\x03\x8fT\x8e\x7f\xc0\xa4\xe6\xfb]\xf1\x84\xe8\x1a\x0b{\x18\xc3\x03\xfc,\xc4c\xdf-JC\xe1\x85\xb1\x81\xd4X\xfd\xf69\x11Ig\x8b([\xbf\x07\'\xf3\x06\x9aE\xe1I\x98\xc4\xabdIv\x061\xd0\x85\xf6\x18\x07\xad75\x94\x11H\xb1\xad\xbc\xec\xc7l\x17\x91\xc7\xc6\x0eNs\xf1N\xc7\x05\x89Fm\x11\x80\x07\'\x1f\xdf\x8a\x89\xbd\xfbA\xf1\xec\xed\x1a\x9dqB\xc8\x01"\xd2\x10\n\x83\xd8\x96\x19\xc8\xaa\xad\xfe\xa9\xe2+\x9b\xb8V}gQ\xba&B\xbe\xa9N\xd2q\x90\x02\x82\x01>\xf5\xb9?\x85\x9bB\x06\xfeM>\xd0\x989{Eb\xe5\xf3\xc8\x04I\x92\x00\xc7\'\xbfj\xa4K\xe1\xedWU\x9e\xd2\xfa\xed`\x84\xea7.C!\xf5\xc2Q\xc1#\x1c\xfa\x8er3\xd8U\xff\x00\xfaL\x16\xeac6\x91\xfe!\xb7\x08\xab\xf9S8\xd4I\xdfrqU\xc9426\xa8\x88\x10\x8d\xb5\xfb\xb0\x19\xc0\xc7\xc0\xcdgw\xde7\xd4t\xe9\xed>\xef\x1cj"\x8dZ\xe8\xe2=\xcc\t\xc6\xd0\x1c\x1c\xf3\xd4b\xba\xbe\x97P\xd6\xee\xe1\x12\xdb*e"\x96h\xe2\x8dc\xf5\x05\xca\xee*\x07\x01Nj\xb9\xaa\xe81\xcbv\xd3\xc8\xeevL\xd8\r\x82\xdds\x96\xab=\x9d\x9d\xfc\x96S\xdfyc\x07\x1bd\xdd\xb4\x80\xbc\x00\xa3\xfe9\xa6\xcc\xd0\xda\xd9Eo\x03\x15\xc31a\x9d\x98\x9c\xe7\xfe*zB\xd2K\xad\xa3\x1c\x0cm\xb8\x15l\x83G\xb0\xb9\xd3\xeeg\x8bN\x95V\xd5\xc1/$\xa1\x92@\xa3\xd5\xd0g<\xf5\x1ct\xe2\x97\xd2b\xbc\xb0\xb3\xbc\xbb\xb4Yl\xc43\xaci4E\x97+*\x82\xd1\xb6\xe5\x05\xf8\xc1\xc05\\\x8a\xda\x08\xec\xbc\xdb\x92\xd2L\xe7\xcb\x1b\x1b\xd3\xe6\xa9\x1b\x81\xfea\xb7\xae:\x1cR\xd3\xda]-\xa2]\xc1t\xc8\x8b(_ \xcaN}9\x0cP\xf2W\x04\x80i\xa7\xb8`T\xaa\xb4r\x08N\x96L\x02\x08\xc9\r\xb0\x18\xa9\xad\x08\xc1\x0e\x03!}\xc1\xc9\xc8\xf6\xa7\x17\x91G\xa8\xc8e\xba\x85ndc\xfb\xc7\x94\x9d\xcc@\xc6I\xeb\xcfzzt\x15\x85\xed\xbc\xbbe\x85bpC#\xb60O\xe2U\xe0\x8c\xff\x00Z\x95\xb7\xb6\xb7\x82;dy\xed\xa4\x86\xe0\xff\x00\xfa\xb2\xce\xaa\xa9\x8e\x1b\xb8\xe0\x82\n\xe3vx\xaf`\xf1<ZzO$\n\xf2\xed;s"\xe6<\xb7 \x1c\xf4\'\xb6**O}\x04\xab\xe79}|\xb6rW\x1b\xef\xef\xf6\xa5Ik\x04\xa8DH6\x1bv\xcfaPw\x9ae\xfd\xa5\x94\x92_\xe9\xb7SG\xb5\xfe\xef,\xa1\x15\x8f>\x86\xdc\xd9\'\x81\xca\x9c\x83\xda\x9fxC\xc6\x1a\xdf\x87\xed\xc4iw+D\xae\x7f\xe9\xb0\x1a5\x07\xd8\x1eG\xe5\xc5T\xf5\xbf\x15\xdej\x97j\xd7\x0e\x00h\xf3\x1chI\xc7\xbf^8\xe9\x9e\x94\xf3H\xd1\xae\xaf\xde\xdf\xee\xa9!\x96X\xdeTE.\xc5Hl\x0c\x86\x04\x9c\xe3\x903S\x9e;\xdb\xf9UR"\xc50C \x1a\x8e\xf8\xde\xa2\x8b{{x\x88\x98\xaf\xa8n\x1b\x81\xfa\xd7\xd2\xbe\x1a\xfbF\xb2\xd6\xc1\x8eh|\xb9B\x86\x1b2C\x03\xf0y\x075v\xd3\xbcC\xa3\xea\x83\xfe\x8fR\x82R\tV@\xc0:\x91\xc1\x05N\x08#\xd8\x8a\xf9S\xc9\x8e\xc2D1\xab\xc78u2\x97\x8f\xcb\xca(\xf5\x15\xc1#9\xe0\x80~\xb51\xaeZ\xea\xb7\xda\xb5\xbe\xa7q\xa6\xc7s\xa6\xc2\xb1!\xbb\x8a<<\x83qUgb}L\x0f\r\x83\xd3\xa5I\x9b\xa2\xc6\xd6\xe4\xcblV\xe27\x02V\xe0i;\x968\x1bi\x1d\xea\x9e[\x08\x1eU1\xc8\x02H\x0e\x9f\xaf`3\x8c\xe7\xda\xbe\xae\x0e\xddA\xae\xc4\xcf_ \xd8k\xfa\xfd\xa4\xb7\xcfi\xae]\xc5\x14lJ@ev\n\xa0\x9e\x9b\xf3\x90>y\xab%\x87\x8a~\xd2\'\xfd\xa7\x1d\xb6\xaf\x13\xbd\xa2D\xef\x14\xf1#\x1c9\x03\x82\x06\t\x1b\x81 \x9e\x95M\x15\x95\xbc\xb22@nN3\x82\x8b\xa9N2v$\x8fjD\xdd\x0eh\xd41\x9a\x0c\x1c~bT\xeeq\xec}\xeb\xe9\xa6\xb9`:SV\xd4\x02\x13\xea\xc5|\xed\'\xda\x07\x8e\xac\xfe\xef\r\xd3i\xb2\xcf2\x07U\x8a2\xc4\x83\x90\x06\x14\xf5\xe3\xa5p\xbfh\xbe+3\xdb\xc5s\xe1\x88\xd8\xccp\x9c\xb4A\xb1\xd7\xd4K\x0e1\xcf\xb7z\xaf\xbe\xe9\xfdQ\xc4\x82\xc8\xcb\xad\x08\x07\xccB\x00\xcf\x19\xc6i)\xd1\xddt\xeb1\x1c\x8d\xb4\xb6s\x8f\xae+\xe8\xd5\xd5\x87@\xe2\x95]N3\xc3\x159\xaf\x9f`\xfbR\xb2Yd\x86\xefB\xb8Ic\xe5\xd2\t\x96R\x17\xf9\xb1\xc7\x1f"\xa7m\xbe\xd2\xfc\x1d89\xbf\x9e\xdc\x85\xc9\x13B\xc0\x01\xd7\xa8\xcdg\xe5>.\xb6\x19\xd2\x93i\xc8\xc0\x0c~1\xb8\x14\x97\xe9H\xa4\x8f-\x87\xe9\xfd\xabl{\xdbY\x90"\x8d\xa4w\xf7\xa6\xa6\x1d\xdc\xa3\x06\xfaVwa\xe2\xef\x0f_\xb0[]r\xcaV=\x14L\xa1\xbfF\xc1\xabL7\x84\x00\xca\xdcv#\xa7\xea+?w\xd7%\xb8\x94\x0e\xa9\xd3\x8cl\x00]Q\x82\x84\x01\xf0v\xa6\r\x83B=\x04\xfd\xeaX\xa3\xa1\xe4\x11\\\xef\xc5u\x0e\xab\xb8bU\x0e)\xfc\x7fs\xb8\xc6\xc6\xda\xc7\xb1\xa9v\xf66}GH\xe9\xddQ\x0b\x9f\xfe\xd4\xc3D\x9fn\xc6\xa39\x92?\xfd\xc8\x8e=\xc6\xe2\x91\x88\xa9\xc14<\xde[`\x01O\x1a\xdd\xd3\xa0\x0c\x07\xb52\x96%\x93\x83W\x17V}B\xca\xd5cE\xd1(\xdc\x121\xab\xdf}\xe9\x84h\xdd\xb2NEz$W\x04\x1e)\x8c\xcc\x10\x9e\xf5\xd9\x88 95\x1f3\xf2@bEd\xfa\xa5\xed\xc8\x81\x16x\x95f\x07b\x0e\xff\x00qR\xe1\x8dKzNE7\x9e}\xa0\xb36\x00\xf7\xe8+\xe7o\x1f\xf8\xf2k\xeb\xa9\xf4\xbb\x18\x90\xd9\xdb\xe0\xcf,\x99\x02C\xec\x17\xbac\xa7\xb9\xe6\xae\xbe3\xd4\xeeu[{\xfb\x1d;W\x82\xca8CG,\xcc\x0b4\xcf\xf8Y#\xdb\x9c,y\xcb\xb7\xbf\x02\xbez\xd6-\xe5\xf0\xfc\x91Ax\xe9:\xc7&\x1a\xe6\x10\xc5Y\x03gqnz\xf4\x07\x18\xc5m\xbc\'\xe0\xbb\xe8m\xed:\xcd\xdc\x1e\xb9Hkd|\x10\xa0\xf0\xec7\xdc\xf2\xb9\xed\xbd_t\xe5\x85\xe5)\xcb\xaev\xc1\xe4\x7fZ\x97\xb7\xd6\x03\x08\xa4\xb5\xb3\xd9\xcc\x05Y\xfd\n\x121\x92\x18c\x19\xefR\xd3<\x85F\xa53E\x1c\x12\x92K)\xdf\x12n?\xcc\x00\xe4t"\x8b\r{\xc3\xb2\xc0\x0e\xa9\xa6\t}%\x89\x8d\xc2\x15r\x7f\x08Q\xc1\\\n\xee\xff\x00O\xb7\xfb\x8d\xdd\xb4\x05\x94\x1by^T\x93\r\x11\x85\xbf\x0b&IR\xf8\xfc$rz\xd7\xae\xdaY\x89\x95\x98\x10T\x1d[~l\xe3ee`23\x9e\r?s\xf8\xd8\x19u\xbf\xc7`\x08\xce\xe4b\xa9z\xc6\xaf.\xd5\x8e\x16\x12*\xfa\x16@p\xb2g\x93\x9c\xf3\xc6x\xaet\x8b=B\xe7QI\xca\x81\x13(Eg\'h*:\x0e{u\x15;\x7fm\xa6^D\x8b$o\xb2\xdd\x14\x07\xc8fb\xab\x9d\xc4\x0c\x0e\xbcUF\xd2\xe9\xe7\x91-\xa3am\x1bI\xfe\xab\x12\xc7\x8f\xa7L\xd3\xb7\xf0\xf9\x0b\xe6\t|\xc2\xac\x02\x91\xb7\x1fZM\xbd\xd4\x92\x05W\x1a3\xc8\x1cV\xa1\xa7h\x97-o\x7fes"M\x11\x8fp\x95\x81\xda\x806\xe2\xad\x8fz\xadY.\xb1\xe6\x00"\x8d-L\xab\x1a\x88@\n@$)`:\x9eq\xcd1\xb8\xd6uX\x84\xdat\xb3\xb2\xc3t\x17\x0e\xacA;;\x9f\xfd\xd5;g\xabY[\x8b{{\xa5c\x02F\xc3r63\xed\xbb\xbe\xdc\x9f\xadf\x8d\xdc\xf2M\xf8pR5\x99\xc3z\xb8\xdb\x80N\xfbU\xcc0\xa9\x06B\x0bi\x04m\xfb\xedZg\x884m\x17J\xd3\xe5O\xda\x0b\x1d\xd4\x10\xab\xb2\xbc\x833)<\xe1y\xf5\x8fl\xd45\x9d\xf6\x8duc\x1d\xc5\xa4.\xb3Z\xb8U(\xdb\xa3`y \x8f\xf3T\x9dG\xc5\xa7Z6\xd6\x97\xff\x00uu\x82%\xb7\x8a\xe7a\xc8P\x7f\xd4\x18\xe4\xb1\xc79\xabe\x94vz^\x9bl\x96S\xdb]\xb5\xc4y\xf3\xd0\x15*\xd9\xe8\xc0\xf7\xe6\xb5\xd3=\xa4\xf0\xbbC\x1cQ*\x84f\x00z\x81\xcf\xf9\xee*\x9e8\xde\xdeH#\x9c\xc9,\x8c\xcc\x01\xcf\xa7\x8f\xe9\xf0k\xe8\x7f\xb3\xdf\x11$\x97B\xd5T\xc6\x93\xc3\xe6,{\xb2\x15\x94\xe0\xe0\x1e\x80\xd6\xc9\xe7\x0fz\xf9\x8fI:o\xd9\xe46\xda\xa6\xab1\x95\xe6\xf4\x96^J\x93\xc8\x15\xb1xw\xc56^&\xd3c\xbf\xb4oC\xe7\xd2O#\x1d\x8dZ\xdb34j\xb2\xb8\xf3\x00\xce\t\xf5i\xecMy\xb7]\xb3\x10]\xbc\xd6\xf0\xb0\xb6\x91\xb0\xaf\x83\xa0\xb8\xe4\x03W\xb10\xf7\xaf|\xe1\xefP\x1fxj\xf7\xef-N6\x05S\x00MOy\xc3\xde\xbd\xf3\xc7\xbdW\xfe\xf2\xd5\xe7\xdeZ\x91\x91K\xd2j\xc3\xe7\x8fz>\xf0=\xea\x00\\5\x1e{{\xd7u\n\xe6\x83S\xc6\xe4\x0e\xf5\xc9\xb9\x1e\xf5\x07\xe6\xb1\xefF\xf6=\xeb\xa0\x8a\xe6\x9a\x997_5\xc9\xbb\x1e\xf5\x0f\x92{\xd7\x9c\xd0Z\xba\x16\xa5M\xdf\xcd$o>j8\xa9=\xeb\x8d\xb5\xcdU\xdd"\x9f\x9b\xcf\x9aL\xde\x1afR\xb9\xd8k\x995\xdd"\x9e\xfd\xf3=\xeb\xc3r}\xe9\x9e\xca\xf4-\x194i\x14\xab\\\xb5\x14\x9e\xca)Z\x8d\'\x02\xaeY\x1e\xf4TO\xde\xd7\xf9\xab\xaf\xbd\xaf\xbd\x18\xa4\xe4\xd4\xa5\x15\x17\xf7\xb5\xfej\xf7\xefc\xf9\xa8\xc5\x19>\xd5\'EE\xfd\xec{\xd1\xf7\xb1\xfc\xd4b\x8c\x9fj\x94\xa2\xa3>\xf6?\x9a\x8f\xbd\x0fz1FjK#\xde\x8d\xc3\xde\xa3~\xf4=\xeb\x93t=\xe8\xc5\x195$\\W&J\x8c7C\xde\xb87#\xde\x8cQ\xbdI\x19>i3(\xf7\xa8\xc6\xba\x1e\xf4\xdd\xae\xc7\xbd\x1bQ\xbdL\x19~k\xcf4{\xd4\x19\xbc\x1e\xf5\xe7\xdf\x07\xbdv\x8c\x1a\x9e\xf3Ey\xe6\x8a\x83\xfb\xe0\xfej>\xf8=\xe8\xda\x8c\x1a\x9b2\xfc\xd4f\xad4\xe3M\xbe\xfb\xb8&_%\xf6\x01\xd78\xedMM\xd8\xf7\xaa/\x8f|]s\xe1\xbd\x06\xfa\xe6\x1bY\x1d\xbc\xa2\x12Q\xf8\x14\x9e=]\xc5weR\xc4\xe0\x01\x92k\xa8\x8f$\x89\x1a\x0c\xb30\x00|\x9a\xc2\xae"\xd4|\t\xa7\xebz\xba\xc5n\xb77\xf2\xa4p=\xc6\x1eXr3\x96\xecK|W\xcbz\xad\xfb\xddMs$\x9e\xb9\x1d\xcb\x92\x06\x06\xe69\xe8+\xe8\x9dSD\xf1.\xb7\xe0Y\xb5\x06\x9a\xd5\xe0C\x10X\x9b>a\xe7s>\xe6\xe0?\xbf\xc5Ru\xdf\t\xc3\x1d\xbe\x95\x1c1\xa4W\x12Z\x96\xfb\xc1l\xac\xf2u\xda\xab\xf1\xd2\xaa.lM\xca\xa6\x8dB4@\xc0\x1e\xe5\x8fj\xf4\x0e\x99v\xb6\x86me\x1aV\x90\xa32v\xd26\x1b\xd6\x1b=\xa9\x85VW\x91ZBG\xee\xfa\x03\x9e\xc6\xaf\xbe\x19\xd1\xa5\xf1F\xa9\xa6X\xe9Z[\xc1,\x83e\xd23y\x8a\x80\xf5\x94m\xe4(\x14\xc54\xfd;K\x8a\xed\xf5R^y\x11\xd2(\xe3\xc3\x94q\xd4\xb8=\xbd\xabh\xfb%h<%\xa0M\xad\xacP\xcd\xaa\xde+5\xac2K\xe5b\xd18,\xcezg\xb5.\xda\x05&(\xf0\xbeY\x04\xcb\xdd\x80^?ZU\xfd\xcc\xec\xb2<a\x9e]\x965\xecX\xf7\xfa\x0e\xf51\xe2/\x1c\xda\xdax^\xcfJ\xb4V\xb0f\rc\xe6*\xe4\x08\xe0\x1c\xa1\xe8}m\xc9\xa9ko\x13[XxM\x8f\x8a\xaeg\xbb\xbd\xd4K46\x907\x94\x93"\x84Q\x99\x00\xfc(\x06\xdd\xbe\xf9\xaaw\x85\xf4\xbd?\xc4\xfe,\x85u\xe5\x92\x0b;\x92n\xa1\x85Xl,\xcf\xd1z\xfa{{\xd7^6\xfb\xa4\xda\xae\xb7t\xf3<v\x90J\xb1\xe9\xe8\xcav\xb6\xc3\xf8cP= \xfe,\x8e\x83\xebW\x02\xe2D\x82Y\xe4 \r\x1a\x15x\x04\r\xf5\x10x\xaa\xa9,\xed\xa4\xb8\x82\xca8\x88:\xbc\xf9$\x1b\x9c\x93\x8d!\xbd\xf3\xcdU\xe2\xd5u\x1df\xee\xe2\x14\x8bm\xab_\xf9\xad\xbd\xb7"\xc8Wn\xe3\xeeB\x8c\x00j\x8f\xa5\xe9/ayu\x1b\xc8\xb2\x04\xba\n\x02\xe1\xfc\xc6v\xf4\x8d\xa0\x82w|V\x8d\xa7k7W\xf0[\xc3\x05\xa0\x82\xca\x07&\xf6yH\x08L\xa7\x99\x1f\x1c\x9e\xdbTg8\xaaV\xaf\xae6\x9b\x7f\xae@\xf6\xb1n\x96\xe2dR\xcb\x96B2\x8aq\xed\xb7\xfa\xf3T\xf7\x1f\x86\x9a\xd5\x19\xcb6\x97\'Q\x07\x1cgj\xd1C\x03,\x9at*\xe0~\\\xfc\xe3\'\xe6\x94\xbe\xbe\xd44\xddE\x04\x82\xf2\xce8\xd0\x91\xe6\xa6\xd7b\x07@>z\x12{T~\x9f\tmh\xb2\xc6qy\xb0\xca\x99;C\x0c\x9e[\'&\x9dY\r[Q\xb3\x9bQ\xbf\xba1ZI\xfb\x98\xa3$\xa8\x99\x95\x7f\x02 \xc9?\'\xf55\x1bys4\x11O!\xb0K\x19\xad\xc2\x14\n\x1dN\xe5\xc6p\xad\x9cd\x0c\xe3\xbdW\xcb\x1f\x98\x8c\xc3 9\xd4\xa1\x86\xf8\x1e\xf8\xec{T\xc7p\xa0\xc7\xcb\x01\x8c\x8f\x7f\xbdiz\xa4\xd2$v\xed4I=\xb9\x8c\xc6\xb6\xd1\xfav62\x0eO\xbdP|K\xa7.\x9do\xa7]\x90Z\xde\xe2-\xf1\xaa\x12\xc1\t\xea\xa4\xe3\xad[\xbc=\x14z\xcd\xdc\xf2M1\x9cJ\x8a\xd1\xa1b\x02\x9fq\x8a\xb47\x84Zm>8\xee\n\x88\xa0\x91\xd3p9\x1c\xf2\x14{\x9ej\x89\x81\xd7\xe7"\xea&\\\x1c\x121\xef\xcfm\xa9\x88dm\xe3c\x8c&F{\xd6U\xe08\xf4\x8dOQ0M2C\xe4/\x99\x18\x9b\x95m\xbf\x8cn\xc8\xda:c\xbdK\xdaYEs,\xf0\xdfY\xcf\x04WL\xcd\r\xd09\x920\xb98p:\xa3\x9c\xfc\x83Q3iV\tw\xaaIf\xad\x00\x8d\x19w\x02\x01#!H\xcf8\'\xb7\x15\xe4\x11\\\xdaX,p\xdd\xdc\xcbgv8V\x022$L\x82\x99$\xed\x00\x9eI\xea+Gb\xb0\xc6\x90\xdc\x05\x05\x8eI#}@\xe3\x00\x83\xd8\xf1\xb5E\xd1\xf8\x87\x95K`l\x00;`\xf7\xc1\x15\x0f\xa9Z\xd9D#\xbb\xd3\xadd\xb4\x8a\xcbt"F`\x18\xeefa\xb7\x80FFs\x9f\xa5FM~b\x7f\xfaV\x90H#@dp7\'\x96C\x10\x8d\xdb\x07\x81\x8ey\xa9\x8b\xab/\x13kW2F\x9a{\xcb\x14q\r\x91\xa9\xc8\xf4\x9cd\x0c\x8c\xe4\xaf^M)}\xa0\xa6\x91\x813y\xf2[~"\x991\xef\x07qA\xc8\xfc\'\xf24\xbb\x89RX\xbc\xe6R\x11\xdb\x19l\x01\xed\x8c\x0f\x8aJ\xc3\xe5\xb7\x96\xa0\x12\x07\xe5\x1c\xfdk\x7f\xfb5\xfbT\x83V\xfb\xae\x91\xaa\xca\xe9rUR\x0b\x99F\xd13c\xf01\xe9\xbb\xd8\xf7\xad\xf9\x1e\xbe\x02\xb9\xd5n h\xed\xf4\xe2\xce\x92;\xcf$*\xc1\xd4+\xa8f\xcb\x15\xce\xe0G5\xf4\x8f\xd9\x87\x8f\xa4\xd5\xe2\x87F\xd5_\xfe\xbe8\xff\x00q1 \x8b\x85^\xa3#\xab\xaf\x7fz\xf0\x9f\x1bxB+S\'Q\xe9\xab\x98\xb73\xc4\x06\x02\xff\x00\xdc\xbf\xf6\xfb\x8e\xd5,\x06e\xf5\x0c\x11\xff\x00\x9b\xd6\xe8\xad\x9aS4\xcd\x1f\xe6\x97\r^TW\x06\x98d\xc1\xa7hx\x14\xb0\xa9\x1d8\xda%\xb9b\xc8\xcf\xd5\xf7u\x1f\x034\xc1\xe5\x13\xca\xce\xa8\x14\x13\xd2\xb6\xaf\xd2\xe3\xb2\xe9\xdd6\xe1\xaf\xe1\x92k\xa5\xca\xc0\x9e\xad*9%\x86\xd9\x1d\xc5@\xf3\x0b\xc9"\xf9l\x02\xff\x001\xf7\xae\x81\xae\xb3I\x8f\xad*\x14\x9e\xb4\x98\xc36\xca;\xd7\rvq\x85\xc1\xceG?\x06\x8f\x9a\x02\xd7\xa7\x02\xa6\x95m\xc9U]\x86\xc0\xd23\xf3^QF+\xdc\xe2\x91\x827;Q@\xdc\x08`pA\xc85\xeb\x12\xc4\xb3\x12I\xeak\x90hf\xc5+a\x19\x1a\x9bNs\xa7\xb6x\xce+\x989\xafA\xae\x95\xc0\xa4\x0b\x13\xd2\xb8\x05\x8e~;\xf6\xae\xc5#\xab&\x95$\xef\xdb4\xad\x19\xcdL\xc3|\x91py\x18\xeb^K\xac(\xe1G>\xddj\x8d\xaex\x9fC\xf0\xfc[\xf5-J(r=1\xe7.\xdf\xfbPrk\x1c\xd6~\xd8\xee$y!\xd14\xa5]\xb9\xfd\xf5\xc9\x05\xb8\x19\xe1\x01\xfe\xe6\xb46\xddw\xc4w\x11y\x16(\n\x02G\x9b\x8fH\xfa1\xd8\xe3\xe34\xe4=+\xcf:\x84D\x8fs\xb0\xaf\xa2\'\xbe\x9al\xeel/\xc9\xaa\xad\xff\x00\x8b\xfc7\xa5\x96\x17\xba\xe5\xa4L:\xa1\x95K~\x83&\xbeJ\xd6<W\xe2=f\xf2(o\xb5[\xb9\xe2\x90o0\xc6|\xa5\xdaG\x1e\x94\xe3\x19\xef\xedQ\xf6Z<2\xe5\xe6\x9dF\xec\xe3\xd5\xf8rG\x18\xea~\x94\x86\xe8\x97s1\x9f\xa8u-Nw:F\xb3\xfa\x9f\xf1WV\xfd\x1dt\xe3P\x1f\n?\xbd}E/\xda\xe7\x82\xd0\xed\x86\xf5\xee\x0fO\xdd\xc2\xe4~\xa4\x01Q\x93\xfd\xaeX\xb2\x93i\xa4\xde\xcd\xc1#*\xab\xd3\xeaI\xac\x86\xd3\xc36\xd7\x1eS1de\xeb\x81\xd5{q\xed\xc5Xt\xf0\xda"\xca\x92\xa5\xb6\xd9\xa3 )\x19m\xa4\x02@nFFpq\xcdJ\xb7\xe8\xb6\xf3\xb2\x96\xb8\xb8\x11/\xe7f*\xa0\x7f\xfc\x01y\xa9\xa7\xa5Z@\xa3*ds\xc2\xe7\x19\xa7z\xa7\xda\xf6\xbb$a\xact\xcbuS\xc1vv\x93\x1f\x92\x85\xe6\xabM\xe2\x9f\x18\xeb\x96m<\x9a\x8bA\x1b>\xcf\xdc\x81\x1a\x83\x8c\xfe.\xb9>\xd9\xcdX\x84Ztq\xac1\xc6m\xe2\xb9#\xcc\xf2\x93xr\xb9\xdb\x90\xb8\xdcFx\xaa\xda\xe8\x17+y\r\x9c\xd676\xc5\xee\xc2\x16\xf2HE\xde\x06\xd7\x0f\x9eA=TsS\xa0\xe8\xb6r1\x10Z+\xb2\xff\x00\xf7$\xf5\xe9c\xdb\xd6I\xc5J\x8a\xde\xde\x12\x7f\x86\xa9\xdc\x0e\xf8\xaa\xff\x00\xdd\xa4v\x06\xe1\x9awl\x9d\xcf\x97={\x13SPi\x90\x18\x8112\x81\xca\xaeq\xbf\x9eT\x9e\xa0|\xd4T\xe2o4\xc4\x923\xca\x1c*H\x84\x01\x81\xdbcs\x93\xed\x9a\xb1&\x9b\x1a\xdf<\x1a\x8e\xa2\xd6\xed\xb71\xc7\n4\x8c\x0c\x802\xa9\x0c2z\xe0\xafQ\xd6\x96\x96\xb7\x0c\xe9\xa2X0\xad\x86%\xb0\xa0\xf6\xcev\x1cU\x9b*\xa2\xe0\xa3n\xb9\xc0\x19$\n\x8c\xbb\xd1\x93T\xbd\xcf\x96\xed8%\x96>\xd9\x1e\xfc\xf6\xab\xee\x8d\xa5\xbd\xcc1#X\x8b\xb2\x81Qa\xf3\x8cm\xd7 \x009#\xe3"\xaa\x90Z\xeb\x16+\xb6\xf5b\x8ecr"m>V\x11J\xa8\xca17?\xc2s\xdb\xdb\xa5j6\xde \xf0\xb5\xf6\x90\x92[\xdc%\x9d\xccH\xb0\x80P#)@\x07$`:\xb1\xf7\xe4f\xac--o\x92W\x9ai\xf4\x14\xc9]L\xa7X\xe4\x8d\xf2\x03\x0cpj\xae\xf4\xaa\xc6\x12(\x99\xd5\xdb\x1a\x94\x1fO\xb18\xdf\x1f5B\xf1\xfe\x91cmi.\xa7\xe6\xcf\x15\xfc\xae#$\xc2!m\xac\xa13\x81\xc8\x1bT\x81\x93\xd2\xb1Amu}wege\x1c\xb2\x99Dg\x022If\xea6\x01\x92\x07oz\xd7\xbcc\xacO\xaf\\\x85\x98\x99\x82\xed@\xf2\x1e\x01\x03\xf9\x8fa\xefT\xfdCG\xfb\x83Y\xfd\xda\xfe\xca\xecH\xcc\x19\xe0\x98\x10\xa5NF\xe68\xc6z\xfcU\xac\xb7\x91\xde\xdc4\xa9\x07\x99\x12\x10\x19\xb3\x82\xc7\xdf\x93\xbbRm-e\x8e\xda8\xa4\x94\tH%G \x0fn\x06\xc2\xa3\xf37\x82u\xe6\xb4f\x170\xdc\xaf\x96gL\xc6A\xc7m\xa5\xb6\xaeO*N~\x95\xa6Zx\x9fUX\xec-m\xc3F\x979T\x01\xc6A\xc9\xdd\xca\x9c\x80;\x82>k-\xd6\xe6\x12\xcbo\x06\x9d\x01\x8a\x1e\xa0yi\x1f\x9a\x9b\xce\x0f\xa3w\'\x1e\xa6\x1dqV\x9bsp-\xde?\xbb\x04\xb9,\x11ea\xfb\xc1\x81\x9c\x0e\x9c\xf3L\xf5GD\x9ai-\x0bB\x0cD\x10\xaeI\x19\x19\xdc\xf7\xa2\x1boB%\xd2\xac\xac\x08\xc1 r6\xe3\xb5oV\x93Y]\xd8Cnu\x02\xf2*\r\xc5}9u<\x82\x07,\xa7\xe2\x9d6\xa3\xa7Z\xc8\xb0M\xbc\xce\x98\xd8a\xfd\xdb\xfa\x86@!\xab$\xb1\xbe\xbb\xd3\xbe\xea\xd7\x97\xdbE\xbcM\x86\x8518\xc2\xf0;\x03\x92?\xaej\xa7w\xe2\xfdE/\xec\xf5K\x85TK\x96v\x82=\xe7\xcc*\xa7\xab\x0ex9\xcd&\xdb\xa8\xdc\xcb\x16\xb8"\x0f,\n\xab$\xa0d\x04\x00\x0c\x90O95\x02^\x95\x1f\x98\xca\xd2\x9f*BYW\x8fQ\xed\x91\xda\xbe\x86M]C\xfd\xe2\xfe\x07&\xf3e\xbcrH\x07\x9b\x12\x86\xee\x07\x04\xf3\xfaUC\xc6\xba\x0c\xfa\x03]\xc9g\x7f$\xa2;#*+\xb0\xccfF1\x82\x15}\x83\x1c\x9f\x9aN]n\xe9\xe2\xd3\xae\xef\xb4\xc9u\x01r\xbb\xac\x18K\x88\xd3\x18%\xc2(\xe5\xb2r7qQ\x89\xa9\xc2\xb3^}\xfa\xd1\x91n\x12h\x9c\x89rTH\x84\x10Cs\xc1\xe4{T\xa9nad)!\x7f<\xb6\x16GVG\x8c\xb0\xc9,\x06\xc41\xdcnv\xa6a\xb6\x9a&\x0c\x9aV0\xa7TjU\x95\xf4\x9c\x00\xb99\x1aF\xdcsY\xbe\xae\xa9q\xe1m+|\x90\x97\x82\xe4\xc7#\x80\x01\x01\xd0\xb0RG<c?\x9d?\xb7\x8e\xe3L\xd1\xf4\xa9\xef\xad\xe5\xf2&\x8d\xde&\x8b\x0c[\xd4AY\x00\xc6\xde\xe4r\t\x02\xa2\xfcDmD6P[\xdc\xc8\xf6\xbfw,\x11\x10F\xa9;\x0e}]X\xf02\x7fJ\x89\xb0\xd6\xcczt\xb6\xf7S\xbf\x9b\xb8\xa7\xe2!\x8a\xb0\xc6\x0f\xf6\xaa\xf9\xde0#\x7f\'\xcc\x0b\xa5B\x8c\x1d\xf07#\xbdZ\xdb\x12\xb9\x05\xf4\xe4\x93\x92\x08\xdb\xdb\xb6)\xed\xfe\xac\xb7\xb9\x1eC$\x89:\xc9\xb9\x7f\x01\x025F u\x05\x8a\x83\x8e\xd58\xb3Ms\x05\x8d\xa5\xec\xa9\xe5\x99?q3)\xc2\xab\xe1J\x9f\x8e3\x9e\xd8\xaaU\x85\xfc2\x85\xb61\xc6Sy$c\x0c~\t\xf6\x1dj\xfbg\xa9.\x9e\xd6\xb7\x1a}\xc9i!\x88\x99!\x96<\x84\xff\x00\xd8\xc79\xcf\xc6\r7+I5\xc6\xa7q\x86\x00J\xa4\x01\x95\xc8\xe0dg\xedR\xc3\xa2\xc5\xa5Fq\xf9\x0f\xb1\xc7\xbfj\x83\xbf\x7f\xb8^\xde[%\xc7\x99\x126\xc6\xc2\xe3~\x1b\xf1z\x86@\xef\xcf\xe7QW\xb2\xc0HPB\x06\x00\xe4\x9e*2}R]CQ\x91!\xdd;I(\x8f\xd1\xeb|\xe7\x9f\x7fQ\'\xbdm\x8f\xa6i\x1e\x1a\xd0\xce\xa5.\x97\x04r\x0f-^+\xcd\xb3\xdcH\xe0\x15(2p\xac3\xce\x06\x0e)\xfb.\x8d%\xd8\x96c \x868SQ-\x9d\x878\xfb|\xd4y/c\xb7\x11 \x1ec;i\x00\x11\xcdU<"\xbao\x86\xad\xee\xbcA}ak|}Q\xc3$\xb3\x02\x01q\xb7`\x8b\x1c\xfc\x9c\x8d\xb9\xcdL\xd9_\xc5\x1f\x85u)\x92\xe5\xe1\x9e\xdfU\x99\x80\xde\x19\xa3\xb6\x9a0p\x1c\x00\x0f\xa9\x00-\xdc\xd6y\xaei\xd1jf\xee\xc8j\xe5\x1fj\xdc\xd9*\xba%\x9a\x97\x1b\xda6L\x90\x1b\xa8\xc0\xcf<U\xb3\xc2\tt\xd0\xdd[\xc2\x96\x97\xfb\xac\xc4\x8d\x1b\xabF\xc8#B\x19\x95G\x07\x00\xe0\x8ex\xad\x87O\xb8khl\xa17\n\x15\x96H\xc0P\xba\xb5c\x05\xbd;\x9e\xd8\xaa\xc9\xe1\x8aI.\xa6h\xc9`\xd1>\xed\xb6\x01\xd9p\xdb\x01\x82sL\xed\xfcV\xda\x82"^\xaa\xc9<\xf2.\xdb\xcb\xb2R8\xe5\x97\x96\xcb1\xe1x\xc0c\xc6:\x0cS\xd9u;\xab\xa9l\xe0\xbd\xbbqg\x19\\\xacJ\x1fd`q\xb0\x0c\x03\x91\xd0\xfbTl\xfe\x15\xb0\xb6\xb6\xd3u6\xb7\xb9\x92\xce\xf1N\xf5I\x00\xcbC\xb5]\x149`\t\'\x83\xdb\xb5\\\xe2m\x12\xc8\xc9>\x93~\xb1\x89\xf6[\x98\xb5\x05F\x8c\x02\xbb\x8a?\x07p\xc8\x18`\x00\x1c\xd5GR\xba{\xe9\x824\xaa\x00\xd3\xe6.\xac\x17Ldlp\\|\xe6\xac\xa1\x82\x18c\x1eTL\xc0\x02\x15\xb1\x90\xac\x0e\x0e\xe3:O\xc6)\xb4\x1a~\xae\xf6d\xd9C\x1c\xb0\x1d\xf71\xb4r\r\xf1 ;J\xc8\xbb\x81\x18\xe3w\x15e\xf0\xab\xdb\x1b\xf0\xcdz\x96\xc9\xe5\'\xde<\xe9#E\rtXM\xd7\xf1~\x1c\xae\xdc\xfc\xd4\x02k\x11Z\xcb\x16\x9d5\xbd\xa1\x8e\x08\r\xb5\xf1\x11\x80\xb2\x05\x97 \x8d\xb8\xce\xdepG4%\xb7\x86\xf4\xfd6+\xbb\xb9\xd4Zy\xeb\n\\\x1623\xc4U\xa4 F2\x01R\xc0\x1c\xe0\x82*WO\xb7K{\xa8^\x06R\xa8\xa1\x9d]\x82\x84+\xbe\x17m\x80\'\xbdF\xbf\x0f=\xb4\xa9*\xe92\x12#h\xd4\xb1 \xfb\xef\xb9\xc7\xb5f^#\xf1\x16\xa9\xe0\x9f\x12D\xab\xe6F\xd6\xd6\xd1\xc0\xf3Dv\x15\x9e3\x82X(\xe40\xe4\x1e\x98 \x8a\xac\xea\x1fhSj\xad\x03\xde\xea2\xcf\x1d\xb6\xff\x00&\x12\xb2\x05\n\xc4\xf4*\x14d\xf7\'\x9a\xb4x\xa3Z\xd35{-5D~}\xd5\x92\xb4"t;\x92xA\x05\x01\'\xd4Br\x06y\xc6\x05P/\xf5\x8bK\xb9U\x9b@\xb6\x82=\x825\xdaX\r\xcb\xd4\xf3\xef\xedR\r\xcd\xbb\tm\x96 \xd0\xea\xc9\n\xec\xb9\r\xb9\r\xa7\x19 \xd4&\xb3\x9d\x9dfi\xd9%\xd3\x8c\xe9V\x00\xae\xc0\x8c\xf0\x08\xedR#\xc60%\xd6\x99\xa8\xc7x\xd1\xca\x02\xac\x86\xdc\x91%\xbe\xd3\xb3\xd5\x90\xb9\x1by\x18$\x9e\xf5s\xb2mC\xc7\x9a\xcd\xc3K\xab[\xdbY\xe9\xd6\xf2Bu3\x07\x94\xb2Z\xc6A\x1b\xd51\x9ep\x14VOy\xa2\xda_\x98>\xe0\xc5K0\xdd\x08Q\xbbq\xe0\x01\x8e\xbc\xf1V8\xf4\x1dWEAm%\xc3\xd8\x97\x8d\xa2\x92\t\x15\xa2;G;[p\x1djH\xba\x82+5\x86\xd6\x06\xf2\xcb\xa9\x95K\xb6\x96\x1f\xed$\x9e\xe6\xa1\x0b\x0b\x96\xbc\xf3\xa6\xba\x0c\xe23\xe5\xb6\x85\xc8\'\x92\x06;\n\xb3\xb7\x86\xd2\xfeX\xafe&+I\x12o\xbb\xc8\xfbr\xfeY\xc7\xa8\xe4\x0e\xbdO\xf4\xae,e\xd6\xb4\x84I4\xcf\x12\xddZ\xf0]\x91\x0c\xb8\\q\x82\x0eW\x1f4\xbe\x9b\xaajvv\xc6!\x1cR\xc06\xb6\xd6R\xc8\xac\x7f\x8b\xff\x00\x9e*\xe5\xe5\xf8Zm\x0bP?t\xbd[\xd0\xca\x04\xd1\x94\xf2\xa32&v\x1c\xe4\xe0\x10zu\x1dk.\xfa\xaf\'ko&\xdd\xa3*\xec\x04\xa3P8\x19 \x01\x91\xdbj\xbc{`\xb1\xf9\x8c\xac\xe4\xb8R\x10q\x9d\x81?\xde\x9e\xd8}\xaa\xf8\x97I\x92858\xed\xaf\xb0\x8aX\xf1\x1b\x90Fr\x198\xfdEi:_\xda\xd7\x86.\x84f\xea\xe2M9\xdb\xa7\x9d\xea\x8c\x9f\x87L\x8f\xd7\x15\xf1\x86\xb9\xf7\xb8/\x0c;\xc0U\x94\x13\xb7\x0e\xb8\x03\xd2\xc0\x8f\x7f\x9ami{rn\xa6\x8dU\xe5+\x8d\xb9\xf7\xc7?J\xa5\xbe\xf0\x1f@\xbc\x8e9\x92\'\xb6v\x00\x93\x01\x0b\x82\x7f\xed\xe3j\x810BY<\xac\x11\xdcq_\xa6\x1av\xbe\xb70\xa4\xd0\\\xc5u\x03\x80U\xe3p\xeaA\xf9Rj\xc0\xb76\xd7P\xf9\x83\x82\x0e\x1b=W=3\xf1_\x99:V\xb3\xaaY]\xc7&\x9buqk)nLnT\xe7<\xf4\xaf\xa0t?\xb5\xdd\x7fKS\x1e\xa9\n\xdf\xb2\xa8\r\x85\x11\xcb\x82prW\x83\xf9\x8a\xa9~\x91\xd7z;<\x02\xf5:\x9d\xab!\x02)\x86%_b\t\xf6\xf6\xcdV\xc9\xd3\x84\xa3Tk\xa5\x878\xda\xbe\x9f\xbc%\tR~\x95\x8d}\xaa\xf8\xdd\xfc%\xa1\x85\xb68\xbd\xbd\xdc\x90\xbf\xff\x00\xb3U\xc6\xe7\xfa\xf3\x81W\xcd\x17\xc5\xda\x07\x88\xac\xd7\x17_s\x99\x14\x16[\x82\x15F\xe1\x90\xa2A\xe99\xc6G9\xc7j\xf9\x1f\xed7V\xff\x00\xd6\x9a\xe5\xd3\xd9\xc9\xbe\x0b!\xe4[(\xce$P\xc7s\x8f\x96\'8\xf6\xaa+\x1f\x0b]\xdc\xf8\x92\xd2[\xdbF\xfc\x1e\x9f4\x06<\xe9\xfeC\xef\xb9\xfb\x8a\x91a\x11fe*CF}Y\x1bg\xb5Di~5\x88Y}\xdeH\x83\xa4\x92\x07f\xc6\xd2\xac\xa0\x83\xb0\x83\x9eA\xe7\xdc\xf5\xa9\xbb\x9de\xf5]>X\x0b,\x91\xdc$p\xcbn\xb1\xed\x05\x13\x84\x04&\x0f\x7f\xd6\xb3\xbb\x7f\x0e\xdc\xd9\xa7\x9c\xab"\xe62\xc23\xd4g\x85b\xa4\x8c\x82{\x8c\xd5\x9a\xc7N\x97L\xbe\x84K|&\x99\xe3\x12)\\\xae7.p}\x98{W\xb9\xc2\x92*B\xaa\x18G\xa8\x0cppw\xfb\xd5\xc4\x92\xc4T\xfa\x06\xaf~\xd9\xa8+m\x1d \xbe\xbbW}\xb1)\xde\xb1\xc8\xc7(\xb9\xe9\xf2\x05Z-5\xd9\xe5e\xb2`\xf76Q\xb8\xca\xa2\xe4\xa0\x1e\xccz\n{\xa8X\xe9\x1a\x9a\x0b\xa6\x86X\x95"*C7\x99\xebQ\xcfM\xbe\x92\x7fJ\x81\x83U\x968a\x8a\xd6\x14H\xe0\xde\xb1\xae\x17\x9d\xddw\x15\x03?\xe2\xa45\xbc\x02\xe1\xa5/\x95\xceP(#\x9e\xc4\xed\xb5F{\xa9e\xb7\x11\x15\xdf\xb9c\x92?\xadN\xeb:\\\xed2\x0b\x16\x8d\xa2x\xb7\x01o(\x7fO<\x1d\xbd\x0e\x06H\xaa\x9f\x92a\x8d#\x8eA\x98\xc8\xce\x1b;y\xc9\x07\x1d\xcdHE\xa9\xcf\r\xbc\x91\x98U\x8b\x16#i\xdb\x82\xdd0OaP\xb0\xe8\x9a\xad\xdc\xf0=\xbaH\xe2E\xdc|\xa5-\xb0\x8f\xc5\x90:\xed\x1c\x9an\xf8\xa4\xd1\x85XB\x96#\x03\x9f\xebL\xc0\x84r\xff\x00\x95s\x9e*{X\x96\xda\xe2\xde\xc2X\xb7\x99\x15\x02\xb2\xe38+\xf2>*\x12\xdfTQ?9F*F\xd6\xe7\xafz\x94\xb0\xf0\xee\xa3})\xb5\x86\xe4\xe4F\xd2oR\x18`g\x9fI8\xf9\xcd@^\xe9\x97Q\xde\x0bkKf\x96X\x94\xb4\x8e\x9c\x86\x03\xbdT\xa5\x98\x0f\xaaH\xc8e`\x06\x06\xd8<c\xe6\xa7\x0b\x99\x13!pr>\xf5#\x1d\xd5\xacO\xb9\x94\x89\x19\xb8\x07\xa6;\xd7\xd1:_\x85\xec\xd9"h.R{t\xb5\x13\'\x97\xceK&y\xe9\x82\x0f\\\xd7\xce6qH\xd7\x919\x8c\xa2G\x81$N\xbd1\xd4s[/\x85ou\x1bx\xed\x87\xdeY\x95#{\x86\x00r\xc0p\xa8\xd9\xf7\xedV\xdeL)\x14\xa1\xe3]\xf0\x03g\xb2\x9a\x80\xd7\x13K<z\x1fN\x8c\xed\x8c\xe4\xb0\xda\x98\xea\x82\xe7Q\xb9\x86\xda\xe2\xf4\x887\x83\xfb\xc6%W\x15\xf5w\x80\x9fJ\x93G\xff\x00\xf2\xfb\x04\xb6Dm\x8d\xb3\xa3\x95\x18\xdd\xc7Z\xf9\xafU\xb3\x17\x11%\xd0\x8cD\xae\xde\xa1\xde\xbe\x8b\xfb3\x85\xe2\xf0\xd5\xbb1\xf4\xb9%?\xf6\xe7\x8a\x8f\xd0\x9c\xf9\x92\xa9`\xc7N\xe7\x9d\xb3\xb6>*/\x8d\x82\xb7O\xb4m\xc6\x99\xb0\x14\x1d\xb7\x19;{\xd6\x80\x075\xee\xdc\x9a\xe8W\xb5\xa1j\xf3e\xae6\xd1\xb6\xbb5\xe5&\x97^\x05\xa3\x14g\x14f\x81\\\xafk\xdc\xd794\x13]\xaeW{\xa8\xddIn\xc5y\xba\x8a)|\xd7\xb4\xdc5t\x1e\x8a)Z\xf3\x15\xce\xfa\xf0\xb5\x14WtR{\xa8\xddE\x14\xa5\x14\x9e\xea+\xb9\xaeb\xab\x83[O\xe6\xaf\x7fm\xa7\xf3\xd6|Y\xbd\xcds\xb9\xfd\xea\x1f\xe2\x9f\xda\xa4y\x0b\xefZ\'\xed\xa4\xfej\xf4kH\x7f\x8e\xb3\xe5-\xfc\xc6\x9c&\xe3\xdc\xd7\x7f\x12\xde\xd4y\x03\xde\xaf_\xb6\x14\xe3\xd7J\rX\x7f5SP\x1fsK\x01\x8aW\xe2\x1b\xda\x93\xe4\x8fz\xb7\x8dU\x7f\x9a\xbd:\xa8?\xc5U0M\x1b\xfek\x86\xe7\x1c\xe2\xba \xcf\x15l\xfd\xaa\xbe\xf4~\xd4\x1f\xcdU\x13!\x1d\xe9#3{\xd2\x7f\x17J\xfc5\\\xff\x00j\x0fz\xf3\xf6\x98=\xea\x9e\xb2\xb1\xefN#rk\x9f\x8b\xcf\x15\xdf\xc3\x81VF\xd4\x0bt\xa6\xedu#t8\xa6\x08i\xc0\xa5\tY\xbb\xd7<\xb5^\xd5\xd1\x9e_z\xf3\xcf\x97\xde\xba\xda+\xb0\x83\xda\xbb\x96=\xe8\xc0\xf6\x15\xc0\x9aS\xde\x95\x12\xc9\xef]\x08\xd6\x96X\xc5tj\xf74\x92\x17\xda\xb8Ws\xde\xb3_\xb5]I\xa0\xd0\r\x86\xc5cz\xae\xb9c\xc6\x14d\x81\xfe\xect\xadMP\x0e\xd5M\xf1\xde\x99=\xc6\x91\xf7\xfb;q=\xf6\x9aZ\xe2\xd9=\xdbiR?CKr\xc6\']X\xc8\xc1?\x1d\xe9v\xe68\xeea\x91\x97!\\\x1c|\x8e+\xe6\x96\xf15\xdd\xaf\x87_M\xd4"\xbcH$\xd3\x84\x96\xc0F60f\xe5\xf9\xc1\xe81\x9a\x89\xf1\x1f\x8f,/<9ef4\xa8a\xbdf\x05\xe6\x1d\x02\xaa\xe1\x02\xe3\xf0\xfb\x9fs]\xde\xf8\xabP\xba\xd1\xecd\xbf\xb0\x81\xee\x12\xc6K&w\x8f\x0c\x999\xe3?\xc5YM\xd6\x1e0\x92\x00J\x1cr;U$\x9dI\xad\xf5D\x93\x96\x050\t\x1d\x85o\xa2\xb2\x8eUI\xa4\x81P\xf9\x85\xf0\x1bl\x9a\xefSo\x0b\r8\x08\xeeo\r\xe0\\\xba:\x82\xa5\xfe\xa3\xb5X\xed\xe6\x9e\xff\x00\xc3\x9aa\x82\x0b\xa1\x14v\xe6\xdeyv\x9f,\xfa\xc9\\\x11\xd0\x01\xefT!\x0c\xb7\xb7"\xd6\x0bP\xceW\x00\x81\xc9\xc7\xcf\xb5i\xbah\xbe>\n\x8bG\x17R\'\xfd[3\x00\xc4\x86\x0b\xc8\xc2\xfb\x0c\xd2\xad\xe5\x13\xf9\xac\xcabQ\x16\xc1w\xc9\xc84\xb1!\x8eh\xb4\xa8|\xbe\x0e{\no\xa4M.\x93y\xf7\xd8.^\x19 p\xe4\xa6\x0e\xdd\xbc\x0e\x0eFi\xd9\xf1F\xafyl\xd3\xcd\x0b\xdf~\xf5\x94\xa5\xc2\xf9\xb1\xc7\x95\n\xa7\x07\xa1 pGN\x95Y\xb9\xb5\xd44\xc9.,\xddd\'j\xb3q\xd5O#=\xc7\x06\xad\x9e\x16\xb4]J\xdf[I$1\xd9A\ny\xf3F@*\xa4\x8ev\x9f\xc4r:WD\xf2\\\xc5,\x11\xc8P\x8d@\x82xa\xbe\xff\x00\x1bQ9\x8e;\x85\x9c\xa0\'`\x0e;\x1fj\xa6\xc3sv\xeb+<\xcd\x14d\xfe\xf3h8\xf4\xf6\xc0\xeb\xf4\xa9+=*\x1f\x11x\x81#\x8b\xef\x1eK\x83=\xed\xd4\xec\xbb\xc2\xa8\xcb7\x18\x03\x8e\x14u\xcdy&\x95(\x8cI\x18\t\x06\xe0Af\x1b\x89a\xc6@\xf8\xaem\xb4\xbb\x8bYm\xae\xe5\x9f\xc8\x8dnDyY6\xb1\x07\x9d\xdd\x0f\x1dFqQ w\x7f)\x19U\xa3\xd9\x9b\'c\xa7\xda\xac\xce\xe3P\xd9\x88\xc08\xe0\x9a\xd0\xf4\xff\x00\r\xda\xdfA\x1e\xb5.\xb4m\xac\xa3G\x10\xc3\x1a\xab<\x11\xc2\xc0\r\xacs\xb3\xdd\x9b\x19\xaa\xbf\x8b.\xad\xb5\x9b;\xbb\x9bK\xc8\x05\xb2\x86\n\xb3\x13\xb9\xba\x15\xc7OW\x1d>)\xaf\xdc\xef\x0cwW\x16z\x82}\xd9g*\xca\xc4\x86,NT\x15\x03\x0c\x0e:Tu\xee\xa8V\xcex/\xa2\xc5\xd4lL,c\xc9\x0f\x906\x91\x81\xd8c\xdcU\xa0\xbb\x8f\xcbh\x9a3\x18t$\xb1;1\xc7m\xf6\xfaTv\xb6`\xc5\xfc\xcdxm\x861\xa4T&\x8f\xaa\xddY,\x10%\xc3\xa3\x15+\x19\xc7;OO\xd3\xb5i2\xea\xb7\xd6\xbe\x13\xb2\x86k\xeb\x8f9\xe4\x91\xd8\xe4\xee`\x0e\x0f=\xb1Y\x9e\xad:\xc9"\xb2\xcedh\xe6\x0c\x0f\x96\x13\x1b\xbdD\xe1{\x03\xefV+\xbd@\xea\xdae\xa2=\xd4Q\xdd\t\x9bx\'\x04\xaf\x00c\xf4\xe6\xb2\xf7Q\x92\n\xab\xb0P\xd9 p}\xf8\xa4\xe8\x11\xb9|\x0c\xe3\x1fJZ\xd2\xd6\'\xb0\xb8\xb8\xb7\x8eIn\x08\xdc\xe4\xc9\x8d\x911\xc3d\x7f\x16}\xaa\x1c\\\xcao\'m\xce\xccNXs\x9c\x01\xd7\x81\xc8\x15k2\x1f\x0b\xac\x0f\x1c)t\xd72\x08\xb7J\x08\x8b\x01w\x1eA\xc8\xc6j\x9bc\xa9\xdb\rk`\x89|\xc9\x17\xce,\xc4\x18\xfdG\xf0\xb2\x9e\xaa:b\xa7X\x89Z\xdda#H,[\x9e\xc3l\xedLK*\xc3/\x98{\xe1~\xf8\xce*\xf7o\xabiw\x96\r$\xf6\x0f\xf7\xd8\xc0\ty\x13<o\xbb\x96\x05\xb9\xfe>\x87\x18\xaa\xe9\xd5^\x0b;\x88b\x84\xac\xec\x0cn\xc6OC!\xe8v\x1e\xeb\xef\x9a\x956\xd73\t\xe1\xb7W\x8eT\x89\xa4$\x9d\xa6X\xc8\x00\xa0\x00\x1epr1\xda\xa15\xbd*\xc2)-\x0e\x9cn\x84\x8e\x99x\xe4eb\xb2v\xdb\xb8\x0e\x0f^j\xce`\xcbo\x9d@o\x86$\x00w8\xda\x95\x13\x03! \x13\x9d\xf65O\xb8\x8d\xe0\xc3DY:\x02\xc0\xf5=\xf3\xf0{\xd6\x91\xa3E\x7f\xf7+wr#w\xb8i\xed\x9a2#eh\x17v\xf0O\xbeG\xd6\xa0/5\x12-\xc4:\xb5\x82\x0b\x89\xb6\xff\x00\xa7\xe8)\x1a\xb6\xc3\xb5W\x80\xc7\x07\xa8=i\x13\xa9Kp\xdarE\xe6\xde@#Q,\x92"\xfe\xe9\x97*\x11O\'`\x1d\xbb\xf5\xaa\xd3l\xb9\x91K\x06P\xa7:\x866<\x82\x0f;S\x8c\xe1\x94lrH\x1bo_`\xf8#\xc5p\xf8\xa3K\x8eFd[\xd8UV\xea%=\x18\xf4o\x80\xdf\xd0\xf1W\xc8\xcf#wJ\xf8\xb7B\xf1\x1c\xfe\x1c\xd5`\xbe\xb7O(\xa7\xa6H\x02\xfaf\x8c\x9fR\x13\xfd\x8fj\xfa\xe3C\xd5\xad5\xeb\x1b;\xdb)C\xc58\x1bs\xc1V\xe8U\xbd\x88<\x1a\xf0\x1f\x15xq\xbaM\xeaI\x04d\xdb\xce\xdf\xc3\x03}\r\xfe\xc2?\xa5rT\x1b\xef\xb5X\x08\xc1\xe9N\x91\xbd8\x02\x93\x96/,\x94\xdcILg<W(\xd5\x9f1\xcd\xd3\xafe\x85\xc6\x96$\xab\x0c\x83\x82\x0e\x08\xc8\xf65\x00\xe1\xd4\x11\xbd;S\x8aT9\xa4V\x9c\xc5\x1f\x98\xc1A\x03\xe6\xafm\x16yJG\x1b\x1dL@\x00w&\xa3>\x06I\xed^d\x9a\xf75\xc60\xc4dpz\xd7\\S\xeb\xacg\'p\xc4\x1d\xfb\x8aM+\x1a\x86<\x9c\n\xe0\xe3\x9a\xe0\xb6+\x82Y\xbaS\xad2hDX\xf2\xf99#rk\x81NI\xce\xd5\xd1nh9#\xa5y$\x96\xd6pKsuq\x1c\x10\xc6\xbb\x9aI\x08U\x00{\x93\xd2\xb0O\x17}\xb5[\xdb\xf9\x96\xda\x0ck+\x03\x83u*\x9f,|\xa2\xf0[\xeax\xa9\xf0t\xdb\x97T\xfe\x1b;\xc9\xc2/a\xee\xc7\xb0\xfe\xbd\xa9\xe8by\x9bJ/\x1c\xb1\xd8\n\xd8\xb5\x8dwK\xd0mZ\xebR\xbd\x8a\xda%\xe0\x17<\xb1\xf6Q\xd4\x9f\x81X\'\x89>\xd8n\xb5\x11%\xbe\x8aM\x9c]\x16\xe1\xc030\xef\xb4r\x13\xf3\xe6\xb0\x8f\x14k\x97\xba\xed\xd1\x9a\xe6\xf2\xe6\xeaYaC\xbaC\xf8\x1c~ 1\xc0\x07\xa8\x03\xa7zi\xa6K)\x9a\xddF\x1aBs\x1a\x90\x18\x16\xcf\x19\xcf\x07?5\xa6\xb4\xf0\xba\xc4\x8a\xd7R\x89Y\xbf\xfbC\xff\x00l}G\xf3}\xf6\xf8\xab\x8b[HQ\xc6\xb0\x1c\x8e\xe7\x81V\xfb\xb9\xc4\xc2Yn%7s:\x93)fc.[\xa1\xcbu\xc69\xfa\xd2Z\x1cz|\xee\xcd;\xac9\x0c}cq\x05y\n\x01 d\xfb\xd2w\x11^YX\'\xde\xec\xa6\x11N\xc1\xa2\x98\xa8\xdaq\x9e\x8d\x8c\xf5\xea\x01\xa6\x97zu\xdf3\xc7u\x0c\xc0(f\x00~\x1c\xe3\xf5>\xf5\xa06&(\xd1\x06\x01P\t\\c#\xe9\xedV\xc2T%\xb4\x8d\xb8\x04v\xab\xae\x87\xe1\x98\x8b\xa4\xf7BFK\x89\x97\xc8\xd8\xf9\xc9\xc1\x01@\xee\xb9<T\x83\xd9[\xd8K\x19\x85$f\x99\x82[\x92\xc1W,8;\x89\xe0\x83\xd4\x1a\xafi\xfe(D\x8dRH\x8f\xde-bH\xa2\x12\x1d\xca\x1d_.\xcc\x0f\\\x8a\xae]\xf8\x93]{\xe6\x13\xdb\xbc/\x15\xc4\xe72\x05c \x99\xb7\x15d9\nG\xebL\x8e\x9f\x14\xf3<\x93]\xca\x15\x02\xfa{\xec@\xc0\xe0g\x93O\xa3\x14\x08\x12%\xcb\x93\xbfo\xa9\xad\xbfN\xb4\x9fQ\xd3Vx>\xf0d#\xcb-\x81\xfe\xacg\xd4\x99<\x17\xc0\xe1)\xcd\xc6\x95k\xaaJf\x92T\x96\xe1!b\xe6`B\xae\x10\xe7p\xc0\xfc8\xe3\xd8\x8a\xa9x\x0bZ\xd5`\x8bW\xbb> \x92\xd2B\xaa\xe1dm\xab,\xdb\x80\x0b\x96\xceHPIn\xd5\xce\xa3\xe2\t\xaf\xe7\x0c6\xa8y\xdaV\x03\x19S\x91\xc9\xc6I\xe4U\x83Kkej\xae`\x92O1\x8e\xc4.\x0e\t\xdf98\xdf\xde\xa24w3\xdc\xcb\x18\x91\x02\xa6\x02\xb0\xceF@8 \x81\x91\xf45d\xd3"\x99`\x8e\xefO\xbc\x8b\xef\x0b0\x10\xd8\t\x02\xba&6\x99\x07\x9a@\r\xdc.N*>\xec\xeb\x1a\xd6\xb1.\x9d\x1d\xcc\x96\xa2%g\xbai\xa5b\xb1*rY\xdc\x13\x81\xdb\x03\xa9\xc5URi/n\xb6Kt\x96\xe8\xf2\x8cL8\x8d\x17\xb9`\x06s\xf4\x15\xa6\xd8\xe8\xf6\x0f\xe1\x8f\x10\xdf\xc7{,\x0e$\x86\xd8\xc8Ha\x94p\xe4\x821\xd4\x10G\xb5G\xe9\xf1I|\xa5b"4@\xcf*,\xbau\x05RN\xdf\xcaN1\xce)wR-\x91\x12Hu;\xba\xc7\x1b\x18\xf2T\xbb\x008\xe4\n\x83\xb6\xf3Z\xd3Y\x91\xf4\xebU\x8e\xc29-\x05\xe4y\xda\xcc\xe0\x05\x865 q\xfcE\xba\xfb\xd2\x07T\x9d\xaet\xb9-\xedWO\xb6\x13o\xf3\x8cG~\xc7dwd\x0c\x0fV\\\x8cs\xda\x9d]\xddEy\x146\x16\xcbr\xd6\x16\xe4\xc9+\x13\x99\xe6f#|\xd2\x13\x91\xb8\xf0=\x80\xa7\x12\xddEw\xa7\xde;:Gi\xa5\xd9\xb3C\x0c{\x82\xc5+\xb8P\xb9bwn<\xe4q\xc1\xa6&\xba/\xe6-\xb4\xe0\xf9`*\x9c\x0f^\x93\xa9\x88;z@\xee78\xa91#a^X\xb0\x1d\xb89:A\x18\x1bo\xb9?a\x9a\x8b\xd5!\xd1a:\x9e\xabs\xe2\t\xad\xd4\xdcL\xf0\xc5\x15\xbc\xaf3\xa1$nbv\xaa\x83\x9crh\xf0T\x17Z\x8e\xa9\x1d\x8e\x93yk-\xb6\xa5n\xca\xf2O\x11Q\xb23\x92\xac\x8c\x0f\xadq\xc1R}\xf3U\xf8d\xb9\xd5%\xb8\xd2\xaf\xed6#\x00\xf2\x8f3\xcba\x1a\xfe\xf3\n_\x8c\x91\xd39\xcfj\x96\xf0\xdc\x96ZjX(2$Ks\x90\xdb\xb1\'\x96\xc7 \x821\x83\x8e\xe2\x9a\x8e\x7f\xc3\xfe\x1d\xe6\xb2\x10\xb1\xba+#\xab\xba\xb6\x9e[\x92@\xf68\x14\xf4\xf1L\xf6\xf7\n\xb7BA\xe5\x7f\rY\x11\x95O\xf2\x9d\x80\'\x8c\xefR\x1e%\x84X\xea\x1a\x8d\xbd\xb5\x8f\x94\xb1^M\x15\xb5\xb2\xb8\x95rq\xeb\xdaN\xe0\xa0\x0c\x96\'\x19\xabF\xa3g\xa6\xe9\x9e\x1d\xbb\xd5\xc6\x8d\xa7\xea,\'u\x95e\x8c\xb0,\xacK\xb2\xec $e\x8f\xa4c\x04\x0ei\xae\xbd\xe1[\xab\ri\xe6\xb1\xd4D\x96\xd3\x96X\xf1\xb8L\xa8\x17\xd4\xad\xbb\x93\x90y#\x83\x9a\xa8\xde\xd9\xea6\xa5!\x97\xcd\x9a\x05\x94:B\xc4\xb2\x96\xe8==\xf8\xe3\x8e\xd5e\xf8\xe7\xe8\xcf\x7f\x1b\xf4\xff\x00\xe2J\xcc\x0b\xa8\x0c\xaa\xdf\xcb\x8d\xb0F\x0f\xb0\xa8qZ\xc5\xd4a\xb0t\xbc!T+0\xf5+8\xee\x0e\xf9\x07#\xde\x99xN\x0bX/\xb4\xcdF\xf4\xa4\xbal\x17\x0f(\xb5&8\xd0\xcf\xb3\x03v\xee\xdcs\xf4\xc55\xd5oc\x9bU\x17\x16\xb0:Be>LLA\x93o^q\xc5i\x1e\x14\xfb=\xbd\xd6\xf4\xe3q8\x16Q\xa4\xbb\x90\xc9\x1f\x0f\x13\x92[nO\x04v$S\x9f\x15\xe9\xfe\x18\xb0\xb3\xb1\xb4\x8eXo\xaf`\x94\xa1x\x89\n\x90\x02v\xa1a\xcb2\x8c\x00z\xd3\x13\xda\xdf\x0e\x92\xb3\xcf\xa2\x18\x17\xf8\x88\xd2\x11\xaeN\x06\x95\xef\xf2\x06)\xb9/\xba{uV\x8a\x16y\xa78\x8eE\x8c\x12\x91\x81\x96\xc9\xed\xdfsU-N\xee]cM\x86X\xeddu\xb4\x06X\xb7\'\xa7\x05\xbd#\xa7;H\xe7\'\xe2\xab0i\x02\xe6\xf6\xf4\xdc,\xd7W\x1a\x80Y\x11\x8a*\xc5\x18 \x96\xcfM\xb88\xc0\x1dj\xf5\r\xe4\x1e\x1d>K\xc2\x1e)\xe2\x0c\x04\xac3\x86\x1e\x92\x08\xce\xe0\xddGLTf\x9dq\xaf\xcc\xb76\x90\xda\x97\x92i\xe4\xb8\x10"\x0f1\x15\x7f\x1a\x85l\x11\xef\xc7jf\'y\x02\x08f\x95\x9a`VX\x80\xdc6\x9c\r\xbd\xf1\xc5,\x8f-]\x9a4T]\xd1\xc9\xc0\xc19\'\xf5\xe6\xa9\xf6\x0f{\xa0]n\x8ei\x165\x07\x1bq\xf4\xc6;T\xee\xb9\xa7jJb\x9fT\xb5\x9a)&\x85&\x01\xf9vF;A t?\x1e\xd8\xaa\xfd\xf5\xec6z\xa2\xcb\'\x98\x1a)\x82\xb4eAd\\\xfa\x8e\xd6\xeb\x8e\xb84\xd7X\xd6\xefu\x8b\xbbx\xce\xa1q-\xb43K\xe4\xf9\xccF\x03\xe4\x96+\x93\x82z\xf54\xe4P\xc7\x15\xbc\xdey,\xec\xde\x85\x05q\xa8we\xe4}\xa9\xb9\xc4\xad4>Z\x80\xba}e\x81\xce;`\xd7z\xc5\x8a\xc3\x05\xb7\xee\xdfk\x12\xcaq\xd4\x0e\x0fJ\xa74\x10\xc8ff*\x02\xf1\xd7$\x8f|\xd6\xa3k$\xd6\xd1_-\xb5\xc2\t6*\xef\x95R@\xc9\xf8\xbd\nA\xda}\xc8\xaa~\xae\x9a\x85\xd4\x02{\xad:\xd0\xec!\x04\xd1\x8d\xae\xf99\x0c@ \x0e=\x85H\x10\xdb\x8ch\xd9\xc0\xce\x8026\xed\x90\x7f\xb54\x15\x9b!\x87\xa78\x07;\xfe\x98\xa6\xb0x~+\x88\x12h\xe3\x92L\x05f)\x8fH?A\xdf\xde\xa3\xee"\xd5\x12\x17\xb7\xb5rn&\xdf\r\xbey%\xf1\xe9\x04V\x85\xe1\xc7\x9a\x0b7\x92\xd6\xe9\x9d\xd1\xd4\x80\x07\xa5B\xf4\x1c\x7f\x9a\x82\xd5,\xe5\x96E\x9f\xf0\xdc$\x9b\x84\x8b\xc0\xc8\x1d\xc0\xc7#\xdf\xad-\xa1\xd5\xe5\xb6\t+\xea\x1b`\x1f\x8c\xd4vf\x85\xdd5`0\xc1 \xef\xbde\x1e\x1a\x9fW\xd3\x85\xdcw \xfe\xf9\x97\x11\xc8\xa0\x851\xf4\xc6z{}*\xff\x00s\xae\xc7u\x7fs\xa8_\xc4%y\x1aG0\x16!\x14\xc80\xac\x98\xec\x06>\xb5M\xd5\xee$\x87U_\xbc\xab"\xef\x1b\x99W~\xdc\xf5a\xd3$\xf5\xc7zd5?\xfa\xc7\xbd\xb7\x91\xe3p\x13\xc9\xf2\xdbiP\x9c\x82~s\xcdN\x99\xae:\x8c\x8a\xd3\xb6\x84|\x16\xd2\x01\xc1^\x06\t\xae\xdaG\x0c\x11\xa4P\x00Jl\x0b\x1cs\xc9$V\xab\xa0X\xf8WP\xd5\xf4\xb9\xb5{\x82Dr\xab\xc8\xb7\x1b\xa0F\x12.\n\xab(`\x02\xb7%\x8e3\x8e+P\xd5|?\xa2xz\xda\xea\xd3O\xd5\'\xb9\xbb`\xac\xd1yI(\xf2\x83ed,\x07\xee\xc1\xf6\xea{\x1a\xc0t\x99\xe6\x9aI\xae\x1e\xf4\xe2x\xb64hv\x82\x84\x8c\xe4\x0e\xc4\xf5\xabD\xde3\xd4\xaeb\x96\xd6[\xc4S\xf7sjKg{D\xaa\x00f#\xd3\x90\x10.\xe3\xcd[Z\x1b\x15\xb6\x92\xd6[h\xdd\xd00\x8d\xc2\xfa\xc0`r3\xab\xbd&\xe6\xca\xf1n\xe2\xb8\x8a\xec\xaa\x12<\xd8\xf24\xb1S\xe9<\x1a\xde<\x1f.\x9fq\xa4]^2\x8b\xabT\x94\xac\xca\x19\xa2\xb8\x8bp\xc1$.v\xa9\xe9\xb8pA\xe4U\x1b\xc5^\x1c\xb2\xb2\xd6\xadZ\xca\xf9\xff\x00f\xdd\xc6\xb2\xc7\xe6\xa9\xf3"\x04\x95uc\x8ev\x90x\xeaj\xb7\x07\x8al\xf4+\x99e\xd3Q\xad$\x930\x9bY&\xf3\xd7\x0f\x11Ws"\x0fP\x04\x820y\xa4\xe5\xd4\xe4\xbd\x86\xcd./\xbc\xd3\x04L"W#*\xac\xc5\xce1\xee\xccN\x7f*\x87|,\x85\xacv\xe6\xd1$\x9e\x13\xb620T\x81\xb98#P\xecx\xa9]9/?\x1b-\xc2\xdd:\xc3(\xddI\x07!\x97#a\x91\x95=\xc7"\xad\x1a\xf7\xdc4\xbb];\xf6T\x96\xb7\x18\x8a9\x96\xe7\xca\rr\xaf8\xc9\x13\x13\x9d\xac\xa3\x1b@\xf9\xac\xcbP\xf3\xef\x0c"Y\\A\x1a\xe2$\x04\xedg<\x12~[\xb9\xa9\xb9\xe5\x0fm\n\xc2\xcc\xc3\xcb2nT\xe4ob\x08\'\xa8\xe6\x99\xcf\xa9\r>(\x95\x127\x03\'cdz\x07\xf1`\xf7\xf65Ev\xf7r\xc8LAc\x8d\x90e\x01\xf4\x8c\x0c\xe0s\xce1WpF\x91D\x15\x98\xc8\xe0\x9f[\r\xc9\xf7<{\xd3\xad#@k\xb8g6\xf6\x9et\xc1\x0b\x04E,p\xa3\x9cc\xa61Q\x9a\xd6\x8c\x16\xce;v\xb5\rr\xd2\xa1,J,b3\x8d\xa4\xb1\xe79<\xf6\x02\xb5\xff\x00\n\xeb\xb66zD\xed\xa5Z\xe6{\xbc/\xde\x15\x99\\\x10A\xdb\xb7\xf9r*\x97\xf6\x83f\xf7\xfa\xa3k1\xc5s\x03]\xc8L\xf1z|\x90T(\xf4m\xf79-\x9a\x83h\xe6(\xcc\xeb~5\xab\x15\x96\x12\xac4\x9dX\xc0n\t\x18\xc9\xfa\xd4E\x12\xcbt\xf1\xb5\xbe\x94\xc7\xa5\xf5\x03\x92\x009\xc7`s\xb7\xd2\xa8\xe7\xc3\xe9\xa3jK\x10\xbcX\xef\xad\xa4\xde\x02\x84\xba\xb6\xb8\x0e\xa7\n0?\x12\xfb\x9e\x05Zd\x93S\xd5t\xd1a\xa8\x15\x9e\xde\td\xb8\x12:\xaf\x99\x19\x7f\xc4\x80\xf5\x03#\xf0\xf6\xa8\xdd\x01\xe4\x96\xed \xfb\xa0\x99=j\xe1\x9fb`\xa9\x03\xa6\x18\x90ON\x86\xb47\xb4\xf2\xad\xe5\x96\xe3q,\xa3\xcegc\xeac\xdf=zt\x06\xad\xff\x00\x16\xf2\xc4\xc8\xa7\xcb\x0c\xa7![9\x19\xcf\xaf\xb7\xb5)\xad\xa2F]H\x18\x83\x90\xc4\x0ex\xf4\xd2^\r\xd5-!\xd0u\x0b(\xa6K{\xb5\x06c+\xb6\x15\xd5[\x94U\x00\x93\xe8\x1c\x9fzh\xd3x~\xca\xea\xfak$\x82\xde\x0b\x88\x88\x85.wI"\xf9\x88Cm\x07\x92\x84\x91\xb5\x89\xc8\xe9\xcdU4\xd6x\xaf$\xd4\x15bk{9\xa3yQ\xca\xfa\xd5\x9f\x85\n\xdc1 t\xf6\xaa\xfe\xab|\xca\xd2\xb4\x10\x9d\x9b\xdc\xa4C\x1b\x8a\xb3eq\x9e8\x07\x18\xa9v]D\xf96\xb1\xb4(Y2\x10\x91\x80Fy\x07\xfa\xd3\rb\x82K\x97\x12>\x1ce\xb0{\x9clG\xdbj\x81\xd7\xa3O6iUC\x01\x90\xaa\x08c\xe9<\xf2:\xfc\x1a\x83h`\x8ekV\x9a|\xab\x94i|\xbe\xa1H\xc9\x1fQV\x9c\xdd\xdd\xa8_\xbb\x12#b\xc1B.\xfeF\x0f#\x19\xe9\xef\x8aV\xf3\xc3\x97\xd1[\xc1uub\xf6\xe6i\xbc\xb4\x05[j{.\xe2\x00\xc8\x07&\xa4F\x04\xb0\xb1S\xf9\t?\'\x1e\xff\x00\x1f5\x06t\x06Ob\xdf\xf9\xb50\xb4\x16r\xeb0m\x95cS\xe61\x94\x0eNF@*\xa3\xd3\x9ct\xab\x12\xce\xd0\xdcn\x9a\xc5g\xb9\xb8\x9b\xcc[\xb9J\xbe\xd0H \x10=\xfa\x11\xdf5\x15\xa3\xe8O\xa9\xcf,q\xf9H@`]\xd40\x1bO$\x0e\xe7\x8a\x9a\x9fH\xbe\xf0\xc4\x88.R\xd2\xe30\x05VFf \x12\x1b%\x18\xf1\x90q\xd3\x15\x1c\xa4\xae\xbf\x88\x8f*\x91\x82\xa7R\x96\xdc\x8c|\xef\xb74"\xa8>[r\xde\xa1\x83\x8d\x85_4k\xf4{?\x11\xc3\xfbB\xde\xd84>]\xbaH\xa2\x08\xfc\xc3\x95!T\xee\n\xa3\x1c\x1e\xb5E\xd1W[\xd2d\xb9\xba\x87J)\x0bJ\xd6\xfet\xca6\x82H|\r\xe3\xa9\xc7^\xf5d\x8bR\x7f\n5\xbc\xf2YX%\xc4\x80\xdc\x02\x91l\x9a6nT>\xee\x9c\x1c\x8cq\x83P\xd7\xbe\'\xd6o\xec\x1a8\x11\xe5\xf3\x1cN]\xca\xff\x00\xa9\x92K`v\xe7\x03=\xaado\x04\xdaE\xcc\x92G$\x19\xd2\x15H\xfc\xfe\xa0I<s\x8aJ\xc2\xd1\x96x\xd66\x8eL\x13\x9e\xfav\xdb\x03\xe2\x9f\xf8\x87\xc5cR\xbb\x94\\[\xc6\xef2\xfe\xed\xb8a\x12\xed\xdb\xc69R\xbd\xa9\xec\x1aJ\\C\xabj\xfa\xb4>R\x9bg\x92\xd6\x07}\xb2\x92\xac\x033\x0fI\x18\xec:\xf3P\x86\xdex\'\xbb\x9bY\x82\x08.\xe5T\x9e\xd9cU\n\xa9\xb0\xe3`_@RF;\x9a\xe3W\xd7V[\x0bh\xa6\x97r\xa33\x84\x93\xd4\xa8J\xe0\x9c\x9eN~j\xd1f\x86\x19K\xcaZf\x04\x9c6\xc7Q\xee\xdf\xae\xd4\xc4\x8a\xd2\xc6\x8b\x12\xac1\x8cq\xfe\xd1\xd8UJid\x08\xea\x8d$h\xcaA\ny#\xbesQ+1\x85\xe2\x86\x08\xf7\x92G\x1d\xd8\x9fz\x91\x82X\xe7\xd4l,\xe2\x0f*\xcb2y\xd8\x07\x1eNrI#\xa7\xb5[\xd5l\xf4\xb7\xbb\x914\xb4\xfb\xd4\xa4}\xdd\xf2\xc5\xe3\xe7\x9c)\xe3\xa1\xebL\xdcO\x0c+\x11i\x11L\x8d\x80\x83<|\xfbR`I\xa5\x95\x82FHQ\xeav\xe0g\xfa\xd7\x1a~\x96\xda\x8d\xb4\xa8\xf0\xaa\xceU\x88\xdd"\xc60\x80\x93\xc3\x103S:&\xbd\xad\xe8\xda|\x96\x922C\x0f\xdd\x9a\xde"\x0e\xde\t\xdc[ u=\xea\x12i\xe7\xbcb\xb1\xd97\x9b\x1c\x8a\xcdr\xcf\x94\x93nK.\xde\xc4\x8aE5[\xeb\xf3=\xb4\x12\xad\xb8\x9a&I\x0b\x05`rr|\xbc\x83\xb4\x9e\xe4`\xd4\xa5\x96\x19\xa0\x83L\x84>\x92C\xc6NF\xaeT\xf1\xf7\xa0\x92\x93\xc8\x1e0\xe8\x18zXlq\xdcsV\xbf\x0fk\xd7\x17z\x8c\x93\xc2#\xb4\x06\'\x85\xdc\x81\x93\xe6\xf1\x92O\\\x11\xc1=\xaa+\xee\xb2h\xba\xed\xad\xc5\xe5\xc2\xbd\xba\xda\xbb/\xaf\xd3 \xdd\xca\x90\xbc\xe0\x9ey\xa8{\x8dR+M\x8b\x0c\x11.\xe0\xb1\xcb\xb7\xf0\x82\x067{\x96$u\xa6\xd7\xc6K\xcbH!-\x1cR\xac\xa1\x9ac\xcc\x9b[\x8d\xb8\xf6\xa8\xcd0m0\xeb9\xd6Z0r8\xdf\xfbWIQ\xae\xe4\xa8\xc6\x9c2\x8eOa\xfdi]SXI\xee\x84v\xf6\xcb)eUf\xd9\xb7\x04\xf6\x1f\xfbs\xd4\xd5\xef\xc2Ww\xda6\xb5&\x9bsm\x0c\xd6\xd3\xc4\xaa\xae\x08\x0c\x07\xb7=~\xb5V\xd04\xadKu\xfa,v\xebn\x80)\x99\xc7\xa8\xe3\x9fN}\xea\x9d\xe3\xb5\xd64\x8dkN\xd4\xad<\xd6\x90F\x88]rP0\xe9RV\xe2%\x98,\x8d\xabX\xc0\xc9\x1b\x807\x19\xaa\x91\x1c\xad\r\xc4\xed\x95\x08Cm\xfc\xb9<\xd7\xd1\x1e*\xd2E\xa5\xe4v\x16\xb9&\xe1\x95\xa3l\xe4z\xab\xe9\x1f\x0ci_\xb1\xb4K\x1b2\xfb\x8cq\x80O\xb9\xaf\x92~\xceumj\xf2\xfbI7\xf0\xb6\xa0\xd2H\xcc#\xe0:t$\xf3\xd3\x15\xf6dlLq\x9d\x85}#\xd2{Q\xd3\xeda\x86K\x97\x8c\xe7-\xa4|\x0ej\x97\xc4\x97\xf3\xdcG\xd3\xe2\x93\x81\x1e\xb2\x7f\xdc\xc7l\xd3\x9a\xf6\x92V=\xe9Q\x83V\x06\xb3\x03\x8a3^dW\xa4W\x04W)U\xed{\\W\xb94\n+\xaa\xf0\xd1Fk\xb5\xcaL\xfd)2icI2\xd7\rtR{\xa8\xdf\\\x95\xa4\xcek\x94S\x80\xf5\xd8l\xd3QJ)\xae\xe6\xb9N3Ex+\xd1]\xa2\x8c\xd1^\xe2\x8a(\xac\xa5`\'\xb5v-O\xb5I\xa2\x8aT\x01\xedU\xc1A\xa9y5\x1a\xb6\xa7\xda\x96\x8e\xd8\x8c\xfdi\xefJ\xf74\xa0\xa0Q\x9aMa\x00W~]u\xba\xb9g\xae\x9cb\x81\xcdp\xca\x00\xa4\x08\xae\xcb\x13]"\x13\xda\xa1\xbeI\xa9\t\x80) \x84\xf6\xae\xfc\x8c\xf6\xa7\xa9\t=\xa9\xd2\xdb\x9fjRDOj\xe38\xa8\xb1\x061\xc5.\x91c\xb5Iy8\xedF\xc0)\xef$\x8d\xe9\xbf2\x9b\xa2\x1fj]W\xe2\x94\x03=\xa9UP)\xd5LSl\xd9\xa4\x82\x9fjUP\xd2\xc0|Wx\x14\xf0\x14\xd6k\x80\xb8\xa5@\xc0\xaf2+\xca\xed\x14\xa6@\xafA\xceA\x1cRU\xd0\xae\x83\\5\xf3\x07\xda\x8f\x87t{+\xbdI\xe2\xb8\x8e\'\x9f\x12}\xd5\x8e\x19\x9c\xff\x00\x14\x7f\xe6\xbe{\x9c\xe6\x02\x8d\xe9\x95N\x00\xc63\x8f\x9a\xfbO\xed/\xc0#\xc5\xd6\xb0][\xc8\x16\xf2\xcd\x1b\xcb]\xb9\x0e\x0fc_)j~\x0c\xd4\xa0\xb4\x93Q7\x08c\x85\xccR#6\xd6WS\x826\x9ek!\xd5\xa0d\xba\x07F\x95\xdd\x81\x19\xde\xb7}\x1e\xf5\xa4\xe9\xe1\x03\x96t\xf4\xb08\xdb\xb0\xaa]\x9cS$\xeeRW\x85\xb6\x11\xbdN\x08\xcf\xcd\\|7q\x12^\x18noeHD\'n\xd1\xbc\xef\xe8\x0f5M\xb8)\xa7\x97\xf3\xa5\x91\xcc\xc4,k\x8fn\xb59\xe1\xfdF\xda\xce\xfa\xd2\xf2ko6\x0bY\x96Y;\x8d\xab\xceH\xef\xf4\xa90\xea\x8d\xadP\x10K\x10I\xdf\x18;\x1a\xeb6<\xc6\xdf+\x9c\xfb\x82*\xef\xa8G<\xda\x8d\x93I\xe6\xef\x9e\xda2L\xa9\x8f@\xf4\x8cg\xb6\x05Oj>\x0c\xbe\xd2t;\x9b\xa8\xe2s\r\xe6\xe9\xc1\x04\x18\xc9\x88\x10\n0\xe4\x922pj\xf9\xa0\xc1{\xf6\x8b\xae\xdb\xeb\xb7\x8b\x1cvv\x9b\x12G\n\x123\x0c~\xbeA\'\x05\xb3\x80\xa2\x9fx\xc3]\xb1\xf1\x16\xa8\xfau\x9cr$Vv\xd3\xc6\x9c\xe5\x18\x0e?v\xaa85g\x05\x85\xbd\xbcwRy\xa4\xfe%\xf1\x16v$\x91\x82w\xa8R\xf5\x1b\x99n-\xe3H\x94\x18W]\xc1\x07POa\x9d\xab\xe7K\x95[\x88\xa0E\x0b\xe8\x038\xe3\x9cw5\x05\xb3\xfe\xa3\'q\x8c`\x0e\xe4\x0f\x8a\xbe\xdaZh\xcdojd\xb9\x0f&\xd9S\xcb\nU\xe3\xd8K1~98\x1cUE\xa5\xb3\x9c\xa3Z\xe4\xc2\xfb\x7f{\xc8\'p\xc9\x04\x1f\xe5\xe9\x91\xd6\xa8\x9e\xc6[DF2)\x1a\x86N@\xe3\xb0\x02\xb4\xb1]\xa4\xdb\x02uc<~\xf4\xcb\xcb\xb5y&d\xb8\x96&\x04\x1d\x92uf\x07\xaam\xe0qN\xed\xae4\xb8g\x92]B6\xb8\x00n\x903r\xd8?\xc3\x9e\xa4\xe7\x9e\xf4\xda{t\xb7\x04\xfd\xe1v\x06\x07{\x13\xc6zSK\xb8\r\xea3y\xcc\x1c\x84U`\xa3\x1cp1\x8cW?\x15\xe5\xb0\x90\xa6\x90O\xa7W\xe5 |f\x9ev\x01\n\xf7\xa5-\xad\xac\xda\xdfV\x12Cp\x86Di\x84\x10\xba\x95\x11\x93\x95\xcf9\xe0u\xaa\x92\xa4\xf7\xae#\xb7\x8d\xd9Rp\x03\x1cd)\xfel\x7fz\xbeE\xa5\xc6,\xa5\x94\x82\xd1\xa1X\xdc/%\x9f<)\xc7@q\xd6\xa4\xe7\xb3\xb3\xb52\xbd\x8c\x03u\xd4@\x1bq\xb9\x04.\xad\x9c\x06\'\xd5\xf9\xf4\xa7\x9eo2$\xca\xa2\xb6\x9c\xae{\xeb\xe3\x8e\xd5\x19\xd41\xe7n\x0f\xb0\xc5@\xea\xfa\xa7\xdf\x9e\xc2)@\xd9ej\xb0`\x9c\x02\xeb\xc1\xc7\xb5Ixm\xb4\xaf\xda\x10\xea7\xd6qK\x00\x02\x14FM\xa1@`Y\xfaz\x80#\xa5)kmkw \x87P\xd1e\x86\xd9V\x17\xbb\xd4\x146\xe4\x00\x93\xe6\x11\x9cz\x8f\xf4\xa7\x11[\x08\xda\xce\xda#/\xec\xeb\x86v/)\xdc|\xd5\'\xd2\xbb0J\x00Alu9\xab>\x9fmq\x1a\xac\xc5\xd1Y\x94\x8dDpN\xdc\x11\xb8\xf9\xe2\xab.\xb4H\xc2\x1c\x1d\x00\x82q\xc9\xef\xb5w}5\xdf\x87\xb5\xf9\xfe\xf1\xa9K\x1a\xa0UX\xe0\xc4\x80FW\x85/\xd3\x90y\xedH\x9dB\xdfQ\x9d\xfe\xe9\xa7"\xc9\n\xb7\xef\x19\x89\xdd\x18;\x87\x98:\x02\x07\x1cqO\xaen\xf5]6\xda+\x0b\x89\xd2\xf6\xcc\xede\x85NH]\xb9\x00\x90:\x8c\xe4u\xa8\x7f\xbaI\xa7\xcb{}\x0cw\x16\xednC\x08\x9e2\xd1I\x13\x12\x08fm\xb9\x07\xdb\xbd5\xe6y\xd2\xb2#\x96@\xe7Z\x91\x92\xb8\xdf\x92H\xa9J\xa6\x14\x1a\x80\r\x81\x83\xd8\xd4d\xd0\xc5\xe2]F\xd04V\xfakMt\xc4\xca\x18\x84@\x07$\xf5\x00w8\xa9\x08\xe1\xb2\xb3\x8a\xd0D\x8a\x15#1\xc9"6C\x82\xff\x00\x8b\x1czx\xc8\xf9\xae\xb4\xc1m\xaaIa\x04\xc2\x18aEu\x90\xa2\x00\xe7\x7fv\xfec\xcf\xe4)\x9cV\xcao\x85\xa2\xc3\xbaUw\x8c\x10s\x95C\x9c\x02q\xce:T_\xc4+\x9b\x82\xaa\x18\x968\xdb}\xf1\xc0\xfa\xfe\xb4\xb5\x18d\xf5l\x06\xff\x00j\x9b\xd4b\xb7\xb8H\xd2\x0b\xd6\x91CnH\x95wH\xca\x06Ir3\x8d\xbe\xddMZ|\x0b\xe2\xa7\xf0\xc6\xa2\xb1\xb6\xe6\xd3n\xe4\x02e=c\'\x85\x91G\xf4>\xe2\xab\x96\xab\t\x94A,\xd2\x0bU\xc9\x85J\x85s\xce\x01#\xbdw4v\xd7\r\xe5\xdcO*H\x84\x08\xbc\xa4\xde[#\x199#\xa6\x06+3\xd5!\xb6\xea1\xcfmr2\x8e\x84\x1c\xf6<\xed\x9e0x50\x85*1\xdf\x15\xf6]\xac\xaa\xfb\x19X2\xb8\x18 \xe4\x10{\xd4\x8a\xc7\x83\xda\xbev\xfb0\xf1\xc8\x1a\x93\xf8n\xfeW-\xe6\x13c$\x80\xf2G-\x19\'=O+\xfaW\xd0k6\x19\xb8\xcf&\xbc^\xff\x00\xa6\x7f\xa3\xdd=\xb5\xd8\xce\x1c4O\xd9\x91\x87\xe6\xdb>\xdb\xd5\\\xa3S\x1d\'=\xbfJ\x92E\x07\x00\x0f\xad*\x00\x075\xd5\x8ay\xe8\xec\x0f"\xb8\x9bt.U\xc7=kL\x96\xa6+\x0bk\xd3\x1f\xf0\xa4\xfc\xae\x06\xc3\xb0\xaa\xd2\xd9\x91\x93;\x8eEp\xd8Q\\g5\xea\xa3\xc8Fj#]\xf1&\x85\xe1x\x91\xb5\x1b\xccM!\xc46\xb1\x8f2y[\xb0D\x1c\x9f\xedQ"\xb3\xb8\xbcr\xcb\x1f\x97\x17\xb9\x18\xcf\xd0R\x89\x0b\xb6rjg\xcbc\xff\x00\x15F\xf1G\xda\x06\x85\xe1\x80\xd1I(\xb9\xbc\xfe\x1bX\x98\x12\xa7\xdeF\xe8\xa3\xfa\xd6O\xe2\x7f\x1fx\xfb\\\x96\xea\xd3K\xf0\xd6\xa3cb\x84\xab\x94S\xe78\xe9\x96q\xc2\x8f\x85\xfdk7\x83\xc2\xfe \x12K4\x96rFn!\xd8\xc6@\x85\xb9nC\x02r\xa3\x8c\xe6\xaf-z=\xaa\xb4Mqx\x90\xc6\xc0\xb7\xe7]M\xed\xbev\x14\xa4x\x00\xcb\xcc\x87\xfe\xd0\xc3\xf7\xa4|K\xf6\x81\xae\xf8\xc3Qh\xafeH\xed\xe2\xc9Kd$F\xb9\xe0\x1fvo\x93U\x14\x99\x16\xe5\xd6s\x93\x10$\x83\x8e@ \x9e\x86\xb4\xcb?\xb3\x0b\xa9\xe6\xfb\xc6\xa1\xa8E\x1ce\xc9h\xe2]\xcd\x93\xfc\xa4\xe0\ng}\xf6E}\xff\x00_&\x99\xabE(9h\xed\xe6R\xae\xe3\xf1m\xde22{v\xab\x98z\xbfA\x85\xbc\x94\xbaD\x00s\xa5\x8a\x96\'r[\xde\xa5\xc5\xd5\xec\xe3+\x19\x91T\x0e1\xb0\xaa-\xc8E\xb1\x9a\xdb\xc8\xb7c\xbd\xf6I\x82\x08Y8-\xc1\x1d1\xc6}\xe8\xd1\xade\x86\xde\xfa\xd8\xdd\xd8I\x00\xb7bL\xb8\x0e\xa5FAM\xd8\xe7\x8cdsQ\xd2\xcd=\xdb4r\xc52\\"\xaa\x0e\x02\xedX\xc66\xb0\xeaH\xe3\xe9^\xae\x95v\xef\x18Ur\x08/\xce\xd0H\x03\'\x04v\xadR\xcb\xe5J\x85\x9c:\x03\x85\\`\x91\xc0\x1d\xea\xcc:\xba\xfay8\xdf4\xe1%Y\xca(\xbe\xb8\x11\x8e1!f#<\xe4 \xe8>)\xb5\xcb\xea3G3Cp\x98T\xf5yc\x07\x91\x8e\x7f\xcdN\xd8i\xa3U\x92\x14\x84\xacN\x00\x0e\x826\x00\x05\x18\xdcXg\x9fz\x9f\x8b@\xb7\x8fQ\xba\xd3\xa2\xb9\x89\xe3C\x12\xb0W#\xef2\x17\x18\x8d\x00<\xe4\x9eO\xb0\xc8\xa0\xba\xee\xfaAR@]\xf78\x1bm\xf1\x8at3\x1d\x83\x10H\xde\xb3\xad\x1b\xc3Z\xa6\xa7s<\x16\xb24\xd2\xabn\x8cd)r\x06J\xaex-\xf1\xd6\x9c0\xbeu\x11\xc8\xf1\xe62rXa\xb3\xf3\xf3[V\x9d\xa4k\x1a4%t\xfb/)\x95\xe5\x90\xc8fT\t+~\xed\x9c>y\x00p\x17\xafsP\x1ag\x84o5\x19\xda[\x9f\xfa?Iyd\xb8b\x8b\x12\x05\xdf\xe6\xb9\xee\x18\x11\xfa\xd4\xcf(\xdcG\x00\x10\xb9\x92C\xbeT\xaa\xf6\xc7=\xe8\x8ec\t\x94\x99T"\x8e\xcd\x93\xf3Y\xe4\x17O\x1f\x97\x1bC\x97\xdc\x00bx=\xaa\xc55\xc3F\x96\xed\x14\xb8\xc6\xe1\xb9y\x05\x87\x0cx\xff\x005)\xafx&\xfbG\x9ax\xe7\x8b~#I\x04\xf0\xfa\xe2h\xa4>\x87\x04v8=G\x15\x15a\xa4\xdf]"\xc3km\xe6\x93\xd0\xc6\x84\x9e\xb8\xe3\x15V\xf6d\xca\xf1\x1bf\xf35cI\x1e\xaf\xb0\xa9I|\x8d\x1aH%R\x84d0;Wz}\xf8B]\xca\x9d\xccCu#\xf2\xf9\xab\xc6\x93\xad\xc6\xb6\xda\x9d\x94\xda\x93\xc1h\xd6\x93\xb4\x16\xc5K#J\x14\xed\xed\xc1\xf5\x13Qw>\x16_\x0f\xd8\xbc\x9a\x9d\xccQ^H\xa4\xdb\xd9B7\xc8s\xd1\x9c\xf4P*)%fx^x\xd7lq\x07(\xcc\x14\x17\x07n\xe022O\xb7\xb5%\xed\x9f\xa4\xdc\xa4\x85\xf4\xc9$d4;\xfe_f\x0b\xfd\xe9q\xdc\'P\x88\xa8\xf5 `C\xe3\xb8\xee3\xfdkG\xf0\xf5\x9c:\xed\xa6\x9f\xa5En\xd1Ost\x82[\xb6\x9b8\n\x0f\x08\x98\x00\xfc\x8c\xe75)\xac\xd9Zi~\x0fh\x10+\xc8\xda\xc4\xf0]I\xc9Vk|\x85\x07\xfd\xb8<\n\xa8\xe9z\xf4V\x97\x92m\xd4.-\xb4\xc2\xfb\x1b\xf0\xabz\x86x f2\xc4z\x9dF@\xa4\xa5\xd6Z\xe2\xc1\xedm\xed\x1dB\x19%\xb911\x967_31\xbe\x18d2n\xdb\xbf\xab\x0cf\x90\xb0[\'O\x94\xaa\x83q\xe5\xc9\x10l`\xe3o\xca\x07\xdf\xd4~i\xe6\x17-{\x11.|\x80\xe8\xe5s\xb6w\xdc\x93\xf6\xc0\x1d\xea\'J{\x8f\xbfK\x0c6\xefp\xf7\xa8m\xe4P\x82IdG \x11\x1e\xe1\xc3`zOj\xbf\xf8z\xebN\xb0\xd6\xe6\x8e\xea\xc5\xee\xec\xe7\x87\xc8\x8cK\x16\xc9\x19F\x020\x00~<\x0c\x1295\x9aM~ \xb9X\xe3\x90\x80\xf8p\x03w\xc7\xc7qW\xbb\x19,\xad\x96\xc2i/\x8c~Q\x12\xc9\'\xa9\x84`z\x8barx\xeb\x81\xd6\xa1\xda\xcf9{u<\xa4\x82MM\x8278#\r\xces\xbeju\xfcp\xbcR\xf2\x03\xc6W\x0b\x90\xde\xf9\xc8\xdfn\xd8\xadGX\xd2\xaf\xf4\xab/\x0f^\xe7h\x81&X\xe2\x90\x1f0FX\x15G\'\x82\xc1p\x07|u\xa9\xfbMgG\xd4\xe3\x86\xea\r<\x89\xa1q\xb2r\xaa\xa5s\xd5\x1d\x86\x01\xe3\xa9\xaa\xad\x85\xa6\xbb\xafB\xba\x87\x99sui37\x95%\xc3\x04.\xbd\x03\x05s\xdf\xfaUvG\xd7\xed\xf4\x9dKN\x8e\xc8%\xb8\xb9s4\xa5\x86#\xdc\xbb\x1bp\xec;\xfb\xd5\xe4C\xa8C\xd4\xefd\x16\xf3\xad\x9c\xb1#B\x19u\xeax\xd0(\xc1\x03\x03\x8c\xe4qY6Ky\xed\xe1\x89\xee\xa1{\x98\xa5`\xe5\x1f@U\x91\x89*Frq\xc6\x0f5q\xd7\xbcP\xba\xd4\xcf\x04\x17\xb1\x08\x11\xf6\x08\x11\xcedn\xdd:\xf3\xc7\xb5eZ\xde\x9b\xe2\x0bO2\x17\xb2f\xbc\xc3\xccUW\x05"\x04(a\x8e\xe4\x9cb\xa2\xee/c\xd3\xe7\xd6\x12\xf6I\xfc\xef\xbby\x16\xfeATPN\n\xb1=v\x8e\xb8\x1c\xd4\xa5\x9f\xda\xa5\xca_\xea#Rv\xb8\xb6d_\xba,k\x82\xae\xbc`\x93\xce\x1b\xa9\'\xbdA\x11G\xd5o&\x93\xaa\xdf\xb8r\xc0\x04\x1c&\x9c\xe4\x1d\xfe6\xc5Z\xc5\x03\xf4\xc8\x11,m#1\x85\xef\xb1l\xe3\x04\x1e\xff\x009\xac\xeeY5\xe6\x86vhX\x8bd\xf3\x1bc\x89\x1d@\x90\xc6x_\xe2\xdc:u\xc75\xed\xc7\x8a\x19\xda%6\x97\xb7W>_\xfd<\x9eqIc\x93\xf8\x8b\x92\x0eF28<S{-oV\xd3\xe1\xd4"\xb2\xb8\xb8\xb4\xb6\xb8\x93\x12\xbcd\'\xac\xe5\xd7\x0cz\x1e?J\x9e\xf1\'\x88\xed\xb5\xfb}5\xe3\xb50\xdcB0\xf3\x06\x04\xce\xca\x8a\x81\x9f\x03%\xce\t\'8\xe6\xa4B\x9d6\xda\x1f:?L\xcb\xba\xc7"j\x0cw\x03\xed\x8a\x9f,w22\x86P\xd16s"\xbe\n\xe0\x03\xb8\xf94\xcbI\xd1f\xbf01c\x86\x04\xc8\x0f9rq\xf9\x00)\xf6\xb1\xa0[ZC\xba\'\xcc\xbc\x12\xd9\xc0\xe3\xb5Lhw\x97{\xa4D\x9e\x18\x84\x83hg\x18_\xd4\xf7\xa6^!\xb5C\x10E\xbd\x13\xcb"\x92YO\xa0\xa9\xf7#\xde\x89 \xe9\xd6\xb6\xc1\xe5p\xd26FA\xdf?AQ|\xc9\xe4\x9c\x85S\xa7\x9c{\xd5=${(\xa4\x95\x18\x96x\xf2\xc1[\xb7\xb8>\xd5\xe7\x9a\xa5\x16K\x88Z5q\xe9Fa\xbd\x81\xf9\xe34C\xa1j\xd0A\r\xda\xf9SE\x9c\xb2\xe4\r\xb8lgi\xea>\x952\x1e\x1dN\xee)\xa4\xb5,\xf1>\xd4P0>I\xcf\xb5B\x8cC\x1a\xb1\xd5\x97\xc0a\x93\xd8\xf7\xcf\xb5If:T\xaa\x82\x01\xc1\xfa\xd4\xf7\x86|A\x06\x95o}m%\xb1\x85e\x8bb0\x1ds\xf8\x81\xfd)\x8d\xd5\xdd\xb5\xdd\xd4\xb2\xac\x8b\x16\xe1\x8c\x05\xc8\xe0u\xc0\xab\x8e\x9d\xa8i\xec\xf8\x9bG\x0fol=\x03|q\xb9uel\xb6A\xc8=1\xed\x9a\xf3\xc5\x1f\xfaz\xee\xf5\xae-\xd5%i\xdb}\xcc *(\\\xe7j\x95\xce\x0f\'q\xa7^\xf5\xd2\x12E\xecn\xb1\x14\x014\x95$7}\xf9\x03\xe2\xabf\x81^\xe0f\xdd\xd5\xa4\x04\x96\x04\x11\x91\xdb\xe3\xefX\xe6\xa1\xa4Ev\xf2\x15\xb8\x12\xc7\xfc<\x8c\x8f\xd7\x15\x99jzT\xf6\xd3\x84\xb6egi\x1c2.\x08o\xcc\x1cq\xf5\xad\xa7\xc6:)\xd3\x0b\\\xe9\xd6j\xa9\xa8*\xb8\xb6\x8e6\xdb\x14dnP\xa0\x92y\x07-\xf5\x1c\xd5N\xc2\xdbMk\xeb8\x1e\xe27_#s\x08\x97hF\xe4\xed\x91\x899|\x1c\x1cv\x02\xad\xed\x90\xc6\xd2\x97\x91p\x988\x1c0#m\x8f\x15\x19\xa2\x0c\x10\xa0;\xf7\xce\x08\xc5Vmm\xafl\xa2\x8aD1\xa9u\xf4\xabn\xcf=;S\x11\x14\x86\xe4\\\tLr\xa6p\xb1\x83\xc8<\x1c\xee\xc89\xee\x0fQ[\r\xf7\x87\xfe\xf8\xb8\\\x85\xfe^\x98\x18\xea*\xbdq\xa2\xc3\x04\xc2\x18\x90\xbb\xc7\x188e\'\xaf^=\xfehGh\xa52E)I\x07\x0f\x9c\x1andr\x80?\xad{\xabn\rT\xb4[Yf\xf3\xc4\x10\x19\x05\xaa\x83\x87m\xa0\x83\xc1\x00c\'\x14\xea\x0b\x8b\xa7\x97zC\x92wq\xd7\x188\xabt\x9a1\xb5\x83\xce\x84\x04\x90cx\x00\x9c\xa8\xeeG\x18\xaa\xbb\xe9\x17M6\xf8\xe5\xfd\xd39\',T\x83\xf5\xf9\xa8&M7R\xb4\xc0\x81\xcew\xce\xe3\x7f\x8d\xea]\xbc\xec\xa8\n\x9c\x81\xd8S\xb3\xab\xce\xaew(W\x03\x19n\x82\xb8\xb0\x99\xef/\xb7\xc8\xden\xf2\n\xb0\xe7\xaf\xc7<R\xbf\xfazH\xe32I,c\x00\x9f,\x0c\xf29\xe3\xde\xa5t}\x17\xf6x7&\\\x12\xc7\'9a\xfat5\x12k\xa8^)\x96\'$\x93\xe9_\x9a\xb1\x82\xe1\xd9\x93P\xc0\x15\xb5}\x9dk:\'\x86\xa4\x9a\xe6\xea\xd5\x9e9\x07\xdd\xf6\xa3\x86e8\x1b\xdb\x07\x1c\xb1\xed\xd8T\xef\x8a\xfcqo\xaci\xf7v\x07I\xb7H\x99\x81\x8eS\xf8\xb6\xa9<\x003\xcb\x0cg\x9a\xce\xf4\xc1\xa2B\x93D\xf7\x10\x92\x02H\x11\x8e\x19\xfc\xc6\xc7\xa7\x1c\x12:\xe3\xae*P\xe9\xb6\x96\xb3\xb0^X6\xe5\xe3p\x19\xf6\xa7\xed\xeez\xaaZ\x8be\x92\x08\xad\xa4%\x9be$\x86$\x1c\xed\xdc\xf1Q\xe7\xb2\xe9\xad{\xf8\xc6\x86G\xb8] \x12\xcd\x80Wq\x81U\xcb$\x9a\x07h \xb7E\x87w\x19$\x90I\xc9<\xd2\x1a\xac7s\x89wNA_NKd\x9f\x9ez\xf4\xab\x95\xe4\xbe]\xbcs\x86\xe22\x06x\x1f<\x1cTL\x93\x0b\xf8\x11\x96"\xae\xca\xcc\x01=\x15y-\xf01\xcdV\\\xd8\x88\xe62\x891\x9c1\\\xfec\xf0*\xc69\xd9\x94m\xb7\x19\xac\xda{\x88\xed\xa2\x9e6\x83\xcf\xf3B\xae\xed\xcc\xb8e\xe0\xf0:\xf1\xefS\x9ad\xc5~\xef\x8b\x14\xb9p\xa5@e\xdd\xb4\x91\xc7N\xa4u\xc7\x7fj\x98\x8b\xc3fy\xbc\x94H\xbc\xd9\x1c\x13\xd4`\x9f\xe2\xe7\x83\xf5\xa2{\x7f\xd8\xce\xee\x86d\x92\xdf\x0e\xb2\xc6FU\xf3\xc3\x129\x03\xae1Rci\x14@<\xcd1\xeb\xc8e\x199\xe7\x15\xd2C\x87\x19\x19+\xc6}\xf6\xa7\x91Z\xdb\xe9?\xb2u!s\x03\xcf$b\xe9 \x18}\x8c\xaf\xb4,\x8as\x82G\xa8g\x8fz\xacx\x8a\xff\x00U\xd7\xf5\x0b\x8b\x8b\xb9\x19\x96WQ\xe4\xc6\xb8@\xd8\xc6I\x1dX\x8ao#_-\xdc\xae\xa42*\xa2\x9fF\xd0N=\xf1\xce;\xd3\x86\xfb\xb9\xf44\xdeS\xf2\x1eV}\xb1\x82@P\x00\xee\xe0\x9e\xd5k\x0bJ\xcd\xa5\x0b\x08\xe4\nJ\x16\xd4\x0bc\x9f\x8f\xb5Cx\xe3\x1e\xa9\x002.\xa1\xabN\x08\\\xf1\xf4\xa7\xbe\x1a)\xa1\xdb>\xa1$\xf0\x08\xa7\x9cZ\xc7\x1e\xec>Qw\x92\xcb\x82v\x9eAo\x8e\x95~\xd4\xed\xb4\xe5\xd0^\xfd[\x0fw\x12\xb0k\x92c\x91\xa1\xd9\xc8u^Y\t\x1e\x901\x92*\x85\x0e\xa3n\x93\xe9\xf6\xa9\x18\xba\x83Ng\x92\r\xf1\x80\x93\xce\xf2\x02\xcd \'\xf0\xe0c\x8e\xb8\x15X\xd6<A<\xb7\xdfu\x82P-\x9b\x0em\xf8UM\xa7\xf0!f9A\xd8\xf7\xf6\xab\xf8\xee \x8e\xdd\xa3EG>^\x08\x1b\x90\xf8\xdc\x8es\xedU\x12D\xef"\xb33 \x0f\x9d\xbf\x99s\xb0?\xd6\x91?v\xbb\xd4\xd6+\x99dpv\x00\x8c\xac\xee\xc3\x18\xcf<a@\xe9S\x16\xe6\xde\xce\xecIj\xb1\xc2a92\xaf\x07#=A$f\xaa\xd2\\\xcd\x14\xcaZ\xe4\xcd4\x81\x15\x00m\xf8\x8d\x01\xc0\xcbt\x034\xde\xda{tk\x94\xf2\xe5b\xd2e\x86\xf1\xf8\x88\xeb\xd0\xd5u\xc4P\x94F\x8eS\x18#\xff\x00s\x18\xcbg\x04\x13\xbe)&\xe7\xcbw\x0cT\xe9\'l\xf6\xc5M\xea\x17\xb0\xdb\xef\x05&y%\n\xb1*\xe3\x0e{e\x8fA\xf4\xaa\xad\xca\xdc\xcf\xbe)|\xc2\xa0\xb4A\x90n\x8c0\xc7q\xd7\x1d\xcfJ}q\x04\x97\x16\xae\xa6\xefca\xcch[\x0c\xe1x\x1f\xd4\xe0\x01\\6\x91w\xe1\xe9\xac\x13P\x9a2n\x11n$\xb7-\x9d\xaa\xdf\xc2\xfe\xc7\x8av\xdd\x02\xda\xef\xe8\xc9S\xa90s\x9d\x81\xce\xfb|Uk]\xcb{u\xe5\xc4\xe5QG\xa8\xd5\xeb\xc3Z0\xd24w\xbd\x9d\xa3\xbb\x88\x8d\xd2\x04uM\xb2\x9e\x15\x1b\'-\x8cd\xe3\xa6j?S\xd6\xee.\xa4d\x13;#\xed\x06VP]\x10p\x14})h\xad\xe1\xd5!\x8e-<-\xb9\x96DW_3\x10\xbb\x9f\xc2X\xb1\xe3\xe4\xf4\xa8\rQ\x84D\xdb\xc7\x08\xcc^\x99YN\xec7C\x8289\xedO\xdd\x85\x95"\x8e \xcf\x92\xba\x9f\x1d\xc0\xe3lm\xfd\xea\xce6{q\xa4\xb8\x18\x1e\xfb\x90{\xfdj_Q\xf3m\xac.M\x9d\xc9h\xc2\x00\xcd\x8c\x16-\x81\xcf\xcdT\xb4tY\xc6\xa4\xf7\xd7R\x08\xac`.\xa5\x07\xfa\x8ep61\xfe\xe4S\x8dn\xcbU\xb6Y7Y\xcdm\x14\xbbV8\xe49e%A\xf5\xff\x00)\xef\x8a\xe2\xf3T\x85\xf4[\x1d9Q@\xb5RZU^\xac\xc7\xf0\x8f\x81\xfdi\xcb\x0bca<\x90]\xc7\xa2@r\x88s\x821\x81\xcf\x03~MC\xbc\xbcY4\x98\x9c\x1dC\x19\x1b\xe3\xe7jv\x17N\xbc\x82\xd0\xdb$\x91\\d\xf9\xc1\x98\x18\xdc\x13\x95)\xdf\xea\rX\xf4\xc5\xbd\xba\x9eR\xf0\xa4\x85\xd7k;\xb79<g\x9flqQ\xd6\x16\x10\x1bxn\xa3\np\xa5\xd8\xf4\n\x00\xf6\xeci\x0bM}\xb4\xf9\x8d\xdc\x0b\x04\x9e\xa6TI\x0eNH\xc6\xec\x0f\xe9R\x84/\x89\xa4\x11p\xa3Q\x04\x0e;\xfbo\xfb\xd4ma\x1a5i7\' o\x81\x9a\xb7\xc3\xe2k+\x19\xed\xd2x\x84\xfbr\x8c\x83\xb1\xe9\x9f\x93Z\x1e\x87-\xa5\xc3\xc2.\xed\xa1{Cp\x19\x9a@\x1b\nzp}\xab/\xd2\xbc*\xedeo\xacL\t\x89\xe5\'9\x1cc\xa9\xc5Z~\xf76\x0c\x16\xe8\xd2\xa4\x8c\x08\n2\xc7\xf4\xaa\x9b\xbb\x99\xed<\xa0mNuf3\x8c\xe7P\xc8\xcf\xc1\xabk{d\xb8\x12\xa3K\x90\xeb\x87\xc1\xe3\x15\xa0\xe9\x9a\x96\x89\xe1\xbf\x19\xcfp\xd1\x89 t\xdbm\xe4\xff\x003c\xb0\xaf\xa5"\x97\xcf\x8a96\xe3z\x83\x83\xdb5\xf1\xff\x00\x87\xad\xee\xf5\rr\xc28bE\xba\x8aee\x8ep@;y\xe75\xf6<\x11H!\x88H\xa08Q\x90:f\xaezT\xd2M\x04\xac\xd1\x04\x1a\xf2\x00\xf7;\x9a\xc5\xf8\xae\xde\x1b{\xcbeG,\xfeH\x0cI\xec\xbb\r\xbek\x8a\x07\x1d)\xc7\x95\xf1^\x18\xea\xc0\xd6hR\x1b\xc8\xa3x4\xa1JD\xa7\xc5&\x95]dQ\x9aH\xee\x15\xe6\xff\x00z+\xb4\xa1?5\xe6\xea\xe0\x9a\xe0\x93E\x14\xe35\xe1\xa47\xe2\xba\x0e(\xcds\x15\xd1\xae\n\xd7{\xc1\xae\x86\r\x14R\x1biE\x14\xb0Z\xf7ev\xb9\\\xa8\xa5\x00\xa0-u\xb6\xbbEq\x8a)CE\x15\xca\xcd\xd5\xd6\x95\x0e*\x14L\xd4\xaa\xca\xe6\xab\x83T\xd2*[x\xf7\xa3"\x98\xa1sN\x91\t\xa5\x02i4\xa8\xe6\xbb\x08\rz\xb1\x9a\\&)x\xaef\x93X\x87\xb59H\xd4W\x1c\n\xec\x1a4\x8fj5\x1fzr\xbbE+\xbcb\x9ag\x15\xe1zX\xda\x92~\xb4\xe4\xb85\xc1"\x9b\xee&\x80M\x19\xa3\x14\xedM*\x08\xf7\xa6JX\xd2\xeb\xf3J\x14\x93NCW`\x03M\xc1\xa5W5\xd1\\\xa5\x80\xafq\\\x03]\x8c\xd7qEy\xb6\xbd\x0b^\xe4W\xa0\xd1Ez8\xaf\x98\xbe\xd4\xf4\xd3\xa0\xcd\xaa\\\xcbo\xe6[\xea2#G(8\xf2\xdb\xf8\xb2?\xcd};\x8f\x8a\xae\xf8\xa7\xc3\xb6\xfe(\xd1\xee\xb4\xe9\xce\xd1*\xfa_\x1c\xa9\xa8]B\xd7\xf1V\xee\xa3\xf3\x00J\xfdqV\x1d2\xf4\xd8\xdd$\x9c\xa1\xc0q\xee3_\x9fQ\xfd\xcfRi#\x96|\xc7\x17\xaa6\x03-\xb8\x7f\xcdAjO5\xaa\xa4\t\x1e\xf1&\x01LrI<t\xeb_Lx_\xecm\xb4\xddsR\x87_\xd3<\xeb\'\x80\xbd\xbd\xc4R\x95\x01\xf7c\x9cw"\xaf\xb6\x9fd\x9e\x0c\xb0\xbf\x86\xfd`\xb8\x95\xe1}\xf1G,\x9b\x900\xe8H\xc78\xac\x1c\xdd\\\xd8\xddK\x04\x91H^%\x04\x07\xc0\xceFGz\xd1\xdeuk%W\x08\x0b\x16\x19\xca\xee7\xedT\xef\x0c\xebW\x1fg\x9a\x0e\xa2\xd7\x97`\xdc\x1bk(m-V\x12\x04E\xc6\xe7r\x0f\x0c\xca\t\xe4\xd5*\xea\xe9E\x82j\xb6\xb7l\xf7\x0e\xf8\x12\x1961\xda\xd98Q\xc8\x0c\rj\xdfi::_x}\xf7#m\xb6\x7f4\x94]\xd2p\xa4\x0c\x0e\xff\x00J\xf9N[\xe3k4\x16\xce\xd1L\xc4\x9f-\x93\xf1\xa1 eH\xec3S\xbaWY\xea\x1dS\xa6\xc4\xf2@\x0c\xb6\xbe\x97 \x8dZ\x9b\x92\x07\xb7\xb6\xd5\x13\xa7\xcbl\xcb+\x8c\x99% K\x9e08\xa9In$&\xed\xa4\x94\xf9\x97[\xb7\x82N\xe3\xbf\xb8#\xfa\xd2pMj\x0cv\xea\xcd\xb0C\xea\xc8\x00oRr\x06;}i\xb2\xc9\x18\xdd\x0c\xe0\xab\xe7p\xc9\xc3)\x1d\xbe\x95\t>\xa7\x15\xbd\xe1y\xe7\nQ\x82zNx\x039c\xde\xa7\x07\x92E\x7f1s\x92q\x19\x1a\x98\xe7\xb8\xc5XEs\xe5I\xfe\xdc\x0c7\xdb\x8a\xbcO\xa6\xd8J\x8b\x1b\x10\xce\x01a\xb1\xc3+q\x9cW\x16P\xda\x1d\xcb ,N\x02\x8c\x8cu\xc0\xc5T-\x9a\xeeY\x9b\xc9H\xd8;\x03\x00V!py\xeaif\xbc\x8e\xd5#\x04Je\x0cK\xa2\x9d\xb8\xc7uny\xcdG\x8a\xc6R\xef \x90\x18\xd9\xb0\xb9?\x97\xe9\x9cT\xdf\xc5\xa9#\xdb\x1b\xd5\xaa\xe2\xcc\xac\xad\xe4\xdd\xack\xe6\x87m\xa7oN\xc7\xe9O/5\xa84\xfd6\xf8\xc4\xb2\xdb\xcc\xd0,K*\x9d\xf9\x0f\xc4\x84\xe7\x18\x0c:|\xd5\x0e\xd3\xc40j\x177\x11\xc2\xd2G\xb0)-#\x06m\xe7\xaf8\xe4}jV\xf3\xef\x92D\x89,"@S(\xfb2\n\xb1\xc1$\x8fl\xf1\xc5*\x08\xee-n\xca6\x01RFNN\xc7\xd8\xf6\xe6\x9c\xf3\xa3\x96<.\xe0\x90H\xed\xc8\xe7\xe2\x9b\xd8\xeb\xc1\xac\xd3K\x96\x12\x90\xcbp\xb3M0bd!A\x000=p\x0e\x061Wm+\xc4\xbaE\xbe\x87\xab\xe9\xcbk.ev\x16\x97\x01T\xc8\xb1\x12p\x0e\x7f\\VM\xadXj\x1e\x15\xbc\x8e+\x81\x98n\xe1\xf3\x10+#\x96\x8b9\x0c\xa5O+\x9e\x82\xbc\x8b\xc4:k\xc3\x18IB\xc8\xab\xb5A8\x19\xf6=\xea\xfe\xe5\xef hr\xa7PQ\x19\xca\xe7\x0b\xbfn\xdc\xd4Q-\xa9,\xce\xcb\xeamG\r\xc9\xf7\xcdj\xf0\xdf\xdb\xcc\x8f%\xd5\xf5\xcd\xcc\xaa\x08\x8a\x17e\x88\xb2c\xd3\xb9\xc1\xe0t\xe1~\x95\xde\xa6,\xa0\xb7\xbak\x19\x84Wm\x03\x19\x07\x98g\x8e\x06\xc6\t\x1b\xf2\x08\xc1\x1c\xe0\x91\xda\xa8/\xaeEh\x02\xdeik\x13I\x17\r,l$ea\xe9e\xdc@\xe3\xb1\x02\xa3\xef\xfc\\\xf73\x13<\x8c@\x88e\x17\x18\xda\x08\xf4\xe0c\xf3\xf7\xa8\xb1:\xdb\xe4\xc6\xa1\xdd\x9b \x85\xce\x0f\xb9-\xde\x97$\x91M\xf9\xa4\xc2\x01\x8cj\xc7\xf4\xa6\xd6\x1eD\xa6d\x9ay\x1aD\xe0\xca\xa3\x86?${\xd3\xf9e\x921\x1b\xac\xb2K\x1c\x92f@\xd8b\x0e0\x0e~qTk\x0b\xfd\xcbr\xe5\x9cBd\xc4\x85H\x04\xe4\xef\x1c\x0flsW\x85T\xba\xb4\x08\x93\x08\xe4\x8b%Y\x17-"\xbf\\\x92y\xc7\xb6)?\x84\xd2\xf2jb\x99V\xe7l\xd4/\xc4\x86ud\xdf\x81\xb5],\x04\x171I*\xcaN\xe4\xdb\xcb\xeen\x06\x14c=>\x05W\xe7\xbc\x8a;\xaf)K\xa3n%\xd8s\xb4\x13\xdf\x9e*\x1a\x7f\xff\x00*}\x91\xdc\x1b\x98\xd6M\xb1N\x17b\xb9\xeaY\x86I\x18\xe3\x1e\xf5-=\x9b\xde\xd8\xcbv\xb0\x17\x1f\xfdY\xd5\xd7\x05\x8f?\x84s\xd2\xa9\x7f\x00\xd0I&\xb0e\x0er\x089\xc0\x07\xdf\xe9SM\xde\xb4;`\x81\xde\x8b\x1b\x9b\xa2\xe94WL\x1a\x17\xf3|\xc1\xcbG\xb4\xf0\xc0\xff\x00\xcd}\xcb\xe1\r~\x0f\x12\xe8\xfa~\xa2\xcd\x912m\x9fh\x03\xcb\x99?\x1a\xb7\xb6s\x95\xf85\xf9\xfe\xc1m\xe3\x8f\xf7\x93B\t?\x85\xff\x00\x1a\x100\x18\x11Zg\x81\xbe\xd15O\x06Zj)\x04\x96\xdbnU\x14\xdb]\xa9;\x9b\xaa\xb8\x00\x8cpz\x93\xd2\xa1u\x1e\x89o|ci-\x96eA\x96\x1aA8;\xecOz\x81+H\xcaB9G\x07l\xf1\xf7\xaf\xbb\xb4\xeb\x9b{i\x88,B9\x00\x12x\x1fZ\x8e\xd7|A\xa5\xe9\xe5\xae/n\xd2\x18\xf1\x84\xdd\xf8\x9f\x1f\xca\xa3\x96\xfc\xab\xe4K\xef\xb5\x1f\x18_$p\xc3\xaaAhrL\x91ZB\x88T\x0c\x11\x89\t|\xee\xcf\x035U\xba\xf1]\xf2\xcdu%\xe4\xf2^\\9+\x99d\xdc\xeb\x8e\xc5\xbe=\xaa\x81z7W\xff\x00O\x8f\xa7\xbb\xdb\xc1j\x93y\x8a\xa0\x12\xfb\xef\xa4\xe0`\x00Mqb_8\xca\xc4\xea+\x82{}kn\xf1\x17\xdb]\xd4S-\xbe\x8dd\x96\xc1\x99\x94Mv\x9b\xe48\xe8\xdbA\xda\xa3\xdb9\xacC\xc2:\x9f\x885\x9f\xb4\xad>y\xa7\x972\xcd#\xdcH\xe3%\x91T\xb3.H\xe8\xd8\xfc\xbbU;X\xd7&\x9a\xe2\xdd\xa4\x8a9\x1c\x05_\xc5\xb3\x8cd\xe2\xb5\x0f\xb28SU\xf1[\xdc\x88\x9c%\xa5\xb3\x00[\xbb\xcf\x98\xd7\x9e\x9d\t\xab\x1b\xcb8\xfaoD\xbcs\n\x12\xd6\xce\xa1\x8f\xabw\x1aF>\xa6\xa3_\xba\xc7mp\xca\xfb\x05?\xae8\xad\xf2I\xe1\xb5\x1ecH\x8a\x18`\xab\x0c\x9f\xca\xa0?hC;6\xd6,@\xca\x80xe\xea?:\x88\xd5.\x95\xd9\x92I\x15\x0c\x0c@\x04\xe0\x86_\x7f\xadEXN\x1022\x83&\xdd\xa0\xe7h\nI\xe5\xbd\xf3^w\x15\xa35\xb2kv:\x06\x00\xec2sXh\xee\xd9u\x11\xc9\xab|:\xc8vH\x1e2\xaa\xea\x14\xb1\x18\xc1\x1d*Nh$\x1c\xab\x1c\x1cr\x07\x7fj\xcb\xfe\xf7\'\xfe\xa0\xb0\x86k\x9f\xdd\x19\x82\x93\x8d\xa3\xaf\\\n\xdf$M6\xdeha\x96a\x1e\xe8\x95\xd4\xe4\x95\xda\xfd2Fy\xa4\xdct\xd7\x8d\x90\xc4\x00%5\x10x\xdc\xe3\x93G\xe2\x19\x81\x0c\xdc\x9ek\'\xf1\xcf\x87\xeco\xf4V\xd5\xa6\x81\x9a\xe2\xc0+\xbc\xa3\xf1\xc9\x018e\'\x9c\xe39RzV\'kz\xb6\xc5\x12\xde\x18\x8bI\xc4E\xc0b3\xc1\xc8<t\xe7\x9e\x95\xf4\x7f\xdalp\xc5c\xa3\xdaZ^*&\xa2\xee\xb3\xfa\x88C\x1e\xd2w\x13\xdb\x04W\xce\xda\x86\x90\xfau\xe4\xbeu\x84\xc2\xd9S\xcb\x8eX\xa3\x0c\xden\tPA#\x86\xf7\xee:q^\x8d\xd0zE\xfc\x1d5\x0c\x92j\x0b&\xcc\x0eB\xe4d\x00}\xabo\xe1\xab\x9c\xda\x94\x92L\xfa\x8e\x85<\xe9\xab5\x9e\xb9\xa4\xe8\xfaq\tlf\x9ad\x91!y\x08T\xdd\x9c\x07\xe3\'\xaf\xebJYC\xa1\x9d2\xdbP\xbd\xd5&K\xa9.6(\xb7R\xcc\x10\xfavd\x8c\x00:\x91\xf9U.\xde\t"\xd4\xad\xde[I\x95a\x9e0\xc6B\xbb\xa3\xdc2\xbb\x81\xc7\\d\x03\xda\xb4E\x166\xf1[&\xa0\x97\xf1&\x9b\xfb\xdb\x84\x8aH\xccR\xb2\xe3l\x90\x89[\x0c\xd99!Fzg\x8a\xd0X\xf4\xe6\xd4\xceaP\xc0i\x05\xc1\x00\x13\x81\x9c\xed\xc7;\xd6\xc1\xe4\xfe\x16\xa4c\x8c\xe7\nFH\x1d\x86}\xea~\xcav\xd7,f\xf2u\xa8$\xb6\x92B\x1bM2\xc5\r\xcb\x98\xdcm\x91KmT-\x8c\xf22\x17\x8aOV\xb0\xd3\xecu\xad>\xda\xe2K\xc3m\r\x82\x06e\x9dX\xccz\x84Rp\xa3\x93\x8e3\x8a\xcb\x86\xb7\xa7L\xd70\x9bC;\xbb\xaa[\xce\xdba_Q\xf5L\xe8\xb8\xcb\xf3\x9e\xb5n]~\xfb\xc4\xb1\xc5\xa0[\xdb\xe9\xf1\xdbB\x00\x8e\xf1fX\xe3n\x02\x99\x1b>\x95\xf68\xe9\xd0f\xac\xda\xde+\x8bk\x8dE|\xc8\xd9\x15\x06K\x19\x1bs\xa7\xbe\x01\xf88\xa6CK\x0c\xb1\x923\x1b\x87.v]\x03\x03\xd5\xf2~\xd9\xab\x8f\x89g\xd3\xd8iP@o-\x06\x9da,M\x0c\xed\xbev\x90H\xc4\xc6vq\x8c\xf0\x0fz\xb0\x8du|-\xe1\x94ab-\xcc\xccE\x92\xbe\xdf5\x831,\xd2\xaa\xf1\xb9G$\xfd\x05T5-\x16-2\r.\xee\xeb]mE.nJ]\xcdgl\xce\x02\xc6\x83\x01\x1b\x001\x18\xc7A\xda\xb3\x1f\x14y\x91^\xcbmk\xa9\xf9\x96\x919{wc\xb7\x02E\x05\x90\xaeN\x0ez\xe3\xbd2\xcdu\xd3\'\xbc\xb8e\x11\xc9"\x05C\xa9v\xca\x80\xa4\xa8\xce\xd8\x1d\xbb\xd41\x1d\x9d\xec\x10F\x18\xbcH\xec\xef\x95m\xc8c\x91\x93\x8e\xe7\xbfj\x90\xb4\xd5$\xd6\xb5)\xe5\x92FS+\xb4\x8dp\xde\xa6`\x06T\x0e\xec{\x05\x18\xc9\xefW\xef\x06Aqs\x0e\xad\x03[\xd9H\xf1\xd9Ip\xf6\xf3\xdb\xf9\xdekD\x7f\x80g+\xd7\x9ek%\xf0\xac\xbas[\\-\xf4\xf3 \xf2\xc9\x8a\xe21\x93\x19V\xc8*\xb9\x1b\xb3\xf8O#\x15+.\xbf\xab\xb4R\xdc%\xdc\xb1\xbaX\x9bF\x90\x15VxX\xed\xc3m\xc6\x17\x9cT(4\xa5\xd4SN\xba\x8a\x96\'I\xf5\x10F\xfa\xbb\xfc\xfc\xd5\xec\xb6\xcd-\x9b,,\x13\xd24\x92= \xf6\xc5Ij\x13X\xeaw\xcd-\x9d\xab[F\xd3g\xee\xc5\x02E\x12\x15\x07\xd2A\xc9\xe7=\xab\x89\xec\x96\xd4\t\xff\x00\x12\xb8`6\xbeTt\xce\xe09\x02\xa1\xbe\xf2`\xdc\xcaw\x0f-0\xc7\x83\x9e\x94[\xea\x17\x11\\\t!}\xa7\x93\x94>\xe3\x1f\xd8\xf3U\xb7\x16\xec\xd7O3\xa0E d\'\xbf\xbe?\xb5J\x8e@\xb1\x88\xd5\x8bi\xe3V\xfc|\xd3\x97\x82\xd5H\x98D\xdd\xc0\'\xe3\x83\x8a\x9c\xd2.\xde7\x11I\x02M\n\xc8\x92\x98e-\xb4\x95\xec@\xc7\xe2\x1c\x13\xd7\x14\xce\xd2\xd4=\xbb\x8d\x80(\x18\x03<s\xda\xae\x1a^\x91\xa5_]^\xdc\xea:\xb4z\\\x11\xc2\n\xc6\x1f$\xb7M\xa3\xcc\xc9*\xa0s\xde\x9aH\x19\xe6A\x18]g`\t\n1\x8d\xf3\x9d\xb1]\x92uDma\x8a\x0et\x82O;`\r\xf3V\xab\x18\xee<_\xaeZ\xd9\xa1\x9d\xe3\x11\xc2K7\xee\xd68\x89\xcb4)\xc0\t\xd9@\xec*\xd9wom\xa1\xf8\x82+\xcd7L{\xbb\x1b\xbcAwn\xe1\xb1\xbd\x18\x90A\x938e \x11\x9f\xa7z\xc1\x92\xf5\xf4\xdb\xa9~\xeb\xaa\xbc\xd6\xf0\xb3y3\x8d\xc8:~%\x04\xf1\x9e\xdf\x15#w\xe3;\xd2\xd0<\xe8\x9er\xcd\x13}\xe1\xc1\xdf\x98\xbf\x0e\xe2\xa7\x91\xf5\xc9\xf9\xa9\xb6\xddR8\xcc\xa2h_\xf1\x1ez\xb8\xb8\x041\x18\x07\xd2\x0e\x0e\xdc\x8d\xf9\x06\xa1]t\xb6\x94\xc7\xa2U\x16\xe2\x02\x9eF\xeb\xbb\x7f1\xe3~\xe3\x8cS\x8f\x17N\xda\x9e\xa34\xcf\x1c\x10\x9d\xb2\xec\xf2|\xac\x1fW\xe1$\x11\x9e\xbf\x95f\x1fz\xf2d\xf2\xa4R$\xce\x0f\x00\x0f\xfb\xd6\x91\xa4^\xa5\xe1\xbf\xbb\x96\x0bm\xd7,\xf2+\x00\xab\xe5\xf2X\x84\x12\x06\xc09\xe3\xbdSu\x8d6\xe8\x06i\xaceE\xde[\xcch\xb1\xe9=H+\x80>\x94?\xfe\xac\xb5\xd9\xc9vv$\xe0\xff\x00.\xd94\xf4r\x88\x02@\xaa\x02\xa2\x80\x06j\xbd\xa8<q\x95\xe1p\xc3\xf2\xcf\xfc\xd7Zp\x9aR\xd2\xefT\x85\x06\x0e\xe7\x19\'\xb6\xd1\xd4\xe6\xba0\xe9\xec\x17\x99\x9c\xc7\x82\xd2 \xe1\xb7\x1c\x0c\xe4\x8d\xb8\xf9\xa9Xn\xe5W]\xd0\x80aR\x1c\x14Pv\xbf\xb6\xec\xf5\xf7\xa0\x05X\xdaF,@\xc1\xc0\x19\xe6\xa5\x895eA\x035n\xf0\xf5\xc1\xb6\x96\xce\xe2\xcb\x06\xe6+\x95TG\xc3!,q\xea\x07\x82\x0epsW\xef\x19\xe9\r\xe1\xd7\xb3\x8e[(#\x92xW\xefo\x03f\x17\x90\xbb8@\x87\xf0\x80\x00\x1c\x0cV{\xe1\xa5\x91\xcd\xf3\xb4\x0c\x96\xca\xad\xb4.\tW\xe8\x81\xb3\xce\x0f \xd4\x96\xa9\xac\xea7w0\xddM9\xdc\x18"K\'9\xda\xa1\x7fL\n\x82\x08kk\xc8\xe5\x8eOYV\x85\x93\xf2\xed\xf9\x8e\xe3c\xb0\x15\x1c\x86K\x9bwGM(\x18H\x08:\x98\x9f\xca2;\r\xcdhv\xde\x0b\xf3tkk\xc7\xbb\xb6\x8e7@\xeb\x1b\x96\xc2\xee\xe0\xe1GC\xf1P\x7f\xb0%\xd1\xa7\x8e\xe1\xa3A\x1f\x9e\x00\x8eA\xf8\xf9\xe0\x15\x07#4\xf2\xe2\xea[}"\xce\x195t\x9a \xfen\xc8@\xca\xb1\x1cg\x81\x91\xc54\xb3\xd4\xf5\r~\xf2\xc2\xc4\xb2\x03!D\x0cQQ\x9b\x00\x9c\xfa@\xf6\xeai2E\x04\x01\x1a\xde\xd6E\xb8x\xd4\x0c9r\xcew\xeep\x05\x114\xf3y\xbem\xc2\x18\x839#N\x9d(=\xb6\xdc\xd3+\x84\xfb\xad\xa4\xba\x84\x97\x96\xaa\xbek7\x93(\r\xb86w\xe0\x0c\x15S\x8c\x029\xcfJ\xa7\xdc\xea\xb1Au\x8d%\xe3\x9a\x05\xdeAd\xc3\x1f7\x99#\'9+\x9e\x99\xe9\xf5\xad3\xc5\xbe\x00[[\x19Z\xe3V\xb7\x88\xc2\xa2@\x92\x17\x11H\\\x11\xb7#\x9c\x83\xc8\xac\xd6\xcf\xc2\xb7\xb1\xc3b\x90\xc7\xb4\xb9\xf4\xdc\xc8<\xb4\x93\'\x97\xf5c\xd23\xd7\x15,\x9e\xa9\x1d\x9c\x10\xf9Z%]\x8a!\xd6\xf9\'}X\xe0\x13\xfd)1Ke;\xb4\x89&\xb8\xff\x00\xde\xc3J\xf1\x91\x8c\xf3\x81KiZ\xa5\xe6\xaf\xe2\x1b\xeb\xc4\xd5-m.\xe2\x89\xe6E\x95\xfc\xa0\xa5}$F\xc7#\xd08\x08\xddEW\xaen\xac\xfe\xf4\xf3&\x9f\x16Q\xc9\xc4@\xf9D\x8e\xb8\xcez\xf54\xce\xf7K\xf1\x16\x81\x7f\xa8ZMed\xf1\xddN6\xde4a\x8a\x8e\xa3\xcbpz2\xf3\x8a\xb8h~\x1b[\x91\x14\xce\x8c\xa1b\n\xde\xca{\x93\xf2j\\\xf1\xcc\xa2\x0bx\xb7\x99\xc1\x96`\xd9\xc8s\xb1\xce\xc3\xb8\xae!H\xc4\x92\xb0\x02<\x05\x8c\x8c`\xa8\xe3\x184\xde\xee\xe1\xeeeF\x81\x08-\x809\xc0\xfaqW?\x0fxx];\xcbuuo\x0c\x88\x99\x91\xe7p\x91\xa4c\x9c\x9c\xf2s\xec95\x1c\xbf\xb1t\xedB\xcb\xce\x8c\x1ba(\xf3\xd9[l\x8a\x9c\xee*y\x19\xa8\x8dSS\xd2\x17T\x9a\xe6\xc2\x03\x05\xbc\xa6"\x07\x9c\xd3\xcf\xb4\xe0\xb33>U\\\xe3\x9e\xb8\xa9\x96\xd6\xc2\x1f\xfdU\xdd\xcce\x91\xb0a\r\xa7;s\xc7\xf5\xa8\x17\r%\xc1\xf2!\x8aEVMBl\x02\x06\xfcs\xcdIx\x92\xc3\xee3]@\x976\xb3\xda\xca\x81\xd2hI`\x11\xba\x0epA\xf8=+<\xd3\xfe\xff\x00\xa9j6\xca\xd72I\xa7\xd9\xc0S{\xa0P\xe4p\x00\xdb\xd7\x1e\xe7\x9a\x9b\x83W\x97R{\xcbyc\xde\xf7\x13<\x938\\)\xde\xdc\xed\x1cp{U\x8fH6\xf6\x16\xec\x16\xc9\xc0F(\xac\xd8*\xa3\xa6O\xcdC\xba\x9cMt\xe6<\x84l\x83\xcb\r \xf1\x81\xcf\xf6\xa4\xa4-\x14(\xb9\xd4\xcb\x8c\xb0\xc0\xc9\xaf`\xd2\xe1\xbf\xb4\x92qz\xb1[A\xc1\x0f\xc0\xfa\x03Rm\xa7\xdaA\x02\xfd\xddc\xdb(\xc8\'\x91\x93K\\\xea){\xa6\xac/m\t\xf2\xc1\xf2\xce=#=r@\xe4\xfbT\x02k6\xf6\xb6\xd2\xac\xb7Q\x16U\xe5G\xf1\x03\xedQ\x12\x15$\xcb\x1c$\xb3\x8d\xc7\x96C\x0c|S\xe8pp\xe4.\x93\xfe\xec\x83U\xc9\xf4\xa7\xd2\xe7]\xd2\xcd2\x99\tC\xb8zI9\xe9\x81\x91V\x8b]wC\xd3\x84v\xf2\xdd\x99\'\x98\x95\x88\x1eQ\x18\x9crG\xf5\xaa.\xb3}&\xb3~\xcd"\xcab\xf2\xb3\x12p\xaa\xc7\xf9\x8e1\xf9Uj\xdbH\xb0\xb4\x9d\xe4Ef\x99\xe5\xde\x101a\x16z\x8f\x9f\xad8#\xe9\xf0\'\x9d\x89\x8b\xba\x9d\x00\r\xb2}\xf2v\xf7\xa5\xfe)\xcb\xa4d\x02\xb9\xdc\xea\xe2\xb6{\xe6\x8a\xe9\xd9@]\x91\xbf\xa8\x82H\xce1\xc7\xbdAL\x96\xfb\xf3$\xaacNNG8\xe9\xc05\x05\x0e\xb4\xf0\xc6\xbbF\xf5S\x83\xb8\xe3\xd5\xf1\xf1S+\xa96\xa3j\xaaQ\x1fb\xe2=\xe3\x94\xe7\x901\x8c\xfeu\x15\xe0Y\x962\xe1\x9d\xfc\xbd\x8b\x0c\x80~\xd569_\xb6\x00\xce\xf8\xa7\xa9yy\xf7ky\xa1\x92\xe1nd\x94\xb6\xe0\x14/\x94\xa3\x01\xb29\x07?\x95U\xeeu\xeb\x08\xb5xm\xae!\xbaY\xc8csq3\x8f\xbb\x94\\\x14U\x1dr;\xd3\xd4\xd4\xfe\xe0\xd7\x11\x04\xc3\x9d\xa01\x1bW8\'\xaf|\x01PZ\x8a\xc0\xb7)\xa8jA\x1f;eH\xa3\xc1i\x17\x19\x07=\x94\x9e\xa6\x9f_\xc2\xdb\x15Y\xd2YY\xa3\xd2#\x07\x1e\xad\x8eF?\x9bo\xd0\xd3S\xddG\n\xe7\xce\n\xda\xf21\xbeq\xdb\xe9\xbdZ5f\x81\xad\x92\xea;\xb8V\x10\xaaSh\xf5\x1d\xe0\x8c\x9c\xf4\xfc\xea\xabi\xa9\xd9_\x83o<\x19\x82\xdf\x1cnT.z\x93\xb9\xb3\x96\xa8\xf1\xab\rF\xf3u\xe5\x8csF\x8aUb\x900\x8dK\x0c\x12NA,;S\x1d\x7f\xf6e\x89\xd3\xe2\xd3\xa0b\xf2\xda\x16\xbb\xf5\r\x81\x8b\x9c\x05\xcf`\x07\x07\xde\xa7\xa4r<\r\xa1\x91$E\x05\xa2b\t\x03P\xfa~\x95Qs\xd5\x82\x90\xfa\x80\\\xe3\'\xff\x006\xa9;i\xc4"E\x95w\xc8\xcf\xbb\xcb\x07\x03h\xed\xbb\xe9\xd4\xf4\xa8\xddI\x8e\xa0\xd1\\\xcfim\x17\x94\x17hA\x82P\x91\x80@\xfcD\x8e\xe7\x9agf\xd2\xcb*\x03\x12\xc7\x1e\xc073nQ\x93\xce0{\x9e\xb9\xa8\x9dc^\x86\xdc=\xb1\x94y\x8c\x19\xa4#\xb0l\x00\x9cg\x9e?J\x93o\xe6\xba0UL\xb7\xe7`F\xfcl\x00\xcdB\xbc\xbd\x8eX\x81VV\x1b`\x13\xdc\xd4N\xb3\xa9X\xdbK\x13G\xfb\xd9K\xb1p2\x00\x1d\x00\xf9\xa6O\xe2\x0e\x14\xb2\x15\\\x1c\x85\xc2\xf4\xed\x80id\xb6\xd2\x8c\xadsuq\xf7\x86H\x00\x8e\x06S\x89\x1f\x1c\x83\xb4\x82\x07\xcdAM\x05\xc5\xfd\xca\xec\xb6<\xb6\xd0\xb1\xae\x13\xf2\xf8\xf9\xaby-m\x94C\xabIe_|c\x03\xdb\xb5RD\xb7r\xbb\x1dZT\xb6\xd8\x19\xc8\xad\x02\xd2\xfa\xcd\xb4{k\xb94\xf9.\'\x17\xb0\xc5;glq\xc6\xeaJ\x80FH\xf98\xab\r\x9e\x8au\xd6[\xab\xe9<\x9bM\xe20\xf89\xe9\x80\x01\xef\xd2\xa9\xb6\xdad\x96\xcb\x1b<N\x82&\xf2\xaeHc\x86*\x07a\x91\xc7L\x8a\xd4\xf5?\x1fZh\xfaq\xb4\xd0\x8b,%Dk\x1d\xc0I6&?\x08\x00{\x92sR\xa6\x16\xa7\xcaI\x1d#\x11\x04 *\xeai\x08;\x0eF\xc3\xbdX\xc6\xcfj\xacB\x02\xa4\xe0\x82t\x81\xef\xef\x92j\xb3\xfbN\xdfJi#\x8e2\x92gh\xdc\xd9\x05\x00\xc08\xc0\xe7=\xea\xb9\x17\x89.\xacu\x08g\x8f\xd4\xc92\xb2\xb1\xc9\xcb\x83\xc3`w\x1d\xaa\xdd\x1d\x96\x95\xe2\xf9,m\xe2I\xed\xd6\xddK^^\xb4l\xc7h\x19\xc1\nO\xd0b\xb8\xd0?d\xe9\xe7S\xd4\xa3\xf0\xfb\xdd\xc5d|\xb6\x95\xdb\x90X\x90\xbe\x83\xfcM\xfd)\x10[\x94&h\xeeF\xef\xb3wR\xa3\'a\x93\xb6y\xae\xcb,\xd3\x12\xa7\x01N\xdb\xf1\x83\xb6=\xa9\x1b\xad#\xc5>$\x8e\xefRK\x94a\x0e%\xb8F\x7f\xde\x94\xeaX\x03\xce=\xea9,E\x95\xf4F\xee\xd2D\xb7\xb8\x8f\xcc\xb7Tl\x86=\x9b\xd5\xdb5v\x89\xe6\xb9\xb5}N\xda\xdcX\\\x88\xda\xd6(\xd4\xe4\x19e\xf5z\x8b\x1e\xbbN1\x8a\xa7^\xddMkcsy\xa9\'\x992\xc6\xf0E\x92G\x96W\x8e\xdcT\xf6\xb7An\x9es\xa7\x9f*3k\xc6\xad\xc1\xc0\'8=\xf8\xa8+wn\x8f\'\x94\xda\xbc\xb6\x00\x0c\xe0m\xc8\xab\x04\xda\xbe\x85mgk\xa7\xcds\xf7s4d\xcaQ\xbdr\x00{\xfb{\n\x86\xd3N\x8fg{$\x9fw\x13@\xea\xfb\x16C\x92\xbe\xd5\x8c]\xce\x12\xea\x19\\\x16\xcf;\xb3\x9f\xca\xb4\xad\x1bQ\xd2\xa5\x86\'\x91\x9dT\xc6U\x88\x1f\xc4j2$\xf0\xc3\x0c\x05\xd1\x82\xb1,\xec\xbc\xe4\x7fJ@\xbd[\x99\xa4\x91\x94#`\x05\x00\xd5\xd3F\x9e[KI\xe6k\xd2\xb0\x06! \xdeI9\xf8\xabo\x87<[u\xa1_\x99\xa1\x8d$\xde\x08\x1b\x86v\x83Y$:\xd6\x9ba\xa9\xa4\x1e\x99\x07]\xa7\x9eO\xbdj\xd6\xba.\xaf\xae\xa5\xb1\xd2\xf4\xc7\x93\xcc\xc2\xbc\x88\x84F\xa4\xf6$\xfbUm\xccw\x10E\xae-e\xd0\x0f,`\xb6\xe3\xda\xad\xed\xef\xadc\x89\xcc\x8e\x848\xc3j#\x8f\x9a\x9f>!\xbc}R=DN\xabr\xb2\x03\x1b\x00:\xd7\xd9\x1e\x19\x92\xfe\xe3G\xb1\x9a\xfeE{\x89#\x0c\xec\xa3\x03$W\xcf\xde\x10\xfb\x18\xb9Y \xb8\xd6nAP\xc1\xbc\x94\xe9\x9fbk\xe9\x8bX#\xb6\x86(c\\"(U\x1f\x02\x9d\xe8v\xddF$\x9e[\xd9\x1b2\x9c\x84;c\xe7\x15\x9d\xf1\x1fT\xb0\xbf6\x91\xda\xa8c\x08!\xa4\xc63\xec\x07\xc5<U\xafJ\x03B\x9a\xeb5tk6\r \xd1R-\x15=\xaf1\x9a\xe5w5\x1a\xd0\x9aE\xa1\xf8\xa9r\x80\xd2f:\xe6+\xb9\xa8\x93\x11\xae\x18c\xadJ\x94\x1e\xd4\xdaD\xe0\xd1\x8a3QO\xc7CH\xef>\xf4\xe6X\xba\x91M\xf6\x10y\x14\x93J\x06\x95G&\x9d\xa1\xcd5E\x1d\xa9\xca\xe4v\xa0W\r8\x15\xd7JL1\xaf\x0b\xfc\xd2\xab\x94\xb6\xea\xf7u52|\xd1\xe6\x0fz3E8-E \\Q\\\xcd\x15\x96\x88\x89=)\xdcp\x1e2*Im\xc7\xb5.\xb0\x01\xda\xa1\x04\xa9:\xa9\x9aC\x8e\xd4\xe9P\n_\xcb\x02\xbc#\x14\xe0\x18\xaef\xb9\xe0W\x9b\xab\x96\xa0\x0c\xd1Ev\rv+\xc0\xb8\x14\xb2\xa6k\xa2\xb9\\rk\xd1\x194\xba\xa8\x15\xd5+\x14\x9c\xd2b1]\x84\x1e\xd4\xa2\x8c\xf5\xa5@\xf8\xae\xe2\x8c\xd2;>+\xa0\x94\xb0\\\xd2\xca\x83\x15\xd0+\x99\xa6\xe1>)P\xb4\xae\xda\xf4\nUs5\xc0\x18\xaf1J\xe2\x8d\xb4QI\xe2\x94\x0b]\x05\xe6\x97T\xa3\x14f\x93\t\x9a\xe1\x8a\xab\x14$\x03\xb7"\x94\xb8\xb9\x82\xd2=\xf2\xb8PN\x07\xc9\xf6\xaa\xd5\xf6\xa4\xa6x\xa6Q\xe8\x03\x18\x1e\xde\xf5\x9a\xf1\x07\x88\xec\xba**4\xa8\xd3\x92\xb9\x8b;\x84;j>\xd4\xa4F~\xdb{\xd7\xb2n\x96G\xdf\xd7\x1c\x9f|S;\x80\xd1FH\\\xaf\xd7\xa5;y\xe3\x11\xeeR\x180\xc8#\xe6\x9aO,RE\xe5\x9c\x0c\x0c\x1cW\x9bG\x17\xe2\x9a\xe6Y\'/#)!\xcbd\x92x\x194\x89\xe5\n\x00\x15U\xbd\xbfF\x8eH\xdc\x02\x0f\x04u\xaf\x88<[\xa6\x1d/\xc4Z\xc1\xb6\x8c(\x82F\x93\x07\xb8nr?Z\xfbj\xee\xd60\x1cs\xd7\x8a\xc2<y\xe0k\xddB\xe6MCO\x91D\xcd\x1e\xd9!\xed&8\xeb\xd8\xe2\xb9\xd1g\x9f\xa6_\xb1\xbaq\xe4\xc8\x9aw\xce\x01\xcf\xf3c\xfa\xd2m/V\x19\x18\x87\xd3\xa8c5\xf3\xad\xb6\xa6\xb3\xdd\xc6\x92\xb6&q\xf8\x86x\x1d*sW\xb7\xb0\x8e8\xa5\xf3\x16I0r\n\xfe\x1c\x0erG\\\xf6\xaaf\xa5\r\xd6\x8b\xa8L1*JX\x86\x8eA\xf8\x0f~\xbdA\xae\xedu{[\xc34@8\x99Wr/bGPs\xda\xbd(@\x0b\xc3s\nk\x8c\xa8;o\xcf\xf6\xab\xb8\xafw,\xc7Qa\xb1\xa9\xabMA\xc5\x9e\xe8\xe3e@\xc4c\x9cq\xdb4\xca\xff\x00W\x02Hc\x9eY$]\xbc`\x81\xc0\xed\x9fa\xda\xabp\xdf\xeav\xcf\'\xee\xc8\x8c\x96\x04H0\xa3>\xc2\xa3\x1eYKDf\x7f1W\xf8G8\x04\xd5\x8a\xdbn}GI\xdc\x0c\xf7\xa9\x0b{\xa5\x07\xfb\x8e\xc6\xad6r\xda\xcf=\xc0\xb1\x85\x95\x9c\xb1\n\x99$\x05\xe7\xd4OZ\xd2\xee\xbcJ\xb7\x16\x9arD\xae\xd0Z[[\xf9\xf0\xccNdh\x97\xd4N\xdd\xa4\xa1n\x9e\xc2\xb2\x8d\x1fU\xb5\xb5\xde\r\xb8;I\xc1\x1c\x91\x91\xd4\x8a\x92\x1a\xa4w!vB\xc0\x06"@H\xdaGl\xe0t\xa8\xf3\t\xd6G\xd1\x1b\xa8\xd4\xa4\xb6\xc4\x1cv\xfaT\xab{\x84@\x1dd]X \x0f\xafz{\xe2\x9dr\xfb\xc4\x93\\]\x08\xc4{B\x91\x14G\xd1\x1a\xa1\xc2\xaa\x03\xf8B\x8e\x00\x15d\xf0ri\xde\x18:m\xf5\xcd\xbc2_\xee.\xd8\x1b\xddw\x1c\xf2q\xc1\xf8\x1d\xea\x16;\xc4w\x8a\xce8aUB6\xb9L\xec\xc7\xa8\xed\xe8\x06I\xeasOo\xef\xdeh\xed\xac4\xa9\xa7\x98\x92|\xe9\xb6\x05\x05\x8fe?\x1d+\xb3\xcd=\xda\xaf\xa9\x81c\x997\xd2\xd8=\x85H\x8d\xe1\\; :F\x10c**{\xed/\xed\n\xdf\xc5V\xd1\xda\xacF\x14\xb6\x94\xc9+\xcc\x03;8;T.\x07\x18\xeak%\x01.R\xe9!e\x133\xe4`c\x8c\x0cs\xedRw\x16\x96\xb6\xd6\x97\xd0_\xb6d\x94\x81\x1b\xab\x05+ \xec\xf9\xcf\x18\x15\x164\xcb\xa5\xb4O!\x11\x92\xe3\xd2\xaf\xbb g\x90\xa5\xb8\xed\xce*tQ\xa4q\xa0E8\x07\x93\xf5\xe6\xab\xe5w\x96IN\x06\x0e0\x07#n)\x84w\x16\xf1\xde.\xe5V?\x87*1\x828,\x07C\xf1Z&\x89qj\x88\xc8\xb0\x96m\xc1\x86}<\x13\xd4g\xa6+1\x96\xdekb.\x1cE\x0bFN\x10\x8c\x92A\xe0c\x9f\xd4\xd4\x95\x9e\xb9p\xea\xabq\xe5\xf0\xa5\x8b\x14\xc9l\xf4\x1f\x97Z]\xc4:\xd1I\x8c7|\xea\xc1\x1fJf\xdeq\x1c\xa5X\x91\x8d\xc1\xc6\xd8\xadQ&\xfb\xcc\x8b-\xf8\xb9\x96\x13;M0\x07\x92@\xda3\x93\xdf\x8c\xd2\xb3\xb5\xad\x85\xc4\xf7I\xa6\xca`\x87\x01\xa3g0\xbcN\xe3\nT\xf2B\x93\xc8\x1f\x95Qa\xf1\x05\xc4\xd2\xf9s\\\xbc\xcc\xf2\x07f\x0f\x96,z\x1c\x9es\xf1Zh\xd2\xacn-\xe2\xf3\xafe\xfb\xd1S"e7*\xbb\x8c \xc1#,\xa7\xaez{Uf\x8f\xe2\x84q\xe9-\xa8\xc8\xf8\xcf\xdb>\xfe\xd5t\xb2$\x89\xa9\x7f61\x81\xc5Vu\r>\xe6\xce\xde\xdd\xe4\xb7t\x8e`\xca\xc6H\xf6\x80\x0e\t\xc1\x07\x96\x19\xe2\xa6Vin#\xd3\xa6\xb8\x81om\xc2\x86]\xd8B\xca\\\xf2J\xf2\xc7+\x8ez\x01HkP\xebW:d\x16\xb7\xaf\x0c\x89\x04f-\xc9\xfb\xb2\x8c\xb8m\xc7\x1f\xc5\xc7Z\x85\xf0\xd7\x84\xfcK}\xa9Gag\xe7\xdcJWj\xc0\x83qR9\xf5\x90p\xab\xceI<S3\x98V)tJ\xf1\xaa\x91\xb3l\x18\xfc\x9aD\xae\xd1\xe9gQ\x80\xa4\x97$m\xfa\xd4\xd4z]\xce\xa7\xaaZ\xd9ZD\xd1\\\xde\xcc\x88!\\\xe0\x969,q\x91\xb4u5\xb8\xd8}\x88\xc0 \x03T\xf10\xf3\x0f+\xf7HF\xd0~K\x90O\xe9Z\x1f\x83|\x07i\xe1\x1d>\x06\xb8T\xb8\xd5d\x8c\x8b\x8b\x91\x96\xc6\xe3\x9f.,\xf4Q\xdc\xf55=wo*\x02\xcb\xf8G8\xcdyg\x88<Iw\x05\xc7\x93l\xe1B\xfeg8,N~G\x15\x98\xbd\xebr\xcb&-\x8e\x94]\x8bc\xf3|\xd6\x05\xae\xfd\x87k\x06\xde\xe2M.\xfe\xdbS(7$X0\xce1\xecNU\x8f\xe7W\x7f\xb3O\x0c\xdcxgF\x96\xe2\xfd\x15.faqr\x08\xd8bX\xc7\x08\xdf#\xbf\xc9\xabj_Km+H=;rx$Uw\xc4\x9e"\x9a\xf6\xcakc\n\xc6e#\xcee\'.\xa0t\xfc\xfb\xd5D\x9dg\xaa\xf5Xb\xb2\x98\xa1\x8bXgp\x06p7\xc7\xd2\xaa\xee\xba\xac\xb2Bc\x95\xc19\xd8\x81\x82~\xb8\xaa\\\xfa\x82\xdd\xea\xb7\x8ev\x85\x9aw\x93w\x03;\x8eA\xcf\xb75`\x81 \xbc\xba1\xa8*DC\xbf\x19\x04\xff\x00l\xf3T[kQ\xe6@r\xca\x19\x07\x19\xe3\x81\xefV\xdd:V\xfb\xe81\xc2\x15\x04c\x82>y\xc1\xa9\x97q\xaa!\xd0\xc7">~EQ,\x80\xb75\x1d\xaeX\xcb\x1d\xca2\xe4\xb9n\x0f\\|\xfeU\xae\xf8gJ\xb9\x9a\xdc5\xed\xf8k\x8c\x82\x84/<\xf4\xe7\xe9T[\xa9U\xefaw\x1cy\xa8\x0f\xc0\xc8&\xb4\x88.cT\x0f\x11`1\x93\x9e\xb5O\xd4n\xc0\xb5\x85\x1e\x1f1\xb7\xc1;m\xf5\x15 a\xca\x82v\x1b\xd6\x7f\xf6\xab\xe1\xeb\xb7\xb5\xd2\xe7\xb5ig\xb6\x86\xe3u\xc4Y\nT~"\xde\xdbx\xfc\xb3X\xd6\xb7ye%\x81k\x0b\x9b\x8bdEV\x16\xb7\x0c\xe2]\xac3\xe9 \xed\xdaG"\xb5\xff\x00\xb6mz\xd2\xdb\xc1B\xdem\x8fs}u\x18\xb7\x8c\xf5\xc4L\x19\x9f\xe8:~u\xf2\xad\xfd\xd5\xdd\xe4\x11\xa9*\xac\xa8\xc9\x1a\xb1\xecO\x1f8\x1d\xab\xd1|\x19wyq\xd1\x7f\xf5\x11\xacj\xd2h\x8b\x00\x8fJm\x90s\x9e\xe7\xe2\xb6\xdd\x05\xd6;W\xdc\xe01\n;{\xefH\t\xcc\x92\xe6Y\x19@9\xdaX\x90H\xe0\x92=\xea\xe7\xa1kzO\xde@\xb9\x02\xf0DI[R\tV$\x1e\xa7\x8c\x00pH\xefYm\xc4/\x02\xc7\x0b)2\xb3H\x14\x07\x1c\x04\xef\xcf\xb8<{\xd7\xadn\xeaa\x92\x1f:6C\x968\x03$\xf3\xce\x0f5\xb2kB\x85\x1d\xdd\x862\x10\x11\xe9\xcf9\xab\xe8:\xbb@\xfe^\x8c\xaf\xf3\xef\xef[7\x8a5\xcd\x0e\xf7M\xd2\xd6\xdbM[{\xf8\xe11\xcf&#D\x9d\xb7\x12\x1bh\x1cu\xc3{\xf1V[\x1dO\xc3Z6\x9fg%\xb6\x9b\xf7\xb9-\xaf#\x96\xeak\x97\t.P\r\x9b\x02\xfe\x18\xf3\x91\x81\xd7\xbdcZ_\x89uk\x16\r\x0e\x03\xc3*\xca\xa0\x85e\xde\xa3\xab#\x82\x0e3\xd0\x8ab\xb3M\xab^9lG\xbd\x8b\r\x80\xa2\x92Nz|R\xcf\x9aA\x90\xa2\x17\xd0\x03\x1f,\x1d\x87\x0c9\x19\xdb}\xa9\xf6\xbf\x81\x93\x08$\xd1\xa8\x95P\xcd\xdf9\x07\xe3\xda\xb4\xfdw\xed3Z\xb8\xb7:|RE;\xdc],\x92\x16\xc9x\xc2\xae\xc0\xaaA\x03\x18\xf7\x15L\x9d\xee\x08\x91\xae7<\x8e\xb8fV\xe9\xf0>\x05!oaog\xf7\x91\xb0y\xa5@VnWvs\x96\x1d\xf8\xfe\xb4\xe6\xee\xea7\x9b\xee\xd10\x90\xa1C\xe6\x01\x80I@\xc4`\xe7\x18\'\x1f\x954#K\xe5Y\xa4\x97[*\x84\xd4\xc7\xd4rs\xb9\xa6\x9as\xa3\n\x824c\x9d\x0b\xc08\x02\xa3\xb4[\xc9\xa1\x92H\xe4\x91\xa2\x96\xdd\xc9\x1c\xed\xe4\x9c\xe4|U\x8a\xebY\x95\xec\x85\xb3\x85\x08\xb9`\xd8PF\xeeI\xcfRN;\xd5CR\xb4\x9a}B\x12\xb2\x114\xb1\xa9\xc8\x00\x8cc\'4\xa5\xce\x97+y&k\xde\x17\x82\xa2=\xa3\'\xa9\xe7\xfa\xd4I \x8d\xd9]\xa4\t\xab\x90\x01\x1b\x8ex\xe7z\x9fk\xd5\'H4yd\x85\xd86\xd5t\x87R\x88\xc3\x1an!\x8a`\xa9\x03\x81\xdb\x93\xde\xa4\xed\xedd\x12F\xe2\xe24\x88\x1c\xbex$c\x8c\x1cVS\x16\xa6\xf6W\x8f\x1b\'\x99\xb4\xe3<\x01\x8f\xeb\xcd]\xec<[\x0c\xb04RH\x01\xc6\x10\xb0\xc1\xc8=\rG\x9e\xdex\xd5\n+:\x85\xfd\x8dH\xb5\xeaQ\xcc\xc43\x04l\xef\xda\xb5m\x06\x0bK\x95\xda\xd2\x18\xc8bI-\xc6\x0f\xf1q\x9e\x95\xc6\xbd\x05\xb1\x11\xab\xc2\\\x0e#\xc1\xcf\xd4\x83U\x8d\'V\xb4\x86[s\xe6\xc4\xb0\xc9\x19\x1bK\x1d\xea\xd9\xc9\xe81\x8cqV\x84\xd6t\xcb\xbb\xa8\xedd\x01\xbc\xc2\x16"\xac\x0e\xd0}\xea\x8fI,\xda\xbd$d\x8c\x03\xff\x00\x9d\xb7\xabX\xe7R\xf8V\xcej.+K\xcb\xeb\x9b{{\x07+#\xc8\x14a\x94g<q\x93\x8c\x9fj\xf5\xf4\xe9\'\xbbM9!w\xb9\x0f\xb1\x81\xe1\x94\xe4\x82\x1b\xe8x5\x15\xa8O$SI\xe4*\x98\xe2\xca\x96C\xc22\x9cn-I\rFM\x1bP\xb2k\x98\x84\x92K i#\x97p\xf3\x00\x19e$r2;\xd5\x8cV\xe0&\x93\x12\x84\xff\x00y$\x80\x08\xdf`\t\xa4\xcbp\xe4\x9fWm\x87rkH\xd5tk\x0f\r\xfd\xca\x1f\xdav\x97\xab,H\xf1\x94\x7f\xdd\xb6\xd3\x89\x06\x14\xe7\x03\xb18\xc8\xa6\xba\xa4\xba\x93\xcc\'\x83\\\x98F\xf1\xed-pL\x91\xeca\xb7\x18l\xfeC\xa8\xaaK]\xc7w|\x93LB\xabH\xca\xe8\x0e\xc0\x15\xb9\xc0l\x13\x8c}imG\xc5\xfa\xac\xb1\xcbg`d\x82\xd4\xc6\x03y\xc5]\xca\xe3\x18\x07\xdb\x8e)~w\x98\xce\xd0\x9f"0\xca\x02\xabjm\xbb\xe4\xe0\xe2\xa2g\xc9\x08\xb30\x91\xb0r\xec\x00\xce~\x06w\xa8m^\xd6\xe5Z]\xcfo,[\xb0$\x07\x05\x8fL\xf1\xef\x8c\xd3kM6d\x8a?;\x7f\x96\xf91\xc21\x83\x8e\xbe\xc7\x8aj\xc0Gn\'3\x86\xde\xddH\xf5\x00>9\xc7\xd2\xac\xde\x1c\x82{\xf9%0@\x18\xb6\x15\xa5a\xca\x8c\x8eA?\x84\xfc\xd4i\xe5"90\x18\x13\x9e\x0f\xf3\x0f\xadI\x82u.2s\xf1\xf1V\x1d>ak\xa2\x99\x14\xc8\x1eg1\xb2\xaf\xa7r!\xce\x0f\xbf5\x07\xe7\xc1\'2\x02C\x1c*\x03\xces\xc6k\x7fo\x07\xe8:v\x97\x1b\xbe\xab\xe6\x18\x91d\x95\xcb\x0c\xbeFH\x8d;\x01\xdc\x9esX=\xf5\xc6\x9a5\x0b\xaf\xbb\xc4\xf1\xc4\x1b\xf7a\xff\x00\x88\xe7\xa8\xf64\xd2\xc3sn\\H\xf1\xb3\x83\x9d\x01\xb3\x80\xd5"\x1b\xb8\xae\n\xb2\x06\x00\x922W\x1cV\xe1\xa1\xda\xf8M\xb4\xcb7\xbb\xd5\xf6M2\x85\x11,\x0c\xf8\x04\xe0d\x8e\x9c\xd4\x8e\x85g$\xebq\x16\x9emn%\xb4\xb8\x06Uh\xb6\xb8\xcf\x00\x86o\xe1\xed\xdb\xe6\xaa\xdff\xf2iOui.\xa5\xa8C\x1417\x9c\xaa\xc3+#\xa0\xe09\x1f\x87\x07\x9eA\xcdiW\x97\x10\xdck7\x12\xec\x92).c\x11\xce!]\xe9\xe8\\\x87fln\r\x9e\x08\xcf\xbd[\xac6\xf7\x16^d\x89\x14%_\xcad\x89\x88|c:\xb2X\x81\xf4\xc6\xe35Oq-\xcd\xb5\xdbD\x8d,\x80\xa0\x93S\xa81\x83\x9ci\x00\x00N\xdc\x9c\xecqY\xe7\x8c\xd3T\xd4\x19\x13P\xbc\xe68]a\x808p\x14\x9cc\xd3\xfc\xdd\xb2k(\x9bQ\xbb\x827\xb7\xb8\xbd\x98\xa4m\x88\xd7\xcc*HROL\xf6&\xb5\xaf\x11A\x05\x8e\x9bu\'\x92\x10\xc8\xdc>0\x17=\xb3_9\xcdx\xb6\x9a\xad\xd4\xb2n,\xc3\x8c\xb7\r\xdb\x1fJ\xa5Xd\x0f\xaa)g\x08\xe9\xc9r\xccH\xdb\x04\x9c\x7f\xf1W\xb6\x93\xaa"\xc6\xcb\x1f\xa5\xb6\x01@\x03;\xe4\r\xea\xeb\xab\xf8\x8e\xef_\xb4\xb5\x86\xe5!s\x1c\xacQ\xd60\x8c\xa5\x94"\xaf\x1c\x05P\x06\x05X\xb4\x99[e\xc42^:e0pp\t\xc7L\xd5\x0f\xccW\xb7\x12D\x18\x93\xd7\x03\x8ek\xd9^\xea\xee[{+3!\x92f\x11\xc6\x80\xe321\xda\xaa\t?\xd4\xd5\x8d\x95\xcc\xfet\xae\xec%\x91\xb4\xaa\x06\'s\xc7\xf7\xa6\xafDI\x18UP\x91\xaeN\x06\xc0w\xa9\x8dB+\xe4\x92\t\xaegH-\xa6V\tq \xc4C\xd4A\xc1\x19\xc9\xe3\x18\xa6\xda\x95\xd6\x87a\xa6\xcdlf\xf3\'\xf3\xc2\xc30uT\x92\x1c\x13\xbc\xa9\xf5\x02{{\n\xca5\xcb\xcb\xa8\x05\xc5\xa5\xc2\x13p\xa4F\xd1\xf1\xf8\xb3\xdc\xf7\xcfZ\x8f\x82\xc2\xe8\xa7\x9c\xeb\n\r\xbe\x82\x15\x7f\xbdY\xbch\xb1\xb1\x97\x01\xc8\xd3\xb9\xc8\xce7\xc0"\xaa$\xea\x9eQ\xd0\x8a\x08\x18;\x121\xbdi\x9aE\xfe.\x96X\xc4j\xb1\xa2\xb3y\x87;\x9b\x91\x95\x18\x07\x8c\xf4\xf7\xad7\xc3\xde"\x9e\xda\xe6K\xa4\xd3\x86\xa3g\x1a*^\xac\x91\x1f,#\x1e\x06p\xdbI\xce3\xd4\xd7\xcf\x16\x9a\xbc\x8a\x04o\x18y\x07FN\x87\xeb\x9a\xb1[\xeaZ\xc3Ar\x96\xe2D\x8eE\x1eg\x96\xc5U\xc2\x9c\x8c\x81\xd7\x06\x9aW\xb8\x80\xa9\x88\xe1\x90\xe4\x10\x07a\x81\xb7\xb7\xbdw\\\x17\xb10\xce\xb0\xdf\x98\x10F\xd9\xdf\xfe+D\xd7<A\xa7\xc7\x1c\xd1\xdaA,"2\xc0\te\x0c\x84n\xc8\xe7\x03\x90\x08\x18\xe78\xcddZ\xb7\x88$\xbd\xbb&Y\xdc)b\xe5\xa3Q\xcbt\xed\x81\x9f\xa58\xd5\xf4\xe9g\xb32\\\xbbG B\xe4\xb6v\x901\xfd~\x95A\xbe\xf1$H\x15-\xe0>\x95\x00\x96\\\x00G_I\xa91C5\xc1$\x8c\x93\x80\xca\xa3B\x8d\xb9=\x8dU_\xdd\x0bs\xa3V\x17\xeb\x93\x8f\x92w\xab\xdc\x17\x17\xa1\xde_\xde2\xa1\xe1\x9f\xb9\x1f\x04t\x15!f\xf6\xf1y\x8ftH\xdcx\xe7\x1f\x9f\xd2\xb2\x98\xb5\xbb\xeb\xa2\xaf\x10\xc1\x8ce\xce\xe2O\\t\x1d\xaa^}GU\x94\xa3\xcd0\x86\'\xc2\r\xaa\x18\xe0\x0fn\xb5\xc3\xd2\xe6V\x8c\x04E\xeew\xcf\x1f\x1b\xd4(:\x8c`\x02\x01\xfa\xe6\xb4q{h\x1f&@Ip\n\xb7\x18=\xb1\xee*N\xdf\xc4vp3\xa4RF\xdeR\xfa\xc1a\x91\x8eI# \x81Y5\xde\xa3\x15\x9492\xac\xc4c\xd2z\x9c\xf4#\xbe\x7f\xb5AI\xab\xde\xdd\xa8\x06B\x90I\xfb\xb6d\x00d{\x164\xd8\xe8\xd3\x12X1\x8c}v\xfd)\xf3\xd7^"B\x90I\x1b\x0eEm\xd7\xbe!B\xf0I\x0cFy&%r\xa0\x14\xc1\xe0\x8e\xf8\x07\xfa\xd4e\xebCr\xd2^:\x92\xfb<\xb8\xd3\xa8\xe0\xe7 \x8e\x83\x9a\xa8\xe8\xb6\xcbi\x0b\xbcz\x82\xbe:!\'8\xcfQ\xcfj\xe2\xfe\xfe\xe6Y\x8d\x9a\xc8I\x18%xR\xe1\xbe\x95\x13\xf0\x0c\x93\xe69\x0epuJN\t\\\xfbv\xa8s\xdf\xcc\xea\xd2I\x8c\xb6\x00#l\n\xbexOG\x1e.\xf1\x16\x99\xa6\x0b\x87X\x95\x8c\xaeW\xa2\xa2z\x89\xc7|\x9e9\xeb_P\'\x83\xf4\x9d/\xcfKK\x08\x97\xcd}\xd2\xb3(w\x91\xcf$\xb9l\xe7\xe9\xd0V%\xf6\x1d\xa7\x81\xac_\xdc*\x12\xb0A\x1c*\xe3\xf0\xeev\xdc@\xfc\x85}\x8dq`\x93\xc5orF\x030\x0f\xf1\x8e\x87\xf3\xe9Y\xf9\xae$\xbd\xeb\x97==[\xf8qB\x87\x1cd\xb6\xecO\xea+\x15\xd5\xee\xa5\x9eC\x89\x0e\x94\xec\x0e\xde\xf9\xac/U\xfb&\xf0\xcf\x88\x15\xe4\x9e\xc2KiX\x93\xe7\xda\xb1\x8d\xb7\x11\xd4\xaf*\x7fJ\xc0\xfcQ\xf6-\xaax`O-\xa4\x1f\xb5m\xe7`\xa2~b6\xc3\xdet\xe7 \xff\x000\xe2\xbe\xff\x00\x8a;{u\x08@\xda\xdd?:cy\xa7,\xa0I\x17\xf0\x8c\x11\x9c\x10\x0f\xc1\xadD1\xddt\x95V\x8aAs\x12\x8c\xcbn\xc7\xb7\xfd\xa7r*\r\xb5\xfd\xd5\xb9\xca\xc9\xabla\xb7\x15\xf9w\xa4i\x12\xb3-\xc7\xdd\xdf\x11J\xea\xe0\x9c\xa1 \xe0\n\xd54\xad\x1bQ\xb8\x81\xeeR\x18\xf1\x13\x82\xb6\xea\x99y\x02\x8d\xce\x00\xc7\n\x14z\x8do\xbe9\xf06\x99\xa6iZ\xc6\xa5\n5\xac\x12\x88\xdekx\xd3\xf7K2\xbf\xa6dQ\xf87~\x17\xc7\x15\x95G\xab\xea\x1e\x1d\x94\xbc\x1ap\xb6\xb8\xb3\x88\xa4\x93\xb2\x17\xe5\x8eC\xb6r\xaa\xc0\x1cR\xbc\xd8\xba\x80\x82\xe5\xbc\xc1\x1b.\x1d\x00\xcbF\xd9#I\x1cg\x03#8\xc8\xafG\xe9]M.-u@4\xb08 \xed\xbe\x01\xfe\xfd\xaa\xb1\xe2\x99-\xae\xb4\xf9n\x15\x9a\x19\xc4g\xcf\x88)U\x8c1\xda\xaa7\x1c\xb1\x03\xaf\xc5f\x960\x08^I/\x9e\x7f#\xca\xe8\x10\x82\xdf\\\xd6\x9d\xac\xebVW\xbaE\xd4z\x83\xb4\xb2\xdf\xce\xbe\xb09S\xb7p9\xc7\xa5\xb8\x18\xf7\x15X\xf0\xfe\xab\xa3[\xcf\x13j\xf7\xab\xa8\xad\xa0\xf3-\xadv\x91\tf \xba8<\x8c|pM[\xf4\xfbw\xbc\xb7\x9c\x05h\xf4\xb6\xe6A\xa4\x91\xce\xa02I\xc8\xf6\xefM\xdf\xdc\xacw\x11jmE\xb8\x00\xe4g\xd8\x9d\x80\xfb\xd3\xb3\xe2\x9bkW6\xfa^\x9d\x14Pm*\x1aB\xdb\xc0#\x1b\xce\xdcz\xabk\x98xK@\xf0\x95\xad\xd7\x92\xa9q$Q\xcc\x9er+%\xca\xba\x90\xae\x0e:\xa99*{W\xcf\x1e)\xd4|3\x13\x9f\xb9+\xb3Mp\\\x8cl\x1eA\\\xa8\x1c\xfay\xea+w\xd7\xe7\xbc\xd6<\x1d\xf6}\x14v\x90\xbe\x9b.\x95\x08\x9aA\x8fN\xc1\x82\xa4\xfcb\x92z\x83t9\xad\xdd\xa3\x86H\xd9\x99p\xca0\x0ey\xcf\xbe\xd5\x9b\xf1\r\xec\xc6\x08Qn\x1e4.C\x85ldb\xb3\xef\x0f\\\xd8<\x1a\xce\xa5r\xef\xe6Z\xda\t\xad\x90r\x8d9m\x8b\x91\xef\xcf\x15N\xd7\xae.\x1e\x0b\xd8\x1f\xef\x13I1\xff\x00M\x86N\xe6;\x89\xc0\xab\x7f\x81e\xf0\xb6\xb7\xad\xeb\x1e\x1d1\xdc\x18&e(\xc3\x0b\xfe\x979_\xa1\xed\xdcT\x8f\x894]\x7f\xc2S\\\xcddE\xe5\xc2\x9f3\r\x17\x1eH\xe1]3\xdf\x1d}\xaaE\x8d\xefL\xbb\xbf\x929\x8c\xb0N\x02<\xa1\xb0\x1b\xcac\x80T\x1eFN\xe3\xde\xa9!\xearZ%\xd7\x96\xa1\xa5\x90\xa8\x89_a\x8cgsYf\x916\x85\x04\x8b\x06\xb7`D\x89\x11![\x8c\x928\'\xda\xa5\xac\xe2\xd0\x80\x8e\x16"G\xdcd>Sq\xb4\xf4_\xca\xa2\xd3C\xb9\xf1\xb9\x9aX\xe6\x99\xf5\x9fQ6\xeb\x19b\xeb\xef\xe9\xa8\xfd;K\xd6|3u%\xbe\xa5c=\xa4\xaepU\xd0\xa9\xe3\xb8\xcdin\x1a\x1be\x8b%\x1e\x17Rb\xfc\xa6B\xb9\xfe`\x0e\xc7j\xb4\x83\xadC"\xba\x18\x82\xdcG\xa4J\xbb\x81\x9c\x7f.q\x91Q\x9a\xcbF\xbe!\x8eM:\xdd\xa2\xf2\xc8%I\xdd\xc8\xef_i\xfd\x80x\xb3\xc4:\x8d\xc5\xce\x9fq\x1c2Z\x01\xbf;p\xc8\xdd?\xae+\xe6\xdd6\xfa\xcfL\xd6^Cg\x05\xc9\xb9\x80F\xcd \x07a#\xa8\xaf\xa0~\xc2t}kI\x9a\xe7\\q\x18\xd3\x1aW\x8f\xcc=\\\xe7\xfa\x01\xd2\x92\xd3Emhek\x83\xa0\xe5\x9d4\xfeP\x06\xc4\xd4+\xdb\xa4p\xe4\xc6\x14\xb3)C\x9ew\xc9\xc5}\x96\x80\x9cqN\xd1O\xb5T\xae|Cs\x1e\x04p&\x08\xf4\xb6r\r7\x8fP\xd6\xee\xc6U\xd5W\xe0V\x0e\xfb\xc7\xdd\x16\xda\xe9\xed#\x8a\xee\xe6\xe1y\x8e\x18\x89#\xff\x00\xe2\xc5&2H\x07\xb7\xb9\xab\xc32F2\xcc\x00\xa6\xe9{m#\xecYT\x9f\xadR&\x8fQ`|\xe9Y\x87p\r \xb0:\xb0#p>\xf5\x85\xea\x7f\xf5^\xe6\xd2\xe9\x11:\x0c\x91\xc6\x0e\\L\xda\\\x8f\x8c\x02\x05O\x8a\x0f0g\xcc\x1fj\xd2\x875\xedW\xb4\xdb\xb9\xa3\xf2\xe3\x95\x8b\x03\xd0\x9e\xa3\xebV.\rzg@\xeb\xd6~!\xb1K\xabmK\xc0x\xdb\xf3!#84\x97FC\xa4\xd1\x91^\x1a\xf6\xb95yH\xc5x@4\x83%,k\x93E\x14\xc5\xe2\xf8\xa4L\x03\xda\xa4\xf8\xaeJ\x8a(\xa8\x96\x84\x0f\x8aH\xb3\'\xcdI\xbct\xceH\x87<W1]\xa6\xdfx^\x84\xd7-2\xf6\xa4e\x87\xaf\x15\x1e\xc2e\'\x1d)$\xd7qO\xda|w\xae\x04\xe0\xf7\xa6BBxaJl-\xd0\xd1\x9a\xee)\xd7\xde\x00\xefE519\x1d(\xaeoF)\xba\x01J\xe2\x90\x8c\xd2\xdb\xc0\xa6\x858h"\xb8a\\\xb4\x87\xda\x93/\xeeh\xc8\xa2\x82\xb94\xaa\xa5$$\xf8\xae\xc3\x9a\xe5v\x9c\x80\x00\xae\x80\xcd7\x0e)A%\x00\xd0E8\x0b^\x12+\x8f2\xb9\xdc3K\xcd\'\x14\xb2\xd2\xe0Su"\x97\x07\x8aP\xa4\x9aTR\x80R\x00\x9fzP8\x15\xda\xe5)Fi\x03 \xf7\xae\x0c\xa3\xde\x8c\xd7qN\xb3^\x83L\x8c\xc3\xde\xbdY\xbek\x99\xa3\x15"\rsq:[Bdf\x19\xc7\x03\xb9\xa6\xab(\xa673\x8c\x96\x9fiU>\x92{U7[\xea\x9f\xe9\xf6\xc3C\xaa\xc9!!I\xe0|\xd2\x95rw\xa6\xfa\x95\xc2jV\x91\xabFF\xd3\x96\x07\xdf\x15\x9f\xde\xf9\xf6N\xa6)\x99\xa2\xcf\xaa2s\x8f\x91W\x93<RF\xe1\x1dN[\xa8\xaaT\x96\x97\x1a\x96\xa4c\\\xacQ\x9c\x16\x1dY\xb3\xd0W\x87\xf8\x98\\\xf5N\xb1k2\xb0\x95\xe7\x8c!\xd29\xd3\xb6)F@\x91\xb0\xe3\x06\x9d-\xdc\xf0\x04\xdar\xae2\x01\x18\xfd)\xa5\xc6\xb3\x1d\xbf3\x07P}\x86E\\o\xb4\xb8\x8a\xc7\x14K\x9d\x83\x00\x8fz\xae_hs2\xb7\xa0\xb6\x06X\x0f\xf1ZD\xe8\xddB\xdaC\x1ca\xe4\x8d\x08\x04\xa8\xc8\xce7\x02\xaa%\x9bV\xfd\xea\xbe\xba\xa5\xad\xc9;d\x05\x89\xe8{Sk\x87,\x0e\xd2\xa7\xd8\xd7ShO\xbd\x1b\xc9\xdb\x8c\x9eF)\xd4Ze\xd8\x8c\x06\n\x0ex+\xd3\x1f\x9d1=\xa5\xdcx\x1f\x87\x98\x86\xfem?\xd6\xa2k\x07\'#\xe9Y\x0f\x8f<!c\xe2\x1b\x193l\x12\xe1\x14\x98\xe5\x03\x9c\xff\x00\xc5|\x89\xe2\x1d#\xf6\x18\xb4i?wvw\xee\x0b \'\x83\x8eGl\xd7\xe8\xc4\xb6\x04\xa3n#\x03\x8ek\xe4\xcf\xb6\xcf\x03\xcd\x13>\xb9ilv*\xe2\xeboog\xc7\xf7\xad7\x86/d\xb4\x9cZ\xcf\x91\x14\xdbG\xbe\xca\xde\xdfCSl.\x82?\x94\xe4io\xcb\x9fz\xc3g\xd5a\xb8\xb5\x0b$\xee\xaf\x81\x94\xc6A?\x06\xa1&\xbbe\x0c\x16%@\xdd\x00\xa6\xbb\xc9TP\xa3*\xd9\xc8\xa9\x8d-\xed\xe6\t\x0c\xb6n\xec\x1d\x98J\x99%x\xee1\xc8\xe2\xbd\x11 T\x18U\xc8\xcf\x15l\xd33\xe0d\x0f\x9a\x81Vq\xbbinG\xab\x15\xa2\xf88\xe9v\xd0\xcdu\xa8ZI(?\xbbES\xc9|\x8c6\x0f\xb5R\x92\xe2o\xbc\xc9\x1cab\xf3\x9c+.1\xc6kM\xb0\xb9\xfb\x95\x8bY\xea;U\x18\x06g \x1e3\x84!x\xc3v\x19\xfa\xd2\xa6l*\x9e\x0ew\xc8\xc8\xfb\xe2\x9e\xe9\xe0y\xf9-\xc6\xc3\xebZm\xde\x99\xa6\xddX,\x86H\x1d\x9e&\x99\x1c7\xef#A\x9c\xab\x81\xc2\xe4\xff\x00\x0e2i-\x02\xee\xe0ZC\x15\xb4\x11$\xd1E)R`B\xa1T\x028 d\x93\xc1&\xa8\xfa/\x88\xb4};W\xbd\x80\xbb\x9b+\xbbs\x14J\xeb\xbeE/\xc8o\xe1\x1c\x11\x91\xcd \xf6\xfa\x95\xe5\xe3\xfd\xde\xe1e\xb6\x90\x80$Fh\x84\xa9\xed\xea\x19\x03\x1d\x8dA\x8a\xde\xf1&\x121V.\xd8,\xa7\x801\xf7\x15{%\xcd\xb4\xa9\xa1\x17\x05F\n\xfc\xd2\xd6\xf2\xb5\xe1\x955%\x02x\x9cC\x18\x01<\xb5Uc\xb9X\xa7R\xde\xfe\xd5\t\x0c\xb1\xe8\xfa\x91\x9a7\x8e\x1b{\x81,\x89\xe5\x03(\xb7\x1c\x806\xb9\'\x04\xe0d\xf3\x8a\xb7X\xc3f\xb1E\x0b_G%\xab\r\xd2F\x85C\x06_NNx\xc9\x1c\xd5w\xc5\x1a*\xc3l\'\xb6\xbf-\x01e\x11\xc7\x1a\xe4\xc8\xb9\xf5\xb1\x03\xf0\xe3\xd9\xba\xd5\x82;\x92\x0e\x01\xd3\xdc\x10)\x9f/Dg\xbf&\xa0|Kqyw%\xc4\xb2\xc5\x14\x11\x89\x00xb#\x1b\xc2\xaa\xe4u\x04q\xd8\x9a\xae[\xbf\x92\x9fx\x9b\x7f\x93\xea\x88\x15\xc1\xcb\x01\xbb\x18=\xbd\xe9\xfa\xe9Mv\xd2\xc1\x15\xf1\x92T+\xe5\xc4\x01 #\x1cg\'\x18\xc7R1\xc52\xbc\xd05X\xa5x\xc4\x12J\x12#32~\xf1v\x03\xb7~P\xb0\xc5,\xc6\xce\xc5\x981\x04\xf3\xcf\xf4\xaa\xc9e*\xb9D\x03\xde\xa2\xbe\xf2\xbetO\x12y%[%\xb7\x16\xe79\xcf5\xba\xe8\x1e!\x87\xee\x88\x8d:\xc2dd-\xb0\x90\xae\x03n\xcb\x11\xcf\\t\xac\x15m\xa57\x0b\x01R\x1c\xb8Lt\xe4\x9cc\x9a\xb1\xe9\xefq\xa7\xde\x18Wi`\xc5]x\xfc#\xa8\x07\x91\xf3Q/m\xc4\xb1\xea\x1b2g\x07\x1f\xb5+\xa6\\\xbcR\xb0o\xca\xc4\x02>kb\x9b\\{\xa7\xbbV}\xe9;\x87l\xa0\x8c\x06\x03\x07f\xdcaq\xc6=\xab\xeb\x1f\xb2\xdd*M3\xc2\xb6\xd3\x02"\x97Q\xff\x00\xa8\xda\xaaF\xd8\xb1\x88\xd4\xe7\x9e\x835\xf27\x83c\xbf\xf1N\xab\x1e\x91\xa4G\xfb\xeb\x96\x01\xa4\x91\x14yQ\xaf\xa8\xbb\x1c\x1c\x05\xeaq\xd6\xbe\xf7\xb4\xd3\xd6\xc2\xca\xd2\x08\xd9\x9a;xc\x85\x0b\x0f\xc4\xb1\xa8\\\xfe}k\xce\xfcMs:E\xa4\x13\xa9\x9b.3\x8c(\xf9\x1d\xa8\xf1\r\xda\x08\xa1\xb7F\x1e\xa3\xa9\x80\xe7\x03\x8f\xde\xba\xf3\xca\xe4I\x92~;\x9a\x81\xd5.\x960\xd2;zGA\xd2\xa6f\x92$\x04\xc8\xb9\x18\xeax\x1f\xa5b\x9e$\xd6g\xd4uI-t\xe4\x96U\xb4p\x1d#\x19\x05\xbb\xee>\xc2\xbc\x98,\xfdN\xf1\xe2\x12\x7f\r7b{cm\xcde$\x94C\x18\xff\x00q\xe0T\xfd\xc3\xc9p[\x12F\xa3\x1cF\xde\x9d\xc7\xdfw\xbf\xf4\xaaN\xa5\'\x9aY\x10\xbaF\xacVWa\xea\r\xddT\x1e\xff\x00=\x054\xba\xf1\x17\xdeUc\\\xab\xc7\xb9%\x04\x10U\x94\xe3\x19>\xc6\xa1[Y\x17\xa94\x05\xfc\xc9\x16`[\x04uu\x1c\x1f\x9e+Gi\xd3\xe4\x89rb\xd2S\xf6\x19\xc6MAg,\x18\x90I\x15,\x96\xa9\xb5^\xdeyT.\x02+\xb0\x7f\xcb\x91V\xab]6\xe2#\x0c\x93<\xae\x19\x07)\x84P\x0f=\x14TU\x95\xb9\x16\xb0\xe4(\x91\xd8\x10\t\xe4\x8c\x7f\x8a\xd0\xe3h\xe2\xb5M\xc4\x96\xf2\xf0G\xb7\x1di\x89\xa5i%\x11\x82\x0eKe\x8e3\x81\xf3M\xa1\'$\xfcU\x1bW\xb5\x96\x02<\x96v\xcf,$l\xee\'\x00\x90\xdd\x8f\xf4\xad\x17\xc2r\xc1\xa9i\xe6\xe6E\x7f-\x08\x8d\xa3#\x0ed\x1f\xc3\xcf\xbf\\\xd5\x1b[\xb9\x8aH\x0b!e|\x81\x85\xed\x8e\x0f\x02\xb4\x0f\x01\xc9oq\xe1\xc8\x02aL\x172\x06\x07\x93\xbb9\xc9\xfc\xa97\xd0\xc5q\x15\xb2\xe9\xff\x00\xee\x81\xab\x8d\xb0I\x07\xf4\xa7\xe2oY\xf7\x00\x91X\xcf\xdb\xb6\x9f\xfbCK\xb1\xd5B\x18\x8d\x8d\xc2\xa1E\xc9\xc28\xdb\xc0\xf88\xaf\x97..R\xde"f\x8a\xe5X\x8c\xac\xb9\xc1\xe7\xa63\xda\xbf@\xbc}\xe1\xcb\xbdc@\xd4\xadc\xb6\x8f|\xf0\xb2\xa4\x80\xf0\x1cr\xa4\x83\xeck\xf3\xbeH\xae\xd3R\xd4m\xee-\xe4\x92km\xebq\x0c\x80\xefP\xbe\x83\x821\xf8{g\x8a\xf4\xcf\x0b\x15\x92\xd6[i5+@\xfa\x82\xe9+\x84}\xf8\xf6\xcf\xda\xafzD\xecc\x926oR\xb6G\xd0\xd2\x11\xdbj\x17\x12C3F\xee\xec\xc3s;\x05\x1e\xae9>\xc7\xe2\xac\xe2\x19!\xde\xd3B\xc9n\x15VB\x80\xbe\xd6q\xc0$\x8e>=\xea&\x085(\xedZX\xe4g\x81\x80\xda\xa4\xfa\xb8;J\x12:0\xa7\xf7\xd7,R8\xecc\x928\x88B\xe9+\xe5C \x07\'n9\xdd\xcf5\xac\xf4H\xa5$8\xc1\xc0\xd0\xc4\x1d\xc6v^+@\xa4\xa6\xa2\x01\x07\x19\xdf\xbf\xd6\xa5\x85\x8e\x96\xd6\xf0\xdeG<\xf0\xa4\xaf\xe5)u.\x01\x03\xf1\xe7\x81\xb4\x9c\x8cu\x15\x1f\x17\xde\xe3\x97q\xc4\x9eS\x10Z>T\x8c\xf4SP1\xdcH\xd3\xcf\x14\xf6\xe1\x89}\xc5r\xdf\x88\x9e}<\x00{\xd5\xd6\xca\xe6\xea\x18\xda5\x80/\xa4\xff\x00\x08\x07\xfe\xd5\x02\xe1\xda\xd8\x1d\x1arN\xcf\xb8:O\xdc\xfe\xd5"\x17\xf3\x15q\xe9\xdb|{\xd1u\xab[\xcc\xa1BI\xe6\x127!\xe3j\x8e\x9d;\xe7\xf5\xa7\x16\xe2\xdet\xda\xb6\xe26W\x01\x08\xc6\t\xc7\'\x8f\x9ab\xb2\xdb\x02\xed.<\xd0\xdc\x06\xe4\x8f\xce\xac\x96\xf6\xa9\x05\x8cW!\xe1`\xe5\x8ck\xe6\x02\xfc\x1cd\xa8\xe4s\xd35\x0e1\x10b\xc4\x14\x11\x9de\x86\xe0\x9c\xf6\xf8\xa9\xd1\xbbH\xc5X\xa9\xc6\xfe\xd5\x0b|!\x82\xee\r\xf2`\xc5\x1e\x0f\xd4\x1c\xf1\xf9R\xf7\xb6\x97\x1a\xab\xdb\xc1gmq+\xb1T\x81\x15\t\x92g#\xf8Td\x9ezW\x17\x86\xe1\xe7\xb7\x825K\xb7\x98\x90"E\xcb\xa9f\xcf\x18\xeaq\xc7\xd2\xbe\xb4\xfb\'\xfb<\xbb\xd1\xe1\xfd\xb7\xae\xc3\x8dQ\xd0\xc7m\x0bc6\xd00\xc1$v\x91\xba|\x0f\xadC\x99\xf4\xb2J\xa4\x1cja\x93\xef\xbe\xc2\x9a\xbc\xea1X\xdbI\xab\x05\x89\xf4\'r\x7f\xc5`\xda\x1f\xd8\x06\xad$Ow\xafj\x89c#.R\xd9\x07\x9f0?\xff\x00\x90\x82\x15~\x99&\xa3\xf5_\xb1\xdf\x14ir\xf9\xbah\x8fV\xb3\x03\xfdH\x97d\xa8\xb9\xe7\xcc\x8d\xbac\xdc\x12+\xedMN\xd6$P\xa3 u?\x1f\xfc\xd5:\xe2&\x03\xc9\xb6b$~\x9e\xd8\xeeH\xef\x8a\xa4\xb8\xeb\x9dB;\x9fT\x912\xb6\x17\xcb#a\xf4#z\xc9E\xd6.|\xcdM\xa4\x8c\xfeR6\xaf\x94\xb5\x0f\x01\xf8\xabO\xb77/\xa6^b\x08\x84\xb7G\xcb?\xb8PFC\xe38\xc1<{\x8ei\xa3]\xb2B\xbeL\x83 \x10p\t#\x03\xafj\xfb;\xc3\xbaTv\x9f\xbb\xb8_5dI!\x9by$I\x1c\xdc8a\x9cs\x9a\xf8\xdb\xed\x0fD\x93\xc1\xbe%\xd5\xf4\xb5\x91\xb6E3\x85$p\xd17*s\xecA\xfdi\xfb\x1b\xcf\xf5I$W\x89W\xcb\x90\x85\xd3\x92\xa4\x11\x91\xcdjz_X7^ln\xa1Y\x17 \xa9\xed\xc50\xd3u\xfb\x8d:@x\x95\x95\x84\x8a\xce\xbb\xc0\xc7@T\xf1\x8e\xfc\xd4E\xd6\xa3}{u-\xec\xd7DG\xe6r\xed\xcb3\x9e\xa4\xf7\xe4\xd5r\xe2\xea\xe3k\xb4[\x81\x04co\x19\r\xdc\x03\xc9\xae\x96\xda\xfah\xe0\x967\x12\x078\x0b\x9c\x01\x8e\xa7\x9a\xd2\x08\x1bF\x19\xc0\x0cF\xc7}\xfe\xfd\xea\xd3\xf1\x8c\xcb\x83\x92G\x07\xe2\xa6\xa5\xbe\xb8\x96TY<\xc6\\g~\x0f\xd38=j^\xdexw\xad\xbe\xf9q(\xc29!y=\xc7\xbdGC\xa3\xac0,\xda\x9d\xeb\xa2\xc9\xb4\xc6\xbb\x8a\x87\x04\x90\x18\x1e\xea\x089=\xaa6\xe2H\xe6\xb9\x9eHo\xd9\x96\x0c\xaa\xe1w\x16\xed\x88\xc1\x1e\xac\xf6\xaeIb\x04cm#\xdc\x0e\xe7\x8f\xd6\x9a\xfcn\\\xeabj\xdb\xa8\xdb\x1d($R3\xb34{\xcb\x05\xda\n\x9e\x9d=\xe9-\x13\xc5\xefez\xc9\x0c\xa5Q\x90~\xedI\\\xed9\xe39\xe6\xaa:\xb4Ok\x1cr=\xc9\xba\x0c\xb9\x8d\x0f\xa7nz\x92\x079\xedZf\x8b\xa5\xe9\xf6\x16>\x1b\xd6m\xadt\xe9\xa4\xf2\xc3L\x91\xcb\xe6\xdc\x99B\x96-\xe5\x1d\xc4\xaa\xe4\x03\xc6A\x15\xd5\xe9\x82E\x94<l\xdd\xc8Q\xab\x18\xf8\xe4\xd4\xab{\xc0g\x8c\xc6\xc1@8\xf5\x1ej\xfb\xe1\xff\x00\x10\xc3\xe2\x15\x92\xcd\xe0\x89W`c<\x92;2px\x0cz\x86\xec\xa0pE&\xfe\x12\x99\xaf\xcb\xa5\xb1u\x18)\xbb%v\x9f\xf94\x9f\x86\xe2\xd0\x9a6\x9e;\xb8\xe2\xd4.\xa4\x95\xe1WtT\x08\xa4\x10\x8d\xfc\xa5\xf2ps\xc7\xb5M[\xf8\x8c\xf8k\xef\xf7Z\xaa-\xe3;\xbcq*\xb9\xccrt8R=$c\xbdWO`\r\xd7\xf1\x1dR\x1d*\x0bD\x00\xe7\xdc\x01\xb5i\xa1\x95V\x06}\xcb\xaes\xafo\xdc\x9a\x9b\xd0\xf4\x0bs<\xb6\xb2\xbc6\xf2F\x1c\xed.W\x1bF\xe6\xfd1\x93\xedP\xf0x\xfe\xff\x00G{\x95\xb3\x88\xdcY\xdaN\x04\x97*\xbb\xa3%\xc9U\xe5\xb1\x90s\xd6\xaa\xd6\xfe8\xfd\xa6o|\xbd&\xdaY\x8d\xc2\xc8$\x9d\xc2\xeebyFoJ\xedc\x8d\xc3\x80Ef\x92x\xa0[\\\xcf\xf7\x9bW\xb8o<K\xf7f9\x88H\xab\xb5I\xc9\'\x19\xe7h\xe2\xacc\xb1\xb0\x96\xddq#\xa4\xab#\rI\xe9b1\xe9,q\xf7\xc5U\xdc^\x18\xe5%\x99\x1a\x17U#P\xd43\xfc\xd8\x19\xef\xc0\xadS\xc5\xde*]b\xf3\xca\xd4.\xe3\x85\x00I\x15[|k"0\xc8e\\\x16PG\x03#\xe6\xb2\xab\xf3a\x7fs\xa7\xc7e(\x12H\xfb\x04M!v/\xd4\x1c\xe1z\x8e\x00\xf7\xaa^\xad\xa9\xcf\xa9\xdcKuu$\xcdt\xe0)g;\x88\xc0\xc2\xe3=\x868\xa7Z\x0f\x86u\xef\x14jvV\x9aM\xb3\xbd\xe3\xc9\xb8I\x9c\x05\xc7W$tQ\xdc\xf6\xae\xc7gkm\x14\x8f$\xdaSS9w\xe4g\xdc\xfbUT\xddoD\x81\x82\r\n\x00\xc6p0=\xeb^\xd3\xf5\x1d.\x1d>\xe2\xd9\xd6B\xea\x85#T\x94\x00\x1b?\x88\x82=X\xe7\x8aW\xef\xb6V1\xcb4+ "0L\xcd\x84d\x93\x91\x88\xf1\x9c\x83\x9esV\xab\xcf\xb1\xd6\x86\xdaT\xd1\xa6Yuh\xe2\x8ba\xb9\x98\x04\xb9\x97 J\xe3\x7f\nz\x95\x06\xab\xc7\xec\x7f\xc7\xd2\x12\xba\x88\xb1\xb5RF<\xcb\xa1+g\xbe\xc4\x87w8\xf7\xc5RAw\x0c\xed$\x91K\xfc8\xd8\xa9\xf3\x10\x06\x18\xdf\xee7\xa4\x9f\x15YL\xac\xda\x95O\x18,F\xf5\x9b\xc8~\xebp\xb7\xb7\x11,\xac\xb9\x90\xb4\x83>\xa3\xc7?\x1c\xf4\xaa\x06\xad\xaa\xdc\xb0t[\xb6\x11\xf9\x84\xacjG \xf2I\xdb\xd3\xe9_Bj\x9ff\x17O\xa3\xdf\xc9\x1e\xb3\x14\x9eD-*@\x96\xf2\x06\x95\xe2R\xdbw\x13\xc18\xeay5\xf3C\x16\xd4g\x8e\xd9\x15#Tn\x15\x17n\xe2\xc7\xaf~\xd5\xa4\xe9\x8foq\x19>`\x93\xcb\xfc\xd9\x18\xc6~>\xd5G7RK\xb2E\xbc\x9a\xb0w\xc6F\x7fZ\x98\xd2/\x12\xde\xe6\x14\x9d\xfdd\x8c(\xe4\x11\x8f\xefZ\xa4\x17\xaf\x1cH\x9eLq\x0689b\x08\xcfqX\x8c\xf1\xc3h\x97("\x8c\xca\xac\x869<\xd3\x95\xe7<\x03\xd78\xe7\xda\xad\x9a_\x88\xedg\xd3\xe7\xb6\xd4.\x9b|q\x96\x89\xe3\x88\xc8\xcc\xcb\xd1:\xae\x14\xf75&\xef\xa6\xb3\xcf\x13\xc4\xc0\xea\xd9\xb7\xc0\x1f\xae\x05N\xe9\xddX[\x87YA\x04n\xa0o\x9f\x8a\xb8x\xbb\xc4\x91\xcd\xf7X\x83\xc2\xadm\x8eb\x04\x8c\xaa\x81\xcf\xd7\xa9\xf75\x9ci"\xda\xfbRq\r\x87\x9a\xc5\x0b\xaa9%\x03 $\xf0z\x83\xf3]\xfd\xf9\x05\xb4\xd1\xc7fDd\x92\xd2\xc8\xb9,\xc4co\xc0>\xd5u\xf0\x9f\x87t\xe4\xb7\x96[\x8b\xc7\xb7\xbc\x82\xcd\xeeLr\xa8M\xfb\x9bhT<\xf2T\x93\xcf^\x82\xa4\xd9\xc5\xe4\x04\x8c\xb1f\x07|\xb0\xdcw\xc6v\xa2y\x9e\xees.\xc11\xed\x9cv\x02\xa1\xae\xb4\x8b++\xb4\xbb\x10\xc7\x03-\xd0\xdf\n3\x02\x14\xaeO\xa4\xe7jv\xc9=i\x8e\xa9\xa8\x99\x1a\xc9`x\xe3\xf3\x13\xd6\xe0\xee*\x15\xba0\xed\xff\x00\x15\xa2\xcf\x1e\xad\xe2\xcb\xfdN\xf5\x15\xe4\x99c\x8dg\xf5*\x97TP\xa0(\x01A\xe9\x9e\x9c\na\xa0\xe8\x1aM\xdd\xb4\xd6\xd7\x16Q\x89e\xb8^\x11U\x98)\x18m\xacrY\x8e=*= \x9eM9\xe6\xc2\xef,\xc2R\x06\x18FYB\x86\xc1\xecx\xa4\x08\x99\xb4"\xc6=\xdfI\xc8\\\x7fZ\xcf\xaet\xab\xb7\x9d\xe43\xfd\xed\xd22\xeb\xb23\xe9Q\xc9v\x00t\x19\xc5LXxf\xf4K\'\xde#D\xd8\x8a\xaf\xb5\x87\xef\x04\x98#\x81\x9c\xf1\xcf\x15\xa1\xad\xb0\xd0\xee\xef\xcd\xb4\xd7\xa9s*4\x1a|\x8e\xc8\xeb"G\xe8h\xdd\x90\xe7#\x19,8\x07\x83UH/\xfcE.\x9fun\xea\xb2\xda#.\xe7,7\xc7)#& 1\xea#\x8e\xfcS\x8d,I\xa4\xb9l\x95f\xd0\x0f\n3\x8c\x8ew\xa8\x8d\x12\xea\'\xf9A\xc6~~\xb4\xdfR\xf0\xbe\x9fkp\xa9\xa7\xea\x91F6\x13\x90\xce\xc4\x95\x1d\x17\x8erzd\n\x8b\x8bA\xb8\x9fT\xb3hd\x9e\xe1Y\x90D6\x82\xecH\xc1\x04\xa8\x1dOLV\xbb\xa7\xfd\x98x\xc2XmU\xa3\x82\xc2\x19Yd\xd9rwL|\xc5\xe1\x8a.[x\x07\xa1\xad\xcb\xc2\x1fgv\xba\'\xab\x1fx\x95\xb0\xdes\xa6\x1861\x84\xeb\x81X\xdf\x10\xf8\xb2\xd3\xa6\xdb\xcb2,E\xd8\x91\xe5\xae\t\r\xc6\x9c\xe4\xfd\xea\x9e\xee\xf6\xd1\x10\xc5\x13\xf9\xd2\xf00r\x00\xf7$T\xaf\xd9\x87\x84\x9bC\xd2-\xd1\xd0\x17iZIH<\x068\xe0\x7f\xed\xe9[\xdd\xba\xa7\xdd\xa5\x89\x86VE \xae}\xea3F\xb1K}=\x06\xd1\xb9\xb2s\xf5\xedRpG+\x12\x02\xe7\x19\xc5b:J\xddG:_I\x96\xb8\xbf\xf5\x9c\x0c\xe9\x0f\xc0\xfd;U\x1e6\xc1\xfb\xfc\xd4\x02\\\'\x9a\x14\x0c\x01\xe9\xe3\xaf\xcf4\xac\x8f+\xca\xbeX/\x91\xd3\xa9\xc7\xb5V>\xf8\xd3(R|\xb2\xa4\x803\xea?\x97jS\xc6\xbe!\xb0\xf0?\x87.\xef\xa6\x93d6\xd0o\x99\x81\xf5\xca\xfd\x91s\xdc\x9e\x00\xa7\x9b\xae\xc9y\x1c\xd1\xc6L\x804`*~vv\xd9QG\xdb\x9a\x8c\x88O5L\xfb\\\xf1\xfe\x95\xe1\x8d\x19\xb4\xcb\xabE\xba\xb9\xd5\xa0\x96\xde87\x00\x140\xdb\xbd\xcf8POn\xf5\xf3\xf4\x7fhr\xff\x00\xe9\xeb\x8b+\x88\xa5\x17\xd0,q\xde\x999\x8eH\xe3\xf4#\xe5yVRy\xc8;\xab/\xd5\xfcm\x1f\x8bm5\xddWV\x96\xe4\xde\xc9q\x8b\x08c*bU\xcf*\xd9\xe4\x00\xbd\x08\xefO|)\xaai6>\x13\xbf\x8bQr\xd3_\x10|\xb0\xb8o-Xp\xac3\xcf\x19\xe7\x81^\x95\xd0\xad\xba\x97I\xb5b[\xcc\xb9\xba\x1f\xc7P\xe3\n7\x18\x00\xe3\xf2\xfb\xf7\xad\x87N\x82\xce8\x94H\xdaYq!v\xce\x9dC|}?\xbdRn5G\x9bR\xbb\x89n$\x91"f(I\xe3 m-\xc7\xc7CW\xbf\x0fxVM\x7f\xc2\xfa\xbe\xa7g\xa7J\xf7v%\xda\xf2V?\x8dX\x9d\xa2,\xf7\x1d_\xe3\xa5Oh\xba>\xb1\xe2\xc7\x82\xc6\xdfMKr\xd6\x96\xce\xdb\xed\xd4G4q9\x01\xcc\x8b\x82\xa0\xaf\xe2=X\xf6\xaf\xac\xbc!\xe0\xcb/\r\xf8}4\xb8\xf3\xe528\x95\xcf\xe2f\x93\xf15K\xf1\x0f\x89m<!-\xa5\xb4./.\xee\x02\x19`+\x96\x86\x1c\xe5\x99\x81\xe0\x91\xb0\xce\rdo:\x83\xf5Y% 4B9\xb2\x8e\x8f\xe9l}9\x1f\x15\xf9\xbf\xe2\x1b;\xb8\xa7\xb6\x8dm\xe4%\xcbyaS*\xc5N\xd6\x00\x8c\xe4\x03_h\xfd\x8ci\xab\xaf}\x9a\xdfxsP`\x97P\x97h\xb3\xf8\x91e\xe4c\xff\x00i\xaa\xa9\xfb!\xd4\xf4\xb9\xae\xc2\xa8\x9fd\xf2=\xbc\xe5\xb2\xbe@>\x9c\x0e\xa0\x9e\xe2\xad\xde\x0b\xd1\xf5]#J\xb8\xd4\x95\xc8\x91\xae\x1cnS\xd9x\xfe\xb5\x9a\xeb}f.\xa1\x1e\xab;MP$\x9a\x97Sd\xb6\xd8\xca\x9cp3\xb5"\xea\xe9\x8cQ\xc6\xe4>7c\x8cW\xcc\xd6\xfe\x1c\xf1\x87\x85|Suocc;\xdd\xc1q$E\x95I\x127\xfbONz\xd7\xd2z3\xfd\xa3\xde\xe9\xc9&\xa3\xa0\xdbC4D\x00\xb2\xc8\x85\x99\x0f^2q\xf3R\x83\xc6z\x98\x94\xfd\xea\xd2\xde\\1%\xbc\xbes\xeeq\xc6jf\xcbX\xfb\xd2;7\xa7\x921\xf0k\x0f\xd7\xfa\xd5\xf4\xad\x0c\xbf\xe9\xd6\xeb"m\xe7e\xb5\xe0|\xa9\x1b|Uy\x969\x98\x96b\x0e\xdb\x8d\xbf^i\xde\x99\xa5i\xdau\xe4z\x85\xad\x94\x16\xb7/\tI\xc4J\x06s\xd7\x04v\xab\x1d\xd6\x99\xa5\xf8\x82\xc9\xa3\xd5l"\xbc\x880\xc2\xca9\xc8\xe7;\x86\x08\xfc\xaa\xbc.\xc2\xb6v\xfaA\xea*\xcbe\xa9Z\xbc%<\xc5\x1b\xb0Nx\xc1\x1d\xeb\x1b\'R\xea?\x88I\xda\xeedl\x1f\xe2!9\x07\x1f\x152)\x94\x9c\x16\x1f\x7f\x8ama\xe1_\x0c\xd8\x05[/\x0e\xe9\xb12\x9fN Vo\xd5\xf2j\xcf\x80\xf6\x12\xda\xc4\x91\xc6\x0bnh\xc0\n\x18\xfe]\r2\x8aX\x9d\x86\x1d[=\xd5\x81\xab*X\xb4\xd1\xa3\xe0\x1c\xa8\xcf\x157\xa7\\\xf5\x99e\xb9{~\xa7q$\x862\xb2\xa4\x8c]]\x1bb\x0858yn7Q\x8fqU\xad\x1e\xfd\x04\xd2\xd8\\\x06L6\x00n\xaa\x7f\xe2\xaev\xb7\xa9h\xdfw\x94q\xfc-\xee*\x89\xe2\x8bf\xd3\xbe\xeb\xa8\x05 \x89\x16\'$uS\xd3?J\x96\xd3\xef\xe2\xbd\x81\x16N\xb8\x1b\x1f\xb8\xfa\xd2a\xbf\xba\xb1+\x8cEw\x10)\x13\xc82\x19y17\xc1\xe5M9\x11\x01\xcclr9\xfb\x1e\xf5j\xba\xbePq\x1e\x0f\xcd&\x97\xee\x8b\xca)\xfc\xaa\x18n\xdf\xb4\xf6\xabF\x97d\xae\x82Y\x17?\xca\r@\xe9p\xf5\xef\x16\xf5\xe3\x0c3\x98\x18\xe5\xa5?\xc9\x12\r\x8e\xdd\xcd\\\xa1\x8e(\xc1#>\xdf5\xe5\xab_\\\xb2\xb0\x80"\xe7\xa9\xabB\x93\xb4g\xae)\x05\x01@\x00b\xba\xdd\xf3_Bxs\xc3V\xde\x1d\x86U\x8a\xe6y\xe4\x97\x06I$l\xe4\x8f`6\x14\xd3\xb9\x90\x8c\x801\xc6)m\xd5\xe6i<\xd7\xa2\xb4\xb9\xa6\xeb\xad\xd5\xe6k\xc3^f\x8c\xd1]f\xbc4Q]\xa2\xb99\xaeJ\x86\xea+\xbe+\xd0\x05\x14SV\xb7V\xa6\xafh=\xaaW\x15\xe5s\x15\xca\x82k5=\x85&m\x8a\xf4\xa9\xe2\x8a{Rm\x0f\xb5\x18\xae\xe6\xa1\x95J\xf0E\x15"\xf0\xfcQ\\\xc1\xa2\xaa\n1\xd4\xd7E\x80\xa6Fo\x9a\xe3\xceRz\xd4]B\x9f\xc1\xa7\x0c\xf9\xa4\xb2s^\x07\x15\xd894g4W\xa2\x94\x19\xaeA\x1e\xf4\xa8\xae\xe2\x8a\x06iN\x94\x02+\xae\xdd+\xb8\xaeW\x1b\x8dz\t\xf7\xaeX\xe2\xb8\xe6\x8c\xd1N\x95\xc0\xa5\x04\xb4\xccf\xbd\xdcE\x00\x9a1O|\xecW\x86cQ\xe6C\xcdpd>\xf9\xae\x191]\xd3O\x1a\x7f\x9a\xe3\xce\xcfzf\tc\xd6\x96Ec\xdb5\xcdf\x8c\nT\xc8Oz\x03\xb5v\x90\x9c\xf3Kyx\xe81K\x00\x91\\\xc8\x14.J\xf3Q\x9a\x84\x1fy\xb7\x92\x1d\xe4\x16\x18\x04u\xcd>2\xa4G.x\xa8\xab\xbdN\xd2\xd6Q\xe6\xa9\x00\x9fK\x0eFk\r\xe3(\x12O\xc1\x97d\x8dX2\x19\x18\xe0o\xda\xba\xad\x80\xd8\xc9\xf8\x15_\xb5\x8e\xf2\xc2\x0b\x98\xaf1\x18\x88\xe07s\x9e\x84U\x87C\x81DQ\xdco\x07w1\xfd\x0f\x7f\xadG\xdd\xa8\x9f/,\x85\x99\xb9\xcf\xc7j\x9c\xb6h\xad\xad\xad\xa3\x05r\x10`{\xe7\xda\xb2\x9d7\xa7[G\xd4C\xa6\xad\x16\xc8tkl\x9c\xb3lv\xf8\xe2\xa1\xdc\xbbh\xc9\xeey\xa7\xb2\xbe\xcca\xbaTl\xda\x8b\xc6\x84\x0c\x1f\x93M\xae\xf5\x15\x93*\x8aI\x04\xf3\xd3\x15\x04\xd7!\x8be\xf3\x83\xd75qu\xd7^\xd8\x94\xb5\x94\x81\xc1a\xc5U\xb0\xd5\xcd*\xd7W\x12\xb8\xcc\xbc\x02p\x00\x00\xe2\x9e\xc7\x1a0\xdc\xcaO\x1c\x92sM"\x8c\x07\x0c\xc3\xd3\xd74\xe6y\x83\x00\x14a{c\xbd7mw;\xc6\xd2\xdc\xccd;\x05F\xdc\x9f\xd6\x98`3\xb0\xa6W,\xbb\xc1\x1d?\x84{|\xd5S\xc4z%\xbe\xa9aq\x04\x89\xb9$\x8d\x92E\xc6r\x18t5m\x8a%\x91\xd8\xbev\x81\x9f\xa9\xaen\x1c\xf9\x04\xc0\x88\n\x9eU\xb8\xce}\xbd\xe81\xbc\xb1I#\xecpYq\xc8\xc7\x7f\xb5 \x8d\xeb\xf3O]\xfb>\xf1\x1e\x9d\xae\\\xd8Ec#\x81#\x08]U\xb0\xeb\xd4c\x8fjk\x16\x81\xe2m%\x18M\xa1\xea\x11E\xbb2\xca\xb1\x16\x18\xc7\xbe+\xf45\xb4\xdb\xb9\xa4\xf3g\xb8h\xd4\x92I#%G}\xa2\xa3/\xb4\xfb(7\x19\'\x96TV\xe4l\x00\xed\xff\x00\xbdXE\xe3.\xa0\x16!\xf88\x8a\x80\x01gm,\xc7\xdf\x03\x8a\x96\xbdBT\xc1(\x0e9\xaf\xce\xc8\xac-\xae\xa4w\x8ai\x1d\xe2\x91w\xc4\xeb\xb5\xd8\x13\x8c\x8f`;\xe6\xae\x90\xd9O\x03\xd8\xdc\xc9d!1\xb3\r\xb38\x95\x00\xc1\x04\xed<\xfd\x0f\xbd}qu\xe0\x8f\x01\xf8\x8aus\xa5\xb0\xb8*AeQ\x1b\x9c\x8er\xcb\x8a\x97\xb6\xfb)\xf0\xcb\xddI\x03F\xd7~j\xa8x\xe4\x99\x98*\x80\x01\xce\x08\xcfO\xce\xb56\x9d~\xd6\xe2\xdd\x9d\xe1\x99N\xc1t\x00\xcb\x93\xf3\xb1\xa9\xb1\xf5h\xb1\xb4\'\'\x9f\x9a\xf9\xbf\xc0\xde\x05\x8b\xc6Z\xfc\x8c\x1a\xe1t\xeb@K\xea\x0b\n+\x87e\xf4F\x06pX\xe7?\x02\xbe\x8b\xb3\xfb-\xf0%\xa5\xb1\xb7\xb9\x8e\xfe\xe1\xc3\x93\xe6=\xc1\x8c\x81\xd9@\x8c\x01\xb4|\xd6\x91\xa6\xf8kL\xd0la\xb2\xd3\xacR\xda\xd6\x12J\xc4\x9d\x8bubO$\x9fz\xf6dE\xf6\xc0\xe7&\xbc\xdf\xc4\xbe.\xea\xf1\xdc\x13o9\x8a\x14\xd9\x10\x0c\x13\xf2{\xd2\x9e\xeaYdfGh\xc1\xec\x0e+\x1d\xb9\xfb\x19\xf0\x9b\x12\xd6w\xd7\xd1\xc6A\xdb\x14\xea\x97\x11\xf21\x82F\xc6\xc7\xb75\xf3\xc7\xdaG\x80\xbcI\xe0\xebd\x9e[\xd3\x7f\xa5J\xdeS\\\xc0\x18l?\xc3\x1c\xaa\xdd3\xdb\xb1\xaf\xb5&\xbe\x8e\x03\x85\x04\xff\x00Jb\xcb\xa2x\x9e\xd6\xf7O\x95\xa2\xb9\x86t\xf2n\xed\xf7s\xb5\xbd\xc0\xf6=\x08\xefU}\'\xc7\xbdf\x0b\xa8^\xf1<\xebP\xc08\n\x01\x00\xed\x9c\x8f\xefNG\xd4\xae#:|\xf2\xe0\xf2\xad\xdf\xe8k\xf3\x96\xd7Z{K\x84\xb9\x86\xd0$\xc2\x05\x84\x0c\x0cH\x0f\x07w\xb9\xed\xeej\xee\xdfpd[\xebw\x96\xc9\xe6C+\xc0\x85N\x10\xa8VQ\xc8\xc6pI\xecN\x06+\xed\xbd3\xc1\x1e\x0f\xb0H\xe3\x8f\xc3Z|%\x1b\xf1,\nw\x11\xd0\x92\xc0\x9c\xd4\xa5\xce\x83\xa5\x91\xb54\xcb//\x1f\x84\xc0\x98\xf9\x07\x8a\xdb\xbf\xfdG\x8a4&.\x9b#\xae\xae\xf2\x05#\xed\x83\\\xfc~[x\xb21\x8d\xcf5\xf9\xfb\xa9\x9d\'K{;\xc8\xede\xbb\xb9\x92p\xd0\xf9\x91*!X\xf0J\xb4gp8\'\x1d0j \xe8~$\xf1%\xdb\xcb\xa7xZ\xe5\x0c\x8d\x96[h\x1dc\xcbw\xe7\xd2\xb9\xfd+\xef\xd9\xb4}.\x19\x04\x83M\xb4\x8aD\xc8\x8d\xd2$R\xa0\xf5\xc1\x00c5\x11q5\xdc\x8f\x1c\x10]\xcd\xb7\xaeY\x8e\xd5\x03\xe7\xbf\xd0TY?\xeaX\xb8f\x10\xf4\xaf/\x1b\x9drj\x00\xfd\x80\xa6\xda\xfd\xd5p\xa8\xa5\xb1\x8c\x9ek\'\xfb*\xfb,\xf1\'\x86\xb5\xdd\x07Y\xd5\xef\xa3\xb7\xd9r\x03Z\xa821Y\x06\xcd\xac\xc3\x00\x1fW\xcd}\xd6l\xa1[8\xf7\r\xc5x8\xee\x05bv\xf1\xc3qo\x18\x9f\xd6\xe3\x04\x1c\x9e\x18\x1c\x82=\xb9\xad\xb5nE\xe6\x8f\r\xdclx@N\x0f\xbfQ\xfa\xd2"\xea+}\x0fS\xbb\x9e4\x91\x85\xa1e]#\xf2/\xa8\x8f\xb5Cy\xe5\xb9rel\xb0\x00\x0f\xa5g\xfa\xc2\x93,\xa5B\x85\x04\x9c/\xf6\xac\x97]\x82\xefG\xd1\xe7\x9a\xda\xc5\xe1\x81\x9c\xef\x94\x03\x93#\xf3\x93\xd4\x92OsZ\xfd\xdeZw\x00u\xce\x00\xedP2\xdc\xcd\x036X\x9085\xe4VW\x9a\'\x96\xe1\xe1\xf3\x12I\x89\xd2\x0e2y\xf6\xf9\xa6\xa5U,5\x121\xed_\x16}\xa0X^hsZ\xd84\xf3+\xdc\xd9\xdb\xcc\xf0\x96$\xf9\x93\x0c\xb6G\xbej\xe5\xa0\xf8}\xb4\x8d\x1dw\x9c\xc8\xf3F\xec\xca0NW9#\xe9S\x1e4\x8e\xde/\x1f\xd8\xea\xf7q4\xed\xf7X\xbc\xa8\xf3\xc2\x94,3\xcfS\xde\x96\x8bXMjMp\xc57\x96\xb6\xf7\x11\xc3\xb4.[pNq\xd8\n\xf5\'\xea\x12\\\xf4\xbbb\x10*\xb4BYX\r\xb5\xb3\x01\x8f\xb53,\x9a\xd0\x85\xe3r\xc7\xdfz\xbb[\xacm\x15\xac\xf1\x9d\xc1\x17\x82=\xcf8\xcf\xbf\xc5\x17\xfa\xabE\xe5\xa0pX\xf4Q\xd4\x9e\x80\n\x88\xd0\x16{k\x01\x1d\xcb\xff\x00\xd1H_\xc9\x1c\xeel\x1c\x11\xf03\xf9\xd3\xab\x8b3\xae\xda\xde[$\xcb\x1d\xcd\xb3$\xf6\xcf\xd8\x11\x95 \xe3\xb1\x06\xb2\x8fm\x1c2\x17y\x83F\xad\x86=\xd7\'\xbf\xdf\x9a\x8e\x06\xdb{T\x06\xb7\xab\x88!\x16\xc8\xf9;}l:g\xa9\xfe\xb4\xf7\xec\xe3\xc5\xed\xa4j\xafgv\xf8\xb3\xbe!I\xff\x00\xf6r\x13\x85s\xf1\xd8\xd6m\xac~\xd5\xb4\xb8\x92=B\xcaXJ\x9c,\x98-\x13{\x10\xc3\xad0\x11\xdf_G\x17\xdc\x90\xb4\x92\\\xc5\x12F\x01\xcc\xccH%\x17\xdb\x8e\xb5\xa3\x8b\xa7B\xd6\x9a\x0b\xa6\x1f\x07\xcd\xc8 \x1e\xc7"\xbb\x10\xcc\x80\xf1\x9a\xfb\xe80h\x97z\x06\x19#\x91\x9eO\x18\xe2\xb0O\xb4?\xb1\xfb\x0f\x10\xdc]\xeb\x1adkg\xaa4E_<%\xc7\x1cn\x1d\x9b\x8cg\xbfz\xd7t]`\x1bX~\xf7\x03\xda3\x80Z\t]\x19\x91\x87b\xc8J\x9f\xca\xac\x8b\xf7[\xbe~\xf0\xbc\xf4\xc6\x0ej\x05\x8fY|\xc4\xd0\\\xa8\x99=:r\xb8=\x88-\x9d\xd4\xd4\xf8L\x90H\xb2Fp\xcb\xff\x00\x9b\x8a\xfc\xe4\xd4\xf4\xcbm\x07S\x9e\x07WE\x9252ZLIx\xd8\x8c:6q\xc8a\x95=\xc6*\x9dm\xa9^h\xda\x97\xde\xa0\xb4\xf3a\x0c@\x8eQ\xbd\x19s\xd1\x81\xe0\x83_\x7fx\xff\x00\xec\xc3E\xf1\x9d\x91\x8c\x9d\x97h\xa7\xc8\xbb@7\xc6z\xe0\xff\x002g\xaa\xd7\xc3\xbe)\xf0\x7f\x8e\xbc\x03|\xebw\x1c\xa2\'$\xa5\xc2\x0f6\t\x07\xc19\xc1\xf8<\xd6\xf3\xa2\xf5\xd8/\xee\t/\x1d\xbd\xd0\xc6b\xcf\xa4\x91\xbeP\xf7\xfe\xd5\xa0\x87\xa8,\xf1\x84u\xd2\xe0`\xe7|\x8a\x80\xba\xbf\x17>I\x82\xc9\x94\x8cy\x8e\x00\xeb\xd3\x03\xe6\xbe\x98\xd0\xfc\x1f\xa6x\xe7\xc0\x1a\x15\xccv\xc8\x9a\x95\xb4R\xc13\xc3\xfb\xb9&\x11\xb1\x03=\x8b\x8fc\xd6\xbel\xb0\xba\x8eW\xf3\xa6\x90\xa1\x95\xfdF1\xe8c\xd8\x95?\xe2\xbe\xb6\xfb\x12\x9f\xef>\r\x90\xfaG\xff\x00\x98\xdc\x1e}\x9bi\xa8^\'\x96[[Ky\xad\xcb#Ep5\x1c\x9d\xf2\x0eA\xa4\xf5\x19\xa4\x8e\x04\x91$*\xde`\xdcm\xc85\x94h\xda\x07\x83c\xb4\xd7\xc6\xa1\x1d\xdc\xefg\x13\x92\xd2\x03\x01\x12\xab\x00W\x9c\x84\xc6@\xe6\x9e\xeb\x7fdz\xc6\x9fem}i<w\x11\xc9n\xb3y\x01\xc9\x93\xcc\xc7\xa9\x14\xe0\x03\x80A\x1e\xf5\xbfx\x83\xc2\xf6~!idWH.\xde3\x0c\xb2\x14\x12$\xd1\x9e\xd2.FH\xec\xddh\xbb\xd15MKO\xb4\xd1L\xb1\x9b\xf8\xa1I!h\xc9X\x9cF68bG\xa4\x11\x8eOCYu\xf1<\xef%\xa8\x81\xb5\t$a*H\t`H\x18\xc1\x00m\xb7j\xabN\xady\x1b3+\x16$\x8ew\x07\xe3\xe2\xb1\xdf\xb1M\x0bU\xb0\xf1\xf5\x9b\xdc\xdb\x94Y-n\x95\xf72\xb1\\G\x9e9$\x10E}\xa8"H\xc6\x0f\x1b\x7f\xcdS|\'\xe1D\xd0\xf1wtb\x92\xf4\xc3\xe4\x86A\xe9\x8dN\x0b(c\xcb\x12G&\xac\xda\xa5\xecv\x90\x12\xce\xb9 \x9f\xa5X_u\x15\x8a\x17\x9e]\x02@\x06q\xc7\xb0\x14O<\x97n$\x91B\xb6\x9c`UkV\x94\xb1\x91@\xc0\xc9\xf9\xe9U\x8b|\xfd\xf8\x9cr\xa8\x15\xbf2O\xf8\xaf5\r`\xc8\xccc \x83\xc1\'\xbe)-2U\x91\x89\xe0\xb3\x90HQ\xdf\xb5b\x8fQY|\xc6r\xd9$\xeeF\xd4\xc61\xedVx\xce\xd2\x0eH\xc7\xbf\xebX\x07\xff\x00\xcc~\x8a\x07\x8bt]H\xc7\x88n\xec\x967ld1\x8d\x8f8\x18\xc9\n\xc0\xd6\xfc\x13\x00\xf5\xc8\x00\x9f\xad+\xe2\r\x0fJ\xf1\xbe\x89\xfb\x1fU\x02)\xa3\x1b\xadnJ\x861>03\x9e\xa3\xb1\xf7\x15u\xe1\xbe\xa4\x96\xd2\xcd\x1c\x8c\x06\xb6FRv\x07N\xa1\xa4\x9e\xc4\x86\xdb\xe9S\xac\xee\x05\xb5\xc4r\x90H\x19\x04\x0fc_\x9f2ir\xc5q\x04O\x04h\xec\xc1\xc20\xd8\xeb\x8c\x82\x186\x08\'\xa8\xfc\xabt\xf0\xcf\xd9\r\xae\xab\xe1K+\xeb\xcb\x99\x11\xef\x1cMoi\x91\x1a\xbc!\x87W#(\xce\x01\xdazt&\x9a\\}\x98\xf8\x85\xbcQ\xa5\xe9\xb7\xf6\xb3$\x97\x17\x91\xc6oUKE,=\xdd_\xb1\n\xbct\xf9\xaf\xa8\xef\xa1\x8c\xacqB\xa0E\x14a#Pp\x15W\x85\x1f\x90\x02\xb6\x17\xddW\xf0\xfeY\x83N\xa2\x01U\x7fV\xdf"\xae\xef\xfa\xc6\x9bx\x05\xb3a\xd9\xb3!\xc7\x00v\xfb\xd7\xe7g\x8c4\xf9|9\x7f\x1d\x9c\xe6\x7f0B\x8cR\xe1JH\x8cF\x19\x08 p\xa7\xa1\x1c\x1e\xc6\xb3I\xe6\xb8\x92@}j\xe7\xf0\xb2\xf5<\xe7\x80;\xd7\xe9\x8e\xbb\xe1m\x17\xc5v\xd1[\xeb\x1ad\x17\xcb\x16LfL\x87\x8f<\x1d\x8e\xa4\x10\x0f\xb6q_7\xfd\xa0\xfd\x86\xcf\xa5G&\xa7\xe1\x9b\xc7\x86\xd0c\xcd\x8aY\xb6\xb5\xbb\xb1\xdb\xe6y\x98\x1f\xba9\xc1\xcf\xe1\xefZ\x0e\x8f\xd6m/\x99<\xc8\xbc\x89[\x00\x01\xba\x92=\xb3PGU\xf3\xc8C\x95c\x9ex\'\xeb_)}\xfe\xea"\xea\xd21\xc8 \x86\xe4\xf3\xf5\xefZ\xc6\x87\xa1\xebz\x8c\xf6\xd7\xd7Ww\x1ee\xecn\xd0:\xa8\x1b\xde4\x0eT\x15+\x9c\x83\xd4t<u\xaaL>\x17\x0fey;\xea\xb61\\\xd9\xbb\x89m$s\xbd\xb6\x02r\xa4d1=0?3N\xf4\x7f\x16_\xe9\xc6\x1b\x19n\xda(\xe2\xde\xa0\xee/\x18W\xe4\xa0Q\xc0V\xef\x8e\xb5\xa3\x924@\x1c\xc0[pp\x06\xe7\x04f\xac,\xae$\x8d\xca\xbc\xe5\x03\x1cd\x93\x81\x90~\xdf\xadk\xb6\xde\x18\xf1&\x8d\xf77\xd3\x9e\xda\xfe\xe2\xea\xd9\'khf2\xbaz\x8f\xee\xd0\xe3\x05\x862@9\xedP&\xefV\xd44\xb9\xb5Y\xf4\xc9E\xa2\xccby\x8b\x86\x06F\'8\x1dO=N8=jF\xdf\xed:]I\x82\xdc\xbe\x9f9HB\xba\xce\x9b#`\xa5v\xe0)\\\xb2\xed\x00\x1e\xb8\xa6\xc9\xa6\xea\xfa\xf4\xb7Q\xab\x12 oX\x80zU$%\x82"\xaf\n\xb9\xce1U\x1dG\xfd\x1214\xda%\x8d\x82\xaes\x95\xdf\xb6\xe7>\xf5n\xfd^\xee\xce\xd1\x9ak\x941\x8eJ\xe1\x86I\xe2\xa1t\xfb[\x89\xae\xf1\x1d\x8d\xc4\xc1\xf7ac\x0cA#\xbe\x009\xfaU\x9f\xc3En5\x11\r\xa6\x98.\xf5)\x8b\xa5\xb2\xed\r\xb2G\x18\r\xb5\x81\xdc\x17\x93\xc9\xc7z\xbfxg\xec\xd2\xf7S\xb0\x8ex#\x92K\xa1)\x02\x1d\xe65\x8dA\xe4\xbb\xe4m\xc5}\x15\xe0\xcf\xb3\xfb\x0f\x0bi7,m\xad\xce\xa1pI\x9et\x00\xb0V\xc6"\x0e@%x\xe7\xdc\xd6vn\xac\x8b\x83l5J\x14\x95;i\x07\x9fl\xd6y<D\x0cr(\x80\xb0\xecI\xdb5\x82\xd9\xfd\x895\xed\xd7\xde\xf5\xfd\\ng2M\x05\x98\x13L\xe7\xd8\xc8@\x8d\x7f,\xd6\xc1c\xa0i>\x14\xd3\xc6\x9f\xa4i\xa9e\x14\x8b\xfb\xd6\x04\xbc\xb2\x7f\xfb\xc9\x1b\x96\x1f\x1d>*\xf7h!\x82C\xbfh\xf4\x9e\xbd\xb0\x7f\xefPz\xb5\xe6\x9dp\xf3D\'Eq\xc6A\x19\xc7\xf8\xaa\x07\xba\x92\xf62n.\xc1a\x92c\xce\xd9\xf9\xcf&\xa8\xae\xfa\x85\xc5\xc9%\x9fo\xf6\xae\xc3\xf4\xa8}\x16[9\xdee\xb9\x9671\x92\x883\xea\xca\x9f\xcf5\xa8\xd9\xaa\xb6\xd6\t\x14q\x85\'\xb1n\xd8\xc8\x15\x81]\xc9\x1d\xbd\xc0KK\xa5Y\x879R9\\\xfe\x13\x81V\xdd\x17X\xbb(\x01\x938\xe1\xd0\x9c\xed#\xb6{\xd4hz\xdf\xe0$\xf2\xda \xe9\xb7\x07\r\xf7=\xc5BV\x15\xa2j:}\x8c\xb2\x82\xb1\xab\xe5\x0fc\xc9\xc8\xe4b\xbf8\xbe\xd1\xfc+\x15\xa7\xda?\x88t\xaf\r\xda\xcfp\xa9y\xe8\x86\xde2\xe5\x1d\xd43\xc66\xe7\x85bE~\x94\xe8R\xad\xc3\\\xdcHT\xfd\xde\x16\x95T\xe3\x04\x8f\xf8\xac+\xc4\'\xff\x00G\xdc\xd9Zi\x16\r4\xfa\x94\x8f5\xc1\x89I\x9a\xe2y\x1bs;\x15\xf56I\xe0t\x02\xada\xeb"\xc9\x9e\xea\xde\xddd{\xcfLp\xaf\xa4\x12\x9bj\'z\x92\x97F\xcd|\xc0\t\xc8\xc0\x02\xbe=\x93\xec\xcf\xc5\xda$0_j\xbe\x1c\xbc\x8e\x02\xc4\xc90\x8f\xcdX\x80\xe7\xd4\xa9\xb8\x82}\xd8`Wzr\xdc[K\xaa\xdei\xd0\xacp_\x13o\x08""1!\xe8F\x06\xdc\xf3\x82\x00\x02\xbe\xca\x9fS\xb8\xd0.\xad\xa3\xd4\xfc\xcb\x1b\x99\xa2\x12,N\xd9\xdc:\x10\x18d\x1c\x1e\x08\xedU}o@\xf0o\x89\x12[\x9d-\xac4mt\xa3\xaf\xde\x1e\xdb|\x12$\x99W\xdd\x1e\x08W\xc1\xe1\xd4g53\xa5\xf8\xdaG\x9dm\xfa\x95\xa3\xd9\xea\x7f\xfd\xe5\xc9Q\xdb|\xf0?j\xb1\xb3\xeb\x90\xe7M\xc4J\xa7\xb1\xc7\x1fZ\xf9+I\x11M\xab\xb0\xbdXQ"\x8e\\I:\x84\x86I\x19:3\x1e8\x03(@\xcezU\xef\xc3\x96\xba\xb6\xb7wm\xa4\xda\xb1\x9e\xe3S\xf2\x96iUD\x88\x06\xe1\xc6{"\x85\x1d\xfbW\xd0\xf6\x9a\x17\x82<\x11\xa6\xc2u\x9b\x18\xb59%\xf2\xf3wwj&y\x99@U\x8e\x149\xd8\x83\xa2\xaf\xebS\x1e\x0fo\x0fxyn\xbfgh\xcb\xa7\xdb\xc91\x96(\x1d\xc4\xb7\x07\x04\xff\x00\xa8\xeb\xd0s\xc2\xe7\x02\xa6\\\xf8\x9e\xd2a\xe5\xc1\x1c\xab\xbb"9\x03\xd5\x91\xb9\xff\x0055\xba\xf0H.\xb4G\x9c\x9fC\x9d\x81\xdf\x1c|Tm\xcf\xd8\xee\x89g\xa7O\x1cZ\x85\xc7\x99\xe4\x81\xe6\xca\xa0F%\xcf\'j`\xfa\xb1\x83\xf1_;=\xce\xa1\xe0Mb\xf0I\x14\x11\xddZ\xbb\x05\x8aF\r\xfe\xa0\xe1\xd4\x9c\x8e\x87 \xd7\xda\x86\xf6\xe7Wx\xeeM\x9e\xc8\x14z\x0b\x1c\x06\x1f\xces\xd7\xaek7\xfbO\xb1\xf0%\x8e\x9a\xfa\xfe\xbb\xa1Ew,*-`\x19di\xe5pv\x86a\xc0U\xc6ry\x1d\xaa\x8a>\xa8\xa7\xa8\xb8\xd6^\'u\x8e\x14A\x86iA\x1f\x97\x8d\x87z\x8d\xd3z\xfd\xdcri\x95\x9aUm\x86\xc3#?^\xd5\xf2\xa4\xb7\x97qjp\\\xc5w\x04\xf7\xb7\xb2\x9d\xa9\n\x07\xf2\xfc\xee\xc1q\xb7\'w\x00w\xaf\xa6t/\x05i>\x01\x85L\xae\xf3]\x03\xe7\xc6\xf7!X\xdb\xb1\x1c\xec\x00\x95\xde0r\xff\x00\xa5|\xed\xf6|\xb6r\xfd\xa5\xf8b\xcd&\xb6\x9dE\xd7\x99\xba\x1ec\xde\xa8dE\x04\xf5\xc1\x00\x1a\xfb\x02\x7f\x0fO\xe2\x7f\x14YG8\xddii\x06$N\xcd&r\xa3\xe9\xdc\xd3~*\xeaw\xd63\xdat\xf8\x9eH\x8c\xa8d\x91\xd4z\xc9\xce\x95E\xf9$W:\xdfQ\x96b\x90\xc0\xe4\x06\x1b\xe0\xe0\x10}\xe9\xd7\x86\xf4k\x8d]\xa2\xd6o&\x97c\x12aF\xca\xe7?\xc4{\x9c\x8e\x95\xa5\xc1\x146\xed\x89\x00$\x01\xcd?\xbd\xd3\xfc\xab\x04\x8a,(E\x07\x1d\x06j\xb6\xd33\xe3~K\x859\xc7\xf9\xacGX\xb5\x97\xa4\\\xc2\xf7\x10y\xb3\x94\x0e\xa5\x8eP\x13\xf9\x94|\x8f~\xf5S\x02\x04]#os\xdc\xd5\xb6)c\xe10:pG\x1d+\xdb\xbdZ\xdbH\xb6{\x99\xb0Bt\x03\xa9\'\xa0\x15TK\xd2\x81pp@\xeaMd\xfa\x97\x8d\xec\xf5\xedn{\x01!Hm\xce\xdbi\x1b!$~\x8c\x7f^\x07\xbdJ\xb1\xf1%\xc4\xb1Lm\xe1&HP\x1d`d(\xfb\xf3\x8ay\xd4\xa8\xdb\x93\xc5J\x1dBg\x9f\xd2\xb8,\xd9\x03\xaf|\xd4\'\xdb\xaf\x87\xee\xbcZ\x96\xbaZM"\xc5o\x18\xb9\x968\xc6K\xc8x\x1c\x7f\xb4g\x1fZ\x9e\xd1\xec\x9emZ\xc6\x17\x04\xee\x99A\xfag&\xaf\x93j6\x8f\xa9]K.\x8b/\x98\x1c\xa2\xcep\xcb \xce\x00\xc7j\xef\x87&\xb4\xb5\xb83Mw\x15\xb9\xf3\x14\xc4\xef\x9c\x16\x00\x83\x8c\x03\xb8\xd5P\x8f\x9a\xa8t\x93\x9dC\xed\x8a\xfc\xda\xbb\xfb8\xf1\x16\x9f8\xb7\x92\xc9\xe3\x84\xb6\xe5v\xcf\xa8\x1e\xd8\x19\xe6\xafp}\x9e\xea\xf6rZ_M\xa6\xf9\xd6\xb0\x042oR\xf1g\x1f\x85\x80\xe7\x03\xe7\xad}\x95&\x95\x06\xa1r]\xad\x16\xdd\x0b\x82Ps\x92*\xfb\x06\x8f\xa3\xddY%\xbbZ\xc1*\xed\xda\xc8\xea\t\xc7\xb15\xbb\xe9\xbe0{\xeb\xc9\xe1\x8aX\xcf\x97\x1f\xa2em:\x9f=\x83\x03\x9aT\xb2\xdf\xdcA\xa1\x9c(\xc6\x927\x19_\xed_+\xf8\'\xc40\xe9lL\x93+\xc8HR\xc4\r\xdc\x0cc\xe0\x01\xd0\x0e\x05l\xf6\xba\xea\\\xb2\xc6&\x0c\xacx\x03\xe6\x98\xeb_d>\x1f\xb8\xb9yl`6\xb27;A;A\xf7\x15IM6\xefI\xd5SM\xb9WUe&\t\x0f_OQ\x9e\xff\x00\x15\x85\xeb0\xc9wuwtg\x9c\xcc\x18\xb4\xc5\x9b:\xbd\xce{\xfc\xe6\xa0\x04\x96\xd4\x01\x81\xa3;\x0cb\xb7\xbb;hnl\xa6\x87\xab\xc8\x87\x8c\xe3\x82+\x8b]\n-;G[\'U\xda2r:\xfa\xaa\xbf\xe1\xddFH\n\xc6\xee2\xa3\x83\x8eM]\xafn\xb6\xc4\xb2.?x\x06\x01\xe9\x91\xd4V\xa3\xc2\xbdV\xcaK\x11\x14\x85U\xe1R\x02\xf6\xd2O\xef\xbdI`\x8e\xba\xf1\xdb\x15\x86\xeb\x9aM\xbcs\xca\xb1\xa6w\x0eH\x15\x01f\x89m\xe6\x07\x05pq\xfav\xad\x83S\xb7\x17L\x92\xc7\x18-\xb8\xe4\xe3\xb0\xac\xf7T\xd2\xe6H\x1e\xe5[,\x1c\xe4\x01\xf3U\xde!\xb6a\xa7@%\x1d\x8b\xea\x1c\x05\xc5B\xf2\x86\xa69\x1bqQ\xbfye\x05\xbb\x11\xd2\x93\xfd\xa1\x1e\xd6\x0c\xa0\x12p\x0f\xf8\xa8\xb9d\x90\x0eT\xd7Ze\xab\xde\xdeyj\xa4\x9f\xc5\x8fo\x9a\xca\xf9\x11\x84fn\x06\xfbS\'\xcc\x0c\x17\x1b\x9e+@\xf0\xf5\x80e\x17\x123*\xe7)\x1erq\xf2k\\\xb0\x82\xe6KT\x96&\x8dP\x1ce\x9b\'"\xa8\xba]\xb8\x8a\x18\xc1\x19\x00\x01V\x81"\xda\\0\x926\n\xcb\xb6E^:\x0e\xbfQR\xbc2\xb6\xb3_\xcfs}\xa8C\x95@Q\x8a`\xbeH$\x81\xc6\xdcU\xd4h \x89\x00\x1b\x9d\xcdK\xdf\xe8\xf2j\x1at\xf6\xf7k\xe6G(\x07p<\x0ct#\x15\x8e[\x8dGC\xd4M\xa4\x90I4\x05\xbfw*\x8c\x82>kM\xd2\xb5+\x81$\x82;\x92FN\x019\x04\x1fqIM\xa7\xcbuy+\xb9U\xe8N\x0e\x07\xe5W\x1e#=?\xa9t\xdbo\xc0\xf4\xe9\x9ea!\x8bNCm\xb9\xc9nO\xde\x9dE\xd6\xca\xda\xb4\x91\xde\x9di\xe2\xde\xee\xdc\xc9,\x8b\x13\xa69n2*\xc4u{(!X\xe1>k\x81\xc2\xafO\xd6\xa9\x93-\x95\x92H$\x99X\xe0`\x03\x9ej%\xb5\xcbH\x11\x82u\xcf\x04\xfbU\x07N\xf1\x07P\xf0\xea\xb2[Z\xda%\xd4\xd1\x04\x9e|\x19$\xc2\x13\x8d\x87\xa46?\xe6\xac\x96@@\xd4\xdb\x0e3Z\xe5\xb3\xb4\xd0G#c,9\x03\xde\x96 \xd4v\x84]\xb4\xab7rr\xe9\xbb\xf5\xa9|f\xbe\x82\xe9\x13\xcdu\xd2\xbal\xf3\x7f\xeeKk\x13\xbf\xd5\x94\x13\xc5;M\x89\xc5t\x1c{\xd7N\x94\xdd\x97\x06\xac7\xae\xf3N7W\xa0\x8ai\xb8\x8aY[5\xda1K\x9a\xe0\x9a\xf3&\x81\x9a+\x94d\xd7jk\xd0\xa0\xd7aEv\x8a\x00\xa3\x15\xd0\x18\xa0\xd7i5\xc6+\xd0\x05\x04\x8a\xf34Q^\x90;\x8a+\xcc\xd1E\x15\x90\x1d\xed\xc9\xae\xe3SJ\x84\xcd*\xa1F8\xcdW\x81R\xc9\xae\x94\x1e\xd4\xa0\xcdt\xb9#\xa5*\xb1\x1e\xa4S\x80RMp\xa0\xd2\xa2\xba\x0b\x81\xd2\xba\xdaM*\x93@a]rk\xc0\xb8\xed^\x95j\xedv\xb88\xaf@\xa3\x15\xde8\xaeb\x8c\xd7\x06\xb8\'\xda\xbb"\x80\xa6\x8a)\xb9RMt\xb1\x1a{\x1c[\xbbS\xa1\x12\xa7&\x8f/=\xa8\xd5\x8a\x8f\x8e\x03\x9c\xe2\x9e\x04U\xedCH\xab\xde\xa3\xae5\x18\xa1\x07,)Z@\xa4\xea\xa9=\xca\xbdx\xa6ww\xd1B\x84\xe4qT\xbdC\xc4\xf1E\xb8y\x80U2\xf3\xc4\x93\xdc\x12\x91d\xe6\x90\xd3*\x0cWDl\xd5f\xd5\xf5\xb6rU\x1f\x14\xa5\xbd\xd3\xdf\xc7\tt\x05c\x1c\x8cq\xc7L\xd5.\xd6\xd6\xf2\xeeEg\x07\x04\xd6\x87ka=\xb5\xa4k\x81\xb5\xc8\xdc~+#\xe3\x08\xde\xeb\xa1\xdc\xb4i\x99#*\xc8}\x8e}\xbb\xd4\x88\xa3\xd3"\x0eu\x1c`Q\xa6\xa0\xbd\x92w\x9eG!N6.\x14c\xeai{\xab\x89U\xbc\xe8\xb0L\x1c\x01\xd7\x00w\xae\xcf\x95\xa7\xc0T>\x0c\x99en\xe75R\xbb\x97R2:d\x03\xf8\x91\xd4c8\xef^}\x11\x9e\xc2\xd6\xda\x06S\xe6\xb6ZY\x14\xe5\xb5\x9d\xd4\x13\xcds\xae[M\x16\x86\x19\xf2\x00\x01\x06\xc0\x03\x8d\xf8\xab\x04\x12\x8d@H\xf00\x12\x0c\xf9\x89\x9f~\xe3\xe0\xd2\x13iw-\xb7j\x85 \xe79\xae|\x1e\xebuyx\x1a\r\xb3,>\xb2\x06\x15\x86\xe1\xc8\xf6?\x15\xa4%\xb4M\x1a\xb3&{s\xed\xf1W}7\xa5\x0e\xb1m\x1c\xcd\x85\x7fQ$~S\xa5\xb1\x9f\xbfz\xcc\x9c\xd5:;9\xe3\x8b\xd4\xcc\xc0\x81\x9e\xc3\x8f\x8a\xe8\xc6\x99\\\x83\xfa\xf5\xa9\x9b\xb6B\xc2%\xfe\x13\x93\xff\x00\x15\xe40( \x91\xc5[C\xd3\xc7\x99\xa1\x08:p\t;\x81\x8ao\x19\xa8\xa7\x82S\x80\xab\x8c\xaeA\x1c\xf1L\xcd\x91,\xae\xc5\x8a\xc6w\x11\xf5\xe2\xac>QBr\xac\x00\'\x91\xcf\xa4\x9e\x9cS\x94\xb6\x1c\xe5p3\xc5"n\x9d$\xecW,=\xc1\xe0\x1e\xd4i\x1e\xd5_\x06H7\x05<\x11\xea\xcf#\x1e\xdc\xd5oX\xd4\xec\xecT5\xc2+g$(\xc6qWK\xf1\x15\x9c[\xa4%\x90\x0c\xe0\x0eG\xd2\xb0\xfdvq\x7f\xa8\x88Q\x8b\x17q\xc1\xe89\xaa\x0e\xa1+\xf4\xcf.\xdf\xcc\xd5#\x12B\x13\x90\x8a;\xe3\xe7\xb53(<\nQf3\x99.\xd2"\x8a\xdc&8\'>\xff\x00A[7\x85,\xa2\xfd\x98\xb7i\x1a\xbc\xd3e\x1d\x8f\xb2\x1e\x9f\xadg:n\x89w\xa8\xbc6\xd6\xc8\x00Q\xb9\xcb~\x15Q\xc1l\xff\x00a[\x97\x87\xac\xe0\xd3\xb4\xe8-#\xc9X\xf7e\x8fV9\xe4\x9f\xa9\xab\xfe\x85m%\xc2\xebrU<\xbc\x07#\xf9\xb6\xce?Z]\xbcXbH\xa6\x97\x16\x81\xa2\xcb \xc1\\\xed#\xa1\xaa\x16\xaa\xbeS\x15\x07\x18\xe4\x8fj\xd5/\xf9@Tt\xe7\x15\x92\xebs\x08\r\xf4\x8c?\x01b;\xfd\x05b\xfcq\x1aC<1\xc65j`3\xef\xb5N\x1b\x03X\x9f\x8b\xb5\xcb\x89/\xbe\xedm\xa8}\xde\x18N&UNd~\xe0\xb0\xec=\x85D\xfd\x9b\xad\x8d\xbf\x8bM\xcc\xd7\x1eK\xb2\xc8-\xa1<+\xbc\x87\x1bI\xf8\xce@\xeek\xcb\xeb)$\x91\xdd\x93\xd5#\x16b}\xcf&\x90\xb3\xd3[\xccW^\x19X\x10\xc3\xb1\x1c\x8cR\xe0\xf2 \xe9\xef\x02>\x8dQ\xe9,\x00\xc9>\xe7m\xfe\xf5\x03K\t51$\xfbW\xd3\xa9\x03\xc8@n8\xe4\xe3\x92~\x86\x94[Q\xb4`\x1c\x80A\xdd\xces\\\xe8\x17\xff\x00\xb5t\xe8e8\xf3\x94\x05\x99O\x1e\xb0:\xfd\rL\xf9G,y\x1c~\xb5[ki\xac+\x02[\x9d\xcf\xfev\xc5L\'\xf7\xaaU\xfe\x9e\xe12\xea\xa0\x03\x95A\xc8\xaa\x8d\xec\x05dB\x0f\'#\x1fQZ\xb5\xe5\x99\x9a \xe8\xf8\xe7\x04pqT\xbb\xbb\x12\x19\xf22\xd9\xeb\xdc\xfc\xfeU\x0e\xff\x00\xa7\xcba22\xc6\xe67\\\xab\x1d\xc1\xcf\xd2\x93\xb3}sP\x96\x07l\x83q\xe3\xa5j^\x12\xbc\x12\xc1sb\xe4\x15e,\x99\xec{\x8a\xcc\x92\x17\x89\x81\x00\xfb|f\xac\xda\\\xb3D\xeb*\x10\xac\xb2n\x078\xa9\xfd\x16\xfc\xc72!R\xca\x03\x06\\~da\x82\xa7\xechd*CT\xc5\xc3\xb47jH\x19\x05\x87?\xa5W5U\x95\xcc\xa5A\xdd\xdc\x81\xedV\xfd@\xc3p\xd0](\x01\x1d\x81q\xd7\x07\xb8\xa5\xef\xec\xad\xd1"0\xaf\xa1\xd7\x93\xedT\x91\xf4\xc9\x95/\x91nc\xf2\xec\xe6\xc8B\xdb\xba\xb6\xca\xe0{{\xfbP\xeb\xaf<\xef\xde\xbeL\xfbL\x90Xi\xd6\xfa\x8c\x91\xef{;\x94\x0c\xa3\xf1\x18\xe48?\xa1\xc1\x15\x9c\xe9\xde,\xd0b\xbd\x99\xe2\x90[\xad\xd4@\xcd\xbc\x15\xfd\xea\xf4\xcfl\xe0\xe35\xf5?\x8a|5i\xab\xc2\xe95\xacr\x86FF\x88\xff\x00\x10=\xfbr+\xe2\xbf\x19}\x9cj\x1aE\xe3\xb5\x92\xceav9\x8d\xb2Y~\x84\xf5\x15\xbe\xf0\xac\xdd+\xa8Z\x0b+\x9b\x86\x8aQ\xabI\xce\x14\xa9\xc1\xc7\xd8\xefLG\n\x82Q\xc9\x1e\xc7\xb6+\xe8\x0f\x08\xea\x16\xba\xfd\x95\xd6\x91.\xa3\x19x\x1d\xae,e\x88\x83\xb6\'8*\xc3\'8n}\xf9\xaf\x1a\xe6\xefD\xd4\xb0\xc3l\xb6\xf2l\x95s\xc3\x0e\xe3\xe8Ee\x1fd\x9e\x01\xf1P\xf1&\x9f\xa8Fd\xb7\xb7\x8bw\xdedu\xfd\xdb\xc6\xdcyj{\xb1\xfe\x95o\xf1V\xb3$\xfe#\xd5f\nZ\xdc\xcc\xa18\xe4\xa4@&s\xf3\x8c\xd2/:}\xbau\x8b\xabKk\xb8\xeeb0\t\x1c.=\x0eN\n\x9cw<\xd2\x96\xdf\x12\x10\xad\x91\x8d\x8d^\xae|gcr\x97\x11\xbe\x85\xbc\x1c\x85\xdd.\x06\x07\xf3q\xc7\x157\xe1\x0f\x0e\\I<:\xf6\xa1g\x1d\xa7\x97\x1b\r>\xcd\x10 \x8d_\xac\x84{\x91\xd3<\x9e\xb5\x97\xe8\x0f\x06\xa9\xe2\r\x16\xc5\xcec\xbb\xbd\x85%\x1d\xca3\x0c\xf4\xf7\x1d\xebv\xf1\xbf\x8bm4W\xb8\x82\'Dd\xfcl\xdc,~\xc3\xe4\xfc\n\xa3\xeaP\xcbf\x90\xd9\xd8\xc3\x89.\xb2\x1bv$\'\x04\x8c\xf1\x9c\xe2\xbaQb\xd4\xf2m\xa4\x8c\x0cri\xae\xb3|\x90F\xca[-\xd8S\xcb{c\xa7E\x14d\x91+\x00\xf3\x10\x7f\x88\x8c\xe3\xe8:W\xcf7^7\x9a{\x90\xdb\x9b\x06@\x109\xc6Nx\xc2\x8a\xfa+_\x94Cs\'c\xbb\x04U]\xff\x00K\xb8\xe9\xe9e\x14\x83\x1ev\xb2~J\xe3\xfc\xd3p\x13!\x92B\xa4c\x00}\xeaj[9\xee\xf4m\xd1J\xe9#\xab\xede$\x10A\xe3\x91U}\x1fW\x97s\xda\xdcJ\xec\xc3\x87W9\xcfn\xf5\xab\xf8}a\xbe\xf0\xbe\x95\'\xa7&6RG\xba\xb9\x1c\xd6?\xe3\xdb#\xa1N5h\xfd1+\x838\xf8\xc7==\xf1P\xd2\xd9\xa2\xb9\xfc\x1c\x84\x7f\x1dU\xe1e\xff\x00q\x00\xe9\xa5\xdd\xc4\xe1c\x9a<\x926aR:\x9f\xd9\xf7\x83\xb5\xc8\xe4{\xaf\x0fY\x97q\x93,\x08 \x97\'\xb8h\xf1\xcf\xd75\xc7\x85<\x1fk\xe1k\x1b\xad?J\xbb\x94\xc7%\xc3L\xb1\xdd0\xc8,\x00\xda\x1d@\x18\xe3\xb8\xa8\x8d\x13\xed\'\xc3sB\x82MZ\xde5\xda\x08\x0e\xfbH\xfa\x83V\xd85\xfd\x03S`l\xf5\xab\x19X\xf4T\x9d7\x1f\xcb9\xa5=\xcf\x88\xac\xd5\xad\xee\r\xd3@\x18\x1d2\x06+\xb7\xc9\xe2\x94%\x12\xc7\xa4\xb3\x01\xddI\xc6\xf5;cct\xd2\x08\x84#\xce#/\x928\xf7l\x8c\xe4}*\xedi\xa7%\xa48\x03\xd6\xdc\xbb\xe3\x96?\xf0;\n\xa5\xc1y,-\x1b\xef)$|\xc5"\x9e\x87\xdb\xe4\x1a\xbe\xdbj6\xfa\x95\xa3J\x14\t\x13\x0b"{\x13\xed\xf0kA\xd0.l.|\xdc\xfanQ\tDc\xb6\x9co\xa4\xfb\xfb\xfcR\xa3U\\\xe3zgy}kc\x0c\x92\xcf*\xa2\xa7\xe2,qY~\xa3{.\xad#\xca\xae\x04\';\x14{|\xe2\xb2\xbf\xb4?\xb4+MOW\x9a\xca\x1b\xa0-l\xa5(\xa1N\x04\x8e\xa7\xd4\xff\x00#\xb0\xa8-\x0f\xc6)\x0c\x88>\xfa\xa2"=JXeO\xc6}\xe9\xeb\xdb\x1b\xeb\x90\'h\xb2\x17tB\xa4\x0c\x1e\xff\x00&\xa4\x18\xc9^\xe2\xb4\xab\xd1*\r\x8b\x82>z\xfc\x8c\xd4\xa6\x99v\xadp<\xa8\xc0b2P\x1c\xed\xf9$\xf4\xf8\x15[\x7f\x10\xe97h?\x7f\x18*7aNF\x07\xb7z\xeb\xc3\xd7k,\x93\xc8\xac19\xf3\x07\xff\x00q\xe0~C\x15Mu\x0b42\x1f)\x93\x18\xceF74\xd1\x8d\x90o\xef[\x0c.\xb3*\x11\xd0.\xe6\xc8\xc1\xcfa\xfehV!\xc9\xe9\x9e\x95\x01gq$o\xb4)1\xf0O<\xf3V\x88\xd3y\x8d\x82\xf5\x04\xe4\xf4\x15\xcb}D\x15a\xea\xd8\xe7\xdf\xb6k\xa1\x87cR\x10\xde\\\xa5\xac\x88\xacwmb\x8b\x8d\xde\xae\xd8\xcfJ\xac]^"\xa4n\xe5# \x00\xe8\x18\x11\x9c\x7f\x8a\xb2\xa4+\x9e]\x99q\x92\x14c\xbf@k5\xd5o\xd1\xb5\xbdn\x1c\x82\x90\xde\xc9\x1a\x85\xc0\'\xcb8\xc9#\xe6\xa6\xf9\xb3-\x84\x92;\xc9!\x8aU\x8dApB\x8220>qN\x9c\x90\xb8\x02\xac\x11]\r\xd8$\x90O\x07\xfe)\xb7\x89\xd6\x1b\x8f\x00x\xd5\xfb&\x912\x91\x9ev\xb0!\x88\xeb\xce:TlB\x19\x9d\x03\x96\xda1\x9fW\x03\x8e\x9f\x9fz\xb3\xad\xac7\xfaN\xa9\xa5\xbb\x0f.\xfa\xc6[un\xc1\x99H\\\xe7\xb78\xaet\xcf\x10\x18o\xadRL\x04bG\xa8\xed\x92=;\xfdk\xab\x16\x18?\xfbH?\xa5|-\xa5i\x1e\x19\xf1\x03=\xbb\xee\xb1\xb4\x827\x96+\xd7E\x12\xcd\xe5(%\x1c\x820\x1b\xf0\xa8\xeb\x93\x93T\xdf\x1a\xf8WC\xb6ky\xb4+\x9f\xbc[\xa5\xb25\xcb\xa8bcr\x7f\x0bn\x0b\xcf8\xcfBi\xe5\xfe\x8et\xdf\xbf\xd8_[\xf9\x17V\xb3\x10\xbek2\x90T\x90\xca\xcb\xdd\x8f\xcf\xe5\x9a\x9c\xb0\xd05\xcdx[\xa6\x8d\xa3\\\xb8X\xcb<\xa4\x00\x19\xba\x10\x19\xb6\x8d\xbd\xc0\xcd{\xdb\xf5H\x12\xd7YXU\x8f\x0e\\\xe7\x9d\x87qZ\x19d\x8d\x87\xf1&\xc4z@\np\x07\xd7<\xd6`t1\x1d\x8d\xbd\xfb\xa8\xc7\xde\x19\x1a6]\xa7\xca\x1d\xddq\x80\xcd\x9e0k\xeb\x1f\xb0\x1f\x0c\x08\xfc\xdb{yVF\xb9g\x9aI2\x1bj\xe0m\x19\xcf,\x07_\x9a\xd8\xfe\xcb<=v\x9e\x00\xb4\xb3\xd4m\x84\x17P^\xdc\x07\x8d\x95[\x01\x982\x93\x8c\x83\xd7\xadXm\xf4\xbb-6\xf1\x8a\xe9\xf6\xf0Hw~\xfa\xdd\x04O\x920[)\x80O\xd4V\x0b\xc5\x1e"&\x14[\x8bR\xb6\xc6p\x1d\x91\xb2\x08S\x82\x0e\xd9\x19\xf7\xde\xb3w?\xc6v\x89\x1b*\xaf\x90s\xf9\x80;qW\x88t\x98\xb4\xd8\xd2\x18m\x82D\t$*\xf5c\xc9f#\xa9=\xc9\xae\xeeeH\xed%\xe9\xc2\x9e>k\x16\x93\xed3]\xf0\x1e\xb5\xfb/\xc4\xaf\xfbN\xc0\xa2<\x17\xc8\x02\xcf\xe5\xc8HBs\xc3\x1c\xa9\x0c\x0f<u\xa9\xff\x00\xb4\x8f\x15\xd9G\xe0I\xb5\xed=\x1e\xf6)\xfc\xb4\x8f\xc9\x05\\\xf9\xa7n\xd6\xfe_\x9c\xd4Y\x9a)\x16\xdeK/O\xe24\xf9J\xd8\xc1V\xdb*\xdd\xc0\xa6\x14\x12\n\x85 \xf1\xa7\xda\xa9>,\xf1\x82%\xfcV\xdaT\xca\xc8\xc5\x92Y\xc8\xf4\xee#8_\xd3\x19\xac\xcbP\xbe\x92)\x0b\xdd\xdd\xb7\xa8n\xe0\xfa\x8f\xd3\x15\x9b\xcb\xe3\x0f\x13\xeb\xf7\x96\xfa}\x8f\x86\\\xcb4\xa1`\x84?V\xed\xfa{\xf6\xadoB\xfb\x1e\xd7/\xd4O\xe2/\x11Cl_\x19\xb5\xb1\x8f\xcc w\r,\x84\x0c\xfd\x01\xae_/N\xe9\x11\x86\xbc\xb9\x86\xdc\xb8\xc8]Z\xd9\xb7\xec\x17\'\x14\xf2\xdb\x95\xc0m\x8f\xb7z\xa7E\xe2\xe5\xb5\x91\x96\xda0\x1bw\xa5\xdb\x93\x8a\xbfx{\xc4mx\xc7r\x05\x90\x90I\x1f\xc4}\xc9\xa8}c\xecc\xc4:~\xa5l40\xfa\xad\x85\xc6CH\x02,\xb0\x11\xda@H\xc8=\x98q\xef[G\x82\xfe\xcb\xe5\xd2\x92\t\xafR$\x7f\xe4\xfco\x9f\x92\t\x15O\xd4\xdb\xa6\\\xd9\xa4\xb6`\\\x19W*S\xe3m\xf3\xc7\xde\xa3M\x03\x16UE \xfb\xd5\xc7\xc2\x9eb\x013\x83\x89#*\xeb\xd8\xab\x0eG\xe7]\xdc*\xe8\n\x90+\xf9\xb3D\xb8i\x8f\xe3 \x9e\x99\xec1\xd8qRZ\x9c\x92\xe9\xb1\xa5\xa6\x99\x00{\xa9HQ$\x9f\xe9C\x9e\xac\x7f\x98\x8e\xc3\xa6k!\xd4\xfc{\xa0j\x9a\x9c\xd0\xda\xeb\xb6\xd2\x98\xe51I\xba@\x8c\xc5=$\xfa\xb1\x9c\xe3\xa8\xe2\xb2\x91\xad\xea[I\x04Ld\x969\x8b1\x8f,!V\x18 \x91\xc1l\x0f\xd2\xa6\x08\xc2\xa8\xc2\x96*9\xc7sW\xaf\x12\xf8z\xc7\xc7~\x1d\xfb\x94\xe7\xc9\x9c\x0f2\xce\xe9G\xaa\xdep8q\xf0z0\xee+\xe3K?\x11x\xa7\xc2\x9a\x8d\xcd\x9e\xb7`\xcf=\xad\xcb\xc2\xd9\\\x02P\xe3\xe8W\xe9_m\xe8R\x19"PN\xe5e\xf4\xe3\xa7?J\x8d\xf1\\\x9e(\x82\xfa\x03\xa5C\x0c\xf0Io\x99\xa3\xb8\x89$Tpp6dg\xd49 \xd5\xff\x00J\xf1\x02Ib\xf0\xdd\xc1\x1c\xe62\x06]\xb4\xb0\xc788\xdb\xe9Qn\xa1]\x1a\x99\t\xe3\x81\xbd|\x9b\xe2O\xb5\ro\xc4\x1ft\xd3\x83\xc5\xe5\xc8\xc1E\xbcQ\x16$\xe4aH\x1f5\xb9x\x0b\xc1\xd71\x1bk\xddQ\x0c[vyV\xfbH\xdcq\xd5\xc1\xfa\xf0*\xc1\xa6\xa7\x8c\xa0\xbc\xf3\xe7\xd0\xf4Yab0\x86\xd7\xc9e>\xe8\xe8G\'\xe9V\xddK\xc4\xb2\xd9H\xd6zf\x83s\xa9jk\x18i\xa3\xb5_2\x1bbx\xda\xd2\x1cd\xf3\xc8\x14\xfd\xd7P\x93\xa8$v\xf61G\x16\xd9\x98\xab\x17\x90\x83\xd8l\xbc\xe3\x1c\xd2m\xedD\xe5t\xab\xe1G\xf3\x02?zw\xe2\r^\r"h\xa2\x8e8\xdaB\x800l\x1c\x0f\xce\xab\x8by\xe1\x0f\x1e\xc1w\xe1\xedB\xda\x19\x1aL7\x96W\t#Fw\x82\xa3\xa1+\x8e\x95N\xd4|+\xf6\x8b\xaa \x9e[[{i\xaf7\x15y\xe5\x1b\xd7=\x01U\xe8q\xd0f\xa3\xbc\'\xe0\roG\xd7\xec\xb5+\xedDI%\x9d\xc0\x90E\x1a\xe0\x1cu\xceq\xfaUl\x90~\x06\xe4\xdd^\xdd5\xbc\x89 xa \x908\xc0\x03\x18\x1bw\x18=\xea\xe6;\'x\xce\x02\xe3\x1f\x19\xfd\xaa\x06\xce\xcfF\xf0\xaf\x8dl\xac\xe2\xd1l\xad\xde\xdd\xb7\xa3\xa4*\x99^@ \xe3\xbd}\r\xe1\x7f\xb9\xc7s\xbe\xd9\xc1\x86Ff\x03\xf8\x91\x9b\x9d\xad\xdf\x8e\x80\xd7\x1e)\xf0\xb6\x8f\xa9\xdc[]\xc8\x17\x81\xe9\x99\x7f\x12\x06\xe7\xf4\xf7\xf6\xa4\xec\xbc84\xdd\xb3Gt\xce\x15r\x18\x1e\x18w\xe2\x9c\x99\xee\xef&K\x92VYz{#L5\x823\x11,\x18\x1d\xce\x1b5E\xe5M\x04\xe4\x10YO\x04\xf3\x83Zt\xf1\x02\xfe\xa1\xc6\xde?:\xab\xdfi(wH\x9c\x9c\xe7\x02\xad\xe4\xf9\x90Z\xcb\x8c\x02\x83#\x1d\xfaW2[\xef\x04\xe7?\xe0V\xef\xab\xf4\xebn\xad\x14\xa8\xd1\xac\x80\xa8\x926\xef\x87\\\x86\x158)SY\x94\x9ag\x9e\x1e6\xc8$\x11\xd7\xb5R\xef\xfc\x17a#6\xd4#\xf9\x8cg\x18\xcf\xbdn\x0bb\x8a\x8c\xe0`\x93\xfd*\x16\xf6\xc0\r\xcd\x1a\xa2\xe0\xe7\xe4\x8a\xf3\xce\xa3\xe1\xcb\xde\x95\xd3\xe3\xb8\xb6c\xe6\x1c\xbb\x058\xca\xf6\xfa\xd5\xff\x00MX\x88+ \x1b\x9a\xadxSL6\xc6W\x9aA)\x82=\xb1;\x0fP/\xc6>x\xa9GE\x17\x04H\x98\xc3\xe7\xfe\xf4\xefJ\x08\x97[\x1c\x85I;\x9e\x99\x153\xaa\xe9\xa3\n\xcaq\x8crzU\x1a\xd9]u.\x85\xf8\xc8\x14f\xcev\xf3\x00#%\xc9\xceH\xed\xb6*5\xfc+\x05\xd3(P\x15\x80"\xa1\x1e\xd9\x19\x8c\x80c\x9eq\xd2\xbcH\x8cR\x86\x8f\xb7qK\x8f:0\x14\xa9a\xd3>\xf4\xc6\xe7Q\x83N\xff\x00\xf5\x0f\x86?\xfd1\xcb\xfec\xb5W\xb4FWB\x88\xf1\xb6\xadN\xfcio|\x9fz\x87\xe9]\xce1S\xe4I$h\xc0\x16pI\xcfL\n\xce|y\xa6\\\\i\xf0jP\x00d\xd3\xa6Y\x9d1\xcb \xe1\xb1\xf4\x06\xb4?\x0fjk\xaa}\xe5V \x81Pm\xc9\xc99\xeb\x9a\xebQ\xb2I\xe2\xb8\x81\xd4\x15u*\xea:\x10k\xd1\xe2\xb6F\xe9\xf6\xb7\xdel\x97\x11M\x1b\xa3\xaa\x92\xb9e\x1aN\xe7\xbe\xdb\xd4)\x90H\xac8\xac\xc6\xccI)\x8a\xe1"\xca\xb2\x86\x0e\xbc\x82\r^Q\xe5\xba\xb2*P2\xa8\xdd\x93\xd7#\xda\xa9\xfe\x1c\x82\xe7\xc2\xfa\x83i\xd7D\xc9e#\xb1\xb3\x90\xf3\xe8\xeb\xb4\xfc\x8e\x95\xa4\xdb\xbf\x9e\xb3\x88\xd5v\x15\xc0\x1f\xd0\xd3\xbe\x16\xe8\x9a\xa6\x96O\xc4\xba\x06\xf4\xb4:w \xaeT\xfd\rD\x1c\x15<\xee\rB@\x80Z\xbc\x8d\x1e\xdd\x80\xe4UGR\xb6i,\xa7\x9d\x97h\x9d\xbd+\xec\x07\x7f\xce\xadw\xd3\xa4\x01\xed`\x93s\x7f\x17|\x03\xfej>\xed\x08\xd3\xd1\\tR\x07\xb5\x1do\xaa\xc54\xd2t\xd4\x9bQ\xb3\xb3v\x90\xae\n\x89I\n2G\xb0\'\xef]\x10\x11\x18b98\xaf\x9f\xb5?2\xde\xe0\x85b\x07\xc5)\xa4\xea\xc2)Y\x99\x01\x04lb8$S\xdd~\xdfl\x8cq\xb7 \xe0\xd5R\xcbj1]\xa4\xe0\xe3&\xb3\xd0\xacw6~\xa1\x93\xa4T6S\x9d\xbb\x1a\xfa+C\x96\x1b\xd8\xedJ\xc8\x08fQ\xba\xad\x1a\x84R\x1b9\xc9C\xe7"\xeco\xfd\xa7\x80\xd5\x91x6\xf5\x87\x9dlx\xd9\xeaJ\xd6\xed/E\xe2l\x91\xff\x00x\xa3\x19\xfea\xeci~\x1c\xba\xb4\xb5\xb8\xbd\xe9\x97\x19\r9\xfe\x13\xed\x86\x04ps\xc3\x0eG\xdcU\x8a\xe6X\x15\xbb\x81\x82>j\x97\x016L\xa8\x92\x11\x81\x8fzmq}>\xe7V\x9c\xe3\xebT\xff\x00\x15\xddj\x9e\x1e\xd5d\x8d\xd4\xbd\xb4\xa7|2\x0f\xe5=A\xf9\x14\xca-a\xf52\xa9\x0cL7pX\x9a\xae\xea63\xf9\x981\x84\x8d\t\x07\xd5\x91\xb6\xdb\xd2cg\\.\x0f\xc5M\\\xdf*9&\xe3\xafNj\xd7\xe1\xdd\x08]\xa0\xbf\xbb\xc1`s\x14g\x81\x8f|T\x16\x97\xe1\xb8|\xe4\x96\xe3\xd6z\x85=\x01\xad:\xd27H\xf9\xc2\x85\x1f\xd2\xb3\xd7\xb7Q\xc6\xbeT\x00\xbe\xc7[\x0fN\xd8\xedV\xd6V\xc4\xb6\xb9p7\xd9y\xfdjkH\xd5\xce\x16\xc7\xcb\x19\x8f\x85#\xdb\xe6\xadJ\xdc\x0c\xd6~\xf6\xc9g*]\xdb\xcc\x04\xad\xd4u\x07\xebS\xb6z\xfa\xca\xeb\x15\xcd\xb9\x89\xcf\x01\xd4\xe5Mz\xef\x81\xfc[\x05\x9c+\xd2\xba\xcd\xff\x00\x97p\x9eZ\xdb\x97\xc6\x83\x19Q\xa4j]\xb3\xf5\xa9L\x84\x92\xca\xb9\x04\x9c\xd5\xa0`\xd7,\x8a{R \x9cdt\xa0\xbbW\xaf\x82\x08\xa6\xeb\x93\x10\xf6\xaf6`\xd7a\xeb\xbc\xe6\x8a+\x95\x02\xbb\xda)\x16\xc8\xe9I4\xac\xb4g\x14S\xbe\x95\xe8jf\xb7\x19<\xd2\x82@{\xd7r(\xc5<\r\x9a\xf34\xd7y\x15\xd8\x96\x8c\xd71J\x93^qIn\xcfz2k\xb4R\xb4W!\xa8\xa2\xb9Y\xb8\x84\x9e\xd4\xa2\xc0Gj~\xaa\xb4\xa6\xd1Q\x82\nx\xb55\x8e\x1cS\x8f.\xba\x1bW\xa9\xae^uQK\x00\nI&\xb9 \n\xf4\x01M\x1a\xe5}\xc5s\xf7\x8fj\xe6E\x1b\xd3\xc6 \n\xe79\xa6f|\xf55\xe0\x98\x9e\xf5\xcc\x8a7\xa7dW@qM\x16S\x9e\xb4\xed\x15\xda\xbb\xb1\xa3\xef^\xed\xce)\xc4p\xe4\xe6\xbdUU\xeb^=\xc2\xa0<\xe2\x94\x05p\x9a_\xd3\x1d4\x9e\xe0($\x9e*\x12\xf7Y\x8a\x00}c5L\xd4<W\x12\xa3\x06\x90\x0e=\xe9&D\x1d\xeb\xbaX\xf6\xa9\xddW[Keb\x1cb\xb3-G\xc4WWnc\xb7\xcb\x13\xde\xa3\xaeo.uy\xb6&\xed\xa4\xd5\xcfB\xf0\xe0P\xac\xc9\xfa\xd4G\x98\xb1\xc2\xd3\xe9\x1e\x06MU\xec\xf4\x1b\xfb\xd3\xe6N\xecs\xce*\xd3i\xe1\xd4\x84\xa9e\xce*\xfb\x15\xa4\x16\xf1\xf2\x07\x02\xa3n\x18\x96\xc2/\x14\x86\\nN\xf4\xea\x1c\xf1^\xc5m\r\xb4\x05\xc2\x0e\x05xoT\xc0"w\xdb\xb8\xe7?\x14e\x8c2)\\\x82\xa75C\x9a\xff\x00\xcbYP\xb3\x02\xb9\xc0\xac\x17\x8b\xba\x9d\xdd\x9d\xc5\xa4J\xdf\xfay\xe2`\xe9\xeeA\xce\xf5\xa6\xe86\x90N\xb2\xbb.d\x8d\xc1\r\xed\x91R\xfa\xad\xdbO=\xbcH\xd9\xc0\xda?\xe6\xa7X\xc7\xfb\x84\xda\x0b\xc66\xb1\'\xe2\xb3\x85\xd4\x1a;\x98\xe4<`g\'\x9c\xd3\x8b\xedmL\xa4\xa3\x93\xbb\x0c\xdf\x06\xa8\xec.`\xd3s$\x8f\xa9\xa5e\xc0\xf6\n21\x9f\x9a\xb5\xea\x1d=.\xa1\xf2\x19}$\x1d\xfeMlZ\x1d\x9cvq\\O\x80\x1ar\x07\xff\x00j\xff\x00\xde\x9fOs#\x1d\xab\x80\x07z\x88\xf0\xee\xa3m\xa8i6b9F\xf4\x84\t\x13#p#\x8e\x95\xee\xa5w\x1e\x9f\x0b\xcd$\x8a\xaa;\x9fs\xda\xb5\xb6\xec!\xe9\xf1<o\xa2\x1d\x19b\x0f\x1d\xce~\xf5\xe4w0<7\x12BT\x96W+\x8cnpq\xc5w;\xc5\x19\x06YB\x05<\xb6qN\xec\xaf-.\xa3-kp\xb3 ;w\x06\xce\x1b\xda\xb0\xadwR\xbe\xbe\xb9u.\xc13\xf8G\xf9\xa6\xba7\x8a\x8f\x85\xf5\xab(\xa4\x8c\x9b;\xc0\x16\xe0\xf3\xe8\xe7\x01\xc0\xf8\xef\xf1U\x16~ \x8b\xf1\xe2\x14\x84\x08\x9c\x90d\'\xd409\xfaW"\xb5\x96BB\x0c\xb6\t\xc7\xd2\xbe\x8d\xd8\xf8a\x8e\xd8\xcek\xb6<n\xc1\xe3\xb7\xcd*\x8c\xb2F\x8e\x8c\x19YA\x04r\x08=\x08\xfa\xd4.\xb7~\xb6v\xccT\xae\xe2\x08\x1f\x1f5\xb1\xbd0\xf4\xfbY\xae%|"&\xa2}\xfe\x9e\xf4\xcf<U[\xc4\xb7:\x8d\xc4e-\xade\x95\x08;Lk\x9d\xd8\xe3\xb5RtO\tk\x93\xdf\x9b\x9b\xdbqm\x19=da\x9c\x0fe\x1c\xd4:\xf8\xcb\xc5\x1a\x8d\xe5\xc6\x9b\xa3K\x0c\x10\xdb\xb92\\\xb2nl\x16\xe7\x04\xe4q\xdb\xb9\xab\x88\xbb\xd6t\xa8\xe1k\x9djk\xb7d\x04\xa3\x80Aoa\x8e\x82\xbc\xc6cd\xee\xd7\xd7b\xe5\xdaP\x8c\xe9\x95\xf4\x83\xfc\xa3\xfe\xdf\xde\x83\x17\xa8\x02\x08#\xb5iP\xb5\xa6\x99a\xf7k\\\x83\xf8\x9d\xbf\x89\x8f\xb95\xd6\x9b\xad\xc5\x0b2\\\xb1T\xc7\xa5\xc7;I\xeb\x90:\x8a\xa3\xdbj?\xb4\xd1\xda6t\x95\t\x0f\x1b\xf5R?\xb8\xa5\xd3\xcc\x7fI\xeeq\xbb\xeb\xde\xac\xa4\xeb\xf3<\xb6\xfeB\xaa\xc6\x8b\xa64\x03\xd0G\xb1\x14\xe2\x8c\n\xd4\xe6\x1et`\xa3oR2\xae\xa7 \xd6U\xe3K{\x84\xb7\xb9\x91\x10\xfa\x82\xee\xc7\xb0=jL\x1b\x8b@\xbfw\xb9\x92-\xa0ck\x10\r2\xba\xf1\x0e\xa2\x81\xa3\xb9\x8a+\xa8\xbb\xab\x8d\xad\xf90\xff\x005\x07\xafY\xc7~\x16mM\x1c\xc8\xca\xc1H\xd4\x87\x1d\x89\x1b\xfd\xf1JIB\xb2\x92\xb9\x00\xe7\xf4\xac>\xe1\xcc\xf2\xed\x0e\xa03\x05l\x9e\x00\xee\xc3\x153ggol\xab\xbeh\xf1\xc6\t R\xda\xff\x00\x87RY\r\xfe\x8b!\t\xcbKjx\x922z\x90\x07\xe2\x1f\x02\xa2\x96au\x0b\x0f\xc3"\xe1\x8a\xf5#\xf25\x9e\x93\xd7\x1a\xaa\xbe\x90\x0e$^\xea~j\xe6>\x9fiv<\xd8\x9d\xb7\xe5v\xda\xafZ\x0e\xb1\x0e\x9d\xaa\xc6\xa6Q\xe5L\x02\xc9\xcf\x00\x1e\x8d\xf9V\xc2\x14K\xb7p\x1cq\xcfNk\xe6\xd4\x8d\x95\xdal\xae\x08\x1b;\xb0\x07\xa6Em\x9e\x16\xd5\x92\xf3O\x8a#6\xe9aUG\'\xdb\xf8O\xe68\xa9\xdd"h\xa2\x99`\x90\xe5\x1f\xdf\xbbs\x8d\xe9\x8b\xee\x9cm\xe1YW$\x03\x86\xf8\xcd\\M\xaa\x80T.\x03\x8e\x83\xe6\xabz\x86\x9aR@Ur\xa7\x8e\x9f\xde\xaeq&\xf1\x1b\x0e\xc2\xb8\x9e\x17 \xf1\xc8=\xab\xd3\xaf:5\xad\xe5\x98S\x19\\n\x8c\xa38\x1c\xd5>;\xd6Y=\x93o*\xaa\x00\'\x19=\xa9\xfd\xb4M\n\x05+\x8e003V\x0b\x9b0\xcc\xc3f\xdf\x91\xfd\xe98\xe0!J\x9c\x1c\x1a\xc5\xc1\xd2c\xb4\xba\x94\xa3\x15\' 7c\xf1\x8eiD\x96P\x08\xa8yr\x0b\xa9\xe8z\x8a\x97\x86I/#\x11\x94pP\x01\xbb\x1e\x9e\x9dG\xbd6\xb8\xb6\xcb\x12\x07\x1f=\xaaWE\xbc\xb7\x82GI\xdc\xe1W#\'\x80O\xff\x00\x15\x94\xb9\xe9\x91\xbfY\x10\xdc]\xfe\x1e+\xa7*\xcd\x9c\xa9\x03\x7fQ\xf6\xab>\x9fn\xd7\r*\xace\x8a\xc7\xabnv \x7fz\x8fm&9]b2\xa1\x91\xcf\xa5y\xfe\xbc|SY\xbc \'\x9a \xd0\xc4\xc5\x86FW\x81\x8fz\xd0\xe0\x16\xf2M\xbdQK\x18\xf2O^;sO\xa4U(\x8c\xab\x8eq\xf4\xad\xafN\xf0\x1fF\x926w\x99\xce\x1f\xd2bv\x19Q\x8c\xe7$\xefK\x92\xd7I\xc1S\x9f\x9a\xcb\xef\xbc%~\xdal\xb1\xda\xdd%\xac\xee\xa1\x03\x04\xc9D\'\xd5\xb3\x1f\xc5\x8e\x9e\xc7\x9a\xc15?\xff\x00\x97K\xc9\xae7\xc5\xae\xce\xe1\x9d\x9b\x12J\xcaUI\xe0\x12s\x9ct8\x15\xf6r\xc6\x18\x03\xdf\xda\x9a\xcfl\xa7q#9\xff\x00\x1f\x15\xad\xb4\xf0\xb7H\xe9\xd1\x91e\xe6\xc2X\rn\xaf\x96|\x0eIl\xd2\x10<y\xc2\xa9\xf8"\xbe3\xb1\xfb%\xf1/\x84_O\xd4 \x87\xef\x8b\x1c\xe9$\xe2?\\\x8a\xb1\x9d\xd9\xc9 \xb7N\x80T\x0f\xdag\xd9\xef\x8b\xf5\x0f\x12\xdfjV\x0c\xd7\x967/\xe7\xc2\xbc\x86\x88H3\xb4\xa1\xeb\xf5\x15\xf6\xf7\x96\xe6DR\x98\xc2\x93\xc7c\xf3L\xff\x00fG\xb9\x99\xa3\xde\xc7-\xcfO\xa5g\xba\xb7N\xbf\xb4\xbb\x86\xeb\xa6\xbcsK\x82\x92~$m\xa4\xeepTg9\xa4\xc9j\'\xdc\xa0\x07\xe2\xbe\x0e\xf0W\xd9&\xa7e\xae\xc1\xe2/\x15L\xd0Xi\xaf\xe72\xc9\x842\xba\x1c\xa4q\x8c\xf4-\xd7\xdcU\xc3\xc4\x1e2\x82y\xe6\xdb*3\xb9f$\x1e\xe4\xd7\xd4\x1e \xf0\xd6\x9f\xab\xd9\x81}l\x92$d4i\x8e\x15\xbd\xf1\xd3&\xb2\xe9\xbe\xcd\xbc-\xa9\xf9\x8ds\xa6\x18d\x85\xb2\xab\x1ec\xdc\x18\x7f\xb7\x1c\x1e\xd5\x99\xbf\xb8\xb9\x93\xa8[\x9e\xaf\x13<\x9eY\xf2\x84!V5Q\xbe0\xc4ni\xe5\xe9\xeaSv\xd8lp*\x1f\xec\xeb\xed_\xc3\xb6\xb6\xbf\xb15\x8b\xe4\xb6*\xc4\xdb\\8>^\x1c\xe4\xab\x9cq\xcfC\xd2\xb4\xfdQ\xfc;\xac\xd9J\x92jZl\xd6\xd3F\xcaI\xb8\x88\xa3+pA\xf5t\xe6\xaa\r\xf6\x15\xe1\x9b\x99M\xd34\xcc\x1czb\x1bU#\x1e\xc39\'\xfei\x84\xbfa\xfa,os\x1d\x8c\x93G!#\xf7\xaf\x86\x0b\x8e\xa0)\xc0 \xe6\xa4u>\x85\r\xe4V\x85\xad\xae\xa0t\xc1G@\x84\x92}X\xc8\xcf\x1e\xf5\xcf\xc3\xc5\x82\xa1\xf21\x82\x08\xacW\xc5\x7fa\xda\xf4\x0f\xf7\xaf\x0e\\\xc1\x7fc.]\x11fB\xea\xa7\xf9Np\xe3\xfa\xd6s\x0f\xd9\xa7\x89\xcc\xa4\\YJH\xf6+\xfe\r}\xcf\xe1\xcf\x02\xdb\xf8N\xc6hmo/&\xdd\xb5\x9b\xcd\x97r\xab\x01\x82cN\x8b\x9e\xb4^x~\'\xb9i6\x93\x93\x9d\xcd\xd4\xfc\x9c{\xd4{\xcf\x13\xf5\x8e\x86\x1e\t\xf4:\xa9P\x92\xbaa\xd8\x1c\xeeq\x81\x91\x8a\x815\xb3(Q\x19\xcey\xaf\x99\xfc#\xe0?\x14i\xb7(\xe9\xac]X\xa0`\xcf\x0cr\x12\x1b\x1f\xce\x0eT\xd7\xd2z]\x85\xec\xb0\xcf\x03\xdd\x18\xda\xe6\xd6H\x0c\xaa0\xde\xb4 >:\x02\x0f5\'m\xa6\x08GN*z\xc7Oy\xa1\xba\xc2\x8fTf5\xcfA\xbf\x83\xfd+/k\xd4\xaf\xbcO\xd7\xfatJ#W2\xa9.\xab\x8c \xdd\x89<\xf1JKB\x80\xbb\x12N6\x15\xf9\x81&\x81\xe25Y\xae\x12\xe5\x8d\xba\xcf$++\x8fK\xbcg\x04\x03\xef\xde\x86\xb2\xd6\xe0H\xdaD\x0f\xe69P\x06F1\xc19on\xf5\xfa+\xff\x00\xe1\xc5\x95\x95\xa3\xd9\xda\xda$p\xc9 c\x14|\x82F=D0#8\x15\x03\xa9}\x96\xfe\xd4\x92K{\xe5{\xc8M\xcbM\x11s\xb1\xa2\xdc\xbbJ\xab\x8cu\xf6\xe9^\xf3%\xbd\xf8\xe6\x18\x9b\x18\xd9W\xb7\xd6\xa4\x89#8\x05\x08\xf9\xaf\x84<\xdd[M\x92<o\x8d\x9f\x04\x18\xc9\xe6\xaf\xfe\x0f\xfbF\xb9\xb1\xd4\xe2\x83T\xb7i\xa2oC\xca\x07\xef#\x07\xb9\x03\xf1|\xf7\xaf\xa6o\xfe\xc2\xf4\xd9\xed\x8a\xdb\xc0\xf0\xc8\xab\x84e\xb8\xdc\xc0\xfb\x9d\xc3\x9f\xa5?\xd1~\xc8,\xedvo\xd3\x12b\x99Pg\t\xb4\x826\xb7\x18$\xe7\xdc\xd55\xf7O\x92\xedM\xbc\xfd$\xc8\xce\xa7\xd6\x99\x1a~A\x14\xa2\x902\x92s\xf44\x8e\x93p\xb7\x8f\x14\xd0H\xaf\x04\xaa\x1e9\x14\xe4\x15\xedW{y=Dn\xc8\'h\xfa\x8as\xa7}\x9eX\xe9\xb6\xef\x1d\xb4b\xd7s\x16h\xa3\xe5\x15\x88\xfe\x01\xfc>\xf8\x15\xcd\xa5\x84\xd0\xdc:\xcc\xb8keg \xf2\t\x1d?.\xf5\xe6\xdd[\xc3\xdd[\xa3\xde[\x06\xf5C;zd\xdflr\x1b\xd8\xe3z\x81\xe4\xe9\'\x1c\x13P\xfe9\xf1(\xf0w\x87//\xd6X>\xfa\xd0\xe2\xce\xdd\xdc\x07\x91\xc9\x03*\xbdN\xde\xbe\xdcW\xc7\r\xe2\xbdN\xe1\x9e{\xa5\xbbI\x1d\x89ve\xc3\x16<\xe7\xd3\xceM}\xe6>\xce|7:O5\xc5\xab\xdd\xdc\xdca\xe5\xba\xb9s,\xc5\xb1\x8c\x86o\xc29\xe0.\x00\xae\xed\xfc\x05\xa2[Z\x9b1h\x1a\x1e\x18\x86\x03,W\xb9#\x92~z\xd7\xa5Z\xf8A\xe1\x87\x00C&\xa1\xa8\xb1c\x9c\xe3\x8e85%J*\x80U\x89\xf7\xaf\x8b\xf4\x7f\x19\xeaV\xf1D\xd2\xcb#\x03\x8d\xc4\x83\xc1\xfa\x9a\xd9|!\xe3\x085K\x98\xacK\xe6i\x9fj\xe0pI\x19<\x0e\x98\xadRO\xb3\xed&[\xa9U\xadBA\x91\xe5\xaa\x7f\t#\xd4Fs\xc94X\xfd\x95h\xd6\x17\xb6z\x94\x13\xcc\x97V\xef\xbd\t\nFy\xeb\xc6pA\xc1\x15\x99\xea\xbe\r\xba\xba\x17\x00XF\x84j\xd2\xe9 \xc6G\x1b\x106\xa9\x08\xb0\x9d\xd5\x98\x1fb+1\xf1w\x84\x13\xc4Z\xe4\xa3Z\xd1\xa2\x96\x0f)\x1bO\xd4"#\xccC\x1f\x1e\\\x99\x1c\x9e\xf8l\xa9\xe9\xc5S\xaf|-{\xa6\xdb\xc8\x90\xf8\x95d\xc2\xeeVp\xd1\xc9\x91\xd3\x91\x91\x8f\x8e+\xebmCMf\xb3\x91\xbe\xea.\x1f\xd3\xb6$!I\xe7\x1c\x16\xe3=\xea\xaf?\x83\xad\x99\xa7\x9a5\x8af`U\x84\x8a\tS\xfe\x08\xa8\x93\xd8\xf8\x97\xa4\xbc\x02x?\x15\x04q\xa9-\xa5\x9cm\x9e\xd9\xcfn\x05A\x9e\xdb\xcd#K\x05\xdf\x82x\xac\x8f\xecn\xeam:}_H\xba\xd4c\xb9\xfb\xd3}\xe2\xdffO(\x08|\x93\xc8\xdc9\xc6:\x8a\xb2x\xa7Z\xb7\xd2\xee]\xa5q\x95#j\xf4,\x0f\xb0\xfe\xf4\xf0i\xf6^\x18\x86\xe2\xea8B\xdeN|\x98\x14v\\\xe5\xdb\x8f\x81\x8aa\x88\xa7\t5\xd5\xaeCg\xcb.\x99^\x0f8\'\xa9\xff\x005\x9f\xea}U\xfa\xca[\x85\xb0\xf2\xa0\xdd\xd9#f\x03oN=E\x88\xc9\xfe\xb5\xa7\xe8\xfe\x16\xb8\xbb\x81\xa6{\x8c\rEU\x8a\x83\xa8\xf3\xb61\xc5T|c\xe1(\xfc}a\xa1\xea\xd6Q\x99\xee4\xc3,R\xdb\xe3\x0c\xd0\xc8C\xa9\xc7S\xb4\x83\x90=\xea\xd9\xe1{\x01\x16\x8bq\xa6_X3\xc0\xeec\x929\x10\xec!\xc0\x1b\x08\xf9\xedSm\xa9$Vec\x84\x013n.N\x18\x90z\x81R"\xf0\x1b6\xdcVG\x90d>p\x14\xafaK\xb6\xb5\xbd\xebp[\xdaG1\x85l\xe1WV\xdc\x15\xcet\xa8\xdb\xf3q\xb8\xda\xa7\x1f\x07\xbcs\x89\xcd\xcb\x1c\xb1@\xa5v\xf9<\xd5\x07\xc2?fzw\x86\xf5\xfdn\xf0,\x92\xc5\xf7T\x8e\xc0\xbf\xe2\n\xecL\x8b\x93\x9c0\xc0\x04\xf7\x15\'{\xe1W\x9et\x0f|W}\xc0M\xb18m\xa8OS\x92:T\xac\xf7w\x91\xf97\x06\xe8\xeea\x8c1$\x10z\x0e:d\xd3y\xfcB\x01\xf3V\x05W\\)nO>\xf5+\xab\xce\xd7\x12\xdaIu\x1f\x934J\x88\xec\xc3y\x00\x1f\x98\x05\r\xb9\xee3R\xa3\xf0H\x97^\xb9\xdeP\xc7m;i>\xc7<\xd4\x85\xa7\x80\xcc\x1a\x9cK\xa7\xf8\xa6\xe68\x95\x03\xf5%\xf21\x9c\x7f\t\x15y\xd5\xe1x\xace_\xbcH\x85be3"\xe1\x830\xc6\xe1\x81\x80\x7f\xcddO\xae\xde\xdc\\/\x953\xfa[+\x8cds\xd0|U\xc4\xea\x1a\xf1xV\xe1\xdah$Bd\xc0\x1e\x91\x8eK}:\xd3\xf0_\xf4\xdb\x9b[\xe8W\xa6\xcd\x04\xb2H\x19e\x87S"\xe7\xf2\xe4\x16\xc8\xc1\xfdEHo\x07%\x94\x901\x922\xb8\xc9\x8d\xdbs\x8d\xf06\xa7\xb6\x1a}\x83\xe8\xe7J\x9e\xe6\xeaV[V\x89%i\xc2\xdc2\x11\xb4\x8f0`\x96\x19\xeay\xc5V!\xfb3\xfb7\x8a\xd3\xc8\x83\xc2\xd0\xdc\xc9\x12\xb0\x13\x06b\xf9^}l\x08\xfdjkK1k7\xf7>t\xaa\x1d\xa2\xc2\x90\xa0\x12\x07\x1c~_\x9d^,\xec\xact\xe5\xf2`\x80&\xe2\x19\x8erN:\x12M\\t\x18\xaeo\xadC[\xb40\xc0\xdedrLQ<\xc9;\x06\xd2\x01\xc3\xfc\x93\xb0\xe2\x98\xbb\xe9\xd6\x16R\x11\xe57\x9at\xbf\x962\x14{\xef\x9e*#\xc3\xde\x05\xf0\x85\xb5\xbd\xad\xcd\xa6\x90\xd0:\x8e3<\xa4\xa9\xff\x00\xf8\xb0~*\xc9>\x95o\x1c\xab"\xc4\x1b\x8c\x00\xc7\x8e+\xd8%*\x18D\xbbWy\xdc;\x0ey"\xa5\xade3B\xac\xca3[h:gI\xbb\x82\xde\xde\xe6\xc6\xdd\xe7DV3\x88Uu\xb2c-\xc5f\xaf-J\xbb\xc8\xbb)m\x94\x9c\x90\x0fj\x82\x8bD\x8c\xdc$\xe51\x8eB\xf5\x00\xf6"\xa4\x16\xd0[:mQ\x87\xe1\xb0;\xd4\xc0\xed\\\xb8\x1f\xa75ig\xd2z\x7fI\x86d\xb2\xb6HL\xaedv\x03r\xc7\x00\x9f\xf8\xe2\xa1\xaa\x96a\xab|S\t\xedb\x9dv\xc8\x81\xb1\xd8\x8c\xd4\x05\xd6\x9d\x01!\x94\x00\xc7\x81\x81\xcf\x1f5h\x19$\x86\x00\x7f\xc50\xb8\x89\x81}\xa7\x91\xde\xa9:\xe5\x82_[\x92`V:\xb0I_P\xc7\x15c\x02\xaa63\x83\x8f\xb5T\xa4\x83\xcdWFB07\x03\xd75\xd6\x95el]\xd4\xb3\xa6\xd2\xb9Bp\xb9=\xb8\xebK$w+4\xbeb\xf1\xd8\x8fn\xf4\xf2\r2G\x91dY6\x86oVG8\xaf#\xb5\xb0\xbd~\xa5k<=)\xee\x1de"H\xdf\x08J\xe7\x00\x9e8\xfd\xc5=\x7fh\x9a\x01\x05r1\xb8\xf6\xc5H]<\x8b\x04v\xf0\xe1\x98\x1e\xbd\xa8\xb5[\xa0\xa0L\xeaN1\xd35)\x1d\xba\xaa\xe3f0x\xf9\xa5\x99\x01\xc7\xbdz\xfc}\x16i/\x16\xf6[\x89\x10\xacK\x1a@\xacDaWl\x11\xdc\xfc\x9a\xaaX\xe3\x0b\xa4\xaeO\xbd0\x9a=\xc0\xabt#\xb7\x15\x07y\x18\x08\xde\xddI\xab#\xe4eH\xcf\x1cT]\xc4K `A\xe4\x11\xcf\x14\x8e\xb3f.\xa1\x91G\xe6*G\xab\xfaT\xcbs\xe5\xb0\xf6\x07\xb5RfM\x80\x14\xe4g9\xfa\xfbS\x95\xd5n<\xa5\x8aC\xbc\x00\x08 \xfa\xb1\xed\xf3O\xee-\x84j\x9cn\nF\xdaa4O\xb0\xaa\xa0P2A\xc75\xe2\xb7\x9d&\xfb\xa7\xcdtm\xe4x\x8bF5\xc6\x99*\xc3\xd8\x8e1V\xd2y7\x11\xa8t\x0c\x018\'\x9an\xfa\xec\x9bJ$j\xa5\x90\x8d\xdc\xe4\x1289\xed\x8a\x80\x9e\xd6+\xc5-\x90[>\xa3\xeei\xc4\x887\xf08=i5q\x12\xae\x07S\xcdf\'\xbf\xbc\xba\x11y\x93\xb3yy\xd06\x00g\x9e>\x95\x12\xee\xda\xd6;g\xc4J7\x18=\xea\xc5\xe1X\xcd\xab\\\xb1\x18\x04\x04\x07\xdb\xbd[\x1d\x03H\x0e\x06\x1dy\xe3\xadT\xb4\xeb\xa5X\x9ba\x19\xceMJ\xc5r\xcaT\x9cs^\xa3\xe1\x8e\xab\x04=.\xc6\xd2Ug\x01\xcc\x84\xf6R\xcd\xbf\xf5\xc5f\xa5Q\xa9\xb1\xc50\xd5\xf4\x95\xb8[k\x8c\x95kI\xc4\x8a\xd8\xc9\x0b\x9fP\xc7\xb1\x15\r6\xb7h\x16X\xad\x1d\x80|\xf9\x8e\xde\x93\xf4\x03\xb5^\xd1\xc4\xa0\x06\xe4\x10x\xf7\xac\xdb\xc4\xbe\x0fe\xf3o\xb4\xa9v\xb36\xe7\xb7?\x84\x9f\xf6\x1e\xdfJ\xb4\xea\xf6W\xf6\xdd:\xe2N\x95*\xc7\x1c\xab\xfcv\xff\x00\xee\x00\x062\x9e\xc3\x07\x07\x1b\xd3p,\x06`e\xfb\x1e\xd9\xf9\xa4\xa2\xb9\x8d\xe4\x01H\x05\x9b\x035a\xfb\xbe`uq\xb8\x8f~\x98\xact\xdd\xea\x7fy\xb7\x8e(\x19d\x8d\xc0p\xfe\x90\x87\xfd\xc4\xd5\xf8x\xba\xc6!o\x1c\xd21b\x00\x96D\x19E\xf9\x19\xe4\xd7\x9d\xf4\xcb\x18\xed\x9eI\xa5;\x94!7\x04\x1e\xc4|\xd5\x8d\xcd\xad\xc4\x8c\x16(\x8b\x80\x01:Fj\xb1\xe2-(bR\x13\x1cdf\xb3$\xb4\x11;3\x1c\x00pkj\xbd\xd44\x9dHI\r\xa5\xe0\x95\x88;\x03)RO\xc6z\xd61y$\xe2S\x0c\xa8\x11\x96NF0A\x15#\xa7\x19\xd1\xae l.\x86\xecA\x18\xf8#\x91Q\xed\xfa<\xb3\xceu\xa9@\xb8,\x0eC\x10}\x85[<1\x1c\xb2_\x94\x85@\x0c\x9c\xb1\xed[-\x8d\x9a\xc1\x82$/!^\xa4V!\xe1\xedJ=:\xe6I%\x04\xc6\x11\x98\x81\xc9\xc8\x19\xab\xbd\x9f\x8e\x81>g\xddX)\xfc##5*\xdf\xf0\xd0\xde\xf9\xd3\xc2\xc7\x05p\xe0\x13\x81\x8e~\xb4\xbe\xa3h-&TT\x08\x8c\xa3O\xcdY\xfcK\xa0\x8df\xc0\xc6\xca\x04\xa9\x96\x89\xc8\xe3>\xc7\xe0\xd6\x0c\xf1O\xa4\xde\xc9\x0c\x8aQ\x91\xb0G\xb1\xad\x86O\xb4\x8b&\xdb\x1bY>\xfc\xf4\xdc\x06j\x17]\xb7\xb2\xf1\\\x02\xee\xce#\r\xf4c\x94b\x07\x98\xa3\xb6}\xc5N\xbf\x9e\xc0\xbb:\\1W\xc0!\xd0\x8c\xe7\xbeq\xda\xa3\xc0\xba\xb6\xe7\xda\x9exv\xec\\\xc2\x0b0%;\xfcT\xee\xa1\xe2+{HY7o~\x9bGo\x9a\xa4xoJ\xd6g\xb2\xb9\x16\xd6r4\x8aHn\xd8#\xb75#\x07\x80<Ws\t\x9d\x8ci\x9c\x9f*F\xf5\x1a\xa1\x83\xc3W\xddB\xe2Y \xb5\xb8\x92\x12N\x9d\x08\xc5X\x0ew\x03\x18\xa9^d\x91\x80\x15r}\xfd\xa9\xcf\xfe\xa4\x83\n\x03\xb6}\xa9\x8d\xcf\x89\'\x89U\xa2b\x186z\xd3\x19|;\xabZ\xb8\x8ekY#\x938\xe9\x90~\x84U\x9bL\xf0\x0e\xa3y,My\xfb\x98:\xb7\xf3\x11\xf4\xedK\xb3\xf0\xf4\xd7\x17\x9f\x87\x82\xc2i&V\x01\x93I\x05O\xfd\xd9\xfc\xbfz\x03NF\xe7\x1f5{\xf0N\xaf\xa8\xeb0M5\xcb\x96\x85@T$u5yp)\xa5\x85\xa5\xb6\x9fk\x15\xb5\xbca#\x8c`\x01N\x19\xc8=+\xe8\xae\x87a?L\xe9\x96\xf6\xd7\x17Oq*\xe4\xbb\xbb\x16\xdc\x9c\xe9\x04\xf6\x1c\n_\xb7\xd2\x9b\xbeW\xa6k\xc5\x94\xfbS\x8c\xab\x0e\x94\x9e\xc5=\rZ\xd7sK!\rJ\x18\x95\xa9\xae\n\xf44\xa2\xcaEv\xb9I\xbd\xb0\xec)\x16\x8d\xd6\x9d4\xdcR^f{Q\xb5\x19\xa4D\x84u\x15\xde\xe0{\xd7\xa4#|\x1a\x048\xe8h\xa3j\xf5I\xa5\xd7\x14\xc9\xf7\xabqJ,\x87\xbd\x14S\xc0@\xa2\x9a\xef\xa2\xbb\x9a\xe6*\x94\xb3\x1aPL{\x9aGi\x1e\xd5\xc9\xc8\xedL\x0c\x8a_5\xe4\xb7\x04t\xa6N\xf20>\xa2)\xcb.{sM\x9e9\x0fAI95\xd0j=\xe41\xb7$\x93J\xc7#\xc9\xee)\xc0\xb4f<\x8c\nq\x15\xae\xd3\xde\x92\x14\xfd\xa8$mDq\x13\xd74\xee+R\xc7\x9aV4\x0b\xd6\x96\xf3\x82c\x14\xea\x81\xde\x92M8\x8e\xd24\xc14\xb1(\xa3\x8a\x8ek\xdcg\x9a\x8a\xbd\xd6\xed\xedQ\x8c\x92\x81\x81\xefNe@\xa4oR\xf3\xdc*\x03\xea\xe9T\xbdg\xc40Y\xc6\xc5\xa4\x0b\x8f\x9a\xcf|M\xf6\x93kj$Hd\x05\xb0G\x15\x8a_\xeb\xda\xbf\x88\xa7\xda\x8c\xc1\x18\xd4y%\x03\x8ar8\xc9\xe4U\xd7\xc4^6{\x99Z+B\xcc\xc4\xe3"\xb8\xd0\xb4\x8dOV\x91$\xb8\x91\xf6\x93\xde\x97\xf0\xcf\x83\xb7l\x96t\xdc\xddy\xad\x97N\xd3\xe1\xb2U\x01G\x02\xa0\x93\xa9\xb6=\xf9\xa9\x98\xd28\xa5to\x0e\xc1l\x89\xe8\x19\xc7z\xb8$)\n\x8c\x0cqQ\xd6\xf30\x1d1N\xe4\x95\x8a\xf1R\x10*\x8d\x852\xc5\x89\xdc\xd1+g SS\x1eH\xcf\x02\xb8\x8ddv9\xfc\xa9\xfa\xdb\x96 \x9a?7j\xe8\xc0\xefM\x91\x009\x15\x94\xf8\xad\xbc\x9dJP\x00\x03\x83\xfa\xd6\xc4\xc8\x10\x00+9\xf1n\x8f5\xcd\xc7\xde#\x8c?\xeeI#\xa7\xe1\xac\x87\x8cm\x1a~\x9b\x13\xacZ\xccS\xa98\x198 \x8a\xd0\xf8z\xe1c\xbbtf\xc0x\xce3\xee+-\xba\xbd\xcc\x84o\xe3\x03\x8aeq\xa8\x02\x86A\x9d\xe8H#<\xe3\xde\x9a\\\xed\xf3\x13h\xcb\x96\xc1\x15\x13s3ZO\xeb\xeb\xd8{\xd6\x12\x08\x81\xc0\x1c\x9d\xf1Z\xe9\x1b\x03z\xb6h\xba\xe4\xc9& \x90\x87\x91\xd60\xc0\x91\xf8\x8f\xbdhwf\xefdQj7f\xf9\xa1\x90\xb2 \x04&\x7f\xdeO\xe2\xc7j\xf9\xfe\xd2\xf8\xd9\xdd\xc7"\x82#2\x83\x9f\xe59\xe2\xbe\x9b\xb0km^\xca\x1b\x94\x00\xef\\7\xc3\x0e\xa2\xa5\xdd\tb\x84\x81&\xc7\x85\'\x9cv#\xbdc\xbcJ\xf3*[\xbcj\xa0j!\x9fH\xd4\x0e6\xc1\xedQ\xf1\xdaG{\x03]4AKd\x10:\x0ek3\xf1\x95\xaa\x85Yb9\xf2\x81\xcf\xb6\rj\xb7\x91\xda\xd8\xc1!{\xa0\xb1\xae\\\xc6\xac\t\'\xe9\xeek$\xba\xd4\xa6\xd7\x05\xe4l\x8b\x14D\x8f-\x07R3\x8eOsP\xd1\x1d\xa4\x8eVP\x8e\xa7/\xees\xce\xc3\xde\xa9zGN\xb8\x96Q*\xfaQN\t=\xfe>kM\xfb/\xf1{\xdc\xe8\xf2i\x97r\x9f:\xd4f\x02\xc7\x93\t\xe3o\xff\x00i\xfe\x94\xb7\x8e5g\xb4\xd3.n7\x10\xcc<\xb8\xbf\xf77\xfc\n\xc74\xe4\xba\xd2\xee$\x92\xd2r\x93B\x1bc\x00\x08\xe7\x829\xebH_\xeb\x1a\xb6\xbd+}\xfa\xeaY\x95\x01*\x84\x05U\xed\xc0\x18\x15kuy=\xec\x11A,\x84\xc3\x164\x8fq\x9d\x81\xfaT\xf9|:^\xfcL\xa5D%\x832\xf7\xcf}\xbej{\xc0\x1347\x17\x16\xcc\x7fwt\xc3$\xf5\x0c\xa3 \xe7\xe6\xb4\xadV#u\x12\x91\xfb\xb8\xc7*O\x19 \xff\x00\xe75P\xf0\x15\x95\xad\xd2O\xd3\xcd\x8a@v{\xf1\xd7\xf2\xad\x03\\\xbb\xb3\t\xe44\xf0\xad\xe7\x95\xb9c\xde\x03\x15\xe9\x90\xb5S\xd4\x04\xd3Z\xca\xeaB\xe8;\x92\x0e\xe0v\x18\xee*\x8b\xaaE\xa3\xa8\xdc\xa8C\xb1\x07\x1f\x18\xe6\xb3}kW\x9fA\xb4\xb7\x9e\xcaM\x93\x8b\x95\xd8O9\xfe&\x07\xdc\x100kZ\xf0\xf6\xafe\xe2]:;\xdb_K~\x19\xa1\xfe(\x9f\x1c\x83\xf0{\x1e\xe2\xb0\xcf\x19\xc7"\xe9\xbak\xb7\xa7u\xd3\x80{\xfaW\xfe\xf5Q\xb4\xbe\xd4,\xa4_\xba^M\x03\x1074R2\xf0:\x13\x83\xf3J\xe9\xb1\x01d\x84\x8d\xd9\xd9\x89?\xd6\xacm\xbaB\xdeXFT\x84\x93Q\xc3c\xf65\xf6\x1f\xdd7\x01\xea\'\x8c\x10zTU\xf6\x97$\x9f\x84\x8a\xf9\xcd|k\xe2\xcbt\x1e^\xbdz\x0b`\r\xe7p\xfa\x1d\xc0\xd4\xa4^.\xf1\\\xb6\xb3\xbd\xce\xb5t\xf1\x87\xc6W\x01\xba\x7f\xb4\x0e*\xd2i\xe30a\xa3$\x9c\x00\x03c4\x9f\xfe\x97\xbb\xc8\xfe<X\xfb\xff\x00\x8a\xbf\xeb\xcfg\xa1\xc4\xd3\\N\x0c\xbdc\x846\x18\x9fs\xec>k.K\xeb\x8b\x9b\xe9dX\xc9g\x904\xb9\x00\x8c\x7f\xb4\n\x8f\x9ei\xe5cp\xcc\xccYN|\xcc\xb3\x13\xeeI4\xf6\xc6gyeb\x9bPF\x13\x18\x07\x9f\x9a\xa6hcA$\x825$\x8c\x1c\x9e7\xe3\xe6\xaf,\xba:X\xc6pu\xc8\xdf\x99\xb1\x8f\xb0\xab\x05\xbc\x8d$\xd2;\xe5\x958A\xd8\x0e\x995;\xa4k\xf3Z_+\x1bm\xa5\x97k\x00\xdd\x06x\xfa\xe3\xadUb\xb8r\xd8\x0b\x84\xee\x079\xc7\xf6\xc5<\x8a\xe4\x8f+\xcb\x89L\xb2\x10\x08\\\x9d\x82\xab\x9e2\x0et\x0c\x804\xef\xc6*s\xda$\xd1\xb4N\xb9F\\7\xd0\xd6\xfd\xa5x\xc2\xd5\xe2(\xd2\xc6\x8ezy\x99Q\x9f\xad[SS\xb7\x91s\xe6D\xdcg\xf1\x83\xf9\xf5\xaf\x9b\xed\xe7\x94\xdc\x88\xdfc*\xa1bzg\x1f5.\xb2\x0f-\xb0Xg\x91\x81\xef\xda\xaca\xf1_X\xb3U\x8d\xa5\x12(\x00(8\xd8~\x95\x00\xf8B\xdaL\x18\xeed\x8cw\x04\x06\xff\x00\x15\xba}\xea\xdaB@\x92&=\xc0`qQ\xd7\x97\xb66H\x1eyR!\xd8\xfd>\x9dk7\xb6\xbaI\x11#\x8c\x15\xf5\x0c\x91\xc98\xf7\xa9{\xa8.\xae\xa3D\xf2\x8c\x91\x8e\x8d\x91\xc7^*<\x9e$\xbf\xbaI@\x80\xb3\xa0\xceUurw\xf9\xe3\xbdpxB\xdd\x1d5\xde0Rw\x18\x00\xfe\xbb\xd2w\xfe/\xb5\x94I\x15\x82\xb3?y$\\~\x83\xfei\x94W\x12I\x07\x98\x8c7m\xdc\xc7\xb9\xc7\xbdV\xeel\xbc\xb9\x98*\x95$\xfd\x08\x15\xe8\x99\xa0\x8a(\xd8\xfaG*s\xcf>\xf5\x9e\xbcv\xbea$\x8e\xcc\xde\xc7\xfaV\x9a\xc7\xa4Z\xd8)[x\xf0X\x0c\xb1\xdd\x8dl\x1a]\xfc\xc6\xce\xdc\xc0\xdb$\x00\xa1\r\x82\x0e\x0ep\x0fj\xb5\xfd\xebp\x8c\x97U\xde\x06y\xe3?\x15\x92X\xea\x06\x08\x95\x18\xb3\x07\xc4\x83\x1d\xb6\xf1\xcf\xd6\xaci\x7fo2\xc0e\x9cn\xdb\xfb\xb3\xcf~\xa0\xfdkO\xd1\xbcA%\xad\xbf\x90d\xc9\xf2\xa3P\x8e\xfaPi\xdb\xbf\x19\x1e\xdc\xd4\x1b\xce\x92$\x93XM\x8b\x13\x902w\xad\x15n\xa0a\x9d\xe9\xb65\xdcH\xcex\xed\x8a\xe9\xae\x1b+\x85\xe0\xf3\x9e\xbcU=o\xd0<J8$\xe3#\xa1\x03\xbf\xd6\xac\xd1\xdc\xc9.\\\xaa\xaa\xc6\x80\x92O\xeb\xfaW\xa0\xf4\xee\xb3\xf8\xc3$bQ\xa9J\x8c \xce\xf8\xcf=\xb0+?s\xd3\xc48:69\xe4\xd2\xf2\xc8\xb0#\xbe\t\xdd\xce;\xf3Lnu\x18\xed\xe2\xde\xc3\xa0\xe8\r8r\xce\x93C6\x1c\x1c0\xc7pO\x02\xa9\xba\xa5\xc1\x92u\x89e\',\x06\xd0;\x7f\xf3P\xbcE\xd4\xa6\xb1\xb5/\x1b`\xb2\x84\x8d\x08\x19\x12\x12s\x9c\x9f\xa5;\xd3\xecc\x9aL2\xe7\x07$\x8c\xe0\xae*]\xb5O2\x05R\x03\x19\x1c\x01\x81\xfd\x0f\xfc\xd3\xa8"\xb3\x98\xc0\xe5c\xdc\x01Q\x8e6\xe7\xa8\xfa\xf1U\x08\xee$\x12\xba\xc7\xbb9\xc2\x9c\xf0;c\xf2\xf6\xa9\x139\x82EB\xe9\xe6\x04\xc1l\xf7\xc7j\xc7\xd9u\x99\x9aA5\xc1\xf3\x84ec%\x87\xa7 \xe4c\xdc\x9cf\xac\xee:\\EJ"\x85\'-\xb75t\x11\xaa\x80\x06\x068<\xd2n\x91\xe3\x80\x0ej\xb05i!S\x13\x07r9\x07\x1cc\xad6\xb7\xd4%A#\x06L;\x02=Y\xc7\xc6*\xf2\xe7\xc5\xb6\xea\x125\x89\x99\xb4\x9f3l\x94#\xb7\xb7\xc5V\x0e\x86\xfe\xa6$c#\x1f5;t\xdeT\x0e\xccv\x8c\xf2\xc7\x81Q\x9f~\xb7\xf2Dk\x11+\'\xff\x00Q\xb8\xc7\xb7\x07\x9aR{\xa7x<\xa9\xa2\x0cY1"\x1c\x11\x8fz\xad\xc9\xa3\xde+\x89lu2\xb1\xbeO\xddf\x8c\xb2\x86=\xd5\xb3\x90>9\xc5e:\xcd\xcc\xd7\x92I\xe43\x06\x16\x85\x0f\x98\x9b\x8dG\x04o\xc1\xc1\xc6\xc3j\x877I\x98\x15p\xaa\xc3W\x00\xfe\xf5lKes\x1cj\x01f\xe4\x9f\x8a\xb3X\xda%\xbc\x1bB\x8e\xbdj\xb1\xa4\x89\xac\xe3a4Cp\xc6\xe2\xa7 \x0f\x7f\xce\xad\xa96\xe8\xf200\xb9\xad7\x80\xac,\xec\xcc\x97\x92A\xe5\xdd\x04e\t\xa7tA\xb62F\xe4\xe3$\xd4\x19\xac\xe5\x04dzs\xb6ig\x8b#\x8ct\xe2\x99<m\x12.\xe1\x9c\xb7aO\xa2\x94H\xa1\xbezR\x8cQ\xc0\xe7\xbdz\xdcwQ\xca\x8a\xe1\xb6+\x90~*#[\xb2\x92\x08\xdc\x1a\x8f\x8a\x1d\xfea>\xa5=\x88\xa7>Z\x95\x18\xc7^)\xc18\x1e\x91\xf5\x14\x9a\x90\x14\r\xa0rx\xa5\x99\x91;\xe4\xe3zH\x89\x8fjk\xea+\xea\x03#\x83U\x9dj\x11\x04S\xdc\x81\xcb\xc0\xd1\x9f\xafj\xb5H\xc0\x1c\x1cTm\xe5\xa8\xbe\x81\xe1-\xb4\x13\x90z\x9c\xd6S\xc5\x01\xaf\xfa]\xdc0\xa9y\xca\x9f%v\x18p6\xe7\x8aym\x19\x94\xec\x06\xd9\x14\x9f\x87/~\xff\x00\xa7\xa8~d\x84\x04\x7f\x91\xd8\xd4\xbc\x80\x02x\xe9Q\xfa^\x9f\x0e\x9c\x8c\x88X\x979f=\xc8\xe9\x8f\x8a\x90\x96E]\xaap\x0b\x03\xdf\xda\xa5t+\x8b\xdb^\x87\xd3\xe3\xea,\xbf\x8a\x8e \xb2\x1c\xe7\x83\x85\x04\xfb\xe3\x19\xf9\xae\x0bf\'\x18\xaf\x12\x15 \xe7\x9e)`\x06\x00\xf6\xa4\x13\xf0\xf0I\xf7&\x94i\x82\x80{|\xf1V\xa9v\xae\xa0\x91\x81\x80}\xf3]0\x158\xe6\x97\xda\xa3\xa7J\xac\xeb1\xdd\x05i-\xcb0oIT\x1e\xa1\xdbp9\x1d*e\xe5TR\xce\xfbPrI8\x18\xfa\xd4T\xda\xad\x84r\x847*X\xf4\n\x19\xb3\x9e\x9c\x81U\xbdV\xe2\xda\xe2\xcd\xa0\x9ea\x029\xc0ma\x0f\xc7\xd4|\x1eju\x9d\xb3\xac\xca\xeb\x1f\x98W|i\xd4+/\xd6\xf4\xc8VK[\x8dF\x1b\xb9\x94\x96Y\xd9\t>\x90\x01S\x9e\xdd\xfb\xd3I\x9e=C\xc2\xb0\xf9\nU\xadf\x95bY\\\xfa\x95\x8f\x07#\x9c\xff\x00J\xd25\xe8l.\xf4\xfb\xcb#q,~lx\x04r\x13\x9c\xe7\x15\x81k1\xc6\x9a\xbf\x91k|\xeb\x1cqmbF\xdf\xde}8\x00\x91\xed^y\xd4\xad\xed\xba$\xd2$&\t-\xe4\x88\xa4\x8a\x0e\\\x12s\xf3\xc1Pk\xd1:+\xff\x00\xa8E\x08o2) \x93Z\xect\xe9\x00\xf6\xed\x9dX\xa5\xb4\xdb\x81qt\xb0\xdd\xcc\xf1F\xe0\xabI\x82\xc1Xt$\xff\x00.z\xd3\x1b\xe9\xa7K\xc9\xe1\xb3v\xb8\xb6\x8eO\xdd\xc9\x9cg\x9e\xa0\x1e\xbf\xf1\\\xdc\xdd\xc6-\xdc5\xd0g\x07n\x18\x82Kc\x07\x00w8\xa8Y\xef\xc8\x8a\x18\xd0\xb32>v\xe7\x19$e\x8dR\xd8~\x0e\xe3Z\x08\x04X\xdcLI\x126\xdb)\xed\x8f\xb5k\x15\x1dd\xd7\x9d\x88\xc1M\xb4\x8f\xfb\xb8\xcej\xc3\x1f\x88d\x92\xf4,1\x88\xbc\x82\x00l\x86P{\x8c\x1ag%\xec\x92L\xe5\x9f\xd7#\x9d\xdc\x00\xa7=\xc6;\x9fj\x86\x8e\xf7rG*\xed\x1e^pH\x03\x1d\xf9\x1d\xf95%g{\xa75\xd1\xb8\x99\\\xa8\x04\xedS\xb7$\xa9\x19\x1f\x15c4\x10\xdf\xc5\xa1\xee\x02\x93 !\x9fe\\\xed\xdb\xe9K\n\xb0\x82\xeb\x0eH\\`nN7\xc6M[\xf4\xed.h\xa3\x8e\xfaG*\x08\x0c6\r\xcc0z\x9ct\xad:3\xf7\xabF\x9e\xe1\xc3o\x8c\x8f,\xfe\x16?\xc2\xc7\x1c\xe3=\x85f~\x1c\xf1\nEh\xe5\x90\xf9d\xedw\xea0\x7f\x87\x07\xa0\xab\xb5\x86\xb0\xb7\xf1\x93\x14A\x13v6\xb1\xcf+\xf4\x1f\xa5L\xe96\xd6\xf6\xca\xcf\x0b3\xa4\xcb\xea\x8d\xb2}K\x9d\xce\xdc|V_\xac%\xdc\xb2\x96x\xf6\x8d\xf6\x90`aOaU4m[J\xd6c\x95\xac\xdc4R\xa3>\xd4\xdc\x029\xef\x8f\x8a\xd1.5\x93\x14\xf0\x85dh\xa4\x94!\x906H\x07\xa0\x03\xfej"\xf69\xafdY\xe3\xb8\n\x96\xf2\x92T.w\xe4\x7f\xdb\x9aw%\x9a\xdc"Hn\x15\x01\x01\x84{}J\xc0\xf2\x7f\xe2\xbbikq\xd3\xd6\xf2\x1b\'r\xaf \x922YF{\x128\xfa\x1e\xe7\xb5C\xbb\x96\x0b\xa3l\xf3\xc6\x81\x95\n>\x90v=\xbf\xcd^m\xdd\x14\xab\x19\x15\xb21\xe99\x075\xd47\xca\x89\xb6A\xb1\xd4\x9c\x81\xc9\xe0\xd53M\xd4\x1e\xdeh\x91\x83<~\xa6,\x06\x19X\x0e2=\x8fL\xfb\xd2\xf0\xdey\x90\x97\x91I\x98\xb1>\xbf\xe2\x07\xa9\xe2\xaf\xdb\xc4\x11\x88\xa0h\xfd\x0eC\xeaV\xe3`\xa7\x91\xc9\xdflVr^\x98\xc1\xdc?\xa9}8#\xef\xdb\xfa\xd5\xfa\xde\xea9\xd4yd\x95\xe7\xd5\xf3\xedK\xb3\x8e\x99\xa8\x1d0\xaa\xc6\xa7\xa0\'z\xe3\x8e\xa3\x1c\xd4\xc4l\x8c\xbe\x92\x0f>\xf5\xa6\xb1\xbb\x92\xe6\xda\x16\x90\xa0v\x1b\xe3\x8f\xb5Q\xcf\x02\xc5+\x85\x04\x80iV9\x07\x8e\xd4\x8b\x82\xd8\x04\xe0{W\x10\\\xc51q\xb8\x02\xacA\x14\xa8xy\t"\xb6\t\xe0\x1a{\\S(q"\x95oc\xce)\xbd,\x84\x82\x87#\xe2\x9ay\x0b\xb4`\x1e\x07\xe7J\xc1\x85\x1bI\x04\x9f\xedN26\xd2RI\x10]\xcc\xf8\x1d\x88\x14\xd2\xc1\x04\x04H\xa5\x17\x0b\xf4\xda\x95\x96\x7fI\x04\xef\xfb\xd2\xd8\xdd\xc6s^ \xf2\xc1\x0c\xd9\xec)\xba\xcb\x80\x19W!\xb9\x1e\xe34\xb3\xa8uR2;\x9a~7\xd6\x0b\xa6\x0b.\xfc\xf64\xd3\xa6\x08\x07`v\xa1\xbaq\xf9\xe6\x98N\x85\x8eH\xf4\x8a~\xc0\x04;y\xe3\xa1\xa6\xef"s\x19#8\xe8{\xd3W\x08\x1d\x08r\x00#\xecO\xb5u6>\x91\x9d\xfe\xf8\xa8i\x08\xc9L\r\xad\xd0\x9e\xd5\x0fx\x820U\xc9#\x07\x8ey\xab\x14\xbeZ\x90\x00\x04\xf4\x18\xed\x9a\x89\xbaR\xc1\xb76\x08\xfdNk\x1b\xd6,D\x900\x1aY\xf7\x1b\x8d\xb1\xdc\x1e*|\x1b\xb0\xd8\x81\xfb\xfdj\x9c\xe0#z\x88\x01\xbaWpZ\xac\xccwu\xe7\x02\x96\xbb\xb2\t\xb4\xcb\xb8g\xf0\x80y\xcf\xbd1\x82\xe5\xed\xc7\x9a\x01tO\xc6~\x9dk\xc4\xee\xfa\\\xf6\x17\x8a\xae\x87\x1a\xb2@\xdd\xb4\x8d\xc9\xc5L\xbb\xb3{\xbbq\xe5\x1c\x91\xbe;\x1ay\xe5\xc7f\xc4\xe3\r\x80q\x9aa\xfbaZR\x8b>[\xdb\xda\xa4/#7\x0b,\xe4H\x11\xcf\xa0c\xb6?\xbda\xfe%\x9e}6e\x96\x17h\xddd\xce\xefl{\xfcT\xd8\xec\xaeZs\nL\xf1\xa1f0\x90H\xd4;1\xc7\xbdC\xb7\xf0\xfc\xd2\xdb\xbc\x920F\x03!q\x9c}kt\x83Z) V;\xc7\x18\xf8\xab\x14z\x8d\xbc\xc8\x9b\xca\x85\xceN\xea\xf9\xb2\xc7X\xd6%\xbaF7\xaaA\xc3g+\xb3\xe9O5\xab}b\xf2h\x19\xef\x19\xf7\xf2\x00lF?!\xc5k:WU\xebV\x8c\xf1I"\\G\x81\xb1\x04\xe3~3\xcde\xe7\x83\xcbl\x1d\xb2y\xad\x83\xc4\xba6\x93q\x1c\x97\t4K)\x1e\x82\x1cs\xf0k\x1dh\xbc\xd6+\x8eA \xfcQ\xa4\xe8\x97+p.\xe5\x97\x11\xc7\xd3\xbe\xe2x\x15k\xfb\x84K\xb0\x92I\x94os\x8f\xc2\x0f\x02\xaa\xfa\x94\xf0\xdc_O-\xbd\xb2@\xbaAdS\xe9\r\x9c\x1cg\x1f\xb5m<7iq\xf8i\x1aP|\xb6a\xe5do\xb7?j\xac5\xa9\x88$\x88\x19YNU\x85V\xf5K\xbb\x8b\xeb\x85{\x92\xae\xd1\xfaC\x85\x00\x90;\x9cu\xad\x0e\xe6\xdeM\x80/(\xbb\x80l``V\x7f}\x03\xaa\xb3\x15\xce\\\xf3L\xd91/\x97\x1b\x91\xe9\'\x9d\xfd\x8d^\xcbb\x85\x83i\x04\xae\xc0\xf7\x14\xebN\x83\xceK\xa9:\x0f%\x87\xf4\xa9-+J\xbd\xd4\xadbX\x95c\xc2n2?\n\x00\xefS>\x17\xb2\x80\xc7\x12\xcc\x7f\x11\x04\xae:\x8fj\xb2kS\xc1\x1c2\x08\x9c*\x90F\xd01\xf9Ss\xca\xea\xc3N\x86\xd5(P5z\xb6\xdb\x8a\x87\xd4z\n\xf5\x1f\xc3\x83!\x8f\xcbC\x93\xa79\xcdb\xfa\x8d\xbb%\xcbD\x93<\xd3\x87\x01Z1\xe9\xc8=\xabP\xd2\xb4\xbdF-9\xef\x1d\x82\x08\x90n\x91\xbao#\x18\xfc\xeag\xec\xf3\xc3Q\xde\xde\xcf\xa8\xdcE\xba(\x8e\xd4\xc8\xe1\x9b\xb9\xfc\xab^\xd54\x98\xae\xf4\xdb\x8b(\x91Q%\xe7\xd28\x07\xaeksg\xe0\xdb\xce\xab\xd3?\x13+\x85\x02)\x0cQ`j\x91\xc0\xf4\xef\xc0Rk)ykieu\xe5BI\xd2\x06\xa2Nw\xaa\x8f\xd9\xdc\xda\x93Av\xb7k\x08R\xc1\xb2\xa7\xd5\x93\xfe+I;{UG@\xd0.4\x96.\xf7\x1b\x89\x18*\x07\x18\xab\x0bErd\xdc\xbd+\xd0<!m\x7fe\xd0mm\xefm\xcc2\xc6\xce\x02\x16\x07\n[#\x18\xce\x06\xfcT6\xc1c\xbd;dF\xc1e\x07\xea+\xad\xa8E!\x99\xcf\x05O\xd6\xb91\\/\xa8\x1c\x8a\xd3m\x92t\xf3\xcd\'\xefN<\xb5\xc1\xc5q\xb5s\x82+\x98e,v\xb0\xc1\xa5\x1d[?\x86\xbbG\xde\xbc\x11\xa9\xe9\\48\xe9K*\x91\xcfJ\xf4\xba\x8e\xe0\xd7qFi\x01\x19\xef^\xec\x02\x97\x05Xf\xbb\x08\xa7\xbd\x18\xa35\x1c\xc8\t\xe2\xbd\xf2\xc6:S\xd6\x84\x03\x90k\xcd\xa8x\xe9F+\x99\xa8\xd7B:R%\xe6N\xd9\xa9c\x10>\xd5\xcbF\x00\xe9\\\xc5w5\x16g8\xe5H5\xda0\x93\xb59*\x8d\x90V\x9b\x94\xc7\xe1^+\x95\xdaPF\r\x15\xe2\x8e:\xd1]\x00{W7\xaaYdS\xc9\xcdpeS\xd2\xa3\xa4Y[\x92\xd8\xaeQ\xa6S\x80\xb9\xf9\xa8\xfa\xbe)U,\x8b\x9e\xa6\x9c\r\x83\xa0\x06\x9a\xc0\x92\xb0\x1b\x8e)\xd0\xda\x0e\x00\xc9\xa5\x8a\xe1\xafBn=8\xafHU\x1cu\xaf%b\x8b\x92p*\xa5\xa8k&\t6\xa8-\x9fj\x18\x85\x15\xc1\xbdX\x9eP\x0e\x0bb\xb8\x92X\xc2g9\xaa}\xf6\xa8\x12\xd5\xa6yB\xf1\x9cf\xb2\xfb\xdf\xb4\xbb[\x7f6#6J\xf0\x005\xc2\xc0}\xf8\xa3\x04\xf1\xda\xae\xfe$\xf1\\zj\xc8\x16@\x08\xf9\xaf\x9e\xbcE\xe3\xab\x9b\xe9Z(eg-\xc0\ni\x8e\xbf\xa9\xea\xbe\'\xb8u\xb7V\x08\xdd\xea\xcf\xe0\xef\xb3igd\x96\xe0`g\x92\xdd\xea39\xe0\x9c\x9e\xc2\x9fU\x1c\xff\x00Z\xa7\xe9^\x1b\xd4\xb5\x89\x04\xb3\x16 \x9e\x95\xafh\xde\x15\x82\xc1Aq\x92\x05^\xd3E\x83L\x8dc\x85\x06G\x14\xfa-9\xddAn2j\x14\xae\xc4\x91\xfbT\x94\xc0\x00\x8a\x8f\xb7\x95a\x01P`\n\x9c\xb6\x9c\xb7\xf0\x93Nm\xb4d\xea\xd8\xc5K&\x9e\x88\x00@\x00\xf7\xa4C\x14\xb9\xd4\xc7\x14\xa9$N\x07\xebH\xc4\xe0/JS\xcf\xeb\xb8`S\xd5\xb5E\x1c\x8ei\x0b\x8bPW*jv\x08\x15\x18\x11\x9d\xeb\xcb{\x98\x98\xe4\x0e\x94\xe2K\xc0\x9cS\x1bh\x12\x10I94\x84\xaaebs\xc6h\x0c\xc1Fh*3\xb7\x15!\x1d\xc2\xc8\xde\xa6\xa7\x8d\xe4:\x10\xca\x08 \x8f\xd6\xa2R\x03\xc6\xdc\xd3\xa4\x85\xf3\xcb\x1c\xd7G\xabfPG\xb1\xde\x8f\xcb\xba\xb1\x07\xb6+\x1b\xf1\xd7\x85\x13OS\xa8\xd8\xc6\xdeV\x7fz\x83\xf8~Eb\xf7\xa4\xcb\xd4\xe4\x91\xef\xcd}\x9dsb\x97V\xb3A*\xe5%B\xac\x0f\xcd|\xa1\xe2}\x06\xe3D\xd4\xee,\xde>\xa4\xb4L\x07T\xedX~\xb9\xd2\xd2\xc6\xe5\'\x86-\x10\xc9\xed\xc2\xb7\xb7\xc5k\xba?Qk\xa8Z)_T\xa9\xdc\xf2EQ\xe6,\xfb-\x8b\x05\x0b\xc8?5h\xd3%\xb8\xbc\x820\x93\xc8\x92B6mW#q\xf7\xe2\xa9\xf2!s3\xcb\xc1Q\xc58\xd35\x16\xb5\xb8\x86h\x9fk\xc6s\x83\xd0\xd5s@\xb2 \x04d)\xc9\xc7bG59\x9dF\xc7\x1f\x19\xad%\x84\xb1D"\x96fF\nK\x12z\xe3\x9cf\x91\xd3B*rp[\xf0\xe4\xf03R\xd6Z\xa6\x99\xa9A\x13HT\xcb+\x15`FHlU~\xf1f\xb5y\x11"&1\x90x\xfc$\x7f\x83Pd\xb7h\xdc\xec\n\x82q\xf2\x00\xa5\xeb\x0e\xa0\x03\x83R\xb2/\x93\xe4\x99\xad\xd9_9$p\x00\xe88\xf6\xa6R\xdb\x98\xd6W\x8a`\xecH=\x08<\xf3\x8a\x7foq\xe7X\xa4\xc4\x02\xc2-\xca\xa4eq\x9cc\xf2\xa8\xcf\xbfB\xe72.\x1c\x10=<`\x8e\xd8\xf6\xa8\x93+Ft\xa2\xe4\x0f\xd7\xff\x00\r:\x98q\x9a}\xa6]^\xe9\x97\x91\xde\xda\x90\x1a"\xa4(\xe8\xc0\xf5\x07\xdc\x1aKY\x96[\xeb\x9b\x8dFx\xdb\xcf\x91\xb7\x05\x19\xca\xa9\xe0\x05=\xb1I\xc0\xa8\xd0;+\x93\xc6FOl\xe7\x8fjV\xec\xac\xc5\xe5\xc9\xca\xc6\xa3i9R1\x8f\xd6\x98\x120 \x178\r\xc6\xf8\xdcW\r\xac-\'\x9b\xe5\x8dz4\xea\xef\x8eqPWMss\x08_6G\x8cL]\x94\x9c\x80\xcc1\xbb\'\xbf\x18\xaf-\xec\xfan\x8f\x95\xfdG\x14\xee;e}\xe0\x06\xfd\xe2\x9c\xaey\xfa\x8f\xa5?\x11\xeeT\x0e0\xdf\x85q\xdf\x1cS\xad6\x85\xd26\xae\xc7l\xab\xb0P>\x95\x18b\x91\x91\x82(\xc1l`\x9e\xbd\xf8\xa7\xdam\xaa\\$\x90o\xe07\x0b\xd3\xa7\'\'\xbd-,\x0f$EQ\xc1+\x93\xb8\x9c\x0fn\xb4\xe6\xde\xc3\xee\xd1\xc6]\x946\xfc\x92\xbe\xe3\xe6\xa3\xc901\x1fV\x92[lnr)\xcf#}\xab\x94\xb5\x98\x8d\x8eQ\x89\xc8\x18\xe1q\xdb\xad:\x8e\t"\x0b\xe6m@@)\xc6\x0ei\xca\x06\x88\'\xa8\x92\xd9\xeb\x8c`\xd1\x14A\xe3b\xbb\xf1\x1e0\\\xe4q\xd8f\xa14\x8c\xd9\xe3\x1f\x02\x97\xe4\xf0+\xa8c\xf5\x1d\xdd\xc9\xc9\xf9\xa9\x8bkHm\xd8\xb8\x93p\'\xb8\xeeGj\x85\x89d3\xa2*\x1fW8\xeb\x8e:U\x84BT\x02\\\xeeLn*8\xdc:\xaf\xe9Q\'\x0eA\xc3\xe0\x103J\xf2\x01##zR[V\x12)\xc0\xf3\x11\x80+\xdc\xe6\x9e-\xc3olD\x01\x04\xe4\x1eH\xa4\xa6\x89\xe4\x89\xaeU\xd8"\x00N\xe3\x82\x07o\xadq\n\xb4\x89\xbfq#<\xe3\x8cf\xa1\xb2\x92\xaapv\xc9S\x8e\xd5.(\xc0\x188\xdbj\x98\xd3\x9833\x16\xd8W\xbf\xd0U\x8e\'\x90\x05\x7f43v\x03\x81\xc8\xff\x00\x8a\xadi\xf2F\xa6u\xda\xcc\x06Jw\x1c\x0ez\xd4\x85\xa5\xc4\xad?P\xc0\x82X7@>=\xaa+.\x08\x00\xe0\x96\xc8\xc1\'\x04pqN\x18\xcbg\xd3\xc0\xefS2\xc6^H\xe41\xae\xf1\x1e\xee\x80\x92z\n\xab\xea\x16\xcdo1\xdc\xa7<c\x9c\xe4\x1e\xf5o\x88Bv\xf9l\xa9:\xeeg,N6\xff\x00.*\'Y\x867)2\x1fB\x9f\xc4\x01\x03\xda\xa5=\xbe\x98|\xcf1I\xf4\x9c\x06\xc99\x1b\xfbd\x8f\xe6\xf6\xa6\xe3#\xcc\xd3\x82\x06\xfd\xbd\xb8\xff\x00\x8a\xea\xd69\x1e\xd4\x90B\x85L\xa8#\xa9\xef\xf9\xd7vR\xfacG\xecH \xf5\x18\xe0R\x9aY\x90\xdb\x80\xa9\xe9\xceA<\xe4\x8e\xc0{\xd3a!\xb7\x91\x9b\xca\xde\x92\x0fW\xb8\xc9\xcf\x1f5\x15\xe2Q\x14-\xbeNrXm\xb7\x1f\xe2\x9d\x1b\x99\x13\x03\x9d\xb0w\xab}\xbd\xcc\x17\x0c\xc8\x88\x91\xb18\xc6\t\x19\x1cu\xed\x9a\xb4Z]K\x04l6y\x8a\x14\x8c\xe4`\xe3\x8e\xfd\xaa\xabm\x0e\x95s$mos\xe5\x15E\x07\'\x04\x9c|\xff\x00js\x1e\x8dt\x93\xba\xfa\xa6\x8aD~\x87\xa0#\x8e\rm:q\xeav\x85f\x86\xddn\x19\xa5\xf2\xfc\xdbW\x05Fq\xbe\x00;g\x9d\xab?u\x1d\xb4\x99Ws\x18\x0b\x9d\x12.\xff\x00\xad\\\x1a\xe2IYa\x8e\x10\x03\xc7\xbcI\xb8\x15^\xdd\xaa\x87\xa9\xc6\xeb$\x85\xc6\xe3\x93\xc8<\x8e\x7f\xcfj\x98\xd2\xa6\xbd\x83N\x99\x02 \xf2\x89\\\x9e\xbd\xc9\x07\xe9Q\xb3\xcfk\x7f\x08\x92)Q\xca\xff\x00\t\xc2\x1c\x81\x80H5#\xae\xcf\x1fU\xe9V\xd2\x13"\\:\x97X\xe4\xc0\xc0\xd8\x10\x06\x06\xad\'\xbe3L\xd8\xc2\xd6\xb72\x00\x14\xa2\x90\xba\x97\'\xee}\xb3Q\xd0\xeaN\xacc1\x95\x03;@\x00\xfa\x80\xc7\xd6\x97E\xb78E\xcf\xad\x0e\xed\xfd\xb2pH\xf9\x1dj\xbb|n\xa0uyC6\xdf\xde(\\z\xb1\xd8c\xadM\xc1;<p\x9cF\x0e\xeeF9\xe7\xb5ca\x95\xe6s\x1d\xc6\xa6(\xde\x90\xe9\x86\x00\x91\x90\x06v\xab\xd9`\x08\xaa\xe9\x80\x1b\x9d\'l\x8arHE|LIPc\x19n~\xb8\xa6\xa1\xbc\xbc\x13"\x9d\xcc\x14\xaez\x1cS\x88\xd1\xa0\x91\xe5x\xd1\xd7\x9c\x01\xces\xd7\xa74\xd2u\x0e\xc5P\xf2\xa7\xd4:\x0c\xfb\xe6\x91w\x0b\x18\xd5\xccD:\x92\x16"N\xacva\x9er?aMF\x01b3\x90F\xed\xfd\xa9\xc9\xbdS#\x16\x1c\x82\x06\xe0\xc7o\x15\'\x15\xe9\x88>g\xce\xf1\x8eFO\xb8\xc1\xaa\xc8\x040%G\'\x82{\xe3\xda\x9f\xb8\xc4\x11\x95\xd9\xc9\xc2\x81\xc8\x0c:\xe7=\xe9\x8bk\xab\xa4i\xa5\x1b\x15\x05\x8f \xfa\xbe\x98\xe75\xc9\xad\xa2:\x17\x1b\x1c\x0fz\x9aMNa0\x8dT\xb7\x1f\x8b9\xce{\xe3\xe3\xda\xa7\xad5G\x92\x03\x19OVNO\xe1P\x01\xedT\xdbV\x11C1\xeb)\xc6\t\xe0\x0c\xf3\xde\x94\x8eO6\x0f/\x1e\xb5\xc9=\x87\xe7V\xbd;\xac^\xd9\x10M\xc31\x92\'+\x17\xc6p\x178>\xad\xaa\x05\xc5\x8c2dh\x03K\x0fW\xf7\xfaV\x95kp\r\xba\x94\x19`\xde\xa0\x0fRi\xdb\xba\x85\xdeI^=\xbf\xc5Q\xad.%\x81[d{\xb2\x8aw\x1e\x08\xc7|T\xb5\xbd\xe16\xf8g,\xc6A\xc6r1\xf9\xd7\xa3t\xee\xbe\x93C\x14o\x19W\x11\x1c\x83\x9d9]\x81\x1b\x0c\xe7\xe2\xb3\xf3\xf4\xf2\xae\xcc\xa7#W\xdfz\x9d\x92\xf5c\x05K\x0c\x81\xd79\x1c\xd3\t/w\xa1UbX`1\x03\x8c\xfdj\xbf4\xc1\x98\xc8\x93*\x95 \x84c\x8c\x11\xcf\xe7^J\\B&\x05\x84A\x89 \x1e0\x07L\x1e\xe6\xa1\xdc\xf5\xf9\xe6\xf3\x95W*\x80\xe7I\xcf\xa0\xed\x9c\xf6\xc7|\xf1OG\xd3\xe3M\x19\xe4\x9e\xe3\xbdM\x0b\xa4,KK\xd0\xf3\x91\xf8\x88\x1d\xb1\xda\x97\x82x\xdeH\xe32\x1e\xc0\x93\x80*\x92\xfa\xb5\xbc`\x05\x89\x95\xb7\xe4g\xff\x009\xa5!\xbf\x95\xdb\t\t\x19PX\xb7\x18\xc7qU1x\xa2\xdde\x8du$\x8d\xaf$.\xa6\xc8=\xbf\xf3\x8a\x94\xfd-\xca\x13\x82\xa3\x1b\x13\x81Z\x12\xdd\xa2\x7f\x10*X\xe1\xb0y\xe6\xa0\xe7\xd4D\xb7;\x95\x89T\xe3$t\xa6_|\xff\x00I\xa3}\xcd\x9cz\xc7\x18\x1cdTl\x81\xa0iB\x9c\x86-\xdf\x903\x82jWZ\xeb\xb7R[\xc0\xb0`\xc4$\r!]\xf0\x00\xca\xee\x0f\x04\xd4{{\x04Vb\xc3\xd4F\x06\x7fz\xba\xdb\\\x07\n\xbc\xfa\xcf~+\xa9B\xf9\xcb\xfb\xd0[\x04`\xff\x00z\xadZ_K4\xc60\x84\xc6\x0e\x01\x1ct\x14\xe9n<\x98\x86\xd9A\xc7\xea3\xed\x9ej\xe2\xc3\xaeE=\xb2\x9d%\xd5Y\x80|`\xfa1\xc0\xee>j4\xb6,\xb2\x11\xc1 m\xf5\xf7\xa9+\xdb\xa8-\xe2a1\x07f\xd2\x01\xfe,\xf6\xfe\x95\x07(\xf5\xcf\x1e\xc2\x08P\xe1@#\x19\xe9\xd3\xbd\'5\xc8\x94\x15\xb8\x8cI\x92\n\x822w\x1e\x01\xe7\xb7\xb5E.\xafron!\x9e3\x1aA1\x8d\'\x04\xa8$\xaf\x19\xc8\x1c\x1e\x99\xe9L]u\x08o\x9a5\xc3i\xd4\x14(OP\xe7:\xbe\xdcT\xcbkG\x8d[\x1b\x9cd\xef\xb7n)\x96\xa7z\xf6\xd1(\xcc\xac\xbc.\xcc\x9e\xa7\xe7\xebX\xf7\xec\x9dgR\xd7\x92\xe2\xf2\xdd\x85\xb5\xb4\x8d\xb5\x81\x03j\xaa\x90\x1b\xf3\xcfz\xd6,5-\x1fS\xd7-,\xe5\xd4\xa37\x12\x97\xd8\x8a\xd9\xdcb8 \x8cv\xc7\x07\xbdFx\xf2\xe3K\xd0\xa1\xf2Z\xe5\xe1\x86y35\xc2\x92\xd2FH$\x00=\xd8\xf1L\xf4\xce\x9cd\x81\xfa\x84\xb3/\x94\x93yh\xae\xdaX`\x00\x00\xe7\x19\xee;V\x86\xda\xf3\xf0\xb3-\xa2\xc0\xfel\x91\xeb,\x17#\x1b\xe4\xfc\xf1X\xd3jv\xf7?yx\xa1\r4WR\xb2\xb0\x18\xc8\xe0`c\xe9H\xcbkwoz\x05\xccQz\xa1WF\x89\xbc\xc5Q(\xc89\x1d\x0f\xb8=:WZ.\x99q\xe6K}mj\x8b\t*\x8c\x18\xec\x00\x90Ie\x07=)\xc5\xc3Ikq\x17\x9d\x88\xc4\x8b\x92\xe8\xfb\xcbz\x8f\xe2\xf9\xcdU\xacP\xac\xb2I#1g\x94\x12\xe7\xf9Crp}\xcdk\x03\x91\x80\xb8\xc0\x04\x11\xf3\xf5\xa5\xecmmR&k\x82Y@8\xcf\x04\xe7\xfb\x9f\xedQe%\xf3D\xd6\xf6\xf2\xb4i\xc1\x00~\x04\x04\x02\xc7=\xb2jB\xf9\x10\xb5\xb5\xcc7(\xe8\x01\x8d\xa2$o\xdf\x8c\xe4\x0f\xe9N~\xe3\xa8_ZI%\xa1\x0f$D\x16P@\n\x80\xf2Xg\x90)\ri\'\x9f\xe5G\x11u#9\xcf<\x9c\xd2\xd6`\x14\xb3>7\xef\xda\x9e\xda\xdd\xc1\x15\xcaH\xc5\xe4\x0f(3+\xb0\x00\x93\xc9\\\xf1\xcd{u\xabI\x04\xdee\xac\xae\x8b\xb82\x8d\xde\xbe9?Z\x85\x86K[8\xfc\xcb\xa8\xcd\xc1\x91\xb6\x02\x06F\xee\xa3n:\x11V\r#I\xb1\xba\xdc$p\xc1\x08\'w\x0522I\xa7A\xbb\x82\xde`\xae\x0b3\xeb8\xc6\xc7\x1e\xe4\x8a\x1d\xa0\\\xb3\xa9\xc0\\{\x82>\x95b\xf0\xce\xaenn$\x1fz\x1e\xa0Y\x83\x9e\xad\x8ex=M[\x8c\xde\xb9\x00\x9eGRL\x84rXd\xf3\x9f\x8cp>*\x87q-\x9e\x85i\x0c\x90Y\xa4\x97\x0c\xd8|\x92LK\x83\xea@}\xc7\x154u\x89f\xb4\x85c\xd3\xdd7\x11\xbaRG\xf4>\xc4\x9c\x1c\xd3I3\xa3\x98\xa7\x9dT\x95\'Kgc\x8d\x90c\xf5\xaak\xa8\x84\xd3\t#\x8f\n\xc4/a\xc7z\x9c\x86\xe2\x0f\xbc\x16R\xc5$\x06"\x8a\x0e\xec{\x9ez\x8fcS\x91\xdcI\nE\x1f\x94\xa7\x95T-\x93\xe9\xf9\xf6\xaa\xd6\x8fgr\xd1\xdd\xb3D\xac\x15\xc4\x9e\x82\x01\xd8O\xb1\xeax\xabLW\x10",o\x17\x98H\x07\x90\x06\xdc\xf2\x17\xe7\x15_\x0c\x92\xc8\x85\xbd\x16\xaa\xf9\x11\xb9\x07\x04\xe4\xe5q\xef\xb7a\xb5U^\x84W(\xa3\xcc\xd3\x80F~65k\xfb\xcd\xba$O\x95v\xd8r\xa0\xe3\x8c\x7f\x8a\x88k\x89\x83${\xccm)\xf3\x17\x90\x01_\x82>=\xe9\x93\xcd\x13"\xa6B*\xe3\x00\xfe\x1c\xf7\x1c{\xd3y\xd8\x97Y\r\xd2\x90W vA\xf9t\xab[\xfe\xad,\x8a\x19@\x01\x02\xe7\xcb`\x06\xf8\x0cI8=\xb6\xfe\x95M\r\xa2\xa99\xe4\xe7\x91\x9f\xa5M\xb7\x9ar\x10\x97*\xa7{d\xe4\xf3\xf9t\xa7\xd1J\x9ez\xae}q\x9c\x13\xee\x01\xe4\xfc\x93P\xa6G\xf2T\xb2\xa1\xd82\x00$\x16S\xfcLG\xb5%$\xcc\x92\x19\xa1!#\x8c\x06\n\xfb\x82\x9c\xf58=I\xa5\x8e\xa0\x96\xcc\xb2`\x91\x94b\xa79\n2I\x00\xfbcs\x9c\xd3f\xdc\xc8\n\xf1\xc8\x07\xb6j\xfe\xd2Hv\x94\x03\x07\xa84\xca\xf2\xed-\x82\xb1\xce\x00\xed\xcfS\xedUa\xa8\xcf\x14\xae\xa6R\x1ed\x18\xdd\xd0d\xe7?\x02\x9e\xdcj\x08\x9bwM\xc7\x98#(pA\x00g8\xfa\xd6\x8f\xff\x00\xa9-\xe7\xb7\xb8ef\x8d\xd3\nK\xe0\x84\'\xee=\xb3\x8a\xaf\x1d9\xd2H\xf2\x03\x03\xbe\xd9\xde\xac0\xddF\xd1\x06\x0b\xc1\x07\x91\xd8\nv%\'j\xe3\x18\xe0f\xab\xb6\x97\xb6\xf8\x99\x07\\\xe4`g \xf6\xa71j!\x94\xee\x84\xa7\xd7\xa7\xeb\xefW\x10u8D1k\xb8R\\c\xd2;\xaf<TYm\x1f[b#\x80{\xfc\xd4\xb3\xb3\x0e\xae0x\xc7\xd6\x9a\xe29\x18\x15n\x87\x19\xa4\x1ay\x18\xab\xa8$r1\xefM\xcc\x92\xc5\xb4`.\xf6\x1f=i\xf7\xb9\x8d\xc8:\x0bF\xbe\xa2NO\xd3\x14\xc8\x81\x87\xf3\x00\xc7a\xc5.\xf3\xc6\x83\x07\xd4s\x8f\x9aj\x80\\1\xca\x8c\x83\xef\xce=\xe8s\t\xe1\x88\xda\x0eG\xe7]\xac\xd1\x16*3\xbfa\xe3\xb9\x15\x0eFF!\x19\xe3\xd0\x0f\xe5\xeeO\xdf\xf6\xa7\xd62\x01![V9\xa4\xaf!\xb6 y\x83\x9e\xd5\x1f\x1e\x9c\xac\xd2,{\x14m\x19?\xc2)K\xbdB\xda\xc4m\xbap\xf2\x10\n\xc7\x91\xb8\x83\xec);\xbb\xb8\x99v\xdb\xab(u\x05\xb9\xc1\x04\xfb\x8f\x8a\xce\xdf\xbfNiei<\xa3"\x01\xaa\x15?\xc4\xc9\x04`\xe35c\x04s\xa2 P\xd8n\x1c\xfe]\xa9\x8e\xa74j\x86\xdfy!\x10s\x802H\xe4\xe3\xe6\xb1\xaf\x18\xc3k3\x86HF\xd1\xc3\x01\xd3\x1f\xf2kY\xbb\x8e\xd6E\xcbL\xd2\xe4\x05`88\xc6+9\xd4\xec\xf2\xf3\xba.\x17\x07hc\xc9\x03\xbdbz\xa4\xb3\x1b\x95\x90\x84\xc1oHV\xd4B\xaf\x1b\xee1\xbe9\xad/M\x8a=\x04z\xb2\x06\xf9\x18\x04\x9a\xf9\xf7R\xf0N\xa7uv\xd2\xe9?\xbcG\xc9\x11\x16\xc1_\x8ej\xf3\xe0\x8f\x01k\xa2Cw\xa9\xea\x12A\x04\'\x9bh\xe4,d\xf8$d\x01\xef\x8ej\xed\xa7@\xf6\xec\xb8\x0c\xa5\xb2\xa8\x00\xceKU\xcd\xe3\x16o\x1d\xbc\x13\x03#/\xab?\x87q\x1d>\xa2\x9c=f\xf2{v\x8c\x85h\xd7\x08\\\x01\xe6e\xb6\\d\xeek\x93t\x9bC&Y3\xab}\x07u\xdb\x9c\xfcRW6p\xa5\xb0HI"=\xab\xec\x00\xa4\xc2\x9d\xd2\x07\xda=\x01A\xff\x00\xd9\xedL\xe5\x9a\xe6$\x95\x03d\x9e\x18\x83\x91\xb8\xff\x00\x9a\x8c\xbb\xd5Dl \x12\x0fH\x01\x80\xe4\x0fqT>\x96\xd4\xc9\x0b\'b\x83\x8c\xef\xcf~*\xc1`\xc0U\xc8 q\xf4\xa5\xb5k\xff\x00.\x14\x85\xa5\x00n\xdb\xb4|w\xaa\x8d\xd6\xd9\x9e?-\x81\x0c\xd9\xc7q\xf5\xa5\xe6\xbb\xb5y$\xb9\x99\xc1@J\xc7\x1a\x9eA\xc7SQ\x11]\xa0#\x8d\xcc[\x8cv\x1e\xf5c\x1cM\xa03\rL\x17\x00\xe4\xec\x07\x1c\xd2\x0ck\xa8\x01\xb6\xfb\xd6\x89\xa4\xc8\xb6\xd6\xdb\xc4~\xb9\x0e\x15\xbb\x00:\xd2\xb3i\xf7\x1a\xa5\xe5\xb5\x940\xb3I!\xdd$\x9dUP\xf7\xa4\xbc7\xa2\xea^"@-XE\n\x1c4\xce\x0e9\xfe_s[\xc7\x87\xb4+-\x1e\xd0Z\xc4\xbb\x9f\xab\xca\xdc\xb3\x9frkO\xe1o\t]u;\x98\xaf.\xa31ZG\xbcy\xc6\\\xf7\xc0\xc7\xefT\x9dk\xadAb\x8d\x0c,\x1e\xe0\x8c\x108_\xaf\xf8\xa3O\xb3\x87M\xd3\xed\xac\xa0@\xab\x12\x05\xc8\x1dO\xbd:Y%\x8c\x0fH"\x9dHQ_c\x1e=\xeb\x92\xa8\x07\x12dW\xb6*,j\xa8\x80*\xa8\x00\x01\xd8\n\xf3\xa2\xc5\xd8\xb3\x1c\x969\'\xdc\x9a\xed%\xca\xe4u\xf6\xa0\xdd\x04\xfcB\xa3n\x1dQr\xad\x83\x9a\x8b\x9e\xfc\x9f\xdd7\xe2#\x83]-\x8e\xf4\x05\xcdO\xb6\xa3\x16q\xde\x93\xfd\xa23\x8cT]\xbc-\x12\x06\x98n\xcfz\xe5\x8a3\x16\r\xc5\x1a\x8d\x18\x15&.\x15\xdf\x8e\r*o\np\xc0T3\x16Nv\x92;\x11J\xc6\xed"\xb7\x19\xa3Q\xae\x90*L\xdd\xa3\x0c\x83LZ\xe9\x0b\x1fY\xfaw\xa6\x8di4\x8d\x94r\xbf\x15\xca\xa1\x8d\x82M\x16\x0ff\xech$\xd0\x00\xf7\xa7\xcbv\xbc\xfa\xbf\xa5(\xb7\xac\x0f\x18"\x98K\x0c\x91\xf3\xb7*}\xab\x85\x8d\xa2\x05\xc6q\xf3FM\x18\x06\xa4\xe7\xbe}\xbe\x80sL\xe3\xd4\x15\xdfc>\xd6\xae#- \xdd\xbc\x0c\xd2R\xdb\x19\x01\xdc\x9b\xcf\xb8\xa0\x93F\x05Jy\xb7\x08F\xc6\x0e)Qzs\x87\x8d\x94\xd5y \x99\x0f\xeegeq\xfc&\xbaY5\x02\xfbd+\xf5#\xadsQ\xf9\xaec\xe9V\x02\xe1\xdb\xd3\x8ek\xbc\x11\xedQ\x9et\x98\xda\xd1\r\xc3\xa1\x14\xaa\xca\xd2\x1d\xa1\xb6\xb0\xeciY\xa3\x14\xb4\x90\xbb\x1c\x87\xc1\xa2\xbc\x0b2\x0c\xb7\x1f=\xa8\xa2\xb9T\xcf!\x9c\x82T\x8a~\x90 Q\xc74\xb1p\xa9\xea\x00T]\xce\xb1knJ\xee\x0c\xfd\x80\xe6\x9b\xc2\xaf&\xbb\x92{S\xd6\x1b\x08\x1d\x05#$\xf0\xc6\tB\x19\xaa\xbbu\x7fw8\xdf\x8f.>\xf9\xebU\x1d[\xc6\xba6\x8e\x08\xfb\xc2\xbc\xa0r\xa0\xf3\x9aK8A\x9e\xd4\x00X\xe0sS\x9a\xfe\xabs\x14n\xe5\xc2 \x1dk\x10\xd7\xbe\xd1m,D\x8a\xaf\xbd\xea\x9f\xe3o\xb4]GY\x91\xe1\xb6%"\xe9\x9a\xcb,\xb4\xbdCX\xba\x08\x81\xdc\xb1\xe5\xba\xd4fmM\xa89\x0b\xf3O*``\x8c\x9a\xb2\xea\xff\x00h:\xce\xad\x98-\xdd\xc0n\x00Zq\xe1\x8f\x04j\xfa\xb5\xc2\xcfu\xb8+\x1c\xe0\xd6\x95\xe1o\xb3\xfbM5Rk\xc4R\xf8\xcf#\x9a\xd3\xe1\xba\xb3\xb3\x8c\xacH\x14\x0e\x06\x074\xd9\x98g\x9d\xbd\xcd/F8\x15\x15\xa5\xf8n\xcfJ\x81T"\xb3\x002j\xc7oz\xb6\xff\x00\xba\x8c\x0c\xf6\x15\x16\xb3\xdc\xdd\xb11\xa9Pz\x13Nm\x16\xda\xdd\x98\xcaw?z\x8c\xd3\x00\xc0/4\xea\xc7\xb6\xf52\x8b+\x90\xee\xd9\xcfjy#\xc8\xa86\x8es\xde\x99}\xe4\xbe\xdf.</\xbfO\xebSpM\x06\xd5\xdc\x83\x8f\x8a\x16=d\xe5\xeb\xa5\xb4\x81\x85\xa4\xedM\xd3\x0c\xb7\x03\x8a\x96K\x91\x16C\x1c\x9fzlu\x0bd\xe3\x1d)\x9c\x9f\xf5yu\xf4\xa8\xa9*4\x0fKd\xd3G\xd4w\x18\x14\xfeK\xc0\xc0\x9d\xdd)!\xa8\xc2\xa3\xd6\xc3\x15\x15\x10\x91X\xa0]\xc0\xf7\xa7\r\xa6!_2OH\xf9\xa3S\xb7\x02\xba\x15\x07&\xa5\x1a\xf6\xd1\xa3%FMF\x89\x18\x9c\x91\xb5A\xe2\x94C\x14cdQn\'\xa7\x195\xea\xd9J2\xf3\xb0PO\x03\xa9\xae\x9dG\x1f\xda\xba4\x8c\xd4\x9d\xb5\xd4L\x15\x00\xcf\xf7\xa9\x84\x8d6\xe6\xa3mm\xe1@6\x8c\x9a\x93\x8e"I\xdcq\x8e\x82\x9e\\\xe3|S,\x06v\xae\xbc\xbd\xc3\x81U?\x11\xf8J\xcf\xc41*\xdc\xae\xd7_\xc3 \xea*\xe6$\x8e%\xe4\x8c\xd7\x12\xcc\x00\x0c\xc0b\xb9=\xbd\xbd\xdc-\x0c\xea\x19\x1b\x91\xc7\xf4\xa29e\xb7\x91d\x89\x8a\xb0\xef_&\xf8\xb7\xec\xcbR\xb3\x92Cl\x8d,k\x82\xae\x07Q\xf3X\xd5\xd5\xa4\xf6S\xc9\xe6B\xc5\xa38a\xd2\xbfCg\xbb\xb7t\xda\xe0\x15=\xb1\xc5g\x9a\xff\x00\x86<+\xaa\xca\xf2\xddXE\x96\x1c\xba\xfaH\xc7\xd2\xa8_\xc3o\x13\x1f\xc2\xdd+G\xda99\x1f\x1a\xaa\xdd:\xd1`\x04\xf0\x90\xdd\xd9\x7f\xc5|sk\xac\\\xdb\x90\xd8\xd9\xb5\xc3(\xcf\x00\x8e\xf5m>(\x83P\x0b\xeb);\xa9\x0f\xce\x07#\x18\xad?Y\xfb\x1d\xd2/\xd9f\xd3/^\x15\xc7*\xdc\xae*\x93\xae\xfd\x91\x1b\x18CZ\xeaj\xcc\xab\xc8#\x1e\xaf\x8a\x8e\xfd&\xedAW\xb5$(\xe50F\xfe\xd4\xfau(\t\x05f\xdc\x9e\x0e\xc6\x98h\xda\xc4ZD\xa2;\x94\x0f\x00\xc9\x04\xb7\\\x8e\x8d\xf0i\xe06\x9a\x9cB\xf2\x19#\x89\x89"E\x1d2;\x8c\xf6\xac\xabX\xd2\xbcW\xa5D\xa2H\xd5\xe3\xdd\xb4s\x9c\x93\xefU\x93\xa9j\xd6\x88\x0cv\xef\x0c\xb1\x928n\x0f\xbf\x15\x0en\x88\xd2(S\xe9a\xdc\xec@\xf9\xcfj\x99\x17P\nr\x0eA\xfb\x8a\xda\xe6\xba\x8e\x0bV\t1br\x08\x0b\xc0\'\xa8&\x9d\xc1y\x11\xb7\x18\xe4\x807\x82y\xc7\xbf\xd2\xb2;?\x1d\xdcZ@\x8b{`\xb2nR\xb2\x14\xc0\'\xdb=\xaa_J\xf1E\x9e\xa93Cj]fe\x05a\x93\xf8\xb1\xd4)\xaa\xab\x9e\x85<q\xb3\xe8\xd4\xa0\xe4\xb2\xee*\xc6\x0e\xa3\x1b\x95R\xd8\'\x8c\xd6\x9a.\xd1\xe3\x90\xa5\xba\x94\x1bV6S\x9c}~\xb5)\x00G\x88JT\x9d\xaew\x02zc\xb0\xaa\x15\x8e\xb4\x90HC\x03\x0b0 \x8e\xbd\xfej\xc4\xba\xb4\r\x0c\x01\xa5\x19-\xeb `\x1e\xc3&\xa8.,\xe5R\x00\x8c\xe3<\xf3V\x91\xca\x8c9\xab\x8b\xcb\x1c\xf0\x18\xe3\x85\x17$2\x91\xca\xe4\x7f\x8a\xe60\xcd\x10\xca\x96F\xe0\x82\xb9\xc7\xc8\xaa\xb4w\xf03J\x04\x85OU^\xfc{\n\x94\x8fXH\x95\x17\xcc\xf2\xdb\xca\xc2\x02:\xb1\xfeo\x93U\xefm2\xe0\x05<\xfb{\xd4\x90T\xadKD|\xe6\x98\x96\x0c3\xe8\xff\x00n\xde\xd4\xaaB\xe6(\xe4\xc6\x0e\xe3\x9d\xbdO\xfe{\xd3+K\xa9S#b\x00\x10\x16$\x0fQ<\xd4\xa5\xad\xcaJ6\xf0\x01 ol\x1e\x9c\x8cc\xf4\xa8\x92jM^\x90F6\xa5\xe8\xc8\x14\xde\x1b\xd8N\xa8\x96,\xbb\xd8\xa6\xe2\x17\x83\x903\x8a\x9c\x87&\x1f0\xa8U\x0e\x01\xe7\x80I\xf6\xfc\xb9\xa6m\x1d\xb47\xcfu\x1e\x01X\xb68\xc8$\x82{\x9aqq-\x9cQFB\xb2\xbc\xcd\xfb\xa5\xed\xbb\x19\xc1\xeb\xc50\xec\x8c#\t\x1b\x1fN\xfb\xff\x007\x7f\xb5(!\x04\xea8\x19\xe7\xe2\x9d\x89\x86d\x8d\xa2,\x8d\xc8_\xe9\xc14\xe5b\x8c7\xa4\x92\tR>\x87\xde\xbc\xb4\xfb\x94N\xd0^\xab\xe5\xe2;fRHVnT\xed\xf6\xeci\xf4\xb2D#\xb5\t,l\x98l\x81\xc9\x04\xfb7p)\x89#"/3Z\xef\x9c\x00ps\xecA\xf8\xa7\x14\xfa\xb4\x85o\x9aR\xd0*\\\xaa\xec\x08\xae\x8e\x8e[\x9e]q\x9f\x8a\xf01\xb62\xe5\x14\xb2\x95#\xbes\xd7\x8e\xd8\xa4L\xc1\'A\x82v\xe0\x8c\xf4\xa9\x07c{g6\xdd\xbekaS\x1e\x9fP\xe9\x9f\xca\xa3a\x9c\x05?\xcb\x93\x828\xe3s\xfaR\xff\x00)\xce2\x0e\x06i\xf5\x96\xa5\x04\xc6\x08\xcc\x1e\xa5;\x99\xba\xe4S\x8b\xa7Yc*\xee\xa5\x08\xf4\x91\xd0\xf3\xda\xabP\xc0\xfe\\d\xb8G<\x13\xb7\xa0\x07\x91\xf1V\x19\xf4\x99m\xed\xad\xe5\x17QI\x1c\xbe\xb0s\x81\xb4pz\xfbw\xa7\xc4\xd7\x12\xc3 D\\D\x149\x18\x03\x1b(\xd4;\xff\x00\x9am\xd2\x18\xdd\t|j>\x9c\xe4\xef\xc9\xc1\xa5\xf4\xe8l\xa3\x80\xc6\xd2\xb9\x97~\xe8\xf1\x9d\xa0\xe3\x03\x07\xf9\xaa2\xea\xd9\x91\x8f$\xfd:u\xf9\xef\xefO.gXf}\x8a\x19\x1b\x1b\x0f|\x0e8\xf7\xa97\x96\xde8\xe2\x92\x00\xfeC\x05.\xae9\xdd\xd0\x8c\xd74\x0b\x98\x8a\xb1\x89\x05\xbe\x01p\x0e\xa2\xa4\xe38<\xfc\x9fj@f\x8d\xc3\x00\xcd\xe6o\x83\xc6}\xaa\xb1\x1d\xdb\xa4\x9b]\xb1\x9e\x84\x0e~\xb5n\xd3\xb5+\x9f(\xce\xb3\x90\xa8\xb8\x19s\xd7\xdf\x19\xaa\xd4\xe2\xdeFq\x82\xa07\xe2\xc0m\xa3\xaf8\xa4\xe3m\x80\x88\xf1\xb7<\x1cd\x1cTH\'{)<\xd4f\x04\x83\xf9\x1bH\xc8\xd8\x1e7\xdfz~h#\xb9M%@\xe3\x91\x9d\xaa\xf9\r\xd9\x92\'x\x9c\x03&Ap\xde\xac\x9e\xff\x00Jf\x9aQU\x95\x98\x00\xa1H\x04\xf3\x92O\'\x9e\xf5\x0bix\xf6\xa5\xd8\xa0m\xe9\xc0>\xf9\xceqN\xac\xf5iCli_,\xc5\xb7\x1eHo\xfe\xea\xb0\x17\xd6\x97\x11\xda\xfe%\x9d\xd9Cz\x7f\x947\x19<s\xcf\xf7\xaa\xd6\xb4\x9e#!\x87\x00m\xbfr?\xe2\x9c^Y\xb4Z|\x0c\xb2\xb4\x85\x0f\t\x8c\x80\t\xe7\xf2\xa8\xa8\x88fth\x8eA\xc8\xc1\xcf\xe8\rXN\xa0dy\x12H\xb6\xf0\xa0\x01\xf8\x07\x18?@j7l\xb3\xb4\x8f\x1d\xa9E-\xe9$\xf5\x03\x8e+\xb7\xb0\xda\xc8bx\x1c\xb8\x08#x\xf4\xb1\'F\xdbg$};R\xa0\x92@\x8c\xb2\x807\xd4\x1b \x0fV\xf5\xcc)#\x08\xd7\xc8 1\xc0s\xd0\x1c\xfd)\x18\xae\xe0\x99\xe4V\x95\x90\xe3n\xf3\x18!\xbf\xe0|\xd4\x94\x16\x82\xe3n\xe9pT\x10\xcaXzA8\x19\x14\x9c\xc9f\x04K\x1c\x07sI\xe5\x8c\r\x98#\xdb=\xbd\xa9\xe3f\xcbk\x1c\xab\x8d\x94`H\xc7\r\xb60\x02`\xe4g\xf7\xa4\xf9\xa0\xc8W\x7f\xb0\xe3\xf5\xa4V9\xc4R\xb2\xce\xcc\xd1\xbe\xdc\x1c\x11\x86\xe9\x8c\xd2\xb3(.\xb8e=r\x8b\xf8N;\x8f\xf8\xa9I\xa2\x02\xdf\x02x\xc6T\x068^H\xe3\x9f\x9cS\tm$\x17\x05\n\x08\xdd\x88\n\x14eNG\x07\x8aE\xe5\x9c\x90\xa2\xa7\x94\xee\xaf\xe5\x82ud\x02s\x8e\xe4\x03\x81\x8d\xf9\xa4$\xea\xe7%\x80\xc6q\xb7\xd2\xb9\x12\xc0b\xc4s\xfa\xf2W*9+\xdf4\xe5\x08\x0e\xac#\x1b\x90\x01\x81\xc9$v pj:\xea8\xe2\xf4\xee+;\x12\x1e0=#\x07\x18\xcd9\xb0\x92N\x02"\x89#9\x1c\xe0s\xef\xf4\xa8\xd1\xb3\x0b\xa5\x85\xd1C\r8\x085\x91\x8f\x8d\xfdx\xe4l{R\x9d\x07\x94]I \xe7\x9d\xbf\x7fjx\xd7\x82)7\xa2\xbc!\xf9\xc0<1\xff\x00\x15\xe3\xdf\\\xc7\x14\xbb%\xcf\xab\xd8dc\xa1\x19\x14\xdex\x0c\xc0\x98\x15\x94"\x02\xe8\xc7-\xbb\xb9\x04\xf5Zn\x8c\x8d\xe5\xab\xa3\x1c\x822\xa7\x1c\x93]\x9a\xe2\xf2)$O=\xa3\x0c\t\x89\xd0\x95RX\xe9b4\xf1\xb9\xe3\x1f\xbd4\xb1D\xca\x0e\x80\xc4\x1fR\x9c\x13\xb6\xe39\xa5\xff\x00j]\x9c\x13\x0c.\xa9\x82\xd9L\x1c\xfb\xe4w\xae\x06\xa2\xd2<\x9em\xcf\xa1\xd4\xee\xdf\xd4g\xb0\x14\xd2[b%\x9dD\xac\xea\x01\x1b\x90\xe3?\xf2+\x9bm=\x1cK&2\xa80rx\xc9\xe8sQ\xd2~\xa2]"w\x91\xd9Y\xb5\x86;\x1d\x19\x04\x12\xbc\x8cT\x91\x15\xa0B\xd8\x03a\x8c\x0f\x7f\xafzqk"1`\xad\xe6\xb0O\xdd\x8ct\xfc\xaan=\x91F\xc7\xcbm\xd9\xda\xccFB\xa9\xa8\xaf\xbbK\x0b\x89`&,\x81\xb8\xf08\xc7\xf0\x93\xd74\xb9\x9a]\x8d\x10VU*7/\\\xed\xfag\x91R\xad\xc0\xb2V\x12\xa3y\x8a\x08\x8f\xd3\x95%\xb8\xc1;\xef\xc6\xfc\n\x8d:\xac\xa4\x14a\xa4\xe3;\xee=\xf8\xa9F\x08\xe7\x82@\xdb\xfe\xa09\xfc?\x15\xc7\x9f\xe5\x82\x82%\x90\xfe=\xd8\xe7\x03\xbe*#2:\xee\x13\xa1\xc1\xc1F%N\x07\xc59\x96c#\x17g(7\x10\xe4\x9c\x15$\x0cq\xc7\x15*;\xb3).\x89\xe5\xb3`\xaf\xe5:\x83lp8\x18\xfdi\x8f#\x04\x02r7\xcf;\x11R\x16\xd7Re\xb7K\xe5\xee\x07n\xd1\xce;Q\xf7\xa59o$1\x89I$\x9eO5\x11#J\xa0\xa3\xa0\x12rC\x02\x00\xc2\xd4;_\xc9\x1c\xd1+F1$\x9bX\xfb/s\xc7\xf4\x14\xe7\xe3\xe6\x85bGWlj\xdd\xc6\xf9\x18;\xea\x18\x188\xa7\x12\xc8I\xa9\x94\x0f\xa0\xff\x00\x8a\xb1\x9b\xdf\xbb\xde\xd8\xbc\xf2\x06\x86f\xc7\x07\x9c\x91\x90\x07\xd2\xba\xd6\xe6\xb1\xbf\xd2g\xb3\xd4Q"\xb7\x99<\x99X\x92\xa7\x04\xe4\x00\xc39\xaa^\xb7\xae\xc3ol\xb8\x86d\x11\xb3\xccG\xa6_\xc01\x85n\xcc@\xe9\xda\x96\xd3\xf5-?\xc4:M\xb5\xee\xd2\xb3\t|\xfb\x7f5K\x05\xc0*APy\xc8\xad\r\x85\xe7\x90\xed\x12\\<h\xe5\xcc\x85\x8f\xa4\xb6\xc7J\xb1\x1b\xe4\r\xbe\xf5\xc9,\xb2"\x95\xa3\xddH\x03\x1c\x8c\x1d\x8e*\xba\xda\'\xfe\x97\xbd\xd0\xf5=:\xff\x00\xce\xb6\xb0\xb6h\xe5\x89\xf9\x96F\x93 <Y\xce\x08\'\x8c\x9c\n\x83\xf1\x15\xfd\xbf\x885\x1d\x14G#\xc9\x1b\xc8\xcf<l0\x14*\x16\xe8?\x8c\x9cR~(\xd5\x03\xd8[%\xbd\xe4\xa6tB\x8d\x0cj\xa1\xdd\x00\xd8\xdd3\x85\xdd\xda\xa04[\x93a\xfb=\xaf\x96<O3\\H\xf9;\xc9a\x85\x1b\xbe\x8b\xd0T\xdbH\xbf\x11qnfm1DK\xe9\x07!\x8e~\xbe\xde\xf5m\n\x14\x06M\xdaM:s\xdc\n\x98\x8bXhDv\x06E\xdb,\xde\xa6\xc1\xc6\t\xeaGf\xe7\x81U\rV\xf5V\xe6f\x8e\x19&\xf2\xa7%0\x00g\xd9\xc05\'=\xb4\xd3\xdf\x99,n\xce%\x90\xb9\x92E\x03\'\xb0\xff\x00\xbd>\xd34qq\xa8\xbc\x1bV\xf2t\x05IF\x1bd\x04n g\x8e\xdfZfH\xe3\xba\xbd\x11F\xa3\xd4v\xdc\x96\xc6\xf8\x18\x1d\xb2j\xc8\xb8\x866rq\xb6O\xb7\xd7z\xac\xad\xdc\x17\x91\xef\nq\x13\x86\xd8y\xcb\xe3\x91\xfdz\x8a\x94\xb5E\xb8\xdf?\xdeO\x9aCE\x10\xdeTF\xcc:\x00:\x9f\x92{U\xac\xe8\xdaF\x8f\xa4\xdf\\^\xe8M\x14\xd2\xdc\x08b\x80\x11\xb7\xcd\x90\x10\x08\xe9\x95Q\xea\xf7&\xab7\xb1\xc2\xec\x90\xf9\x11\x99c\x00\xa1\xce\xc5\xc8\xe01\xc7\'\xe4\xe0\xd5\x9c\xfd1l\x94j\x9dI\x1b\x15#8\x07a\x90x\'\xb5G\x82\xf3\xf1\x05\xb4\x83\x80va\xc1<\xed\x8ejJ\xde+k\x7f"\xe6\xe6IY\xe2\x94y\xb6\xe8T\x02\x1b\xae\x08\xcfL\xf5\xedM\xf5\x18\x0c\xf7s,\x17\x18\xb1g\x06D\x906\\\x0e\x83 \x0f\xeb\x8c\xf4\xa89Z\xf5\xc3\x19-\x9a\x15]\xcc.\x14n]\xa9\xc9\x04\x83\xd7\x9e\x94\xe2\xc7V\xb8\x96(\xe78\xb6\xc3\x92"\xb8B\xed(F\x00*c\x80\x08\xc9\xc9\xf6\xa8\x13J\xebnTD\xba\xdb\'\xd4\x02\x9e2\x0e~q\xb5JR\xba\x89\xd6Xq\xb1\xcf\x7fjqe\x7fss\xab\xddG.\xa2K\x06Ua\x1f\xe1\xc6v\x85\xc9\xe3>\xf5\xb4Gcqa\xa3\xdd]j\x93\xc0\xbeT\xbb"\'#\xd3\xc7U\x19$\x8es\x8a\xc9\xacm\xf5\x1dH\xda\xdd\xa4\n\x87\xcf\xf5\xc2\xca\xa46N@9\xfe\x0eNq\xcekq\xd7u\xcd\x1e\x1d\x1d\x12\xd1_\xce$4;\xb2\n\x149$\x1e\xa3\x1d\xb3LGaa,S\xcdu4j\x04j\xda\x0e2r\x08\xc8#\x9c\x11U\x9dBy\xc4\x96\xd1C\x13\x10\xcf\xbb(\xe0\x0c~\x94\xb5\xcb\xdb\xd9\xc5\xff\x00K\n)Et\xdf\x8fQ\xdd\xc1\xceNMF\xad\xf6d\x85e\x8c+;\x10\x83\x07\x07h\xc9\xe4|{\xd4dZ\x9d\xad\xcd\x9c\xae%\x82FS\xba\xe2gr\nn\x1b\xb0\x07\xfb\x8dI=\xe7\x9fn\xd1\xc5 \x85C\x06H\xd4\xef\xf3I\x18<\xf65\x9f\xbas#\xa12,Qy\x19\x8e-\x03 \xeeFA\xfc\xbb\x0f\xde\xa3\xa4Z\x14\x82\x85\x9bY\x0c\xe4\xefR77Dd\xc3\x94<`\x9e\xa0\x11\xd3\x15\xdd\x933\xbcjYB\x15\xf5c=3\xce\xef|Uz)\x9d\xe4\x91\x01\xdcFAU\x03%\x87@\x0fNjV\x0b\x87Cq\xb2%\xd9\xb7$\x9e\xc0\x1e\xe7\xb5S4\xcf%\xd2\xcd!\xd3\x19\'\x01A\xc6F\xe4`\x0c\xf1\x8c\xfcW$\xb7\xd1\x19E\x038\x1b\x9f\xd2\xac\xf7[\xe2\x12\xef(\xb12*\xa0Q\xd5\x01\xcfZ\x8ci\xe2hY\xa7\xb8I\x10\x10\x107P\x07l\x0f\xf1Q\x92\xcb3/\x9b!eX\xc0\xe4\xfd8\x00\x1a\xa5^_\x9c\xdcJ\xef!\n\xc4\xca\xc1}(\x0f\xb5J\x9f\xa8=\xcc\xc4\xc7l\xca\xac\xa4*;\x16\x0c\t\'$p@\'a\x8an\xd7\xa7\xeb\x18i@\xc1\x19 w\xff\x005t7\xef5\xdb\xbc\x19\xc8l\x82q\x81\x8f|\xfd)[\x9dON\xbd\xbd!dP\xcf\xd7,\x02\x82\x06}$u\xf8\xaf\x9c5/\x1d\xde\\\xcd\xf7m(O\x0cr)\x8d\xb3\xd6D\x07\xa9\x1fZi\xa4\xea\xb3\xd88ff\xbe\x91\x9fc#\xb1\xdb\x11Q\x9d\xcc\x0f^\x0fj\x9b\x17M\xbbKi\xbc\xf0\x8d\xe7\xca&h\x9drA\xdf89\xdbc\xde\xac?\x01\x16\xa0\xca\xd8\xd2\x9aT\x8f\xef_Wh\xf7r\xc7s\x11\xc0\xdc\xa3\x0f\xb8\xf2\x10v#\xe2\xa7\x9ahn0^S\xe5\x90YO\xbe{\xa8\x1d@\xaf\x9dt\xaf\x10\xea\xd2\xb1\xb4\n\x136\xc7\xef1\x95 e\x88f\x00\xae\x08\xcf\x04g\xbdj\xd6\xb7\xca\x16\xde\x18\x968a\x8e,\t\x18\xfa\x8f\xc7Z\xba\xb4\xbc\x8e\xc2\xd9\xac\xc4\xaf2.\x08V\x18\x19\xc0\x18\xdblm\x9c\x93T\x97\x9d<\xf9\xbeg\xa4\x1e==\x85^>\xfa\xb6\xf2y$zA\xe6F\xcf\x19\xa8\xf9\xf5\x99]\xee#\x8e\xdc\xca\x13\x80\xea1\xb4\xf5\xfc\xe93u\x04 -\xcd\xecO3"b69~z`SK\xdb\xf4\xb5In`\x90\x98\xcf\xaaTe\xc2\xf4\xe7\x93\xf4\xabI\xefeHJ\xa5\xd7\x95\xbeJ\x8d%\xd50p0Oo\xd6\xab#\xb6FpL:\x8f\x199\xc1>\xf4\xf9nd\x80K\x03\xe32F\n\xe3\xd8\xf7?Je\x0c\xb3=\xf2H\xb7.\x89\xb4.\xee\xbb\x94\x1cU:-~\xcfT\xbb\x96T\xb9\xda\xb6\xfc\x1d\xbf\xa8\xc0\xee\x05L\x8dr\xda\x0bK\x84Y\x0b9\nU[\xa2\x83\xc9?\xf6\xac\xdd\xc7U\x8d\xe4\xf2\xe4\x95\xd68\x1bR\x1dgQ+\xea\x03b\x0e\xfcU\x9a\xd8\xc8\xab\xe8\x883H\x00l\r\x86v\xab&\xa1\xa5\xc5$\xcdw\x16\x0c\x81\xb7\xb6\xf5\xdc\x19@\xe3\x19\xf6\xa8;\x9b\xf7\x99dy\xa5\x19$\xa8\xe3\x19\x1d{v\xaa\x8e\xa3\xe2i\xad\xde?\xdf\xe1\x8f\xe0\xec1\xee\x05BM\xaf\xfd\xee@d\x95\x8b\xaa\xe0\xe4\x8e\xa7\xfb\n\xad\xbd\xbe\x17\x8d$\x96\xf6\xb2B$b]5z$\'\xf9\x88\x07\x91S\xedzd\xc8\xa9\xe7H\xad\xa4aN=@{T\xb6\xa3\xab}\xdeI\x02H\x1f\xcc\xc2\xed\x07\xfbg\xb5C\xfe\xdf\x95\xa3\x9b\xccE%\x8f\xa4\x11\xd7=\x80\xf6\x15V\xbd\xd5\xa0\x83QP\xac\xac\xfb\xf0\x18\x1fH\x03\xa7_\x8a\xab]\xf8\x8f|\x93NgX\xcb\x13\xb3\xdf\x0b\xfd\xbe(\xb7\xe9\xf3\xbf\x08F\xa1\xbe\xfbnx\x1c\xedVL\xd0F\x00\xdbj\xd5c\xd5cWI^Q\xe6\x81\x858\xc0P\x7f\x94{\xfc\xd7\x17\xbe$0\xc7\x16\xc06\x86\xca\xf3\x92q\xd4\xb5`\xf7^10<\xb2\xc8\xc4t\x19\xe9\x83\xf2;T\x1c\xfe=\xfb\xcb\xaa\xee\xdd\xb7</\xb5Z\xdb\xf8j\xfeF\xca\xab\xb0o\xcd\x8f\xd6\xa1K\x7fi\x1f\xe6u\x18\xe35\xb8\xdek\xec#\x12\xc98\x8dd%\x94\x0e\x01\x1d\xcf\xfcURo\x11\xc0d\xff\x00P\x05\x07\x81\xdd\xbe\xb5\x8bk~9\xbc\x02O&\xd1\xf9\x18Q\xd8\n\xeb\xc27\x96\xfa\xcc\xea.\xc4\x92N\xdcm\xdd\xb1P\xf6\'\xde\xb4\x96>\n\xb8e-*\x84\xcf\xbf\xcdS\xddx\x86\xd5\x0e\x98\xd8\xbe=\x85i\xfa\xb7\x8a\xa0\x99\xd5b\x8c+\x03\x80\x8b\xc0\x03\xdf5q\xf0\xb6\x96\xfa\xb1\x82\xe6\xe5\xda+L\xfa\xdb\xa1c\xec>>j>\xdbHYbX\'\xd2\xed\xb6\xb2\x98\xcc\xa0a\xf1\xee\rO\xe9\x8f\xa9xV\x00\xad\x00\xbf\xd2\xff\x00\x8d\x80&h\x17\xe5\x7f\x88\n\xd2ZxV\xc6)\x15\xae\x18H\x14\xe7@\xe0\x9f\x9f\x8a\xa5\xba\xeb\x972!\x10!Bv\xd4{}+\xe8\r?]\xb1\xb6\xb6\x86\xce\xd8\x88\x965\xda\xa1G\x18\x14\xa5\x87\x8aV\x1db;k\x8b\xa0\xa2S\x85\'\xa1\xaaV\x93w\xa6jVp\xdc\xd9<r\xc5/*\xcb\xc8\xfa}jnKKI\xd3\x98\x90\xf1\xe9=\xc1\xadI\x94\xa8P\x9aUW\x18\x03a\x8fj\xcey9,_Qf\xe4\x9d\xf7\xf7\xadF\xea\xe8E*\xef`\xc2_\xc3\x8e\xf5\x18\xf2\x98\xe5\xdf\x0b1\x04\xe0\xa1\xe9T\x8d?^\x97N\x94[\xeb\x0c\xa6\x05 As\xddO\xb3\x7f\xcd_\'\x99c\x8e\x19\x03F\xd0\xcb\xf8e^FOL\xe2\x9dYD\x80\x90q\x8f\xd4S-\x11B\x01\x1c\xf7\xf7\xa4\xdbQ\x829\x15nP\xa6\xf3\x80O*M{qa\x04\xa4K\x1bm8\xc8\xc5!)iT\xfa\x91\xc8\xfe\x16\x1c\x1a\x8e\x17W\xd6/\xba\xde?21\x8f6\xd9\xbf\x10\x1e\xf1\x9e\xff\x00J\xe9q\xfc\xdb\x8a@V\xce\xd53\x1d\xf1\x8e?.T\'\x1d+\x91l\xd2\xe5\xc1\xc2\x11\xce)\x87\xed[[\xd8|\xc8\x8b{\x15#\x0c\xa7\xd8\x83\xd0\xd3\x04\xbd\xbcIJ \x90+~\x16Q\xfd\xeb\xba\xd7m\xf2>(\n\xdb\xed\x8a\xb6Z\xc0QLr0\xf2\xff\x00\x85\xff\x00\xc1\xa7\x06\xc9\xa2\xe52A\xf6\xaa\xc5\xc9\xbae\xf4\xce\xd1t\x0e\x07!\xbd\xf2\r\x10\x1dE \x0b\x05\xdb\x88\xd8zX\xfa\x94})a\x87\x1aM$\xa9\xe7P\xab,k!\'pa\x8aQ\xe4^\x8f\x1b8\xf6"\xa1V\xf6\xea\xd9A\xbb,\xab\x8en\x13\xd5\x1f\xff\x00p\xea\xb5$%\xba*\x8e\xae\xac\x84d\x1e\xaa\xc2\x94\x08\xa4\x91Jm`\x0b\xc4\xac\xcb\xde6\xff\x00\x14\x81\x8e+\x80Ld\xab\x03\xccm\xc1\xfd)u\xbee]\xd9\x18\xf9\x1d\x08\xed\\\xddKmp#\xca\xfa\xd5\x81\xc8\xe1\x81\xf7\x15\xdd\xb1\\\xde\x9b\xfd\xdaE\xe9\x0f\x1d\xc7\xb5u\x13\xb2\x16\x19>\x9e\xc6\x9c\xa4\xe4\xaa\x86m\xe38\xdc\xbc0\xfa\x8a\xe2x\xf7F]x#\xa3g\x00\xfc\x1fj\x07\xc5v\x90\x9a4o[\x12\x08\xee84\xd6Q#\xe0\xa1\xde\x98\xe4\x1e\xbf\x95HGq\xe7[\x871\x80T\xe0\x83\x8f\xf1J\x8f$o\xdd\x06=9\xe2\xbb\xcds\x8a\x85\xc4\xa8\x07\x93"\xb1\xcf!\x8e1I\xad\xf12\x14\x9e\x10\xa7\xb1\xcf\x06\x9c\\\x8b)\xd5\x19RB\xc4\xe02\xa9\x07\x1e\xf4Edb\xff\x00\xe9\x99\x17n=\\\x9f\xce\x93\xbeF)[cz[\xf7\xd2(Q+ \xec\x0f"\x8a\xf3\xc8\x95W\xfe\x98\xfc\x84|\x94\xfa\x0e\xe2\x8a\xee>\xb5\xcc\xd5\x0e\xfbS\x9ap\x8b\x1e\x04dz\xa4\xcfj\xae_j\x1aV\x84~\xf14\xea\xdb\x86r\xc6\xb0O\x14\xfd\xaa\x9bW\xb8\xb4\xb5BS>\x8c\x1a\xcbu\x7f\x12kz\xf4q\xad\xcc\xe5c\xec\x01\xa8E\xc9l\xa8\xcf\xb14\xfa\xc7\xb7\xa8\xe3\xe2\xb5\xcf\x1b}\xacMxd\xb5\xd2\xf2\x07B\xc2\xb1Cuyq?\x9bq+I#\x9f\xc29\xe6\xa44m\x1e\xfbU\x99-lm\x9eV$\x06\x93\x1c/\xd4\xd7\xd0~\x18\xfb3\xd3t\x9d\xb3\xdf\x11,\xf8\x07\xd7\xd0\x1aC6y\xdc\x9aX\xc2\x8c\x01\x81\xefYf\x81\xe0\x1dO]d\x9a\xe1L0\xb68<\x12+m\xd2\xfc!\xa7h\x10\xa9H\x81`\x06[\x1c\xe6\xad\xd1\xad\xbd\xbb*\xa1P\x98\xe0\x8e\x94\xda\xfa\xf3\x18H\xc1l\xf75\x1d\xb0\xc0\xean;R\x86r0**\\I\x11\x90\xf0\xa3\x80=\xe9+h\x84\xad\xfe\x97^\x82\xbc\x16\x97W\x0c\xca\x98\'9#9\xc5K[Z<8f|0\xc0\x00SYRF\x91\x9f\x9aw\x04\r\xeb\xb4\xb3\x99\xc8T\x1bF:\np\x96\xb6\xd10_/\xcc\x93\xfaf\xa4m\xec\xef\x9e\x16\x92I\x964\xcfq\xc9\xfaT\xc4Q* \x1e_ t\xee~\xb4\xfaE\xb6q\xfa\xd3L\xfb\x9d\xff\x00J\x8e\x8e\xd9D\x88d\x00(\x19\xda:\xd7\x0f1r\xc2;c\xb0\x1c\x03\xefR\x17\x13Ek$m)T;{\xf3\x93\xec*<\xea\x13\xdc\x92#\xd8\x8a\x0f$\xf1\x81K8\x1bps\\\x1b\xef\xc8\xa8\x82.~\xf8\xc1\xa3\x0202}\xeaL_ P\x8b\x19\xc694\xc2\xed\xe3\xde\xc5fU8\xf7\xe4\xfc\xd3X\xb2\x01av\xac?\xb5!I\\\x8ap\x80\xd8$T\xb1\xbf\x920\xc6;vf\x03\xa5"n\xb5\t\x17\xcc\xb9\x1b#\xf6\xf6\xff\x00\x8a\x81}|o\x92-=\x8d\xec\x89\xf8\xf6\x0fB\x7f\xeen\x94\xefI\x87U\xd6K}\xeeD\xcexE\xc8@?\xcd\x1a\x89\xd8\x13\x93\xd8Q\x80\x06H\x1fz\x97\x8bY\x85A[x\xcb\x7f\xb8\x8e?\xefN\xe2w\xb9\x95d\x9af\xda;v\xa6\x97Q[Y4q4\xbel\xf9\xc2\xc5\x18\xe3\xf3\xc5$\x93I#a\xd0\xb9\x07\xf0G\xf8G\xd4\xd7588c\xf6\xa0\x05#"\xacGSH\x8a\x88\x93\x81\xc6\xee\xc2\x99I\xadJ\x1d\x94\x12[9\xcdD\xce\x97\x12N\x03:\xaa)\xcb*\xf6\xa6\x97\x17\xf6\x96\xf34\xde`dE\xc1\x00\x7fos\\i\x9cw\xc6\xf4\xa5\x8dv\xc8\xcdM\x9dU\xdd\xbc\xc2NGj\x87\xba\xf1K\xca\xed\x14!\xa5o\xc3\xe9\xe8\rB_\xdc\xdc\xea\x92A\x01V\xb2\xb5~v\x8f\xf5d\x03\xdf\xd8R\xe2H\xac\xed\xe3\xb7\x82\xdc\t\x19\x8e\xd4\xfe \x07\xf11\xa6\x0c\xef\x93\xea\xfa\xd3\xa25\xc7\xe5\xa7\xe2\xeaw\xfd\xd4\xd7\x18b3\xb4\x1eE0\xbc\x950\x02\xbb3}j&\xe6W\xb3o=\xa7\x8f\xcdc\xea=\x94|\x9e\xd5]\x97[{\xab\x89 \x85B\xc2\x17\xf7\x92\xf7?\xfbh\x17,\x07&\x95\xe4\xa9<T\x9e\xa1\xae]B\xcbi\x04\xccN2\xc4v\xaa6\xafs\xa8\xb3\x167\x8cS\x1d\xcfzq-\xfd\xb4\x05\xf3\xb9v\xf5\'\x96#\xdc\xd5WW\xd5E\xca:\xc4\xa4c\xa6{S\xc9w!\xc7?\xad%\xad\xd0\x7f(\xcdRu\xfb\xbdR\xe2P\x9fxfU\xedT\x1b\xe9o\x04~^\xd2J\x92j\xfd-\xecR\xc8\xcb\xb4\xb6\xd1\x82\xf8\xc0\'\xe2\xab:\x8d\xcaF\xe9\x1c1y\x936x\xea\x07\xc9\xf6\xa9\x0b31\xdds\xf5\xa6\xcc`\x03\x83\x8f\xa5g\xf7\x8fz\x88A\x04f\xa3#M@\xbaH\xaec+\xca\xb08"\xaf2YH\xc0\xbb\xfa\x98\x9es\xd0}**\xfa\xd1\xc4dF\xd8\xe4nc\xda\x9fW^4.\xfc\xedM20\xdfS~\xb5\x14\xfa\xfe\xbd\xe6\x97}E\xe5*\x7f\x8f\x06\xa6\xa1\xf1\xad\xd4V\xc8\xbeIi\xd7\x1b\x9c\xb7\xa5\xb9\xeaEAM\xa6\xb4@9\xce\x0fA\xdd\xa9\t\xec\x19F\xd01\xc6X\xff\x00\x81M=\x9d\x8c\xc1C\xdb\xa6\xc7;\x0c\x7fJu.\xae\xe2\xd4Vg\xdcw9\xfe\xb5y\xb3\xfbE\xf2\x89\x13\xdaHs\x9c\xedp@\'\xdb5g\xb6\xfbD\xd0\xa6\xc2\xc8\xf3D\xbf\xef\\\x9c\x8f\x91\x9a\xc5\x9a\xcbk*\x8c\xf23\x83\xd7\xebM\x8d\xbb`\x93\xd38\x1f5\n^\x81\xd2\xa7\xdf\xcbt>\xea\xdf\xe75&>\xb5\xd4\xa2\xc7\xa9\x1c|\x8f\xf1\x8a\xfasO\xf1\xf6\x97.\xc0\xfa\xad\xb3\xab\x9d\x88\t\nW\xd8\x10q\xfa\xd5\xe6\xc7Z\xb1+\xfe\xa8\x0f\xbb*W\xd4\x98\x1f#\xfb\xd7\xc4\x850@\xceO\xf6\xa7\x10\xdd\xdd\xda6`\xbb\x9a#\xdbc\x95\xfe\xd5Ou\xe0\xabI\x81\xf2nY\t\xecT\x11\xfbb\xac`\xf1L\xc9\x8f6\xd4\x10;\xabc\xfa\xd7\xdc\xeb\xa8?\xef%_H\xd8H|\x8ct\x07\xbdJ\xc7\xaa\x04\xd3n\x9fk)X|\xc5$\x03\x9f\x8c\x9e\xdc\xf3_\x0eY\xf8\xbf\xc4\x96.\x1a\x1dZ~\x0ev\xb9\xde?F\xcd_\xac\xbe\xdb<W\x00\x1fx\x82\xce\xe4\x04+\xeaM\xb9\xc9\xc9\xce8\xe6\xb3\xf7^\x05\xbf]>SC(\x04\x1d\x98\xa9\xdb\xb6\xf5k\x0f\x8a\xac$\xc8u\x92-\xbb\xaeG\xed_Mi\x9e!\x86\xf3q\x8e\xe4\x02\x14\x06Y\x06\n\x8f\xa9\xed\xc5KGx\xb1\x8b\x89\xb9\x91\x04E\xdc\xa1\xfc\x00\x7f\x11\x03\xb7\xd2\xbee\xb1\xfbb\xb1\x8b{K\xe1\xa4\x8eFP\xbf\xbaeeP\x0e}!\x87\x19\xa9H\xbe\xd74\x03\r\xd4"\xce\xea\x15\x9b\x19\xc8\x07\xea85W?\x84z\x98\x91\xb1\xd3\xe5\xd3\x90\x08\x05X\xe3\xea\xa6\xaca\xeb\xdd1\xd4\x0f\xc6\xc4\x1b\xdc\x82\xbf\xd4W\xd3\xd2\xcc\x1b\x1b\xe5\r\xe9P\x08\x18\x07\x1f\xdf\x8an\xd7R.]d\xf5g*\x7f\x84q\x80N+\x07\xb1\xfbZ\xd1\xa4\x8ax\xbfl:nUQ\xe7F\xeb\xb8\x01\x8c\x83\xc8S\xeej\xc5e\xf6\x81\xa1L\x11c\xd5,\x98\xed\xc1S(\xcf\x1f\xfb\xb1T\xd3\xf8s\xaaB\xccd\xb4\x98\xef\xc9C\xb8\xfd*\xca\x0e\xa3a(\x01.\xe1#<\x07\x15\xb4\xcd\xaa\xc9(G\xc1\xf5*(\xe3\x80@\xe6\x9c\xdb\xebd\x02\xb2o\x9a\x00=\'o\t\x9f\xaf\xd3\x91Y\x8c\x1e*\xb1\x91\x83\x0b\xb8\x98.\x19@t`@\x1d84\xe2O\x11*$\xae\xb3d\x1c\xe7\x07\xd2~\x9dj\xb5\xfau\xc9w\xd5\x13e\xcf\xab=\xf3S?\x82T\x00F\x07\x15\xa8[\xdf\x86T*\xbc+d\xcazg<\x11\x9e\x83\xe2\x9e\xc9u}2<e<\xd1\xe7\x02\xde\xad\xa4{\x00\x17\xaek\x14\x1a\xbd\xcd\xd1\xf3\x16\xfb\xd0H>Z\x90\x07\xb7A\xc7\xd6\xaev\xbe \x95\xe11\xcb?\xef\x14\x0c\xb7\xb1=\xb3\x91\x8ai\xecn-\xf5\xfa\xd8\x87\x1a]\x14\x91\xdb\x1b\x8e\xf4\x92\xaa\xc4\x10\x06A\xc8\'r*\xcbwrc,\xb9E#\x0b\x93\xc6jV\xc6\xf1m\xf6\xc7\xf7hd1\xa9V$`\xb0\xceIo\xf0k6\x97Y\x86f\x00\xcc\t\xce\x069\xc1#\x19?\x15!\xfbI\x82\xc3$2z\xb7cy9c\xc6?\xf34\xc4v\xd3\xdb\xe8e\xca6y\xc0\xed\xbfzu\x91\x1dt\xb0\xe7\xff\x00;V\x84\xf7\xa6}\xa1mc\x8d\x01$(\xcepO\xbf\xd6\x9a\xcf\x1d\xcc\x88dH\x9d6\xcb\x8d\xbd\xb1\xd8\xf3\xd4UR\x1d]\xa0\x95dr\x1c\x8e\xe4t\xcfZ\x95]p]\xe2O\xbc\xa8\xc9!\xbad\x0cv\x1f5\x19\xe2\x95\x9aI$\x8f[\x1e\x08\x00\x01\x81\xce\xc3\xf6\xa6\xfc\xa2\x9aB\x00\x07\xceOz\xb0\xa5\xd3\xc8\xe8\x18\xc6<\xb5\xe88\xe9\xfd\xe9\xf0\xbf\x91\xe2\x81E\xccC$\xe3\x8fX\x04\xe4\xe4\x9e\x05U?i\xda\xf9p\x94\x927)&@n\x17i\x1d\xc9\xf9\xed]C\xe2->/1n\xa1;\xd6@\xc2\xe1X\x1ct\xf4\x81\x83\x90~)\xcbt\x98\x87\x1eiVq\xeb\xce\xac\x901\x81\xb7\xd3jn[ppDY\x00\xec0?\xbdh\xb0[,m\xe5\x82\xcf$\xf1\x95\x129\xc7=Fq\xed\x8a\x91\x9a\xc9\xcc\x0bp\xa1$Xs#\x96\x04\x91 \\\xf4\x1d>*\x97\x1e\xa0\x9767rYZ\xcf&\x08h\x94\xe1\xc7\xe2\xe4\x82=\xb1\xd2\x9f\x9dGV\xba\xb4b\xb76\xb6\xf0L\x165\x8c0\\\xae=\xd8\x92H\xf7\xade\xb5\xcc\to,mm#\x06]Q\x88\xbdD\x15\xcf$\x81\xb0#\';\xefT\xb2Z\xce][\xceE\xc3a\xb5\xed\xfd3\xda\x9b^\\Bg\xddl\xac\xe9\xce\xe2G^\xfd\xe9\xcd\xb5\xfc\xa5\xc4\xab<j\xaa\x0eAl\xe3<\x0c\x0e9\xaa\xf2\xea\xb1Gt\xf2\xc7!f\x11\x05,\xb8\x1c\x8e\x0e\x06:\x1aW\xef\x90]E$J\xcbn\x19\xc1Y\x11\x03\x15>\xddzb\xb2\x91\xcb"\\\x19#\x98F\xef!`\xab\xe8PF\xeas\xdb\xe9V\xadk\xfc5S\x19 (\x1a\x8e\xe7~r;\xd4\xbd\xe4\x8a7\xef\x9d\xa4\x07\x94;\x00\xe7\xa1\xa6\x115\xea*\xb3[\x9c6J\xb1\x1c\x1d\xa7\x1cb\x9bIsc\xb8D%d\r \xdaY\x80\xc0\xfe\\\xf4\xa5_U\xb3X\x0c+(PH\xc8,\t\xdd\xf0\x07A\xf3M0\x13<\xf2\xb0\xd2U\x0e\x82\x9a\x9bSgq\xea\xdf\xbf\xda\xba\xb1:\xaa\xa0\x8fVH\xceF0>\xd5-\x06\xaf6\xf7Y\xad\xa2`\xe9\xb7\x0c1\xf4 \xfb\xd3y.\x95\x88\x910\x1f\x8c\xfa\xb208\xe3\x15\x19\x1d\xcc\x130\x1bI=I\xcf<w\xc5+:@\xf0\xb1\xf3V#\xb4\x8fVy\xc7$\xf28\xa6\xe5\xb8\xbc\xb9\x8dRIC\x05b\xcaX\x0c\xe7\x93\x83\x8ek\x9f\x87\x8a7\xcf\x96S8\xce3\x8a\x9a\xb7\x94)E\x05q\xc3d\x03\x83\xcfCR\x93H\xb0M9>S\xc7#\x00cP\n\x03\x8c\x83\x81\xd2\xa9\xd6\xb7W\x8d\x1a\x84\x8d\x9e\x1eDlXm,\xbczs\xedN\x85\xfcI\xb1VM\x8e]\x93\x9cr1\xfc<\xf55*\x0b\xa9m\xe1\xf2\xd9X\x02\xc8\xc1\xb3\x8d \x02\x08\ny\x045G\x96\xcc\x99\x0e\x08;\x10q\xbf\xeb\xed\xc5K^j7\x17K\x1a\xc7.\x11\x14/e\x19\xf6\xedICqqj\xed$\x98\x84\x86E\xdd\xb8a\x83s\x91\xec*\xb7w\x04W\x918[\x94\x0c\xa0\x1c\x16\xf79\xcdy\r\xd4H\x14!\x0e\x11v1\'\'\x8f\xaf\x19\xa6\xbf\x15,\x92\xac\xf7\x12\xdc4\x8cF\x18?\xe4\xc0\xc0#9\xa7\x85\x9ay~Z*\xe3\xb8\xd3Wm@E\x00\x82e\x82I\x18\xfa\x99\xb1\x92=\xf3\xda\x91R\xca\x91m\x90H\xce\xb9\xda\xcaI\xce?\x0f=x\xaa\xd5\xb7\x89\x1a\xd3\xef\x11\x97\xf3\n\xc6IwB@G\xe0\x80NFF9\x14\xc2\xe7\xc4~H\x85C9\xfb\xc4\xa9\x18(\xbc\xe5\xfa\x1c\xf6\xfa\xd5\x9d\xcd\xdc2\xcd\x0c\xd1,\xa2G\x00\xb2\xaa\xe9\xf2\xf0\x06\n\x90FY\x87s\xc5G\x8e\xcap\xbaX\xa9\n\x7f1<\x8f\xa6;T\x9d\xfd\xdc6\xf0\x9b\xa9IH\x95X\xcd+d*\x94\xe1\x87\xd0c\x9a\xadj\xf1M\xe2\xfd\t\xdfI\xfd\xec0\xce@\x93i\x1b\xc1]\xa4q\xdb\xebH\xea\x17\x89w\xf7\xbd;T\xbb\x8a4\x98\x14\xb7\x8dr\xc1\xc2\x82I$q\x93\x8e\x95\x17\xa2^M\xe1m\n{{K\xc8\xed\xe3\xdcY\xa6\x92P\xa8\x81\xfde\x8e\xeeO\xc6\x06i]:;{{\x95\x96T\x94\xb1\x90\r\x03\x18a\xa7s\xce\xfe\xaa\x94\xe8\xfeW\xa0\xaeW\x82s\xef\xfe*V\xc5\xacl\xf4\x93\xa1\xea\xf2\x89Vx\xff\x00\t\xceQ\xb1\x8c1\xf68\xceMV\xb4O\x11xcU\xba_\x0fi>e\xd2Y\xdbK\n\x85\xf4\xc4\xf9S\x90$\xeb\xf1\x9f\xd2\xb3=S\xc6\xd7\x9e\'\xd5V\xc2-Z\xd6,\x12#\x05\t\x92Ul\x8c\x8crs\x8e\x9e\xd5=\xe0\xed\x0bQ\xbc\xb5\xf1d\xb6\xbfr\xb0{\x85"\xd2\xf5\xd9\x96g\x97\xae\xe0\x8a\x02\xf9d\x02\n\x80\x0ekK\xf89V\x02n.Z\x07\x08\xa68\xc9\xd2\x83Y\xdd\x9c\x9ep;\x0f\x9a\x8cd\x01\xf2\x8a\x1c\x16:\x88\xdfp8\x18\xa7\xbe.\xd0%\xb7i/4\x1b{\x7f&\xc6\xcdm\'\xb7W\x90\x8d\xef\xeb>\xc0\x95\x07\x8c\xf2{\xd5]\xafd\x86\x0bs\xaa]\xb2\xcd\x02\x04\x11&\x18\xc7\xe9\xea\xe1\x7f\x0f\xbe*\xee\xba\xf7\x89\x17M\xb7\xb1s\xa7\xdb\xcdirc\xb8\x1e\x8d\x92\xc1\x1aaSi\xdcS=\t\x19=\xfaV\x7f\xab\xfe\xc6\x92\xff\x00[\x92\xce5\xb7\x9eg\x8e_\xbb\xc1#\\+\x16<\xb3\xb9U\xc7\xe9\xd6\xa7[\xebhP~"& g\\Dj#8\xdf\xd8~\xb9\xa7\xe2\x90\xab\x90Q\x86\xf8\xf5q\xef\xf7\xab6\x91ohV\xe2]V\xea\xe2\x19\xad\xd1e\xb4\xb6\x04\x95c\x9eN?\xde\x0eA\xed\x8a\xb4\xf8r\xfbH\xd1\xd9.\xc5\xe4\xbfz\x92\xe9\xd9`_\xe0\x84\x0e\x01\xfa\xe4\xd6o\xa1\x98\xf5\xcb).\x14mb\xcb\x14\x8b\xb8\xac\x99\x07\x07\x04\xf029\x06\x9a\xebV\xb6\x1e\x19\xb8\xb0w\xd5Q\x9aH\xa4\xdb\x1e\xf0\x80\x08\xdfj~.pW\x07>\xf4\xecRH\xb7,\xca\xa8\xb3\xa4e\x151\x96,\x0e\xadX\xce\xf8\xf7\xa7$\xd0\xc8\x01r\xc8\xe7Q9\xdb\x18\xc6+b\xf1]\xd5\xdf\x8a. \xbe\x17N\xb6\x16?w\x11C\xb4\xe1\xa5}\xcc\xccON6\x81\xf4\xaan\xbc\x96\xb3\xc8\xda\xc4v\xd7\x10\x9b\xab\xc8\xa3\xb5\x8a\x19D\xec\xf1\xa9oQ\x08\x0e\x07\x19`H\xc5Q4\xdf\x14\xb6\xa3wslw\xb4`\x12vH\x1e=\xa4c\xa0<{g\xad?\x9b\xc4\xa2\xd2\xda\x17\xd3\xc7\xdd\xa3\x8e<G\x16\x1a\x1cq\x86bN\t\x04\x1eI\xebK\x92[\xb7\xb8o\xc4C\xa9\xe5\x0b\xe6c\x04d\xe7}\xf3\x8d\xb8\x15\xc8\x92$\x89D2\x00\x89\x9d\x03\x8c\x01\x8d\xbew\xa9\xe5\xb9\xcd\xd5\xdc\xa6\xfa\xeeU\xf3LRE \x02\x05\xc2\xed;s\x921\xf1\xd6\x96\x9e{\x8dj\xe2]Z\xea\xf2\xc9\xd2\x08\x82\x0by\xc9>bp\n(L`\x908=+=\xbe\xf1\x11h\x95|\xbd\xed FC\x1f\xe1%\xcf\xc7@:\x92j\xab\xa9\xeb\xb2\xad\xbd\xc2Z\xcc\xd2\x193\xbd\x91pv\x8f\xe1\xcf\xb0\xff\x00\xbdr\x0b\x1b\xc9\x8c@\x00\x80i\x00c\xd2t\xed\x93\x8e\xfb\xf3K\x9a\xee\xda\x05vf\xc9\xd2x\xe4g\xb0\xcf\xd2\xb5X<Wggm%\xad\x9cr!Vg+\x04\x84\xaa\xb1<\x83\xf2p3N\xae\xbcj/\xe1\x89/$X\x91r\xa1f}\xa4\xe7\x81\x96=\x87\xb7z\xf9fmzH\x0e\xdby\xdf~xe\xe0\x8f\x8a\xf5<Gs"\x10\xe0H\x17\x0cX\xf3\x8f\x9e{\xd5\xc4\xbe\x133\xb7\x9a\xecX\x96\xd5\x92NA>\xc3\xb5T\x0f\x12Y)\xd0\x00\xca\x8c{\x8a\xfa\x88\xf8\xbfOcim\x1b\x00\x08Tg\x89\x1b\x04)-\xb3w\x19\x04\x92y\xab\xc6\x9f\xe3\xbd\x12\xd6\x15\x13\\\\\x12P\x8d\xc4\x84\xc6;{\xe7\xdb\x15\xf2\r\xb7\x8a\xe0E-"z\x89^\x01\xe3\x1d\xeag\xff\x00WB\xca\x1d\xbc\x97#\xa3\xb0\x03i\xc7\x1cg\xa8\xf7\xaa\xcb\xbf\x0b<\xb2#2\xcaY\x7f\x9b#$\xe3\x1e\xdfj\x94\xbd^\xd1\xe3 I\x18\x1c\xe0|\xd7\xd5\xb0\xf8\xfbH\x85ge\xb6u;\x8b\x02\xa0\x90\xc1\x87\xe2<\xe0}+\x8b\xcf\x1aH\x96\xefomq \x8eu\'tk\xbfh\x1c\x82\xc7\xaf\x1e\xd5\xf3\r\xb7\x8f\xada\x1bY\xa3\x90\xb1\x1c\xb0\xff\x00\xccT\xdax\xff\x00M\x90\xcdn\x8c\xb6\xf0d8%\xc3\xe5\xfb\xe4\x8e\xc6\xaa[\xc2\x12\xc2\xfa\xd2\xd6M\xb99\xe4\x11\x8fl\xd2\xd3\xaa\xd863*\x1d\xf3\xbe\xf8"\xb6\xfb\x7f\x1f\xc9i\xa6Mi0g\xb9\n\xa1fa\x97~\xc0\xe4\xfb\xf2N;UsU\xf1\xdaChm..\x8c~lqI$Q\xaeY\xb6\x83\x8e{u\xcdf\x97\xde3\xb1\xb8\x8a8\xb4\xbb\x19$\x9d\x88\xf3\xa6\x01\x9c3g\xa0$`\x0f\x81\xcdA\xbe\x83\xe2}Hy\xdf\xb2\xaf$i[$\x95\t\x908\xc0\xcfP:qV\x96>\x18\xd4\xc2Y \x96.p;\xef\xce=\x85C\xbb\xeb0FJ\xc2\xe8\xdb\x82Om\xbf\xbdN\xe9\xfa\xc5\xb3\xea\x04^I/\x91.r"\xc0s\xdct\xed\xefZO\x87,\x12\xe2ky\xa6\x95\xa0\xb22\x8d\xbb\xc8\xc9$\xe39\xf7\xe8\ra\x97>\x1f\xf1\x85\x8d\xdce-\x85\x94a\x94\x87\x93\x04\xb1 w\x19\xe0V\x99m\xa1x\xebQ\xdb3\xdf\xd8\x94\x8a\x15X\xe2\x08|\xb5\x19$\x94\\\xe0g\xbdZ\xdft\t\xa4L\xc6\xca\xba\x93\x18\xc9\xdb\xed\x8a\x89\x1f^S\xa9p\xe4\x86\xfc\xd5\xf4\r\xbc\x96zr:\xda\xd8\xa3}\xdf\xd0\xed\x13\xfaY\x8f\xb1\xe7\x8fz{mqsx\xaf$\x89j\x96\xcd\x1bd\xa9>`q\xce8\xe2\xb1]kJ\xf1\xbai\xf7\xe0jv\x96PO\xb0\x95\xb7B\x00\x87\x18*\x99\'\x00\x9e\xb9\xe74\xaf\x85|\t*i\xed\r\xfe\xb3\xab\xdeYM\x16#\xb7\x86\xe8\xdb\xa9#\x91\xb8\xa8\xcf\xf5\xedY\xc9<\'t\xd13\xc9r\x88Y\xbf\xf6\xd5rt\x9f\x9d\xb7\xa0\xf5h\xcb\x80\xb0\xb3\x0c~bq\xbdi#\xc6\xfe\x1c3\xda\xf9\xba\x97\xefeo,\xbb7\xfax\xfc#\xe78\xed\xd2\xa7/\xbck\xa5I\xa32\xae\xa1\x1a\x9b\xa4\x96\x0cL\xea\xe3*=D\x0c\xfec\xb5|\xc9}\xf6Cie\'\xde\xa4\x12\xcf\x07\x9aU\x83\xc9\x96\x0b\x9fI\xcf\x1d\xaa\xd7a\xf6M\xe1\xdb\xd8<\xd8\xd2Y\t\n\x1dVv8\xcf\xce{f\xac\x17\xc2Vp\x10\xd1u\t\x01+\x86b\x99\'\xf7\xa8\xff\x00\xea\x92\xbf\xe6\xb5]\x8eG\xab\xfe+\xab/\xb6_\x07\xf8~a\xa7\xb5\xb4\xee\xcbr\xe6iU@;\n\xf0G\xb9\xcfQ\xedS\x17\x1fjZ,\xd6\xf1:\xdc\xa0Y\x00+\xc8\x19=\x87\xc5Wo\xbe\xc5\xf4kh\x89\xb7\xb1g\x94\r\xc06[8\xed\x9fz\xefA\xf0O\x85n\xe4\x8e\xd2\xe3E\x82;\x82\xac\x030\xf4\xb1\xfav5"o\nt\x19<\xa6\r0a\xf9\xdb \xea>\xf5\xd8z\xcfP\x8c\xc8\nDA>\x9eF\x05@\xea\xbfi\xb6fY \xb5\x93{\xb7*\xec\xd9\xc1\xec\x00\xfe\x94\xdbN\xf1\xee\x8c\xd635\xd5\xcd\xeb\xdc\xc4\x00{x\xe2>\xb6s\x8fCp\t^\xf9\xad`}\x9bh\xa7\x98t\xf8\xa2m\x85\x142\x82\x18u\xc9\x07\xa8\xf6#\x9a\xa5\xea\xfe\x14\xb4\xd2\xaeJ$a\xe3\x93\x85\x1bC\x1e:\xa9\x1cr*l]\x0f\xa2,b0\xb2gbH8;|\xd3run\xa4\xcd\xabTc\xb61\x91TD\xd6u\xbdR\xed$m>t\x8b\x18\x8d\x18\xae\xf6\\w\xff\x00>\xd5\tw\xa0\xf8\xba_5\xc9\x11F0\xcaK\xee\xc0\'\xb8\x15\xaeh\xde]\x9b\xc2\x93\xdb3[\x99\x0e\x18\xae\xe6\x89\x87BO\xb7l\xfe\xb5\xa9\x1d6\xda\xed&\x9a\xd1\xe2Y\x15\n\xee\x00\r\xbd2{\x8f\xc8\x8a\xb4\x89,-\x8f\xf0\xed\x97\xb0\x19\xde\xa0\xbc\x97S\x03\xaa\xe5\xb7\xe7\x1bW\xca\xe9\xe1_\x15\x0b\x04\x81\xafVH\xbc\xcd\xec\x02\x9d\xce\xc7\x9f[w\xc7j\x90\xd1\xf4\x0b)/b\x8a\xe9L\x13\xab\x00\x1f\xb6\xeff\x07\xb1\xaf\xa5\x12\xc2"\xf0\xc5\xf7uC\x1c@\x11\xb7\x903\x83\xd3\x8d\xb9\xeb\xedU\xfdO\xc36w\xcbp\xc9d#\x9e3\x82A\xda\xde\xf9\x1e\xe3\x15,^\xa0\x04"*\xef\xdbnj#[\x02A.X\xfc\x9a\x81\xb1\xf0\x9e\x99u<\x88\xd6\x08\xb9\x01\xbd\';\x87M\xe9\xee=\xc7Z\xf6\xf3\xec\xde\xc8H\x97V\x0c\x16d\xc7 zXw\x1cW\xb6wWzL\xebkp\xcev\x8c\xa8bA#\xaeW\xd8\x8f\xd4U\xe6\xcbP\xb5\x0b\x0bO;\xa4.\xf8\x9eL\x1d\x9b\x80\xe1\xd8\xaf\x0b\x93\xd4\xf4\xf7\xa6\xcd\xe4\xb9\xfc\xdbQ\xe4\xc5\x8f\xcbUG\xb1\xd6t\x90R\'\x92\xe2\xdc\x80v1\xc1\xfc\x9a\xae:\x0e\xbd\x1bGn\xb7.\xe4`\x831\x00\xed\xcf\xf0H?\xfe\xea\xb5\x0bV\x9a\r\x9b\x1d7\x10\x06\xe5\xe8{d\x8f\x7fz\xac\xdd\xf8>\xe4\\\xad\xcd\xbc\xbb\x1c\xa6\xe9\x11\x01\xda\xdd\xc6M \xcb#\xeey\xecE$\x84]\xb3O\xd3I\x9fE\xbd\xba\xbc\xd0\x94<O\x18\x9eK\x03\x8f.|\x1eZ/\xe5\x7f\x91\xc1\xefV\xdd\x1fY\xb1\xd5#\x91\xec\xcby\x8a\xc1e\x81\xc1Y\x12B2Q\xd4\xf4a\xedU]>\xfciO<W0\xca\x88\xe4z\x1f\xf0\x03\xfcF6\x1cma\xdb\x8fpjZ\xe3M\xb4\xfb\xc4\x1a\xb5\x8e\xa8\xd6\xf7Raai\xd71\xcf\x81\xb9\x16e\x18\'\x03\xa3\x0fP\xa5\xc6\xc7\x1e\xdd\xf1L\xb6?\xe6\xad\x17\xe2\xda[R\x97\n\xcb\xb8p@\xce\r3\xd2u\x89a\xb7\x96\xc4\x07`\xaeX\xda\xb7\x1et`\xe0\xb4Y\xc6\x18w\x1d\r<\xd359.\xe7}2\xfe\xdc\xdbj\x88\xbb\x9a\x06\xc3\x07\x8c\x9cy\x90\xb6\x00\x91;\xe7\xa8\xee*jm4L\x17\xf7H}E|\xc5;_#\xf9O\xbf\xc5KP\xf9\x05{\x0c\x1d\xaa32\xe0\xa9\xf7\xces]i\xfa\xde\x9f}p\xd6k.\xf9Y\x0bG\x1b\x82\x8eTv\x1e\xe4w\x1di\xfb<rFc\x95X\x11\xc0`\x7f\xb5T\xb5-\x07R\x8d\xa4\xb9\x86\xe3t\xef\xb5\x92p\xab\xe6,\x89\xf8Kq\x86\xc7C\x9e~i\xae\x8f\xe3\xc5\xb0\xbd\x1ag\x8a\xe0\x8bN\x96V\xc47\xc87Y\\7M\xa4\xb7\xfaNObp}\xe9\xe5\x90\x83\xa5\xf6\xdfc\xda\x99d\x04e7\xf8\xefS\x97QI`\xef4\xc6I\xed\x9b\x04\xcc\x8b\x99\xe2\xf8p9t\xfe\xa2\x9c\x8b\xf0\x8a\x87\xcf\x12\xc2\xd8\x11H\x99\xda\xc0t\x19\x1d\xea\xcd\x12Ar\xf9\x8aH\xe4\xe7\x9d\xae\x01\xcfn\x0f4\xdd\xf4\xebDI`kU1\xc8\xc5\xa4\x89\x97\n\xd9\xfe =\xfei\xf0\x84n\x0e\xd4\xce\xa0v \xe6\xa2a\xd4 \x97\xf7\xb6\xf7Q\xc8\xca\xde\xb8\xdf\xfd@\x7f\x94\x83\xd3\x1e\xf4\xb5\xc4\x17$\xb5\xee\x99xm.\x91=PH7\xdaN3\x9cH\x83\x90\x7f\xdc\xbc\x8a\x8f\xbd\xd2V\xd5\x14<\x12]\xc0\x1f\x02U\xc1\xb9\x847O\xff\x00x\xab\xd3\x07\x9c{\xd26;>\xed\x0c\xb6\xfa\x84d<\x85R\xe3;\xed\xe4=\x86[\x98\xd8\x9e61\xc85\xddG8aA\nFA\xa9\xdb\x7f\x14[\xbb\xc3i\xa9[\xbe\x99\x7f&\x15a\x90\xee\xb7\x99\xfd\xa2\x97\x007\xfe\xd3\x86\xf8\xa9?,\xc1\x1c\x9fu>Qv\xfc\x05KDXw\xdb\xdb\xf2\xaa\xa34\xd2Cum\xa9\xdaGy\x03\x81\xe6\xab0\x08\xcb\xdfpl\xe3\xff\x001]\x9b\xdb\xdd\x1a\x18Z\xcc\x99\xed"G\x07O\xb8\x93\xcc\x93\x00zD\x13\x92\x08\xc6:>F;\x8aXs\xdfq\xef\x8c\x11H)\xed\x8f\xedV\xd8\xef\xe3\x01D\xea \x97\x19$\xfa\x94\xe3\xd8\xff\x00\xcd9i\xed\xd8\xe5\x8cn2\x08\xe3\x955P\xb5\xd74=mXG \x8a\xe4*\x97\xb7\x9ftS o\xe1u9\x18\xf9\x19\x07\xde\x9e\xc8\xa1\x1e_2\x16\x8f\x08\x07\x98\x87*G#<\xf1\x9fzX}\xb6 \x8fzI]\xf7\x04\x1a\xb0Ks<#|(\xb3 \xfcQ\x82\x03\xfdT\x9e\x0f\xd0\xd4k\x95\xba247\xdb^2\x0b\xa2\xfad\x8c\xf5\xc3)\xfe\xc6\x99\x19Dq\x87]\x8f\x1cl\xb9\xc6\x0f\xa4\x9e\xe7\xd8\xd4}\xd6\xa1f\xc2F\x927\xca\x06>dy\x8d\xd1A\xc6U\xb2H\x1f^+\xa5\xb6\xdc\xd0\x14\xf6\xde\xa6\x14\xdc)\x91\xd1\xd5\xc2\x83\xbd\x94\xe0\x0f\xfd\xe89\xcf\xd2\x857\xf7\n^\xde\xe6\xd6hK\x8d\xc1\t\x07\xd3\xd5A\xecO\xb1\xa6\xb6\xb2\xf9\xc0,\xd1G\'\n\x12\xe10\xaf"\xb2\xf5u^2\x0f\x19\x04\x83\xec)#\xa7\xcc\xd3\x0b\x8bW\xfb\xad\xcf\x96?y\x18\x0e\x92\x00\x7f\x0c\xcb\xd1\xc7o\x7fc\\\x04\xe0c&\x8c\x0f\x8a\xb2\xdb\\E!\x08W\xc9\x9b\x90RN\x08?\x1dG\xe9N\xd86P\x968\xc7A\xc8\xfe\x95R\x97Z\x16\x8a\xf1k\xbax\xb2\x1c\x0f\xbd\xc6w\xd9\xb1c\x81\xb8\x9fTD\x9f\xe6\x18\x1e\xf5(n\xef`[c\x1a\xf9\xd08\xe6@F0zm#\xb7\xb5,7\xedI+S\x8a\xa90\x8f\x83\x91\xf8J\x9d\xac??\xf9\xa2\x9a\xdbL%WdW\xce\x07\xa4\xfe {\xf0\x7f\xf8\xa2\x94\x08\xf6\xa4\xe2\xbf+\xcd\xbcq\xec\x92g\xf3%c\x8fsZ\x87\x85\xbe\xce\xf5O\x10I\x14\xb7\x88l\xec\xc6\x08\x07\x87q\xfe\x05h>\x0c\xfb8\xd34\xd8\x85\xd6\xa2\xd1\xdc]+\xa9\xf3Y\x86\xc8\xc9\xec\xa0\xff\x00z\xd0/\xb5\x1b{x\xd1-\xb0\x80\xae\xdf0d\x90O\xc7AU\x8d&\xdbl*_\'\x1b\x9a\xe7O\xb1\xd1\xfc7\x02ZZ[\x82\xcb\x80vu\xe7\xdf\xdc\xd3\xcb\xe4{\xb8\xc8\x9d%N2\xb1\xa1\xcbc\xfd\xc7\xb5G5\xf9\xb0\xb6\x93\xc8\xb37W\xa7$\xe5\xb2\x14g\x1c\xb601\xf1Q\x12K\x7f%\xcc\rxeb\x83pX8M\xcd\xee3\x96\xc7\xcd0\xc4\x9d\x89\xc8\xf6\x1f\xde\x9dE\xee0>\x7f\xc5KEu\x05\xbcR[\xc3l\xec\xc8\xd8+\x9e\x06\x06\x7f\x11\xe2\xa4-\xa1{\xe0\xb2\xcb\x08U\x001E\xfc?\x19=\xeb\xcbK\x03\x12\xcb,\xc9$g``\xa7\x979\xe4\xf0(\x13^\\#6\x9b\x14/ \xca\xbc\xf3dC\x07\xb9\x0b\xfce\x7f!\\\x08\x062\xbbc\xf2\x81]/\x9c\xe1\xb7\xf7&\x9f)\x85"\x9c\xc5\x00\xb5V`\x1aiN\xd5,{/\xf3\x1f\xa5:\xb7O2!$H!T\x1f\xea\xdc\x02\x07^HZ\x85\xb5\x11@\x0c\xd0L\xda\xc5\xea\x82\x1a\xfe\xe7\xd3m\x0f\xb9^6\xe3\xd8&O\xcdM\xb4\xb1\xc3$\x0fwr\xd77s/\xee\x02\x83\xb3p\xeb\xb20= {\x9aqUy\xc0\xfe\xd4\x86\'\x8f\xfei\xea\xdcIpD\xf1\xa9\x91U\xf6\xac\xb3\xfa\x10\x01\xdd\x16\x93\x9fY\x89\x0c\x80\x12\xf2\x0e\x18\x8f\x8aR\xe5neh\xff\x00\x12.\xdc\x00X\x05\x19\xe3uD\x1d:\xd6 \x1e\xf1\x996\xb9\xc2\x96\xc1s\xee\xde\xcbKb\xfc\x0f\xb94\x95\t\xde\xa1.5Y\xaen\xa4\\\xbb\x05\x1f\xbb\x01Ic\x9f\xf7\x1e\x05"\xb7\xda\x86\xd0$\x82\x18\xd0\xf1\x96\'w\xe7N\xa6s<\xe4\xc7:,|p0\x01\x1d=\x18\xed\xf3Q\xb7\xd7\x16\xdat\xc9\x1c\xa8\xb7\x17R\xe0-\xbd\xba\x99\xae\x0e}\xd0\x10\x10\x7f\xb9\xb0)\xad-\x92s\x9a{P\xc0\x18\xa7\x92I\xb25\x92Rf\x91\xbaG\x18\xc9\xc7j\xa9]]E\xab\xdc\xbd\xaa\xdcI"\xa1\x0b%\xbd\xabyh\xbf\xfe\xf6^\xe7\xe0T\xe4\xf6\xfa\xbe\xa4\xb1\xa6\xaf<\x1a~\x9f!\xda\xb6\x16\xce\x0c\xb2\xfb\t$\x03,O\xf2\xa7\xebV\x0bm6\xd2\xd2\xd9\xb6G\xf7\x1bh\xd3\x1b\x88D8\xf8\x1d\x13\xfa\x9a4\x9e\xc74j\x03\x91QZ|\x16:U\xacV\xad"\x06\xc1+k\x009`>\x07\'\xe4\x9a\x94\xfb\xdc\xcc\x91<\xce\xd6\xb1\x95\xf4A\x03n\x95\x81\xf7=\xbf*\xf6+\x142\x08\xe0\x8c\xdb\xc5 #\x7f[\xa9\t9\x00n\xe4\x03\xee\xdc\xfcTD~Tf\xe2\xc7J\x8d%0K\xb6\xea\xe6fg\x866\'\x90\xf2g/\'\xfbT\xfdH\xae\x1dC\x8cc\xde\x8fI\xe6\xac\x1eu\xb2)i%K;p0Iq\xb9\x89\xfef\xf7\xfaW+\xabZZ\xdb,\x85\x99\x13v\xdbk\\\x134\xc78\xdc\x14s\x8f\x93Q-\xa5j\x17H\xbb\x19w\ts\xf7\x89\xe3F\xf2\xcfe\x86!\xe9S\x81\xc19\xa5m\xec\xca\xcf\xba\xcc\xa3\xedw\xfb\xfd\xfc\xed\xe6:\xed\xfe\x11\x93\x80O\xb7oj\xe6\xf8\xa3j}|^xVk\xbb\x84\x820}p\xa3rs\xd03w?Jes\x12F\xd0[\x87\x8dQJ\x9f4\x8d\xd8\xcf@\xab\xdc\xfc\xd7N\x92\x99\xbe\xe9nY\x0cY\x90\x96_2IX\xe7/\x83\xd0\x01\xd0\xb6\x07\xb0\xa7\xda|\x01l\xb7\x98\x84\xb26|\xb0_-#\xaf\xfb\x8f^?!M2\xea?\xd6\x9cV\xc0\xa8\x9b\xb9\x9e\'\x10\xda\x17\xf3\x1f\x99.\x98n`:a\x17\xfc\xd3\x1bia\x12L\x126\x91\x90\xed\x96Fl\xf3\xec\xcd\xef\xf1S\xd6\xd1I$j\xe0\x86,\x0f+\xe9V\'\x80\x11\x9b\x92\x17\xde\x99\xc9\xa4\xc8\x828Byv\xc4\x12\x96\xfb\x7f\x1b\x9ew9\xea~\x9f\xad4\xcai\xd5a\xde\xaa:\xa6..\x85\xb2E\xe7lpX\xb9\xd9\n\x1cd\xe7\xf9\x88\xf6\xa8\x1dFh\xdaI\xad\xed!&\xe1\x10n9\xc0\x00\xf4$\x0f\xe8+A\x1at\xf0y\xd2<\x82YQJ:(\x04\x86\xeb\xd0w\xc7\xebU\xfb[+;U\xd4\x96\x0ba,\xdb\xf7\xfd\xdd\x1c\x02Y\xce\x07\x9b/ \xb1\xeaGaM\xe0\x8e\xd4\xe8a\xefT;\x9bo.\x14s\x1f\x9d&\xd22;\xb9\xe3\xd5\xec\x05G\x8d\x15\xa3\x868\xe4\x93$\x82\xd2q\xd5\x8f\xf6\x02\xb4h\xedD0\xd9ZH\x15\xa7\x901*\x9d\xd9yb3\x8fJ\xfb\x9a\x8c\xbb\xd2/u9\x8a8X\xac`\'\xcc\x03\x1bX\xa1\xe89\xe4{\xb3q\xec+\x81\xd8m\xf7\xa3j\xca_G\x96\xfa\xe2D\xb6\x8d\xfe\xeb\t\xf5\xce\x07\x0eGUS\xdc|\xd3{\x9d\x02;i\xa2\x93\xca\xf2\x84\xa0\xe5OWn\x80g\xaf\xe4+iKC\xf7x\xa6KV0\x92V\xde%\xc2\xee\x00c+\xd3\x83IG\xa0\x88&{\xd9H\x96\xe9\x94G\x1eG\xa6<\x9f\xc2\xa0\xe4\xe7\xdc\xd2\xbc\xf7\x15\xcd\x03\xfek\x0c\xbb\xd0\xaf\xe3\x8d\x95\xa1A#\x9c\xf28\x8d=\xce{\xfdj\xbfw\xa3H<\x92ONX\x9e\xa0\x0f\xe2>\xdf\x9d}\r\x17\x87&\x9e9@\x91^g\x95\x84\xf3\x03\xb9\x83\x7f*\x83\x91\x90;\xf6\xa8\xf9|?m$\xd3Z\xc1g\xe64\x1bX,\x8d\x85\xdf\x9e\x0b\x9e\xe7\xbd:\xb7\r\xedI(\r`S\xe9\x12\x13\xea\x05\x80\x19U\xc7<\xfb\xe2\xa2\'\xd2f\x99\xcf\xf2\xc6xQ\xd0\x9e\xff\x00\\W\xd2w\x9e\x0f\x8e9\tw\x1f\xbc*\xd21\x18\xdeO\xf0\xaf\xb2\x8e\xf4\xdaO\x0fi\xb6\xd6\xe6{\xc9\x16\x08\xd5C\xb3\x95\xf4\xaf8\x00{\xfc\x0e\xf4\xf2\xdd\x1cpx\xa4\x98\x81\xaf\x9b\xa5\xd1w\x07}\x8eI\\\xb18^\x83\xbf\xc5B\xb6\x9b5\xd0\rk\x011\xaf\x06c\x92\xb9\xf6_\x7f\xad}\t.\x83o\xaa\x10/ax\xac\x15\xbfsk\xb7\xf7\xb3\xff\x00\xba_\xe5^8^\xfd\xe9\xcc\xf6\x16\x9b\x19-\xed\x86\xc8\xb0\n\xa8\x18\x00\x0f\xe8;S\xebrG\x03\'\xf6\xa6\xcc\x00\xfcW\xcd\xf2h\xe2\xdd\x02m\x1b\xfa\x90z\x9c\xf4\xa8\xd8\xf4k\xdb\x99B\xc7n\xec\xc79\xc2\xd7\xd2_\xb04\xb8e\x8aMB2D\xdb\x99b\x88\x033\xe3\x81\xb4c\x8f\x92x\xc5;\xb7\xf0l\x9e"\x8a\x08\xc9[;X\xa3#d%\x95YO\'q\xc0$\x9e\xe6\xbb\xf8\xed\'\x18\xdf\xde\x81h\x08\x04\x9c\x0e\xc2\xbeU\x9a\xd0C\'\x94\x0f\x9b0<\xaaz\x80\xfa\x91]\xc7\xa5^\xcb\xb8\xf9$\x01_\\\xa7\xd9-\x8d\xb4O\xe4\xc5\n!#\x01xs\x9fr}\xe9G\xfb3\x82(\xe3\xcc\xaa&\x90\xfe\x04\xed\xf9\x93J\xff\x00Q\x1c\x01\xf74\x81b\t\xdf\x8fa_#6\x8fv\x84\x03\x19\xcf9\xf8\xfa\xd2M\xa7L\x00;x\xe7\x9f\x81_]M\xf6cdw"\xb9\xdcT\x12I\xc6\t\xee=\xe8o\xb3\x1d)\xd6=\xac[\x01w\x123\x90>;f\xb9\xfe\xa1\xc1\xda\x95\xf8\x15\xaf\x8f\xcd\x9c\xc3\x18Br3\xc5{\x1d\x85\xc3\xb66c\x8c\x92x\x18\xaf\xb3\xf4\xcf\xb1\xdd;R\xb9\x08\x1dU\x01"I\x1b\x080\x0f\'\xe2\xa6\xf5/\xb3O\n\xe9v\xe8\x1aM\x8d\x8c/\x94C\xa9\xc8\xc6A=I\xf8\x15\x0e^\xbf\x1cr\xacI\x19w\'\x07\x1c\x0f\xad=\x1fH.\x0b\x16\x00\x01\x9a\xf8E\xe0\x91\x0bm\x07\x0b\xd5\xab\xd5{\xc6\x1bVIq\xd7\x198\xaf\xaf\xed\xbe\xc8\xf4\xdb\xd3\xcb\x01\xc6B\x9c\x1d\x84\x93\x92\xca:\x93\x8e\x07j{/\xd9>\x97\x1a\x80\xb1\xec;\xb0\xca\x06I\xed\x93\xf1\xf4\xa9\xa7\xa8\xa0PJ\x03\x8fsL\x8e\x9e\xd98r>\x05|w\x1c\xda\xac<Eqr\x99?\xc2\xec?\xb1\xa9\xf8\xbcc\xe2\xed=V(\xb5\x9b\xb4\x0b\xce\x1d\x83\x9eF\x0f,\x0f\x1f\x15\xf6>\x9f\xf6K\xa0\xc1o\x13\xdc\xd9\x82I\xc33\xcb\xb5T\x0eK\x02\xbf\x1d\x85@O\xf6s\xa0j\xb7\x97\x11Y\xd8:i\xd0\xe7<\xe5\xa4(3\xb8\x92\x01\xe7\xfa\n\xa9\x8f\xacXu\x19\xe4\x89\xacc\x91c\xfc\xcc\xc1Xg\xf7\xa9\xa2\xc2\xee\xd9\x03%\xe4\x91\xb3p\x15\x885\xf3\x04?h\x9e0\x8e\x19b:\x91\x93x\x004\x91\xab2\xf5\xfc\'\x1dOz\x9c\xd3>\xd6<Yh%\x17\x0c\x97d\xa0\xf2\xcb.\xdc0\xe0gf21_A7\xd8\xe6\x86\xa41\xca\xa2\xf2\xcd\xb7\x00`dc=\xbek\x9b\x1f\xb1\xed\x12i&\x99\xa2\x92;u\x1b\xa3g\x1bK\x003\x9e\x9d\xfa\x01\xde\x97<]\x11\xd1\xfc\xce\x99m\x83\xbe\xca\x01\xfbczv\'\xea\xc8\xcaW\xa9Nq\xb6\xecH\xfd\x0ek\x16_\xb6]]cd\x9bHM\xd8\xeb\x1c\xce\x9f\xaesO`\xfbi\x98C\xe5\xc9\xa3\xb8\xfe\x12RP}?\x19^\rk\x97\x1fd\xfaD\xc56i\x05#w\xf4\xee\xfcD|\xb1\xec:\xd2\x87\xec[\xc2\xe0\xc6\xa1$\x04\xaey\xc608\xe7\xbeMA\x1d7\xc3\xb3 o\xf4\xd02s\xb3\xb0\xfe\xf5,_u\xc8\xdb\x03\xa8d\x01\xdd\x14\xff\x00j\xc9a\xfbg\x8c\xab%\xc6\x97s\xb4\x91\x82\xb2) \x0e\xdc\xe2\x95\xff\x00\xf1kI\x98\x81$\x17\xb1\x80\xdf\xca\xa7\x8f\xc8\xd6\x9a~\xc6<3\xfb\xd6\x91d\n\xbc\x86\x04\x12\xd9\xed\x8e0\x07\xf5\xa6\x89\xf6c\xa0\xefh"\xd3NH\xda\x0b\x9e_\x07\x8e\x9e\xe7\xa5%\xbaG\x87\xc18\xb4d?\x12\x7f\x9c\xd3\xc9\xd4\xfa\xd8\xe6\xea6\xfa\xa0\xfe\xd8\xaa\xe2\xfd\xb1i\xff\x00t[H\xf5k\x98!G\x0e\x02\x07BO\\\x12\xa38\x1dq\x9e\rz~\xd4\xf4f>t\xba\xc3\xb9br\xc5Il\x9e\xe4\x11\x93Z\x1a}\x8ax]~\xec\x82\xdb\xb9g,@\xdczc\xe9\xf3N\x1b\xeco\xc2\x83hk\x1e\x11F\xf6\xc8\x1c\xfe\x95\x1d\xba/Ee\x0b\x89\xf4\xe78.\xb8\xfe\x94\xfa\xf5n\xa82\x7f\xf4\xf9\xf7\x08\xdf\xe6\xa8\xf6\xbfj\xbaW\xa5\x8e\xab\x1b\x1czK\x1d\xa4g\xb1\x07\xfcT\xc1\xfbT\xd2\xa6\x7f^\xa9k\x82I\xc20\\\x13\xc1\xc0\x1cv\xa5/>\xcc\xb4\x0by\xd5!\xd3"r\x00\xd8\x0br\xc7\xa0\xfa\x9a\xb0\'\xd8\x8f\x84\x94.\xfd1K\xaa\x02\xfe\xbce\xc9\x1cc\xfbTF\xf0\xd7Cr\xd82\r\xbb\x11\xfe*@\xeb]Iq\x94\x88\xfc\xee*\x97u\xf6\xa9d#;u\x88\x08\x0f\x94\\\xa9\n?\xb9\xa8o\xff\x00\x16l\x84\xe6Cz\xbe\x93\xd0\x1e\xbf\xde\xb4\x99\xbe\xc9\xbc\x19k\x13\xb0\xd1\xd7\'\x85m\xc7\x19\x07\x18\xfc\xaa\x10\xf8\x13C\x8ex\xd4i\xb6`3s\x95\x07\x19\xf6\xfc\xa9C\xc3\xfd\x06%9F;|\r\xbe\xc2\xb9\xfe\xb1\xd5\x18\x82\xa25\xdf\xe4\xff\x00z\xe2\xc3\xedWG\x97s\x1b\xb8\xd5\xc2\xf0<\xce9\xfd*~\x0f\xb4\xbb\x10\xaf(\xbf\x81\x80\x8c\xae\xde\x08\xe7\xdf\x9a\x9c\xb1\xfb2\xf0\xd5\xed\xbcsK\xa0\xd8y\x93&\xe2\xc6!\xc9\xcf\x03\x1c\xe35`\x1fe^\x14;\xdb\xff\x00OX\x0c\x82\\\x08\x861\xee\x01\xa8rxW\xa39\xd4\x8d"\xe7\xb74\xf2\xf5\xcb\xcc\x10\xf1\xc6\xde\xdd\xab3\x7f\xb5m\nI\xe5\x84\xeaq\xeeF\x0b\x90xS\xfd\x8e>)\xb8\xfbU\xd3\x15\x84k\xa9\xa1\xc6y\xd8\x18\x8c\x7f/^Mi3}\x9f\xf8v\x08\xdff\x87`\x8c\xea\xd9a\x12\xf4\x1d\xc6\x069\xf8\xa8\x8bm\x07K.\xeb\x1f\x90XK\x86\x1caX\xf2G\x1d\xc0\xc5\'\xff\x00\xa6:\x1c`\xff\x00\xee\x9d\xb7\x19\x07\xb7\xd2\xba:\xc5\xf3c\xd3\x08\xdfm\x8dS\xa5\xfbc\xf0\xf4\x89\x93v\x1aM\xa1v\x85+\x9f\xe9\xfa\xd5v\xeb\xedsGp\xab\x1c2I\xe5\xc9\xe6zcs\xcfL\x8e\x06\r}\x05o\xe1\xbd1\xa1\xb63Z\xc2\xceaU#\xca\\\xe3\xf3\x07\xa6i\xcbxn\xc5C\xed\xb6\x89B\x83\x82\xa83\x8e\xe7\xfe\xd4\xfc^\x19\xe8\x11\x1c\xf9s7\xff\x00\xb8\xff\x00\x14\xc3u\x8e\xa0F5B?\xfdO\xf9\xaf\x9a_\xedZ\xee\xe2I\xc5\x9e\x81|\xe0\xa6|\xc6\x8d\xc2\xb7\x1c\xae\xd02I\xed\xce*\xb5y\xe3\xbf\x17_\xbc\x83\xf6\x1e\xab\x14~V\xc5\x10#\xa9!\xba\xee\xc7\xe81\xda\xbe\x9f\xd4\xf4=8m\xcc\xdbF\xc6\xdc20\x0f\xb7\xd4\xff\x00J\x93\xf0\xfe\x8bi\xf7FD\xd8\xec\x92\x16\x18$\xb7\xd0\xf6\xe6\xacm\xbaWB\x81\xbf\x87a\x96\xc6\xc5\x895\x1a^\xa1\xd4\xd8e\xae\x80\x04\xf0\x14\x01_.[x\xdf\xc6\xf6\xd6\xf3B<%\x7f2\\\x05_\xde\xa98\x00c\xd3\xe9\xe3\xebH\xdd\x7f\xf8\x83\xafX\xcc\x9f\xfa~X\x98\xb6XK*\x05\xc6x\xc0\'\'\xe9\xd2\xbe\xc0\x9fB\x83\x05\x82\xa0\x00\x16\xc1\xc7~\xb4\x84ZE\x99\xc3\xaf\x95\x11#$g\xa7\x19\xe8j\\v]&9\x15\xd3\xa7\xa8`A\xceOo\xa9\xa6\x1a\xee\xfd\xc1\rw\xb68\n+\xe3\x0b?\x0bx\xd1\xae\x14I\xa3#]\xa7\xaa7\x8eh\xd6P\xdd\xb6\xe3\x81\x8a\x95\x8bA\xfbVE1\xc7\x0c\x81\xc2\x0c4\xb2@ps\xec\t<\xf4\xaf\xa7?b$Z\xd6\x9e\xef\xe5\xcb\x96R\x008*ry8\xabci\xf0E\x18P\xbb<\xc9\x16?r\x8a\xc7\x00\x1c\x0eq\x9a\x92\xe9m)\xcbZ\xc6\xc3<2\xea\xfd3\xc57\xf8\x8b\x94\x18\x17.\t\xee\xa7\x1f\xd2\xbe1\x93\xc0?i\xda\x90\xc5\xce\xa5oh\xac\x07\x01\xf6\x92\x0fs\xb4df\xa6<5\xf6O\xe3=3U\x83Q\xb5\xbc\xd3o\x02\xee\x13@\xd2\xc8\x80\xaf\x01\x8eGS\xed\x9e3_U\xdc\xe9\xb1*a\xa4e\x1brX\xb7\xaf#\xe4q\x8a\x8e\xd1\xd2D\xd4\xca\xfd\xe9\xbc\xbc\x96\xd8\\\xe7\x1c\x9fH\x1e\xe0\xf2M?\xaa\xdc\xc6\xd0~\x19\x169\x01V\n\xa1v<\xf1L\x06\x9fZ\xcd\xf8\x99\x19\xd4\x86\x05\x98\x9d\xc5W\xb4\xef\x0b_i\xf2am\xed\xe3\r.\xe7}\xeb\xca\x93\x9e\xdd\xeb*\xf1\xd7\xd9#\xf8\x97\xc4M\xa9\xbe\xa9,Mx\x11<\xbd\xa2P\xac\x8b\xb4\x01\x9cu\xeb\x8a\xfazx#-*\x89LGvG\xfe\xd5\x1f\x1d\xaa\xa5\xa9Y\xc8\xf7\xb6*\xb79\xdd2)Ps\x81\xdc\n\x81\xd3\xfa]\x87K\xb9{\x98\x16C+\xae\x82\xce\xe4\xecH\xdb\xf6\xa9W7\x97\x1dB!\x14\xcc\xba\x17\xd5\x801\xb8\x15\xf3\xd8\xfb,\xf1\x0e\x91\x04b\xd2\xfbM\x99m\xc2\x87P\x867`\x0f|n\x0cO|\xd5\x17\xc6\xcfg\xa2Xi\xd6\xf3\xda\xea\x7f}\x99\xe6\x171N\xb8\x88\x05+\xb0\xa3\x8e\x1dI\xcf\x00\xf6\xe6\xbe\xdd\xbb\xd2\xc0\x8e\xe0$h<\xc0rF0x\xea}\xb9\xe6\xb2\xbb\xcd\n\xdb\xc4z4\xf6Z\x9d\xbf\x9a\x11\xda5v\x19d\xdcy\xda>\rY\x8bkI\'Y\x19\x08nv\'sQ\x9a\xf2\xee8\n\xc7"\x9d\xb1\xba\x8e+\xe3\t\xbcax\xf1\xbc@0\x8c\xe31\x13\x85c\xee\xf8\xeb\xf4\xaa\xfd\xde\xaf{w\x90\xf2\xedS\xd5W\x80~\xbe\xf5\xe6\xada&\x99\xa9_\xd9HIkk\x89!$\x8c\x13\xb1\x88\xc9\x1c\xe35\x1a*\xde\x1b;XpR\x15\x07\xde\xb3\xf7\x1dF\xfa|\xac\x97\x0cG\xb7\x1f\xd2\xae~\t\xf0\xe4\xfa\xfe\xad\x1b\xf9\r%\xbd\xab$\xb3\xf6\x05A\xfc$\xf6\xcfJ\xdc\xbc)\xf6W\xa4jW\x1a|\x13@\xd7fK\x81-\xd1\xc6\xd2\x03\x82?@\x7fL\xf3O~\xcf<:\x96\xbaE\xacq\x01\x1d\xcb\xa0yd\x07\xf8\xb6\xef\x07\x83\x8c`\xf0Oz\xdf\xbc\'\r\xbe\x8f)\x96vF\xfb\xc2\x81\x83\xf8\x97\xae\x008\xf9\xe4S2\xdc\rX\r\x8f\xe9R\xed\xadB\xa6\xa2\x998\xac\xa3Z\xfb#\xf0\x95\x89\r\x1e\x99\x18\xde\xe0+\x02\x08\xc7\xb1\x03\xb9\xab\x0c?c\xfe\x0f[dg\xd2\xe2\xce\xc0\xf8\xc2\xe7\x0c22M^\xbcK%\x8cm"yJ\xeaW\xccV\x00ey\xdb\x91\xeeEX,\xe5\xb1\x96(\x0cBQ\x8c)\x0c:\xe0v\xc7Oz\x86\xf7o\xad\x86\xdcmS\x85\xbca\x14\x85\xe4\xee\x7f\xcdb\xd7_g\xbe\x15\xd3\xe7\xb6\x10i\x82"&\t\x93\x1a\xf4n\x8c}\xc75v\xb2\xf0?\x87\x1a\xd9\x16+H\x19\xc0\xcf\xfax#\x07\xa9\xc0\xe9\x9e\xd4\xfb\xc563Bl\xee!\xff\x00N\xde]\xee\xaaNv\xa8\xf8\xe3\x8c\xe6\xa4|=\x89J?\x99\xe5e\xbfv\xa5\xba\x83\xceFi\x87\xb8\x90\xb8\x1a\xb1\x91\xc58\xb1\xc6\xb1\xec\xbc\x1a\xaek\x9e\x13\xb3\xb2\xb6i>\xee\x81\x01\x0e0\x80"\xed\xe0\x92{\x13\x9e\x07z\x95\xd24\xfby,\x123\x1a\x8f,n,NIS\xce\x07\xb7\xb1\xabV\xa1kuua5\xbc\xd2\x19Q\xa3`\xf8\xc0\xdd\x9e\x0es\xd3\x1d\x8dP\xbc;1\xd3\xee\xae-O\x9c\x91\x8d\xd8\xe7\x85T\xea\xa4\xfb\xfb{\x8a\x8e\xf3K\xa8a\xc8\x18\xa7\x14&\x93\xe9\x06\x98\xf8\x97H\xf2\xe1\x85\xfc\x9c*\xb2\xee\xca\xee \xb8 s\xff\x00\x9cT\xd7\x86c\xb46p\xfe\xfdw\xe0)\xe0\xa9\x18\x06\xaeRE\x1d\xe42\xc5,*\xe1\xd4\x92\x01\xca\xf0:\x8a\xce\xf4\xfbK\xfd\x1b\\{a:,3p\x8cq\x85W\xfe"\x0fa\xfd\xa9\xb6\x92F\xc6\\\xfb}\xeb\xa3N\xf8\x1b\xd5\xda\xebO\x8a[[\x8bY\xe4\x08\xaeJ\xa1\x1d\t\xdb\x95\xfag\xbdW<;#\xdb\xc8\xb6W\x08\xacm\xcc\x887\x10CG\xc3p=\xc1\xeb\x9e\xdd*\xf1\x06\xe9-\x95\x15\x83<q\x94\xce2\xc3i\xc1\x03?\x8b\x1e\xc7\xadT\xf5\x9d5\x87\x9fw\x04 O\x01D\xb9\x8c.U\x94\x8fK\xa1\xef\x8f\xfb\x1ae\x836\x93\xed]\x0c7\x1e\xf5)s\xa6\xc3qk*0D\xe1\xd1J\x82\x00\x19\xce\x0eO\xfd\xbd\xaa\xa1\xa1\x93\xa5_\xbd\x8c\x91\x80\xd0\xb91\xc8\xbcnF\x1f=\xc8\x1cU\xdfK\xbb\xb4\xba\xb0Xe\xfd\xd4\xa12\xe1\xb8\x0c\x07\x01\xd7\'$\x03\xc1\xfe\xf5\r\xa8\xe8s,\xa6Ki\x99\xaePnFc\xf8\x94c# ~t\x87F*\xa4o\xdcW\x03\x8c\x90v\xa9g\x8e;\xa4Yc\xb8o%\xb2\xa0\x01\x87\xc9\xc6s\xbb\xf5\xc7Z\xcd5\x0be\xf0\xf5\xdec),rmc!\x8dI\x8fi,v\xbf<{\xfcU\xc3H\xd5\xdavk+\xabf\x89\x84\xa4\xc8\xce:1$\x92G\xfesOum*Y\xedb\xb7\x86<K\x13\xec\x8eO\x9cd3\x0e\x9c\xf4 \xd74j\x185\xcdeM{e\xa9\xdb\xdc\xc3j\xe5d\x0c\x9b\xb7\xc4\x14n\xdb\xd0c\xe0g\xafqM\xf5k;\x1dj\x13\tPd\x0cJ\xb0\'r\xf4\xc1$\xf1\x82\x0f\xbdB[\\j\x1a%\xc2\x8b\xabT\xf2\xe1c\x92\xab\xfc?\x84\xb0\xce2\x07z\xb3i\xd2\x9b\xa5\x91V\xd0\x05\x95\x89\xc6\xee\x8arw!=T\xff\x00)\xae\xc6\xb9<\xfa\xbb\xff\x00\xe1\xa4\xbbw\xedX|\xd6\x17\x96\x97\xf7\x16\xc6\xe0\x17\x85\xc8\xc9\x04d\x8e\xb8\xeb\x91\xcf~*\xdd\xe1\xe9\xae\xacdX\x95\xa2;\xa3\x1f\xc7\xbb~\x07\x00\x9eq\xc1\xef\xd2\xa6\xf5\xdf\x0b\xc9}!\x9e\xc2$If\x849_\xc4\xb2/N\t\xfc8\x1c\x1a\xa6\xa4\x9a\x8d\xa4\xc5e\x8a5\x966"H\xfc\xb0\xa4\x8ep\x00\xfaT\x96]C\xe2\x9b\xd7\xec~\xb5\xab\xdaJ\xa6\xdeX\x89"@wD\xe7\x1f\xbdV\x00\xee\x1d}C\xa3R\xcb\x12\x19a\x90\xedW\x84\xb7&3\xb1\x83.\x08\xc9<t\x1c\xfb\xd5OG\xd7f\xba\xbb\x80\\\xc4\xc1T2\x99\x13i\x05s\xf8$\\t\x1f\xc2\xc3\x91W\xb4\x9b\xcf\xb4*\x90\xf9\xe4\x00\x93\xc0pd\xf5\xf02:\x10G9\xee+\x82,\x11\xf1\xfb\xd2ZC\x8d\xea\xb5>\x97\x06\xa3j\xeb<\t I\n\xc8\xdbN\xe5e\xe3 \xf0Fx\xc7L\xd5T\xc1q\xa2\xea0\x86\x82f\x86C\xb7r\xc6&\xdd\x91\xce\xf00\x06}\xb1\x8cu\xadF+5\x86\xd2+uc+C\x12\x84\x93 4\xaa9\x04\x13\xd5\x94\x0cb\x9aM\xa3\xad\xc9\xb8\x8c\x8f\xc3\x90\xe5@\xca\x12\xb9\xdcA\xe5IRFG\x14\xe8\x84\x7f\xb7\x9ah\xcd\xc8\xcdC\xd8\xea\x91\xdbEp68\xb4\x8d2 t\xfd\xe4J\xa7\xd4\xb9$\x07O`pGj\xb8i\xf7\x8a\x89xSu\xd5\xb8\xf2\xdd#U>tH\xc9\x9d\xac\t\xf5\x0e\xe3\xf4\xac\x86\xea\xd6\x7f\x0e\xdf\xb2\xdc6l\xbaF\xc1\x08\xf2\xc0\xf7=\xc7\xf6\xab\xb7\x87/\xed\xcd\xcc\x8f\x17\x96\x91\xdc\x1c\xc6\x8a\xc3\x12y\xb8,G8^Fx\xe0\xe6\x9eE*F\xd8\xa6\xdfu\xab\xbd\xde\x9dk\xa9Y3\xc7\x1b0h\xb7\xa0\x00t##\x19\xc6\x0ex\x00\xd5\x1ax\xee,\xec\x16[V\x8a{H\xa6W1\xee*\xd0\xcc\xbc\xe3\x8eU\xc1<\x7f\\\xd5\xfbN\x95f\x9d\x920\x04\xd6\xed\xb2d\xfc\x01\x91\xb3\x86\x03\xa1_o\x9fjGX\xf0\xd3]\xc9\x1d\xf5\x8c\xd2\xda\xdeBB\xa3\xa0\xdc\x92\'\xff\x00\xb3\x99\t\x01\xd3=\xfa\x8e\xa0\xd4\x9f+\xcc\x19\xc6\xfd\xfej0\x94\xa1\xc1;Uj\x1d_N\xd5\xac\xe2\x8aid\xb9\x95\x17\xf7\xd2\x05h\xee\x14\xf6\x960\xa3\x87S\xc8\xdb\x8c\xf3\x8a\x98\x9fV}"\xf6\x0b\xdb\xc9\xd0\xdb\xcf\x18D\xd4\xc3\x1f \xff\x00*]"zF\x7f\x86^0x5\x11\xfb*\xf8O\x1d\xcd\xa8H/\xd6\x11$\xb0o\x0e\x19\x17\xd3\xbe&\xc0\xdc\xa7\xdf\xa8\xefR\x1am\xfc\xd3,\x90K\x18*\xef\xb2\xea\xd2d\xca\xb6x%:\x8fQ\xfc@\xf0G4( \xef\xb7\x1b\xfd(%O\x18\xf9\x15\xa0%\xca\x14\x89\x82\xaa\xc70\x05NIC\xb8dd\xe3\x82{S-KF\xb0\xd5\xad\xa6\x86\xe28\xa7\x8eU+"8\xc8 \xfb\x8a\xa6\x0b\rOA\xd3\x0c\xfe\x1cs\x12\x89\xb2\xda5\xd1\xc4$`\xabE\x19?\xe9\x16<\x8f\xe1\xcf\xc5Y\xf4\x7f\x11\xd8k0\xce\xd6\xfet\x17\x10\x10/,n\x10\xa4\xf6\xfd\x8a\xb2\xf7\x19\xe8FEJR\xad\x85n\xe3\x8a`\x86]\xd4\xf7\xe6\xb3\x8b\xbf\x0e\xea>\x11\xbb\x13Y\x19\xef4c\x90\xd6M&n-\xb8\xe0\xc0\xeeF\xe5\xf7\x8d\x8f\x1d\x8d_4/\x14\xdbO\x01D\xbd:\x85\xa0,\x92$\x8cL\xf1H9(wa\xb7\x0e\x84\x1eEO2\xa3:a\x9d\x82\xb6\x19I\x07\xb79\xc8\xe9\xcdg>%\xf0\x9c1J\xda\xce\x973i\xf7\xca\xa1\x9d\xd4\x06\x8ap\xa7\x85\x9a<\x80\xeb\xdb=Gc\\\x11\x98\xb2S\x8fj\xee\xb1&\x03\xf3\xefZ\xdcQ\x99<\x99a\x91\xa5\x89\xd7\xd6\xb2`:\xe7\x91\x91\x8e}\xaa\x16\xf3@K\xd0\xd2Y]\x1bK\x92\x0f\xef\xa1Q\x923\xce\xf4oK\x83\x8e\x8d\xf9\x1a\x81\xf0\xd7\x8c\xed\xee\xa5\x8e\xd7U\xb3\x1aU\xec\x98\x10\xb1}\xd6\xd7A\x7f\xfd\x8c\x87\xdb\xf9[\xd4+H6"LO\x0c\xe40 \xba\x96\xfe\x11\xc9\x02\xa4\xa8W\x1e\xf5\x1c\xeaF\xc1\xdb\xfb\xd54\xdcM\xa5,\x11\xea\xb0\xc5m\x19|4\xf1\x82\xf6O\x93\x81\xea9h\t\xf6l\xafl\xd5\xa6;h%T \xa9\x05\xb8\xe3\x8d\xa4v=0GqU\xedf\xc8jq\xc5\xe4\xdd\xddZ\\\xc3\x96\x82\xea\x06\xe9\x9e\xa8\xeaxt=\xd1\xb85\x05i\xad\\\xe8\xf2Y\xe8:\x84pis\xcc\xe1\xad.\xad\xfd6W_\xcc\xa8\xad\x9f-\xfd\xe3<{\x1a\x01\xd0p\x7f.9\xae\x90Xds\xdcU\x83V\xf0\xb6\x85\xad\x11\x1c\xbb\xe0\xb8\x84\x97\x86\xe2\x161\xdcBO\xf1F\xfc\xe0\x1e\xe3\x90{\x8a\x84\x82\xe6\xe3\xc3\xd1\xb4>%\x08"B#\x8fX\x80\x95\xb7\x947\x03\xef1\x8f\xf4\x1f\xb1?\x80\x9e\xe2\xae0\\HS\x0cLr) \x02r\xbc\xfc\x9e\x99\xf6\xefN%t(\xeb)R\xac0P\x80}\'\x82\x08\xee=\xe9Z\x17:\x80\xc1\xfe\xbfZHc\x8c\x13\x91\xff\x00\x9cT_\xec\xab)\x13jI4j\xe0\x12\xaa\xf9\x07#\xf1\x03\xcer\x0fj\x81\x9e\xc2\xca\xdaS\xb1\xe5\xb7\x91\x94(\'\x0c\xac3\xd0\xe7\x8c\x81\xdf\xaf\xcdr\xbat^\x1f\x99\xdbG\x98\xad\xa3\x87#Kg\xfd\xc8v\xeb\xe4\x16\xcf\x93\x9e\xe0e~)\xf5\xad\xed\xa6\xa4|\xa9\xecZ\xdeq\x19&\xceVS&\xd0y#o\x0c>Ep\xe9;i\xc1\xa5\x0c\x8d\xc1\xc8\xa8\xf8\xef`\x84\x0f1\r\xbc\x98\xc2K\x13cp\x07\xf10\xc0\x07\xf3\xc1\xf9\xa70\xbc\xaf<\x92[M \x99\x9b{\x8c\x83\x1b\xb19\xc8c\xdc\xf7\x07\x04W:\xa4\x11Y\xc6\xc6\x00\xf1\xcd2\x10\xbe\x8f2&$g,\xa3\x1fBA\x06\xa3\xa0\xd5#\x9f1\x88$\xb5\x93~\xd4\x89\xd7\xf7r\x9e\xfeS\x0e\xa4\xff\x00)\xe4{W?.\xc4\xd2\xbf0\xc8\x15ty#\x98(\xb9\x81\xd5\xfa\x13\x19\x18\xc9\xceFG^\x9c\x8a\xad6\x99\x05\x9a\xcb\xfb\x0e\xe0\xd8\xca\tf\xb5\x9a\x1f:\xc9\xdc\xf5\xdc\x99\xfd\xde\xee\xe62\x0f\xb85=n\xe5\x964\x9e\xce\xe66T\xfc,\xbc\x908\xe7\x9ei\xe1\x928\x94\xf9A\x0f@\xc8F\t\xf6\xa7684\xd6H\xdb\xff\x00\x8a\xa9Zx\xbe9\x046\xb7+\xfb/T\xdd\xb4\xdb\xca\x19\xed]\xc1\xc6a\x98`z\xbb\x03\x86\xf8\xa2\xacwv\xd6w\xf6\x8d\x05\xe5\x9cS\xc11e) \x05\x18t\xc3\x03Epj\xff\x00p?\xb5\x1a\x93\xfd\xa4~\xf5\x8e\xea\x9a\x87\xdd\xd1U!\x8a\xde\xdd\x87\r\xb7)\xe9\xe7qa\xf8\x9b\xb8P?:\xa5[k\x8a\xd2\xb4v\x90F\xfel\x8c\x1a\xf2\xe7,\xfdNJ\xa0\x1c\x0f\xfc\xcd=\x87H\xb8\xb9\x9d\xa7\xb8\xb9\x8e\xdd\x0b?\x97\x08\x93{\xa8\xc7#-\xce?\xadJ\xcbgi\xa7mK\xeb\x8f M\x94\x86&\x1f\xbds\x8c\x9d\x8a2X\x91\xec\x0f5TU\x8f\x03\xefR\x81U\xdb\x9f\x8aB\xde\xc8\xdc<\x92Gx\xce\xf3.\xc9\n\xa1M\xcc\xbc\x8e\x14\x8cm\xf6\x1d\xeaG\xee\x1eTF[\x8dE`\x8a"\x04\xd2K\x84%W\xb9/\xc2\x0f\x93\xd7\xb5HXXj\x8c\xd1<0Gg\x13\xc4\xd2\x99n\x94Iq\xbb\xb0\x08\xa7j\x8e\xe4\xb3\x13\xf1L\xf4\xed7J\x9e[\x8b\xa7\xb8\xb8\xd4\xe4\x85\xd4\x9b\xdb\x82$\x8e!\x9c\x95\x8c\x10\xb1!\x18\xe3h\xcf\xc9\xa7Dx\xc6\xdb\xd2\x0b\xe4\x9d\xf6\x15\xed\xac\xedw3\x9b`~\xee\xa9\xfb\x9f0:\xa4\xceF\x01\x91\x98\x06a\xcfn=\x89\xa9[\x08\xe2\xb8\x92K\x16\x89.\xc08\x968\xa11Z\x87<\x91\xb7!q\xed\x92I=Ez\xf0O)\x82[\xd7\xccY\xf3\xa3\xd3\xe3]\xf2\xb1n\x04\x92H\xfbq\x8c\xff\x00\x08\x00{\xd3\xb6\xbb\x8c\x92\xb2\xa8(S\x98\xcb`\x90\xa3\x90:g\x1f\xa5((;0\xc8\xf9\x1c\xd2u{mRV\xf7Q\xdc\xc6\x9b%\x85\x92\xdd\xb6\x80\xa4y1`m\xd8\xb8\xe0\xb0\xefBkv\xf3\xdf<\x10\xc6K\xa2\x16i1\xbc\x05\x1c\x92@\xe3\xe0\n\xac\\j\x0e\x96w\x12Kko\x041\xc6BG\x8fS\x0cs\xc7\n\x17\xdb\x19\xf6\xa8\xbb\x1dZ[;Y\xef%\x90\x89\xe7m\xab\x0f\x96\xb1:\x05$aCe\xdb>\xd8\xfc\xab\xa6L2\x81\xf7\xfbWB\x02\x18\x9f\xb7\xd6\xad\x97Z\xd5\xf9\x95\xd6\x0b\x1f7\xf7\x8b\x89]F\t=\xc2\xff\x00\x0e>j\x12\xefSh\xd5\xa7\xbe\xbe\x08\xb2\x9c\x00[.\xe4u\n\x8a\x0b6~\x01\xc5W\xae5\rZ\xfe\xfa)&\rch\x80\x82\xd7\x89\x1bJA\xe0\x95Q\xb5W\x19\xe0\xbeI\xf6\xa6\xd6\xbav\x95\x05\xcc\xc2\xce\xd2f\x96t\xdd5\xf5\xf4\x99\xde\xbb\xb0q\x80\x0e\xdex\x0b\xb4\x0e1If>\xfd\xe9J\xa0v\xedV4\x9a\xee\xea\xdc\x08g\x8bF\xb7\xdaZ\xe2R#k\xc2\xb9\xe3\x0cIHx\xeer~\x94\xf2\xce=.\xce\xcee\xd3D6\xd0\xb1\xdf-\xdc\x8b\xb9I\xea\xcf+\xb1\xdd#\xf3\xc9c\x8f\x9a\xa8\x9b}:\xe1\x82i\xaf&\xb1<D)-(\x86\xc6"\xbd\x89\xf5.\xe5\xcf!C\xb0\xab2\xf8n-E\x0bkW1^\x80w\x0bh\x80\x8e\xd51\xcf\xe0\xc926O\x05\xc9\xf8\x02\x8c\x93\xb7\xb5\x07\x19\xce)\xb4z\x85\xb5\xd1i\xf4\xabio\x9d\xf7"\xdf\xdczm\x9b\xb3m nu\x1e\xd1\x80\xa7\xde\x96\xfb\xbe\x9f\xa6:]j\xf7\xcdyr\xe0$~b\x1d\xdb\x81\xe1-\xad\xd3\'\xaf\xd4\xfb\x9a\x96\x86!$qC\x0crDL;\x95\t\n\xea\x06\x07\xe1\x03\xd2\x07\xe7\xf4\xaec\xb3\xd1t\x18\xafo\xee\xdd-`\\\x19\xf5\x19\xdb{I\x93\xf8\x01|\xb0\xe4\xf4\x04\x92i:r{R\xb2\x05G\\Z\xcdy\r\x9f\xed \xd6\x10J\xac>\xe3\x03\xe6\xe2q\xd7\x12\xcc\x87\xd2\xa0~ \xbfBM:\x9e\xfa\xdfL\x92\xc7K\xb3\xb4\x8d&h\x81\x8fM\x81\t`\x14eY\xcf\x0b\x14C\xb9$\x13^3\xeb>\'\x95\x85\x93\xb6\x89\xa6(*n\xe4@of\x8b\xbf\x92\x87>R\xb6\x7f\x13z\xbb\xe0T\xb5\xae\x81g\xa6\xdb\xddAg\xe6G\x172M)\x94\x99e#\xf14\x92>Y\xbf\xf7\x1e@\xe9\x8a4\xed\xb5\x05\x87~}\xaa\x0eE\xd4\xa4\xb2\x84j\x13\x08\xc3)y\xd2&1\xc6\x80\xe0\x90\xf2p{\xf0\x16\xa4\x0co\xf7o*0\xf14lcO%Bpy"<\x8c(\xf7~N>k\x9bEK\xbbW\xbe\xb8\x96\x15\xb1\x0c\x1e\x04p\x12%T\xe3\xcdi\x18\x92\xc4\x9e\x87\x81\x8a\x89[\xfb\xfdo\xef\x13\xe2]/IE!n\x00)yy\xb4\x8c\xb4A\x81)\x17^\xc5\x8flR0Fw\xe4R\x89\xcf\xb6\xc6\x96\xbd\xbe\xb7\xd3Y\xb4\xad"\xc0\xdc\xdd\x9c\x17\x87y\x11F\xcf\xc9\x92\xeaf\xc9\x00\x8ev\xf2\xed\xd8Wv\'n\xeb\x8b\xeb\xa6\xb9\xbaH\xc8\xf3B\x84@\x87\xaa\xdbG\x9fB\x1e\x99<\xb7s\\\xc3\xfb2\xdaH\x99ld\x88+\x98\xad\xe1\xe5\xa4.\xdc\x93\xd4\xf2\xdd\xces\xefMRc\xf7\xa9\xe3\x92\xcc\xb4\x8c7\x18\x91\x89\x11\x8f\xc4<\xd9O\x0b\x9cp\x82\x90N\xfbb\xba)0\xfa\x85\xc5\xf6\xe7\x8c$p\xe6D\x82\x12|\xb1\x9e\x03L\xfd]\xfb\xed\x1c/|\xd3kmU/\x04\xd2\xd9\xa3:y\xcc\x1a\xef\xcd\xdc\x0e\xc3\x8c\x06=y\xe3\x0b\xc0\xfa\xd4\xcf\x94.\x8c\xd6\xf3_G4\x91\xa2Iq\x18\x05U\x18\xe3j\xed\xe3\x80\x07F9=i\x0b\x8b{[F\x92\xfa\xee\xfa\x05\xb7\x83\x98\xdf\x85U\x18\xe5c^\x02\x8f\xe5\xea\xc6\x9b9&\x9c\x04l?\xcdB\xcff\xb7+,,\nX\xedbc\x8fr+\xb8>\xaf2@w1c\xd7\xb6;\xd38\xaf\x03\xd8\xc8t\xc8m\xc2\xa4{ \xb8a\xfb\x8d\xc4\x8d\xdb@\xc7\xa5q\xce;\xd3\xa3mw\xe2+\x853$\xd6\x9aJ\xaf\xa2\xdd\xff\x00u=\xd6?\x08p\t\xf2\xe3\xf8\xfcM\xf1R\xf7v\xce\xd2Egj\xb1\xdb\xc6`\x0e\xd3$`\x98\x10\x1e\x15G\x01[\xdb\xfbSgojp\x1a\xa9A\xe5\xc1\x1b\xca\xaf\xe6]\xcb\xe9\x96\xfae\xfd\xf1\x07\xb4)\x8e\x01\xe7`\xe9\xefSS\x98\xed-a\x90D\x85R<fF\xccj\xbdw8\x1c\xb3\x1e\xde\xe7\xa5?66\xca\x86\xd2\xd9\x84P\xc2\x9c\x9d\xbb\xa5\x91\x8f\',\xd9\xc9=\xf9\xe6\xb9-$\x90\xda\xcd#G\xb1\x08S\x1e\xd4\xf4\xc8\xbc+o\xc7U\xf8\xeai\xb3K\x06\xa3\xd6\xeab-f\xbd\x0c,\xe3\x0f7\xef\x07\x97$\x8e:)P}\x0b\xdf\xdf\xde\xba\x12}\xec\xcb$\x91\xeeyYv6\xe3\x8f-\x86H\xc0\xe4\x13\xfdi\xdb\xdd\xc5\x1c+o\x87\x9eV\x1e\x88\x9f\x07\xf0\xf5,\xc4\x1c\x0fv5\xdd\xb1\x9d\x9a\x1b\x89X3\xa2\xe2\x18\xa2\x18\x8d3\xc6Fy\'\x07\xf1\x1f\xd0Rs\xb6\xf4\x0ej\x1d$\x9cI\xe5YB\x99Q\xe4\xcaS\xfd(\x87q\xfe\xe9\x08<\x01\xd0\xf5\xa7\x90Y\xc0\xbe`Km\xa7vK\x1c\xef \xf2Kg\xbf\xcdI\xf1\x02\xaa\xef\x91\x10\xee\xc2\x86bX\xf3\x93\x81\xef\xdc\x9e\xf5N\xbf\xf1%\xe5\xc4\x93\xda\xd9\x02\xc4\x0f\xde\xce\xb9h\xa39\xc67\x7f\x13|\x0f\xd6\x82N\x05,o\xde\x9dj:\x8d\x8e\x96\x06\xf0\xd3\\N\x81\xa2\xb7\x8c\xfe\xf5\xce\x08\xce\x08\xf4\xa0\xee\xc6\xaa\xbek\x19M\xe5\xe4\xaaf\\\x98"P\x0cP\xf6\xca)\xce\xe6\xf7s\xd3\xb510\xcf\x1b\xcf$\x8b,\xd7\x0e\x8b\xe6O6\x04\x92c\xa6y\x1cs\xc0\xe8)\x0f\xbc\xc8\xd2\x14\xd8\x80+\x8cHH\xdd\xd8u\xec?\xa1\xa5)\xf9\xdf\x1b\xd7qR1\xea-(\xccg|\x99\xecI*;\x95\xc0\xec;\xd7k\x13\xc5u\x1d\xbczd\xd2^+\x01q,\x83\xf7)\x9c0\xc7w~{`{\xd4\x84\x16\xd3M*\xad\x8ef-\xe9\x92\xe25\x01\x15\x9b\xa0@\x7f\x11^\xf8\xe9Z.\x9b\xa5\xcdi\x0c>g\x99+#\x03\x87\xc8\xfc\'\xae{\xd3n\xcc\xccB\xec7\xce\xff\x00\xd2\x9c\x1aUrwm\xb0*\xa3a\xe0\xa1+\xfd\xeah\xdf\xcc~e\x0e\xbf\xbcrNB\xb3{\x0f\xd2\xad\xab\xa4\xa5\xba\x08\xe3X\xe3\x00\x0cFO\x18\x1c\x0c\xfc{\xd5\xa2\xda\xfeD2\x19#\xf32p\xaa[\x0cG\xb09\x18\xff\x004\xb5\x9d\xbe\x95\x15\xbc\xd1\x1bq\ts\xbd\x89\x01\xcb\x13\xfc\xccy5\xcd9\x00\x06\xfe\xd4\x93!\xc9$~\x95N\x82\x05e\x93\xccp\n\xbfu\'y^\xbbA\x19l{\xf7\xaeE\xa7\xde\x10N\xea\xbb\xc4g\xd2\xe0\x0c\x02q\x82\xc3\x81\xf4\xabe\xcd\x8a\xc90\xb7\xb3Ey\x1c\x12\xecz*c\x1b\x98\xfb{\x01\xd6\x9bM\xa5Kk\r\xb4j\x9ek+\x8c\xe3\x00\x9c\x1eX\x81\xf3\xc8\xa6\xccrs\xbe=\xe9bE\xe3\xbdV\x96\xc5<\x9c\xcb"\xed\x1b\xb77\x01\xdf\x18\xc1\x00`.sKZ\xe8\xebu\xe5\xb2#\x00F\t\xc1P\x0fA\xc0\xec*J->@n!\x86&w\x9a\\\xcd\xd7\x96n\x84\x91\xd3\xda\xa6\xe6\x93O\xd0\xe3\xff\x00\xa8\x98\x17rw"\x9e\x06\x07+\xf4\xe2\xab\xefg\x9a5\t\n\xe5\xd8s\xfe\xdf\xb5I\x80+\x9c\xb1\xd8U{Z)\xa4Z\xc8vB\x11\x91UJ \\\x909\xdc9\'q\xe8;\xd5F\xcfJ\xbd\xba\xbd\x17W\xb2K\xb8ym\x1c{\x83\x12N\x7f\x168\x00\x1e\x83\xf4\xab0\xb6\x9fV\xb9:\x83D#\x89d>W\x98FXv!O@;U\x91\xac\x8d\xb4@\x15_Td\xb1\x19\x18\xee3\x8f\xe9]\xb0\xb2kh\xbdLZF\x19w?4\xa9\xee\x030Pv\x1c\n\xabl\x82\x06\xd8cf\'\xd3\xd0z\x9b\xdb=\xf1S\xf6\xba]\xb4V\xf3_]\xc9\xb5\x15=\'\xd8w\'8\x1c{\x1e\xb4\xa5\x86\x9e\x02nhLJ\x98\x1d73s\xc6\xe1\xd7\x8e\xd5\x0b\xe2}j=Jt\xd2a\x89\xe4]\xe0;\xed\xda\xad\x81\xd3\x1f\xca;\xd4\x0b\xd6\x9a\xf1\xd6\xda\x07!3\xfcFV\xec\x7f\xc59\x19\xd250\xdf\xb6j\xbf\x7f\xa9\xdc\xf8\x86yl\xadP\xc3`\x9eXi\x18\x1d\xce\x01\xe1\x9b\x03\xae\x0e@\xfdj\xc2\xb6\x0bk\x14+o\x19s\x18\xc2\xa9\x189\xe9\x9f\xae)\xfe\x97\xa5\x0b+T\x867\xf3]\x81f\xc7S\xbb\xab\x1f\xed^_y\xc6U\xb2\xb6\x9b\xcawR\xf22\x9ec\xdd\xc1nq\xc9\xedV0\xdbEi\n\xaa&\x84\x1e\xde\xe7\xfa\x93M4\xcd#s\x93P3\xc1}\xab1\x86Eh\xe1Eo0\x96(\x1f\x1f\xc2\t\xc1*;\xfb\xf4\xa8\xedSV\xb9I\xa1\x827u\x85\xbdK\xcf \x8c\x0c\xb6\x18\xfeC\xda\xa7\xf5\xbf"\xcfM{{wb\xc0mF|1+\xd3\xa9\xc9\xcdAxcD\x9a\xfd\xa4\xbf\xbd\x9f\xcc\x1b\x8e\x03\x10I#\x18\'=\x87jb5{\x86%\x9ba\x91\x8d\xc74\xb2\xe1\x008\xfaT\xa6\x99es\x02\xb5\xc4\xd2\xfe6\xfcD\x96\n\xbd1\xf0I\xe6\xa4\x86\xf1\x91\x1c\x90\xe7\x03 \x12:\x9e\xbf<T\xdc\x91\xc3\x16J\x81\x85\xc0\x19\xe9\xc6\x07\x02\xaa\xfa\xa4\xd6p[\xcc\x00\xc330\xe39\xc6\x7f\xcdK\xd2G}\x87\xb56$-\xf7\xaa\xce\xb7\xa9y\x97+ah\xe19\x02Nz\x81\xceO\xe5N|3\xa3\x18f\x17\xf2+\x8d\xccLq\xb1\xcf\x00\xfe#\xf5\xedH\xe8\x1a:]\\\xbc\xa5@@\xe5\xe4,7d{d\xd6\x93\r\xa4H\x08\x8dB\xfaN\t\x1dG\xeb\xc5qA|\x95\xdcv\xf9\xa54\x9ap3\xbfz\x8c\xd9n\xe7,\xe1\x0ey\xc7M\xc3\xaf\xfd\xaa\xbdw{e<\x92\xb4\x13H\xd0\xed)\x18-\x90\xc7>\xa6\x1f\x1c\x00*\xc7t\xbej\xc3\x10\x89\xb2\xd9wd\x03\xa7S\xcfl\xf4\x15Oh\xed\x91\x9a(\xe3\t\x1c \xed@HP;*\xfb\xd7\x18zps\x9cWRC\xab\xb6)]\x12\xc1\xa7\xbby\x8d\xacE`d\xdcq\x87\xf5\xf59\xfat\xab\x9d\xc4\xa8\x8b\xe6*1\x8c\x1d\xa5\x0eA$\xf7\xa3I\xd3\xd6\xd6\xd6#\x80e\x957I\x8e\x99\xf6\xfc\xa9\xf5\xc2\xe4\x80\xa4\x9d\xbf\x8f\xd8\x93\xd0\x03\xefG\x96B\xd1\xe7\x12\xf9\xedUM]#1@\x85\xde<.F\xd0\x0f8\xf8\xefTaql\'\x8a\x03f\xac\xcb0/3\xee\x0cx\xc1\xe4\x1c\x00\xb5s\xd6c2\x02\x82@\x9bGS\xc7\'\xb5Sl-\xc1\xb9\x90\x04%\xca\x95\x18$\xf2\xdcq\x9f\x8aG\xff\x00\xdc\xeeN\xc3jp1\xf4v\x03z\xd0\xb4&\x98\xd8\xda\xee\x03+\n\xb6Nv\xe0\xe4\x8c\xd4\xf1\x92BK\x15\n\x008\x1dA\xef\xfdk\x8bEH"\x8a%BQc\xdb\xd3\x90:\xe4\xd3\x97s\xd0FW<(\x03\x8cc\xad?\xa1\xb8\xce)\x8f0f\xab\x1a\x84\x92\x0bI\x02\xc4T\x03\xb8\x91\x8e\xbd\xc9\xfc\xcdV\xec\xf4\xd6\xb4xcm\xaa\xccL\xb2\x85\xfe&l\xb1\xfa\x91\xd2\xa75\xd9\xe4\x7f.\xda\x16el\xee\'\xa1\xc7\xb5\'\x0cR\xec\xb6\x05s!\xe7\x9c\xf4\xeej4\x8a\xc7J\x83\xb9?\xda\x9f\x8eLd\x9e\xc2\xa7\xecc\x92+8ZE\'\xd2\xa4m>\xe3\x93H\xdc\x1d\xa9\xbb\r\x92\xc4\xafnq\xc8\xe2\xa5\xa3\xde\x88\xe3\xccE\x1bT\xe0\x8fn\xc2\x98\xdd\xe3dl\\m\xdd\x90\x14`\x8c\x8e\xf58\xc4\x00\xfbmQ\x84\xa4\x9a\xa9\xdeI\x13\x01\x9e\xcaG*s\x8fz\x96\xd0\xa3@\x932\xb9\x88\x90\xa7\x9eO#\x9e\x08\xa6\xb7\x16\xcf,\xc4\xc6r\xa5FFzU\x97K\xb3U\xb7\xc1@\x0bcvrzt\xa4B\x99\x91\xb0\xbcS\x92I\x84\x19<\x9aV\xe4\x91\x08\x0cL\x9c\x93\x85\xe0\x9a\xadI\x14\x8d\x03H\x92\x8f\xbc6\x17\x91\xe9R\xed\x83\x93\xf4\xab\xa4\xb6\xfb\xa3\xc6\xdev\x9e1Pw\x1aSM\xe5.\xe0\x15\x1c8Q\xc6\n\xf2)\xe2\x8c\x0eq\xed\xfbSj\xe3\x8c\xd4\x05\xc8X\xf5\x0b=\x81w\tW\x0c\xa39\\\xf3\x9a\xb1\xba\xbc\x93\xc2\xc1\x91UY\x9b\x81\x93\x8cc\x1di\x184\xa5\xfb\xf0\x90\x90\xdeZ\x93\xf4&\x9d\xe9\x9b&:\x84\xceAQ9X\xfe\x00\xe0\xe3\xf3\xa7#OH\x07\xb9\xfe\x94\x99$\x1a\x8e;\x0f\xebL/\x87\xee$M\xc0\xe0\xe3\xa6\x05@YD\x05\xfc")p\xfb\xb0C\x12F\x00\xe4qV\x9dF\xdftj\x80r{w\xa66V-\x15\xdc.\xb0\xaa\xb7\xa8\xf2z\xe7\x8eh\x032\x80+\xa1\xf1\x115\'{\x00\x91\xa3\xc6\xd0\xac\xd8`H\x18\xe2\xa2\xef\xe2\xb5\xb6xn\x10zD\xca\xaa\x81\x86\xe2\xdf$\xf5\x15-t\x84\xb8\xc9Ps\x8e\x99\x1c\xd4\x05\xf9\xb8\xb0\x9bOe\x85&\x8dY\x99\xdbo\xe1\'\x81K\x93\xd2\xb9\xc7q\xde\xb9\x11\xc9\xc6\xae\xc6\xa6n\x96S4\x04\x1c\x0cz\xb9\xeb\xff\x005I\x8e9\xac5+\xb8\xa5\x18I\x0e\xe4`rw{w\xe3\x9a\xba\xce\x92K\x1cL\x81\xceps\x9e\x05T.\xe1\x9a\xd3\\\x82[\x88\xfd2\x02\xb9##\x9fzx\x9d-\xc9\xe74\x80A\\g\xb7\xf4\xaf\x8c~\xdb4$\xd2\xbc\\\xf7p\xa0\x16\xfa\x84K*\xb0\xe8d_K\xfeg\x83X\xd5}\x9f\xf6\xef\xe1\xe8\xaf\xfc6\xb7\x90\xc0\xab6\x9d\'\x9aX\x1e\x0cM\xc3c\xfa\x1a\xf8\xc4\xf5\xab\xcbY\x04\x91/\xb8\xd8\xd5\r\xe2h\x98\xfb\x1d\xc5}u\xf6qp\xf7\x1e\x1e"q\xe6\xb5\xa8E\xfcXvD]\xd8\\rx5\xb3i\xd7s^\xacl\xa8\xa8\x04G\x90\x0b\x04\x19\xdb\xc9\'\xa9\x00f\xbeV\xf0V\xb0\xf66\xb6\xbeS\x04a.\xc7\xc9\xc1*WnO\xc0\xce+\xe9\x1b-L[Gk\x1aF\x0ceT,[\xba\xe4\xf59\xaa{\x9c\xac\xad\x8f|\xfd\xaa\xee\xd9\x83F\x83\xfe\xd1S\x92\x17\x8a\xda\t\xe7\x05\xd6"\x00a\x85\x01\x0f\'v9\xe3\xe0\xd5\xde\x16\xb4\x9e\xce\x17\xb4E\xc0]\xae@ \x1e\xe0`\x9e\x0f\x1dMC\xdaY\t`\xf2\xa4\x89N\xfe6\x01\xc0\xdd\xce)\xeb\xc1u\xa7\xc7\x98\xa3$\x18\xd5dP0\x0e\xde\x05CrG\xacv\xe7n\xd5(\x15oA8$\xed\xf5\xaf/\x0c\xe0:\x15\xde\x08;\x97\xe1\xbf\xb58\xd3`\xb3[e\x01!\x8d\xa3#\n\xd2\x1d\xc1@\xfa\xd4\x8cWQ^\xda\xc7" r\xf8\xc8\xc7B:\x8a\x80\xd6\xbc\xa8\xcf\x9e\x90\xa8t`\xa4\xff\x00\xb4\xd7]\xb0\xba\xc0\xd4@\xe2\x9b]\xdbA\xf4\xe4\xe0\xd5\xa3\xc8K\xcd\xad\xe6#\x06\x19\xc7n\x98\xcdA\xde\xe9\xf3Z<r\xc0\xd1\xa7\x9d\xc4\xca\xc9\xbb\xeaI\xe4\xe3\x8a{\xa3\xcc\xc6=\x8e\xc0\x1ceO\\\x8a\x90\xbc\x96B\xad\xbeL\xc7\xb7\x0f\x85\xe7\x9a\xe8\xd34j\xe3\xbe\xe2\x90KE!S\xda\xa3\xec\xd2)\xa0\x063\x92\xb8B\x83\xa63\xd7\xe9P\xba\x96\x8e\xaa\xa6f\x92_5\x18\xb2:u t\xfc\xb2qL\xa0\xb9\x9bK\xd4e\xf2Y\xccD\x10\xc1\xc6ISV\xd8f\x96\xee\x00\xc8AU\\\x02\xc3\x9d\xa7\xaf?4\x84\x1a\xc3)\x1b\x8f\xcc\x05u\x89B\x08;\x1d\xc5A\xe9WAL\xca\xf2\x97\x91Q\x87\xaf \x86#\xa1\xce:\xd5\xa6Kx\xae \x1bd\x02@\x80\x8cu\nF=C\xbdR\xb5H\xe7\xb6\x7f:$\x0e\xaf\x81"2\xe4\x15\xff\x00\x91R\xda-\xebK\x1b#\x04,\x00\x08\xb8\xc1\n;f\xb8\x80\xabym\x83\x9e3C\x9c\x80\xeb\xb69\x15\x19{\xa3}\xcd\xe5\x9a<\xa2\xc7\'\x9a\x81:\xaa\xfb\x8fu\'\xa8\xa9\xdb\x1b\x9b\x1dZ\xdaC4E\x1d\\\x96u\x18(\xc0p\xcaOAO\xa7\xb7\x13\xa9uUu#k\x06?\xc3\x9c\x90~EVa\xb5{;\xe5B\xe5\xa1euE#\x86V\xe7\x07\xe4\x1aXE\x88\xe7\x1e\x92x\xf94\xd9s \xc7\xf3\n\xf7S\xd3\x9eY>\xf5\x0cdL\x83\xd5\xfc\x92\'B~?:\x7f\xa3j\x9er\x8bK\x82\x1b\x1e\x96Y:\xe3\xb0?\xf3R\xf3\xcb<\xd6\x91<Q\x106\x1d\xf1\xf1\x92\xa3\x83\x8f\x91U\xfdJ\xc5aH\xef"`\xeb \x1b\xb1\xc3\x1f\x9a\x1a?,\x97D\'\xfd\xdfJ\x03\xeb\x1aX\xe3\xdb\xe2\xa4\xb5\r\x1d.\xa2\x99\x98\x16\r\x83\x9e\xf1\xb6ya\x8f\x8e\xbd\xaa\x8bk\x05\xde\x89t\xe27>K8hC\x91\x80\xc7\xb2\xfc\x1e\xde\xdd+V\xd3\xaf#\x9e\xde=\xeaA\xdb\xce{\x81\xefL\xb5m\x12\xd2\xf6\xdeD8\xc36\xf4\xe7\xf0\xb7\xc1\xa7Z\x00\xea\x1d9\xe7\xfb\xd3K1V*\xfcqM4\xe9E\xf4\n\xd2[/\x9a\xa0nA\xc1\x8c\xe3\x19\\}j/V\xf0\x9d\xb6\xa7\x18\x02\x13\xe7\x81\x81 \x00\x96+\xd0\x91PpK}k|#C\x89\x11\xb09\xc1l{\xfc\x1a\xd2\xf4\xf9V\xedY\x83\x90v\xf4=Q\xbb\x8a\\Ad]\'c\xde\x91!h\xc9 \xedXY\xd1\xf5-2vQ\x00\x018!\x9b\x90;\xe3\x18\xab.\x92\x1a@\xb6\xf2\xc8F\xf1\xb1\xf0p\xe1:\xedV\xea0y\x07\xde\xae\x1a\xf6\x8e\x97q\xf9\xb1\x9eTdu\xc95H\x1atq\xcce\x12\x18\xdd:\xa0\xe3\x8fjm\xa3h\xdb\x93\x8c\xd2\x95\xc3-hv\x0c\xb76ikx\xee\xce\xd1\xe3\xcf*\x17y\x1c`\x81\xd1\xf1\xd7\x1d{T\xb3[[+\xfd\xe4C#\xbc\t\x80\xa0\xe0\xb2\x01\xfa\x13\xed\x9a\xabZ^\xa7\x95\xe5\x19K3`\xe0\xf6\xc7qV+K\xa9Q\x96\xdaiK\xe7\r\x1c\x80`m\xeb\xb4\xff\x00\xcdK\x8c\xa9\x0b\x9a\x8a\xe0\xe4\xef\xf6\xa6\xf7\xfa>\x9b\x7f\x16\x1a\x16+0S\x86\xcf\xe2\x1c\xfa\xbek-\x92\xd6\xef\xc2R\xdc\xcf\x15\xb8\xb8\xb0b\\\xdb\xe3\xd7\x03/S\x19\xf6\xf7^\x9d\xc5m\x8c\x0b\xda\x15%\xa2\xf2\xdf \xafC\x83\xfei\xad\xf5\x8cW1JJ\x8c0\x18V\xeci\xc7\x888\x14\x85\x94\xaeA\xe3\x8a\x83\xd0/m\xb5h\xed\xae\xd1\x91\xe0r%\x8aU\x07\xf1t\xe3\xd8\xd5\xbc\xbd\xc4"\x13\xf8\xc21\xc9\xcf\xe2V\xe9\xff\x00~\xf5\x8e,\xb2\xf8GR\xb8\x96\xd9ekI\\\xb5\xd5\xba\x8c\xedo\xff\x00i\x18\xed\xf2+Z\xd15\x8d;V\xb7\x8aH.\x16d#\xaf\xcf\xc8\xeck\xb0\x11\xba\x92A\xcd"Ps\x9cdb\x9c^\xd8\xd9\xea\xf6a\x0b\xbcR#\xe6)\xa2b$\x86E\xee\xa7\xb1\xf7\xecj\xb1,7\x7f\xbb\xb5\xbdD\x86\xec\x10"\xbaA\x88\xe6#\xa1\xc7\xf0\xbf\xb8\xe8{U\xee\x08Qr\xe10\xc3#\x9e7}i\x0b\xbb\x05\xbc\x08\xc5@e<\x1e\xa0\xfc\x1a\x92SP\xce\x06\x7f\xad4\xaf\xa4\xe0\xf1\xfd*\xa7\xa6^_\xb3Og{\xe5\xf9\xd8e_5}2/\xb1\x03\xa8\xaen\xb4Q\xafY\xd9\x08\xaed\xd2\xf5\x0bk\x96x\xa6\x88\xab4l\xa7\x95\xf6h\xdb\xa9SKkV\x970\x05\x90\xa7\x98\xb1\x9e\x1d\x7f\xd4\x8f\xe4{\x8a{\xa5,w\x11\xad\xc5\xb3\x03\'\x06U\xc7\xe3\x03\xdf\xe6\x91\xa7\x07I\x19\xdb\xbf\xb5+V\x06\xa0q\x93\xfb\xd4e\xb7\x89/,u+]/\xc4v\xd1Y^L\xd8\xb5\xbd\x84\x93ks\x8e\xc0\x9f\xc0\xe7\xf9O\xe5V\xcb\xa8|\xe5>ly\xe3\xb0\xe3\xf2\xa6\x17\xb0i\xfa\xb5\xb3\xdaj\x16\x0b-\xbc\x8f\x8f-\xff\x00\x84\xfb\xe7\xb1\x1d\xaa\x0f\x1a\xb7\x84\xed\xd04\x93\xea\x9aR0\n\xc7\xd7sn\x87\xdc\xff\x00\x1a\xaf\xeb\x8at\x1c\x03\x93\x91I\xc6H\xc6\xcd\xfb}\xab\x8b{;\x16\xbd\x9e\xce\xe6\xd2+\xcbk\x90\x0b\xc0\xc8\xb9\x03\xa6pzc\xdcsW\xb9\xf4\xef\xba\xa5\xba\x89\xe5\x96\xc4\xa8\xc4,r\xca\xc3\xa7\xaf\xa9\x1f\x06\xab2C\x05\xec\xd6\xda\x96\x9d">\x06C\x0eC\x0fcV\xcb\rf;\x95xL~\xa4\x18\xf2\xcdu\x15w\xce7\xe0\xd2\\\xb6A\x1d\xb9\xa4R/1IB\xa0\x91\xca\x9f\xc5\x8a\x89\xbf\xd3"\xbdI\xad\xee\xe0K\x88\x9f\x97V\x1b\x95\x80\xe8H=\x18{\x8a\x93\xf3\x1df \xa6\x1f\x19\x1e\xd8=\xa9\x9d\xf2jQ\x0f\xbci\x85Y\x80\xf5\xdbI\xf8$\xfa\x1f\xe14\xe6\x068\xa4\x8c\xe4o\x8a\xa7\x9bmS\xc3\xc1d\x81\xa6\xbe\xd2#V2Z6d\xba\xb7\x0b\xd3\xc8n\xae\x9e\xea\xd95;m\xa8[\\\xd9[\\\xc3v\xb3ZK\xc9+\xd0|\x0c\xf2\xa4t*zT\xb6\x9d\xa8\xc1z^7\x8c\xc1p\x9f\x8e\xdd\xcf\xad~\x9e\xe2\x92\xb8\xd1mb\xb9\x92\xea\xc4\x08%\x94\xe6d\x03\xf7r\x9f\xf7\xaf\xbf\xcfZ\x02\xed\x95;R\x89\xdf\xd47\xf7\xf7\xae\x0c\x16WX"We\x1c\x00\x1f\x8f\xae=\xea\x0e\xefL\xd99\xb9\x8efG\x88\x97\x8f\x07\x95=2\x0fPM-q`\xcf"\xbcp\xf93n\xc9\x19%N)U\x85\xe4 J\x8d\x13\xee\xc0\\\xf0\xdfJI\xc1\xe4oJ#N\xea\xe0\xfcRpjSC\x00\x83SG\x9d\x06\x02\xdc(\xc9o\xff\x00x;\x1f\x91L\xef-,\x12_6\xca\xeeH\xb7\x10\xef\x14\x9e\xb4c\xee3\xdf\xe9V\t4\xe7p\x01V\xc0\xc5DM\xa5\xde)!P2\x03\x95\\WH>\xd9\xfe\xb4\x90W9\xce>;WZu\xdd\xda:\xc6\xcc\xf7H9\x16\xd3\x13\xb8|\xc5/\xff\x00\xda\xdf\xadM\x05\xb4\xd5\x0c\x92\xd9\xc8VX\x80Ym\xe4;eB;8?\xd0\xd3[\x13qi\x1f\x10`\xb1\x07kv\xfaW\x17\xd0\xcby!\x9b\xee\x86\x19\xf6\xe2;\x98\xf8\x91\x0fn{\x8f\x83]\x19\xc7\xbd$\xf3\xce>i\xf5\xb0\x8e%x\x9d\xe5RA\xde\x8f\xcf>\xe34S\x1b\rvh\xbc\xbb]v\x05I\x94\x90\xb7H=\x12\x0e\xc7\xe0\xfb\x8a+\xa1\x97\xdcRY\\\x1e\x0f\xda\xb0\x18\xecuK\xc7V\x8d\xa0\xb0B\x0b;\xbf\xef.\x00\x07\xa2\x81\xe9C\xf3\xc9\x15a\xd3\xb5\x1d?M\xbf6\xf0\xe9\xd3j\x1a\x91\x8f\xaaf[\x82\x1b\x95\xf3drDi\xc7s\x8a\x8e]6\xfeuU\xbe\t\xa6\xda0\x05-\xed\x9f7\x05{\xef~\x83w\xb2\xf3\xf3S\xf6\xa9c\xa2YN\xb6\xd6\x89o\x0f.\x91\x8c( \x0f\xc5#uc\x9e\xb9\xaa\xf5\xf4\xd3\xc4\xe4{\xfcS\xf4\xb4\xbd\xd4\xc4\x87Zx\xed\xe2\n\x15\xac\xad\xe4a\x0b\xb1;\x80\x92N\x0b\x11\xec\x83\x1e\xe4\xd3\xc9u\xad\x19\xf5\x0bk\x16u\x96\xe7\x04\x80\x10\x80\x0fL"\xfd\x07\'\xb0\xefQ\xf6w\xda\x85\xd2,\x8c\x00V\xc3F\xee\x08,q\x8fJv\x03\xe6\x94\xb0\x81\xedf\xf3\x15\x97\xceuc$\x98\xc9\x7fb\xec{\xfb\x01\xc0\xa7\x03\xf1\x81\xcf4\x8cs\x9e\xde\xd5-q\xe7]\xca\x11m\xc4I\x10e33\x15.\xa3\x8c(\x1c\xf1\xfc\xc4\x8f\x8ag:Z\xc1#\xf9\x03\xd7\xb1p?\x1b7ls\xda\x94/qs\'\xdd\xf2d\x1c\xef\x94\x8c*\xe7\xaf\xd2\xbcdxd\x88E!\xde\xa0\x8d\xe8py\xe0\xe7\x8e){\xb7a\xf54\x9c\xe3\xbf\xe9PMk|\xf7\x124\xd3\x04\xd8C\xa8\xc7\xa0\xa9\x18\x1b\x8fS\x83QN\x960;/\xdfU\xe5}\xccd\xce\x00\'\xf8\x9b#\x9c\xfb\n\x9e\xd4\xa4H\x14Ksr#N\x14\xc8\xfc\xee\xc9\xe9\x81\xcb\x1faU\x9b\xcbc\xa9)\xf2&\x96\xc22\xc7\xf7\x8257\x12\x03\xc6\x14\x10Dc\xe7\xad2\xd8\x1bb\x9cRN\xe6\x9b\xddj\x166W\xb1\x02\x8f\xa8\xdfN\xc0$J\xd1\xbb(=\x0e\xdc\xe25\xc7W4\xfa\xef@\xd45_&m@\x0f!\x0eV\xd2\xd9J\xc2s\xd0H\xc7\xd5&1\x908\x19\xedK\xe9z=\xbe\x97\x0cp\xdaX\x84c c\xbb\xf1\xc8\xd8\xff\x00Q\xd8\xe4\xb7\xe7WM)\xae>\xf7\x14q\xcb\xb5\x07\\\x1e\xb8\xf7\xff\x00\x81@\x198\xdfz\xe9n\xe2\xaa\xd0\x88\xa2\x0b\x0f\x91\x1a\x88},\xb16\xd4\x8cg=\xc5L\x85\xb8\xb8\x06(\xe5\x022=O\xfcy\xef\x81\xc6\x01\xf75/\xab\xdb\xc0\xd3+-\xb0\x96e\'\xca\x89Te[\x1d[\xb2\xfdMV\xd3\xc3\x8du\x13M\xa8\xde\xe60\xc5\x9a\x05m\xb0.\xd3\x9fY\xe0\xbf>\xfcW\n\x90H\x02\xba\x18\x10\t\xda\x96\xb8\xd4\x1e\xe9\x8d\xbe\x99j\xd3\xc6S\x12]\xbbl\xb5]\xa7\x07s\x0fT\xbf\x08\x9c{\x9aU4{(\xa4\x8fQ\xd65\x19/\xee\x9d\x95\x12[\x80\x02!\xed\x1d\xa5\xba\xe4\'\xd4\r\xc7\xde\xa0\xee53\xa9\x15\x8fDX\xd9c"1}*\x13k\x1f\xb8\x81\x07\xfa\xaf\xfd\x05J\r\'O\xd1\x04\x17W7\xd3\\\xde\xb9\xcb<\xc7}\xcc\x99\xea\xa8\xa3\xf0\x8f\xf6\x8e\x05s\'\x078?\xd2\x94\x0e\x0e7\x1f\x1d\xeaU-\xf5+\xc5\x05\xd1\xa0\x88\x86)\x11|\xbf-\xfc`\x1f\xc4GE\xe8;\xf3L|\xe95\x16\x96\xd2\x18\x12\xfc\x16\xd9<n\xe3\xeeq2\xf3\x86`3#\x0e\xe0d|\xd3\x95\xb1\xbd\xd4\xadYn\xdaM>\xda@3n\x8d\x89\xd9\x07P\xee?\x0eG\xb74\xfe\xde\x0f&\xd4\xdb\xc0\x8bi\x11\x1ba\xd8\x06@\x1d\xc0\x1d\xe8\xc6}\xf1\\\xd5\x8aA\xadc(\x90\xdd\xce\xd7RF\xc9#\x92\x8a\x15\x18\x0e\x02F3\xb4\x0e\xdd\xeb\x98\xd6?9\xe7\x91\xcc\xb7.\\+\xb2\x9c\xc6\xacxE\xee\xaa=\x87$\xf5\xa4\xa6\xb5\xd2t\xabY&\xb9\x98\xc7\xfb\xcc\xb7\xad\x9aG~\x99\xf7f>\xd5\x18\xe2\xf3V!\xe4\x8a]:\xc0\xa8\x1b7\x7f\xd4J\x07\xb9\x1f\xe9\x8f\x8e\xb4\x93\x9a\xe89\xfaS\xdb\xbb\xbba<\xc9g\x10\xb9\xbf\x8a\x0f\xe2}\xb1DO\xa4\x16a\xf8~\x83&\x9a\xda\xc3,~\x99e{\xbb\x98\xe1m\xf3\xa9\xd8\xbb\xdf\xa2\xc41\x85\xc7\xb8\x19\xc7SR\x86;M>\x0f&\xde$\x8a\x01\x19\xe4\x10\x02\xe7\xfb\x9a\x8c\xb6\x93z\xc9o\x02yQ\xec*\xb2\x13\xf8\xcbw\xcfR}\xcd!\xb9\xe0R\x94\xe4m\xfa\x9aaos\xfb!#\xb0\xb7\xb2\x8ek\xa9\xd9\x9c\xdbB\nF3\xd5\xe5v\xc9\xc6\x7f\x89\x89bzWP\xe9\xce\xf7\x9f}\xd4%[\xbb\xa8\x81\x10\xa8M\xb0[o\xe7(\x84\x9fW\xbb\x9fQ\xedR)\x1d\xc4J\x89n\x01\x8e\x14e\x0b\xfc#\x03\x96n\xe4\xfb\n\xf2\x16xl\xc9,\x15\x8b\x13$\x8e\x06I=\xc8\x14\xd194\xe8#\xefJ,\xb2}\xe9\x14\xc0\x85\x97\x7f\x05\xb2\x14\xf5\xdcs\xce[\xda\xa1\xccLg\xf2\x95Y"V-p\xc8\x08\x123\x1c\xb2\x8e\xe74\xba\x86\x82\xd4\xcb\xb9`\xb7\xc9\x92I\x1c\xe2I\x08\xef\xcfJB9\xa5\xd4\'\xb3\x9e$)\x17\xe2PN\xd0\xc7\xdc\xfb\x8f\xad7\xed\x9eM86\xe3\xf5\xaeeCz\x11U\xde$\x8d\xc8\x92A\xf8\x8a\xe7>Z\x1e\xdf\'\xb50\x9e\xe2,\xb4PA\t1\x9f\xdd\xa7!c\xdc:\xb6z\xfe\\\xd4\xfd\xed\xca\xc7"\xaa:,lp_\x8c\xf1\xd8Td\xb6\xf6\xea\xccS\x900\xdd\x81\'\xd8\xd2\x08\xc7jP;w\xa87xl\xe2\x99\x82\x87\xf3\x1c?\xab\x92OO\xd3\xe3\xa5#\'\x88\xad\xac\xad^[\x88\xc0\xc0\x05\x19\xc6\x01\xfa\xfc\x8fj\xe7Y\xd4\x16\xce(\x81D3;\x9f. 2\xcd\xf1\xf4\xaam\xed\x8d\xd5\xd4\xc9uz\xa4\xb9\x00\xac\x19\xca!\x1d\xc7\xb9\xae\x0c\x0cg\xbd+4\xdfU\xf1\x06\xa3\xaeJ\x85\xe3h,\xd1\xc3")e\x92]\xbc\x00\xe7<\'\xc0\xa8\xf9o\xe5\x8d\x14\x1c\xe3w\xa5\x14\x90\xa3=@\x14\xee\xe3\x11G\xear\x08\xc9=\xf3\xf0*>\x08E\xc1I\x1f1\x828\x07\x96\'\xdc\xd3\xb9\\n+\xa0\xfbR\xf0\x88n]L\xd2\xb7\x9a\xc3(\x02\x8c/\xe7\xde\xac\'J\xb5\x9e\xee\xdbM\x01\xa3\x86T\x12;\xa8>\xb0Ny=q\xf1Ml\xed,\x90\xacr\x03\x90\x7f\x17J\xbe\xe9\x10[\xa4\xc6\xe0G\xfb\xb4_.=\xe3\x9cS.\xda\x98c;~\x94\xb0p\x1a\xae\x1ad:n\x99m\x04\x11F\x88\xa8\x00P\x00\x00b\xa4n.\xe0\x9d\x90\tr\xe5\x8e\xcfY\x1c\xf7\xc95\x0e\x03n\x8f\x11\x897\x03\x96\xec)k;\x14@\xcd/R\xc5\x8e~{\xd2A\'l\nA\xc6s\x9ay"\xc3\x1b,\xaf$L\xd1\xf3\xc1\x1dH\xc7ZAn\x16Q\x1e\xe7\xc6\t%H$(\xf79\xeb\x9fsB\xdb\xc4\xf2\x12\x8a\xa5S<\x91\xc6\x7f\xe6\x9b\xb3fg\xdc\xa43\xae\xd1\x81\xe9\x00w\xfa\xd2O\xe9KR6\xf7\xa7R\\0\x94y\x0cA\x95\xc1r\t\xfc#\xbf\xbf\xd0S\xf8\xaf\'2m\x0f\x95\x18\xfc\\\xf1\xed\xcdDB\xf3\x82\xfc\r\xcb\xe9S\x8e\xde\xf5`\xb2\x81#\x1fx\x9a0\xa9\xd4\xf1\xd4\xd3RI\xe5&A\xdc\x9d\xa9j5\xb0\x18\xe3\x9aZ\xe2v\xb7\xb0y\x01`@\xc9\xc7\x19?\x1f\xf3Tcm&\xabpn$\x85\xe5\xdb\xc2\x0eJ\xb3\xe7\xfa\x81\xde\x9e\xea\xba\xad\xdd\xf4\xad\x05\xb4d\xf0G\x1c\x00>jcJ\x8e\xee\xda\x18Q\x13n\xc1\x96\xfa\x9e\xb5\x1a\xd6\xdd\x892HNN\xf5"YB.\x84\x02\x9f\xdb\xdb\xc9\x18\x12K\x1b\x05D\x01\x81\xe7\xa7`(\x1f}\xbe\x9fo\x97\xb1I\xcf9\xfc\x89\xa7\x92\xbc\xf3*)\xc0\x19\xcf#\xad<\xfb\xd5\xa6\x9b\x13I,\xbb\xa5a\xefR.\\,l\x88\xd8f\x1b|\xd3\x11e\x9b%s\x8a\x88\xf1\x14\xa6\xc2\xc8\xa5\xbc\x8a\x93H=l\xe7-\xb7\xbfNj\xb3\xa0\xe9\xc4G%\xdc\xc4ob3\xc7\xf0\x0fj|m\xdb\\\xbai\x9c\x91\x18l\xb1?\xc4\x07@>*\xc8\x96\xc9\x1a\xf0\x00@?#MY\xdayQ\xe7\x1c\xeeM9<\xf9\xc2\xe7\xebPR\xdc\xb4v\xf2\xce\x8b!\x92G\xd8\x83\xa7|\x01\xf4\x14\xb46\x12\xc3\x08\x9eI\\\xc9\xb4\x92\xc4dn\xf7\xa7P\x815\xcb;C\xb5:\x01\xf0)}O_\xb4\xb7O&8\xc1f\xea:\xd7e\xf2\xe4\xd8\xb6\xe3\x8a\xe2\x97\x18\xc2\xf3\xcdg\x93Cw\xab\xea\xa24\x89\x84+\x80\xed\x8czA\xe4\x8c\xfb\xd6\x89ka\r\xb4q\xacQ\xed\x18\xce)\r*\x19\x1dd\x9aT\nd\xfc v\x150fE$\x14\xce\x06\x07\xbdH\xb7\xb7\t\x18\xd8qM\xcb1f v\xa8\xf9L\x8cU\x96%\xe0\x10\x14\x8e\xa2\xa8\x9a\x8d\xac\xb7S\xc8\\))\xf8A8\xfe\xd5o\xd45\x03e\x0b\x90\x8a\xcc\xc4\xe0f\xab\xba~u\x0b\xc5\x06 \xa39jjP\xa4\xaa\x0eI\xde\x9c\x88\x90\x19\xc8\x18\x03j\xb1iZZ\xd9\xdb\xc5\x1cm\xebp\x19\x8f\xc9\xa9\x99m\x91bf\xf3\t|c\x1e\xf9\xa5cB\xaa\n\xa0$\x0c\x03I\xbe\xe4E.\x00\xeaMJ\x11*\xae4\xff\x00\xc5G2\x12s\x9e\xf5^\xbc?sIdPCm\xea8\xed\xd2\xaa\x9a=\x9d\xcd\xd5\xecfX\xc0Gm\xe4c\x8e:T\xc6\xb3xg\x05P\xe4\x13\x82\x05Ox~\xc6\xe24\xf3$~\x08\xe0c\xa5FP%\x93\n2\x01\xdf\xedR\t\xf2\xe3\xcblH\xa9\xa4\xb6\x02"NG`\x053\xbd\x86\x18b,\xf2\x90\xaa3\xb7\xe4T\xc4\x85v\x05/\x82{\xfbUWY\x99Qv\x19\x87\xcd?:\xaa!:A\xda\x9a\x89\x8b0\x19<\xd5\x13T\x96;\x97\xc0\r\xean\x80v\xa9\xaf\x0f\xe9\xb6fg\x97\xcar\x14`\x13\xef\xde\xa2b\x9e)n[\x9e\x9c\x03\x8a\xd2\xb4TX\xed\x81*\x06j\x15\xb4A\xe4\xdf\xf9G\xefR\xe6\x90\xa4{\x0ei\xccq\xc7\x1cY\xc3\x1e84\xceWB\xfb\xf6\x9c(\xe4\x8fz\xb0\x95\x8fh\x00\x0c\x1a\x8f\x95\x14o\x1b\x06\xdcU\x9bE\x808\xa8\x0b&N\xf5\x9e\xdd\x88\xee\'%\x14\xb7=\xfa\xd4\x95\x920\x9e!\x91\xfe\x91\xfa\xd4}\xf7\x96oZ\x148=I\x155in\x89q\x11\xdd\x81\xe5\xe0\x8a\x80\xa8L\xe9\x8e3\xbdL.\x04M\xf4\xa9/\'x\x00\xf7\xc6*\x1fQ\x88\x97U\xdd\xb4\xa8\xe4\xd5\x90\xac^Y\x01\x88\xf6\xa8\xbb\xdd\x9bTl\xdc\xde\xf55\x90c\x8a\x8c\xaf\xbf5\x00\xb3y\x1e\x82A\xf6>\xf5m\xb21\xa4J{\xb0\x19\xaad\xcf\x18\x91A\x8f85l\xb2Y\x1a\x18\xb8\x0b\xc0\xa4[\xa8\x0c\xfe\xf9\xa7&l\xaa|T\x8c\x93\xa9|l\xe9\xfaTrK,\xb7\x0e6\x00\xb8\xebJ\xce\xad\x1b\x13\x92x\xe9M\xf4\xd4\x12\xdc9r~\x05<\xc0w\xcf4\x98\xf2x\xf6\xae`*n\'![\xd5\xc0\x07\xa7\x14\xb6\x8fg\xe4\xda\xc9\xbc\x05-+\xb6\xdf\xa9\xa9[\x9b(\xa2P\xeb\x90\xd4\x85\xad\xbb"6\xf2y9\xa5E\x86\x00\x80v\'\x1bRe\xca\x93\x927\x03\xe6\x93\x92\xdd\x0eK\xf4\x03\x8a\xab[\xcf\x04W7\x1b\xa5fe\x97\x1bOaV\xcb\x8c\xf9m\xd6\xaaRZ7\xde\x06\xd4\xe5\xdc\x12k\x92zJ\x9cWb9\x0c\t\xedV\x89\xa2\x8ehw\xa09\xc6j\x06\xe6\x04x\xe4\x0e\xc4\x021V\x85\x82D\x85T\x7f-V\xf5Ky\x15\x1b\x93\x83\xda\x97*eI+\xb67\x14\x88\xa4\xc3\x00\x0f}\xa9K)U\xadR1\x9fH\xc0?J\xaf\xf8\x80\xdc\x18a\x98\xaeV7\x01\x86:\x8a\xb0\xe8\xb1\x11m\xc9\xc9\x06\x99\xeb{\x9a\xd9\xe2\xdb\xc1\xae\xe9\xfe\x189\xec+\xa1\xf1!\x00w\xaa\x9e\xbf\xa4Z\xeb:E\xd4n\xb9I\xa1d*zma\x83\x8a\xfc\xdd\xd64\xf9t\xadN\xfa\xcaT*\xf6\xf3:\x10z\xe0\x1e?\xa5~\x9c\xc1\x1f\x99\xa6\xec9!{W\xc5\xdfn^\x16M;ZM^\x02\x04w\x98\x12/p\xe3\xbf\xe7Sl_L\x8c\xa7\x86\x19\xfb\xd4K\xe4\xd5\x18`7S\xfbU7\xc3\xb7%\xadc\x8c:\xab7\xa4\xe4\x9c\xf1\xd3\xaf\x1c\xd7\xd5~\rW\xd6\xad,\xe7*\xb8\x81v\xb3\x13\x92\x00\xaf\x8d\xf4[\x9d\xae\xa8\xc4\r\xe7 \x9e\x99\x15\xf5/\xd9\xb6\xac\x92B,\xe2g\r\xbf\xd5\xcfR\xc2\xa2\xf5\x14#$\x0eN\xff\x00z~\xc1\xf8\x04\xf6\xad\xdfK\xf1*\xa3\\@\x96j\xdfw|n\xeb\xc0\xefW\x0b{\xa4\xd4#g\x11\xfaXTF\x8b\xa3\xda\xe8)s-\xdf\x96\xe2\xe12\xc4\xf3\xcd=\xd2u\x1b\t\x9eH\xa2+\x8c\xfa@\xf6\xa8\xb00$\xa98\x19\xc6\rI\x98m\xa8\r\xfd\xc1\xa6\x96\xed%\x9d\xd1\x85"\x00;\xe5G\xd7\xadO]\xd8,\xb1\x9cX\xaf"\x90\xd4#8\x0e\xa9\x86S\x90jv\xd6\xedg\xb7L\xe78\xe6\x9f\x8e%\x0c\xc8x\xe4f\xa3\xc9#\x15G\x03~\rR\xa0\x86k[\xad\xad\x16\x14\x9e=\x85[\xc5\xbc\x12D\x01\x8f=\x0e:T.\xa0\xcd\x1c\xbb\x82\x12\x01\xa9[;\x95\x9a0B\x9c\xd2 \x8dc\x96H\xf1\xb1\xf5/\xf8\xa5L\xe5\xe3\x8d\xc7 `\xd5\x7fV\xb2\xb2\'r\xc4\xc2P?*4X|\xc8\xe5\x8d\x89\x1e\xc0\xd4\xc5\xe0\xde\x1bl|\xfb\xd5n\xdeY\xad\xae\x9b\n\xc4\x1e\xb5\xc9\x10E2\xc9\xc0\xe1\xbeEu\x1c\xbce{\x8d\xc5O\xddYE\xc0\x94nF\x18\xe3\xa8\xaa\x8bX[Y^\xac\x913`6z\xf1\x8a\xb9K4\xd2B\xbba\xc9\xa8\xab\xc4W\x81\xd9\xa0*\xff\x00\x14\xe4\xb1+.\xc3~A\xa4G#\x03\xbe\xe0\xed\x8a\x90\xb5\x102(Q\xe9v\xc9\xef\xc9\xaeot\xa8.-\xdc.\xe1\xb0\xe4\x0c\xf4?\x14\xcfJGU\x1b\x94\xe2\xacHw\x02\x85M)\x15]\x06\xa1\x9fzC\xb1G\xf4\xb7\x15[\xb6\x964EG\x90\xe47L\xf5\xa6\xd7\x9at\x97\x16\xd7H\xa7\x0b\xd6<t\xa9-GI;\x8c\xf1\xa7\xa9y\xc7\xbd8\xd3\xe62\x80\x84m\xecA\xf7\xa4\'\xa5\xfc\xb7\xf6\xf4\x9fzQ>\x90\xe9\xf7\x15]\xd1e\x05DR7+\xc1\x06\xae\x91\x08\xe6R\x9bG\xe1\xc05U\xd4\xf4\xbb\xdbk\xa3sn\xa0\x8e\xac\x05X4\xab\xad\xf1r\xbc\xfb\x1a\\\x00\xa34l;\xed\xf4\xa4LC\x00\xea{o\xf1Q:\xbe\x8bo4\xb6\xf7\x01\x1b1\x8c1^\xa6\xbc\xb0\x85\xed\x9f\xce\x83\'i\xfd\xe2\x1f\xe2_\xf9\x15pdfP\xc0\x001\xc8\xa8S\x14\x96\xf3\x93\x81\xb5\x8f\x14\xfbD\x03\x07\x1b{\xd3BB\xcaW<T\xd41Z\xdcF\xb3F7\x0c~\x9f\x15S\xd6\xf4h\x9eE\x91b\nFr\xc0u\x06\xacv\xc2K)F\xd2\x0c2\x9c\xfd\rI\\\xc6%B\xa7\x18a\xc1\xa7\xca+\xa9\x1c\x1ad9F\x04\x1c\x8a\xcc\xa3\xb2\x8f\xccB\xb8\xca\x8a\xb4\xdb\xc4B\xab\xaa\xef!6\xed5\x07siwm<\x8069\xc8\xa9M2\xe2WV\x8d\x98\x06\xedQ\xa3\xd9\xf0\xc3zu\xf7\x19\x07j\x99*\x92!\x8d\x81\n\xc0d{\x1aJt\x9e\xc8\xac\xaa\xdeu\xbe\xdc2w_\x91B\x99\x91\xe4\xdd\x1fU\xe0\xd2w\x17w\x11\xc5\xfe\x81e\x15+`7\xd8\xfb\xd3;\xed\xc1\x15\tua\x15\xf9\x17\x08\x03.s\x9c\xf3\xf9\xd4tZL\x9a}\xd1\xbd\xd2\xc0I\t\x1et=\x16L\x7fcK<\xb3\xda\xc9$\xf6\xf1\xb1\x85\xf9\x92?c\xef]\xd9j\x02v%r0z\x1e\xb9\xa8\xee\xa0\x9c\xe7\x07\xdcS\x87 q\x91W\xbd\x1fW\x83T\x8c\xa6<\xb9\x93\x87\x89\xbf\x1051\x8c\x82\xa3\x8ct\xaa\x13"\xb4\xf1^\xdb\xfe\xee\xe5F\t\x1d\x18{\x1a\xb7\xd9\xeaQ\xca\x88d]\xb2\x11\xcdK\x8d\xf20y\xf7\xa8\xae\xa0\x1c\xa8\xdb\xdb\xda\x97\xba\xb6iW\x0b\x8c\xe3\x93\x8a\xa5Igqg\xa8\x19\xa1>[7\xe3\x1d\x11\xea\xf4\xb7J\x1fnx\xa4\xee\x1e\xdaU\xda\xea\r-\x90>7\xdcW\x15\x8a\xf6\xc84\xc5\x16\x1b\xe8\x83\xc50Y\xc2\xe1\x90\xf45\xec\x16\x8d\x10\xe2b\x03~8\xdb\x91\x9a\xafjH,\xdf\xce\x89\xd9q\xdc\x7f\x9a\x92\xd35\x98u\x04\xf2\xe4\x1e\xb5\xef\xefI\xce\x0e\xfb\x1f\xebJ\xc1\xd3\x91\xb8\xa67:$\xb6\xd2Ku\xa4\xcc!\x9b\x92\xf1\x7f\xf4\xe4?#\xb1\xf9\xa4\xed\xa5\x83Q\n\xed\xba\xd2\xfa3\xea^\x87#\xdb\xdcU\xa4\x18\xd8\xfa\x10\xfc\xd3;\xd5\xb3,\xab-\xbe\x1b\xf8d\x03\x91J\xd3\x8e1\xf4\xae\xea\xce\xc79\xf7\xefJ%\xc4\x91\xa8\x17K\xb8\x8f\xe3\x03\xfb\xd3\xc8\xa4B}\x0e\x0ey\x15\tk,\xd1L\xd1L<\xc4?\x81\xc7\xb5>T\x88\xc8J\x02\x8c:R\xd4\xe6\x90\xc3\x14\xdbU\xd2c\xd4\xc2\xca\xac\xd6\xf71\xff\x00\xa7:p\xca\x7f\xc8\xa8\x8b-z\xea\xca\xe9l5\x88\xb0\xe4\xe2;\xa5\x1e\x87\xfa\xfb\x1a\x9e\x97P{q\x89\xe3%\x7f\x9c\n^KM?R\xb7\x00\x94\x91Xq\xf1A\x07;\x1d\xe8\x07l0\xdb\xfaR\xa25\x91}8e<\x86\x14\xd2\xea\r\xea\x12S\xb9s\xe9q\xd4\x1a\x81\x9a\xc3Z\xd1\xb2\xf6\x13\xf9\xf0g-\x13\xf2@\xf853\xa6j0j\nA;$\x1f\x8a3\xd4\x1a\xe8a\xc7\x06\x92W\xb89\x14\xea\x0b\x89\xa2\x1e]\xcb\x87Q\xf8d_o\x9a\x7f\xbe-\xbb\x90\xe4v\xa6\xf2\xc0\xa38^\xa3\x91M\x13t$\xf9K\xc6yZVqI\xe6\x95\xb9\xb9\xc9Uhr?\x98v\xae\r\xcb*e\x89e\xf8\xa7Q\xcf\x1d\xc0\xc1\x01H\xeck\x86\x81\x91\x8b&\x08\xee(\xfaQ\xf1M\x9a\x1bK\xd4!\x908\xf6#\xa5\x15\xdb\xc2A\xf3"\xc2\xb0\xea\xb4RJ!;\xa8&\xba\x19\x87\r\x8a\xc4\xaf5\x0b?:T\xd3\xee\x1a\xf2\xfb\x02?-\x00)\x18\xff\x00st\x15!a\xe1\xe5G[\xbdB\xed\xeeg\x07p,\x7fw\x1e{(\xa7\x9av\x97c\xa6\xda\xc7\r\xad\xba\xc6\xb8\x04\xe3\xa9\'\xb9=\xe9;\xa63H\xb11\xf4dp8\xcd@\x1b\x9c\xfe\x82\xa4\x1c\x01\x81\xfa\xf7\xa2}B\x15,\x14\x16\x0b\xc0=\x05)k4w[Zf1[G\xd3\x1c3\x11\xfe*\x16\xe0\xa8\xbf\xb7\x8c"\x85\xdd\xda\xa4o.]\x1bb\xaa\x85\x03\xa6(\x04\x96\xae\x10\x00\x1f4\xcbU\xf1\x0c\xaa\xdeN\x9fj\xeb\x12g\xd4N\x00\xf99\xaa\r\xef\x88\xf5K\xbb\xc1k\xa7\xdb\xef\x93#u\xc1$D\x98\xf7\xf7\xa6\xba\xa5\xf5\xd5\xed\xff\x00\xdd\xa4\x94\xac[\x8f\xa5=9\xc7\xbdMZ\xc1\x12\x84\x8dWj\x0e\xc2\x96K{\xd2\x00Q\xdbz\xf2\xce\xce\x7f6)\xae\xae\xfc\xeb\x95$\xa3Hr\x17\xdfh\xe8*\xda%\xf2\xa3;\xee\xa3$\x8f\xe1\x18\xebP\xcd\x14q\x81\xb5G\\g\xbdK\xe9\xf0E<\xcad@p2)\xb2w\xa5g;\xd3\xcd\xef\xb0\x0f5\xd8\x15]\xcc\xbdH\xf6\xfaS\xb67\xa6D\xd8M\xb4\x03\x19*@b\x07\xcfjQQRD\xda1\x93\x8cU/\xc5w\xb7W\x13\xdb\xe9\xfesG\x038\xdd\xe5\xf0\xc7\x9e\xe6\xb8r\x07&\x94\xbb\x9d\xb1W)u\xf8\xe2k\x8bk+_\xbc\xc8\xa8I\t\xd0\xb7\xfb\x9a\xa1\x9bM\xd45x\x12]n\xe0Gh\x99o\xb8\xc6v\xc4\x7f\xfd\xe1\xea\xdfJ\x9a\xb7\xb7\x87M\xd3\xc2\xdb\xc6\x14"\xe7\x9eI8\xea}\xea6\xc1\xdfXro\x18\xba\xa1\xf4\xa0\xe1\x7fJ\t8\xdc\xf3B\x803\x8e\xdd\xfb\xd3\xdbY\xe4\xb8\x89a\xd2\xad\xa2\xb7\x82!\xb5ge\xc2\'\xff\x00\xbbZu\xa6\xd9Z\xda\xdc<\xc1\x9ak\x93\xfe\xa5\xd4\xbe\xa6o\x81\xec>\x05t\x8d\xbag\xb7\xc0\x11*\xf0\xa3\x81J\xc4\x83{I\x93\x948Q\xd8\x0f\xa5s\x8c}h\xe4\x1f\xa5I3\x96\x02B:\xe7$\xf6\x15\x1d&\xa1\x14\xee\xf0X\x8f9\x97\x93 \xfc\n}\xf7T\x06\xa1uqs}\x05\x93J\xcb\x037\xa9S\x8c\xfdMMlKKx\xe1\x81\x04i\xb8\x0c\n\xeeKg\x1b|\xd7B\x81\x8c\x8c\xe7\x8ae\x1d\x81\x86w\xb8\xb8\xb93\xcc\xdf\xe9\x92\xa0\xacc\xe3\xe7\xe6\xba\x9e\xe2H\xc2\xf0eg`\x10\x0f\x7fs\xf1^\xeb.\xdb,aS\xb5d\x90\x06\xc7\x04\xd2\x93HRx\xe1P\xa1Tq\xc74\xd9\xe0\xfcWF\xf84\x8a@\xfe\\\xa6\xeaS!>\xa6=\x81\xf6\x02\x9a\xc5,\xd7WY\nc\x89>=O\xdb\x9fj\x90\x0c|\xa7\xe7\xaf\x06\x92\xb6\xf4\x89q\xd8\x1aG$R\x81\xd8\x9f\xb5/\x12N\xe1\xb6:\xc7\x1atQ\xc9?SQ\x93\x94\x8dHi\x04\xb3o\xdc\xb1\'$\x9e\xd9\xa6:\xb5\xfd\xcd\xab[\xc5\x13\xed\x12\x9c1\xefK\xdb\xc1\x1d\xa2\xcb4C\x128\x05\x98\xf2i\xa7$\xb0Q\xde\x9eU\xc2\xea\'\xe8+\xa946\xd4<\xa9\xb56$dm\xb7\x07\xd0\x0f\xcf\xbd;\x9e\xd5Re\x8dd\x01Tu\xec\xb4\xb8\x9aI-\x0e\xe6\'\xa9\xaa\xcd\xcc\xf3J\xc9\x11\x90\x85g\xe7\x1c\x13\xcd%\xb0\xa3\x1b\x9f\x93]\\\xb1\xdf\x1e\xd8\xa7b\x1f>\xed\xc4@6\xd1\x8d\xc7\xa2\x8f\x8f\x9a\xe6X&\x8d\xbc\xb8\x10\x19\x0fWc\x9cR\xf29\xb7\x88\xac~\x90\x06*9\xee\xe6T$74\x9cg\x1b\xd2\xb2=\xa9C\xa5\xdb[fi\xd9^\xe1\xba\xc8\xdc\x90=\x87\xb5V\xf5gDGX\x93s\x9f\xc3\x81M\xb5]F\xefc?\x99\xc8\xe0T\x10\xbe\xb9\x16\xf9\xf39brq\xcd\x05riC\x8c\xd3f\xb6\x0f)\x96d\xdd \x18\xdb\xd9iD\x08\x8c\x18\xa7#\x901\xc0\xa4\x04\x8f\x9c\x96$\x9e\xa6\xad\xda-\xb47\x01\xc4\x8b\xb8c\xbd5)\x11\xa9\'$S\xd1\xa7\x98\xc0\x03\x8a\x83K\x81,\xb1\xac`I\'p\x07\x15\xa0i6w\x13\xc6\xa2T\xda\xbb\xb3\xb6\xa1\xed\xecmm\xee\xdb\xca\x85W\x07\xb5_\xec\x944\'5\xc5\x1f\xcd\x9eG\x15\xd7 \r pw4\xb2Y\xecM\xe3 \x0eq\xda\xba\xb7\x8e[\x89\x18\xbe\x04K\xd0\x01\xd7\x14\xbb3\x00\xa9\x9fNqRp\x00"\xc0\x03\x18\xa1\x13S\x02\x0e\x07\xb54\xcd\x81\xc6\xe7\xbdG\xbc`0\n@\xe3\xa5G<j\xf3\x86\x00\xfaF1\xdb\xebRd\x02\xd94\x89>\x96\xe0u\xc5+c\x9d\xb1@\xf4\xff\x00JF\xdd\nH\xa7\x01\x86rk\xcdkT\xe2;x\x8f\xab\x1c(\xa6ws<p\xe5N\r0\xd3cY\x8b\xcb&Y\xc1\xe0\x9a\x83\x16g\x90\xb18Pp\x05L+\xe5\xa0\xeej[H\xb1xU\x9d\x86d\x90\xe5\xbe*\xc0e\x080\xa7\x93\xd4\x9akn\xc4FO|P\xecv\x1e\x05N G\x19\xf8\xa8\x9b\xbb\x8f\x9aW\xef\x02\xd84\x97R\x82\x8b\xd2\xaa\xb2]\x8dV\xf9\xb6\xe7i\xe3\xe0\n\xe3S\xb8\x96P\xc8\xc7\x81\xd8S\xbd\x12\x18\xc4E\x82\xf3P!\x87\xcf\x94\xca\xe79\xd8\x0faR\x99\xbc\xb5\xd2\xa3\x8eO\xcdX`\xb7\x86(\xd5F\xe0\x00\xedNwDU@9^\x985\xcfD8\xf6\xa6\xdbG\x93)\xee\x07\x15:V\xf2\xa3$\x0f\x8a\x8c\x83[n{\xd4~\xadx\xd1#\xa4\x0c\x01\xc7j\x82\xd1\xac\xe4\xbe\xb9\xf3&m\xc1O~\xf4\xa0A\'-\xc9,A\xab]\x85\xac0\xc6\xa5\x17\x19\x195\x0e\xd6%\x92Vc\xef\x9a\x953\x98\xe3\n;\xec*Q#H\xd5\x818\x00qQ\xd7\x12E\x1a\x99\x0bt\xefN\'$\x9cd\xe3\x15T\xd7\x19\xa3\x87b\x92\x06j\xc2C\xa0}*\x1a\rDo\xcdE]<\x97\xf7\x18\x079<U\xd3J\xd2\x92\x18\x95\xb8\r\xc1\'\xbdT\xb45\r2\x13\xcdhA\x8a\x81\x8ab\xde0\xc4\xb3nsON\xc4\x05Q\xb5)\xb0\xa88|\x9c\xd4.\xb4\xe5a\xd8f\xc1"\xa5$\x95\xf0y\xe9\x9a\xa3j2\xc95\xd6\xd6c\x8c\xd3\xb3aQ\xb1\xedL\xc5\xeaqM\xecm\x96\xe2\xfa4\x19!NX\xfc\xd6\x93\x12,Q\x90\x1a\xabZ\x1d\xbcHY\x80\xe4\xf75j\x11\xae:Rmc\xd3\x1es\xb9\xefN\\6_\x1d\x86\xd5\x17p\\\x02\xc1\xb3\xc7J\xcd\xf5\x89n]\xa4$\xe0f\xb4)\x8e\x1eA\xdb\x06\xa8\x9a\xa1\xde]H\x18\xa6\xe6\x1b\xaf\xeaiqgsP:V\xd9.\x11L\x99\xf5V\xcfe\x12\xf9(\xa0\xf6\x15\x95h\xf6V\xff\x00{C\xb4\xe4\x11Z\xe5\xa2*\x85\x00v\xa5\xda\xaa\x92\xe4\nM\xc3\x1c(\xcd: *b\x98]\xc8DLA\xe8*E\x80\xc1\xa8\xab\xfe#8\x151\xc7\xa4\xfd*2\xfea\xf5\xaaa\x01\xe6/\xb3,MMX.\xe9\x19\x98\x1e\x9cS\x18\xff\x00\x13\x9fj\x98\xb1\xe8\xc7\xe7\x15\n\x14\xf5\xe7\xda\xa6J\xc7A\xa9D\x8dr\xb9\x1cS+\xd4\x89rF3OW\x9c\xd4n\xa00\xa4\xe4\xd4\xc7 \x0e**\x8c\x9a\x83\x86\xde9\xe7\xf5\x1c\x1c\xe6\xaf6\xf6\xb0\xaa\xa0\xcfj\xa7[\xa0\xf3\x14\xf3\x9c\xd5\xa2\x12}<\x9e\x94\x88t\x82v\xefK\x97\'\x1b\xd3\xb9\xa1\x83=A\xa8\xa3$V\xd3\x12\x80qO%\xeb\xd6\xab\xcc\x81\xee\x1f9\xefK\x91\x88\xe0\x0ek\x91\xfdO\x15%>\xa4\xd7n\x89\xd0\x02*r\xddA\x88n\xc1\xaa|p\xa0\x9dz\xf5\xabt#\x11\xa8\xc9\xa5\xc0]\x86X\xefH\x9bH \x01\x8aQ\xa2\x88\xc6w\x10*\x11\xa3\x88\xdc.\xd2:\xd4\x8d\xe7\xa58\xa8H9\xb9Rk\xb2(%\x07\xcd\x11\xb1\x00\x9c\xf6\xab\x80\xb7_)InqQ\xf7\xb6\xd6\xa6\x12\x1d\x86M8fm\x83\x9e\xd5\x13y\x92\xbdO\x14\xec\x98\xc1\x18\xedM\xc7\x9c\x83\x9e\xf5#a\xa5\xc1\x1c\x1c\x1ak\x7f\xa6[\xcb\x13\x03\x83Nm\x1d\xbc\x81\xc9\xaef\'\xcbnh!D`\x05\xedB\xb3\x19\t-\xde\xabia\x14q2\xa8\xf7\xaf\x9c\xbe\xda\xbc.\xda\xb7\x87\xee&H\x98\xcbk\x97\x8f\x03\xba\xf3\x8a\xfaf\xd9\x8e\xe6\x1fZ\xae\xf8\x9a\xde\x19l.U\xe3\x04\x149\xa4\xc5\x80Q\x87cN9\xce\xb5;\xe6\xbf--\x1d\xa2\x97+\x80A\xc8\xcf\xb5m~\x01\xd5\x1a\rN\xc4,\xbbw\xca\xb9\xc1\xf9\xac\xb3\xc5\x90\xc7k\xe2=N8T*\xa5\xc3\x00\x07\xd6\xa7\xbc/4\x88\xf0\xb0>\xa0\xe0\x03SnP<d\xfb\x8a\x8dn\xc5$\xc5~\x82\xeb\xba\x98m"+hq$\x92 \xf5g\xa5@\xe8\xb0\xdci\xd3C3\xb0\xc9\xe0\xe2\xa9z-\xd4\xf3XB\xf2HY\xb6\x8eM[-\xee\xa6x9n\x87\x8a\xa3Pu\x11\x91\xb1\xabs\xc6\xdd\xeb[\xf3>\xf5k\xb9y%zR:d\xcc\x92<O\xd0\x1e*/\xc3\xd3H\xf0\x90\xc7"\x9fJ\xa0\\\x86\x1c\x1f\x8a\x9b\xf9\x969;\x8a\x86}-"v#57qn$Bv\x8ei\x0b%\x11\x92\xa4\x01\xcdJ\'0\x02}\xaa\x16RD\xfc\x1avE\x0b\xa5\xbb\x83L#\x12\x19j^X\xb7\xa6T\xe2\xabW\x11\x08$\xdd\xc1\xe7\xadO\xc2\xecF\t\xe2\x9b\xdf\xc6\x86\x16\xe3\xa5\x12\xa2\xbag\x1d\xab\x91\xb1F\xc7j\xf6\xd6dx\x97\xa1\xa7r\xa4L\x84\x88\xc7J\x82\xd2y\x0c\x0f<\xe2\xadp\xa2\x95 \x8a\xeccR\x0c\x8f\x8a\xe4\x87K\x1c{\xd5QnV\xdeb\xbbp3\xedV\x08n \x90\x03\xb7\x9aF\xee\xd2\r\xc0\xec\xe74\xee\x08"\xf2\xc7\xa0{WQp\xc4\x0cb\xb9#\x02\x01\xefN\x04\xb0>A\x03\x15Y\xbfxl\xee\x96E\xe0\x13\xda\xac\x8b\x04`\x9fOJ\x85\xd5\xedau\x19Z\xec\xaa\x198\xdc\x1c\x83DM\x86\xef\x83\xb1\xa7\xab43E\xb8\x9c\xee\x15R\xb8\xbc\xfd\x99xF\xd2c\x90\xfe\x95=\xa7"\xf98\xea\x00\xa8\xcdZ\x18\xde6\xca\xf4\xe6\xb8\xde\xb8\xd4\xf0y\xae\xa7\xa5\xca\xf65b\xb2\xbfK\x88\xd4{\xd2\xb7P\xabF\xc0\x0e{U[Ef\x0c\x06x\xc5]\x95APH\xa7c>boM?\xa1\xf0*\xb7\r\xcc\x81L3\xf1\xecjJ\xd2\xeb\x07\xca\x93\x90:\x1a\x8e\xd5\xe1@U\xc0\xc1\xcdqhK\xa2\x13\xd4\x0e\xb5\xd1\x958\xf6\xa0\x80F}\xe9\xe6\xa5i\xe6\x92\xd9\xc6*\x9fu\x88X<m\x89\x14\xfe\xb8\xab\xe3z\xd3\x07\xda\xaaZ\xcd\xbci\x96PA\xa4J\x80\xe4\xf7\xa5Fx\x06\xacz\x16\xab\x05\xfc;d\xc6\xf00sS2$;YH\x1c\xd69o<\xb6\xd7\x91\x18\x9bn\xf3\xea\xadB\xd2W\x9e\xd9Y\xceN)P\xc9\xadpF\xe2\x93,z\x08 \xeci\xac\xe9\x15\xa4\xa8B\x83\x1bg#\xdb=\xaa:\xf2\xce\xc9O\x9fn@\xee@\xa9\x89Q]YXdf\xab\xcd\x12\xab\xb8\x04\xe2\x87\x00\x0c`WWs\xc9\xa4\xc6\xb1m\x18\x08\xc0\x06\xe9R\x1f|2\xc6\xb2FFz\xd5GU\x86=\xa5\xc0\xc1\x07\xb5w\xa4\\JJ\xa9l\x83H\x0cx\xa5\x14\\dV\x83os\xfb\xa5\'\x96\xc6\rHE"\xc8\xbd9\xf6\xa8X\x14\x05C\xef\xd6\xa4\xa2\xf4\xcb\x81\xed\x9a\x90\x87\x8a\x8e\xc3\x9aFg\x8d\xd8\xc7"pzg\xa5R\xb5\x08.\xb4\x9b\xb1sn\xa7\xcb\xceY?\xe2\xb4\x0b\xd8\xd1\xa3\x0eG9\xa8;\x95\x12\xc6U\xf9\x02\xba\xcb\x91\xfd+\xaa\xd8\xc7\xefN\xf4mz\xde\xee59\xc3\xf7\x07\xde\xac\x0f$2\xa9\x12 5\x99\xc9\x04v\xf2+\xc66\xb1l\x1cw\xab\x9e\x91+\xce\x98\x90\xe7\x1d)*\xed\xc1\xae0^FqIL%\xb6\x95\x9e!\x94\xceq\xdb\xf3\xa76s\xad\xf2\xb6\xdfK\xafQR\xa24\xf5\r\xa0\x8a\xae\xce\xa2\xd6\xf1\x9a/I<\xd2\xf0F\x0ev\xf6\xaed\x1e\xdb\x8e\xf5/"3\xc6\xc8\xeb\x9a\xadOmqjY\xed\x89\\\x1e\x9d\xaa\xdd\x1b\x99aVld\x8aGh \xe4R\xc8\xfdi \x91\x9a\x86\xb1\xf1\x02\xb6 \xba]\x8f\xd3\x9e\x86\x8b\xcd2\x07\x94\\[>\xc9\x0fq\xde\x92\xd5m t\xdcS\x9cu\x14\xc3M\x9aU`\xbb\xc9\x03\xde\x93\x9c\xecE+\x1d\xd7oqS\xf6\xba\x84\xf1\x11\x15\xd2\x12\x7f\x9b\x14\xf2\xe6EP\xb2\xa7JU"\x8ex\xc6\xf5\xc9\x03\x83KG\x12\x14\xdaW#\x14\xb5\xce9\xa4m\xce>\xb5\x1c\x16;\xb5\xccO\xb5\xfd\xa9\xe5\xb9\x9e1\xb6Nx\xa8\xcb\xb8R\xde@c\xca\xd4\x95\xb4\xcf,xc\x9e:\xd0+\xa7\x8f\x8a\xe9\xb7>J\xfb\xd1\\n!\x8e\r\x15\xdd\xe98\x15\xff\xd9')}]
2023-09-20T19:32:30,176 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - IT IS HITTTT
2023-09-20T19:32:30,176 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T19:32:30,177 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:32:30,177 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T19:32:30,178 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T19:32:30,178 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 358, in handle
2023-09-20T19:32:30,179 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.inference(data_preprocess)
2023-09-20T19:32:30,180 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T19:32:30,180 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T19:32:30,181 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 300, in inference
2023-09-20T19:32:30,182 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     marshalled_data = data.to(self.device)
2023-09-20T19:32:30,182 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'NoneType' object has no attribute 'to'
2023-09-20T19:33:27,126 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:33:27,126 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:34:27,127 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:34:27,127 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:34:39,323 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:34:39,323 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:34:39,326 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:34:39,326 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:34:39,402 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:34:39,402 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:34:39,473 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:34:39,473 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:34:39,480 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:34:39,480 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:34:39,502 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:34:39,502 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:34:40,906 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:34:40,906 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:34:40,906 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:34:40,906 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:34:40,906 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:34:40,906 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:34:40,907 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:34:40,907 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:34:40,916 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:34:40,918 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:34:40,918 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:34:40,916 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:34:40,994 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:34:40,994 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:34:40,994 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:34:40,994 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:34:41,000 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:34:41,000 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:34:41,000 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:34:41,000 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:34:41,002 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:34:41,002 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:34:41,249 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:34:41,249 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:34:41,697 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=12778
2023-09-20T19:34:41,698 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:34:41,708 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:34:41,708 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]12778
2023-09-20T19:34:41,708 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:34:41,709 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:34:41,709 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:34:41,709 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:34:41,715 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:34:41,715 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:34:41,724 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:34:41,728 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695238481727
2023-09-20T19:34:41,728 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695238481727
2023-09-20T19:34:41,761 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:34:41,815 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:34:41,815 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:34:41,819 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:34:41,819 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:34:41,820 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:34:42,001 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:34:42,002 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:34:42,002 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/d433ebcd9f1347dcada2ea4c756c6e07/model.pth
2023-09-20T19:34:42,002 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T19:34:44,381 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T19:34:44,390 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:34:44,390 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:34:44,390 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2629
2023-09-20T19:34:44,390 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2629
2023-09-20T19:34:44,390 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:34:44,390 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:34:44,393 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3478.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695238484
2023-09-20T19:34:44,393 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:37.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238484
2023-09-20T19:34:50,458 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695238490
2023-09-20T19:34:50,461 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238490460
2023-09-20T19:34:50,461 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238490460
2023-09-20T19:34:50,463 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695238490
2023-09-20T19:34:50,464 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T19:34:50,464 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:34:50,464 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T19:34:50,464 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T19:34:50,464 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 355, in handle
2023-09-20T19:34:50,465 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     data_preprocess = self.preprocess(data)
2023-09-20T19:34:50,465 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/d433ebcd9f1347dcada2ea4c756c6e07/handler.py", line 51, in preprocess
2023-09-20T19:34:50,465 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     img = PIL.Image.opne(data)
2023-09-20T19:34:50,465 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: module 'PIL.Image' has no attribute 'opne'
2023-09-20T19:34:50,470 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:33884 "POST /predictions/test_model HTTP/1.1" 503 14
2023-09-20T19:34:50,471 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238490
2023-09-20T19:34:50,472 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 199372, Inference time ns: 11223667
2023-09-20T19:34:50,472 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 199372, Inference time ns: 11223667
2023-09-20T19:34:50,472 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:34:50,472 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:34:50,472 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3
2023-09-20T19:34:50,472 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3
2023-09-20T19:34:50,473 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:10.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238490
2023-09-20T19:35:48,327 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:35:48,327 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:35:48,330 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:35:48,330 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:35:48,394 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:35:48,394 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:35:48,468 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:35:48,468 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:35:48,476 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:35:48,476 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:35:48,499 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:35:48,499 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:35:49,916 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:35:49,916 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:35:49,916 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:35:49,916 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:35:49,916 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:35:49,916 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:35:49,917 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:35:49,917 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:35:49,926 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:35:49,926 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:35:49,927 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:35:49,927 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:35:50,001 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:35:50,001 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:35:50,001 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:35:50,001 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:35:50,002 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:35:50,002 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:35:50,003 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:35:50,003 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:35:50,004 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:35:50,004 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:35:50,246 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:35:50,246 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:35:50,735 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=13055
2023-09-20T19:35:50,736 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:35:50,745 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:35:50,745 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]13055
2023-09-20T19:35:50,746 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:35:50,746 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:35:50,746 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:35:50,746 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:35:50,752 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:35:50,752 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:35:50,756 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:35:50,756 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:35:50,762 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:35:50,765 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695238550765
2023-09-20T19:35:50,765 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695238550765
2023-09-20T19:35:50,797 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:35:50,855 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:35:50,855 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:35:50,856 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:35:51,032 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:35:51,032 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:35:51,033 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/71b82aeb1ab24bc588e12ea798081e42/model.pth
2023-09-20T19:35:51,033 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T19:35:53,447 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T19:35:53,454 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:35:53,454 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:35:53,455 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2657
2023-09-20T19:35:53,455 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2657
2023-09-20T19:35:53,455 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:35:53,455 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:35:53,457 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3533.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695238553
2023-09-20T19:35:53,458 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:36.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238553
2023-09-20T19:35:55,675 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695238555
2023-09-20T19:35:55,677 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238555677
2023-09-20T19:35:55,677 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238555677
2023-09-20T19:35:55,679 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695238555
2023-09-20T19:35:55,680 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T19:35:55,680 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:35:55,681 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/PIL/Image.py", line 3222, in open
2023-09-20T19:35:55,681 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     fp.seek(0)
2023-09-20T19:35:55,681 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'list' object has no attribute 'seek'
2023-09-20T19:35:55,681 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T19:35:55,681 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - During handling of the above exception, another exception occurred:
2023-09-20T19:35:55,682 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T19:35:55,682 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:35:55,682 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T19:35:55,682 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T19:35:55,683 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 355, in handle
2023-09-20T19:35:55,683 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     data_preprocess = self.preprocess(data)
2023-09-20T19:35:55,683 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/71b82aeb1ab24bc588e12ea798081e42/handler.py", line 51, in preprocess
2023-09-20T19:35:55,683 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     img = PIL.Image.open(data)
2023-09-20T19:35:55,683 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/PIL/Image.py", line 3224, in open
2023-09-20T19:35:55,684 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     fp = io.BytesIO(fp.read())
2023-09-20T19:35:55,684 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'list' object has no attribute 'read'
2023-09-20T19:35:55,687 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:39092 "POST /predictions/test_model HTTP/1.1" 503 14
2023-09-20T19:35:55,687 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238555
2023-09-20T19:35:55,688 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 240523, Inference time ns: 10419563
2023-09-20T19:35:55,688 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 240523, Inference time ns: 10419563
2023-09-20T19:35:55,688 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:35:55,688 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:35:55,688 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2
2023-09-20T19:35:55,688 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2
2023-09-20T19:35:55,688 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:9.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238555
2023-09-20T19:36:27,160 [INFO ] epollEventLoopGroup-2-1 org.pytorch.serve.ModelServer - Inference model server stopped.
2023-09-20T19:36:27,160 [INFO ] epollEventLoopGroup-2-1 org.pytorch.serve.ModelServer - Inference model server stopped.
2023-09-20T19:36:39,508 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:36:39,508 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:36:39,511 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:36:39,511 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:36:39,574 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:36:39,574 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:36:39,645 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:36:39,645 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:36:39,652 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:36:39,652 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:36:39,675 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:36:39,675 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:36:41,104 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:36:41,104 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:36:41,104 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:36:41,104 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:36:41,104 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:36:41,104 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:36:41,105 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:36:41,105 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:36:41,114 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:36:41,114 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:36:41,116 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:36:41,116 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:36:41,193 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:36:41,193 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:36:41,193 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:36:41,193 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:36:41,194 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:36:41,194 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:36:41,195 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:36:41,195 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:36:41,196 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:36:41,196 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:36:41,430 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:36:41,430 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:36:42,000 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:36:42,000 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:36:42,000 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=13309
2023-09-20T19:36:42,002 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:36:42,011 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:36:42,011 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]13309
2023-09-20T19:36:42,011 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:36:42,012 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:36:42,012 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:36:42,012 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:36:42,017 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:36:42,017 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:36:42,025 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:36:42,029 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695238602029
2023-09-20T19:36:42,029 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695238602029
2023-09-20T19:36:42,063 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:36:42,120 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:36:42,121 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:36:42,121 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:36:42,294 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:36:42,295 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:36:42,295 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/58055f958df44f068337d57c9aee855e/model.pth
2023-09-20T19:36:42,295 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T19:36:44,645 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T19:36:44,654 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:36:44,654 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:36:44,654 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2591
2023-09-20T19:36:44,654 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2591
2023-09-20T19:36:44,655 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:36:44,655 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:36:44,658 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3544.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695238604
2023-09-20T19:36:44,658 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:38.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238604
2023-09-20T19:36:45,969 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695238605
2023-09-20T19:36:45,971 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238605971
2023-09-20T19:36:45,971 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238605971
2023-09-20T19:36:45,974 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695238605
2023-09-20T19:36:45,974 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - <class 'list'>
2023-09-20T19:36:45,975 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T19:36:45,975 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:36:45,975 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T19:36:45,975 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T19:36:45,976 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 358, in handle
2023-09-20T19:36:45,976 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.inference(data_preprocess)
2023-09-20T19:36:45,976 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T19:36:45,976 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T19:36:45,977 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 300, in inference
2023-09-20T19:36:45,977 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     marshalled_data = data.to(self.device)
2023-09-20T19:36:45,977 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'NoneType' object has no attribute 'to'
2023-09-20T19:36:45,979 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:47956 "POST /predictions/test_model HTTP/1.1" 503 12
2023-09-20T19:36:45,980 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238605
2023-09-20T19:36:45,980 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 188025, Inference time ns: 8881671
2023-09-20T19:36:45,980 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 188025, Inference time ns: 8881671
2023-09-20T19:36:45,980 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:36:45,980 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:36:45,980 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 1
2023-09-20T19:36:45,980 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 1
2023-09-20T19:36:45,980 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:8.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238605
2023-09-20T19:37:05,711 [INFO ] epollEventLoopGroup-3-2 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695238625
2023-09-20T19:37:05,712 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238625712
2023-09-20T19:37:05,712 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695238625712
2023-09-20T19:37:05,713 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695238625
2023-09-20T19:37:05,714 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - <class 'list'>
2023-09-20T19:37:05,714 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T19:37:05,714 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:37:05,714 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:40794 "POST /predictions/test_model HTTP/1.1" 503 4
2023-09-20T19:37:05,715 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T19:37:05,715 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238625
2023-09-20T19:37:05,715 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 79576, Inference time ns: 3193082
2023-09-20T19:37:05,715 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T19:37:05,715 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 79576, Inference time ns: 3193082
2023-09-20T19:37:05,715 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:37:05,715 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 358, in handle
2023-09-20T19:37:05,715 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:37:05,715 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 1
2023-09-20T19:37:05,715 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.inference(data_preprocess)
2023-09-20T19:37:05,715 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 1
2023-09-20T19:37:05,716 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T19:37:05,716 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:3.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695238625
2023-09-20T19:37:05,716 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T19:37:05,717 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 300, in inference
2023-09-20T19:37:05,717 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     marshalled_data = data.to(self.device)
2023-09-20T19:37:05,717 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'NoneType' object has no attribute 'to'
2023-09-20T19:37:41,924 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:37:41,924 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:38:41,918 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:38:41,918 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:39:41,920 [ERROR] Thread-4 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:39:41,920 [ERROR] Thread-4 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:40:42,058 [ERROR] Thread-5 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:40:42,058 [ERROR] Thread-5 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:41:41,964 [ERROR] Thread-6 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:41:41,964 [ERROR] Thread-6 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:42:41,976 [ERROR] Thread-7 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:42:41,976 [ERROR] Thread-7 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:43:42,016 [ERROR] Thread-8 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:43:42,016 [ERROR] Thread-8 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:44:42,004 [ERROR] Thread-9 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:44:42,004 [ERROR] Thread-9 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:45:41,968 [ERROR] Thread-10 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:45:41,968 [ERROR] Thread-10 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:46:41,973 [ERROR] Thread-11 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:46:41,973 [ERROR] Thread-11 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:47:42,077 [ERROR] Thread-12 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:47:42,077 [ERROR] Thread-12 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:48:42,003 [ERROR] Thread-13 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:48:42,003 [ERROR] Thread-13 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:49:41,954 [ERROR] Thread-14 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:49:41,954 [ERROR] Thread-14 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:50:41,954 [ERROR] Thread-15 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:50:41,954 [ERROR] Thread-15 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:51:41,979 [ERROR] Thread-16 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:51:41,979 [ERROR] Thread-16 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:52:42,492 [ERROR] Thread-17 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:52:42,492 [ERROR] Thread-17 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:53:42,004 [ERROR] Thread-18 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:53:42,004 [ERROR] Thread-18 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:55:16,184 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:55:16,184 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:55:16,188 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:55:16,188 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:55:16,263 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:55:16,263 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:55:16,347 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:55:16,347 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:55:16,355 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:55:16,355 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:55:16,382 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:55:16,382 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:55:18,047 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:55:18,047 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:55:18,047 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:55:18,047 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:55:18,047 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:55:18,047 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:55:18,047 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:55:18,047 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:55:18,058 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:55:18,058 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:55:18,059 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:55:18,059 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:55:18,144 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:55:18,144 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:55:18,145 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:55:18,145 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:55:18,147 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:55:18,147 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:55:18,147 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:55:18,147 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:55:18,148 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:55:18,148 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:55:18,468 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:55:18,468 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:55:18,995 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=14953
2023-09-20T19:55:18,996 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:55:19,005 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:55:19,006 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]14953
2023-09-20T19:55:19,006 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:55:19,006 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:55:19,007 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:55:19,007 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:55:19,012 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:55:19,012 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:55:19,021 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:55:19,025 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695239719025
2023-09-20T19:55:19,025 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695239719025
2023-09-20T19:55:19,065 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:55:19,105 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:55:19,105 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:55:19,132 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:55:19,132 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:55:19,133 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:55:19,330 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:55:19,330 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:55:19,330 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/94e8e39f41284f20bfba7fddf56bf4b7/model.pth
2023-09-20T19:55:19,330 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T19:55:22,227 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T19:55:22,235 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:55:22,235 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:55:22,235 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3170
2023-09-20T19:55:22,235 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3170
2023-09-20T19:55:22,236 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:55:22,236 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:55:22,239 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4183.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695239722
2023-09-20T19:55:22,239 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:44.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695239722
2023-09-20T19:55:30,368 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695239730
2023-09-20T19:55:30,371 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695239730371
2023-09-20T19:55:30,371 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695239730371
2023-09-20T19:55:30,374 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695239730
2023-09-20T19:55:30,375 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - <class 'dict'>
2023-09-20T19:55:30,375 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T19:55:30,375 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:55:30,376 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T19:55:30,376 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T19:55:30,376 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 358, in handle
2023-09-20T19:55:30,376 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.inference(data_preprocess)
2023-09-20T19:55:30,376 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T19:55:30,376 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T19:55:30,377 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 300, in inference
2023-09-20T19:55:30,377 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     marshalled_data = data.to(self.device)
2023-09-20T19:55:30,377 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'NoneType' object has no attribute 'to'
2023-09-20T19:55:30,382 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:53088 "POST /predictions/test_model HTTP/1.1" 503 16
2023-09-20T19:55:30,382 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695239730
2023-09-20T19:55:30,383 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 217612, Inference time ns: 11805460
2023-09-20T19:55:30,383 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 217612, Inference time ns: 11805460
2023-09-20T19:55:30,383 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:55:30,383 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:55:30,384 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2
2023-09-20T19:55:30,384 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2
2023-09-20T19:55:30,384 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:11.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695239730
2023-09-20T19:56:07,016 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:56:07,016 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:56:07,019 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:56:07,019 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:56:07,093 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:56:07,093 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:56:07,179 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:56:07,179 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:56:07,187 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:56:07,187 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:56:07,214 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:56:07,214 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:56:08,904 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:56:08,904 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:56:08,905 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:56:08,905 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:56:08,905 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:56:08,905 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:56:08,905 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:56:08,905 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:56:08,919 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:56:08,919 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:56:08,920 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:56:08,920 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:56:08,996 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:56:08,996 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:56:08,997 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:56:08,997 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:56:08,999 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:56:08,999 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:56:08,999 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:56:08,999 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:56:09,001 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:56:09,001 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:56:09,278 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:56:09,278 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:56:09,846 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=15212
2023-09-20T19:56:09,848 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:56:09,858 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:56:09,859 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]15212
2023-09-20T19:56:09,859 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:56:09,860 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:56:09,860 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:56:09,860 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:56:09,865 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:56:09,865 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:56:09,875 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:56:09,879 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695239769878
2023-09-20T19:56:09,879 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695239769878
2023-09-20T19:56:09,896 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:56:09,896 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:56:09,923 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:56:09,991 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:56:09,992 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:56:09,993 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:56:10,171 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695239770
2023-09-20T19:56:10,213 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:56:10,214 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:56:10,214 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/66a43542731f48c6b68af2f8df6dbd5c/model.pth
2023-09-20T19:56:10,214 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T19:56:13,147 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T19:56:13,149 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:56:13,149 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:56:13,149 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3226
2023-09-20T19:56:13,149 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3226
2023-09-20T19:56:13,149 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:56:13,149 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:56:13,150 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4238.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695239773
2023-09-20T19:56:13,151 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:47.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695239773
2023-09-20T19:56:13,151 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695239773151
2023-09-20T19:56:13,151 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695239773151
2023-09-20T19:56:13,153 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695239773
2023-09-20T19:56:13,249 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:36664 "POST /predictions/test_model HTTP/1.1" 503 3082
2023-09-20T19:56:13,250 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695239773
2023-09-20T19:56:13,250 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2977983823, Inference time ns: 3077281731
2023-09-20T19:56:13,250 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2977983823, Inference time ns: 3077281731
2023-09-20T19:56:13,250 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:56:13,250 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:56:13,251 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 92
2023-09-20T19:56:13,251 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 92
2023-09-20T19:56:13,251 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:8.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695239773
2023-09-20T19:56:13,246 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [{'body': bytearray(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x00\x00\x01\x00\x01\x00\x00\xff\xe2\x02\x1cICC_PROFILE\x00\x01\x01\x00\x00\x02\x0clcms\x02\x10\x00\x00mntrRGB XYZ \x07\xdc\x00\x01\x00\x19\x00\x03\x00)\x009acspAPPL\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf6\xd6\x00\x01\x00\x00\x00\x00\xd3-lcms\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\ndesc\x00\x00\x00\xfc\x00\x00\x00^cprt\x00\x00\x01\\\x00\x00\x00\x0bwtpt\x00\x00\x01h\x00\x00\x00\x14bkpt\x00\x00\x01|\x00\x00\x00\x14rXYZ\x00\x00\x01\x90\x00\x00\x00\x14gXYZ\x00\x00\x01\xa4\x00\x00\x00\x14bXYZ\x00\x00\x01\xb8\x00\x00\x00\x14rTRC\x00\x00\x01\xcc\x00\x00\x00@gTRC\x00\x00\x01\xcc\x00\x00\x00@bTRC\x00\x00\x01\xcc\x00\x00\x00@desc\x00\x00\x00\x00\x00\x00\x00\x03c2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00text\x00\x00\x00\x00FB\x00\x00XYZ \x00\x00\x00\x00\x00\x00\xf6\xd6\x00\x01\x00\x00\x00\x00\xd3-XYZ \x00\x00\x00\x00\x00\x00\x03\x16\x00\x00\x033\x00\x00\x02\xa4XYZ \x00\x00\x00\x00\x00\x00o\xa2\x00\x008\xf5\x00\x00\x03\x90XYZ \x00\x00\x00\x00\x00\x00b\x99\x00\x00\xb7\x85\x00\x00\x18\xdaXYZ \x00\x00\x00\x00\x00\x00$\xa0\x00\x00\x0f\x84\x00\x00\xb6\xcfcurv\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\xcb\x01\xc9\x03c\x05\x92\x08k\x0b\xf6\x10?\x15Q\x1b4!\xf1)\x902\x18;\x92F\x05Qw]\xedkpz\x05\x89\xb1\x9a|\xaci\xbf}\xd3\xc3\xe90\xff\xff\xff\xdb\x00C\x00\x04\x04\x04\x04\x04\x04\x04\x05\x05\x04\x06\x06\x06\x06\x06\t\x08\x07\x07\x08\t\r\n\n\n\n\n\r\x14\r\x0f\r\r\x0f\r\x14\x12\x16\x12\x11\x12\x16\x12 \x19\x17\x17\x19 %\x1f\x1e\x1f%-))-969KKd\xff\xdb\x00C\x01\x04\x04\x04\x04\x04\x04\x04\x05\x05\x04\x06\x06\x06\x06\x06\t\x08\x07\x07\x08\t\r\n\n\n\n\n\r\x14\r\x0f\r\r\x0f\r\x14\x12\x16\x12\x11\x12\x16\x12 \x19\x17\x17\x19 %\x1f\x1e\x1f%-))-969KKd\xff\xc0\x00\x11\x08\x02\xac\x03\xe8\x03\x01"\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1d\x00\x00\x01\x05\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x04\x05\x06\x07\x02\x01\x08\t\xff\xc4\x00G\x10\x00\x02\x01\x03\x03\x02\x05\x01\x05\x07\x03\x03\x03\x02\x03\t\x01\x02\x03\x00\x04\x11\x05\x12!1A\x06\x13"Qaq\x07\x142\x81\x91\x15#BR\xa1\xb1\xc13b\xd1$\xe1\xf0\x16r\xf1C\x82\x17%4Ss\x92\x08\xb2\xc2c\x83\xa2\xff\xc4\x00\x1c\x01\x00\x01\x05\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x03\x04\x05\x06\x01\x07\x08\xff\xc4\x00B\x11\x00\x02\x01\x03\x03\x02\x05\x02\x04\x05\x03\x03\x03\x04\x00\x07\x01\x02\x03\x00\x04\x11\x12!1\x05A\x06\x13"Qaq\x81\x142\x91\xa1#B\xb1\xc1\xd1\x15R\xe1\x07b\xf0$3\xf1\x16Cr\x82\x924DSc\xa2\x83\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xfb\xfa\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xbc\xcd\x14W\xb4W\x99\xaf3E\x15\xd5\x15\xceh\xcd\x14WU\xe6k\x9c\xd1\x9a(\xae\xb3Fk\x9c\xd1\x9a(\xae\xb3Fk\x9c\xd1\x9a(\xae\xb3Fk\x9c\xd1E\x15\xed\x15\xe6k\xcc\xd1Eu\x9a+\x9a(\xa2\xba\xa35\xcd\x14Q]f\xbd\xcds\x9a3E\x15\xd6h\xcds\x9a3E\x15\xd6h\xcdyGJ(\xae\xa8\xaa\xd5\xc7\x8at\xbb{\x83\twr\x0e\x19\x94d\n\x9e\x86x\xae"Ibp\xe8\xc3 \x8am%\x8aB\xe1$V*p\xc0\x10p~iL\x8e\xa1K#\x00\xc3 \x91\x8c\xd2\xf4S\x1dB\xfe\xdfL\xb4\x96\xea\xe1\xca\xc7\x18\xc9\xc0\xc9\xfa\n^\xde\xe2;\x98"\x9e#\x94\x91C)\xf84\xbc\x8c\xe3#<\xe3\xbds\x07\x19\xc1\xc6q\x9a^\x8a\xf34f\xbb\\\xafh\xaf3U\xaf\x12k\xf3h0\xdb\xce\xb6-<l\xf8\x91\x87\xf0}i.\xe9\x1a;\xbb\x05U\x04\xb1=\x80\xa5"<\x8e\xa8\x8b\xa9\x98\xe0\x0fsVj*\x13E\xd7l\xf5\xb8<\xc8r\xac?\x12\x1e\xa2\xa6\xe8GI\x11]\x182\xb0\xc8`r\x08\xa1\x91\x91\x99YJ\xb2\x9c\x10v"\x8a+\x96e@K0\x03\xdc\x9cW1\xcb\x1c\xa3(\xea\xc3\xdc\x1c\xd2\xa94\xa5\x15\xcb2\xa2\x96b\x00\x03$\xfbSK-B\xd3PY\x1a\xdaQ F\xda\xd8\xech\xa2\x9e\xd1E\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14W\x84\xd7\x84\xd7\x99\xa2\x8a\xf6\xbc\xcdy\x9a\xf34Q]f\xbc\xaf3^QEu\x9a\xf35\xe5\x14Q]W\x99\xaf(\xa2\x8a\xf75\xedsE\x14WTW\x94QE{E\x14QE\x14W\x84\x81\xd4\x81\xf5\xa3#\x19\xc8\xc7\xbd\x14W\xb4T]\xc6\xb5\xa6Z\x96\x12]\xa6W\xa8\x078\xfd)\x18\xfcC\xa4Jp\x97A\x8e2@S\xc7\xd6\x90d\x8dX)\x91C\x1e\x01#4\xa0\x8eFB1\x1e\xf88\xa9\xaa*\x03\xff\x00Q\xe9\xf9#l\xd8\x1d\xf6\xf1H\\x\x8b\x11;\xda\xda\x89\xb6\x82H/\x8e\x05u\x1d%\xfc\x92+}\x084\x14u\xc6Q\x86}\xc6*\xcdM\xeen\xed\xed\x13|\xd2\x04\x1d\xbd\xcf\xd0Veq\xe3\xadC/\xe5C\x00\x01I\xc09?Nk:\xd6\xfce\xac\xdd\xb9\x7f\xbb6\xecc\xd4p\x07\xc0\x02\xaa\xba\xa7X\x87\xa6\xc6\xac \x96\xe1\xdb8X\xd4\x91\xb7\xb9\xedV\xf6]\x0e\xf6\xf5\xb1\x85\x8dG%\x88\xfe\x95\xbc\x8f\x12X\x96#k\x85\x07\xf1q\xfd\xab\xdf\xfdK\xa6\x02Ai\x00\xf7\xdb\xc5|\xcde\xae\xeb\x92N\xa6DO/ \xb0\x19\x1c}j\xf05h\xbc\xa5bT9\xe7\x07\xe2\x98\xe9\x9di\xef\xe2w\x96\xdb\xf0\xc5N\xca\xd99\x1e\xf5.\xeb\xc3\xb2\xdb2\x01!\x93W\xfbq\xb5n\x16\xda\xbe\x9btq\x15\xda\x13\x8c\xe0\xf1\xc7\xe7P\x1a\xcf\x89m\xe3\x86xm\xf2\xcd\xb4\x82\xfd\x86}\xab(:\xe4\x11\xab\x9e\x18\x9c\xe3g\xb51_\x15 \x90\xee\xb1vS\xd1\x81\xed\xf9T\xd9z\x85\xb8M>xFm\xb5\x01\x9c})\xa8\xfa\r\xd9b\xdeS2\x8f\xe5\xd8g\xf5\xa7\xc6\xe9\x81b\x11\x89\xeap\t5#\xa6x\x96\xf6\xcd\xbc\xa8\x92\xe9cc\xea\xf4\x12\x07\xd2\xa1\x1b\\\x8f- \xb7(\xc1r\x14\xf0\x0ezsVO\r\xf8\x96\rjg\xb6X^\x19!\x8b|\x8a9\x04\x0e2\x0f|\xd5\x05\x9d\x8d\xad\xb5\xd4\x05:\xac\xca\xec\xf8P\x00\xf5|\x1a\xb3\xbd\x8ee\xb6\x91\x9f\xa6\x87E_Q-\xf9~j^\xf7\xc4\x11j6q\xdb\xdcI\x81\x9fW\x986\xe4\xfeu\xcax\xe5,mm\xac\xed\xad\xcb<+\xb1\xd9\x81\xda}\xb1Nue\x86\xde\xd2i\x9a\x0f>%]\xcd\xe9\x04\x85\xeeqY\xdd\x95\xf4\xba\x84\x9b\xed-\xb7\xdbg\x07\x8c\x04\x04\xe0\x13V\x97\xb7\x0e.Z\x18\xee\xccS4Y\r\xe5g\xd2\x08\xdf\'cU\xf6\x16P\xdc[\x19\x1a\xdc\x98\xd1\xf7\x06L\rDqW\xff\x00\xfdo<\x9c\xbd\xccp\x83\xec\x05y/\x8c<\xb5g\x1a\x93:\x8cr\xb8\xceOl\n\x81}"\xc6H\xc9\x8d\xa3g\x1dK\xa1\xdb\xf9w\x15\x17(\xba\xd3F[L\x87gE|\xe5O\xd0\x8a\x8foyr\xe1\x82\xf5h&\xc7,\x88\t\x1fe8\xa7\x87N\xb1\x90\x8d6\xf2)\xcf\xe5f\xd3\x9f\xff\x00\x8a\xaf\x9ag\x8e\xe2i\x929\xc4\x92\xa3\x0f\xc5\xb7\x05O\xd6\xa6\xef\xbcS\xa5\xc9o$F#\'\x98\xa4m|\x00k+\x8fP\xbc\x93f\xdbX\x15s\xc9\xddO\xdde\x9d\x14\xbcq\x1e\xfb\x82\x92\x7f\xa5[A;\xf9xg\xf3[\xfd\xc5t\xff\x00J\x8d7L\x89d\\)\x8cwP\xe1\x8ejCE\x8bQ\xb4\xba\xf3\xad\x86\xc4,J\x03\x9c`\xf6\xcd^\xa4\xd5\xb5\x17\x88\xaf\xee\x91\x8f\x1b\x97\x92>\x95\x8e\x1f\x10kv\xceR[\x18\xe5E\xe1J\xb1\x1c\x0f\x83S\xba]\xfe\xa5\xac\xa9h\xacc\x81\x01\xdad\x91\xf1\xc8\xec\x00\xe4\xd4\x1b+\xdbkt6\xf1Y\xdc\xae\x18\xe1H\xcf\'\xb1\xec)W\xfd2\xed\xdb\xf1\x12In\x14\x01\x96\x0c?\x7fsR\xfa\x9e\xa15\x81\x92I\xe47\t#\x05Ug\xe4\x13\xed\\\xc3w"\x05x\xa7d\xcf\xb3TU\xf6\x97q\x935\xcd\xd5\xbc\xf1C\x96(3\xc1\xf7\xe6\x99\xa5\xd5\x8ck\x8f%\x8fp#Rj\\2JY\x9aFh\xc1\'B3\x02F\xfe\xe3?\xd6\x99\xfc\x1c2D\xbeX\xf3\x1b\xf9\xd9A\xc7\xd3\x07\x15v\x93\xc4\x93\xdcZKbU\x9eF\x1b|\xccc\x8f\x9a_\xc37V\xbah\xb9\x8eK\x85o5\x83\r\xbd\x88\xebT\xdbX\xde\xf1$kV\x95s\x80Y\xc6\x00\xf8\xe6\x97]3S\x8e\x19U\x1a9\t\xe7\x8cd})\x0f%\xd0\xb9\x8eE\xb6i\xd0#a\xd4\x81\x8c\xf6\xc6FO\xcd \xdb[\x88\xa4\x8b\xf1+\x13\x16\x19V\xe7#\xfaV\xa8\xba\xf6\x9a\xd2<fVB\xab\xb8\xeeR8\xa6\xa3\xc5\x1aq|l\x9bnq\xbfo\x15\x8d\xc9}{b\x88\xdfz[\x90\xde\x97Bq\xb4{\x0c\xd2\x1a|\xb2]\xa1\x91\x83\x062\x16\'q\xeb\xed\xf4\xaa>\xb1\xe2\x83\xd2\xe5\xb4G\xb6#\xce\x04\xee5n\x06q\x95&\xa7\xdbx{\xce\x8eY\x1a}\x97`Gs\xf7\x02\xbe\x80:\xa5\x82\xaa\xb1\xba@\x18d{\xd4,\xbe-\xd3 \xb9\x11J$Dn\x16R=$\xfbU\x0e\x1b\x89\x18\xc6\x92\xb6W\xa6{\x8a\x90\x10%\xc2\x10\x80Hs\x9d\xa4`\xf1\xedWV=Q:\x9a\x06\xb6\x01w\x19\xd7\xcf\xcf\xa7"\xaa\'\xb1\xfc#\xe2bH\xecWa\xfa\xd6\xa4\xb2\xc6\xe1Hq\x86\x19\x1c\xf65\xd6\xe5\xf7\x1f\xadd>]\xc5\xc3\x87{\xa9c*6\x85\xcf#\x14\xfa\xde\x19\x93yy\x1a_a\x92*\xc4JL\xcc\x850\xa0\xec\xda\x81\xcf\xda\xa34\x1aP7\x98\t\xc6\xeb\x83\xfdkQ\xcdx\xcc\xaa2\xcc\x00\xf7\'\x15\x9b[\xeb\x17\x16;\xd44\x90\xa9<\xef\x1b\xd7\xf25\xc5\xe6\xb4\xda\x90X\xa5eq\x13\x1c\xb2d\x0c\xfc\xe2\x83<\x1d\xa6Bs\x8c\x13\x83\x9aH\x82c\xccM\x8cg db\xb4\xdc\xe7\xbd{YP\xd5\xae"\xb70\xc5z\xe8\xb8\xf4\x10s\x8f\x8ek\x8d\x1f\xc6\x02\xc0\xcc\xb7\xb3\xc9:\x9eT\x9e\xa0\xd2\x1e\xee\xdd\x1e52\x0c8>\xbc\x8d \x8e\xc4\xd3\x89ip\xe8\xec#\'I\x19\\\x1dG=\xc5k\x14UF\x0f\x17\xd9\\`\xc7o+\x0fqS\xf6\xba\x85\xad\xe0\xccRs\xfc\xac0\x7f\xad>\xa48\xd4\xa40\xf7\x075\x1d\x95\x90\xe1\x94\xa9\xf6#\x14\xfe\x8a\xe6\x8a\xedr\xba\xa2\xb9\xcd{\x9a(\xafh\xaf3Fh\xa2\xbd\xa2\xbc\xcd{E\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QEy\x9a\rsE\x14\x13\\\x93A5\xe5\x14QE\x14QE\x14QE\x14QE\x14QE\x14Q^\xe2\x8a+\xca\xf6\x99\xdcj6v\xb9\xf3gPG\xf0\xe7&\xaa:\xc7\x8c\xbfg\xc7\xe6\xa5\xa9\x10\x82\x01\x90\x8d\xdd~\x17\xa5&GX\x90\xbb\x9c(\xe4\xe0\x9f\xe9J\x8d\x1aWTA\xa9\x89\xc0\x02\xafu\xcb\xbaF\xa5\x9d\xc2\xa8\xeeN+=\x8b\xc7h\xf0\xb3}\xcc\xb1\x18\xc1\x19\x00\xe7\xe3\xadW\xf5\x8dn\xea\xfc,\xb39\x865\xe8\xa0\x1csIiUP\xb2\xfa\xb6\xe0\x1c\x7fZ\x90\x96s\xbc\x81\n\x14\xc9\xc6O\xfcV\x99q\xaf\xe96\xdf\xea]\xaf\xe5\xcdW\xb5\x0f\x18[\x98\xd9m\x0b\x06\xee\xc4s\xf9\n\xc8.5}0\x96cu\x97\x07\x08\x8c\xd9c\xf9\nm\x16\xb5\xc1X\xedq\xbf\xaa\xee\x03?\x9fZ\xa9n\xa6\xc2B\x1aHQ{\x05\xcb\xb7\xdf\x81W\x91x}\x99\x03\x15\x95\x88\xe78AW\xb7\xbf\xbd\xb9,^b\xbf\xeec\x92iO\xbd\x01\x0e\xc9._\xe7\xd7\xb4Vq{}w<h\xbex\x87\xd4pT\xfa\xbf:\x8a\xdb\x1a\x9c\xcf\xe7\xdcg\x07,\xe4\x0e~*\x9e\xeb\xa9\xf5\x18\xee\x19`t\xf2J\x8c\xbc\xa4\x96\xcf}\x85Z\xc3\xe1\xe8^5.\x02\xb0;*\x0f\xefZ5\xc6\xab\xa6\xdb+\x07\x96\x17\xe3\xfd$\x1b\x89\xaa\xee\x99\xa8^i\xb7s\xdc\xce\xed\xf7Y\xc1P\x85rQs\x91\x9c{T\x1cr\x95|A\x04q\x0e\xaaO^+\x9b\x89e\x95\x1c\xbc\xb8$rs\x85\xe6\xa0I/\x99\xa6Y_\\\x91\xe7\xcbe\x1aB\x93\xecNO\xf6\xabHzTq\xab\xc6\x07\xa6Lk\xd5\xb9\xc7\xc68\xad\x10x\xafGXY\xcd\xcc\x7f\xaf5^\xd4<gl\xd6\xcd\x15\x89vyX\x868\xc2\xa8\xe9\x9a\xcfd\xb4\x85\x1c\xe6B\xe7\xfd\xbd)\xdc0\x1e\x89\x08\xe3\xa9b?Z\xad\xfcoW\x90\x84\x92\xe5B\x81\x83\xe5\xa6\x1b\xf5\xedR\xa3\xe8}:&\xd7\xa1\x9b|\xe1\x8e\xd5b\x82K\xcb\x94X\xe1\x88;\xe0\x1fB\x92\xdf\xa0\xa9\xa8<1\xadL\xa1\xde\x14L\x8eL\xc4)?\x97Z\x88\xd3<J\xfa$7K$"Gy\x03\x02\x8d\xc6\xdccm9\x7f\xb4\t\x9b\xf0\xe9\xa8\xbfRI\xa9\x8f\xd6\xba|Y[\x8f\xc43\xae\xd8\x00\x81\xfa\x80sL\xcbk\xd4\xf5\xb0\xb5\xb7\x85S?\x9d\x8eI\xfd\xc5K\xc7\xe0\xbb\xc2$f\xbc\xb6P\x17\x80\xbb\x9b\xf5\xe2\xa9\xc6\xe5c\x91\xd1\x9d\x9c\x8e0\xa7\x03#\xads{\xe3Mr\xed|\xa4\xc4(A\xe1x\'\xf3=*,\x04\x08\xbe\xb5By=s\x9f\x9ao\xfdZ+\x82\xbf\x87\xb6h\x94r\xcewl\xfc\x1a\x95kgx\x81\xcd\xe4\xc8\xe4\xe3J\xa0\xc61\xf2*b;\xa0\x99"\xddq\x8e\x83\xfb\x12k\xc1v\xce\x1b$FO\x07\x1cc\xf3\xa8f\x92W\x00\x82\x1b=\xfdC\x15\xc1y\xb6\x90ww#h\xe3\x8aS_8\xdb;|\x7f\xc5K\x16\xc9\xce7\xf9\xa9\x99n\x1d\x81B\xe0\x91\x8cg\xbd)\xa2j\xdf\xb0\xf5\xc8\xeed%\xa0h\xccr\x10?\n\xb7\x7f\xc8\xd4\x10{\x82\xc0\xe3 c\xeb\\\xca\xd3\xc8v\xb3\x1e\xb9\xed\xfaTw\xea\x12\xa0-\x1b\x1djABG\x06\xb9%\x94R\xa3\xc6\xe0hu!\x86}\xebW\xd4<y\xa6\xd9\xda\xb2\xc58\x9eR\x1bj\x8ez\x8f\xed\xf5\xaa7\x86\xbcO\xfb:Y\xa0\x8e\xd6{\x85\x94\x87h\xa1\x8c\xc8\xfe\x9e\xe0\x01\xd3\x9a\x95\xf0\x87\x86,\xf5\x84\x9e\xea\xe9\xc0\x86)\x04a\x17\x01\x9d\xb1\x93\x93\xd8\n\xd5\xb4\xbf\x0e\xe9Z8\xb86\x16\xe6#0P\xe7ybB\xf4\xebW\x1d2\xdf\xac\xdf\xdb\xc3%\xd5\xd2.\xc4#\x0f\xcc\xab\xc6\xc3\xe7\x1d\xcdd\xef\xa7\xe8\xfd/\xf16\xd1@\xf2;\x15\xf3\x07\nH\xdfs\xf1\x9e\xd4\xdaK\xfbk\xcb\x14\x96;9\xa3r\xb9\xda\xf1\x98\xd8|\x10\x7f\xcdQd\xbd\xd5\xb5xg\xb0\x9bH\xbb\xb7\x18m\xb28\x1bp\x0f\x04\x10O5e\xd6u\xc6\xd2/\x92\xcd\xb4\xc7\x99\xe4]\xd1\x14\xe7x\xfas\xd3\xbdEO\xe2\x1f\x12yN\xf1\xf8re\x88\xa9\xfa\x8f\xa8\x02\xa1\xdf\x8b9/\x96Y\xae.L\xd6\xe7L\xa9\x04\x04k\xc1\xce\x1b\x03\x15\xcb\x08\xae#\x85Z+xtHu\xc4\xf2\xcc6\xcf\xb5Q\xdfI\xbf]\xab\x0c\xc4\x81\xdf~\x7f\xaei\xc5\xa6\x93\xe2\x19\x19\x96\t\xe4-\x8e\x8a\xc4\xd4|\xf7N\xee\xee\xca\xe0\xc8\xd9!zd\xf5\xc5[<)\xe2\x1bk\x11,wM\xe5\x9f3#\xcd\xe3x\xc6:\xfc{W\x05\xfd\x92\x84\x92a,q\xe4\x06*\xff\x00\x94\x1e\xe6\xaf\xeeV\xf28\x1c\xc6\x91\xcb \x1b)Ni\xcc~\x18\xf1lcs\x18\xdc\x90=%\xd4\x9f\xefP\xf7I\xaf\xe9\x13\x96\xcc\xb6\xa0\x8c0u%I\xeeFx\xad!\xbc]\xa3\x84bg\x8b\xeb\xbf\x8f\xe9U=c\xc6v\x97v\xf3\xda[Fd\x12\xa9F\xc8\xda\x80\x1e\xfc\xf7\xa9\xb7w\xde\x1d\x9a\xddQz\x91|\x90Tj\xd4u\x03\xb7\xb1\xe6\xa9l\xdf\xad\xc9>&\xe9q\x14;1\xd3\xa7\x03\xf7\x15^\xfb\xde\xa3s\xb4\xcf\xa99\x0b\xce\xd0\x00\x19\xf9\xc5h\x9a\x1d\x8d\xfc\x16?\xbc\t\x1b\xb3n\x0f\xbb\x0c\xc8G\x19\x1d\x80\xf6\xac\x82H\xb6)*\xc503\x9d\xc7\xad]\xf4\xaf\x1f%\xbd\xbaE\xa8\xdb\x97\x91\x14/\x98\xbc\x86\xc7\xc5r\xc7\xa8\xd8Z\xb1\x8e\xe6I!V\x1b:\x92w\xf9;\x9a\x93\xd5\xfau\xe4\xd0\'\xe0\xe0\x8eL7\xa90\x01\xfb\r\xaa\xed%\xf7\xdd%\x11\\\xcd\x118\xdd\xb6N\x0e=\xc1\x15_\xd4\x9b\xc4\xb72Ll\xb4\xc6\x16\xe0\r\x93\x81\x82A\x1dB\xf0N*\x99\xe2o\x11\xc1\xad]\xe9\x93\xdb@Q,$\xf3\x1862\xfc\x82F=\xb8\xad\r\xfc_\xa4y\tr\xd7\x89\x83\xd5T\x92\xe0\x91\xed\xefN\x1e\xa3cs-\xcc\x17\x1d]\x92\xd8\x10\xd0\x9c\x94w\x1d\xf2O \x1e\xd5W\xfe\x9dye\x1d\xac\xc9\xd2\xd6I\xa4\x04H\x84jT \xed\x80\xbd\xc8\xaa\x0c\xf6\x868Lm}\xb2@\x0e\xf1*\x9c\xee\xf6\xc7\x14\xd7M\xf1,6\nm\xee\x99Y\x91\xb0\xb2F2\xa4\x7f\x8aW\xc4Z\xcc:\xed\xd7\x9b\x13\x90\x91\xc7\xb3\x91\x82\xfc\xe7\'?\xa5T%\xb4\xb7v%\\\x92\x0f \n\xa7\xeb\x13-\xd7\x96\x96\xe66H\xdb(\xe7\x92\x07\xc6kOejZ\x00nQ\x91\xdce\xa3\xff\x00i\xfa\xe2\xb5\x0b\rZ\xdfY\x92[k{\x80\x92\x18\xcbd\x8e\x83\xa6@=M[c\x82(bQ\xe7\xcb\x91\xd1\x98\x0e\xbe\xfcb\xb0\x88\xa2X\x8a\xbaL\xc8\xe3\x95*y\x15.|A\xae\xc5\x19X\xef\x04\xaa?\x99s\xcd*\xca\xf5,\xe1o;\xa7\x19\xe4\xc6\xce\x8f\x8f\xdbj\x83}\xd1f\x9eE\xfc=\xd0\x8d;\xab.\x7fz\xb3j\xfa\xde\xb5\xa2_\x16\x9e\x04x%c\xb2Db\xdb\xb1\xef\x9e\x87\xe2\x9d\xdbx\xf2\xc9\xd7\x12,\x88\xe0v\x19\xfe\xd5G\xb9\xd5u\r]c\xfb\xf1\x1e\x8eT\x81\x80>\xb4\xd0F\x15\xb2\x18\x1cg<v\xa4G=\xcf\x98\xd3\xdb\xdd\\F\xaes\xe5\xc8C\x11\xfa\xd4\x81\xd2-\x9e\x18\xd2\xe2\x08\xcc\x8a0Z=\x81\xadN_\x17i\x97\xb6\xed\x08\xcb\xbc\x9e\x9c\x05<\x93\xefIX\xdcX\xdaN\x12\xe1\xb6,\xc8<\xb4,\xc1ww9\xe3\xadPlc\x96\xe2H\x85\xbc\x06Y\x1b8\t\xcb~\x82\xa4/\xbc\xd5\x90Ayn\xf1\xb8_\xc1  \xe3\xe3=\xbe\x95u\x15\xc4\xef\x13\xcb4\x8b$\x83HGt\xc2\x8co\x8d\xb9\xcdA~\x95k\x1by\x11\x16E`K(oW\xd4\n\xd4\x0cz|\xc9\xb4e3\xd1\xd4\xee\x00\xfeu\x19qek rB\xb6\x0f\xf0\xf0Mf\xd1\x02\x88\x04w\x12\x85\xdc\x0e\xc8\xdc\xed\xe2\xac)\xac\xaa\xc4\x91\xaeA^\x06\xf1\xbb\x8f\x93\xef\x9a\x9fc\xd4\xa4&As\x0c\n\xb8\x1aJ\x93\xbf\xd4`\x01Pf\xe8\xb2DT\xc3q#\x1c\xf0{\x7fz\xd0m\r\xa5\xad\x8c~T\x83/\xcb\x10r\xd9\xf6\xfc\xa9#\x7f,\x0e\xe29K\xe4\x0e\x87\xa75\x95\\\xc4\xdecKkx\xf1\xbb\xf2\xea\xa7\x0b\x9fl\x1a\xb9\xf8j\xd3\xefv\xb2M5\xef\x9b6\xf2\xad\x802\x98\xed\xc5=k\xd4.\xe4\xba\xfc0\xb7\x8a\x18U}\x12$\x9c\xfc`\xd4\x0b\xce\x8f\x05\xbc-u%\xc3HKn\xac\x8795p\xb2\xf1U\xd5\xbc\xcc$C"\x81\xc8-\xc5L7\x8d-\x8a\x15[r\xb2\x9f\xc2\x18\xf1U\x1b\x9d6d]\xd0\xcb\xb8\x0e\xaaG\xf85\x07\xf7\xa8\xa4%A\x8c\xb0\xc8\xda}9\xe7\xaf5r&1ad:\x8ev-\x8d\xff\x00J\xad[\x18n\x01h\x81\x00\r\xc2\x93\xb7\xd75|\xff\x00\xd62\xc5"\x89%\x80\xf7+\x8c\x10*\xf3c\x7fm\xa8\xdb\xa4\xd0J\xae\x08\xe4\x03\xc8>\xc6\xb0\xb9a\xb5\xb8\x01A\x19n0p\x08\xa5,^M(\x10\x92I\x1fr\xeaN\xda\xea\xcc\xc6B\x18F#\xc6\xcc9\x1fZnN\x9c\xa2<\xc6\xef\xe6\x7f\xb1\x86\xc7\xe9[\xd9 u5\xeeA\xac[\xf6\x96\xa9zx\xbfFU\xe8\x19\x8dI\xe9\xb7\xf7\x96w\x11\xcb2\xbf\xa4\xf2\x15\x89V\x15\xd8\xa7\x8af*\x9a\x88\xdf\x0f\x8c\xa1\xfb\x82j\x0c\xb6\xf2\xc22\xdar9\\\xfa\x87\xd8\xd6\xadED\xda\xebV\x17J\x08\x98!\xee\xad\xc1\x15&\xb2#\x80U\xd5\x81\xf69\xa7\x8a\xb0\xe4\x1a`\x10{\xd7u\xeek\x9c\xd1\x9a\xe5v\xba\xcd\x19\xaes^\xe6\x8a+\xaa+\x9a\xf74Q^\xd1^f\xbd\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(4W9\xa2\x8a\xf0\x9a\xe4\xd7\xb5\xc9\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x99^\xeaV:|e\xee\xae\xa3\x8cc\xa1<\x9f\xa0\xa2\x8e\xe0{\xd3\xdaNY\xa1\xb7M\xf2\xca\xb1\xa8\xee\xc7\x02\xb3\xadW\xc7\xf1\xc6\x8f\xf7\x18F\x07\x06Y;}\x16\xb2\xddW\xc4\xb7\x97\xb2\xb6\xfb\xa7\xb8\x91\xdb\xd2\xb9\xe0|\x00:TY\xaf-\xe0\xfc\xcf\x93\xec\xb5ii\xd1\xefn\xf7\t\xe5\xaf\xfb\x9b\xfcV\xe57\x8ct\x98\xee\x92\xde"\xf3\xb3\x1ce:g\xf3\xa8]S\xc5W\xf6\xf724*\xab\x0chI\x04\x03\xce;\xd6K\xe1\xd1\x7f>\xb3\x14\xaer\xc06\xc8\xc0\xe9\xdb-\xed\x8a\xd1n\xf4\xbbk\x88d\x8em\xef\xbb\xf1mm\xa3\x9f\x9a\xae\x9e\xfa\xeax\x98[\'\x92\xca\xc0\xeb~1\xfa\x1c\xfc\xd4\xb9:m\xad\x95\xc4k4\x86PSu\x1c\xe7\xf6\xaaM\xa7\x885]v\xf9\xa2K\x16\x12\x01\xbaF8\xd8\x83\xf9\x89\xab\xbd\xb6\x95\x04\x90\xb2\xccZm\xdc7$\x03\xfaVM=\xf5\xc6\x83\xaa\xea)\xa7^#Y\xe0+F\xc7sn\xc7M\xdd\xf0k\xdd/\xc6\x9a\x9d\x9d\xd4\x86H\x96He\x04\x85\xdf\x86\r\xefY\xaf\xf5\x8b;\x0b\xcdW\x06{\x97rIr\xda\xd17\xfeQW\xb2\xf4[\xab\x98\x81\xb3T\x820\xaaU@\xd2\xc7\xbe\xe7\xb5m\x90\xd8\xda\xd9F\x00D\x89@\xe0\x0e\xb5\x13\xaa\xdfi\xcf\x04\x91L\x03!\x18+\xd7\x8f\x9a\xc9\xf5_\x19j\xb7\xa5\x92\x1c@\x0fpr\xd5M\x9a{\xe5\x00\xcbu<\xcb\xe6\x06d\xdf\x8c\xf7#=y\xa8\xbdO\xc5sO\x0c\xd0\xd9\xc1\xe5\xa3)_2M\xce\xfd\xc0\x14\xe5\x97\x85\xa4GI\xae&\xcc\x80\x82\x00\xff\x005\xb4\xfd\xc2\xc7T\xb31G\x0cK\x11>\x99\x165\x0f\x9fpqP\x1a\xd6\x83w\xa4\xdbIu\x11\xf3\xedc\x03y\x03\x0c\xa0\xf1\x96_\xafqW=?\xc4~\x19[t\x9dg\x8a(|\xa0V<\xe0\x8c\x0f\xc3\x83\xedU\xdf\x17\xf8\xc7F\xbb\xb1{[\x07\x91\xcc\xe9\xb6BA\xda\x14\xf5\xfc\xeaL\'\xa7\xda\xf4\xb6\x12\xf5h\xae.\x04^\x92\xad\x96$l0\t\xe3\xe2\xb9l\xfdY\xaf\xe3H\xeceH\x0c\x9e\xbdk\xb0\x1d\xc9>\xf5\x9d\xa5\xcc\xa4\x92\x9b\x11O8\xf7\xae\x05\xdc\xa2B\xc1\x98\xb0\x19\xeb\x8e\xb5\'\xa1\xe8\xd7z\xec\xc1-b]\xa0z\xa5l\x85A\xf3\xf3\xf1Z}\x87\xd9\xee\x8d\x00\x06\xe5\xe4\xbb\x93\xa9/\xe9_\xd1q\xc5B\xb4\xb2\xeaW\xea\xaf\x11\xc4y\xc0f:F~=\xea\xfa\xfb\xaa\xf4\xde\x9c\xc5&|\xc9\x8f\xc8\x83Q\xc7\xcf\xb5co4\xce\xe5\xdeB\x0f@>+\xb4\xdcy\x1b\x8f\xd4\xf4\x1f\x9di^4\xd04m?MY-\xad\xe1\x86\xe4:\xecX\xc9\xf5\xa9\xe0\xf0z\xe3\xaek7DfU\xc4\x80\xb6=X\xe7\x1f\x95V\xdf\xa4\xd67O\x04\x85]\x80\x04\x90\xde\xfd\x8e{\xd4\xde\x9fy\x0fP\xb6Y\xe2FE$\x80\x18c\x8f\xa7jJq\xed\xb4{\x9c\xe7\x9a\xf6$,\xc8\xa6q\x97`\xb8\xe82x\xeb]2yCia\xd78\x199\xfdk\x99-\xb7.\xeeG\x02\xa2\xa4\xcaH\xce\x0e\xfb\xe0\x9d\xaaa\x07\x1bV\xb5\x0f\xd9\xd5\x90EK\x8dJS(\x19o-\x17nH\xed\x9e\xd5\x07\xafx\x01\xf4\xbb9o\xad\xae\xcc\xe9\x12\xe6Du\xd8\xc1{\xb2\x91\x90q\xedIi^;\xd4\xac-\xe3\x82\xe2\x08\xee\x0c(\x14I\xb8\xa9*\xa3\x039\xefH\xeb^>\xd4\xf5;v\xb6H\x12\x18\x9d\nH\xa0\xee$\x1e\xdc\xd5\xf4\xfdc\xc2\xadk"\xf9\x0e\xb3i!\x15U\x8b\x06\xfa\xe7\x06\xb2\xb0Zx\xa9/#-r\x8f\x0e\xbc\xb9m:J\xfc\x002*\x9e\x96\xe1\xf9g\xf9\x00\x0c\xd7la\x18\xca\xf4=\xc1\xc9\xfc\xa9\xa2N}F4\xc7\xb1\xceEzdy0\x1bp\xdc\x7f>?\xc5f\xbf\xd4a\x19\x08\xd99\xf6\xadg\x94\xc4\xefN\x95\xc1\xc1\x0c\xc8Gq\xdb\xf4\xa9\xaf\x0eY[j\xda\xb46\xae\xac\xc8\xaa\xce\xe0d\r\x8b\xf3\xf2j\t<\xc1\x0b\x1d\x8eT\x103\x8f~\x99\xa9\x7f\x0bA\xac\x1dn\x1b\xbd.&\x95\xa2FY\xd0\x90\xa8c~\xa0\xb1\xe0s\xd2\xa4X^\x89\xafm\xa2h\x9d\xf2\xe3(\xa0\x96#;\xe0w\xa8\xb7\xea\xd1\xd9\xdd:J\x91\xb0\x8c\xe1\xd9\xb0\x01\xc6\xd9=\xab[\xbc\xf0\x96\x95}\x08H\xe1\x16\xb2(\xf4\xc8\x80\x0f\xc9\x87qX\xee\xab\xa6\xcda}qes\xb4\xb4o\x8fO \x8e\xa1\x81\xf65\xf45\xbc\xd3\xac+\xe6E\x12\xc8G+\xbbw\xf5\x15\x8f\xf8\xb7J\xd5\xe5\xbe\xba\xd4$\xb7\x02\x00\xaa\xa1\xe3`\xca\xa0p7t95\xb2\xf1\x05\xa4"\xd2\x19\xad\xad%\x12)\xf5\x90\xa4\x00\x98\xfeo\xa5c\xbc7\x7fpn\xe5\x82\xe6\xee6\x8c\x8f@f\x04\xeb\xcf\xf2\x9e\xf9\xaa\xbe\x9d{s\xa24\xcfi \xd9+\x02\xf1\xbf+\x91\xdcc\xa1\xabBx\xe7P\x85rmP\xfb\xe1\x98\x7fqT\x8d\x81zO\xbd\xf3\xc8\xc7\x14\x8f\x93\x14\x84\t\x19\x8f\'\x80\x7f\xe6\xbc\xfd\xaf/#v0^2g\xb0j\xd9K\xd3\xec\xee\x0e\xa9m\xd5\xcfrF\xf5\xadxo\xc4\xf0\xebR\xdd}\xf0\xa4\x17H\xd8\x8d\t\xeb\x16;\x13\xd7\x9e\xb5ul\xa23\xa8\xc0\x03\xa8\xaf\x9b\x9d\x15\x18\xfa\x9b*F*b?\x11\xea\xcd\x0bD/\xa4\xda\xb1\xec\xed\x9c}~\x95eg\xe2\x99\xedb\x10\xcdne;\xe2P\xfe\xa2I\xce[5Ky\xe1\x94\x9a_2\tB&\xd9\x8c\x8d\x80\x1e\xd8\xa7\xda\xdd\xdc2\xeb7\xf2B\xe9\xb0\xb8\x00\xafB@\x00\x91\x8f\x9a\x81\x9eY\x9c\x05\xc9\t\xca\xf5\x1c\xd7k,j\x02\xaa\x83\x85\x1d\x8d3\x96}\xa5\x9c\xc6B\x91\x9c\xd4Y\'\x17\xb1\xb7\x9aS\\\x84\x96\x0b\xeew\xab\xf8`\x10""\xe7\x08\xa1A<\xec1K\x00\xe16\xe4\xe0rF\xeaR5\xd8\xeaXc\xfe+d\xd1<9\xa1\xfe\xcb\xd3\xeea\xb5K\xb6\xb8\x85di\xa4\xf5\xf2G \x0e\x80\x03V5\xd2\xad\x15}V6\xca>cO\xed\x8a\xbd\xb2\xf0\xb9@\x8e]I*\xac\n\xa9a\x823\xce\xd5\x9d\xb8\xf1=\xba;\xa2\xc0\xe7\x0cT\xea!NA\xc7\x1b\xd6\x04\xd2\xab\x12\n\xb7\xd7\xff\x001H\x95\x1c\x80\xb9<\xd6\x95\xe2\xf8\xb4H\xac\xa5X\xe3\x85/\x17\x065@\x15\x89\xcfL\x0e\xd5\x98\x84\x97\x02G]\xb9\x19\xc6~j5\xdb\xa4\x13\x98C$\xbay+\xc0>\xc7\xe6\xad\xecg\xfc\\\x02o)\xe2\xc9\xc6\x1b\xbf\xc8\xf8\xae\xd4\xa0\n\xac\xa0g\xafs\\\xfd\xda\x0c\xeeV\x19\xe9\xd0\xf5\xf6\xae\xd4\x11\xb1\xf1\xb8+)d\xeeFy\x00\xd6\x9f\xa2\xf8\x8f\xc3p\x04E\x89-H\xfeh\xc0$\xfdpi\xb8d\xb2\x9ae\x8a\xea\xea8\x03`\xa9q\x91\xfd\x85r\xfak\x8bX\xf5\xc1i$\xe7|\x858\xfdy\xac\xc7\xcah\xc0\xc2`\x1e@ \xff\x00\x9a\xe5bWB\x1b\x82NH\x03\x1f\xd0\xd6\xf3s\xac\xe8\x976\xb2\xb3\xea\x16\xd2&\xdc\xb2\xbe\xd6\x1f\xd6\xb0k\x97cu+A&\xd8\x8b\xbe\xc59\xe1s\xc7_\x8a\x9f|\xb6vm\n\xc3}\x1c\xe2@O\xa7\x1b\x0f\x9c\x13Qze\xed\xc5\xf8\x9b\xcd\xb2{s\x19\x1f\x98\x92\x0f\xea\x05u\x1d\xb0S\xd4\xf5\xebRV\x16F\xee\xfa\xd6\xc8\x05V\x9aP\x81\x8f\x18\xcf9"\xa2\xd6\xe9\xd0\xb0\xc9 \x8e\xbdq]Iv\xeaa\x92)1,l\x1d\x1c\x0c\x10G|\xd4U\xb9\x81\x00c\xea\x0b\xb9Q\xc9\x1e\xd5c$R\xba\xb8V\n\xc4\x1d,w\x00\xf65\xaf\xc5\xe0\x9d"$\x0b%\xd5\xd3\xbf\xf3\r\xaa3\xf00j\xaf\xe2_\x0f[iP\xc3<\x17M*\xbc\x9b\x1a7P\x08\xe3=GQQP}\xa0j\xf1\xaa@\xe26 \x11\xea^O\xf5\xa67\x1a\xe5\xe6\xa8\xdf\xf5/\xb7\x07\xd2\xaa03\xef\xcf9\xab\x0b\x9e\xb7\xd2\xa7\xb7\x11[\xd8:H\xc0z\xc8\xc6\x8f\xdfz\xa1\xb2\xe9\xbdr+\xa1%\xcd\xf0x\x819]\x8e\xa1\xfamS\xbe\x0f\xbb\xb2\xb1\xd4n\x12V\x11\xcf,aa\x90\x8c\r\xb9\xe5G\xcdjWvq\xdf[\x11{m\x15\xd4J?\x8b\x1b\x80?\xca\xc3\x91_=\xcd+9\x07q\'\xb7\x1c\xe6\x9f\xae\xb7\xac\xc3\x0f\x96\x97\xb3*\xed \xf3\xdb\xe34\xc5\x9f\x88$\xb3\xf3 \x92\x034y:4\xb0^\x7f\xdc\x08 \xd2\xfa\x8f@k\xc9\xd2\xe2+\x81\x14\x9bg \x9cc\xfd\xa4`\x8a\xf7Q\xb6\x86\xd6\xfa\xfe\x1byO\x95\x1c\xcc\xab\x9e\xb8\xf68\xa6\xfek\x15\x04\x1c\xe0\xe7\x81\xc0\xc5\x02H\x99ze\xb3\x93\xces\xf5\xf7\xa4q\x1a(\xf2\xd8\xe7w8=\x8f\xc57\xf8\xbc\xb1 \xaaj\xdfH;\x0c\xf6\x15p\x90\x90\x88\xacK\x95\x00j#\x9cw4\xa9\x98\x8c\x82\xcaGPOo\xce\x92\xfb\xc4\xc9 \x92\t\x9a#\xc7\xae"A\xcd(J\x91\xc3\xe7\x8ct\xc8\xaeB\xc2\xa7j\xb0\xcbv\x18\xc5:e,\x008=\xc5\x065\xdf+\xb7\xb6*b\xcb\xc5\x9a\xf5\xa3\x8d\xf2\x8b\x98\xc7\x04I\xc1\xfdEH\x17\xbc\xd6\'\x06(G\x99.IA\x8d\xa3\x1e\xe4\xd5a\xad\xe2!B\xbe\x08\xeb\xda\x96\xd3\xf5\x99\xb4\x9b\xd8dL<c\x89\x10\xf5#=\xbei\xe8\xfa\x8b[(\xfcL\xb34@\x8c\x8dZ\xb1\x9eq\x9a\x815\x84X\x92K[x\x96m\'\x1e\x9c\x03\xf5\xc5Y/t}r\x15\xf32\x883\xf8Nv\x9c\xfb\xb0\xc8\x06\x9a\xdbj\x1a\xa4\x1b\xe1\x9a/-H\'q\x1b\x95\x8f\xb6Ek\x1am\xf5\xa6\xa9l\xb2\xc1"\xb0a\xc8\xff\x00\x91\xfe*\x8f\xe2\x9d.}-\xe3\xb8\xb0R\x04\xad\xb1\xa1\x1c\x80O \xa8\xf6>\xd5\xa6\x96\x04[u\xbe\xb3\xb9\x92H\x88\x04\xe1\xb3\xb1\xf8\xac\xd5\x9fQk\x8b\x83e{k\x1cr\xe4\x85$`dv\xf8\xaa\xd9\xbb\xbc\xb5o2\x171\xe4\xe5\xb8\xca|pkE\xd2\r\xc9\xb6\xf3\'di6\xe4\x84>\x81Y\xd6\x9e\xd7\xfa\xa5\xc9\xb2(m\xdd\x91\x98\xc8\xea@\n;\x8e\x99?\x15)6\x9d\xe2]\t<\xd8X_\xdb\xaf-\xb3;\xc7\xc9^\xbf\xa5T~"\xee\xd0\xad\xd5\xa5\x94\xd3\xc5\x96\x12\xf9m\xa4\xa9\xc7:{\xfc\xedR\xef\xed\xadn\n\xdb\xc9<\x11L@*\x1b\xf9\x87\xb6\xaa\xd0%\x89\xfd3$\xa0\x9fb\x83\x14\xd5\'\x90\xb3bF\xb7\x95NC!;O\xe5T\xeb\x7f\x1c\xdb\xf9ae\x85\xd4\x8e\xd8\xcf4\xdbP\xd5\xe6\xd5`\x8f\xee,\xd1~\xf4\x02\xc7\x83\x9fj\xb2\x8b\xc4\x11\xb6\x96\xb6\x9d\xd9\xf4\xeax\x9b88\x1b\xee\xdcU1\xf0\xfd\xc6\xad3B\xa8\xb9\xc0\x90\x01\xb7\xe9\xcdip\xf8\x9bX\xb1?\xbf\xd9s\x10\xfe,`\xd5\xbbN\xf1%\x85\xfa)f\xf2\\\x8e\x8f\xc0?CY=\xb6\x93\xe2&\xb6Uk\xfbS\x90\x0f\xa86G\xd6\xa3\xf5\x08u\x8d>Eib\xda\x87\xa3)\xca\x1f\xa7\xb5]\xa5\xfc\xefne\x93\xa7H\xa4c`W\x7f\x90A?\xbdV7M\x85\xe5\xf2\xa2\xbc\x88\xb6\xfe\xfb\xe3\xe0\xff\x00j\xfa\x19d\x8d\xc7\xa5\xd5\xbe\x875\xdd|\xfba\xad^\xa9T"L\xf6\x91r1\xf9\x8e\xb5o\xb2\xf1n\xa1\tU\x94\x89\xc0\xeb\x91\x83R\xadf\x8e\xf2=q\x87R\x0e\n\xc8\xbaH?\xde\xa1\\Y\\\xdb1WUn\xf9S\x9d\xabS\xafsQ\xd6:\x9d\x9e\xa1\nI\x0c\xc8I\x1c\xaey\x07\xd8\x8ax&\x89\x98\xa8\x91K\x0e\xa0\x11\x9at\xa9\x19\xc85\x13#\xde\x95\xcd{\x9a\xe6\x8c\xd7+\xb5\xdek\xda\xe35\xed\x14WTQE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14Q^\x1a(\xa0\xd7&\x83^QExk\xca(\xa2\x8a(\xae$\x928P\xbc\x92*(\xeaI\xc0\xaa>\xb5\xe3\xcd7LIDX\x95\xd7\x8ex\x19\xf8\x1d\xeb\x8c\xca\x8aY\x98*\x8eI8\x14\xb8\xe3\x92g\t\x1cl\xecx\n2j\xf4\xc4(%\x88\x00w<UCY\xf1\xa6\x95\xa4\xb1\x8cH\xb3\xcb\x8c\xedS\x93\xf4\xe2\xb1\xedS\xc5\xba\xc6\xb6\xecL\xed\x15\xbe8U\xe3\xfaU\x7f\xef\x11Z\xb4\x8e\xb9\xdc\xc3\xab\xf2\xd9\xaa\xd9\xba\xa4)\xff\x00\xb7\x83\xff\x00sl>\xc3\xbdhm|;<\x987\r\xa7\xff\x00\xf1\xa7?s\xda\xb4mO\xc7\x1a\xad\xee\x16\x15\x16q\xb7O\xe65C\xbe\xd5\xc9vVg\x96l\x90\xcc\xe7\'5\x10\xd7\x92\xcc\xc4\x8c\xef$m-\xd4})T\x86\x187=\xcb\r\xdc\x80:\xb9=j\x9e\xe3\xa9\xcd>B\xc9\x85\xeeN\xc0\x7f\xcdim:=\xad\xa6\x93\xe5\r_\x1b\xb1?ZMb\xba\xbcwi\x17\xc9\x07\x1b\x8e{S\x94\xf2\xa2\xca\xda\xc3\xb9\xd4a\xa58\xeb\xf1M\xa6\xb9gP$fE^Bu5\x1a\xd7L0\x08)\x91\xc2\xaf_\xce\xaa%\xba\x8e\x13\x9dD\xb1\xe4\xf7\xff\x00\x8a\xb8Kv\x90\x00@\x00p\xa3\x8f\xf9\xab\x1e\x99\xaa_\xe8\xda\x84\x972&\xe0\xd1\x14\x93\'\x92\xbdx\xfaW\xba\xb7\x8d\xafu a\xb6\xff\x00\xa7\x8f\x18f\x07\xd4~>*\xb5,\x85\xb0e\x90\x82\x00\x18\xef\x83Q\x92D$\x0c\x91\xee,3\xf1\x81\xefT\xf77s\xcc\xdaE\xcc\x89\x1e0c\xd5\xb1\xef\xbd8\xbd:\xd4\xc8&x\x15\xa4\x00\x00\xd8\xf6\xad\xf3\xc2\xfa\x05\x8d\x86\x8dkt\xd0E-\xcd\xd4BGwP\xd8\x0f\xce\xd0\x0fN:\xd6?\xac\xa5\xac:\xbe\xa4\x90\xa7\xee\xd2V\xc0\x07\x0b\xcf$\x0f\x80j\xc9\'\x8e/\xff\x00b\xdbX\xad\xb7\x97:B\xb1\x99A\x04\x00\x06\xdc\x8cw\xc5gr\xbc\xb3\xbb\xe4\x1c\x06\xfe\xa4\xff\x00Zk\xab\xf5{k\x83gkc\t\x11\xc2\x98bW\x1b\xf0\x7f\xf9\xa8\xbd#\xa7^A=\xed\xcd\xdc\xb9i\\\xe9Ps\xe9\xce\xdfa\xda\x9d\xa4\x83\xcc\x18P\x7f\xc6i\xcb\xb1\nv\xa6H\x1f\x9f4\xd6(J\x00\xa4\xf0\x0ex\xeb\xf5\xa7;\x1c\r\xfb\x861\xd3>\xf5\x00\xb4h\x9e\xacdnj\xf3\x93\xb5%\x97\x93h\xdd\xdb\x9a\xf28\xce\xd0\xb8%O \x9e\xf5\xc2<\xa2B<\xbc\x0c\xe0\xe7\xde\xa5 \x89\xdb>\x9c\xb6\xee\x14u\xfc\xaa\xbf\xf1Q\xabzc,s\xc0\x14\xe1R\x07 \n\x9a\xf0\x87\x8a\xff\x00`\xea\x1fp\xbaQ\xf79\xd8\xee\x97\xa6\xc7 c?\x19\x15\xb9E\xa8Z\xb0B\xb2\xa9\x0f\xd0\x82\x0e~\x95\x8cY\xf87Y\xbdb\xff\x00qXU\xbf\x8ar\x10}q\xd4\xd4\xed\xe7\x80\xa6\xd3\xb4\xeb\x8b\xb1r\x8c\xf0!\x93j+.@\xe4\xe0\x93\xd7\xf2\xadwK\xbd\xf1\x1d\xad\xac\xbe_Lg\x86<\xb8\x12\x1d\x05W\x92\x06w"\xb1\x9dZ\xd3\xa1]\xdd\xa1n\xa0\x91\xcd!\x08\xc1=a\x9b\x81\x9cpi\xb7\xda!\x8emGL0J\xac\xc2\x17W\x03\x86\x039\x07\xe9\xcdS\x15B\x8e\x17\x1c\x8c\xed\xc0\'\xf3\xa6\xe1&\xb8%\xd8\x95$\x0c\x12rq\xf3\x9a\xe8\xdb\xc8\xa5Sf\xf2\xbcg9\x04\xf7\xacu\xdfUk\xcb\xc9\xee\xe4\x85\x87\x9c\xe0\x94C\xb0\xc0\xc0\xfe\x95\xaa\xb2\xb2[+H-\x96M^R\x91\xa8\xf2w\xcdu)H\xf2\x15w\x13\xcf=?\xa562M0\\2\xb8\xe8\xa4t#\xe2\x9d\x88\x99\xb6\x03\x959\xeax\x00\xf4\xa4V\'\'\x1b\xb0\xab\xd8~\x99\xc0\xa8\x13^\xc91\xd2\xb9T\xe0\x00qS\x91\x14\x0c\x9ek\xcd\xb2\x8cnE9\xe8\x07\xfd\xe9\xbc\x8c2T\x020}_\x1f\x194\xecG"?_G8=\xe9?!\x96R~A\xc7|{}j8W \x9f\x9fzVFy\xedH\xc7\x1b(m\x8b\xd1\xbfCO\xed\xad\xfda\xb7\x1ey\xc7\xb6\rx\x1b\xc8\xc2\xee\xc8c\xd3\x1f\xa7J\xf0\xc8D\xdc\xbb\x0e\xa00\xeb\x81\xdb\xe2\xb9\x95\x1aA$\xf1\x90v\xfd+\x87$\x1cm\xf3E\xe5\xbd\xf2j\x11H\x9715\x99 \xb2\xe4g\x07\xa8\xdb\xefR\x9a>\xafs\xa2^\x97\xb5\xcb@\xe7\xd7\x1eF\xee\xe3\x8f\xd6\xa2\xd9\x98\xa9c\x9c\xe7\x18?\x14\x93\xba\x96Q\x8eq\x9f\xfc\x15-.\xda\xdaA$\x04\xc7"\x90U\x97l\x1f\xad3%\xba\xdcF\xd1J\xa1\xd1\x86\x18\x1e\rk\t\xe3k)S\x98\xa4\x8d\x80\xe4\x14\xe7\xfa\x13U\xaf\x12x\xb1u[Ad\x8b\xe5E&\x15\xdc\x902\x01\xce\x00\x1d\xce9\xcdS|\xc4\x0c2\xcd\x92\x0eH\xff\x00\xbdv\xb0\xa4\x812\x80\x9c\xe1A\x19\xe7\xdc\x83S\'\xf17Z\xb9\x8d\xe1\x96\xf3Tn4\xb0Q\x8c\x8a\xae\x83\xa0t\xcbi\x92d\xb7\xf5!\xca\x92x4\xdc*FK\x80\xdf\x8b\x04\x9c\xe3\x0b\xdf\x8a\xe6m\xb7\x11\x01\x91\x83\xc1\x1f\xf6\xf7\xa7\xad\x0c\xb28\x8dcl\xee\x00\x003\xb8\xfd\x05X\xad\xfc\x0b\xae^*\xc9\xf7D\x84\x1c\x1f\xde\xb6\xc6\xc7\xd3\xad&\x08o\xfa\x89)ki<\xc4~m\x03 }q\xc5N\x9e\xea\xd2\xcc\x07\xb8\xb9\x8a x,\xc0g\xe9\x9a\xa4\x98\xc2\x9d\xa4\xe0\x9c\x8c\xe7$\x9at\xb0+\xae\x06\x00\xdb\xd4\xf6\xab\xcb\xf8\x03[E\xc8\x16\xcf\x83\xd3\xcc\xc1\xe7\xe7\x15]\xbd\xd2\xee,&kk\x80\xb1\xca\xbc\x91\xc1\xe0\xf49\xefE\xefN\xeav\x08\xafs\xd3\xe4\x8d\t\xc6\xa6R\x06}\xb3\xc5"\xdb\xa8\xd8^1[{\xd8\xa4`2UX\x13\x8f|T\x1f\x97\xb1\x8a~,\x1fO\xb5&\xf19`\xe0)\xe7\n\x18\xf4\xfdj\\\xdb##D\x8e\xcc\xc0\x9e\xf8\x1c\xd2-n\xc9\xe9(G\x1e\x92\x7f\xefU\x9et\x88\x01\x03c\xb0+\xfejp\xd2O?\xad8\xd3\xb5K\xfd1@\x82\xe2X\x13\x1c*\xb1\xdb\x93\xdc\x03\xc5MI\xe2\xcdV\\\xc6\xd7Rg\x18\xf4\x90\t\xe3\x9a\xab?\x98$\xda\x10\x92\x004\xbf*7,K\x9cd\xf1\xc95\xd8\xfa\x85\xe4jQn\xa5U\xff\x00b\xb9\xc51%\x9d\xb4\x8c\x1d\xad\xe2f\xff\x00qQ\x9aM\xe6\xf3\xa4gc\xeb\xcf%\x9b$\xd0HL\x11\xbf\x1f\xa8\xc5*\x8a\x19B\x95\xe5\xb2I=\xab\xa1\x1eU\x95X)\x00\x1f\xa9\xa4\xc5p\xe9\xc1\'<\xef\xb9\xa7\x8a\x8e1\x8aJ]\xc1\x81\xdazd\x1f\xad7M\xea\xd9\x00`s\x93\xf5\xa9\x03l\x1fnd$\xe3\xa0\xe8\x7f\xedC\xdb\xa4A\x08^I9\x1d\xb8\xf6\xa7\x9ag\x99\x0b8\x00/~Mp\x000\x07&\x99\x80\xce\xde\xd8\x19\x1cP\xf1\x87f\xc89nO\xb0\xf8\xc7\xb58TI\x03.\xec\xe0\xe7\xfe\xf5\xc2y\x8a\xe4\xe1\x88,x\xc6z\xd7b\xb9X\xff\x00/\xf3c?4h\'?\x14\xd1\xed\x1e&\x0c2Tv\x1e\xd4\xea\xd6\xcd\xae\xee\xe0\xb7\x8e\'2\xdc:\xacjN\x01\'\xdb\xe2\x9d\xf1**\x15 \xee\xcerpW\xdb\x1d\xa9k\x0b\x9f\xd9z\x8e\x9f}\xe4\x99>\xeb)b\xa0\xf5\x04\x15$|\xe0\xd5\x8cW6\x92K\x19y\n\xc6Y|\xc2\xbb\xe0g}\x88\xe4S\x12\xf9\xcb\x14\xba\x14\x19\x026\x80x\'\x1b~\xa6\xad7_g71\xd9\xbc\xb1_\xa4\xf3*\x12\xd1\x85+\x9c\x0eB1\xef\xf5\xaa\n+0fL\x10\x08\xc0\xcf\xbf\xf5\xad\xf6?\x11\xe9\xcd\xa7\xc7}\xe6\xa8\x80\xa8l\xf7\x1d\xb0G\xbflV\x11p@\xba\x9eh\x86\xd8\xe4\x99\x8a+\x0e\x80\x9c\x8a\xd2\xf5\xd5\xe8\xf6\xcbf\xf6\x12\xa3\t\x14\x97Ur\xdbvm\xf3\x8a\xcf\xf4\x0b\x9e\xabu\xf8\xc4\xbeC\x98\xd8\x04b\xa1w\xee\xbb{R\x1c\x90G\xe2\xcf\\\xff\x00j\xe9\xdd\x94\xede\xcfL\x0eI\xcd;P^F>X\x04\xaf8\x1dry\xa4\x84\x11\xab.\xd2\xd9l\xf2y\xac\xf3\\c`A\xdf\x9f\xedZ \xbe\xe2\x92U.A \xe78\xc7J\xef\xc8X\x0e\xecd\xb1\xf7\xe7\xebJ0b\xa5\x147<\x80F\x06zQ\x1d\xbbK=\xb4=\x1eWX\xd7=2\xc7\x194\xb5\xb9v:Td\x9d\x85$\x80\x01$\xe0\x0c\xe7\xe9L\xe4(B\xed\xc8\x19\xea\x0f\xf7\xaev( \xed\xe1\x86A\x1dO\xe7Z\x99\xf0\x1d\x91\xb6e[\xd9\x96R9r\x06\xc2~Tv\xfc\xeb;\xbc\xd3\xe5\xd3n\xe6\xb7\x95W\xcd\x89\xb0\xc39\xfa\x11\xf0G"\xad.\xedo,#G\xb8\\+l\x19H`\x0f\xb1\xa8\x16}F\xce\xf9\x9d \x90\x96]\xc8 \x82G\xbe\xf4\xc9\x9c\x9c\x1c\xf4\xc0\xf9\xc56\x9b\xf7\x85w1\xc79\x18\xe7?ZrUr\x01\xeaz\x13\xdf5\xde\xc6\\zx\x03\x1f<TAx\xcc0NGqS\xf4\x01\x8d\xab\x9bk\xfb\xeb2\x1a\xdew\x8f\x8e\xa1\x88\xe9Z\x97\x87u\xdb}J\xca\x16\x9a\xe9\xde\xe1\x13\x0e\\\xfa\xb2;\x1c\x7fJ\xcb\x02\x86a\x1e:\xf22\x7f:L\xac\xc8\xc0F\x9c\x03\x96\xfc\xbei\xdbn\xa1we"\xc9hAPN\xb8\x9b:O\xd3\xd8\xfc\xd5}\xf7M\xb7\xbe\x8fD\x83Kvp\x06kwgM\x9b\x83\xa9\x1d@\'$\x7f\xc5AI\xe2\xfbk;\xb9m\xee\xa2 \xc6F$_b2:Vj\xb77\x9b\x19|\xf9c\x19\xc6\x15\x89\xfd*>H\x04\x84\xbf\x9c\xc5\x9b\x92\xc4\x92\x7f<\xd5\xa3\xf8\x96\xfeDF\xb7\x8b\xc8\x95H\xd4ujV\xf8\xc1\x15Q\x0f\x86\xad\x81q;\xf9\xa8G\xa4c\x04\x1f\xad_\xf5\xcdC\xc3:\x9c3M\x1a\xa9\xba\t\xfb\xb2\xa3k\x13\xfe\xecc?\x9dR\xe3\xb8\x94~\xedw*g-\x8e9\x15\x1b\x1c~\\\x99\x0cs\x8e\t\xa7B\xe3\x18\xc8.s\x9ex\xfd\r".\xa95\xd34\x97^X\x91\xb6:\x14(#\xe7\xdf5g\x0fO\x8e\xd2/*&vA\xb8\x0e\xda\xb1\xf4\xab]\x87\x8b\xef\xb4\xf6\x1eb\xfd\xe21\xc1n\x8d\xff\x00z\xb7/\x8e4k\x88\n\xbb\x85\xdc0\xd1\xc885\x96eH\xe4mV9\xfaW\x1eBgp\x02\xad\xedo\xefl\x94\xfe\x16q\xe5\x9f\xfe\xdb\xfa\x80\xfaUe\xe7E\xe9\xf7\x8d\xaaH\x8a\xb8\xfed85\xb4Y\xebZe\xc2\xa8\x86x\xc2\xe0a}8\xc1\xedMu\x10\x1d\x1ak[r\xe5O\xad#=A\xee\xbf\xf1Y!\xb1\xba\x9a2c\xb1\x96E<\xf9\x91\xa98\xfd*\xc9\xa3x\x96M;l7\x90\x99#A\x8e\x98q\x8fpj\xe2\x0e\xbfx\x1a8\xeeb_-\xb9\x95A\x05}\xb6=\xbe\x95I?\x87c\x88\xb4\xb6\xb2\xb4\x8e\xbc\xc4O5?op$b\x8a\xcf\x14\x84g\x0cv\xb0\xa7\xf1\xea\x17V\xcc\xa5\xd9\x98\x83\xf8\xc1\xc1\x14\xc2}kG\xd4\xa3!\xdc\x16\xc6c\xe3\x12)\xea>\xb5\x01o\xa8\xfd\xe9d@\xc1\xd0\x026\xb1\xc1\x07\xeb\xefV\x82\xfa\x17*c\xb9\x04\x9d\x83)\xc7\x1e\xe2\xa1\xff\x00\xa7<\xca\xfee\xa9M\'\xd4\xac=\xfd\x8dl:_\x8b\xa5\x8b\tz\xa6D\xec\xe0z\x87\xd6\xafV:\x85\xa6\xa5\x11\x96\xdaP\xea\x0e\x0f\xb8?"\xb0m?V\xb3d\x8a\tB\xac\x9d\x0e\xf1\xd7\xf3\xf7\xab\xf7\x87\xb5\x1b}/\xceA\x19h\xe5`\xc4\x83\xea\x1f\xf2*\xce\t\xe2\xb8\x18G\x05\xc0\xdcpk?yg%\xa3\x1dQ\xb2\xaev\xce\xe3\x15\xa4QP\xf3\xeb\xdaU\xbaB\xd2]\xa8\x12\x9c.9?\x9f\xb5JE4S\xa2\xbcR+\xa9\xe8A\xc8\xa7H#\x91P\xb2)`k\xd0k\x8a\xf75\xca\xedwEy\x9a\xf6\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xaeMzk\x93E\x15\xe5\x14R\x1770ZD\xf2\xcd"\xa2(\xe4\x9a\x00\xce\xc2\x8e)lU_T\xf1=\x9d\x90\x91"ey\x17 \xb18U?\xe6\xa2\xf5\rr\xe6\xf8\x98\xedQ\xa3\x8b\x1c\x93\xc1o\xaf\xb0\xaco\xc5Ww\xd6\xd7pF\xd1\x10\x92d&\xdfV\xe2~\x9d1P\xfa\x85\xeat\xf8\x0c\xac\xac\xde\xa0\t\x00\x90\t\xf7\xc5N\xe9\xd6-\xd4.\x04A\xc2\x0cgr2q\xedS>!\xf1|\xf7\xab$1\xc8\xd21?\x8f<\x0f\xa0\xaa\\V\xe0\xe6\xe2\xe6R\xecNqI\xe1m\xf7I!\x06C\xd0\x0f\xe1\xa6\xa8\xb7\x17G$as\xd4\xd6J\xe6\xfaI\x9dY\xc9y?\x95;\x01\xf3^\x87c\xd3\xa0\xb4\x88\xa4K\xa1\x7f\x99\xfb\x93N\xe5\xb9S!d\x19#\x80\x07Jf\x96\xf7\x92\xca\xed \x013\xd3\xda\x9f\xc7n\x96\xe8:\x1c\x9eM\'+0S\x96\xc9<\x85\xfa\xfb\xe2\xa1I#\x1fT\xad\x93\xce\x90v\xab(\xd4\r\x90\x0cq\x93\xcdxZ8Wdc\r\xdd\x81\xfe\xd4\xc9\xe6p\xc4\'\xa9\x8fV<\xfeU\xd6\xc2\x81\x9bv\xf2}\x8fAM\x03\x93!1\xa9\xc8\xeeG\x1fJ\x815\xd9\x04d\xe3\x1d\xbf\xc5J\x8e\x11\xbe\xd9\xf94\xa7\xef7\x86#\x04\x8ers^\x11\x14{A}\xce\xc4\xf5\xed\xff\x00j\xe3\xab\x97f\xc1#\xa7L\xd7\x1bw1fA\xb7\xdf\xa6G\xbej\xaek\x93\x9d\x86\xe4\xf7\xf6\xa9*\x9fj?\x0b\xb0\x1c\x920\xdc{\xff\x00\xc5x#d8\xcf\x04\xf3\xc7\xe7J\x96\xdaLh\x0e\x0e=dq\x8f\x83\xf3J\xc3\xbb;[\x03\x8e_<\x01P\x16Gs\x85\x19?\xee?\xda\x96v\x19\xae\xed4\xdb\xfdB\xe5"\xb4\xb52\xc8y*\xa38_\x93\xd0\x0f\x93W\x9b_\xb3\x9dZU\x06{\x8bh3\xc9\x0b\x97a\xfd\x85]|\x10\x96\x1f\xb0\xad\xe4\xb5Q\xb9\xcb}\xe1\xf1\xcbJ\t\x04\x1f\xa0\xe9VMF{\xc8\xed&\x16Q#\xccW\xd3\xbd\xb0+\x7f\xd3|3`\x96+ur\xd2\\<\x91\t\n!\xdbq\x9c\x007&\xb0]K\xc4\xd7\xe6\xfd\xedm\x968\x15$1\xeb\x90o\x90q\x93\x9d\x80\xaf\x9f5\xdd&M\x16\xef\xee,\xfes\x15\xdcY8\x18=8\xab\x17\x85\xbc#\xfbZ6\xb8\xbc2\xc5k\xf8b\x0b\xe9i\x08\xe0\x90N}#\xdf\xb9\xaa\xa6\xb1u/\xden\xe5\xb8W\x92\xe7q\x12\x168#\x07\x04\x11\xd8\x0e\xc2\xbe\x88\xd3D\rmh\xb0\x11\xe4\x88#\x11\x91\xd3n\xd1\x8a\xcfxr\xc6\xd3\xacu+\xc9&\x8f\xf8P7\xf0\xed\xdb\xbe\xa2@\xd5\xef\x8co\xf3V\xfd{\xa8\xdet\xee\x9dj\x91\xbf\xf1\xa6\x18y\x94q\x80\t\xd3\xf5\xce\xd5\x97\xf8\x87\xc1\xa9\xa5\xdaMwgp\xed\x02.dI1\xbdG\xb8`9\x15#\xe1kM*\xce\xc6\xdbQ\x94\xa4\xb3\xca\x9b\x84\xaer#\xe4\xf0\xa3\xa0?5?\xe3\x9b\xd8-\xb4y\xac\xcc\x83\xcd\xbc]\x80{&y5K\xd2|\x06\x97\x960\xc95\xe5\xc0\xb5\x94o\x10\xa3\x9c\x10{\x9ep*GP\xb5\x8a\xcf\xaf\xb4}*\xca9$\x8e\xddY\xd0\x9c\xacL\xc7\x91\x9e6\xfd*\x1d\xad\xd4\xd7\x9d\x11[\xa8^<j\xf3\x15W\x03\xd5"\x01\xc6\xdc\xef[\x14rF@\xda\xcb\xd3\xf1{\xd7\xb2$\x13#\xa4\xc7z\xba\x95e=\x08=\x88\xa8\xbbK\x08m\xe1\x8a$w!\x14(,\xe4\x9c\x0e95\x15\xe2\x0f\xdazl\tqjU\xe3f\n\xe2L\x82\xb9\xe8F:\x8a\xd9\xbfS6\xd6rO%\x8eQ\x132\x05:\xb0;\xed\xde\xb2\x91\xf4\xf1=\xd2E\x1d\xde\x19\x9b\x08[\xd3\x93Hj\xbe\x0c\xd2\xa4\x82W\xb2\xff\x00\xa7`\x0b*\x83\x94\'\xdb\x07\xa6~+\x9d7\xc2\xbaRY\xc2e\x87\xef\x12:\x06y\x19\x88\xc1#\xf8v\x91\x81T\xfb\xedgSu1\x9dI\xb6:\xeda\nm \x9e\xd9\xe4\xd4\x9e\x81\xe2\xbf\xb8\xd9\xa5\xad\xec\x12?\x93\x1e\xd4\x919\xdc\x07\x03w\xb1\xf9\xac<]k\xc2\x92\xf5S+t\xc8\xed\xd1\xa2!\x9d\x902\x96\x1b\xfeU\xc8\x1bw\xadd\x9d;\xc4Q\xf4\xed\x0b~\xf30\x90\x10\x15\x88m8\xf78&\xab\x9e!\xd2\xce\x9d\xa8I\nJLl\x15\xe3\xcfP\xa4\xe3\x07\xe9\xefP)\t\xe4n\xdcq\xc8\x1c`f\xa65}E\xb5;\xd9n\tlp\xb1/\xf2\xa8\xe9\xd3\xaf\xcd9\xf0\xee\x8a\xba\xdd\xdc\xca\xccD\x10\x10fn\xa7\'\xa2\xaf\xc9\xf7\xf6\xacI\x86.\xa5\xd5\xe4\x87\xa7A\x95\x9aV\xf2\x97\xfe\xde~\xc3\xbf\xd2\xb5I3Yt\xe4\x96\xf6L\x18\xe2S#c\xbf\x1f\xad@\x95M\xc4\x90H\xed\x8e9\xc7Q\xf3^ml\xc9\xe6\x02\x06}X\xc7Q[\xabhzTvO\t\xb1\x87\xc9H\xceN\xc1\x90\x00\xeb\x9e\xb9\xf9\xacN4R\xa0\xe7v\xf6*\xc3\x8e\x83\xa1\xfaU\x8fZ\xe8\x12\xf4?\xc3\x89\xae\xa3\x91\xa6Vm+\x90\x01\\\x03\xb7q\xbe\xd5\x13\xa5u\x98\xba\xb0\xb81\xc2\xe8"`2\xdd\xc1\xdcq\xf4\xa6\x8c\x01\x8c\x00\xb9^\x83\xf3\xa4<\xa0\xbc\x91\xc1\xf6\xe4T\xe1\xb6a\x06\xf6\xb6\x90.\xf2A\x0b\xfd\x89\xa8\xfc\xab\xb1\xdb\xc8\xe7\x8e\xc7\xbe+;22y`\xb1\xcb(8#\x15r\x8c\x1868\x07}\xe9\x93)b\x0b\x00\x01\xc7\xe4)\x7f\xbb5\xc3\xa9\x85Y\xb6\xff\x00*\x16\xfdqC\xb1\x8c\xe5\xa2\xe4\x1e\x84t\xcdk\xbe\x00\xbc\x8a\xe7FP!X\x9e)\x9d\x1d@\xc1$\xf2\x18\xfeF\xad\xba\x07K\x1df\xfb\xf0\xd2\xdd\x18},\xc1\xb4\xea\xc9\x1d\xb1\x91U\xfd_\xa8\xbfK\xb37\to\xe6\xe1\x82\xe3V\x00\xcf~\reF\xcekv\x8cOm$D\xe7\x1b\xe3+\xf3\xc6k\xd5\x91\xa3!O\'\x9c\x83\xfc<v\xaf\xa2\xee\xac-5\x18^\xde\xe1\x03\xa4\x83\x1c\xf6>\xe3\xd8\x8a\xf9\xea\xee\xdd\xec\xee\xae\xad\xd9\xf7\x18\xa6h\xf3\xf0\x0e?\xadXx\x8b\xc3\xd2xw\xf0\xf2G?\x9d\x0c\xe5\x941\x18`F\xf8#5\x07\xa1\xf5\xc4\xebBeh<\xa9b\x00\x95\xceA\x07\xb84\xae\x93\xab\\\xe9z\x9a\xdc\x0bT\x95v\x15\xc6@`I\xceFkK\x8b\xc7v\x81G\x9f\x04\xb19\xed\xb3v~\x85sYh\x8c\x16\x0c\x06\xe5\xf8=\xe9\xc8\x04\x00v\x9e:\x8e\xa4\n\x85\xd3<E\xd5\xfaR46\xd3\x81\x19mZJ\xe4d\xf7\xde\xa4u\x0e\x8d\xd3\xba\x8b\xac\x93\xc2K\x81\x8d@\xe0\xe0v\xad&o\x1d\xa0\x8d\x8d\xb5\xa4\xd2\x1c\x7f\x10\x11\x8f\xeb\xff\x00\x15\x99jWW\x1a\x9e\xa1-\xdd\xd3+<\x83\xf0/EQ\xd0\x0c\xff\x00z^Ic\x8a5\xf5\xf5=Orzb\x9byy}\xef\xb5H\xeb\x8ex\xa5un\xb9\xd5z\xa4QEurYU\x83h\\\x05\x07\x1c\xed]\xe9\xbd&\xc3\xa6\xb3\xbd\xbd\xb8Va\xa7Y\xc9b=\xa9\xb6\xd0\x81\xd9y\x1d\x8d*\x8f+\xaa\x8d\xc5\x80\xcer2\x07\xc6i\xc2\xaa3\x85\xc1<\x02\xa7\xb7\xff\x00\x15\xe8\xf4\xef\xc2m\'\xa9\x1d1\xdb\xf35L\xa3Il?9]\x89\xe4o\xda\xad\x0b\x0f\xf6\xef\xce\xf4\xd6(\x96G;\x8fS\x9c\xff\x00\x8a\xeaKdR\xce\xa4\xe0g\xe4\xe3\x14\xb6\xdc\xe3+\x83\xd4}k\xd4\x8dx\'\x9er\x08\xf9\xa4\xaczTjPI9\xd5\xdcWK\xef\x9dD|S\x1f+\x968\\\x1e\xa4\xf6\xff\x00\xe6\x9e"\xab\xaer9\x1d}\xf3\xff\x00\x14\xaf\x92\xc5\x98.\x0ex\xc6:\xfbR\xdbDd.\xcc\x95\x03\x8c\xf4\xfc\xa9\xd8\x83\'\xab\x00`\xef\x9d\xf3\xf4\xe6\x90\xd2\x03\x80\x0e\xf4\xd5\x10m\x1bP\x1e0\x061\xd3\x9e\xb4\x18@b\x19=<\x83\xee{\xd3\xe8`\x96f\t\x14L\xcd! "\x83\xbb\xfaS\x99\xf4\xeb\xcb\x7fL\x96\xf2\xc4\x1b\x07,\xb9\xc9\x1d\xb2jZ\xda\xcd,z\xc4LQH\x05\x82\xe4\x0f\x83L\xb5\xc4j\xfaL\x8a\x18\x8d\x81;\xd4u\xbe\x8bss\x1f\x9bmn\xa4\x10@\xdd\xf1\xce8\xefH5\x8c\xd1J\x12x\xde6>\x93\x91\x8c}3W\xcf\x07\xddC\t\xb8\xb2\x97\xd0\xd2?\x9b\x12\xb6\x0fQ\x86\x00\xfb\xf1\x9a\xbc\\i\xd6\xd7\xa8cx\x83\x83\xef\x8a\xd4\xf4\xdf\n\xc1\xd4\xec"\xb8\x82\xf0\xac\xa0\x90\xd1\x9c\x10\x18\x1c`\xe3q\x9e\xd5A{\xe2)z}\xec\x90\xcdo\x98\xf6*\xe0\xe0\xe0\xf7\xdf\x9a\xc2\x9dDE\x88C\x85^O\xf7\xad\x0bC\xf0\xd6\x95{cmup\xed,\x92\xa6\xe0\xaa\xdb@\x07\xa7Jc\xa8xq\x86\xb1\x05\x85\xb4\xaa\xe6d2\x10I;\x1789\xf8\xabv\x95\xe1\x18t\xa5]\x97\xd7M\x83\x90\x9b\xf0\x83\xff\x00j\xfb~u\'\xa0xv\xf5:\x85\xc1\x97\xa6\xc3q\x14M\xe5\xbf\x9a\xc3@m\x8eW\x9c\x9cT~\xb5\xd6\xedM\x94\x1eU\xfc\x90I(\x0e\xba\x14\xea+\xb8\xdf\xdbzG\xff\x00H\xe8R\x06\x1f\xb3H\xcf9I\x18s\xef\xd6\xaa\x1e!\xf0\x95\xa6\x97k5\xfd\xb3\xbf\x97\x19\x1edo\xce\x018\xc8?\x15v\xf1\x16\xa1q\xa4[\xc5%\xb9V\x91\xe4\x0b\xb6C\x81\x8cd\x9e+;\xd4\xf5mgTC\x1d\xc3\xc4\x90\x9ce#$\xe7\xeaO\xf6\xab_\x107@\xb5K\x8b&\xe9h.BeZ(\xd5B\xb3\r\x89#\x1f\xa5@\xe8C\xad\\I\x05\xd0\xea\x0cm\x8b\xe1\xd6W-\x90\x0e\xe0\x03\x9f\xd6\xab\x11\xa1\x93\x0c0\xaa\xc4\xf2:\x9f\x9a\xe8[~%g#\x07 \xe3\x19\xa5<\x89"*\x0bdq\x83\xde\x9c,-\xb0\xfa\xb2J\xe7\xa7\xe8k\xce1\x97\xd2c;rs\xef[\xc6ln\x18`\xd2V\xdau\xd5\xdd\xc2C\x04m3\x9e}\xff\x00Z\x7f\xa8\xf8sU\xb0\x8a9f\x8aE\xda\xcaVU\xc3\x05`r:t\xab_\x80\xcc{\xb5b\xc72\tUzr\x10/\xfc\xd6\x83/\x934R!\xc3+)VS\xdc\x1e\xa0\xd6\xef\xa3xZ\xcb\xa9t\xaf\xc4\x1b\xb7Y\xa5\xd6\x13\x04at\x9cn;\xf1X\xee\xab\xe2K\xab\x0e\xa4`[Txc\xd3\xac\x9c\xe5\xb5\x0c\xecx\x15\x97\xd8x\xc8\xc7i$z\x85\xbc\xbfxP@d\x19W\xc7q\xed\xf3T\x9b\xfb\xc9u+\xb9\xae\xde \x0c\xa4`\x0e@\x00`\x01\xfaT\x9d\xd5\xba\xdb\xdd]C\x9fLr2g\xaepi\x16\xb7M\xdb\x95\xc7\x18\xe35\x94\x9a\xef\xa9H\x05\xbd\xcd\xc7\x98\xb0\xb9\x188\xed\xb6\xe7\x198\xad\x15\xad\x9d\x8c\x0e\xd3\xc1\x16\x932\x83\x9e\xd8;\xe0\x0e\xd4\xe7@\xf0\xfa\xeb\x92\\\x06\x94\xc4\xb1\x15\x18\x0b\x92I\xf6\xcfj\x92\xbb\xf0u\xfd\xbb\x16\x88,\xf1\xaf \x03\x86\xfd\r<\xf0\xa5\xe4\x16\xd7\xb2[\xc8vI>\n\x13\xc6\xe2\xb9\xc8\xfa\x9c\xe4V\xb0\x90\xa3\xa6K\xae\xdcrke\xd1:7L\xea\xbd9\x1b\x07\xceVml\xad\x827\xdb \xed\xc5fz\xc7Z\xea=3\xa80\x04\x18J\xae\x85e\xd8\xed\xbe\x08\xde\xben{%2bT\x01\x91\x8e\xde9\x04qC@U[\xae\xe6^\xa0\xe3\x81V\x7f\x15I\x0cZ\xe5\xech\x07\x01\x0b\x11\xc7\xa8\x8ej\xb8$\x0f\x88\xcb\x00\xdc0\x07\xfek%u\x1f\xe1.\xae \x12k\xf2ed\r\xef\xa4\xe2\xb5V\xd3\x1b\xabh&+\xa7\xcd\x8d_O\xb6\xa1\x9aN\x15iF\xd1"\x01\xc0\xf5\x8e\xe3\xbd$\xf6\x8f\xeb\r\xb4\x9c\xe1\x88#\x03?J\xecC"\xc9\xb4\xb6I$\xf4\xcf\x1f\x95L\xe8:}\xae\xa3\xa94\x13\xb3\x80\xb1\xee\xf4\xf0O8\x1e\xf4\xab(\xday\xa1\x8a5*\xf28U\x0c\xd8\x00\x9a.e[h\xa5\x95\xcf\xa1\x17Q\xc0\xc9\xc0\xaa\xf4\x96\x92E\x1ce\xa21\xab\xae\xe4$p\xca\x0e8\xa6\xc56\xb7\xa4\xe4w\x157\xa9\xd95\x85\xdc\xf6\xd2\x87\x012Sw\xf2\xe7\xa8\xf85\x1e\xd16\xec\xf2A\xc6H\xa5\xdcf)\x19\x19\x182\x9c2\xb7 \x8e}\xa9p\xb8\x965p\xc1\x83\x8c\xa9\x1c\x10x\xa6\x8cdv\x1b\n\xf3\xd0|\xd4\x83\xd9j\xf6q;\xdc\xe9\xee\xa8A\xda\xdb\t\xc6}\xc8\xa8\xcb\xc9&\xd3\x9e\x0b\x80\xa6U\x8aegOu\x15\xa8\xe8>\'\xb5\xbeRb\x9bx+\xf8{\xa9\x1f\x1e\xff\x00\x152\xce\xee\x00\xfa&\xb8\x96<\xe0)P\x08\x07\xe4\x1ej\x07P\x96{uG\x8a\xdd$_\xe6\xc9#\xf4#\x8aC\xc3\xbe)\xb2\x92\xde\xda\xd9\x9c\xdb\xca0\xa4\x11\x85?J\xb3\xea\x9a~\x9d\xacB\xc9r\xa8\xcd\x8fD\xeb\x8d\xea{\x1c\xf7\x1f\x06\xb2\xcf\x11\xc5h\xba\x9b5\xba\x042\r\xee\x80`+\x1fo\xafZa\x1d\xd5\xd2\xe1R\xe9\xc0\x1c\x15\xdc@\xfaV\x82\xc7\xae\xcff\x86\xcatK\xd8p\x15[8:q\xdf9\xcf\xf5\xaa9\xfa\x14wo\x15\xed\xac\xcfk+z\x88\xc6pM \x92\x8bi\xddC\xa91HW\xe3\x83\x8e>\xb5\'\x14\xb1L\x0f\x99\x18\x04\xf4u\xe0\xe7\xdc\xe3\xadE\xb5\xaa\xbb\xb3\x05\x01\xb98\xa1.\x11T\x07\x8f\xe8\x7f\xf8\xa6\xed\xef\x19\x1b\x04\x80\t8\x07\x8a\xbb\x92\x00\xc3\xb9lnG5c\xb2\xb2[\x8dE`\x92\xe8\xec(J:\x8fS\x11\xdb\x9a\x9a\xbd\xb5\xd5\xf4\xd8L\xb6\xd2\xf9\xf0\xa7%O\x04\x0f\x9a\xa3Ct\xea\x00r\xdbI\xf47FS\xefVkO\x10_@\x9eT\xd8\xba\x8f\x1bD\xa3\xf1\x81\xec}\xea\xc5."d\x93Z\xbe\x0e\xe1\x90\x9dk\xb7loU\x17v\x97\x05\xd1\x93C\xa8\xc0h\xdc\x0c\x1f\x9f\xad:\xb1\xf1\x0c\x97\x13\x01sj\xb1\xaf\n\x19\xf9\x19\xf7\xad\x06\xcfV\x97N\x10\xc9\x0c\x89\x87\xe7j\x9c\xa3\x01\xfd\x8dc\xadqn\xb2\x98\x96@af\'g\xf2\xfcT\x96\x9fz\xb1j\x16\xd6\xa6vh\x89$F\xdc`\xf6\x00\xd5\xa7J\xeb\t\x0c <\xc6Tb\x06\xb7#P$\xf1\xf4\xaa^\xab\xd0\x96a\xe6\xc2\x9eYU-\xa0\x03\x82\x07\xf45\xf4\xf6\x9fx\x9a\x85\x9c7(\xa4\t\x06p{\x1ayY\xa6\x91\xe2\x03\xa54v\xd7\x11\xe2\xd9\xb9B:\xa9=\xabE\x82\xe2\x1b\xa8\x96XdWF\x1c\x10kQ\xb1\xddNEc\n\xb2\x9c0\xff\x00\x9a_5\xedsEr\xb9]\xe6\xbd\xaes^\x83E\x15\xed\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QExk\xda\xe6\x8a+\xc3^QP:\xf6\xbfi\xa1\xdb4\x92\x1d\xd2\x11\xe8A\xd7\xeah\xf79\xc0\x03$\xfbW@,B\x80I\'\x00\x0eI\xa7Z\xb6\xafg\xa3\xdb4\xf7\x0e\x06\x07\xa5GRk!>(]wR\x91\xae&TH\x88\x10Bx\\\x93\xd4\xfd*\xa1\xadkW\xda\xf5\xe3e\xcb\x03\xf8\x8fe\x1e\xc2\xa2\xa5\xb7H\x97\x02B\x8a:\xfb\x9a\xa7\xba\xea\x8c\x85\x85\xb8\x05W\x96?\xcc~>+Og\xd0U\xa2\xcd\xc3\x11+\x8d\x94o\xa4\x7f\x9a\xd4/uk+D\xf56F\xec*\xaf,\xed\xf1\xf5\xae\xc5\xac\x8a\x8d,\xd1\x0f>@\x0e\xdc\x7f\xa6\xbe\xd9\xf7\xf7\xac\xc7L\xd5\xe2\xb1\xd5\x92\xe2\xe2\x17\x9fb\x91\x1f}\xa7\x1dqS\x9a\xc7\x8b.\xf5\x1bf\xb5\xb7O!\x1cbIz6=\x85P\xb7Uy!\x94]\xbef|\xf9QF\xa4\xa2\x81\xb6K\x1e\xe7\xf6\xa9\xcb\xd1%\x8ah\x92\xde?F\xc6I\x98\xf3\xf0\x05U\xae\xf3{\xabj\x06\x04\xcd\xbf\x99\x81\xed\x909\xc7\xe7J"\x8bp\x00\xfe\x13\xf5\x03?\xe6\x99\xc4\xdeR\x05\x8eL(\xfcc\x9c\xe3\xe2\x9726\x00\n2:\x0c\xf3T\xe90\x8a-LK9\xdc\xb7\xd7\xdb\xe2\xb5\xcb\x11\x01S\xf9T\x00>\xde\xf4K2\xa8\xc7G\xe0\xf3\xd8SW\x90*\x82H\xdc{\xd2l$\x96B\xdc\xe5\xba\x83\xc7\xc7\xe9\\\xce\xa7\xc9\x1cn\xc6F{\x0f\x80j\xbay\xdd\x8eT\xe7\xd8{T\xb4@0?Zl\xaeK\xec\xceA\xc9\x1c\xff\x00zy\x9c*\x94^\xa2\x92\xb5\x8f\xcb\x04\x91\x96#?\x00R\x8c7:\xe1py \x1e\x87\x1d\xea\xb1\xa4T\xdc\xbe\xa7?\xb5H\xc6O\x1b\n\xe1\xe0PU\xa4 \xf3\xcfl\x0c\xfb\xf6\xa5\xe4\x829T\x85r\x13\x1cg\xb8\xf8\xa4.\x00\x8cF\xf2+7\x98:u\xc5u\xe60)\xe4\x8c\x93\xc7<\x11\x9a\xaf\xb9\xb8*\xc5\n\xf7\x19\x1d\xf0\x7f\xad-T\x90\x08o\xf1^m m\x11`tc\x81\xc0\x15x\xf0v\x83\xa6\xeb\x13]\x1b\xcf\xde\xc7o\n\x9f$\x12\x03\x168\x04\x91\xcf\xe9T\xa9\x19\xd4\x82\xd8V\'\xf0\xfb\x1a\xd3~\xce\xe4\xb6\xb7\xd3\xb5\x19\xb3\xbaY.\x826\x7f\x95\x17\x81\xfa\x92j\xe7\xc3\x8b\x0b\xf5\x08\xff\x00\x11\xa4\xc6\x81\xd9\x83\xf1\xb0\xdbo\xadS\xf5\xd9\xa6\x8b\xa6\xccaf\x121UR\x9c\xeeFw\xfaU\xc2\xc4\xd8i1\xdb\xe9\xb1\x04\x85R2\xc9\x1ey\xc1bI9\xe4\xf3\xde\x9c\xea\x1a\x95\x8d\x94k\xe6\xddG\x19n\xec\xd5I\xd4<9w\xe2}~k\xf7\x93\xc9\xb5\x89Dp\xb9\x1c\xb6:\x95\x1cq\x93\xd6\xbd\xd7\xbc\x1d\x16\x9d\xa5\xbd\xec7\xd23A\x83 \x93\x03*N8>\xe2\xb5m\xd5<B\xb6\x17\xb2Z\xf4\xa4kx\x03yS;\x04&4\xfe`\x9d\xc68\xac\x8aXty.\xed\x12\xe3\xa8\xb7\xe2& \xc9\x18R\xdf\xc4~\xc5\xbd\xf3T\xdf\x12\\\xda\xeaW\xc5\xad\x97(\xcb\xb5\x9c\x0f\xc6\xde\xf4\x86\x99\xaakz}\xb9\x82\rM\x92\x14RV6\x01\xc2\xaf\xb0\'\xa0\xa6\xe0+\xb1a\x1f\x05\x86\xd0\t9\xcf\xb7\xcd8\x9a\x13n\xac\xa67By\xc1R\t?C\xf1^^o\xefL\xf7\x17^{#\xb1b\xcd\x19)\xbbv\xda\xbd\x04Z\xdb,0\xdb\xb4J\xea\xa0\x05\x0e\x03q\xf5\xa6\x97O{\xa8HI\x9d\xa4b\xc3/!\xec=\xbe\x9d\xaa\x7fA\xd75\xcd\x10%\xbc\x98\xb9\xb5Pp\xb9\xc3\xa8\xcf@{\x8f\x8ak\x0ch6n\'\xd4rG\xc7\xc5K\x05\x82\x1c\xb7\x00\xa8\xcf?O\xee)\xcb\t.\x96o:+\x93\x1c\x8a\xde\xa9\x03z\xb7\xdf|\xf3\xf7\xa6\xee\x92\xdeX\xbc\x99-\xd5\xd0\x8d\x97\x1bm\xb6\xde\xd5l\x8f\xc6\xfan\x06\xf5\xb8\x8d\x8fc\x17\xf9\xe9P\xfa\xef\x8a\x1bP\x89-b\x89\xa3\x8fpf/\xf8\xdb\x1f\x1d1T\xc7\x95\xae\xa7\x91\xb0v\xa9\xc2\x00?\xbf\xcdZ\xb4\xdf\x06\xea\x9a\x80Y\x1b\xfe\x95\x18d\x99\x07\xab\x1f\x0b\xdb\xf3\xabO\xf5\x7f\x12\xf5\x95\x9a\xc6\xd7\\\xca\xe3\r\xe5\xae\tS\xeeN\xc3?j\xacn\x9b\xd0\xfa[Gu9X\x8a\xee\xba\xdb8?\x00sU\xd5\xda\xd9?\xc2?\x8a\xb9h\xa4\xe4d\x8d\xdd[\xb0\x03\xdf\x15m\xd6\xbc*tk1p/L\xcb\x1b(p\xc0\x0e\x0f\x1c\x1f\xefU\xb32\xb88\xfc#\x00\xf5#\xebT\x97\xdd:n\x95!\xb7\xbd\x80E(@\xc1r\x0eCg}\xb6\xc7j\xb3\xb5\xbd\x82\xfa!5\xb4\x9ede\x8a\xea\xc1\x1b\x8f\xad2*\xe4\x8fR\xe3\x92X\x8fz\xb8x\n\xf6\x08\x93R\x8eK\x94BgV\xda\xdf\x8b\x01q\x9c\xf7\x15\\\x92(\xe4\x85\x9b \xb1\x039\x078\xf6\xa8\xdf\xb9\xda+\x9c\xa8-\xdc\x13\x9aWO\xea\x13t\xbb\xab{\x88t\xb1\x1b\x80X\xe0\xe7lm\\\xbc\xb5\x8f\xa8Z\xcbn\xecT67\x038\xc1\xcfz\xd3\xef\xb5\xb9\xf5\xc9\xa5\xd2\xf4\xceb \xf9\xf3\x83\xe9 u\x00\xfbv\'\xf4\xaec\xf0\x9d\x84\x11\x1f1\xa4w+\xc9\x07h\x19\xf6\x14\xff\x00\xc16\xd1\xae\x94\xd7\x05\x02\x99\xa5lg\x9fBzG\xf65h\x94\xda\xabd\xb8f=\x17\xdc\xd7\xaaY\xf4\x98\xba\x95\x9c\x1dK\xaa\xb4s\xdcO\x1e\xa4\x0f\xf9"F\xe1T\x1a\xc0\xddu\t,n\xa5\xb1\xb0V\x8a(_\x0eW\xf3;\x8eK\x1a\xaf\xa6\xb7\xa7[I\x16\x9b5\xe4p\xca\xb1&\xd8\x9c\x81\x95\xe81\x9e\x0fJz\xf6\x1a=\xcf\xaek\x1by3\xd4\xed\x00\x9f\xd2\xa0o<\x01\xa7k7\xd3\xdf\xdf4\xd2\xcb.\x02\x80\xdbU\x14t\x00\n\xadk\x1e\n\xd4\xb4\xc8\xa4\x97M\xd7/V\x08\xc7\xaa\x16\x94\x92\xa0\x7f)\xa8ww\x1dj\xca\x19^\xe3\xa5\xc7sl\x84\x94\r\x82B\x0e\t\x1b\xf6\xa7\xa0\xb7\xe9w2\xc6\xb0uG\x82v\x03Y\xc1\x0b\xa8\xf3\x820y\xa7\xde(\xd24kKT\x9a\xd7\xf7\x0edU\xd9\xbbpa\xf4>\xd5P\xd1\xf5;\xcd\x1a\xe6G\x81\x04\xb1JG\x9b\x11l\x1d\xc3\xf8\x94\xd3hl\x99\x97}\xcd\xdc\xd2\x16\xe0\xbb9\'\x06\xa4b\xb3X}`\x80\x87\xf8\x98\xf5\xc0\xf9\xaf=\x92\xfe[\xbe\xa1\xf8\xab+x\xad6\x18\x11v#\xf9\xb1\xb0\xde\xb6\xb0\xda\xc7\x05\x91\xb5\xb9\xb8k\xac\xe7%\xf3\xbf\xc6y\xabsx\xd2\xe9\x91\xa3\x87N*\xed\xc7\x99#\x83\xb3\xf2^\xb5N1\xa1%\x8e\xf7f%\xa4c\xd4\xe4\xff\x00\x9a\x9c\xd1\xec\xed\xafu\x08\xad\xe4\x9b\xd2\xead\xc8\xe0\x95\x1f\xc2?^\xb5\xa6\xa6\x89`\x8a\x11maP\x06\x07\x00\xf1\xf5\xadU\xa7G\xeb\x1e(\x87\xcd\xb8\xea\x11\xe9\x85\x8a) \x12\t\xc18\x03\x1f\xadP\xdc\xf5\x1e\x9b\xe1\xf9<\xa8\xad\x1c<\xa03i\'\x8e\x06I\xfe\x95\x88\xca\x91\xa9\x80*\x9d\xa0\x1e@\xf6\xf7\xad\x0f\xc3v\x1aU\xd6\x93\x1c\xfeDW\x13\xc8\xcd\xbc7>^\t\x18\xc7j\x97\xd4\xbc?\xa1D\x86k\xb2\xb0\xae?\x85\xb6\n\xccV\xd5#\x99\xe4\xb3\xb9\x96\x00d8h\xd8\xa9`\x0fR>\x95\x17\xf0G\xc2\xbdL=\xd4V\xd7\x86H\xd9Da\x86\xa5\x1bz\xb0A\xc7\xde\xa4~-:\xfd\x89X&\x9e\xd8\xa3\x82\\\xa9\xc1\xe7\xd3\x90w\xad)\xb4m4\xa9\xdfcn\x14\x0f\xe5\xc6\x05Qu\xdb]"\xdcDlg\x124\x8eVD\r\xb8.;\x8e\xb4\xca\xe2\x1b\xab\xd5T\x9fS\xba\x91\t\xe5\x19\xf8?8\x14\x9cV\x11&\xd4\x8dq\xb4\xf3\xcf\xfeu\xa8]c\xab\xa5\xf8\x11A\xd2b\x8b\xb7\x98p\\g\xfd\xbaG\xb5?ae%\xa3\x07\x97\xa9I!\x07t\x19\xd2~\xba\xa98\xd6B\xa4\x93\xee\x00\xf8\xae\x8cb@0\x9b\x97\'\x18\x1e\xdd\xf3Nd1\xa4d\x12@\xe8G\xc7\xc5u\xb0\xaa\x1cc\xa6F;\xfe\x95N\x11\x08 e\x80\\\xb6\xf9?\xf8j\xcf\xcc<\xe3\x19;S?+&1\xb8\x86\xc9%H9\n>Mx\xc8\xcc\xaa1\x92\xc7\x19\x1d\x00\xa7\xdb\x03:\xabq\xecs^\x95\\\xb2\xe0\x928\xc0\xfaR\xda\x00\xca\x06p3\x83\xfa\x0f|\xd1\xe7\x10G\xd34\x98\x88\x0c\x1d\xfd\x14\x1c\x0e\xa7\x8a\xe2H\xfdYe\x07o \xfb\xe7\xe9J\xa4d(8\xeb\x9c\x12=\xab\xb0\x1b\x7f\xa9q\x83\xd4\x7f\xc5\x18V\xc6P\x8c\x90Oq\xbf\x19\xa6\xf5\x90I\xd5\x9cU\xaf\xc0\xe29\x97P\x9c.$I\x84c\xdc.\xdc\xff\x00SW\xd9`Yctt\x0e\x8c=@\xf3\x91Y\x1e\x9b|\xfa&\xa1\xe7\xc6\x0f\x91)U\xb8\x1d\xb1\xd9\xb8\xee3Z&\xa7\xafAide\x89\xd1\xe4a\xb65\r\xc3\x13\xd3\xf2\x1d\xeb\xd2\xbc9\xd5\xec \xe8\xf2Cu"\xa3\xdb\x062l=a\x89!\x94w\xcf\x15\x88\xeb\xbd>\xf2^\xa9\x1c\xb0\xa9e\x9c\xaf\x96s\xf9H\x00`\xfbb\xb3K\xbbt\x82\xf6\xea\x11\x9f\xdd\xca\xc0\x1c\xf3\xe9<\x1c\xfb\x8ay\x16\xad\xabG\x1e\x13P\x90\xa8\x18\xf5\x05f\xfdq\x9ag\x1d\xa5\xd5\xdc\xdbc\xcc\xb3\xc9\xb9\x98\x8e\xe4\x9c\x96\'\xb0\xab\xbe\x99\xe1\x95\x8c\x03vD\xae\xdd\x00\xc8\x03?^\xa6\xb2\xdd?\xa7\xf5+\xeb\x89\x1a\xcdd\x81\x0b~p\xc5@\x07p\xa4\x8eH\xcf\x15\xa2\xbf\xbc\xb2\xb4\x861t\xc9+\x05\x18R\xa1\x89\xc7$\x03\xc5U|?\xaa&\x9d\xe2\x07\x9a\xfeB\x12\xe6\x0f,\xca\xc7;[p#\'\xb0=+]{\x98\x12?1\xa6@\x98\xfcY\x18\xacgQ\x10\xc5ys\x14xh\xc4\x8c\xab\xbb\x9e\xf8\xc510\xa3\x80<\xa0P\x95\xca\x9e\x98\x1f\x15g\xd2<Es\xd0\xe3\xb9\xb30$\xea\xb2\xb9S\xab\x041\xe7\x80r3P\xba\x8fC\xb7\xea\xd2Au\xe74\x04\xc6\xa1\x80PA\x03\x8c\x0c\x8c\x1a\xb0x\x9fU\x8bU\xb9\x8a(\x01h\xe1\xcf\xef;1oo|b\xab[\x82\x01\x91\xc8\xc8\x07\xfei\xd4\x8a\xdb\x00$\x00\x06\x07\xfd\xa9\x16\xd8\xa0\x12I\xdb\x9c\xd6{\xa8\\\xdc_\xdd\xcdw1]nFp8\xc7\x00\x0f\x8csWvpCim\x15\xbc@\xe8\x8c`o\x92s\xb9\'\xebM$R\xfeYV*88\x00d\x93\xda\x82\xad\xb8\xa8$\xed\xe3\xa7Z]T\x8eHm\xa0\xfe\xb5\xcb\xee\x8d\x8b\x0c\x16=\x8f\x18\xf9\xaa\xf2\xa5\xc0b8;\xe2\xa7\x06\xec1\xf1Dw\x17Ze\xccw\x96\xca\xcc\xc3\x89P\x1f\xf5\x13\xfeGj\xb3\xcd\xe3\x1bY\xad\xf6\xdbF\xc9p\xdc\x02\xc0\xf0O\xf3\x03\xedU\x9d\xcd\x96\x0c\t\xe0d\xfd}\xb1\\\xc7\x1b\x92\xcb\x9cq\x9c\xe3\xfa\xd4\x9b{\xeb\xfbbR\xce\xe1\xa3G8u\xc0;\xf1\x91\x9e\x0f\xc8\xa8\x97\x16V\x97L\x92O\x10fL`\x83\x8c\x8fc\xee+\xc4\x87\xcc\x96w\x90\xe4\x93\xb8\x93\xdf\xe6\xb8\xda\x10\xf6\xf4\x9c\x83\xdf\x14\xa8VVd\x94n\x00\x00\xa4\xf5=\xbf#^\x94\xc9]\xd8\x19\xe9\x8e\x07\xd3\x1e\xf4\x9d$\x004\xe1\x83\x1c\xe7s\xcfsR\xb5o\xce\xd8\x18\xc7\x1fj\xe3\xf7S\xb6\xd9\x01\xf4\xe0\x82\x0e9\x1e\xc7\xdf\xe6\xa5\r\xd6\xab\x14F4\xd6n\x0cDp\x0e\xd2\xc0{n \x91\x8a\xe3N\xd2.\xb5Gq\x1ck\xe5\x83\x87v\xe0r:|\xd4\x95\xfe\x89u\xa7\xc6\x8e\xe8\xb2)`2\xbc\x8f\xcf=*\xd6\xd2\xcf\xa8\x9bI.\xa3\xb7\x95c \x83*\x96\\\x81\xb7nEW\xdc\\\xd8\x1b\x88\xed\xa4\x9a&\x93 \x88\xdb\r\x83\xf1\x9e\rR\xee\xa0w&C+1\x04\xe4\x9fQ?S\xefM\xb2\xa5B\xb0\xc9\x1dH\xeb\xc5L\\\r\xd2zT\x80O\'\xe6\x99}\xd5\x15\x97\x8cd\xe4U$\x9a\xf2@\xc1\xc9\xc3\x1fz\xb6F\x1aFv\xdbj\xe2\x04\x8f\x1bH$\x0f\xc2y\x1c\xd4\x96\x95\xa7j\x13\xde\xc3saq\x1a\xbd\xb3\x00\xc1\xc9\x00\xa9\xe4\xa1\xc6z\xd3\x18\x91\x83\xbe\x13!OQ\xef\xda\xae>\x0b\xf2\x12\xfe\xfa7\xf4\xc8\xc1\x1b\x04\xf5\x00`\xfe\x86\xac\xba4\x0bw\x7fa\x04\x87\xcbG\x97\x1a\x94\x95#\x1b\x8d\xfd\xf26\xaa\xee\xad3\xdb\xd8^J\x8a\x1d\x96?\xcaF\xa0s\xb1\xc8\xfb\xd5\xb7Y\xd2l\xb5{\x14\xf3\xa2\xdb \x07\x0c?\x12\x13\xd7\x15\x8aK\x08\xb6\x9ah\xc9\xdcbvL\x81\xc7\xa6\xb7\xdb\xc1\xe6#\xa6\xd2\x14\xa9\xcb\x0e\xa3>\xdf5\x85\xcbf\xcb,\xd1\xf9\xb9\xd9+\x82s\xc9\xc1\xefZ\xbf\x1bG\x1a=\x9c\x89\x082\x10\xca\xd2p[\x00c#\xbf\xd6\xb3\xbe\x11\x96F\x8e\xea6\x94\xe8R\xa5c\xe4.s\x9c\x1aV\xd3O\xba\xd4U\x96\x0b\x7f5B\xfa\xfb\x0ezu\xe9Pw~\x17\xb8\xb1\xb9i\x8c2\xda\x12\xde\x96\xe5A\xfc\xc1\xad\x1f\xc2\xfa\xbd\xb6\x9b\xe7Z\xde\x00\x894\xbb\xa3\x94\x9e\t#\x18$\xf7\xf6\xab\xc5\xccv\x97PH\x85\xa3\x96\'\\2\x9e\x84T>\x97\xe1\xae\x9d\xd5\xbazM\x1fPd\xba\xdfZ\x1c`\x10v\x04s\x8f\x9a\x91\xd4z\xf5\xefN\xbeh\xa4\xb0\rlH\xd2\xe39#\xb9\xcf\x1fj\xa2xcI\xd35\x1d#\xef\x13\xda\xa4\xd2\xf9\xae\xae[%\x86\xd3\x81\xde\xa2\xfcC\xe1\x84\xb5\x8eK\xcb"Li\xcb\xc4NY\x7f\xdc\x0fq\xef\xdcS\x98\xaeG\x86\xf5I\x8d\xb1-l\xe4y\x91\x03\x92>G\xc8\xfe\xb5y\x8a[\rf\xd9\xda\t\x91\x83\xa1\x05G|\x8c\x1e\x0fC\xf1S,#\xb4\xba\x81\xbat\xeb\n^\xdb\xe5\x0e0\x0b\x15\xe1\xd0\xf7\xf9\x15\x1a\xe6\xe2\xf2\xce\xe5ocy^\xd2l0\x07$\x00\x7f\x94\x8e\xc7\xd8\xd6\x18\xb2\x89\x01\x12{\xe3\x9aBh\xcaG\xbfr\x95\xce0\x7f\x15:\x96\xd9\xe0\x9ex\xdd@\xd8\xec\xa7\x1f\x07\x14\x83*\x80#9 \x9c\x8c\xf4\xc5g\xd2\xeb\xd4\xc9(\xc3\x8c\x8c\xfc\xf1\xbdkt\x82\x01S\x9584\xdc\xb32\xa9\x1f\x96G\x14\xbc\x13I\x03\x0c\x1e\xbd\x8fC\xff\x00zIc`X\tIC\xf8W\xda\xbdB\xea\xa67PA\x1c\xb5M\x82\xf1\xd7\x00\x9d\xc7\x04So\x189\xdboj\x9b\x89b\xb8\x8d\x83\xb2\xb79!\x86\x1b\xf2#\xbdG\xcc\xb1G*H\xbb\x89\x89\x81\x00\xf0x\xa4b\x94DB`\xe0\x1e\xb9\xa5\xf7<\xdb\xd00c\x80pO\xf4\xcdNk\x98\xaec(T\t1\x8f}\xea7\x94Q\x89\xcf\xa4\xd6\x95k{i\xae\xd8\r\xac\xa1\x94\x0e\xbc\x15#\xdf\x1f\xde\x9c\xe9\xba\xa6\xa7\xa0O\xfb\xa6i-\xba\xbcG\x9c}=\xc5e67W:U\xcf\x9d\x13a\x7f\x89{\x11\xedV\xf95\xd8%\x826\x89\xc0~\xb8=\xbd\xea\xeb\xa7x\x84\r\x11]\xe5&\x07N\xb06\x7fo\xfe+-y\xd0\xca;\xacJ$\x82C\x9d\'\x95&\xbe\x85\xd2u\x9b-b\xdde\xb7\x90\x13\x8fRg\x955-_8[\xdf\xcfo$w\xdal\xdeL\xc8r\xe9\xfc\x0e;\xf1Z^\x9f\xf6\x85\xa7\xdc\xc6\x9et\x0c\x92\x00\x04\x98#\x01\xab[\x15\xd4R\x95\x1a\x95Y\xb8\x04\xe07\xd3?\xd2\xb2w}:{\\\xb0Vd\x1c\xed\xba\xfd\x7f\xcdh\x95\xe85\x1f\xa7\xeaV\xba\x94>d\x12\x03\x8f\xc4\xbd\xc1\xf9\xa7\xf5$\x82\x0e\x08\xaa\xe0A\xe2\xba\xae\xab\x81^\xd7+\xb5\xd5\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x15\xe1\xaeM{QZ\xb6\xa9o\xa4\xdaI<\xcc2\x07\xa5{\x93G4}\xb3M5\xedv\xdbC\xb4id`d#\xd0\x9e\xe6\xbeu\xd5\xb5;\xedn\xf5\xd9\xa6oY\xfc]\x80\xa7:\xe6\xaf{\xae_3\xbbeY\xba\x7f(\xa9=\x1f\xc3\xb3\xeaN\xab\x19\xf2\xad\xd0\xfe\xf6C\xd4\xfc\x0f\x9a\xa7\xbb\x9aK\xc70@\t@pH\xd8\xb1\xff\x00\x15\xaa\xb0\xb4\x87\xa6\xc5\xf8\x9b\x92\xa2B23\xb8A\xfej\x06!m\x02\x18\xa2\xdc\xc5[\xd4\xc7\xdf\xde\x91\x94y\xacI \x85\xc1\xeb\x8c|\xd6\x81\xad\xe9:>\x97\xa4\xdd\xcb\xb1\x03F\xb9W\xc9\xce\xe1\xdb\xe75\x9a-\xc8\xb8\x85H@\xaa\x06H\xce2j\x8e\xff\x00\xff\x00J\xe2\x17t-\xa0\x10\xabW\xfd2t\xbd\x8d\xa6\x8d$\n\x1b\x05\x9f\xbdx\xcc\x031\x8dr3\xd4S\x7f[\xe0\x12\xdb1\x92;\x9a\xe5\xa4\x92V(=9\x19\xdc\x07\x03\xe3\xe6\x95\x8c<k\xb5X\x93\xdb<\xd5\x0b\xcb\xa8\x92s\x8c\xfe\xf5~\xa9\xa4\x0e3K\x08\xd2\x14,Pn\xea~\x0fQK\xdai:\xbe\xa3\x0c\x93\xc7nY\x07\x00\xee\x00\x13\xdc\x00z\xd26\xf6\xf2\xcfq\x04\x01\xbf\xd4eB:\xe3\'\x93W\xadcX\xb4\xd1\xad>\xedm\xfe\xb9\x8fd\x08\xbdTt\xdc\xdf\xf9\xc9\xa6KBU\xdege\x89N\x00\x04\x02MG\x9ei\xa3h\xa2\x81\x15\xe5\x90\xe7\'$\x00+?U\x80\xb2\x80\xa3\x7f;\x89\xed\x83\xd2\x91\x95\x83~\xe5q\x8d\xbc\x8c\x1cW6\xf1\x88\xd5Y\xb0N\t\xe7\xe6\xbdU&Gg~z\xe7\xb1\x15K-\xc9\xf2\xff\x00(RF\xf8\xec1V\x8a\xa0\x13\xb98\xa4\xca\x05\xe0\x82}=3\xd7\xb58\xf2\x1eE\x04\x05\x03\xa1\xf8\x1d\xff\x00*Llvo\xc5\xc2d\x9c\x1c\n\xf4>\xc4,Wv\x07\\\xf1\xf1UH\xe1\xa4l\xfeP\t\xcf\xd3\x9a{\x07\x03\x1c\xd2\x8f\tm\xa1\xd5p\x9c\x0c\x1c\x0f\xca\xbd\x10.\xec\x13\x18\xe4\xe1{\xd2\x96\xee[\xcc\xdc\x03`\x06\x1bM\x12\xc2\xa1\xc3\xa1l\x92r:\x91\xf2*\x1c\xd2\t\xa4f\x03V[|\xf3\xce)@\x15\x18\xe3ji*\x92\xe06\x1c\x1e\xf8\xe8j\xf3\xe0\x8f\x0f}\xe1\xe4\xbay\xc8\xb7\x8eO\\A\x8a\xf9\x92\x01\x91\xbb\x1f\xc3\xcf>\xf5N\\r6\x93\xc7\x04S\x9d:MJ\xd2YM\xb5\xeb\xc2$>\xa5\xe0\x82}\xc05u\xd3\xef\xedl$\x8a[\x9bar\x81\x8eP\x9eOny\xde\xab\xef\xed\xae.\xad\xa5\x8a\t\xc4.\xc3\x1a\xc8\xe0w\xe3\x8a\xfa\t\xee\xac\xec\xe2g\x96h\xd1Tr\xcc@\x00~u\x98\xf8\xa7\xc4\x9f\xb6\xa3\x16\xb6\xc5\xbe\xe8\x8e\xa5\x9cp%=\x87\xfe\xd1\xfdMU\x9d\xa4,\xcd3\xbd\xc4\x84\x9c4\x8c\\\xe7\xe0\x1e)\xa5\xd4\xf9C\xb0\x1c\xb2\x8d\xc3\xe4qS\xfa\xc7\x8d.\xfa\xad\xbb\xda\xc3\x10\xb6\x85\xc1WQ\xbb0\xf6\xce\xdfqU\x1d+\xc36\xdd>u\xb8\x92C4\xaar\xa4\x8c*\x9f|{\xd6\x93\xe1\x1f\x0f\x80\xa9\xa9\\(%\xf9\xb7B?\x08\xe9\xbf\xea{W^:\xb1\xdd\x1e\x9ft\t\x1e[\x18\xca\x8e\xe1\xb9\xcf\xe5\x8a\xbc\xe9\xe3\xfe\x8a\xd4\xace\x07\x92\x98R1\x8fH\xe3\x14\xad\xc5\x95\xb5\xea\x84\xb9\x89e\xc7@FB\xf6\xad\xd4\x9d\x02\xd3\xff\x00\xa7\x1f\xa6[i\xd5"+y\x8d\x9c\x192\x1bQ\xef\xda\xb2k\xd6n\x7f\xd6\xc5\xf4\xe5\x8a\xc6\xcc\xa1\x07d\xdci\x15\x84\xf0Ux \x81\x8d\xb8\xc7\x19\xeb\xf5\xaf5\x13\xe5XI\x83\x89y\x1c\xf3\x90j~\xfa\xd2\xdd5\x8b\xcb;u\xccQ2\xf2;\x1cd\x8c\xfcU[R\xba\x8eiQw\x05\t.\xc4@F\t\x1f=\xeb\xc8\xa5\xb6k_\xc4\t\x19Y\xcb48\x03l\xa1\xc1 \xfcb\xbd"\tD\xfeK\xa8!J\xac\x98<\xe1\x86FE^\xfc\'\xa4Yi\xb6p^LVI\xda0GuL\xfb{\x9f\x9a\x96\xd4\xfcYi`\xa4\xbc\xa1}\x94rO\xd0\n\xcaA\xd6\xa4\xb7H \xb8hc=\x02\xe0\x10\t\xf7\xebJ[h\xcbnD\xb3L\xd28\xea\xccwd|\x9a\xb6_\x11\xdd[Y\xc7mel\xb6\xe8\xab\xb9\x1f\xcc{\xb1\'\x15U\'E\x86\xe2\xeeK\x9b\xdb\x9f5\x99\x8e\x95\xf6\x1d\x80\xf6\xa9\x8dC^\xbf\xf1\x04~_\x96\xc9m\x9c\x84\xe3s\x11\xc8\xcf\xd3\xda\x9b\xad\xbb\xc4\x98P1\xdf\'\xfaS\xb5TDa\x80\xbc\xe1v\xfb\x9f\xadp\xc1\xb9\x0c\xd8\x1b=\xea\x86i\xa6\xb9\x91\xae.ey\xa4a\x8dD\xfeQ\xed\xbf\x02\xac\xa3\x11B\x82("X\xe3\x07!G\x7f\x9f\xad3x\xb1\xbdC\x9fW\x18\xeck\x8f\xba\xef\x04\x05\x0b\xd4\xb6:\xe4\xf7\xc7\xcd?\x883\x1c\x90\x08\xceA\x1d:\xf4\xa7\x89\x1a\xb0\x90m \x93\x93\xeeq\xed\x8e\xb4\x9bkq+dq\x83\x859\x03m\xe9m9O\xaf\xbd5\xd3\xb5MgM\x80\xda\xc6\x90\xb4\x01HWb\xdb\xb9>\xc3\x8aR\x0b\xcb\xdb-B+\xd7\x91\xeeX\xa9I76H\x0cA\xf4\xf6\x18\xc7JVa\x14\xca\x06\n\xe7\x93\xcf\'\xb78\xaep\xaa\xc1\xc9c\xb7\x00\x01\xd3\xff\x00\x9a\xb03\\G\xe5\xaa\xddHV"\xa6/Q*\xb8\xdf \x1fj\x8b\xa6\x0627\xe1\x904\xa0\x896\xdd\xb3\xf3V\xa5\xf1s<k\x8bY\xc6x\x19\xe2\xa1u-v\xfa\xe67D\x88F\xa7 \x92\xdb\x98\x83\xc7\x18\xe9L\xe4\x9bjc\xf0\x92;\xf5\xc7Jh\x0bHT\xb1\xc6s\xc8\x00\x7f\xe1\xa97\xdd_\xa8]D \x92\xf2F,\xb8$\x006\xe2\xa3[\xf4\xeb(_\xcc[U\\\x1d\xb2I\xa6\xf0\x81\x95\x04\x1e\x01\x19\xcf\x1fZ|\xb3aB\x14\xc0\x1dry?#\xfe)\xa8\x1bX\r\xf9RN\x01\xc6rk\xb4r]\xd4)\'\x8eH\xef\xf3T\xf6\xce\xd0iU|d\xe3\x8d\xce\xdcU\x84\x809\xc9\xdf\x1b\xf3]\x18\xe5Y\xe1\xb9\x82S\x14\xc9\xddH8\xc8\xe7\x83R\xc3\\\xd76\x8f\xfa\xd8\xc0\xc7Q\x12\x83\x9f\xce\x98\xb0b\xbc\x8cc\x9a\xf0FN\xd0J\xfaW\x18?<\xd5\xacw7P\x19\x04\x17\x13E\xaf\x04\x88\xe4d\x04\x9d\xb3\xb6=\xaa4\x91\xc30_:\x18\xa4\xd3\xb0,\xa1\x88\x1e\xdb\xd7\x93\xc9=\xd4\xad%\xcc\xcdp\xd9\x1b\x0c\x9d\x87\xc0\xe8?*\xe0\xc6\xac\x00P\xdf\x078\xa5\xb7a\x86\xe4\x05\xb1\x81N\x13j\x84$\x92\xbdI\xf9\xa6\xc2\t\xa4b\xed\xa8\x96\xcb3\x0c\x9c\x93\xdc\x9a\xee\xbf-T*\xe0\x0e\x00\xd8}\x80\xa6Q+\x80\x18\x9c\x8cdc\xfe\xf4\xb9B\xea\xac\x15T\x9c\x06o\xa5.\xd1$AX\x12\xaa\xde\xc3\xfaW%\xc2\x93\x81\xc7a\xfd\xff\x00ZxF#\x05\\\xe3\xdcs\xf7\xf7\xc5$\xc8\\\xe5G\xf6\xa6\x12\x02\x031A\x8f\x83\xd7\xb7\x14\xae\xc0\x02\xb0\x1b\x81\x07q\x1c\x10GN=\xa9fR\xe4\xf2\xa78;O\xc58\x85\x93\xa3\x0e\xdc\x13H\x8e(\xcb\xe0\x10\xa1\xb8f\xf7\xcdu\xa4!A\xc6q\xc8\x14\x8d\x9e\x9fu{#\x04\x8c:\x8f\xe3\xc8\x00}I\xab\n\xf8b\xe9\x90\xe6XCg\x8eI\xfe\xb8\xa8\xfb\x0b\xdb\x9d\n\xe1\xe4\x8dE\xc5\xb4\x87/\x18\xe1\x80\xf7_\xf8\xad\x02\xd7X\xd2/#W\x8e\xfe\x1c\x11\x9d\xac\xc1X|\x10pEj\xba\x0fN\xe8\xf7\x11\xc9\x15\xe4\xa5nA:\x92G\n\n\xf6d=\xc7\xf4\xaa\x1e\xad}\xd4\xa0uh"\r\t\xc6\x97U-\xbfp\xc3\xb5g\x9a\x86\x99yd\xd1+\xfa=\\\x1e\x180\xee2\x7f\xf9\xa6L\x17\x078\x1b\x98\x1c\xe7\x8a\xb8\xf8\x9bV\xb0\xb8\xb7\x8a\xde\xded\x96E\x983\x15\xf5\x05\x00\x1e\xe3\xbdSe\xda\xf27\x1b\xb0r\x07o\xd6\xab\xba\xd5\xbd\x95\xa5\xdc\xa9i:\xcb\x1f\xa4\x03\xa8\x1d\xc8\xdcd{T\xde\x9b=\xcd\xc5\xacR\\Bcs\x9c\x8cc#<\xef\xef]\xed\x1eQ\xd8F\xe3\xee:\xe2\x9a\xac1"\x82\xb1(\x93\xaf\x03\xdc\xf3\xc9\xa5\xc6$PpJ\xe7\xd4z~\xb4\xab\xc1#\xac\x9e[lb\xb8R\xdd\xb1\xd3\xf4\xaa\xf3\x1a\xcc#eP\xd8]\x80\xdf\x1f#\xe6\xa7\x07\xd1\xb1ld\xef\xff\x005d\xf0c\xc5"_\xab\xb2\x9b\x85\x98eI\xf5\x14\xc7\x18\xf8\xcej\xc3\xac\xebv\xbaL,\xce\xcagpD0\x83\x92O\xb9\xf6\x02\xb3\x17\xb4q$s4\x8d\xe7\xa0\x1f\xbdS\xb1\xb7w\xe4v\xa7\x1ftDfw\x91\xd9\xdc\x8d\xce\xe7s}sZk~\xbf{g\xd3\x8d\x94\x16\xea\x1e<\x81p\xed\xc0bH%q\xf9\xbe\xf8\xaa[\xae\x8dku\xd4\r\xd4\xb7\x0c\xc8\xd8& ;\x80\x063\xed\xf6\xa8\xf9\xadWPI\x8c\x84\x9f;\x92\x01+\x8c\x9c\x93\x91\xd2\x9eG\x19U\x1eP\\\x1e9=\xc7\xcd(\xe5p~\xa1\x08\xed\x9fsK\x18\xc4\xc3o\x19\x03\xd4>:U\nF\xa5\xb6:\x9f\x9c\x83\x82I\xfa\xd5\xcbJt\x80v_n\xc2\x98\x95ee*\x99\xe0\x8c\xfc\xf5\xfc\xeb\x82\xbc\x80\x17o#\x808\xfa\xfd*F8\x8ce\x88S\xeb\xeb\xf9\xf5?Z\xf7\x04\x9c\xb0 \xb1=>\x0fZ\xe8\xb6\x04rFNq\x8e\x00\xdb\x9f\x9a\xe7\x9d\x83\xb0\xce\xdc\xe6\x99\x88B\x16P\xa3\xdf$\xf0i\xa3\xc3"\x89\x98\xc5\xbbkr\xc0\x92jY!\xf57\x1d\xf9^\x80\xfc\xfc\xd3\x9d2\xdf\xef\xfa\x82\xc3\xb8\x81\xb0\x92F8U\xe0\x90}\xcfJr+A;\xc7\x00\x04<\x8eU1\xeev\x15\xc6\xba\x10\xa4\x921\xca\xa2\xeac\xf07\xaa\xee\x19G\xe0\xf5v\xcf\xf7\xc5/\xb1Z2v\x8d\xe3\xa7\xfe|\xd6\xbe\xba>\x9e\xe8U\xad"<pJ\xf3\xfa\xd6}\xabi\xd1\xd9\\\xbcj8+\xb9z\x92\x07\xc7\xd2\xado|/?L\x84L\xd3$\xa8}$\r\xb0{Uu\x8f_\xb7\xea34K\x1b\xc6\xea23\xbeEU\\0b\x08\xc9\x04dv\xf6\xa5z\xa3\x03\xc7 \x8c\x9e\x86\xa7`\xd0\xef\xae \x13y!\xb7\x9c\x8epH#\xe6\xa3&\xb5xd\x91$@\x8c\x01\xeb\x9e\x0f\xb1\x15F\xf6\x17PF\xb24.\xa9 \xf4\x97\x04\x0c\x1f\x9a\xb8K\xbby\x99\x91%Fd\xfc\xc0\x10H?J\xbc\xf8VH\xa3\xd2\xad\xd4\xa6\x18\x16W#\x9fVy5)\xae\x08\xc6\x9bvX\x8cy,s\xf4\x19\xac\xc6\xcfP\xd54\xcf>\x08|\xb7\x85\xd8\xb8W\xceQ\x8fR1\xd4\x1fjV}GS\xbd\x80Cq(h\xf2w\x18\xf8\x04v\x1e\xfcV\xa2\xcb\xc5\x11A\xd2\x85\x83Y\xcae\x8e\xdf\xca\x04\x80\x17 i\xfd+7q\xe1\xe9\xa5\xea\x86\xec\\ \x8d\xa7\xf39\xc9\xc6s\xb7\xcdE\x0c\xc8\x18\x81\x97\xc78$W^Z\xed\x07vs\xc6\x0f\x1fCK\xb49\x8c\x15\x03\x8f\xc4q\xef\xd2\x9a\xf9~Xb\x10\x92\xc3\x83\x9e8\xf8\xacQW@5(9\x04\xe7\x7f\xd8\x0f\xd2\xb5\xc1\x83g\x07\x1b\xf1]I\x96P\xaa3\x8e\x0f\xc7\xcd7\xc4\xab*I\x13\x98\xd9\x0eRd<\xa9\xff\x00\x8fq\xde\x9e\xa4\\g\x18\xe7$\xe7\x93\x91@\x8c\xa8$\x0e;\x83\xd2\x9c\xc3\xb1\r\x821\xc1\xfaP\x1d@+\xb1\x1e\xc7\xe6\x9e6\xbf\xae\xa5\xb8\x8c\xc9j\xfe\xd2\x84`\xdf$.q\x9a\xaf\xa4l\xa5\xcb\xee`A\'\x9eC\x1e\xff\x00?5(#\x05v\xe7\'\xa8\x1f\x1e\xc2\x98I\x1b!|\x1e\x9d\xb9\xe2\x9c\xb8\xb9\xba\x94\xc2ev\x91W`\x19\xb3\x8f\xd6\x9b\x82\x0bx|\xc1\x14I\x19c\x93\xa4c4\xd8\x19\x02\x9d\xc8\xb2\xa6\xe0v\x9aU\xae\x9cF\x16\x19\x1e"r\n\x86 \x01\xdb\xbd*\xaa\xa5H=\x18p@\xc1\xa7_\xb0\xf5?(H,\xe4e\'%\xb1\xc9\x1e\xf85\x1a+{\x99\xf5\x1bh\xa5\x93B\xee\x11K\x15\xf9\xdb\x8avIm\xe3\xd3\xe7H\x89\x93\x81\xac\x80\t\xfb\xd4\x0b\xc0\x15\x9cow\xce\x0b1\xc9;\xbb\xf5\xcfC^\xc1y{`\xe5\xadf1\xb1\xe0\x9e\xbd\xa9\xf6\xcf\xdd\x100@\xdd\xf5\xcd4\n\xb99\x1c\x7f\x9fzm\xce\x1a2\x17I\xce\xa0T\xe0\xa9\xf8<\xd3\x9aU\xd5\x95\x80a\x8c\x10FA\xfbR$\x99\x83H[,\xcd\x969\xc9$\xf5\xcd2\x9a2\xa4\x1c\x121\x9cg\xb59 Gp\xc7$\x0fa\xc0\xe6\xa5\x06\x9f=\xd5\xb3\xdc%\xab\x18\xd0r\xd88\xf6\xfe\x94\xf2$\xb7%\xc2.\xb2\x01>\x9d\xce\x06\xe4\xd7Y\xd2 \xa5\x98(8\x03;nx\x15X\x03y\xc6pEz\x07%[\xd8\x8c\xfb\xd3\xb1\x08F\xcb\xc7\xf8{\n\xf2H\x8bgiRp8\xf9?\x1dk\x91M$`d\x82G\xf4\xa5\x10\x0f\x14\xcf\r\xb8\x9e=<c\xdc|R\xdb\xe3I\x04\x81y?\xa8\xf8\xae\xdd\x15\x19A\xc3q\x90~GQMJ\xa9f\x0c\xb8\xf9\x15c\xe6\xba\x90\xc8\xc3#\x91\xfe)\x92\xa0\x8d\xc5H:+\x02y9\xe7?_zJ\x17{69U\x90\x13\xdcpEwn\xca0$rSp\xdd\xd8\xe3<\xd6\xbb.\x85\xa3j:\\\x07\xcbEB\x83d\xf1\x0c:\x1fs\xfc\xc3\xebZ\x0e\x97\x13\xf57\x7f&TI\xa2MX=\xfboT\xddJ\xfa.\x9a"\xf3\xa3v\x8eF\xd2YFqY\xc5\xa4\xe8X4NG9\xf2\xcfa\xf1J\xdc\xdb\xe0\xfd\xe6\xd7*\x7f\x8dO\xc5Fj\xdau\xc6\x89zb\x9c\xe4\x0c4r/\xe1e=\x18\x1a^\xdbP\xf2\x88u9\xe0\x86\xcf \xe6\xac\xe1\xb9\x04\xbd\xb5\xc4e\x1d\x1b\xd4\x0f \xfb\x8abHVTI\xa0`\xe8\xeb\x91\xec\xc0\xf6\xad;\xc0\xf6\xfa\xc5\xd5\xd4\x171:\xc5\x0cG\x13\x02s\xb9O`+i\xaf\x9e\xb4\x1dj]\x06X\xe7\x89\x83\xdb\xcb\xc9Pzg\xb1\xad\x87B\xf1-\xae\xb9\xe6*\'\x96\xcb\xc8\x04\xe7"\xb66r\xa3\xc2\x8b\xe6\x12\xe0z\x83\x1c\x9f\xa8\xf8\xaf>\xeaV\x92Aq#\x88\xf1\x11>\x96\x03o\xa1\xf9\xab%z+\xca*]WWb\xbd\xaek\xaa(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a+\xc3^\xd74QI\xcb,pF\xd2H\xe1UFI\'\x15\xf3\xcf\x8b\xf5\xf9\xb5;\xc9v\xb11#m\x89A\xebV\xbf\x1d\xebm,\xe2\xce\x19\x08H\xf3\xbf\x07\xa9\xac\xa6/\xdfN$a\xe9\x8b\x80=\xcdV\xf5\x0b\x9d\x0b\xe4!\xc37\xe6>\xc2\xaf\xfa-\x96\xb6\xfcT\x80\x15_\xc8>}\xe9h\xf3k\x1a\x87\xe5\xd8\xe5\xbe\xbf\xf6\xa9\xfb?\x14\xdcYi\xd2@\xb6\xac\xc9\x1bev\xe0\x16\xcfj\x89i#\x9b\x0b\xe5\xf2G\x19\xe9I$m\xb4\x95O\xc2\xd9\x00\xf5\xcdQI<\x91j\x11J\xcb\xa9J\x82\xbc\xe3\xefZV\xb6\x86\xe9@\x9e-X`\xc7\'\x1b\xd4]\xf5\xfe\xab\xafL\x8dy\x98`S\x94\x80{\xfb\x9f\x9a\xe9`DT!\xc1\xe3\xbf\x7f\x9a\x9a{+\x98YZ{g\x886J\x96\x18\xcdD\xdd\xb7\x9b\x80\x8b\xb7\x93\xb7=\xf3\xefY\xe9\xc7\xe1\xf5\xb4\xae\xcd!<\xbeu\x1f\x9a\xb9\xb5\xf2\xf4"B\x15c\x03m8\xc56R\xccv\x93\xe9\x1f\x88\x81\xd6\xbbU!\x81U$s\xcf\xb0\xf8\xcfzZ\x18v\x85\x0e\xb9\xcfq\xd34\xe1\x960\xcc6\xf0\xbf\xe3\xfe*\xbbVF\xa6\xf7\xdbz\x9aH\xce\x0533\xcf\x1c\x91\xfd\xdeS\x1b(\xe1\x88\xce3\xedH\x08\xa5\x92V2\xca\xd236\xe6\x91\x87$\xfd)y#$\xa9.q\x9c\xe0\x1aV8v\x12\xe0\x8d\xc7\x18\xdcp\x05UL\xded\xa0\x90N?\xf3\x8ayp\xa3#\x19=\xf1\xbf\xebMf\x0e\xaf\xc2\x9c\x1e\x00\xef\xc7\xbdx\xcc\xa3n@oH\xc8\xa9\x19\x02;z\xb0Nx#\xa55\x11\xc7\x93\xd01<U}\xcc\xa4\x12\xa1\x81\xc9\xc8\xcd=\x19\x18\x19\x07aH\xa7\x98\xc1p\xbbs\x9c\xaf\xbf\xc5u\xbb$D\xa87\x9d\xa3\x93\xd3\x9e\xa7\xd8WJ%\xdcB\xb3w\x03\xde\x9c,.\x8b\xbd\x88g\x1c\x13\xf8\x8fj`;-\xbb\x1f_\xa8a\xb3\x8f\xca=\xa9{j\x1c|W\x92\x16\x8dv\xa6\x17\x80\x18\xe3\xff\x00?ZA\x0e\xe0T l\x0c\x9e\xbf\\R\xd2\x06\x9430nNpF0;Rq\xc6\xa3q\xda\x0fL\x9c\xe7\x15\x05[T\xdf\xf6\x8c\xfe\x9fJs\x85\xf9\xae\xd4a# m,\x7f\x0f\xcf\xc5<\xb6U@\xa1\x17h\x03\x07\xdf\x1e\xf4\x92/\x98\xa8\x15x\xe3\'9\xc68\xa7\x8aZ,\x8fS\x12F9\x19\x1f\xf6\xa5\xbb\x19$\x0f\xc2.4\xe1y\xa6\xd8\xe1H\xee~k\x92\x8a\x85\x89\x07\x03\x90~\xb5-\xe1;{K\x9dz\xd0J\x14\xa8\xdf"\x83\xd0\xba\x8c\x8f\xf9\xa8{\x95|\x01\xe6\x1c\xfb\xfb\xe3\xb1\xa8\x96\xb9\x9e\xd6\xe5&\xb7,\xb2#oV\x1d\x9a\xa5\xd8\xcc\x96wv\xd3<\x01\xd6\x19U\x8a\x1co\x83\x9cT{\x98\x9e\xe6\xd6x\x96R\xad$l\xa1\x87bF3_N\xb3\x05\xe0\xd4V\xa7\xa9\xdb\xe96\xd2\\\xce\xc1x"4\xcf\xa9\xdb\xb0\x15\x9b\xc3\xe3_\x11\xcf\n\xc5\r\x84\r \x00y\xb9\'$\xf7\xdbP:\xb4\xd7\x92B\xf7w\xd7-,\xe4\x15\\\xf4_\xf6\xa8\xed^\x8f{\xe38\x1a\xdeF\xb2\x82S&\x82|\xc9\x17J\'\xf9#\xda\xb1\x16>\x16\x9f\xcfE\xbb\x965MX\xd2\x8d\xa9\x9b\xf4\xe0R1^\xa5\xe3\xdd\x01\x99\x0c\xa4\x99\x19X\x82\\\xb6q\xf9W\x06\xce"\x88\xa6\x01\x95l\x85a\xca\x9c\xf0Fz\xd2\x1a<\x01a\x19=r\xcd\xef\x93\xda\xa5Y\x1c\x9c\xb2\x8f@\xc8\xc0\xe9^b\x0b\xcb\x1a\xbb\xe5\xb6\xc0 \x0e3\x93[\xa7+\x14\x8c\x88p\x01\xf7\xfbWi\x1cq"\xaa\x81\x80rO\xc5:\x08H\\\xb0\nz.1\xce\x7f\xad7!Y\x93\xd5\x8c\x1c\x10:\x1c\x8ay\x94T8Q\x80\x08\xe3\xaf5*8\xce\xa3\xac*\xa8\x03N\t\xdf\xf4\xfe\xf5\nF;\x1d\xc9\'zdv\xac\x921\xe4\x01\xc1\x1c\xe0\xfeu\xce\x00C\x90\xac\xcc\xd8\x07\x188=i\xc8\x84;#\r\xc4\x0f\xa7~\xb4\x10 \x0e\xc5:\x0c\x06\xeb\x9ak\xca;\x97\xd9}[\xe3l\x1d\xe9Z\xc6\xc0nv\xda\xa3\xb7\x95;@;p\xd9\xff\x00\x8a\x7f\x1b0\\3o<m#\x9cv\xf8\xe9IJ\x04`&6\xe4\xe0`\x8c\xfe\x95b\xf0\xd6\x9b\x16\xa5u(\x98\x1d\x90(\xdc\xa3\x82Y\xbb}8\xa9\x1d2\xc2{\xab\xe8m" \xc9!\xc0\x07!F\xd9?\xa0\x19\xa6\xaf.b\xb7\xb6\x92\xe2A\x84A\x93\x8d\xc9\xa8I\xe6\x8e1\xc2\x03!8\xc9\xcf$\xf3\xedMU\x1d\xc8 \x8fW_l|V\xafy\xe1}2\xe6"\xa9\x08\x89\xc6J\xba\x93\xc1\xf7\xc1\xebY\xdd\xdd\x94\xda|\xd2[\xc9\x8f1\x08\xe9\xd0\x8e\xc4|\x1a\xb8\xeb\xbe\x1f\xbe\xe9\xad\x1b\xdc\x84hX\xe1^,\xe078<\x1c\x9a\x81\xd3:\xc5\x9d\xfa\xb2\xc3\xa9d]\xd9_\x9c{\x8ev\xa6Rgn@\xdc=\xfd\xb1\\\x01\xb5\x8b\xf1\xc8\xe8\x07s\xfd\xe9uU*X\xa1+\xd3\x07\xfe)wOFBs\x8e\x9c\x0e\x95E\xe53\x82\xe1\xb1\xe9\xd4\xa3s\x8f\x9a\xb2.\x17\x0b\x8e\xf8\xa6+\x1aeX\xaa\xfaOq\x83J\xa8U\x04\x94=3\x8f\xfc\xefN\x04rD\x81\x97\x04\x94\x05\xbf\xf3\xbdz\xc5\x80V+\xd0\xf4<\xff\x00zq"\xf2\x7f2\x95`3\xba\xe4o\xb6sI2j\xe0\xe4q\xcd&\x19\x91B\xe7p8%\xbf\xb8\xae\xd8\xb9\xd8\x08,Fp=\xa9\x7f\xde\xb0\x07nq\xc7\xe5\xde\x96\x11\x84\xf2\xdd\x95[\xb7\xd3\x15-"g-\x86`\x98\x1c\x8d\x80\xcf\xdf4\xc9\x91Ga\x93\x9e)\x82\x02\x8b\x99\x17\xd5\x8c`u\xfaR\xf1\x95\xcbc\x1e\xff\x00#\x14\x16\x1b\x80\xc0\x0cs\x9fzT.Q\xc9N{`\xe39\xe75\xd8\xd4\r!_V\x90y\x1b\xec;\x9fz\xe3\xb6FH\xc6k\x87bP\x96\xe5Opz\x0f\xa5!\x1cq\xb0RS\xafl\xfb}i\xee\xdd\xc7\x00`\xf4<g\x8a\xec\x85>X\xdb\xc8\x18Rx\xe9N\x18\xc3\xbe\xb2\xca@\x00n3\xb94\x81&\x91\x80\x08\xfa\x1aA\xe3\x04(\xdf\x92s\xc0\x1c\xae>{\x83H\xf9g\xbfn1\xfc\xd4\xf7\xcb\x120\xc3\x801\xdf\xa0\xf8\xa5\x1e%\x8c\xa2\xa6\x08\xcf\xe1\xf7>\xff\x00\x14\xf7\x92\xb2\x92\xec\xa3H ls\x9f\xb7\xefI\x12\xe9\xc0\xce\xe6\x84S\xb5\t\xdd\x85\x1c\x0cq\xed\\\xcf\x1d\xbb\x8d\xaf\x0cn\xdd\x89Q\x93\xb7\xf2\xa7?\x84\x85\x00\x96\xdb\xea\xe3\x81\xef]L\x9b\x99H\x8dJ\xfb\x83\x81\x9a\x9c\xe9\x98\xd9\x06\x08\xd8\x1c\x8d\\\xedQ\xfc\xcc8;\x8e\xe3\x07\x15\x1ecU\xdb\x88\xc0\x07\xa7A\x8c\xf6\x15\xd2E\x08\xdb\x9c\xe0\x8c\x901\x91\x9f\x8as\xe5\x9f\xdd\xf0\x06O$u t\xaf3\xb7;\x86F\x08\x03\x18\xc52"T*Xm\xb6\xc4}\x0e\xff\x00\x14\xbf0\x9e\r2\xf4\xa3\x1d\xa3 \xf5\x03\xbf\xe5J\x14%\xd93\xd4\xe5ry\xfa\x0fjT\x05\x04\xfa\x98\xb0\x18\xcfn\x7f\xe2\xbb\xf2\xf7"\xeeR\xb9$7\x1d\xfbWQ\x01\'\x18\xeep;v\xc6iE\xc0\xc7\xf5\xa4\xd7c\x8e\xa4\x93\x80\xc4s\x83\xeci#\x11\x00/PNw\x1eG^\xd4\xbe\xdc1!GQ\x93\xfc<{\xd7x]\x9b\x99\xbb\x13\x9e\x0e3\xd8\xe6\x9d\xc6\xb05\x00\x08\x07\x7f\x8c\xd2u\xe9;\x1d\xb6\xda\x90\xf2P\xb1\x0b\x86^\xaa29\xc7\\\xfd(\nD\xa0\xe1\xb2y\x18\x1d\x8f\xb58H\x8b7\xa7\x1dF\xd3\xd8\x0f\xfc\x14\xe1"\xd8\xbe\xa6df<\x021\x93\xf5\x1d\xbe)k\x00r\x08]89\xd48\xdb\xb7\xf8\xa4\xb4\xb8\xceNv\xc6;\xd3B\xab3m\x03\x0c\xbc\x13\xb4\x83\xd7\xbdw\x1ch\xe9) \x1d\xad\xe9\xcey\x00\xf1\xc9\xa5&\x90!\x122n\n\x0e\xe5\x03\x07\x03\xfc\xd4\xc6\x95\r\x96\xa1j\x92\xab\xee\xder@\xe3\x03\xa61R\xad\xa2In\x84\x1a\xd0\xca\xea\xc4\x021\xa8\x01\xcf\xefQ\xe7\x9f\xc8\x87\xcc*\xda\x01\x03#|\x1a\x852\xa9\xfc\x08C\x00\x01by\xfc\xab\xdd\x0ee\x83^\x8dd\xe3\xcf\xb7x\xd4\xf6\xdc\x08o\xd4\xe2\xaeR\xe8\x96\xb2(19R\xa3\x8c\xf3T=~\x19\xecL.\xb0\xb9x$WG\x18\xe3o\xf5\xe6\xa6_X_t\xaf.\xf6L:\xdb\xc8\xb2zG\xa5\x82\x9c\x91\xb7\x04\x8ab\xd2\xee\xd7\xa9\xac\xb6\xa8\xc5ZX\xd9p\xdb\x10H\xd8\xef\xf3Z\xba\xb0\xc0\xe7\xb5g^,q,\xb1\x81!Q\xe9V\xff\x00\xeels\xf9T\xd4\x9e#\xb1\x9e\xd1^\xdeU\x92F\x00\x84\x1c\xb6H\xe8Gj\xa7K\x04\xb7v\xd3\xbc\x92\xfa\xe4r\xc5\xcf\xbfl}*\xd3\xae\xf5{k\xfb6\xb6\xb4u\x9f\xcc\x8c\xb1u>\x91\x81\xb0\xcdWt.\x9b5\xad\xd7\xe2.\x14\xc7\xa0\xe9\n\xc3rMh\xe6\x00\xb1\xa7\x96\xdf\x85\xb0>1\xd2\xa9\xbe P\xf3\xc2\xf9\xf5\xc8\n\xb0\xf7\xc7z\x9d\xd2\xb5\x1f\xbci\xf1\xcc\xfc1\x8f\xd43\xfci\xc1\xc7\xe9U\xfb\xc6]B\xe31\xb6\x0cY\xc0\'\x1fSNuY\xe0\xbb\xe9py\x03&p\x8e\x89\xf00x\xfaQ\xd2\xa1\x9a\xdf\xa8M\xe6q\tef\xfa\xf6\xfdj\xbd$@\x80v\xf2:\xf6\xcd1\r\xe5\x02\x02\xb2\x82\xc0\x92s\xdf\x8c\xd5\x87\x0e\xa4\xee\\\xe0p8\xcf5\x1e\xe8\t\xc1L\x93\x8cg\xb7\xd6\xb0w6\xa0\x95tb\xad\xb8\xfc\xbf\xde\xb60\xcf\xc8a\x91\xb7\x06\xbc\n\xccp\x07Pq\x8e\xff\x00Jeq\x17\x90\xdb\xceOl\x0f\x8a\x93\x81w&Cg\x03\x93\xf3\xd3\x15\xc5\xcd\xb4\x8d\x11*9\xe3\x83\xd6\x93$\x06H\x19\x82\x12t\xeaR7\xe2\x84\x94$\x80\x12\x00\xce\x08\xa4\x11\x13\xca.?\x11\x19\xcfz\xe8"\xb0\xc8\x8c\x9e\xff\x00\x9fz\xf6\xc5=%_9\r\x83\xf4\xa7\xb1\xacjO\xa0\xfa\xf8V\xf6\x07\xe9K\xb7\x8f\xcd\x8a& !+\x82=\x8drI43\x8c\x93\x83\xb7\xd2\x99\x94,\x14\xed\x18\x18#\xdc\xe3\xde\xbd\xbd\xb4Te\xde\x83\xf7\xaa\x1b+\xd3\x9e@\xf8\xa7;IB\x02\r\xc4p;\xe3\xebR\xb6\xfal\xb7\x1ar\xdd\xbb\x9e\x06\x122I\xca\x8fl\xfb\xd4\xd8m\x8d\xcaK\x12DY\xc4Z\xf5\x0e\x00S\xb99\xc7\xbdF\x96\xe9m\xccn\xf2\x05R\xfa>In*\xa3\xe5$\x0f\x0c\xb2\x01\xb2)\x11\x8bv \x10O\xf4\xad\x88\x04x\xd5\xd4\x82\xac\x01\x04{\x1a\xccf\xb6Y\xa3\xd82T\xf3\xf4\x1d\xeaW\xc2\x17\xf7\xd2Esa$\x06E\xb5 G#\x1e\x8az+\x7f\x8a\xb1\xf0\xdfR\x1d.\xf5\xad\x9a\x12\xcbv\xa3C ,u\xc6\t\xc1\xc0\xe0\x83U~!\xb3k\xfbD\xb8Y\x006\xe4\xea\x0cp4\xb9\x03;\xf7\xcdE\xf8\x9a\xc9-u\x04h\xe3\x01.\x14\xb3\x01\xc0\xdc\x0e\x0f\xebU\x99 \xc6\x0eU\x89\xed\x8ekN\xd7\xb4I/"Y\xc4\xa7\xcc\x85\x0e\xd8\xc8\xe3\x1dN\x0f\xbdg\xa2<\xef+&F0>\x0f\xcdVx\x93\xa7<\x1dJ\xe2Clc\x8a\xe0\xeb\x8c\x029\xc7\xab\x8f\x9e\xd5e\xd0/V~\x9f\x02\xf9\xfed\x90\x8d\x12\x1d\xfd\xf6\xfd\xbb\xd4y\x83$\xf1\x85\x1c\x0c\xf3Z\x97\x87\xad\xd7\xf6D\n@%\x10\xab\x83\xd0\xe6\xb3\xd8\x127\x93\xf0\x90y\x19\xec>j\xd3\xa5\xea\x7f\xb2\xdfd\x830\x90\x01\x03\x9e=\xc59\xe1\x89\xed\xfa}\xfa\xdcJ\xc3\xcbd1\x13\xfe\xdc\x90s\xf4\xda\xb9\xe2\x18&\xbd\xb11E\x9f1\x188\x1e\xf8\xdb\x15O\xf1\x16\x95\xfb3PdE\xccS\r\xd1\x9e\xf8\xce\n\xfdE@y\xa3\'r\xe0\x81\x82{\xd5\xf3\xc4\x9a\xae\x9d\xa9%\xbf\xdd\xa5Y|\xb7m\xddr\xb9\x1cU-\xe2b\xe5\xb0\xb8Q\xc9\xcd@\xeb\x90\xda\xc1\xd4.\x7f\x05*\xbc.C\xa6\x93\x95\x19\x19 \x11\xd8\x1a\x9f\xd2&\xb9\x96\xc2\xdd\xae\xa3e\x98)W\xd40N\x0e\x01\xfb\xd2/\x1a\xb2\xa9\x08H\'4\xdd\x83:\xa9\xc0 p\xb9\xeb\x8a\x90I9un\xe4c\xfe\xd4\x8c\xc8\x19\xb8\xc6\xe1\xd0v\xfc\x8dUG2\xaa\x1c>G\x18\xe3\x8a\xb0 \xe7\x8aA\x11K\x82\xa7\x95\xe0\x8f|\xd5\x97E\xf1\x0c\x9aR\x18d\x05\xadI\xfa\xf9y\xff\x00\x1f\xda\xab{\t,s\x82F\x0f\xcek\x88D\x92L\x10\x02p\xd8+\xef\x9e\x06*M\xb5\xdc\xf6\xb3\xc74\x0e\xd1\xc8\x0e\x01\x1d\xc1\xed\x8f\xebQnm\xe1\xbb\x85\xe2\x99\x03\xa1\x1b\x83\xdb\xe6\xb4mm-\xb5\x8d8\x84a\xba0^\x06\xea\x06z\xaf\xd0\xd6^\x88\xe9#c\x1b\x0f\x07\x1dA\xab\x83hz\xde\x9dn\xf2nT\x88\x8c\xbad\x1d\x9f?\x15W!\xf7\x15\x19\x19\xceMi\xba\x85\xdd\xdc\x92[Msf\xd6\xf3\x85\xc1\xdb\x1a\xc0\xe0\xe2\xaa:\\\x11C\x14\xd1Ct\xb3B\x1f+\x83\x9d9\xe4T\x95\xac\xb1@\xe06YX`\x8e\xd5f\xd1\xb5C\xa6^\xc5\xfb\xe0\x8b\xf8\xa2\x7fq\xecj\xa1o\xf8|\xa6\xe0\xf68\xa5\x12O5\x1a\xde\\\x07BJ\x1e\x86\xaezwQ("u\xc6s\xe9\x1d\xbeA\xa6/\xecR\xe1$\x8d\xb3\x820}\xc7\xc8\xaf\xa8\xb4\xcdn\xc7R\x08\xb1\xca<\xd2\xb9(\x7f\xc5L\xd7\xce^\x1b\xd6\xfc\xa9!\xdd\x95\x9a\t\x07>\xe2\xbe\x8a\x8d\xc4\x91\xa3\x8e\x8c\xa0\x8f\xce\xb6\xb6\xf7\x11]@\x92\xc6y\xd9\x97\xfd\xa7\xda\xbc\xe6\xea\xda[;\x89 \x90~]\xd4\xfb\x8fzPWB\xb9\x15\xd0\xa7\xa9\x8a\xf6\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a\xf0\xd3K\xd9\xbe\xedis6?\x04l\x7fAN\xcdT|c\xaa~\xcf\xd2\xda5?\xbc\x9c\xec\x1fN\xf4d/\xa8\xf07?j\xe8Vr\x11\x7f3\x1c\x0f\xa9\xac\x13V\xbdi\x9ak\x82\xc4\xb31\xe3\xdc\x9a\xefO\xb2\x9atKx\xe3\x0c\xec2\x7f\xc9\xcd4\xb9\x02k\xdbhq\x90[\xccq\xf4\xa9\xdd\x1e\xe9-u8\xd9\xcf\xa4\x86S\x8e\xb5\x95\x0e%\xbavw\xd8\xbe\x82~\xbb\x93[\xad&\xde\xcc,I\xeaH\xf5(\xfaqHjZd\xbaCA\xe7:\xb0\x97\xba\x83\x95s\xd0\x1a\xb2\xf8OO\xfb\xc5\xec\xd7R\x00\xd0\xdbF\x0f=\xe4\xed\xfaUo]\xd6F\xa7t\x88\x98\xf2\xa0\x93s\xf7\xcb\x0e\x02\xd5\xef\xc2\xe5a\xd0\xcb)\x19\x96\xe5\xf7\x7f\xf6\xf6\xae\xf4\xe3os\xd4e\xf2\xc90\xc6K&{\xe9\xdb\xf4\xcdG\xea\x13]C\xd2\x15\xa5\xdaip\x87\x1e\xcc\x7f\xc5W\xfe\xd0\xee\x9e\x1d2\xd4o\n\xd2\xdc\x82\x07r\x14d\xd5w\xc3ZA\xd7\'a#\x15\x82\x10\x1aW\x1f\x8b\x07\xa2\x8f\x93Hx\xebU\x8e\xff\x00S\x8a\x08\xc8e\xb4]\xa7\xbe\x1c\x9c\xb5!\xa1x\x8am*\xd6\xe6\xce\x1b\x12\xcd,\xa6M\xea\xdc\x93\x8c\x059\xac\xc5\xdd\xed\x9c\xde"\xbc\x92r\xd2[FB\xe9\x00\x92\xe5\x17\x81\x8fsV\xf6V\xf7\x96\xfd\x02\x18\xed\xd4-\xc3\x8d@\x9c\r!\xcf;\xfb\n\xd0\xf5{M\x12\xce\xc0\xa1\x81"HW\x86\xfe >\t\xeak*\x8ac8,\xe7\x18\xe0\x7f\x8a\xea\xfe\xea\xff\x00R\x99\x1e\xf4\x00\xa0\xfabRH_\x9f\x93I\x12\x11\x94!\xdc\xbd\x0fn\xbf\x15A\xd5:\xb1\xea7\x86U\x81`\x861\xa1S\x18\'\xe4\x81V\xbd.\xc9\xec\xad\xb4I;K#\x1dL\xc4\xe7\x1fL\xd3\xf9V \xaa2O9\xe7\x8aZ7\n\x0ey\xcey\xef\xcf\x1f\xa5$#fV\x01w\x1ceq\xc985\xe1\x1eF\xd6\x07q\xe9\xed\xd7\xf5\xe9U\xa5\xd9Y\x9c\x80\xaax?\xb5X\x00\x08\xd3\x9c\x9aM\xdeD1.\xd4 7\xac\x93\x83\x8cv\xfc\xe8\x80\xc7"\xeeR\x0f<{f\x96\xf2\x96U,@9\xe7\xb7\x1f\x06\xbd\x8b*cP\x08\nyS\xc63\xde\xa1\x0c\xbc\xcb\x900\x07\xa0\xe2\x9e\xd8)\xc7=\xeb\xc8"1\x87m\xec\xd9`NOJ\xec":\xb9n\x00\x18?Q\xde\xbdd$m8\x01\x94\xfa\x89#\xf2\xa5\xa2\x18E;3\xc8\x07=\x08\xfe\xf4\xdc\xad\xa8\x05\xd8(\x1c6{\xd7A\xef\xdc\x9aE\xd9\x84h\x88\xc7\x07\x19\xcf\'\x8an ,\xa0\x17\xc1\xcf\x00r3O[(\x87\xd29?\xfd\xa0\x1e\xe2\xbaEB\x8cB\x02:q\xefQ\xc2\x89I$\xe4\x85\xce\x93\x91\x81\xf6\xa5\xeb\xd26\x1d\xf9\xa4\xe3\xde\x81L\x89\x8c`6\x0fC\xf1N" \x83\x95\'\x03\x03\xe0\xfc\xd7\x90mX\xd8\xbc``\xe3\x04d\xe6\x95\xdc\x18\x84\x86@\x0ep@\x19l\x8aq\x19\x81\x0eOo\xca\x06[}\xbe)\xb69\xc8\xc7\xdf\xb54\xb8/\x93\xd7\x81\xc9\xcfojJ\x182W\x0b\x9d\xc0u\xe2\xa4\xbe\xef\xbd\x90\xc8\xa0\x11\x90\xdcrM\x024\x8d\x81L\xe4\x1d\xa7\xbf\xc5!\xc4\xa1\xf5\x92B\x96\xe7\x82\x05s\xcc]8\x1c\xe3\xedR\x96\xd0\xc7\x18P\x14\xee\x03\x9cc\xbdCk\xec\xe0\xdbA\x9c\xab6NGj\x99\xb7\x90\t"\xda\x17\x86\xf5\xef\x1d\xbf\xdb\xd6\xa1|BdMN\xd9\xd8d2\x12\xa3\xa7\xe9Vwd\x7f\xa6;#\x7f:\x86\xd2v\xc1\xf7\xc7\xd2\xa2\xda\xea7\xab\xab\x7fC\x11\x9fqE\xaa\x14\x8b\x11\xb1.\x1b\x93\xd3\xfaT\xde\x95\x04Wz\x9d\xad\xac\xc4\xb4o\xc9_p\xa3$\x0e\xf5\x15n$1\x80\xab\xb0\x93\xce}\xeb\xa8\xe6\x9a\xc2\xfa\xda\xf5\tf\x81\xf7c\xdc\x1e\x08\x1f\x955`a\x8ak)eB\xf1,\x91\xf9\x89\x8fI@}C\x1d\xf6\xfdiW+$\xb1\xdc\xa4l\x16F\x8d\xc2\x1e\xe1\x88\xdb\x7f\xadm\xa2\xd2\xd1\xe1\x11}\xd6/,\x0c\x04\xd86\xe3\xe9Y\xf6\xbd\xa5\x8d:\xed\x96\x10|\xa9\x80\x921\xd4\x8cpW\xf2\xab\xbe\x9d\xa9Z\xde\xc2\x8f\x0c\xa1\x81\xea3\xeaS\xecGcP\x1e0\x93c\xe9M\x9fNd\x07?\x91\xafR\xf1*\xf4\xfb\x9e\x86\xd7i\xa0\x98Lz$Ll\x19\x82\x11\xb7l\x1a\xc0tg\xbb\xb7\xea\x82\xdd\xcb\x80\xfa\xf5#g\x95\x1a\xb3\xbf}\xaa\xa2QT\x16l/Q\xf3\xc7\xd2\xb8x\x83\xa6\xdc\x96P8n\x9b\xbf:X\xc4\xd3\x06$\x10\xa0t\x1d\xf8\xcf?\x14\xd9\x98\x95+\xb8\x95_\xe5\x07$W\x9b\xb8P\x18\x98\xbd,\xa7\x1d\xb5\x1f\x9c\xf6\xad\x9a\x92H\xc3n\x0f\xe9I\xf9!z\xe3\xaf~)}\x17]]\x13S\x91\xe4\x04\xc3(\x0b"\x8eH\x03\xa3\x0f\xa5&\x17p\xf2\xdb<\x0fI9\xa63\xd9oV\x91"\x0f\xb9\xb6\x11\x9c`SQ\\\\\xdaI\x05\xc5\xa0\x0b,M\xaf8$\x8c\x0c\x11\x81O4p\\G,\x17\x03Tr.\x928\xe6\xb7\x0b-WO\xd4c\x0fku\x1c\x99\x19\xc2\x91\x91\xf5\x1dEP|X\xca\xfa\xc4 J0mF\xe01\xd41\xebT\x88t\xb9\xe1\x90\xb4fX\x9d\x06w)\xc3{\xf5\x15-\x15\xa1]\xaf$\x8d$\x92\x92\xac[\xd4\xccs\xd0\xe7\xbdhz\x97\x89z\x8f[\xb1[I\xfar\xc4VUg\x909\x00\xe9\xdb\x00\x1d\xf2I\xaaKN\x87i\xd2\xee\xcc\xf0\xde\x19\x14\xa1UB\xa3;\xfc\xd7[\x89\x1f\x84pz\x9e\xf9\xed\x9aq\x1ae\xf2\x10du\xcd*cW\xc6\xc9\x17\x03\xf1\x02\x07c\xf3NB\xaf\x98\x98\xc6\xec\x13\xc9\xf6\xf6\xaa\xc8\xe0r\xf9f\x04epv\xdf>\xd59\xe5\x18\xd8cc\xf6\xfa\xd4{+\x06!J\x82H\x1d\t\xf98\xf6\xebN\x08\x0eNFC\x80N}\x87Zp\x15\x98DH\xdc[\xa9\x03\xb5\n6bA\xc1\x07\xa1\xe4u\xe3 \xfc\xd3\xcb\x11\xd5\xa4\xfeNx\xed\x8c\xfd84\xd9\x93?_\xfc\xff\x00\x14\x91\x8dUNO\x18\xfc\\\xe3\xd8u\xafCa\xb6\x85\n\x01\xce\x0eN{S\x9f)Y\x1dT\x83\x83\x83\x8e\x8as\xfd\xab\xdf\xbb)C\xe6\x1d\xacz\x90s\xd3\xdb\xe2\xa5\x08%\xd8\xa0\x19\xc09\xed\xb7l\xfdi\xbf1w\xd4O?\xf9\xb51x\x81p\xc7\x1b[\xaf?\xf3J\x0e\xc0\xc46\xf3\xb8\xf4\xf9\x04PJ\xa6\xc0\x83 \x8c\x06<\xe3\xe75\x1e\xd7b\x16$6rq\x8fl\xfb\n\x834\xb0\xdb\x9dn\xc0j>\xa3\xb1\xff\x00\xe6\x9eUy\x06\x00\xce8\xa7\xb1\xab4\x99^\x17\xa6\x7f\xf9\xefNR2Y\x95\x90\x10\xa7<\xf0?Jog#\xcc\xa1\x06\x00-\x9c\x11\xd7\xdb\x15.U\xc2a\x08\xdd\x822G \xe3\xe7\xb5L\xb2D\x9a!*\xea#9;\r\xfe\x00\xa6&r\x8eT\xe3?\xf9\xbd \x89 \x8f/\x1ad.T|\x1fs^E\x0bF\x85\xd8.X\x9e\x9c`|{\xd2\xb1\xb1\x8c\x81\xb9\x89\x00\x83\x91\xcf\xd2\x95\x086\xee\xda\x0eO\xbe\x7f\xa1\xa9\xea\x88\xc5H\xc9eR7\xc6\xdf\xa0\xa8\xe5\xc8\xc8\xdb\x04\xf6\xefH6V-\xa8\x00\xc09\xed\xf9\xfc\xd7\x84\x92\x13\x086\x8fnr~i\xc0\x8d\x95\n\xb6\xf2Xv9\x03\xff\x003H?\x04\xa8\x0c6\x802{\x8f\xcb\xadrL\xa8\xf5\x12\xbb\x01\x8flv\xde\x85`x\xdf~k\x82\xdb\xd0\xb4g*O\xa8\x10z\x0e)4PW\x95;\xb7`1\x18\xc0\xed\x8ar\xb9\xc0m\x98\x1c\x80\xa4\xf4\xa4\x99p\xc5\x94\x1c\xf0\x0eO\x18\xc7O\xa56\xc3!\x1fQ<gc\xdf\xb8\x06\x94\xad\xc8\x1fo\xf9\xa4\xa4\n\xb2:\xa9\xcbq\xb8\xb7\x1c\xfb\xfcW\xab\x95\x1f\x85\xb6\x82T\x12z\xf7\xf6\xa7\x06\xd9ZM\xdb\x860zs\x8f\xa95\xecv\xe2S\x9d\xc3\x19!\xb6\x90\x7f#\xdb4\xb1\x0c\xc2V\xc2\x0c\x92t\x80\x7f\xf3\xef]\xf3\x13H\xc9\xe0\x0c\xd3I\x19\xf6\xb7\x1c\x1ew\x0ex\xf8\xae\xd1QS\xf1\xe0\x11\x92=\xcd*\xd0<}\x19\x98\xe4\x96<\x1d\xa0\xff\x00\xe7J\xe1\x12\'\xc8\x1e\xa2\t\xe0\x8e3\\\n\xeb/\xa8z\x88\xfec\x8f\xd3\x1c\xd7u)]\x8e\xd9\xe4\n\xec (\x1b\xcc\x04\x01\xc0\xed\x8e\x9f\x9d&\x01o0:\xaf$zs\xea#\xe2\x94X\xd1S\x04\xe0n<\x03\xfe>)@I\x03\x0c\xb9\xea@\x1e\xdd\x7fZ\x90\x06\xac\x12\x00!w\x1c\xe7#\x1d\xe9\x19\xc6ps\xbe\xc7\x8f\xe9II\x17\x9a\x10\xb2n \x91\x823\xd7\xb7\x1f\xd0\xd4e\xa4\xd7Z\x06\xa3<\x90\xdb\x99m\\\x03")\xe5O\xb8\xf9\xa9\xb5\xd8z\x0cpz\x1e\x84\xf3\x8c\xd2\x85\x14\x94\xf4g\xd1\x90q\xc7\x1d\xab\x92Z\t\x9a)\xa3\x94\xc5<R\x07I\x97v\x07\x18\xee7\x07\xb8\xa1f\n\xb2G$a\xe3u*\xc8x\xc75a\xb1\xd6\xb4\xab\xd8\x96H\xae\x97\x9e\xa38#\xe0\x83P\xba\xad\xed\xad\xe5\xd4pDC\x95\xfcEH\xc0\xf6\xc9\xf7\xa8\xd94\xcd=\xa4\x0c\xd1\xa6\x00\xe9\xb7\xa7\xd2\x9cGo\ne<\xb8\xd62\xa0\xa2\xa2\xf5?_\xf9\xab\xb9:\x8fR\xb8\x81m\xe7[`\xba\x86\xb7L\xe5\xb1\xbf\x07\xf2\xe4\xfdj\xba\x1b\x0b+y\xcc\xf1<\xe4\xe0\xe9V\xc6\xd9\xf9\x1c\xd2p\xd9Yl\xdf\xe5\x00X\xe3\xcc\x07\x07\x1d9\xc7\xf7\xa7\x05RH\x8e\xdd\x9e\x86\xc0b:\x83\xef\xee~\x94\xa6=o\xb7*\xa7\xf8z\x10>i4))e!\x98\xa62>\r2\xa28\xf0\x81\x11u\x02\xa7\x03\x1a\x8f9\xdb\xf5\xf7\xa9%\xd9\xb2\xc5\x98\xe0\x83\xb9\xce*$Z\xcf\x0c\xc5\x96\xf7m\xbb\xb9f\x8bh8\xcf$\x83\xc6\x05/\x1c\x11\xc8\xd1\xc6\xacO\x98\xea\x01\xfa\x9f\xf0)\xc1H\xc0m\xab\xb1\xca\x9c\x01\x92y\xf6\xcfz\x8f\xf3\x9a\t\xad\xdf\'\x11J\x18\xe4s\x8c\xff\x00j\xae&\x1bbr\x80\xa3\x1c\xb7\xa8\xb63\xce3\xc5K\x05\xe5\r\x83\x86\xc6\xdb\x01\x9cq\x9csV\xc6\xd1\xed7K\x18\xdc\x19\xbf\x8f\xbe@\xc5S/b\xf2ex\x98\x1c\xa9 \xf6<U\xfc\\\xac\xa5eV\x18\xe3q\xf6\xaa\xa6\xa1$\x177\xb2\xba\xb6\xf5l\x0fO8\xed\x9a\xbb\xebv\xd6b\xda7\x83\xcbF2\xe0c\x03*\xc3?z\xa9\xe9\x177~{\xac\xc5\xd9Dy9\xec\xc3j\x81\x01\xa2@q\xc1oony\xa7\x06\xe5\x00\x1c\x9c\x0e\xb8\xe4\xe3\x1e\xf5\xe9\x81\x03\x85P\xd8\x04\x9c1\'4\x84\xb6\xe1\x18\x14\x01s\x80\xd9\xe7\xe2\xb1\xf9\x9e\xdc\x16\x8fI\x0b\x80Fs\xc7qZL\xc7!\xdf9;\xd3\xcb+0b\x0cIc\xd4\x9e\x87\x9f\xfei\xc1\x89\x031e \x81\x91\xef\x83\xc6k\xdbs3\xb2F\x18>[b\x81\xdc\x9f\xafj\xbaA\xa3[\x94\xcc\xa0\xbb\x15\xc6I\xe9\xf4\xad\x1fK\xe9My\x18X#\n#\x03S?\x19\xfd\xea\x9a\xff\x00\xa9%\x9bfg$\xbep\xab\xce?j\xcd.2\xbe\x98\xdfq\xc8\x0c\xd9\xe9\x93Z|\xb6\xe8\x96\xf1"\x8c*p\x00\xe9\x8cUK]\xd2\xe3\x80b6\xc0q\xb4q\x92\x1b\xb7\xe5N\xed<GfmUn\xe6\xf2\xa7\n\x04\x88\xc0\xfe%\xe3#\x8e\x86\x9e\xe9~WG\xbf\xea6\xd7\xf2G\x1f\x99\x1ayn\xcc\x02zI\xc8\xc9\xeer>\xb5\x17\xa8\xf9\x9dJ\xd2\xc6\xe2\xd1^@\xae\xda\x94\x02[|o\x81\xed\x83P\x17\xb6\xdeE\xd4\xa5X\x05\x07p_\x9a\xb0xM\x12(5&<\x96\xb9\xe4\xf5\xe0(\xff\x00\x9a\xad^\xdd\x0b\xab\xc9\x19P\xec)\x84\x04c\xf35\xed\xac\x9a\x9e\x9e\xcf\xf7gI"\x90\x92VL\xfa[\x18\'\x8e\xb5Wew\r\x8fX\x17\x11\xc0\xd2\xc2\x92\xb8:7#X# \x1cm\xbdY^Z\xcdw\xd3<\x83"\xa4\x8e\x88}[~\\\x1c\x1f\x9a\xbf\xdfO\x0cP\xc8\xec\xc0(\x19$\xd6B\xd9\xf3d+\x8c\x8c\xb6\t\xf7\xa9\xc9\xbe\xfd1\x8c\xde\xde\x19\x86\xec\x85P\x15G\xc6\xdaf\xd6\xeb\x12\x00\xb1\x009\xe4\xf7\x1d\xfa\xd3\x9e"\xbfn\xaa\xd0\x15\x85\xa2Hu\x1c65d\xe0\xf6\xc8\xfd\xeb\xbd\x0e\xc0t\xc8\xe6\r(\x91\xe5#:\x7f(\xc6}\xf1Q\x16\x8f,W2r67\xe2C\xd3\xf4\xa9\x0b\x95*\x8cU\xf0\x14ey\xc7\xc74\x8a\xdb1\x95\x8aw\x1c\xd3\xb9\x17\x82\xaeI#\x82\xc3\x83\x9e\xdf\xadfm\x96A\x0c\xa8\xe1\xb1\xac\xe9\'\x8d\xcf\xfe\x1a\xbe\x91\x94\xc8\x85q\xc0\xc8\xa8\x01\x1f\x9aN\x14e\x86@\xcf\x19\x15\xe4hq +\x903\xbb#\x1f\x95?0\x84i\x18\xf0J\xf789\xf6\xaf\x15\x95%x\xff\x00\x89\x97\xa9\x1c\x12j6\x8ch.\xd8\xdc\x8e}\xf8\xda\x9f/\xce7\xda\xa2\n\x04\x93\x19\xc8\xed\xf4\xa5\xc4>r+2c\x07\x06\x9fI\x11*\x8aW\x05[\x18#\x18\xae\xe2\x95m\xd6M\xe5\xb6\xaa\x92\x01\x18\xe7\x14\xdaF\x89!Y\x1bLm\xef\xc0>\xc7>\xd5\xd6rW*2EB\xbc\r\x0b\x16\xe1\x97\'\x90:\xd2V\xb2\xac7PNT\xe29U\x8fl\x80}\xabJ\xbb\xf0\xdc\r\xa4}\xe6\xdd\x98\xc8\xb1\x86\xc6x`FH\xac\xee\xe8\x10\xa8B\xe78-\xcf@j\xd2\xff\x00\xa6\\\xf4\xbf!\xe5P\x16H\xc4\xb1\x90u\x03\xff\x00"\xab\xed:\x85\xbfPY\x84d\x92\x8ecpF\x08\xff\x00\xe6\xb6]A \xb9\xb5Y\x17\r\x1c\xd1\x0c\x11\xd0\xab\n\xcd\xad\xf4(\xee\xec\xee$\xf3\nH\xb2\x11\x1f<\x00\xbcr)\xee\x91\xaf%\xbe\x9f-\x95\xca9e\xf5@G\xa8}8\xf6\xa66\x1a\xa7\xdc]\x96GS\x1b\xb3\x00\xed\xc6\x0bu\x07\xfcV\xa6\xef\xac\xf4\xdb\xf9:t\xd3 \xd2\xc8\xe9:\x90F\x878\x1b\xf1\xf5\x15\x9e\xb5\xe9\xf7\xd6\x11_\xc7\x13\x1c\xac\x8a\xd17\xfb\x94o\xff\x00\xcdW\x1a\xdd\xe1wV\xc8tb\xac\x0f\xf8\xae\xcc^z\xac\xa1C:\x0e\x9d\rKj\xf2\xc1q4\r\x13\t\x13\x19f\x18\xfd*\x15\x0b+\xb8\\n\xcf\x18=\xbd\xaa\xadt[O,*\xe1\xd7>\x82\x0f;dU\xd2H\xd3C\x1c\xa5t\xb1\x1b\x83\xda\xa4\xf4\x94\r\xa8[\x80\xaa\x8d!\x08Y\xfaz\xbb\xfeU\xf4\xfd\xa4M\x05\xad\xbcL\xfb\xcaF\xaa[\xdf\x03\xad|\xb2\xec\xc5\x84\xa9\x19R\x9c\x9cW\xd2\x1e\x19\xd4\x86\xa9\xa2\xd9O\x9fX@\x8e?\xdc\xbcV\xef\xa0\\\t-\xe4\x8f\xba\xb0o\xafj\xc5x\x8e\x02\xb3A66 \xa1\xf8<\xd4\xf8\xae\x85p+\xb1W\xd5\x9b\xafh\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xaf\ra\x9e9\xd5\r\xe6\xba-\x11\xb2\xb6\xe9\xcf\xc15\xb6\\\xca!\x82i\x0f\xf0!?\xa5|\xc3<\xd2]j\xda\x95\xcb\xf2ds\xf9\n\xad\xea\x93\x18\xa0\x8dA\xc7\x99&\x0f\xd0\x0c\x9a\xb7\xe8\xd0\tn\x9d\xcf\x11!#\xff\x00\xc8\xec)\xa5\xa9\x12\xde]\xc88\xd8\xa1A\xae\xe1@\x92\xc8\xe7$\xb6zt\xe6\x84\x88A\x1c\xa3i\xfd\xe3\x92O\xf9\xafd\xde\x8aYH\x03\x03\x8f\x9fz\xc9\xf9\x98\x8cg\xf3\x02\xcc\xd8\xf7\'5\xb3Q\x968;\x10\x00\xfa\neu4a\xa1E@\x8a\x1f\x80\xa3\xaf\xc9\xa7\xf6\xd7w\xebj\xf0\xdb_\xb4J}LGbz\xe0\x1e\xf5X\x96\xe3t\xd1\x97|e\xf0\x05\\\xed,&}9\xee\x15J\xc4\x8b\xbc\xe0`\xf5\xc6*\x04\x12\xbd\xc1\xb91\x16\xd9N\xad$\x83\xa4\x0f\x83\xb0\xa9\x13\x08UbYB\x90XcV\xe39\xdb\x9e\xf5S\x8e\xc1\x91\x9bsorrY\xf9\'>\xe7\xde\xa5\xac\xed\x95\x07\x9b\x8c\x91\xc0\xe3#"\xbae}\xe5\x88\r\x95\xcfZR;\xad\xd1\xa8V\xc8\x07\x07\x1d?*\xcf\xe28\x18\x8c\x10N\xeb\xfa\xf3V%\x99\xc0\xc6>i;\x85\xf3\t!\xf0q\x81\x8eF}\xe9\xa1\x8c\xee\x1c\x1c\x03\xdb\xa7\x14\xeaK\x92\x99l\x06\x03\xa8\xc7?\x15\xdc\x08$`H8_Q\x1d\x8dW>\x89\xa5(\xad\x82NN\xdf4\xfa\xb1U\xc9\x1b\x01\\\xa6\xe5`FKm$\xd7\xa1\x99\x9b\x87\xc1\x03\x82y\xfc\xa9]\xca]\xc2p@\xc8\xda8\x1e\xc2\x9a\xc2\x04N\xea\xe3s\xb3\x02\xc0\xf1\x82;\xd49\\\x02\x00\xdd2w\xce\xdf\xe74\xea\x9c\x82{\xe2\xa7\xf4\xcd\x12\xf3RlC\x1a8\x0b\xb9\x898\x03w\x03\x07\xe6\xa5O\x84uh\x80\xc4\x11\x9c~ \x1c\x12q\xd3\x19\xa6\xda\x07\x88\xd7F\xb8c0\xfd\xcc\x80\x07\xc0\'i\xe4\x06\x1e\xf5\xa7[x\x83G\xb8\x8c:_\xdb2\xfb\xf9\x83\x8f\xaezV\xbf\xa0\xf4\xbf\x0e\xf5\x0b@g\xbdx\xaerK\xa3:\xa9\x00\x9d\x88\xc8\xe3\x15\x97\xeb\x1dS\xac\xd8\xdc\xe2+Tx\x08\x1a[I9\xf7\x07\x07\x9a\xc7\xefl\xae,\xf7G,R,\xe3\xd5\xb5\x86\x01\x1d\xb1M\x04\x0c\xcf\x14\x8c\xec\x14\x0c\x05\xec>qW\xcf\x18\xeb\xfa5\xe46\xd6\xd6\x8f\x14\xf7\x0b0,\xe9\xea\x11\xafq\xbb\xa7>\xd5Y\x10H\xf8\x91[\x05W=8\x07\xdf\xf3\xac\xcfW\xb0\xb6\xb7\xeaw\x16\xf6\x97"\xe9#\x08C&\xe3}\xf0H;\x91\xde\xae\xfau\xf4\xf7\x16P\xcd<\x06\x07r\xc0\xab\x7fQ\xf0i\xbe\x04i\xeb`\xc0\xf3\x8e\x99?\x9f\xf5\xa4\xa3\xc2\x92\xb2\x1c+d\xe1GA\xdc\xd3\xb7\xb5\xdeA;\xb8\xf6#\xf5\xa4cA\xe6\xb3\x148Q\xe9os\xdcb\xa22J\x1d=!p1\xb9\xed\xdf=\xcdK\x0e\xa5[|\xe6\x93B\xd2K\xe5\xaf\xf0\x8c\x1f\xe2\xcf\xcdz\x96\xcb\x1b\xb4\x91\xb0F\'\r\xdcg\xa7\x14\xf2\x1fW\xf0\x14\xe0\x12\x17\xa7\xeb]\xc8UyT\x07<d\xf0@\x1d\xb8\xef\\\x11)B\xef ;\x92\x1c\x0cc\xe9\x8d\xe9&V\x0cT\x0cdn?\xcd6y@\\n%\xb3\x8f\x8f\xd6\x88\xd5\x899F\x07\xf1\x100:\xf3\xda\x91F\xd8\xa4\xba\x8f\x81\xedN`\xe5\xf7\r\xa0{\xe6\xa2\xac\xfed\x88Ks\xc2\xf7\x03\xdc\xd7XhV\xc0\xfb\xd3\xf8# \x06tPO8\xeaqP^#\x9e3\xf7,\x8c\xb7\x9b\x9fWP;\xd5\x80\x1f6>Q\xb3\x91\x86S\x8fO\xc5S\xfcE\xb4\x1beEm\xef6\xd4P\x0eN\x06\x7fZ\xb3\x9d\xb1g$q\xe0\x89\x15w\xeeN}\xa9\xab0\x1a\xe5Y\xb6#?\xd2\xa5\xac\xdb\xcf\x18O\xe1\x0b\x9e\x0f9\xf6\xf9\xa9v\xb1Vd\x0e\xca~\xbd\x0f\xc5E\xda\xe9\xda\xc6\x95\xf7Y\xee\xadv[\xcf\xb47BF\xee\x99\x1d\xaa\xcac\x0c\xa5\xcbd\x8cs\x8eG\xfc\xd3\x96V\xf2"\xb2\\[:J\x85II\x01\\/ \xe0\xf6"\x99\xb8\x9du\x86\x8aUdl\x80\xc8Co\xc1\x19\x15\x08\xd6\xf7\x16w1\xcbk!\x89\xd4pW\xdb\xdb\xe4}jD\xc9{}!\x96\xeas+\xc7\xc0\x18\n\xa0\x1e\xb8\x1e\xf5\xc3m\x0e\xca\xa7,N\x17\xb3`\x1e\xff\x00\xda\x9d\xc7\xb9Q\\)\xdf\xce\xee\xe3\xebK\x89"/2\x89$\t\xac\xbbF\x1c\x94\xc8\xd8\x1c\r\x89\x1c\xd3R\xc8HF(\xa5\xc0\xd2\x1c\x81\xab\x07\xe7\x9cR;\xc8\x86T8\xf5\x0cc\xb7\xe7Lf\x99"\x8b-\x90\x14\xf5\x1c\xe7\xe9O\xe4\xc3"\x93\x13c\x9d\xdc`\x9fo\xca\x98\xbcm\xe9\x0e\xf8\xc0\xe9\xf1L\xdc\xb4\xa1Qc\xf5a\x02\x86\xc6\xd8;\xef\x9c{\xd7a\xd3\x9c\x91\xdf$W\xb1\x9c\xaeL\xa0\xe5y\xe3\x91\x9eE/\x14G\x1c\x1c\x1c\xe4\x83\x81\xc9\xfe\xf4\x9d\xa0\xc0 )\xc8\x1d\xc6s\x8a]@q\xb5\xbd#\xf9\x8f\x07\xf2\xcfj \x01\xe3\x89\xce\xecA\xc6\xe4~\xf4H\xc43\x01\xc6iIP\xf0H\xeb\xc9\xc8\xc7JF5\xc6\n\x85,\x0es\x9c\xfe\xb4\xee,:\x8d\xd9\xe9\xd7\xe4\x9e\xbfJ\xf5#}\xa5\x08\xce\xd6\xc1>\xc7\xda\xa6<:\xde7S\x90\xc3l\x0c\xee1Lk\xd2\n\x9e\xdc\xd7\x88\x04\xa4erH\x05F:\x91]\x92\x12F.\x99l\xed\xe0\x1e\xfcW*\x8c\xa7rL2\t\nG\xeb\xc0\xaf\x0c\xac\x98V$\x929\xeb\xc8\xcf\xf6\xa7u\x05@\\\xe9l\xe7V\xc4\x1f\xf9\xa6\xf1\x93\xe9\xdc{w\xa7!\x8c{\xb6\xe5[\xa9Q\xf3\xda\x80\x0b\xa1W\nN8$\xf4\xef\x83\xf4\xa2\x06\x8e@\xdbH\x00u\xdd\x9e\x0f||S\x90\x9b]\xb8\xc6A\x1b\x863R\xe3O1U\x96L\xc6A\x18\x1b\x8d\xe9\x86m$\x82=_<\xd71\xa4d0\xe3\x8e;~\xa0{sI\xcd\x12\x8c;\xf0N\x179\xc6p}\xa9\xca\xeeG!p\x07C\xc79>\xdd+\xc9\xedd\x91\xe0M\x9f\xbd\x90\xed\xc3\x02\x13? \xfbu\xa9M\x17\x99\x1e\xd1j+\xb61\x8c\x9c\xe0c\xe6\x9b\x12\x00\xe3/\x80FsQ\xdb\x1a\xf0y6\x99f9\xda\xaa9\\\x1cu\xec*DxB\xeaU/%\xcaF\xc7\xb6\x0b\x0f\xa1\xab\xa6\x9fe\x06\x9dn\xb1\xae\t\xc7\xad\xfb\xb1\xf75\xed\xe6\xa5kg\x11\x92i\x15W\xb6OS\xec\x07z\xd0G\xe1^\x9c\xb6\xc6~\xb1(-\xa0\x17P\xc5#M\xbd\xf3\xda\xa9d\xeb\xb7o7\x95a\x1f\xa7V\x03\x11\xa9\x9a\xb2\xfbh^\xca\xfe[IG\xae\'\xc6q\x9f\x9c\xfd\rY\x19\xd3b\xb1\\\x8c\xe3\x1e\xff\x00\x14\xceb\xf7\xf7\xb3^\x95 :\x85Q\xc6B\xa8\xeai\xda\xae\xe4\xda\xd20\xc66\x81\xdf\xe4Vg\xa6[\xfe\x19n\xa1\x8bx|\xd7\xf2\x19\x86\t\x8c\x1fNs\xf1WW\x12\x19|\x97p\x03\xe8_0\x03\xc3czFEM\xfb\xc9`\xdc\x021\x95\\\x0c\xfc\x0f\xce\xbb\x81T\xb3\x0f=\x88\xf5z\xb8\xe0\xe2\x9b\xc2.Hd\x9d\xc8q\x8d\xc3\x82?\xadH\xa9\x11\xa7Py\xe9\x9c\x13\xf4\xff\x005.\x02&q.\x86\x8cnH`A\xe7p@<\xd3R\x12\xa3NCv\x18\xdcW\xb1D\x80\xe1\xc8`\xcb\x86\xcf\xf7\x06\xbbt\x05r\x08#\x19\x0cNs\xcf\xb7\xc8\xa4?\xd5rXm9\xc1?\xf1N\xa3|\xfazo\x1cn\xf7\x1d\xb3\xf3S\xa1h\xdf)\xa7\nr\x03\x1eO\xebQ\xdfP\xc1\xce\xfd\xc5G\x8f/+\xb4\x8d\xacs\xe9\x04g\xe6\xbd\x11\x07?\xe9g\x9d\xc0\x11\xdf9\xe6\x9c\xec(\x1fw\x188\xc0\xe9\xefG\x94T\x10\x01\r\xbb \xe7,;\xe4\x1e\xf4\xcaDv\xd4\xa0\x01\xca\x81\x8c|o\x9as\xcc\xf6\'\xe0\xe6\xbd\x91U\xdb\xa9\x19\xc1\x00p8\xf7\xcd \xf1,e\x8a\xfaCz\x89Q\xc1>\xd8\xf9\xae\\H\x81\x9aIK\x8e\xbc\x0ey\xed^\x06\xcblh\xb8\x1d9\xc1=\x81\xc8\xa5<\xa8\xccu\xa6\x87\'b{~\x99\xc0\xa1U\x80\x18l\x8f\x8f\xf9\xaf\x0b\xe0n\xf3\t\x0c\xa7\x8c\r\xa7?=i\xab\x9c\xe78\xc0\xe3\xb7\x19\xa7\xa3j)\x1e\x96uB\x00#;y\xc6~i\xbc\x85A\x0b\xb8\xf2\xa4\xf4\xee>\x95\x1el\x98\xf2\\\x01\xdcg\xdf\xb6\xe7\xde\x9dB3\xb2\xfd\xe8\x0c\x81W\xd0\x03\x1c`\x0e\x08\x1d\xc0\xa3p-\x93#\xff\x00o\xd7\xdcW\x1eP\x81c"=\xcc\xf8\xc1&\xbbX\xdd\xb9\xc3g\xa7L\x8f\xcb\xda\x93\xaeR\xca\xa5p\xc3\x19P\x0f\x1f]\xb7\xa5\x9d;\x90v\xf75\xc8v9\xc8!\x1c``t\xfc\xab\xb2\n7\xb7\xa7\x19<\x86\xe2\x93\x91\xc3p\x8d\x90I\xe3\xd8\xaf\x07\xeb\xf5\xa5\x93\'\x87$\x92} s\x8f\xca\x9c\x8d\x839@\xc5\xb1\x8c7o\xfc\xf6\xae\x1d\x808\xc7;W1\xbf\x967\xe3v:\xa8=q\xeci\xdcr.\xd3\xb7;q\x9d\xa7\xb7\xc1\xa6O!\x88\x12\xe9\x96$\x85X\xf9\xc8\x1d3\xf3^4\xad\xb9\x08gP\x00>\x9e\xfe\xe0\xd3\xb1\xce!$j\xe0gN0w\xef\xbd%\xa3\xd7\xbe9\xef\x9d\xb6\xa7\xcd\x19\x91N$\xc7\xab8\xcf@;\x13I\xb0X\xe3#\x0b\x82rp\t\xf8\xcek\xa4\x90\xb9\xcey\x1d0:\xfdi\x9c\xf3I\xe6/\xef:g$\x0c\x7fCOM4Q\xa7\x98\x14\x92} \xed\xdf\xef\xfbSh\xae\xcd\xa7<oK\x10p\xa9\xbb\x1b\xf9T\x03$\x81\xd6\x92\xb9\xb4\x88bY\x17\xd2G\xab\xb9?\x974\xfa\xde1(\r\xb5\x1b#\xf1\x11\x9e\xb5 \xb1\xc2\x8a\xcd\x90[9$\x0c\xe2\xa4Eg\xf8\x98\xcb0]$\r%\xb7\x03\x1f\x07\x9f\xb54\xf7^K\x80\t\xcfp*\x9b\xf7;\xf8\xe6x\xd2P-\xa4\x19$\xe42\xe7\x8c|\xd3\xf5\x8b\xee\xf1,d\xa30`\xa0\x0e\x0e\xde\xd9\xcf\xf7\xa9\xa7\x8e0\xcf\xb9\x99\x8bc\x81\xce\x07\xbf\x1d\xf9\xa63\xc3\x1c\xf0\xecG\xc3\x15 1\x1c\x93\xd3&\x99n\x9d\x15\xa8\x95\xa19\x90\x86\xc2\xb3\xee>\x00;\n|^4\xdaC\x8c.FH]\x8f\xc9\xa5\xectg\xbae\x96\xe1\xb6\xa6r\x14g<\xf4\xcdKI\xa3\xd863\x16H\x1c\x1c\x9c\xd4\\:\xb9\x85\x92+\x95)\x95\x18q\xf8\x0f\xe7\xd8\xfc\x1a\x98\xfb\xece7\x16\x18\xc7Z\xd3\xf4\xabn\x88\xd6\xcc\xaa\x89+\x8d\xe5\xf3@.\x1b\xe4\x1e+9\xd4.:\xb2\xce\tw\x8dN\xc9\xe5\x9c.>\x08\xe6\xa3\xf4\xfd\x1a;=I\xe6\x07ryd\xaez\xee<\x7fAVf\x99cRX\xf4\x15I\xbf\xd6n-n\x15\x965\xf2Dy\xdcI\x04\xb18\x18\xc6\x7f\xadF\xcf\xa9\xeb7N\x11a\x8a\x14n\x8eX\xb1\xc63\x91\xd0S1\xf5n\x97\xd2\xbf\x11mmo)a)`\x88\x84\x82[\xbe{\nvN\x9b\xd4z\x89\x82i\xe5@<\xb0\x0b3\x01\x80>=\xea[V\xb9\x13\xc8\x14\x11\xc1\xc99\xc6\xdc\xd4k$awK\x96-\xc2\x9fn=\xfb\xd3bF\xec\xc97+\xd0\x0e\xe7\xde\xb8i\x96e\xc8\x18\xc6\x06\x18\x7fQ\xf3Y\x9b\xdb\xf1<\xf2K&\x92\xec}(H\xed\xb6\x08\xad\x1d\xad\xb0\xb7\x86(\x90\x9d*7a\xf3I\xcb\x08%\x0fD$\xf5\x00\x03\xfaS\xd9\x11\x9e2\xb8+\x83\x9cu4\xd9\x15\xd5v2\x8c\xe4\xe1@\xeb\xf1\xdcqRI\x1c\x803\x17\'\xd3\x85\'\x07<|THc\x0e_\x08\xe0\xb8\x01\x87\xb6\xdcg\xb5H\x92Lh\xf5\x03\xa4\x9c|\xd4s\xa2\x86\xf5\x0e\x83\x04\x81\x9ei\xbf\xdem}6\xee\x01,\t]\xdd\x8f\xb84\xf9\x19J(\xfcY\x19t<\x9e=\xb1I\x8bH<\xdd\xd23\x1fd\x1dq\xf3\xedL2L\xdaL\x06,\xb1\x01\xb5\xe3\x188\xce~\xd4\xe2\xba\x00u\xea\xdb\x8cs\x91Q\xe9m:\xce\xac\x15\x86\xe5 e\xba\x0f\x7f\x9a\xeac wVoP9\x00s\xf1\xc7\xbe*BA\x04l\x0f\x96\x06\t\x01\xa4<\x8f\x9cTu\xda6\xc9\x8a\xca\xd1d\xe3r\x83\xd7\xe3\xf2\xa6eT\xb7I\x0298b\xcc\x03\r\xb6\xf9\x0bOG!\x95\x94\x91\x8d\xb0\x0e>~\xf4\x92\xc2\xae\x8f!\x8c\xee-\xb9\x81\xc8\x18\xc7\\\xf6>\xf4\xce\xe0F\x84K+0\x1f\xc5\x85\xc9\xc1\xe0\x10\x05Kg\xf7\t\xb1\x94\xbf<\xb7p?\xcf\xbd5\x98FY\x15\x80\xf4\xfc\xd3s*\x98\xd7t9\n\xc7\xd8\x93\xbe\xf8\xefOF\xe7Q\xcey#\xe7\x03\xebQ\xb3oI]\x06q\xb7*z\x92)4B\xc2o0n\xc2\x1f\x8c\xf1\xdc\x9f\xf1OgP\xbc*\x0c\x85\xc7\r\x82y\xa6))\x13\x94\xc1\xcb\x03\x91\xd4~UE9H\xee\x00v%L\x83\x0b\xc8\x19\xe0|\xefR\xd5\x89L\x8d\x8e7\xad7G}\xfa-\x92\xee\xc80\'\xf6\xaa\r\xde\x93,\xfa\xbc\xf6\xb0D\x1c\x93\xb9\x14`aO\xb9\xf6\xa9m\x17W\xb7\xb2F\xb3\xb8\x94&\xc2v3\x1c\x02\x87\x91\xd7\xdb\xa5-a\xaaE.\xbf4\x90\xb0h\xfe\xee\xa1_\xb3\x10\xdc\xe3\xe3\x9a\xf4\xc9&\xe9\xbd[\xa4\xf4\x18\xa4\x9d\x15\xd6x\xa3e\x04\x16_I\x0c?j\xc3\xc4\xb7\xbd3\xa8\xf5\x89\x12"T\xc4\xee\t\x07I:\x81\x07\xf7\xaat\xf6s\xe9s\xaa\xcf\x1a\xefL\xe7\x9c\x86\x07\xb0?\x14\xc9\xb6\x16\x8dI\xdc\x1c\x1c\xabs\x8c\xd5\xbb\xc5q\xa9\xb7[\x82yIGn\xa1\xb8\xc5V \x8f\xce\x9dv\xe00F\xca\x9f\xe9\xcdf\xba\xcd\x98\xe9\xbdE\xed!`\xc9\x85\x91\x03~b\xacq\x9d\xb9\xe3\x15\x7f\xd3/\x8d\xfd\x92N\xe3\x0f\x92\xaf\x8e2\xbf\xfc\xd3`\xab\x02\xc9\x1a\x81\xb7<\x0e\x9c\x9aU\xb4k\xf4\xb77\xb1\xb2\x15\x03!\x01\xc3\xe3\xdc\n\xe2B\x03\xed\x9b\x81\xbdrG\xd7\x07\xebW\xb6\x96%\x89\x15YJ\xec\x18?\x14\xff\x00F\x82\xdb\xa9]\\G,\x8c\x86(\xc6\x8c\x1c\x10\xcd\x9d\xf1\xf1\x8ak\xa9\xdeMe\x14-\x1a\x06\xd6\xfe\xac\x8c\x82\x07o\xbdS\xb4\xe5\x97R\x93law\x15;\xb9\xc7\xebZ\x7f\xd9\xe5\xc4\x96\xf2\xdf\xe9\x92\xb6Y@\x90\x7fcY\xd7\x87\x00Mf\xedG\xe1\x05\xb6\xfc\x8c\xd5\xd7E\x94\xda\xf8\x9a\xcd\xb7`L\n\xe3\xdf<V\xc7\xc3q\xb3[<\xcc\xc4\xb8\x9d\xa3ob=\xff\x00Z\xcd\xf5\xe9\xb3+A\xa4\x04\xf2VE\xf7\x04\x7f\xc5l\x82\xbd\xaf+\xda\xd3Vb\xba\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xab\xbe(\xb86\xda-\xeb\x83\x82Wh\xfc\xeb\xe7X\x14\xac\x92\x92x\'&\xb7\xdf\x1a\xe7\xf6\x1c\xf8\xfea\x9a\xf9\xf9I\x17,\xa4p\xce+?\xd7d\xd0\xf6j{\xea#\xeb\xff\x00\x82\xb4}\x01r\x97g\xbeT}\x80\xff\x00\x9au+\x96v \x10\x00\x02\x9bL\x1cFI$\x0ct\xa9\x00#gn\x0e\xdc\x9e>\x95\xdb\xda<\xb1\xc8Y\xb6\xaa\xaf\x03\xb9\xcfAY\x89\x91\xa5\xd4\x14j\'<\x7fz\xd1\xa4\xaa\x9as\xb0\x18\xe6\xab\xfe\x11\xd1\xadu_\x10\xea\x13_/\x9d\x05\xa4bA\x1fb\xc4\x80\xabZ\xa6\xa4\xd1Zhw\xa9\x1a\xa8\x12\\2\xa8\x1d\x147?\xa5d\x1e\x19\xd5g\xb0\xd4\xef\x028T\x9e@\xb2\x923\xf8\x0e@\xf8\xfa\xd5\x9eMB{\xfdB{tGh\xa4\x8c\xb9#\x95\x0c\x9d9\xa6:gV\xb2\xb3\xf0\xfb,q\xe6\xeaW\x9678\xf5e\xb3\x8d\xfb\x801Pn\xed\xeeg\xea\xd1\xb3\xc8\x7f\x0e\x8a\x8e\xa3;zy\xfb\xe6\xa2\x04\x8c\t\xdd\x91\xce3\xefH\xc5\x1a\xe1\x82\x8criic$gn\x181\x04}:S@|\xb2U\x98\xf5\xecO\xd6\xb1\xcd8}%\x88+\xa7\x9c\xfb\xd6\xa1\x1bm\xa9p\x08c\xb3\xf1S\xc2\xa5aoP\x0cN\t\x07\x04Tp\x95X\x81\x8fW\xd38\xed^\xb4\x8e\xb9R\xcc\xc7h\xc9\xeb\x8c\x1a\x88\xb71\xa2\xbe7\xc8 `\xed\xb8\xfe\xb4\xf9$\xe2\x9f4\xa5`\x19s\xbc\x13\xf9\x0fs\xf4\xa4\xad\xa5\x17\x11\xac\x9eb\x91\xd0\x826\x93H\xc7$3\x07F\x8d\xb6\x10r?\xe7\xebN U\xf2_+\xe8\x04\x01\x9e\xd8\x14\xc0\x94\xb0bX6\x10\xed\x93\xdb\xb9\xa5k\x00|\xe7\xfa\xd39\xb14\x80\x8c\x95\x1d;\x93\x8f\x8a\xe8Y\xc3:\xf1\x12\xa9\x18\x03<\xe7\xdf#\xde\x9eI\x02\x85\x05O5\xd5\xac\x8c\x8e\xa0\r\xb9l\xf1\xd3\x1f5\x1c>\x8f\xfd\xd0?\x88}X\x19?\x18\xfaS\x9a\xb2=$\xed\xc59\xb0\xd3\xe2\x88\xf0A\xe3\x00\x1cq\xcfJ\x9d\xb6\xb6\x92\xeeo*$\xcb\x13\xb9\x8fl{\x93\xd8Td1\x82\xd26\xec\x928\x03\xa0\xc7\xcd^\xfc7\x1cb\xceI\x10\xaeZL>\x0f#\x03\x80\x7fZ\xd0t^\x9e\xbdB\xee8\x99|\xb4\xdd\x9c\x83\x92B\xfb{\x13\xfd*\xb3\xa9^\x9bKw\x94\x1dM\xb2\xa8<d\xd3\x8b/\x0c\xda\x8f]\xcc\x8d!\xea@\x1bG\xd3\x8ej\xa9\xadZ\xc3o\xaaM\x05\xa3\x92\xa8\xaa\xdbI\xfc$\xf3\x8a\xd0\xee/b\xb4\xb7\x92gm\xa9\x1a\xe4\x9f\x7fa\xf55\x96\xae\xf9\xe6\x92GoT\x8c]\x89\xea\t$\xe3\xe9V\xde)\x83\xa6Z\xc3aein\x8b#I\xe6;\xab\x7f\x13H\x18\xe4\xfb\x93\xdf\xda\xaa\xfa\x1c\xd7\xb72\xdc\xdcO;\x14U\xd2\xaaG\xa7\'~>)rAQ(\xdc\xc7\x1f\x1f\xa56\x12\xe3\x01"$\x03\xed\x93\x93\xf3N\x04\xc8d\x03\xaeA\xed\xc7\xd3\xf3\xaf\x0cl\x8e\xc5\x03z\xb9\x00.q\xfaw\xac\xb4\x85\x9c+\xa3\x8c\x06\xc30\x00\x90~\xe7\xb9\xab\xf5!r\x18v\xdb4\x98\x861o\x92\t\r\xdd\x8fS\xedJ\xdb\x84Y\x02\x15\x03\x1c\xf2;u\xe2\xbb(\xdbWj2\xb6\xe0\x1f\'88\xe6\x9b\x85\x90\x15bv\xa8ln\x03\x83\x8f\x9fj\x8d/\xf0\xda6H\x8f\xa7\x19\xc2\xec@\xf98\xa3:\xd5\x81ns\x8d\xea\xcf\x04\x11\xa4\x0e\xfep$\xa9![\xe7\xb6im\'IB\xc6\xeeh\xc0bO\x94\x08\xe5\x14\xf5\xe7\xe6\x9b\xd9\xceZ\x19\x10\x08\xc9)\xe8b\x0e~\x06E(<Ak\x04g\xef3\xac.\xab\x92\xad\x9e\xde\xde\xf5\xb8\xe8\xf2\xf4\x94\x96\xd2{\x97TH\xe2&5?\x97X8$\x93\xdcv\x15\x9d\xbd\x17\xc69\xd2\x00\xc5\x9d\x80b9\xd3\xf0\x05/\xe2k\x9f.\xc9`\xde\x0bN\xea\x8a\x0f\xb95\x15mp\xf0lfb6\x81\x81\xf2\x0e2A\xa8\x1b\x9b\xb9\xb5\xab\xf8\xae6\xb7\xdda\'\xcb\x07\xf8\xc9\xe0\x9f\xca\xa7\x14\xb3)`\xa3 \x8eO\xeb\xcdW_\xf5C\x7f\xd5nn\xe1fUTT\x84\x9c\xfa\x95rs\x8f\xa9\xda\xa5\xdaZ~\x12\xc6\x18\\\x02\xc4\x96q\xecOj$b$fub\x19\x8f p3\xcej\xca\x9arK\x04`\x06\x0e\x14\x12\xde\xf9\x1c\x8c\x9a\xae\x96\x00\x1f3s\x03\x81\xe9\xfcX\xab\xae\x8b$\x97q\xce^\x15X7\x05\x8b\x9fS\x05\x1c\x96\xa9\xfd\x12\x18o.d\x85\x81f\x95r\x01\x19#\x92rG\x03\x8d\xea/R\x99\xe0\x81d\x07HC\xb9\xcf=\xb6\xaa\xdd\xdc\x08\xc0B\\\xee\xc2\x9cw\x00q\xcd0:z\xaa\xbbg\x07>\xa2{\x8fz\xb9\xeb60\xc1nn\x94\x90\xa8G\x98\xbd}&\xa1\xc3(\xc8Q\xc1\x19\xc0\xff\x00\x14\xefQ\xe9\x8b\r\xe4\x91N\x8b\xac *F\xf9V\xce\x08\xfb\xe6\x91i~e\x81^&:I \xe7\xdcr*\x1e\xda\xd5\x17\x04\x90\xa5\xba2\xe4\xe3\x8f\xf3^\\\xda\xa4\x1eZy\xa0\xa3\x02U\x8f\' \xff\x00\xcdY-\x92\xd4&\xe9\x11IP\x0f\x07\x9aV\xe2\xc9o\x84~B\x85\x11\xee\x1c\xf22@4\xdf\xfa8\x96\xcd\x92!\x139\x00\xaa\x0c\xe4\xe4\x8dY\xe3\x9cR\x8d\xfe\x99\xbdz\x82\xef\x92q\x8e6\xaa\x9a[\x93\x9c\xb8m\xa7\x1b\xba\x1a\\oBc\xdc\xa4\x9erp\x01\x03\x9e\xbd\xe9{\xab9\xadd\x88:\x03\xea$c\x9c\x8aL\x97;\x0b \xdcq\xc0\xe8q\xc8\xcf\xc5W\xacf\xdd\x9d\x1a\'\x89\xd0\xe1\xb9\xdc\x11\xc7\xefR\xbc\xc1 V\x0c\x19H\xdb\x8ao)C\xb4\xbe\x06\x0f\xe2^y\xfa\x0e\xb5\xd1\x8c\x9c\x93\x83\x91\xc7_\xf3J\xb4g\x1c\r\xb9\x19\xce\xdf\xce\x9b\xa1W\'s8$\xe3\x00py\xee;SD.\xbfX\x04\xb7\x1b\x81\xb8\x18\xde\x96\x0eWc\xb0\xa7PD\xb2*\xb0!H\xe0\xb7\x1c\x8cf\x9d\xcd\x1c\xb2\x04\xda\xa3\x81\xb8\x81\xd3\xeb\x8am\xb7c\xe3\x04\x8eq\x9e\xa4\x83\xcd=\x8aq\xea\x0e\xea3\xc1V\xe8EO\xb6\x10\xe3\xca|\xa1b\x03\x10}\xb7\xa8\xd2\x16\xc8a\xbe8\x14\xa7\x87$\x13_\\\xb3\x10L(\xa1G\x07\x05\xb3\xce\x7f*\xb7j\x06W\xb4\x90\xa9\x05\xd0\x16L\xfb\x81U\x1d1`\xb5\xd4e\xf2\x9b1\xdc\xa2\x94=0\xcaz~y\xe2\xad7\xb3\x18\xac\xae_\x1c\x88\xdb\x1fR8\xad\xb7\x87\x8a\xc7\xd0\xae\xa3\x9d\xc6\xa8\xda\x7f5\x94\xe7l\x92\x0eG\xfd\xb8\xc5f\xba\xb0f\xea\x90:\x03\x86\x11\xe8\x07\xf4#\xf5\xac\xc6\x1f\x11\xf8\x8fTv[e\x82%\x1czWq\xfdZ\xa4a\xd1nf\x9a;\x8dJ\xe6Y\x98s\x82q\xb4\xff\x00\xc7\xd2\x9di\xd6\xe9\xa6\xda\xaa1\xcc\xad\xb9\xa4\xda\xa7\x1fJ\x91YY\x87\x12\x0e\xfe\x9e2+\x17kd\xf71\xc0\xddZ\xea\xe6\xeel+\xf9-&cBw\x19\\\xe3#\xbdif\xb8\x8e\'qeo\x0c\x11\xee\xba\xd5p\xcc>\xbc\xd17\x1cmU\x18\xf6\xce\x7fJEeuu\x8cm\xf5\x02Kg\xb8\xfav\xae\x1a\xe903\x18\x03q\xf5n\xe8?:\xe5Z6\x8f*\x14\x8c`s\xc1\x15=\xee\x15\xa5\xd5\x1c\xa3W\'\x9e;\x8d\xc7\xf4\xa8\xca\x84/\xa9\x0e?\xbdt\xc7w\xac\xa0\xcep\t\xeeG\x7f\x9a\x8f\xb9\x9d\xc4\x89\xbd\x95\x93o\x18\x1d\xaab\x08\x94\x906\x90\xc0w\xef^Of\xfei\xfd\xd0n\x07|\x0f\xad3qkq<\x00\xa3\x11\x96R\xd8Rr~@\xe6\xbb\x1c\xd1\xa4\x98ll\x0e3\xb7\xe9L\xadL\xad\x18\t\xe8 p\x0f\x7f\xd6\xa4\xa3\x12\xb4M\x18\xdd\xbd\x0f<\xf4\x07\xfei\x84\x8e\xd1\x10\xa1\xb1\xd8{U\x82\xc6\xc5\xe7\x8bt\xf32o\x1c\x01\xd4\x8cu53\xa5@\xf7\x0f\xf8x\xbc\xc9\x1d\x13\x0cA\x00\x01\xfd\x8dG\xbc\x9e8S\xcdr\xaa\xac\xdbm\x93\x9f\xefQ2\xb3\x91\x87@\x8e\x06==\x0f=i6\x95\xc8Q\xb8r\xa3\xeb\x8a[U\x8eM:D\x06o1\x1c\x10\x18\x8ex\xedQ\xab!\x95\xc2\xf3\x87\xc9\n~\x98\xa8w\x97\x0fmu-\xab3\xac\xc8UY\x0e3\xbf\x07m\xb7\xcd=\x00Y\xa1IT\x82\x84\x12\x18\x7f\xcd;v$.A=\x89=\xbe9\xaf\x15b\xd9\x86-\x8f\x90s\x8f\xa8\xf6\xafc\x97h\xc9V\x07#\x19\xe7\xa5vg#~\xdcu\x07+\xf3\xf5\xe9KI"r\x1d\xa4\r\x91\xf9J\x93\xdb\xdb#\xda\xbaC\r\x80\xc6\xfc\x83\\L\x81I\xcc\x84\xee !\x03\x91IG\x17\x96\xaepK1\xf4\xef9\xef\xd3\x8ehx\xd9\x8e\xf4rq\xc7\xac\xf0\xd8\xff\x00\x8a\xf5$\xc9$\x03\xbc\xe7\'\xfe)\xb2\xf1\x99\xb54x\xdc\xe89\xcf<\x9e\xf9>\xd4\xa1\x90\x98\r\x9f~\xd5\xe4\x86G \xed/\xb8\x9e\x08\xc7\x04q\xc7jN?K\x0e28\xde\x17\xa0\xfa\x83I\xfd\xe0\t\x94y\xca\t\xce0rs\xf3]\xc9.\xe6\x0e\xd2\x11\xdb\x1e\xe7\xbfJJ\xdcE!i\x03\x92\xca\xfb\xee\x0e\x06\x07\';}\xe9x*\x02\x90\x00"\x96\x99\x90\xa6\xd3\t*:a\x86\x0f\xf9\xa8\xf6\xb9X\xd1\x89\xca\x05\xc6\xdf\x81\xf9\xd2\xfb\xa4\x7f3a\x0c\x08\xe0\x1e*1\xadn8-\x19\x00\xe3\x8e\xbc\xd7.\xa6\xba8x!g\xc8+\xabH\xc0\xec7\x1d\x85*&\x85r\x1d\xc0\xdf8\xcf\xf9\xa4N\xa2\x92?\xfa\x8aH\xe9\x9cs\xff\x00zr\xb2\x16\xc6I,\xfd~\xbf5\xd7\xdc\xa0\x99U\xd6\x05FF\xc6\xdcr)\xc4v\x8e\xd8U\xc6G\'5\x15:\x7fX\xd7\x99\x8a\xc8\x1b\x1a\n\xe4g\xecO=\xa9\xd6\xbc\xb3\xc7\xa7\xd3\x8eA\xedK&\xec\x00\xa1\x98\x92\x07\\S\x91h\x93\x8d\xcc\xa7 \xe4g=Gzs\x14\x0b\x12\x80\x07N\xbfO\xf1O\xe1l\x9cm\xf4\xae\x01\x19\xadM\xb7KV\xd2\x97\x04\x1d@z\n\xe4g\x9f\xda\xa9\xe6\xbf#&1\xc7|\xe0\xd3hcp\x008U\x03\xd41NS\xa7\xa5\x88\x1f"\x97\x94!\x0cKq\xd0\xfbS\x07>\xa6\xe8zq\x9a\xb2\xf2\r\xae\xc3-\x80w\xd5\xbe=\x868\x15\x10O\xe7\xfb\x0c\x91\xdb\xfc\xd3\x8fJ\xab*\x01\xea\xe4\xe7\xdf\xd8SW*#r6\x81\xeck\x96\x960\xa4\x90\xc4\x93\xcb\x0e\xdd\xb23L\xa4\xc1\x90\xe4\x9d\x8b\xd5~z\x8a\x8dqt\xa1F\x85C\xc8\n\x0e\xca\x0f\xf4\xf9\xa9\x10\xc6ru\x16\xf7$\xf7\xc5z\x7fx\x02d\xed#\x07\xb0\xcf\xb50\x96(!!\x1f\x0b\xea\xc9C\xc0\xef\x83\xc7ju$\xbb@ \x0c\x1c\xf0\x0fJ\xee\xc6\xc9og\xd8\xc3tQ\x90\xceO\xbfe\xff\x00\x9a\xaegi\xa4\x8a\xde\x14Y.\x1c\xe9]_\x97\x04g\xf4\xa9Z\xd6$\x92Y\x18\xacJ2q\xceG\xf7\xa67\x1a5\xce\xa5lC\\}\xde\'\xe9\xd5\xb3\xces\xd7&\xa3\xf5k\x0b\xdb\x18\xa2&\xed\xe7\x80\x9d\xa0\x1e6\xb68\xfe\xd5{\xb9;\xd8\xe3\x85^\x00\x1f\x15Q\xf15\xda%\xb2Z\xf9\x81^FV\xeb\xc8U\xff\x00\x9aW\x88:gN\xb2\xe9\xb7\xd3\xb4\x92\x89\x960\x04\xc2B5\xb0\xe1t\xe7N\t8\xc5E\xe9\xfdR\xee\xe2\xea\xdd\x00O,\xb9>^\x90t\x83\xc9\xcf9\xaa\xf5\xbc\xb2\x02\x7f\x1a\xe1yP?\xcd?\x8bcd!\xeb\xdf\xdf\xeb\x9a\xafB\xca\xae\xa1\xdd\xb0\x0eG9\xce)\xfcw*\xa5\x98\xa79\xe3p\xe3\x1f\x95y\x95\xafS@\xa8$e\xc0\'\x92r\x07|c\x8a\xd4\xb1$\x9c\x0f\xda\xa7-\x9d\t\x91\xd1\x8e\xd4m\xa7r\x9e\x1b\xaf\x18\xea)t\x91aicI\x1b{\xc6\tb88\xe3<T|w\xc2D\x04\x1c\x86\x00\xe0dd\x0fjY\xa4\x86+b\xe20|\xc7\x00{\xe0rNkE\x1d\xf4F0c\x9d\x07\x96\xac\xe5\xf2F9\x1b\x00O5\x1c\xa9$\xeaS\xea!q\xb7\xefKd(\xc7\xf2\xe0\x1f\x91\xff\x00\x15\xda\xa6\xf6w]\xc5\xb2\x06\xdct\x19\xebM\xa2g~J\x1c\x11\xd7\x90\xb9>\xf8\xedO\xe3\x06=\xa4\xb6\x01\\\x80s\x91\x9e\xb5"\xd5\xc4\xf88\xf4~\x98\xec\x0foz\xe3\xb6\x8e\xfb\xfe\xb9\xa4\xa4R\xa9\x80H \xf2OB}\xa99-\xbd\'l\xb9\xea}\x86>=\xf1K\xab\x80@Y6\x8c\xe4\x91\xd0\xfe\xb5\xe4\xa67\x7f.1\xdb$)\xfc9\xed\x8fj[\xf9,\x84\xe41\x18P5\x1c\xe7\xe3\x07\x7f\xd2\xb8\x1d\x83\x01\xc7rq\xfdi\x94\x82X\xc2\xe1\xf7\x15\x07\x85\xe7\xebH\xc8\xd1:\x87\x03\xd3\x8c1\xe9\x8f|\xd5\x82xV\xda\xddUF\xe7nY\xb3\xdb\x1d?\xe2\xa3\x8cq\x82\xf1\x98NG9\x1d\x0e{\xd2nm\xde\xdd\x8a4\xca\x0b*\xe46N\x96# \x03\xef\x81\xbd*+\x95q\xa8)\xd8\x9c\x11\x81\x91\xdc\xd42\xc6\xca\xf26U\xbbm=1\xee;\xd3\x01 \x12\x07\x0e1\'\xe1\xc7\xf7\xc8\xa9\xb9\xa1l\x10#-\xce2\xbc\xe7>\xd8\xaa\xbc\xc6X\xdb1\xc5\xb5W\x8f\xc2z\xfbc\xb5f/\xae\x05\xb6\x81\xbe\xadE\xbd\xfb\xeejrL\x8f\x9fP\xce\x06\xd56\xa8\xb3B\xff\x00x\x8d$\x8c\x8c\xa9#\x9e\xbd\xaa\x1ek\x91\xa5\xa2^\xa8bm\xdfkF:\x98\x9f\x8e>GZsh\xac\xe8\xe5\x95\xb7\xe3\xa7@i\xad\xe4\x1etEX\x82\xae\xc3\xa78\xf8\xfaU\xbc7\x86kXd\xc1\x1a\x10\x95rrr8$\xfc\x1e3P\x9d\xd7\\\x88H!\x8e\n\xf6\xc7qV\x0b\xbb\xfb}[M\x02\x02$2\x00\xcb\xf9s\xcdq\xa4\xe9\x9e\\2]L\x8a$9\n\x84\xf0\x00\x1dO\xd6\x9d\xe9V\xf1\xdaYE\x04`\x01\xc8w\xc0\xc9\xcf`OJ\x99h\xa2[u\x08\x99\xda\x0f\'\xae{\xd6\xbc[\x9e\xa1-\xa5\xf5\xd1\x8eY\xa3\xb6\x0b\xb6\xc3\xdcg\x9c\x91\x93\xf1T\xb1\xca\xb6qKo\x0e\xa5F\x94\xb6O;\xed\xf1\x81\xb5QomVf\x988\'vy\x07\x18?\xf6\xa6\xb6\x0f}\x1cw\x10H\xc2UO\xc3.y9\xab\x1d\xd5\xb3\xb9,\xaa@Pri\x08\xed\x82\xc0\x83g\xe2]\xc4\x9fj\x89oi\xe4\xdc\xc90\x0c$\x00\xe9\x90m\x9d]\xbeF\xfd\xead\xb3\xa4\xb1"0\x0c\xb9\x07I\xed\x8a\x80\xd3\'6\xba\xa8\xde@\xde\xa5A\xf9\xab\xdd\x8c\xad&\xa9\xa4\x00@"\xe7\x07\xdc\x8e\xb5\x98\xeb1\xbc\xec\x1e#\xb0\x86]\xa4pr\r\\\xfc\x08\x977Z\xdd\x97\x98\xe6B\x8cY\x89\xec\x00\xedW>\x19\xbb\x92\x19\x9a\xd7wId,\xad\xf4\xff\x00\xe2\xaa\xfa\xe5\xba\xca\x86\xe7 \x18\xe3 \x8f\x921\xfd\xeb\xe8\x9a+\xc1^\xd6\xe6\xb2\x15\xd5\x15\xe0\xafh\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xaf+\xda\xf0\xd1EV\xbcY\x17\x9b\xa2]\x81\xd8\x03\xfaV\t\x1ch\xf2\xb3\x1e\xaa\xd5\xf4v\xad\x17\x9f\xa7^G\xef\x11\xaf\x9b\xad\xe3\x90\xde]\xe0p\x1b\x1f\x1cVw\xaf\x82\x1a\xc5\xb4\xe7%\xc1\xfb\x0c\xd5\xe7D\x93I\xba]X\xd9O\xeb\xb5+\x10\t\xe7\x97l\x05\'\x9fl\xd2\xcbp\xaa\xe9\x13:\x90\xcb\xbb\x07\xbe;\xd27\x12\xc6\x90\\\xe3n\xed\xa4\x1c\xf4?\xf7\xa8\xb4\xfd\xf4\x10K4XS\x1e\x03\xf7\xe2\xb1\xed,\xc8\xeaa\xc1\x03\x93\xbe1\xc6\xf5y$\x83}Y\xed\x8f\xf8\xa8\xab\x0b\x16\x8fW\x9a\xe5\x10\x95\x13q\xfc\xa7\xde\xb4;\x1by\x96\xf1\x9f\xca\xc0\x11\x90\xb8\xe0d\xff\x00\x93Q:U\x96\xe8n\xb2\xa7\x82\n\xb6x\xfc\xaa\xd4\xae\xf0\xc1\xe5\xe4\x97$2\xe3\xe9\x8cW:oMkx\xd9\x988_\xfd\xc5\xfa\xf1\x8f\xdbj\x85w~$`\x01\x19\xfc\xa7\xe9U\xedV\x06\x8a\xe5&hq\x1c\x84\x06\xe78\'\xe2\xaa\xf7\x96\x92\xc2\xe3\xb8\xdd\xd4\xf1\xd6\xafw\xad\x14\xf1\xad\xbb\x15b\xcb\x8d\xc7\x8c8=*&KQq\x11W_\xdeFN\x08\x1c\x11\xeck5\xd6,\xd5\xee%0\xb19\xf5\x00\x08\xd9\x8e\xec\xa7\x1b|\x8a\xb2\xe9\xfdCB\xaa\xb9\xf8?N\xc6\xaa\x8bo/\x98YA\x0c\x9d\x00\xef\x8e\xe6\x9b\xca\\\x90\t9\xec*dZ\xf9Nr\xe7\x8e\x1b\x07\xa55\x96&\x89\xd5\xf06\xb0\xe3\x8e\xd5\x94\x98\xb0P4\xb2\x80N\xa1\x9c\xfd\xf1W?\x8a^u\x03\xb6\xd4\xc69&\x88\x93\xc6\xd2}\x86s\xf1R\xb6\x19pE\xc7\n\xc3.\xc0\xe7\x1fL\xd3`\x91\xca\xc8\x19\xb6\xa8\xfe!\xd7\xf3\xa0F\xea$T\x9b\xd0G\x19\x1c\nv\t\x9fNK\x07]\xc6\x92F\xe7\xe4\x1e\xd4\xc3^\xa6H\xce\x0f\xbdHr\xe8\xc4\xe3\xaf~\x0f\x1d\x05t\x88\x8b4j\x17\x0cF\xe23\xc9\xed\xc5C\xf9\xa3#ccf:\xf7\xa9\x18f>\x93\x95\x00r[\xae?*\xe8\x9e\'p\x18q\x8d\xfeG\xcdLK\x8c\xaeC\x0c\x1a\x96\xdf\xb5\xb9+\xff\x00\xb3\x92y\xfaR\x96z\x8d\xde\x9d$\xbfwu\x02O\xc4\xae8\xf8\xa8\xdf9\xdc\x9c\xbb\x001\x96\xc0\x1fL\xd2\xa1\xd5\x163#\x07\x00\x9eO\xb9\xefO\xc3\xd4\x0cn\x1e)\x1a6F\xc8n\x0e\xfbv<b\x91#G"\x94\x91U\xd5\x86\xeaw\xf9\xa9)\xaeu;\xd9\x90\xdd\xbcr  \xc6\x8a6\xc7\x9f\x7f\x9f\xce\xba2\x05f\xdaY;\x1298\x1d?Zb.\x02\xf0\x92r{\x8f\xec3I\t\x9f\x0b\x83\xb4\x9e\xa4rH\x14O\xd4\x11\xdb_\x9a\xec\xe4\xeaf\'Q\xf6\xc0n\x7f^\xd4\xa8\x8a*\x85UUP0\x00\xd8~\x94\xf5\xd8\xa0Vr[\'\xd4q\x9c\x1f\x7f\x81B\xdc\xban"B@\x00\x0c\x12:{\xd3]\xe04j\x17wvl\xf4?C\xd8\xd7\x0b#/\xd0\xf5\xe7\x8c{\xd4\x19\xaf$\x8c\'\x97#/\xb9\xc9$\x1f\x9a\x90$C\xce\rL@\xc1\xe3f\xc0$\xf7\xeb\xf9b\x80N0\xcd\x8eq\xb5y\x18?\xf7\xa6\x89w\x1aF\x8a\x0e\x07\xb8\xed\x9f\x7f\xf3I\x8b\x90\xbc\x81\xd4\xe3\x8e\x80\x1au\xaf\xa2X\xe2\x05\xf5\x12\x98|l2w<SZ\xc1-\xdb}\xaan\xd9d\'\x0e\xf9e\xc0 t\xfa\xf1K]\xacmo!\x90#\x10\x84\x02Gj\x8c\x8ex\xc8\x8c\xee]\xca:\x0e1\xf5=\xcd<\x13\xc962\x83n8\x03\x1cc\xdf\xb5[Zu\x08\x966\x8dN\xee\xbbn_9\xdf-\xf4\xa8\xae\xfe\xb0\xd9\xc6\x0f\xd3\xf4\xa8\xdd\x11\xd9\xad \x88\xc6r\xa7\xf1g\x00`\xf7\xa9\x9d\x8b\xc1\x0f\x92\xa4\xe4\x01\x9e{sQ:xG\xf3\n\xfe\x06\x91\xb6\xe3\xa7\x07\x04\xd4\xe2\xbchT*\x8e:\xf1\x823\xef]\xb2\x7f2\x08\xc4\xac\xbe\x9fHbq\x8d\xc60\x07\xfeb\x93<\xca%}9\xdc\xe7\x14\xc6I\x9a=\xeaS*\xdd\xc19\xc7\xc8\xad#F\n\xb6\x16\xa0q\x88\xd7\x8c\xe7\xb5gs\xc5\x95\xf4\xe4\x86\x19\x18\xceA?Z\xb8\xe9\x12\xb0\xb2\xb6\xdc\xde\xa0\xb88\xf85\xad\xf0\x93\xbc\x1dN\xe7\xcd\xdc\x18=\'l\x01\xa8\x1c\x03\xde\xa9:\xeb,\xd6\x91\x058\xc4\x9b\xfc\xedRz\xdc\xc1t\xf9\x97\xae\xf2\xaa\x07\xe7T\xdd\xde\xa97! \x1c\xe3\x18\x1f_\xcb\xda\xa45\x1b\xb5\xbc\xb8\x10\xee\xf4C\xc8\xf6/Q\xadp\x8a\x19d;I\xc6\x00\xea+\x9dv\xf9/\xba\x84\xb3\xa4\xaa"\x89|\xa4c\xc3\x14\xc99\xfb\x9d\xab\xbd2?\xc2\xda"\xb0\xf59\xd6G\xb0lc\xfaT\x8d\xbc\xe2\x14\x9f\x8d\xc8c,X`\x9e9\xe9Qp\xea\x8b%\xcc\xb2$\xac\x91\xb3\x02\x01\'\x8e;\x81\xefJ&\x9bk\xa8Z\xddF\x97\x8e\x1eX\xb6\xa9\r\x8c\x15;\xbb{\xf4\xaan\x9d1Id\x8eb\xea2@ d\xe4{\xd6z\xf6\xfb\xa8[/I`\xb1\xac.]\x81\x0e\x08\xd4\xbd\x89\x18\xc79\xfb\xd5\x8c\x1f\x84\x90\xddz\x89a\x80F1\xb1\xef\xfbV\x90\xd7\x8b=\xb2\xa9\x90.\xfc\x0c\x82I\x1cs\x9a\x8e "\xa98\xf4\xe7\xd4\xbdZ\xa3G\x98\xbb\x0e\xf0\xca\xc3\x86#\x8c|\xd3\xe7\x03\xc9]\xe4\x96\x03\x07\x9e\xbf\xf1V?\xeaS^\xab\xbc\x90\xe9x\xd0\x0c\xb1\xdb\xb1\xcf~y\x14\x80\xb0\xc3\x80\xae0\xcd\xc0\xa5b\x9c\xce\xad\xba0\xa5H@\x07\x1cW1\xc7\x19\x91\x97\x05\xb1\xc9\'\xa7\xd0{\x9af%*\xc7q\xcf<`~\x11\xef\x9aH_&\xe6\n8\x1f\xd7\x1fZ\x8cz\x84*!3\xba\xb9\x04\x8c\x905\x12>\x05t\x95\x1a\xb4\x9c\x02;qR*cI\x03ob\x01\xc6\x08\xee)Yv\xa8\x19\x89Cds\xf1Q#PP\xe1Y\xc7\x1cq\xc1\xf7\xe6\x97k\xa5a\xb4\xe7\x19\xe1\x8f\xf74\xed\xbd\xfd\xb4\x8a\xe1d\x8f\xf3l4\xe7\x07\xef\x9abY\x82\x95;\xf1\xcei\xbd\xcc\xad\x13\xc7"\xe4\x10\xc1\xc68\xc1\x1c\xd4\xfe\xa7\xe2$:Z\x14R\xb2\xc9\xce\x18d\r\x87\x91\xc7\xbfj\x87\x96\tf^\x18\x80x\x1cq\x8aR\xd3E\x8d\x9e9\x1ac*\x8e\xc7\xf9\xaa\xd2\xcf\xfd[\xff\x00Y\r\x9a\x95K\x98\xc21b\x17\x198\xd4;\xec\x0fj\x85<\xb6\x92\xb4\x12\xcc\xc30\xb1#\x199\xf8\xa4\xf4\xdb\xbb\x8b\x98\xdc\xcb\x1e\xd3\x92x\xe4\xe3\xda\xa4\x0b\x05*\xbc\x9e\xe0\xd4\xa2\xe8\xc1\x8f\x1bq\xf1\\I\xa5<h}|\xfcU\x92t>\xa5ml\xaa\xcae)\x9fY#\'\x1b\xfe\xf4\xc9\xeav\xef!*\xfaA\xfe]\xea\x1a\xe41\x88\x9c\x1eW\x8c\x1a\x8e\x86\xfa@\x1br\x15U\xe0\x01\xc0\x18\xfaT\xdc\'\xc9\x05J\xe7\xb3}*\xb7x^\x19\x1f\xcaF\xd8I?J\xccu(\xa5\x80Gr\xb32\x9d\xc4\x91\xa8\xc9\xf7\xc9\xf7\x152\x1b\xc0\xc4\xc6\xcb\x91\xc85r\xd1P\xde~\xfa@\xe1\x11\xb0\x0b`\xee\xf9\x1f\x15lg\xb5d(c\x04\x11\x8c\xf7\xc5Vm\xa5\x16\xb6\x90\'\x1e\x94\x00\xe3\xdf\x15\x01\xab\xf8\x8d-\x90\xc7\x19c#q\x95\x19\xdb\xf3\xf5\xad\xdc\x1dG\xa7\xf8\x7f\xa4#]0yZ0\xd2\xe4d\xb3\x11\xf9@\xfd\xab9p\xf7\x1dB\xf1\xbc\xac\xaa\xaba\x00\xe0\x01\xde\xbd\x92x&\xd6\x12\xd4\x10Qn6\xff\x00\xee\x0b\xcd]\xc4\xd9\xef\x8a\xc5\xed\xafS\xef\xb0J\xb2\x10D\x8as\x83\xef\xde\xb4\xab\x8b\xc5\xb7\x81\xa5\xc9l\x0e\x00\xea~\x05f<#\xd7#T\xebs\xca\xaa\x9f\xc7\xf32;G\x8fH\xfbT\xce\xaa\x1aSh\x99\'\t\xa4g\xdf\xb9\xfb\xd7> \x90<V\xe9\x82[yl\x0f`*"\x08\xfc\xbe^B3\xc8\x07\x93M\x05\xf5\xc5\xdb\x87,\x13\x9cm\xee\x05I\xac\x19\x19.9\x1dz\xd5}\xcd\xc0\xeb]J\xe6\xfe\x08Y\x8bh\x08\x1b\n\x00Q\x80y\xce\xf5"\x0b\x83gm\x1c\x05\x80\xc6s\xdf\x93\x9aX\xc8\xb2\x15e\x0b\xd7\x8e\xdf\xda\x90$\xa9,F:\x91\x8e\xff\x00J\xed}\r\x81J\x02\xd98\xe8{b\x9bc,\xa4\xf9\x8f\xa2@Nt\x8c\x80q\xcd8/\x82\x8c\r\xc66\xc9\xa6\xa6\xed\xf0\xe8N\x03\x0e\x7f\xf0SI&r\xa5\\\xed\\r\x17\x80i\xdb[\x16;B\xe0{\x01IMa+\xae\x06UEV\xcf\x1fX\x95\x1c(\x96P\xa0\x81\xf2=\x8f\xc5,^\xa0=\x97\'5\x15jv\xa4\xac#\x0c\x0b\xe0\x80z\x03\xf1O\x04\x81\x89\xc1\xcf\xb8\xf7\xa4\x05\x95\xc0\x066\xfd\xda\x8eY\xb1\xb5q\x9fzAa@\xca~\xf0\xbc1\xdb\x9c\xfd3Tq\xf5\tzw\x93\x0c\xd0\x15\x18\xc1\x0cBo\x9d\xf06\xdb~\xf5\xd9:\x84Z\xc8i\x80=\xbb\xd4\xcd\x94\xdb\x0fQ\x8e\xc3\x1f\xde\xacp\xca\x8f\x8eA<q\x8e\x05W\xec\xec\x91\xd43K\xbb\'\xf8zU\x82$\x8a\xdfn\xc5\xe4v\x15\xeb\x1e\x1a\xb8\x9c[$\x8ecHp\x08\xcb\xea8>\xd8\xc8\xaa\xcb\xb9\xa2\x98\xfaX\xb3\x1fa\xb7\xebN\x96<.\xe1\x12\x90I=:\xd2d\x8eAU\x00{\x009\xa7r\x88\xd6\r\xfb\x8e\xe1\xd7\xda\xa2\xe5\x95I5\xb3\x96`\x14d`\xe00\x04\x8e\rV\xc6y \xe4q\x9aW\x83\x93\xc3\x0e\xc3\xdf\xdb4\xed\nl;\x80S\xff\x00\x9cT7\x9cw\x05\x03$\x9c\x01\xefR\x91\x9d\x83\x9e[\xb9?\xe2\xa2\xc1?\x99+\xa2\x00t\xfebF\xc0\xff\x00\x9azS\xa1\x14\xb1\xe7\x809\xaef(\x7f\x8b\x1d8\xa6\xcd\x93\x8e\t\xc8=\xa9\xec\xf2\xa4\xb0\xbcr\x00A^\xb8\xe4\x11\xde\xa1-K\xcaR(\xcf\xad\xba\x12qM]\xca \x9e%\xd9\xfc\xdf\xcb\xa4o\xa8\x1cc\x1b\xf3\x9d\xa9v\xef\xe6#\x9f\xcb\xa7\x9c\xf1\x8f|\xd2\xb2#@1\x9e=\xe9\x8c\xcf\x90\xd9`\xa4\xf1\xfaT\xa5\xee\x9fs\x04E\x96O0\x01\x96\x00\xf2*\xb74\x8f\xc6\x19\xb2O>\xdf\x9dg\xfa\xbbIft<2G\x95\xca\xa9\xdc`\xed\xb1\x1c\xd5\x95\xb4\xe9"\x86\x12+`\xeeG\xc7\xbd5\xbay\x04\x0f\xb4\x92q\xc9Q\xc9\xc7\x7f\x8aKB\xf1\n[\xa4\xd1J\xb2r\xe5\x86\xd5\xces\xda\xa5\xa1B\xf1\xb0d\'p\xc1\x1d\xa9{-"\x14\xe5\xe3\xc99=8\xcdf\xed\xec\xba\x8bu\x1b;\xbb;\xb3\x1b*0mK\x95\x00\xed\xbf\xbejT\xb7P\xbc\x12\xc52eI\x07\x00\xeeqOmo\x9e\xf9\xb1\x15\xbb \xee_\xaf\xe8)-G\xc2\x96\xba\x88i\x19\xe4YO&E>\xaf\xeb\xda\xa6V[M2/2vX\xf2zw?J\x89o\x18Y\x0b\xaf/\xc9>^\xd0C\x96\xe4\xb6zc\xda\xb5W7]\n+U\xb7\xeb\xddB\xdeY\x1c\xe7C\x8c\x15\xcf\x07\x0b\xf9~\xb5F\xd7\xbf\x84\x9fU\xaeb\xc0\xdc\x8d\xc9\xfa\xe6\xa9:\x9f\x87\xeft\xb5\x13+\x89b\x18\xdc0r>i\x8a\xba\x96OK.\x179\xc6?\xadk\x90\xdf\xe9\xda\x9cL\xb1\x959\xea\x8d\xc1\xa6w\xde\x1e\xb3\xbb\x10\x95\x85\x15\xa3\x1by\x1f\xc3\xed\xf9VF\xfb\xc1V\xd7\x8a\xd7]\x0e\xf6\'\x81\x95J\xa0m`\x90w\xc3\n\xbf\xb4\xeb\xe9"*\xdc/\xab$k\x1bv\xee*\x83k\x08\x9b.]V5oQ\xff\x00\xbd-,\xa2iA\x89s\x1a\x8e\xa78\x1e\xe4}jm\xfc/\x85o\xdco \xf0\x03\x7fZ\xf2;\x11lv\x95+\xb4t#\xfb\xd5Jtn\xa5h\x91\xc5,K\x12\xb3e\xe4\x19$\x91\xc0\xdc\x00\x07\xc0\xa9\xcd{\x03e\x92Md\r\x96\xa1m\xe4\x9d\x18G\xbd\x94c\x80\x0f_\xce\x9e\\\xcf\x1d\xb8;\xb6\x93\x8e\xa4\xf3\xcf\xd3\xde\xb9\xb9\xdc\x0bp0z}*\x1d\xd8\xcb"\x9cpr\x00=j\xba\xe2\xfd\xacc{u\x91\xe4|\x8d\x0c\xfb\x808\xd8\x1c\x8a\xea\xcd\xad\x83`\x01\x8d\xf1S\x10\xdc\x99\x07,\x0f\xa4\x1fW\xb7N\x95+g\x1c\xa1\xb2H%\x9b\x1d2H=*\x1e\xda(\xed\xd3\xcc\x93h*:u\xab}\x84~\\k4\x8b\x99Xd\x03\xfc \xf6\xfa\xd6\x97\xc3\xf0\xdc\xdf\xcf\n\xc8\xf8\x95\x06\xb6\xc1>\x95\xf7lw<\x01Qoo\xa3\x82\x17ld7\xa4\x0cri\x95\xf4SD\xc8\x9b\x06$#\x04\x9e\x84T)x\xe2b\xa6P\x19\x01\'\x07\x19\xc7P*kU\x95\xca&1\x959\xfaU\x0bX\xd4\xa1\x841F\x1b\xb1\x82@\xce\x7f\xefP|Qv\xd6\xd7\xb2\xac \xe42\x85\x0f\xecFH\\cpi\xab+\x96\x92\x04,F\xe0\xe7O\xb8\xa9\xd8\xaf\xa32M$d\x16\x8b\x00v\xfc]\xe9\xec7\xf04R\t"F\'8%A\xe6\xb3m*\xf1\xcc\x93\xcb\x92T\x809\xeeO&\xa5\xee\xf5\x05\x81Uc\x1cJ7\x0c\xf4\x1c\xf4\xfc\xab\x1f\x07P\xea6\xb3\xc8RPv:\x94\x8c\x82Xnp~\xc2\xb3}^\\\xde\xb1\xf3\x0e\xca\x00\xc1\xe3\xe2\xac\x87Y\x81T\xac\x96\xb1\x95\xf6\xc0\xa60,z\x8a\xce\x90A\xb5RU\xe8rq\x8f\x7f\xadT\x8bK3e[,y\'\xda\xaf~\x14\x02\x14\x91Z<\xc8\xef\x90I\xc0 \x0e\x95m\xd1o\xae\xae\xef\xadm//s\x0c\x81\x90\x8d\x038#\x81\x81\x9ei\x1d>\xf2H.\x10\xf9\x84);\x82\xc7I8\xda\xa4l\xed%P\x8a\xc8X\x1e1\xfejf{ux\xd3zl\x03\x80\x07z\x92Y\x06\x00\n\x03\x13\x8f\x93H\\\xc6v\x02J\xf3\xda\xbd\xaa\xc2\xce\x08\xad\xde(\xcbN\xa1\x00\xc1\x00`\x0e\xc7\xbdX\xcfr\xc6Ev"-\xf9\xcdWo\xe3\x05\x92%\xfe,\xeea\xed\xde\xa2uI\xbc\xb5R\x9c\x00\xb8\x03\x1d\x85I\xcb {\x88\x94\x13\xd7\x1f\x95IOe\x15\xc5\xb1\xdc\xdb0x8\xcf5\x1dak\xf1y\x1d\xbb\x85\x7f\xe5\xfb\x0c\xe3\x91N\xb5\xca\xdby\r&\xea9\xfb\xd6Qx\x8d&\xd5\xdb\x92y\x03\x1c\xd6\x8f\xe0u\x87H\xbe\x88\\)\x0fp\x9bP\x9f\xe1\xcf\xbf\xd6\xab\x96\xfa|\xd2\xeaLLO \x8d\xb9\xda\xa4\xf4\xadOG\xf0\xd8\x91\xe1\xbe\xbf\r\xe6)\r\x14=6\x81\xd0\xb7\xfcS\xbe\x19\xe9\xfag\x9e\xe2eu\xf2G\x97\x18#\x00\x9e\t\xa8\xbd_\xa84\x91\xc7\x04$\x1dd3\x9f`7\xab\xb5{E\x15\xae\xaaj\xf4W\xb5\xcduE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QExk\xda\xf0\xd1E\'"\x07GS\xd1\x94\x8f\xd6\xb0\x1b\x8b&\xb2\xd4\xb5(\xc9\xda\x0b\x9e+\xe8\x1a\xce|_\xe1\x99\xef\x1aK\xcbY0N<\xc5\xff\x005\x12\xf6\xdf\xf1\x10zST\x88u \xce2q\x82)\xd8%\xf2e\x04\xb6\x15\x86\x96>\xc39\xcdc\x976\xf2\xff\x00\xd4!PQ\xfa\x1e\xff\x00Q^%\xcc+i\x1d\xbe\x7f\x08=O\x0c\x7f\xc5^#\xb2\xb6\xb0\xb4\xc3~\xf1\x80\xe4\xb7&\xab\xd0\xe8\xb3^\xcc\xd2\x8d\xb1D\xc7\x80GZ\xc7I\xd2\xae\xad\x0cqD\x9a\xe4\x95\x0e\xb5\x038\x19\xce\xe7\x8a\xb8\x17\xd0\xcd\xa8\xbb\xe1\x10\xe5I\xdb\'\xe2\x9fY\xcboke\xf8\x9b\x0c\xa3w}\xb4\xe1.`\x8e\xdd\xd8\xca$^\xa9\xb4\xe4\x8f\xce\xa6WG\xb11\x85\x95\xbc\xc6\t\x82OL\x0f\x8aeq\xa7\xd8\xdb@\xc9\x0c*\x83\xff\x009\xa97\x16=OK2\xb4\x0b\x1a\xc4TnK\x0f\xb7\x06\xa1\x19\xedI;\xbe\xa2\xd99\xe2\xa9\xb7\xba\x9cl\xc7k\xe4\xa1\xc8\xfa\xd4\xc6\x95-\xd3A\x99a\xdc\x92\x1d\xc0\x8eH>\xfc\xf6\xaa&\xb9qmg#D\x89\xbd\xf3\x9c\xd5\xb3M\xf1^\x9e,-\xe3\xf2]Z4\x01\x81\xe4`{\x1a\xc6\xf4\xbbu\x92\xfe\xeb\xf1}@+$x\xd2\xa3bs\x82>p)\xf9\xae\n"\x14\x8c\x90O5\xed\xeaI\x03\xc8J\xaa\x8d\xdc\x13\xd4\xe7\xda\x99\xa28\xe5\xc0~2\x07\xd6\x9d\xde\xf8\xabL\xbbV\x06/H\xeb\x9a\x89\x1a\xcd\xb8S\xe5G\xb8s\xcfZ\xa9\xea]\x16(\xae\x99\xed\xefK\xc5\x9c\x8d\x88\xc1\xcf\xb7z\x93\x17SvL2\x10@\xfa\xd4\x85\xbd\x94S\x12@\x00\xe7\x90{S\x96\xd3$ G\x18Gf\xc6\x14rG\xd6\xab\xcb\xaa[\x1d\xfelG\r\x8c\xb2\xf1\x8f\x80*\xc1\xa6\xf8\x9bG\xd3\xa3)\x15\xbc\x85\x99\x8b\x12\x0e\xe3\x8f\xce\x9f\xe9\xb6=6B#\xb9\x92\x18\x17\x07T\x9a\x8e\xa3\xf0\x14\x0e\xff\x00Zn[\xc9\x01,\xa1\x98\xe7a\x8d\xa9W\xf0\xc6\xc8\x89\x92C\xe6u;z\x0f\xd6\xab\x97\x10\xdd[\x80@\x05\x03g\x1c\x1d\xde\xd5e\x97\xc6\x96\x8f\xe6\x0f\xbbK\xb5\xd4\x8c\xe0\x1c|\xe2\xa0n<C`\xe5\nZ\xca\xd88\x1c\x00)\xce\xa9\xd3\xfc6\xde_\xe0\xef\x16=*AoVN\xfc\x9d\xb7\xda\x97o\xd4/W:\x91\xb7;\x0e\xd4\xda\x1b\xb6u\xc1@\x08\xea1\xfdi]\xdb\xb1\xe9\xe8r*\xe3c\xe1\xd6\xbf\xb5\x8e{\x88\x8d\xa3H=\x00\xf2\xe0{\xb0\x1d3\xedL\xae|;\xa9\xe9\xce\xac-%\xb9\x8c\x1f\xc7\x08\xdc1\xf2:\xd6f\xe3\xc3\xf7\xa1\x8bE\x99\x90c,\xa0\xe5A\xf7S\xbd>\x9dj2H/\x86\x1d\x89\xfe\xf5_iv\xbbt\xe0\xf4\xeb\xfa\xd7&~G^\x98\xcez})[\x89R\xdeF\x8e\xe2\xd6kv$\x14\x0e0Y{\x91L\x1eKv8\x12\x109\xe0\xf6\xfa\xd5,\xb6\xf2\xc4\xe47 \xef\x8c\xe4\x1f\xda\xa5/S\xd8\x10N1N\xcc\x84\xe7\xd61\xfcY\xa4\xde@p\xd98\x04r)\x15}\x81\xf0\xca\xe3\xa146\x1b\x82\x9bON\xa2\x9a\xd0r2\r8:\x93\xf6"\x9dJ\xed\x1a\xc6\xccT\xac\x83\xd2Q\xbac\xb1\xf9\xae\xe2\x9d$\x1bx\xc0\x1c{\x9f\x9a\xe6\xdfJ\x17\x13F\xac\xc0FF\xec\x86\x04\x1e\xddEXG\x87\xad\xe3\x8c2\xe4g\xa1\xcf\xbdZ\xc1\xd1.\xefb\x92H   \xdc1\xdf\x8f\x9ai\xba\xae\x9c\x06\x97s\xedQ\xd1\xb6\xc29=9\x1d\xb3Jn\xfd\xd9Uc\x82\xdf\x84\x1e?J~<? q\xff\x00\xe6\x08\x83\x8c+d\x93\x9f\xa5<o\n^\xb4d\xad\xc2\xe4t\xc8 b\xba\xbe\x18\xeb\xed\xab\xcb\xb1v\x00\x1c\xe9*H\x1f \x1aP\xeaqm\x99\xd4}sQzM\xe2\xda\xc7-\xb4\x88\xecw\xb61\xc8\xday\xc8\xfaT\x95\xb5\xc1\x9d\xdcd\x14\\\x0c\xfe\x16\xcf\xd3\xe2\x95\xb5\xf0\xc4\xf6\xd2oy\x9fp\xe4\x10x\x1f\x15\xed\xc6\x98#\x1f\xbbfW\xc9$\x1e\x95g\xfe\x99\xd6\xed\xad\xe1y` DN"8RG\xf7\xfaSo{\x13H\xc5$\x04\xb0\x19=\xb3N\x9c&\x0boQ\x8e\x85\xb8\xe2\x9a6\xad5\xa2\x98\xad\xcb8?\xca\xb9\x03=\xf2j*\x7f0\xfe>\x1c\x7f\x17\xc7\xc57\x85d\x82V\xcd\xe3\x90\xde\x97\x18\xe9\xc7\x03\xfa\xd3\'\xaaL\xce|\xb46\xe4\x1c3\xa9\xc3\x0c\xfc\x12)\xb3(+\xea`\xd8\xe1M:\x96\xff\x00P\x99\x9e\x06A\x1c}r\x139\'\xdc\x9ei\x99\x85C$r\xdd\x10\xcc3\x83\x91\x8cT\xb66H\xdecz\x1b\x1bI\xebH\xca!\\\xb4\xb2F\xb98\xc3\x0c\x9e+\xb2[\x19r\xf37\x9a\xca\xc5@\x95\xb0\x15A\xe3\x900{R\x05\xf1\x07\x00\x90\x08\xed\xdc\xd7\x90Y\xc1\xb1\xc7\xde\x18\xae0J\xbe?\xb5#m\xa7li\xd5$\xda\xa0\x8c\x06<\x1c\xd2\xe9}\xa4\xfaUJ\xe0\x1c\x92\xa3\x00\x8f\xce\xbcmOJW\x91\xd7x\xe3\x9e\x98\xff\x00\xc1R\xd6\xdf\xa60\x8bT\xd6\x80! \xaa\xc9\x8c\xe4\x1c\xfe\x94\xdb_N5\x0f^\xfe\xebJ22#\x06\'o\x18\x00\xf7\x1c\xd7q\xdeH\x80\x0f,\xb0\x078\xcfZb5}=\xc8\xf5\x10O\xf0\xb7\x02\xba\xfd\xabh\x88v\xc3\x9e\x7fO\xa54\xd0\xd9\x87\xd7\x15\xe2\xc6\xa1{e\x89\x00\xe7\xda\xb9\xf8\xc9\xf1\x82\x18\xef\xf4\xa7\xadz\xd2gleq\xf3Lv\xce\xdb\xb0\x87\'\x801\xd7\xe9I\x9dhuK]\xd8\xe3\x93\x8e\x9f\x15\xc1\xf1\x14\xc2P\xb1\xaa\x8e\xa3\x18\xc9\x14\xcc\x89\xd3e*\xf3\xf5\t[\x07\x18\x8e29\xdb=\x85\x02\xeaq\x90\x13\xb7v\xa7\xb1Y\xde\xbb\x80\xb6\xd2d\x7f\x11\xc0\x15\xe3\xdb\xde\xc2J\x93\x92\x87\x90\x7f\xedL$\xf1\x06\xa3\x1b!\xf3N\xd2;\x0c`\xfbRR\xea\xfa\x8c\xa0\x13#F\x08\xe4\xe3\xf1|\x9e\xb5$\x7f\xa0E\x01\xf2\xff\x00\x1cX6s\x84\xc6\x0f\xd0\xff\x00Zo\xf1\x13\xb3n#\xe3\xdc\xd5\x9dnnZ4G\x98(\\\x8e*n\xd6\xfb\x80\xa5\x80\xda\xa3\x93\xdc\n\xcb$\xb9\xbfic\xdf<\x98\x1f\xc4\x0e9\x1f\x14\xf0\\\\\x18\xfdW\x12\x13\xd0}*\xc2\xd3\xc4F\xdeBV9\x8e\x90\x07\xa9\x86H\x03`rv\xfbS.\x84\x8f\xcc\xbb\x9e\xd5\xaeG\xac\xda\xa7-8\xc8\xfeS\xd6\x9c\xfe\xda\xd3\xdf\x18\x95G\xfe\xecb\xb1\x13st$*X\x80\xa3\xafA\x8ak6\xa3:J\xa9\x9fP \x93\xd4c\xe2\xad\xc7\x8e\xaf\xa3\x1e\xabe\x0b\xec\xc3zc\xf0\xca\xdc6\xff\x00\x06\xb7W\xbb\xd1d;\xfc\xf83\x8e\xbb\xb09\xa8\xab\xc9t\xf7_\xdd\\\xc5\x8f\x83\x91\xfd+"7n\x14\x15P2z\x03H\x1b\xd9c`K\x94\x19\xe2\x9a\x97\xc7\x9eb:7J\x80\xea\x1b\x95$o]\x16\xcf\x90D\xed\xb7\x00\xd6\xb3\r\xbb\xc8\xfb\x0c\xccP\x0e\t8\xa7r\xd8i\xee\xa5fx\xb0\xa3\xb9\x1cV45K\x96\x90\xaa\xcaH\xc0\xdai\xb4\xba\x9d\xca\xc9\xb2I\x0eX\x02=X\xfe\x95\x16\x1f\x15\xd9\xc7\x1b\xa9\xe8bRI>\xb921\xed\xc5(\xc51;\\i8\xec1Z\xfcZF\x9cg\x1eT\xa8s\xd0#\x0e\x7fJ\x90\xbck;4UoS\x01\xca\x8e\xd5Z\xf0\xce\x9a\x96\xdadz\xb4\x99y\xee\x03\xf9e\xbf\x81\x14\xe3\x8f\xad#\xaa\\\x17\xdc\xdb\xbdD\xd5\x7fV\xf1G\xfa}\xb2Ai\xd2 \xb3\xba\xbaU\x93P\xf5\x85\x8d\xb7\x04drj\x04\xf3\xc8d \xce\xce\x13l\xf1\xbd\x13\xeaQ+\x1f*5S\xeey4\x84Z\xad\xd4lq!\xc1=;Ue\xae\x0e\xf3\xc6y\xa5V\xe60\x0e\xe6\x00\x1fz\xc2\xc8\xf7n\xfekO!s\xfc\xc0\xe3\x19\xf6\xc61Q\xda\xed\x98\xe4\xb1\xfb\xd6\x89\xa7^-\xeb\x08\xe4\xc0s\xf8H\xe3?\x06\xac\x89h\x87\x0b\xbe0@\x1b\xb2\xd9\xc7\xe9Y-\xae\xa0\x90\xb0e\x9dx \xf5\xc1\x15\x1f\xaa\xda\xeb\xb3\xeaP\xdc\xe9\x0c\xa6\xde\xe0nf2\x95\x11\xc8O\xa9x\xceA\xea+]\xe1\xef\x12\x0b(\xa4\x82\xf6\xd3\xf1.\x0eRG\x93A+\xc9\x04\x90rG\xf4\xa9\x10N%:|\xe0\x98\x19\x19\xde\xb7%\xb2\x85O\xff\x00\xaa\x19 \xf1\x80E(,\xc3\xa7\x17#\xaf\xf2\x81\xd2\xb2+m\x1b]$\xb5\xce\xb0\xe8\x1f\xf1\x04\xcb\x10q\xd0g\x15/\x05\xa3\xe9\xd1\x08\xc5\xe4\xd3\xb1\x07\xf7\x92\x1e@=\x80\x1cV\xad<_n\x91\xb9=\t\xd61\xc8\x17\x0e9\xf6\x04R\x9ep8\xb8\x0c{zG\xf5\xa7\x1e+\xd4\xa3\xb7\x9a;X\x18\x15\xdb\xb9\x98\x1c\x82s\x8f\xe9U\x18n\xdfq\x07q=j\x03\xc5\xfa\xd3\xd9jp[\xee\x18KTb\x0f\\\xb9&\x98Z\xeb\xd0\xcaT\x9eH\x15\xe7\x9dQ.:\x95\xcc\xf7\xcfo\xa7\xf1\x07XA\xfc\xa3\x1b/\xd8US\xdd\x7f\x19\x81bpqZ\x8d\x96\xa2\xd1\x10Q\x888\xabF\x9f\xa8[\xca\xe1\xa5\x93k\xf4\x19>\x9f\xfbV@\x9a\x94l\x06\xd7\xe4\x8a\x96\xb5\xbd\x90\x8c\xee\xfc\xaa\'M\xea\x1dK\xa2O\x1c\xb0>\xa4G\xd5\xe4I\x93\x19>\xf8\xf7\xf9\xa9It\x0e@l\x121\x91\xed[<\x8f\xba#\xceA\x15[\x9e|\x023\xb8\xf6\x03\xadEY^\xdc5\xbc\xe1Af\x11\x12\x8b\x9e\xbcg\x1f\x9e*\xb4\xbe<\xb5\x8f\xc9\xf34\xa5y\x01\x1e\xad\xf8\x1f8\x18\xaf\\\xb6\xf1}\x97V\xb2\xb7\x9aw\x16R0dl\xabH=$g\x1aG\xe9R\xedKz\xb0\xa5\xf0F\xc0\x81\xfdj\xe3o|\xf6\x97*\xd3[\xca\x14\xa9\x19\x0b\x9cg\xbd=:\xdd\x91\xc8\xfd\xe8\xf6\xca\x11\x9f\xd6\xa9\x0f\xe3x\'y\x99\xec=$~\xe7k\xe4\xe7\xbe\xef\x83\xf1M\xa0\xf1\x82\x11 {TRA\xda\x00\xdd\x8fn\xb4\xdau\xdb+y\x1a8:\xe2<L\xcc\xde\xb8\x1f;m\xb98\xc6q\xb5Ll\xc8\x01{b\x18\x006a\xff\x005x\xb9\xd4\x19\xd5\x82\xa1\t\x8eO\\\x8f\x9aca\xaa\xc7\x05\xe4\xd2Lp\xbb0\xb8\xfa\xd5L\xf8\x9c#\x18\xfc\xc6\x93 \x9d\xc0\x9cg\xd8\x83\x8c\n\x88\xbc\xd6I\x93\xcc\x8d\x86\xd3\xc9L\x8c\x93\xf2\x05@\xbe\xf1\x1cq\xcdoqop^X\xa4\r\xa0\xa6@;\x8c\x9d\xf0@\xa5"\xfa\x1e6\\+\x8cg5\xb0\x1f\x10\xc1)\n\x8a\xc7<T%\xe5\xe5\x95\xb4\xd1\xbd\xc3\x94F\x7f\xc2?\x10\xee3\x8e\xd5BMjf\x910\xa9\x1a1\x07\xdc\x8f\xcc\xf1^\xeb25\xdc\x16\xe4r\xea\xdbC\x16\xc8\xa7n\xfcQs\xd5,\xa6\xf3\x0cR\xc9\t\x060c\xc2\xe7##\x1c\x91\x8fzf$Ky\x01]J\x1b\xf3oZ\x84\x1e \xd2b\xfd\xda\xae\xdfNKm<\x8e\xb9\xe6\x9d\rh\\\xd9\x99l\xe2`7\x15\xdc\xc0\x00H\xea\x16\xb2;-"K\xd6\x8a)\xa4#s\xed>\xb3\x9c/\\\x8fj\xbe]j\x11\xc1f-m\xd0,q\xa8D\x03\xb0\x02\x99\x97\xc57qY\xc8o$K51\x1f D\x98\x91\x89\xc6\x00\xf6\xfa\xd4[\xa9U\x0e\x94b\xccN\xe4\x9e*\xbb\xaajR\xca\xcc\xd29\'\xdb5Q\x92\xf4\x96\x19\x04\x90z\x0e\xb4\xfe\xf6t-\xb4\x8d\xd9\xee*\x0eX\xdb\xccl\r\xa0\x9e\x1b\xde\xbc\xd2 \xd33\xcb33\xbb\x92\xc5\x98\xe4\x93P\x9eF;\x8a\x9e\xb1\xd6\xa7\xb4\x95\x19\t\xc5i:o\x8a\xdat\x11\xc8@s\x8d\xacx\xfc\xab\x18@S\xd4s\xc1\xc7\xe7O\xe0\x95\x89\x041\x1c\xfb\xf45ec\xd4\xaf\xfaK\x96\xb2\xb9x\xd5\xbf<`\xfa\x1b;n=\xfeh[\x92\x8c\x0fz\xd9\xdf_\x869\x04m;\xc6\xe4\x81\xb4\xaeH\xfc\xff\x00\xcd5\x9e\xe7Ou\x0c\xfa\xd4\xbbq\xeb\x07\x07\x82r@&\xa9\xa2k\x89\xacd\x97%\xa4\x85@N\xc4\x82{\x9f\x8a\xa8\xad\xf5\xa2Ms%\xe7\x98R1\xb9\x8fM\xb8\xeb\xb4w\xad\x14}b\xf7\xa8\xc5\x16\xa4\x8eH\xdc\xb0\x01\xdaE\nG9\xd0\xdb\xd5\xfd\xbd\xe0(\\e[l\xe0)\xfe\xa2\xb5\xfbK\xcd\x02c\xbe\t\xd5\xca\x0ew\x90x\xf7\xedK]\xae\x97{\x16\xd8\x9e\xdcK\xd50@\xcf\xbdc\xa2\xff\x00N\xd4C\xfd\xd1]\xa4P\xa3q\x1bG\'\x8c\xf3RD\xa4q\x19\x96u\x8eH\xe4\xc3\xe1\xc2\xe4c\x04\x01S"\xb9\xb9\x92)m\x9f\xa6\xd9\xcbn\xe8|\xc1\x18\xd3\x9fr\x0e\xfe\xa0\x06iou\xeaV\xf3d\x0e\x0e\xd9<U\xa5\xa4K[\x88\xb7\xddE$b_R\xa4\x81\x88#\xb6:\xe35c\x97[U\xb7I#\x8cm\xdf\xb4\xe4\xfcf\xb1=C\xc4\x9a~\x99\xa9Al\xf1\x18\xb7F3++\x15\x00\xf3\x92\x0f$\x9fqW{\xbb\xa8\xa4\xb2\xb0x\xb0\xb1I\x00\x90u\xe7\xcc\xf5g\xf3\xaa\x8f\xc6_t;K\xf7\xb3\xb8\x10\x89\x99\x151\xebl\xff\x00\xda\xcc8\x1b\xd4n\xa3s\xe6E\x11`s\xd8\xf0*r\xe7Y\xb4\x99\\O\x10e<\x90I\x1fNEVn-\xf4]J6\x8cn\xb6\x7f\xe0\x95\x18\xb0\x07\xe4\x1e\xa2\xaa\xb7\xb7>a\xd8\xa4\xe4\x1f~?:h#t\xda^r\x83\xb1-\xb4\x7fZ\xa3k\x8b\xdb\x86I\xae.\x15\xdf\x7f\xcc\x8aI\xcf\xb9\xe6\xaa\xd2\xf2\xea0\x04r8\x03\xb6\xa3\x8f\xd2\xae\xf6\xda\x15\xcc\x11\xc5\x14{d\x00\x13\xe6/G=\xc8=\xa9C\xa5M*\x98\xa5B}YV\x03\x94c\xd7\x8f\xee*\x1fM\xd6.l$\x01n\xe3\x91\x08\xe5K\x83\x9f\xd2\xaf\xdaf\xa9\x16\xa7j\x1f\xc90\xca\t\r\x13\x10\xc7\x8f\xe2\x18\xea\x0fj\xb2\xe9\x96]2\xf5\x98I,\x91\\\x12N\x9c\x8c6{.{\xfcS\x13<\xce\xc5\xdbrNO\xd6\xaaKa%\x94\x81eS\xcf \xf6?J\xbb\xe90\x0f)2>sT\xfdkSQ\xa9\x08\x15\xb3\xe4\xae\x1b\xd8194\xbd\xae\xb3 \xce\t \xfc\xf7\xa8v\xade\xd2\xfa\xd3K2\xc9$1\x92\x17?\xd4\xe2\xb8\\\xb2i\x04f\xb4f\t\x90T\xb2\xe3\xb88\xa1\xae\x11\xd0\x8c\xf2\xa2\xaa\x11j\xb2H\xa0\xed \x81\xd4\x91H\rT\xac\xa4\x1c\x91[\xb4\xf1\xad\x8d\xab\xa4\xd0\xa0\x08\xed\xeb\\\x11\xdb\xe9\xcd\x08\xd2\xa9\x19$\xe3\xb14\xeb\xef\xb6\xb0\xdf\xb6\xf9pw\xe4(\xe4\xfbs\xedJj\xfe!\x86\xc2\x18c\xc6\xe6~@\xed\x8a\xa2\xeb\x13[A|d\xb7\x0c\xb12\x86b\x7f\n\xb1<\xa85(\xdab\xeb\xda\x7f\x95\xe6\x04\x99\x06\xe8$\xea\x01\xf68\xecj\xa6\xd7\xc4\xbda\xaen\xe0\xb7\x92$k\x82\xde\\\xd1\x8c\xe3\'$\r^\xfc|S\xf7\x17\x92J\x81O+\x8c\n\xb8h\xbe6\xd3\xf4\xef8\xad\xa8\xdd6\x0bs\xd4\x8f\x9a\xbei\x1e/\xb2\xd4v\xac\xc9\xe41\xe8s\x95?\x9fj\xf9>\x03u\x14\xaf\x1c\xd8,\x8eU\x80\xcf\x05N\x0f5\x7f\xd1\xa6\x9aI-\xa2\xe8$e\x18\xef\x82j\xdb\xa4\xf8\xcf\xae\x8b\xd8 \xbax\xee\x10\x90\xa4h\nNN9P7\xa8\xa2g\x03 \xfd\x8d}A\xc1\x19\x1d)\x19.m\xe28y\x91O\xb1"\xab\xbe$\xd4\xdbI\xd3V8\x08Y\x9dB\'\xfb@\x1dk%\xb5\x9eF\x99\xe4\xb9\xbaw$\xe4\x96<\xd7\xac\xde^Cd"\xf3\x01&C\x80\x01\x03\x03\xdc\x9a\\\xb7~[\xe8U\x04\x81\xea\xdf\x8a\xdf\x92X\xa5\x19I\x15\xbe\x874\xb5d\x16\xfa\xa2Z\xed\x96\xde\xe3\x04u\x00\xf5\xadKN\xbb\x17\xd6p\\c\x1b\xd7\'\xebN\xc3q\x0c\xf9\xf2\xdc\x12\x00$\x03\x9cf\x97\x05\xc0\x97 \x8c0\xde\x9e\xd1E\x14\xf5I\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xb3O\xb4\rJ\xf6\xcd\xf4\xb8\xedgx\xf7\t\x19\xf6\x9228\x1c\xe2\xa3^]Gem5\xc4\x80\x95\x8cd\x81\xc9\xdf\x14\xdc\x92\x08\xd4\xb63\xc5iD\x802j2\xe3X\xd2\xed[l\xd7\xd1+\x7f(9?\xa0\xac\x16MoQ\x923\x1c\xd7\x937\xc1c\xd2\xa3\x1eg\x9e[uY\x0e\xf0\xe3?<\xf6\xac\x9c\xbe5\xb4VE\x8e\xd2F\xc9\x1a\xb5\x10\x08\xfa\x01\x9a\x8cn\x98\x8fJ\x01\xf5\xde\xbe\x9e\x04\x10\x08<\x11\x9a\x8a\xd7\x1eH\xf4\xcb\xa6N\xbby\xfaw\xa4\xb4\x1dV=V\xc27\x07\x12\xc7\x84\x95{\x86\x1d\xfe\x87\xb5KO\x10\x9a\x19# \x10\xeaG=9\xad\x9d\xbc\xd1J\xb1K\x1b\x06\x8d\xc0e#\xb85$\x9f23\xa4\xf26\xac:\xf6x\x82\x80\xcc9\xa8\xfb\xbdYb\x81Dl2\xbc`U\x83\xc4\x1e\x1c\xb7\xb2\x8d\x8c\xba\xb2\x07\x1c\x88\xc2\x92s\xf3\x8e\x95\x9e\xbf\x87\xef\xae\'\x88F<\xc5\x91\x80\x12!\xc8\xe7\xdf\x1d*\xa2\xfe\xf4Ev\xf6\xf0\xf9rL\xe0a\x15\xc6\xb0=\xf1\xcd1\x1bl\x03\xb6\x9d<\xd3\x86\xf14\xb1\xa1W\x97\x0cs\x86\x1c\xfe\xb5\x17/\x88o\xa4S\x87\x12\xc6\xad\x8e\x06\r[\x93\xec\xe3Y\x8e\xe4@\xd6\xd1J\xac\xbb\xbc\xd2\xc7\x03\xe3\xebR\xd0}\x9bj\x16\xe8\xc1|\x9c\x96\xce2qL\xff\x00\xa6u\x0b\x90\x82Yt\x000Am\xff\x00\xc1\xa7<\xd5\\\x90\x8c\xdfcX]\xf3\xcdq8Y\x17n\xe3\xd7\xbd*\x96\xcf\x0cl\x18\x02\x17\xdc\xf5\xad?\\\xf0>\xabh\xea~\xe6fRr\x1a1\xbb\x9f\xf1Y\xbe\xa6\xd2!u\x91\ns\x821\x821\xefT\x17=\r\xac\xfc\xc2c8-\xe9ll~\xf5%n\xf5\xe9Q\xb1\x1c\x83\xcd@\xdcN`\x04\x94%\x0bp\xa0\xe3\x04\xd5eu\xa9\xedg\x95VF\x89On\xc7\x15?pa\x9fr/\xa9\xd7\xb9<}*\xa7yh\xed\xbb+\xb4\xf3\x81T\xb3Y\xca\n\xe0j\nj\\.\x87:\xb6$T\xf5\x97\x8a\xede>L\xc1C\xf1\x93\xbb\x8e}\xea\xe3\xe4\xc6\x12\'\x0c\x00\xdb\xc1\x1d\xc7\xc5|\xef=\xbd\xe17\x12\xc4\x84\x10\xc7\xa88?\x15\xa1}\x9d\xe9\xfa\xc5\xff\x00\x89t\xbd/S\x9e\xf6\xd2+\x95`\xaeS\r\x80\x85\x94\r\xe3\x18l`\x1a\x0fI\xf3a2\xb4$\x8d\xbdA{\xfd\xa9\xc9\n %e\x03\x00\x92\xa4\xd6\xbf\xa7h\xda\xce\xac\xe6K+&\x95\x14\xec~@@z\xf2Mj~\x1d\xf0\x85\xbe\x97\x17\x99}\x14W\x17%\x83\x0e2\x91\x11\xd9s\xd4\xfc\xd5\xabH\xb5\xb4\xd2\xada\xb7\x85\x02F\x83\x0b\xef\xcfROr{\x9aZ\xf6\xea\x15\'kt\xae,=2\xca\xd3\xf1\x92\xdc\'\x9a?\x96B\xbbg\xb8\x15W%\xc4\x92eF\xcb\x9e\xdc\x9a\xe4\xb7\x0c\xa4\x0f\x9a\xf6\x0b\xe4@\x15\x8f\x19\x18\xa89/\xc6\xfc\x06\x03\xf5\xa8\xb7\xbf*\xcc3\x81\xdcu\xac\xb4\x9e4\x8a\xd2eh\x1fQ\x05\x94\x9cj\xc8\xa6\xbc\xa6\xabf\xa1i\xa7j\x91\x88\xeem\xd2P9\\\xf5\x07\xdc\x11\xd2\xaa\x13xGA\x13\xab\x83<\x7f\x880\xdf\x90I\x1dzg\x8a\x0f\x88V\'P\xe4\x04=[\xda\xb8}Uf`\x14\x1cd\x9c\xf5\xcdI\xba\xf1WL\xbdA!\x82&\x90\xb8\xfc\xf1\xf3\x8d\xc5p<\xb1\xe4+\x90>\rU\xfcG\xe1\xb4\xb1\xb07z{H\xe6\x1c\x19\xa3s\x90GB\xc3\x1d>k.\xbc\xfb\xd5\xc4\xd1\x84\x98\xc2\xca\xea\xd8\x03\xd8\xf4\xe7\xfb\xd6\x9d\xe2O\x1bi\xfa/\x99e%\xdc)v\xf1d\xac\x84m@\xfcz\x87s\xf1Yy\xd7\xb46\xda?hZ\xa9\x00\x05>b\x9c\xe3\x93\xfd\xea\x1d\xa5\xaf\xe3\x01\xb8\x11\x88\xd4\xb7\xa3\xd3\xb1\x1f\x03\xb5Y[\xcd0OP\'\xd8\xd4\xd8\xbb\x96\x1d\xbb\xe4|\xb0\xc9#\xe3\xdf\xe2\xa74\x96\xd6/g\x02\xd0\xb0\x0b\x82\xe5\xf3\xe5\xa8=\xdb\xfe)\x7f\x0fxf\xf3\xc4\x86\x0b\x96\xb8X\xac\x10\xff\x00\xac\x98\xdf!\xee\x10\x7frzV\xa8\xd66\xbau\xa0\xb4\xb3\x81R1\x9e3\xc9\'\xa9by\'\xe6\x89\xfacZC%\xe7\xa9V?\xc9\x8d\x8b\x11\xed\x8f\x9e\xf5\xc9/\x02\xfa\x06\x0b\x1e}\x85U@kvEk\xa9.0\xde\xbc\xfaT\x8fe\x03\x9c~uf\xb6\xd5\x968\xd5\x02)P:d\xd5n\xe9H*02\xbe\xd4\xd9\xa4\n\x06N\xd3\xd4|\xd62\x1e\xbb\xd5\xe0\x9f\xcf\x82\xf6X\x9c\xed\xa4\x12F=\xb0sL;\x17\x18c\x9cU\xa6Mcw\n\xaa\x06z\n\xea\xebV\x8eH\xb6\x88\xc6\xed\xbc\x9e\xd9\xfaU.I\xf0=.\x01\xcf\xe7MM\xeb\xab2\x93\x9c\n\x92\xbd{\xc4\x04\\c\xa9\xca|\xe5\n\xf9\xdfa\xed\x9e9\xed\\\x05F\x0f\xb7\xcdM\\@\xd7\t\xba\x1b\xa4\x85\x8f\x1b\\\x1d\x84\xfdGO\xd2\xaa:\x9bj:Q\x8d\xae^=\x92\x12Q\xd0\xeeRW\x823R\xe6\xf3r\xed\xe4\x0f\x9aP\xfd\xda\xfa\xce[[\xa8\xfc\xc8%\\:\x9e\xa0\x8e\x85Ob;\x1a\x8f\x15\xdb\xa8Ar\x85\x808\xd6\t\xd5\xbfs\x93\x83O-\xe3+\x00H \xf3TG\xd6\xee\xaeX!\xb8+\x92v\x9d\xd8\x04\xf5\xea:W\x1f\xb4\x1b\xf0\xc9*\xb9\'\xa1l\xe7\xebTm^\xda\xefG\xd5/t\xd1&\xf9a\xf5D@\xc8eq\x95c\xf9\x1f\xd6\xa3\xac.f\x16\xb7\r-\xd0\x05[\xf1\x1f\xc4\x0f\xcf\xfc\xd6\xb3\xfd,H\x81\xc3\x82\x08R=\xce{\xd5\x80\x93*\x08\xc6+E{\xb9#\xde\x81@\xc9\x05\xbe1\\C\xa8\xc8\xc1\xc6\xdd\xca\x01\xe4\xf5\xce8\xfc\xaa\x9e\xda\xb2\xc6\xbec]FY\xf9\x11\xee\x1c\x8e\x9f\xd6\xba\x9bT\xb4\x8e\x17U\xb8\xf5O\xb7b\x8f\xc5\xc9\xc1\x04\xfb\n\xe7\xfac6\xdar;Wu\x9e\xe2\xae\x10\xdc\x98\xda9\x04\x9c\xed;\xa3+\x91\x93JK{3+a\x8e\xdcd\xaex\xe2\xaav7\xf1\xc8\xc57c\xca nc\xe9=\xf3\x9fz{=\xcc\xb2\xb3\xa0xv\x90\x08l\xe0\x8cv\xf9\xcds\xf0\x12j\xc6\x08\x19\xda\x92d\xdfz\x91\x87U\x99\xa6$(P\xa0\xf7\xcej^\xcfPi\x11\xd9\xd4g={{\xd5LM\x04Q,\x8e\xdb\x18\xf4\xff\x00q\x1ct\x14\xc9\xf5\xf4\x81\xe6H\x818`B\xbfC\xee\x0f\xb1\xae\xbfNf\xf4\xaa\x85\xdb\xf4\xa3\xcc\x07;qW\xf9\xafZvP\xbbs\x9e\x00\x1cq\xefK\x9b\xf9\xe2\r\xe60+\x9cq\x9f\xedY\xbak\xb7\x17\x17\x08P\x0bs\t\xfa\x86\'\x8c}*r\rU\xae#u\x1e\x91\xb8\xaes\x9e\xbcd\x03\xed]\xff\x00O\x91\t\x1ea\xc9\xe4\x81Ig\xd8eA\x1fZ\x9b\xba\xd6\xe6p\x02@\xc4\xfb\x9e)T\xd5n\x85\xb9\x059\xe4\xe7\xb0\x02\xa1\x05\xc5\xa5\xbf\xdd\x97\xef`\x97R\xe3y\x1b\x88\x1dO=@\xa4ou=:\x0bG\x9eK\xc5H\x9b8\x00\xf2\xdf\n\x07\'\xf2\xae\xb5\x84\xda\x867f\x188\xceH5\xcf1\x08\x00)\xe7\xda\xac\x0bz\'\x8d\x8be[\'\x18\x1d\xfd\xf1K\xc3\x94\xc4\x98\xdeA\xc7<sT\xbb\x7f\x11\xda3\xdb\xc7er\xb2\x97\xfc+\x82\xa4\xf1\xceO@=\xe9\xc9\xd7\xb2\xff\x00\xea\xb0\x00\xe0\x80\x00\x00\xfcg\xfb\xd2\r\x83\xa9]A\x81\xcfq\xfdsAr\x01\xc7\x15l{\xc8\xd0:\xcb\x13\r\xcd\xfc<\xe0\xf6\xae<\xe8&B\x19H\x1f\x87$\xf5\xf9\xe3\xa5U\x1b\xc4h\xc1\x91\x88\xf4\x9e\xa3\x04\x80>{\xd3i\xf5\x99f\x8d\xe3GT\x04\xf0X\x0c\x9es\xc9\xae\x9b1\x8d\xf7=\x89\\\x01I\x0c\xd9\xc6\x08\xf7\xde\xac\xf7\x0ccP#\x00\x82\x00\x0c\xa7\xa7=**\xea\xe6\xd5\x90\xbbJ\xc5\xb2G\x03w=\x0eMU\x17Z\x96\xd9\x81\x91\xd9\x95I9\xcey=1M%\xd5\xca\xc5\xbbz\xed\xe7*v\x8c\nv>\x9e\xe0\x8fNrv\xa5e\xbd\xeb\xea\xbd\x0e\xf2\t\xbc!\xa1\xa4Ro"\xdf\r\xef\x9d\xc4\x9a\xadkW\x0258\xe0\x9e\xb5\x07\xf6_\xad\xa6\xad\xa2\xdci\xa5\xc1\xb8\xb1\x90\x903\xf8\xa1\x90\xe4\x1f\xc8\xe4W~8w\xb2\xb6\x0eA\n\xeaFzr;~u\x9d\xea\x91\xdd\xdcu\xc8\x85\xc4`z\x12(\xc8\x04)T\x18\x1f|sTW\x99\x8cI\xff\x00\xe4I\xfb\xd5\x1a\xfb\\\x16\xe4\xed$\xb6x\xc1\xc6~\x95Q\xbd\xf15\xd3o+.\xdf\x80O\x19\xa8-[Qq\xb9\xdc\x85\x03\x8e\xbf\xd2\xa9s\xea\x8b#\x11\x92\x00<\xd6\xdf\xa7\xf4X\xd9U\x8cA\xbd\xcf5^\xb1\xc9 \x1d\xea\xd5>\xb3q+\x12\xf3\x12H\xfa\xff\x00z\xb8\xf8;\xc7\xd7\x9e\x18\xb8\t!762\x91\xe6\xdb\xe4e\x7f\xdc\x99\xe8\xdf\x1d\rc\x82\xfa2F2>h\x17\nNrx\xf7\xefW\x0f\xd3"t\xd0\xd1\xe0\r\xc6\xdc\x1f\x8aZ\xc6al\x83\xbf\xed_\xa0zN\xa3\xa6\xeb\x16\xf0\xdfX\xdc\xa4\xb6\xd2\x8e\xa0\xfe\x16\xf6a\xfc\'\xdcT\xad\xc4Q\x08\xdd\xdd\x95\x15FX\xb1\xc0P9\xc9\'\xa0\x1d\xeb\xe1?\x0e\xf8\x93W\xf0\xfc\xe2\xe3O\xbe\x92\x12\xc4oL\xe5\x1c\x0e\xcc\xa7\x82*\xeb\xac\xfd\xa1\xeb\xfe#e\x82iV\xde\xd3\n\x1a\xde\x1e\x14\x91\xdd\xc9\xe5\xbe\x87\x8a\xae\xfc\x19\x81\'\x8f\xca\x8d\x95\xb8n\x0f\xe9C\xce\xab\xb9\xce}\xa9\x7f\x17k\t\xabx\x8a\xfex\t0\x07\x11\xc2\xde\xe9\x1a\xed\x07\xff\x00\xbb\x19\xa6\x16\xd3J\xa0\x15c\x8c\xd3\x08\xa1o1\x81\xe4\xb1\xef\xd0\x9a\xb0Ah\xca\x9c\xafR*\x04\xc6(\xd1P\x01\x80\x00\x15\x01\xa6\x05\x89\xa9[\x0b\xb7,\x17\x07\xf1s\xedW\xad6gVP\xc4\x90{\xd5OO\xb2\x0c\xc0\x007c5q\xb4\xb7p\xbb\x1b\x82\x80c\x9c\x7fz\xca\xf5\x17\x88\xea\x00\x0f\x9a~\x19\x1b \xd5\xe7K\x95\xa3+&F\x01\xe0\xd6\x7f\xe3k\x05\xd3\xf5\x04\xbc\x88(\xb5\xbb,\xe8\x06=2\x7f\x12\xfd\x0er*\xd3\x0c\xcd\x1a\x80\xcd\x80z\x9f\x8a\xcb>\xd7<P\x9an\x97\xa5\xd8?\x96\x1a\xe2\xe1\xa6I\x19\xb9U\x88m\xc0\x1f\xee-\xfd)\xce\x8b4\xb7O\x07LH\x8b+\xb3>y\xc3\x00w\x1fj\xba\xb2v\xf3\xd7I\xdd\xb6\xc7\xc5-\x05\xec\x060\x03\x1c\x80O=\xf1\xfd\xa9\xbd\xd5\xc3<j\xd1\xb1W<\xf5\xe3\xf3\xac:O\x1a\xc7\x12ok\x88\xce\x17\xa1!y\xa8\xb6\xfbAl\x81\tY\x18\xfe \x1c\x9cV\xaa?\x0b\xde\xb3jX\xf8=\xc6\xd5y\xa5\x87-[\xdak)\x03,S\xb8`\x06\x0b\xa8\xcdv\xfa\xcd\x9c\x91\xfa.\x08=y\xe3\x1f\xf7\xaf\x9c\x9b\xc5\xd7\xf3\x04\x1fv\x93\x8e\x08\x04c\x1f\x15\xdc\xda\xfd\xe4\xa5O\xdd\x99\xc0\x18\xc1!@\xa9_\xfd)&Af\n{\xe0\x8cW2\xbf\xee\xdf\xeb[\xe5\xc6\xb7m\x1cA\x85\xea)\xdb\xc8,I\x18\xfaT|^0b\x98K\xb2\x13w;\x97\x1b\x87@Eav\xf7\xda\xa4\xad\xb5\xe2]\xbb\xb3\xc3\x1c\xd4\xc5\xbd\xae\xa5p\xad\x1a#\x03&8\x1c\xf2)\xd3\xe1\xebh\x01\x12J\xa7\xe7#\x8aC:(\xdd\xc5o\xbe\x11\xf1k\xc9\xe2\xbb\x0bY$m\xf7\x02H\x91\x98\x82\x06P\xe3\x8fsZ\xad\xf4\xc5T\x92\xdd\x06I\xf6\xc5|\xc3\xe1o\x06k\x96z\xae\x9f\xa9\xcd\xa9yB\x1b\x98\xe5H\xd5C1\xd8\xd9\xc6s\xc6}\xebs\xfbH\xd6\xc7\x87\xed\xe3H\xff\x00\x1d\xd4\xa4Dz\x8d\xa0d\x93\xf9\x1a\xc8\xf5\xbe\x9f\x0c\xd7\xf6\x10\xd8\xcc&\x07\xd2\xc1s\x80\xe7|\xef\xf0;{UM\xe3+\xc8\x9eY\xc9\xc6\r)\xe7#\x9c\x92>+\xd0Q\x89;\x80?\x15\x92Xx\x82\xf6V\x0c\xd3o\xfa\x9c\x7fJ\xbc\xd9j\xcb*\xa9|g\xa7>\xf5\x1a\xe7\xa6Om\xce\xff\x00J\x8cd\t\xe9\xa9\xf6\x8aNJ\x9d\xc7\xa8\xc5s\x19e\'<\x03\xed]\xad\xc4s\x04\xf2\xdbc\x03\xff\x00\x98>\xf4\xe0\xc4X\x06\x07\x04\x1e\x0f\xfc\xd5qb\xbb0\xc55*\x16\x19RI\xa9I\xf58\xec<9\xac\xdd<\xcb\x1f\x93\x02\xb6\xf6\x19\x00o\x00\xf1_8j\x1fhZV\xa1y\x1bOy\x10}\xec\xbe\xa9\x17\x85S\xec:\x1a\xd8\xfcK\xa3^x\x83\xc1\xfe&\xd2-\x15\xcd\xcd\xdd\xa8TE 3\x15ul\r\xd8\x1c\x81\xde\xbeq\x8b\xec\x9bRHb\xb5\xb8\xf0}\xdb\xba72\x08\xc8g=\x06\xe6S\x8c\n\xda\xf8mz\\\x9d5\xd6\xee\xe9\x90\xc7;\xaa\xc6\xac\x06A\x1a\xb5\x10H\xcf5ea*\xacE\x98\r\\o\xcd^\xe0\xfbF\xf0\xce\x9a\xd3<\x1e \x81C.\xdc)\x0cN9\x04\x83[\x96\x8aZ+(.\xee#\xff\x00\xab\xbbE\x94+\xa8\xdd\n8\xca\xaf\xc3c\x93\xdf\xb5d\xde\x13\xfb\x1d\x83N\x969u\r6\xd2\x08\xdd\xa3-\x06\xd1$\x84#\x06\xf51\xc8^\x9c\xe2\xb5\xc4\x91n\xae^F<\x97\'\x8f\x9e\x95Y\xd7\xafl\x16\x1f\xc3t\xf9\xee\x1dA>c\xb3\x0c}\x06?zM\xcc\xe7 \x00\x01<\x9e\xf8\xa7\xba\x87\x86\xb4\xcf\x10Ejo#c21+"\x9c\x12Xckw"\xa1\xbcK\x7fm\xa1\xe8z{3H\xd1[D\xb6\xad\x85$\xef\x8cm\x00\xfbd\x0c\x8c\xd6\x81\xa43#\xefd\xc9\xe3g\x1d=\xcd6\xd7|94\xdfx\x96(\x16\xea\x0b\x88\xc8\xba\xb7n\x8e\x0fQQ\xbawM\xea\x13\xf4\xb4\x9d\x96[\x88V\\\xb4\n7E\xceu\x03\xc9\xef\xb7\xb5A\x92|\xe9C\x92\xab\xda\xbe\\\xbf\xf1f\xa1t\xc4Z\x7f\xd3G\xf1\xcc\x87\xe4\x9e\xdf\x95F\xc2%\x95\x84\x93\xc8\xf219;\x98\x9f\xefZ\x1d\xf7\xd9\xf5\x94s\x13a\xa9y\'\'0^\xab\x06S\x9e\x00d\x07p\x02\x9a\xc5\xe0\x8dE[\x11\xdeYH\t\xea%#\xfa2\x8a\xbeK\xae\x9b\x1ai\x81\xe3M\xbb\xec\xdf|\xef\\2\xc7\x8fF\xff\x00\x14\xd2\xc4\xc21\x94\x07<\xe6\xadVZ\x8c\xb1\x10"\xb8\x922?\x0e\t\x1f\xfcUe\xf4\xd9\xecn\xe7\xb6\x93\x02H\x9c\xa3`\xe4n^84\xfa\xda\xd6w\xfc$\xb6\x7fJ\xab\xbaH\xd8\x92\xcf\xc7\xbfj\x8a\\\xea\'Q\x15f\x17h\xc7q\x1e\xa3\xd4\xe7\xa9\xf9\xa7\xd1\xde\x15\xda\x018\xa88ld\\\x89%U\x03\xf8@\xcd<\x8e\xde@\xa3\xd5\xc0\xeaGz\xa7\x928N}Y\xa5\x87>\xf5\'-\xfb\xe3j\xe7=\xc04\x97\xde\xeeX\x9d\xccp:b\x91\xf2\x89\x19\xc6s\xdcWd;\x80\xbbz\x7fz`G\x18\xc0\n9\xa7D\x87s\x9aF\xfa\xee\x05\xb5&k\x80\xacd]\xaaz\xb8\x1d@\xf9\x15y\xf0\xcd\xcce! \x8d\xa3\x18\xc7\xb5|\xe5u\xa8\xc9w\xab\xca\xd7\x0f\xb0#\x98\xd5\x0e}88\xfd}\xebm\xf0L\xc2a\x97`V\x04\xc9\xfc\xba\x0f\xce\xafR\xce[9\xbaqL\x172.s\xc0\xd4\x7f\xb5C\x13\xf9\xb31\x1cc\x1f\xa59\xbd\xb3S\xaaj\xcc\x91\xe3m\xcb`\xe7\x83\x93\x9aR\xcaG\xb1\xbd\x86r@1\x9d\xe0\x9fq\xd2\x95\x9a\xe5\xe0y\xd8\xa2\x96\x9efs\x9e\xdfJK\xef3\xac\x84[\xc4\xaf)\x1e\xa6+\x95\\\xfdx\xcdt\xdc\xc3\x1fQ\x13F$\xd4\xb3\x19=+\x92\xbe\xa2F\xdbf\x9e\r\x95#5g\x93\xc4\x9a\x86\xa5 3m\x94\xe3\xa5y,\xc1\xf9\x92\xcf\x06\xa0\xec\xc4\xef8\xf36o\x07\xf8@\x04~\x956\x9a\xfe\x8f\x0c\x86\xde\xeeF.\xbc>\xc5\xdd\x83[\x8e\x9f\xe2;\x9b\xa4qy{\xa3\xd4\x02\xb4\xea\xa1~\xfe\xd4\xd1\x8b|\xf7=\xf3\\\x84g\x07\x10\x81V(|z\xfa,1Y<\n\xec\xab\xe9^\xff\x00\x9dBO\xaaX}\xdeG\xb2t-\xfc,\xc7\x91\xf9U^\xd6\xd5\xaen\x1e\xe2F\xf3dl\x16c\xcdX\xddu\xb9:d*m\'\x82Y\xa5\xc6J\x05e\xc0\xa5&\xa5l\xab\x10x\xda\xb6o\x0cx\x9bT\xd5\xb5"\x97\x11\x8f&X\xcb(\x1cl"\xb4z\xc24\xdb\xc9\xec&\x8aX\\\r\x84d\x0e\xff\x00\x06\xb6\xfbK\x84\xbb\xb6\x86t\xe9"\x06\xadgE\xea\x9f\xeav\x8a\xce\x7f\x8c\x98\x12l\x009\xee1\xda\xac-\x1c\x90\xca\xccI\xceF}\xa9\xc5\x14QW\x152\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a\xc4\xbcix\xf7Z\xdc\x88\xc8T[\xa8\x8dA=A\xe4\x9f\xce\xb6\xda\xc3\xbcq\x87\xd6\xee\x1e \tUP\xc3\xdc\x81Y\xef\x13\xb3/H\x9b\r\x8c\xba\x82=\xc7\xb5E\xbb\xfc\x89\xbf\xf3UU\xd1@9\\\x8f\xedM\x00X\xa4\x8d\xd1\x97*\xc0\x81\xedN\xa3\x98\xc9\x19\x05v\xed\xeej>tF\xc3#\x1d\xc3\xe3\x15\xe2\xb7\xb3\xf9`\xb2\x91\x91\xb8\xce\xc7\xedQ\x06*~\xc7\xc4\x93\xe9\xb7+4k,l\x0e\tR\n\xb0\xf9\x07\xa8\xab\xb4\xff\x00ip\xfd\xd3\x11X\xc9\xe7\x91\x8d\xc4\x80\xa0\xfb\x81Y*\x89Hb\xc0\xf1\xdb\xb7\xe6i\x0fF\x18u\'\xb88\x14\x9b?\x19\xf5\xeb\x0by \x82\xe1\x04g\xf2\x92\x80\x95\xcfu\xf6\xa7Ad\xe1\x88\x07\xb5X\xaf\xb5\xb7\xbd9}\xe4\x9eI\xebL\xado\xe7\x82Uer\x84\x1e\x18\x1cT#8\x00\xfa@>\xfb\xab\x9f\xbc2\x9c\x0e\xbfZ\xa3\x92\xf6\xfei|\xe6\xb9s.s\xaf;\xe7\xdf4\x06\x02\xbe\x9a\xf0\xb6\xaf\xfb[L\x8d\x9eM\xd3G\xe9s\x9eN:\x1a\x9e\x9a\xea\xde\xd9KM2 \xf9 W\xcb\xd6\x1a\xdc\xfan\x1bk2H@*\x0e\x08\x03\xa9SR\xed\xabY\xde\xef\xdb,\xb1\x95\x00\xfa\xf9\xeb\xf4\xce+\xd6:\x7f\xfdC\x85:e\xb8\xb8\xb72]F\x81d\xcb\x84\x0cF\xda\xb2G\x7f\xebO\t\x88\x1av\xcf\xb9\xad#Y\xfbC\x8a\xd1\xc4:v\x97=\xe3\xb3\x84\xf3\x0f\xa2 OrO8\x15\x9f\xf8\xcfH\xfd\xb9c&\xa2\xd76\xc9w\x14[\xa5X\xb8\x88\x80?\x08\xef\xf9\xd4L\xecJ\xb4\x81\x83(\x1f\x89Nq\xf5\xefPW3I,r#\xb1!\xcf~\xe2\xa1\x1f\xfa\x93+\xad\xc2K\xd3\x90\xa4\x83\x11\x85li\xf6$\x9c\xe7zi\xf2YX\xc8r7\xf8\xac\xd9\xed\xae\xe3\x91\x9f\xd3\xb9{(\xcf_\x93P\x9a\x84w.\xc1\x9c\x05\xc0\xc7\xb1\xc5h\xabk\xbd\xa5\x04\xa8\x00\xe0\x1cd\xfc\xd3\x01\xa1^jW\t\r\xb9Vc\xd3\xa8!{\x92{\x01Y\xd8\xfcA};\xe9{\x83\xb9\xe0\x0cs\xf4\xa9"~\x08\x1b\xd5\x06\x0f\x16k\xba&\x99s\xa6X\xdd\xa4P\xcd0\x95\xbft\x8c\xfb\xc7p\xcc2:T\xff\x00\x84\xbcA\xe3\x7f\x16\xf8\x97J\xb5\xba\xd6\xaee\x869\xa2\x9ew;p\x90\xdb0rr\x07\x1d0=\xc9\xad\x01>\xcc\xbc6J\xfd\xeaK\xbb\xa9\x00\xf5\xe2A\x1a\x13\xf0\x00\'\x1f\x9d[t\xad\x13L\xd1|\xc5\xd3t\xe8-U\xd1U\xcags\x80s\x86$\x92@\xeb\xd6\xa4\\\xf8\xfd\xad\xad\x1e\xde\x0b\xeb\x99X!@\x81\x98F;`\xee2(\x10F\xef\xad\xa1B\xc4\xe7Q\x199\xab\xe9\xbf\\3;`d\x95\x15\x15q\xa8\xa9\xc9\x0c\xdf\xda\xa3\xc8v\xf5\x17\xff\x00\xb5G\xde(A\xcbn8\xcf\x06\xbc\xc1\xaf.\xaeB\xa4\xb3\xb3o\xbe3\x93\xf5\xa9\x18E\xdc\n\xf6\xe7QT\x01\x94\x93\xf4\xa8\xe6\xd4\xd2\\\x00\xc0\x1a\x8b\xb8\x95W \xa0?\x9dB\\\xdd[D<\xc7\x05\x06x\xc5L\x82\xc9\x18\x00\x14\xe7\xb1\xa6\xd9\xf3\xc1\x15b\xba\x9f\x7f\x1b\x81\xa9\xad*6\x86\xc9\xef\x0b\x06\xdb\xbfb\x8epTu?>\xc2\xb3\xa8\xbcA\xa6\x86Uk\xc5L\xff\x00\xfbN?\xa9\xe2\xae\x9aM\xfced\x84\xb8h\xae\x17i*~1\x90zdT\x89\xad\xe4\xb7OTl\xbd\xc3\x11\xed\xde\x98*\x0b\xea;\x8a\xf9\x9bX\xd1n5}F\xf3P\xb9\x95\xe4\xb9\xb8\x95\x9d\x86\xff\x00H\xc9\xe0\x0f\x808\xa6\x9a7\xd9\xfd\xef\x895\xcb->\x08J\xf9\xb2\x00\xf2\x7f\n \xfcNq\xec?\xadm\x9a\xe7\x85\'\xb6\x12M\x00Y\xe1\x1c\x96N\x19@\xfee\xeb\xfaqZ\'\xd9f\x83\x1d\x8d\x96\xa1\xabH\x99{\xa6\x10\xc6OQ\x1c|\x9c}[\xfbW\xa3tn\xa8\xd7m\x14qL\xa25N\xdc"\x81\xc6\xdcT\x83t\xea\xa7\x90@\xc0\x1d\xabB\xb2\xd3\xed4K\x0bK\x1b\x18\x846\xf6\xd1,h\xa3\xf9Tc\x9fr{\x9am~\xec\xc9\xb8\xb89\xc1\xc7\xfcT\x8c\xf3n`\x00\x04c\xe9\xd6\xa0/fb\xfe\xac\xe1p8\xe83U~+\xb9\x8cY\\,e\x8a\x93\xa1Td\x0c\x9eO\xb5AF%\xf2N\xfc\xe6\xa2g;\x94\x9c\xfdj2c\xeeq\xc74\xfaFWc\x86%@\xeb\xd0T-\xfc\xc9\xf8\x17\xae:\xf5\xc0\xaf6\xb7BX\x0c\x7f\xc5H\xceO4\xd2I2I\x07\xe9MD\x85\xb3\xc8\xe3\x82M \xf2\x97\xfc+\xb4\x1e\x9c\xe74\xd4\xcaT`.y\xcfsV\xe9\x16\xdf4\xf2\x8cc\x82*aU\x8er8\xc6i\xfd\xbf\xe0\x90g\xaf8\xaa]\xc7\x88\xac4\xf6\xff\x00\xac\xbe\xb6\x84\x8cq$\x80\x1f\xd3\xadHi\x1e-\xd0\xf5\x99E\xbd\xa6\xa1\x0b\xce\xe4\xaa\xa6p\xc4\xfcg\xadv[+\xbf(\xc8-\xe41\x8d\xcb\x85%G\xde\x91*d\x16\x1d\xab\x04\xfba\xf1\xad\xd7\x87\xfcr"\x82\x1f5\x7ff\xda3\xa8b\xa4\x96C\xc7\x15\x967\xda}\xdc\xad/\x9b\xa3\xc6\x03\x1e\x81\xb1\x9f\xaeEi\x9fk\x9e\x0f\xd7e\xf1\x96\xa3{\xf7X\x9e\x0b\xa0\x9fvep\x0b$H\x13\x1e\xacz\x81\x1c\x8a\xc6\xa7\xf0\xbe\xb8\xae?\xfc\x9a\xe7\x9e\x87fG\xea+\xdb:\x1c]\x06n\x95\xd3D\x8b\x03H-\xa3\x0c|\xdcz\x80\xc1\xd8\x11\xb85an\xf8\x8a?X\xd9GaR\x92}\xa4\x82\xe1\xff\x00b!a\xf8s\'\x1f\xda\x99\xa7\xda,\xa2G\x95\xec\\\xc8s\x8cH6\x8c\xf6\xe4t\xa8\xf5\xf0\xc6\xb4\xdb\x8f\xeck\x9cd\xff\x00\xf4\xeaF\xcf\xc0^#\xd4\x0c\x86\xdbC\xb8\x90F2\xe4&v\x8f\x9cg\x15na\xf0\xec*K\x88\x94c\x04\x99\xbf\xc9\xa7\x0c\xc7\xb3\x8f\xda\x9d\xff\x00\xf8\x8biq\x95\x9a\xc6TP\tV\x0c\x18\xee#\x1f\x1cT\xd5\xaf\xda\xa5\xa4PG\x0c\x96\xf2\xb1E\xc2\xca\xcb\xdb\xe4\x03^i\xbfc\x1e\'\xd4e\x89\r\x83\xc6\\\x16\xc9\x89\xf6\xed\x1c\x92Y\x80\x1d?^\xd5\xa1K\xff\x00\xf2\xdd\xa9\xe9\xf7Q\xac3[j\x80\xa6\xef5e\x11\xc6\xa4ve|\x1c\x9e\xd5\x1aH\xbc7,d\xa8i\x02\xb6\x02\xa3\x13\xbf\xc6i\xb6\xbaE\xd9\xa4\\\x9f\x8a\xa0\xaf\xda\x842\xedcg3aq\xb8!8\xf9\xe4\xd2R}\xa5Y\xbe\xfc\xc50#\xa3\x08\xfb\xfb\x9a\xd1n\xfe\xcau{\x11"\xcd\xa3\x00\xa8v\x92\xa08\xc8\x1c\xf0\xa4\xd5j\xeb\xc02\x95d\x93Bm\xb9\xe4\x84\xdaz|\xe0\xd5J\\xm\xdd\xbf\x84\xc3Ka\xbf\x886>\xc7=\xfe+\xa2u\xf7S\xf2*\x997\xdaXW\x1b\x16V\x00\x83\xc0\x18\xff\x00\xc1M\xe7\xf1\xfc2\xa6\xe1\xe6o\xe9\x82O\xf8\xa9\xd3\xe0k;|\xe3H\x97p9\xf5\xab>G\xc7j\xec\xe8\x90DB\xad\x91N\xc0yx?\xa6*\xc1d\xe8#I\x8a\xd5\xce;\xea\x03?\xa6i?\x88\xdf\xb7\xe9UX\xfc]\xa9\\:\x18,\xe4m\x83\n\xf9#\x19\xfa\xf4\xa7\x91\xeaZ\xfc\xcc\n/C\x9d\xacr\x01\xabU\xa6\x859\x0f\x98\x02\xaex\xdd\x80~\x95g\xb7\xf0\xe6\xd5@\x033\x12\x0bm\x1d\x14S\x17\x1dK\xa6\xc2N\x8bh\x87m\xce\xaaK\\\x1f\x81X\xfc\x97^(\xb5\xc1\x8e\xda\\\x02x\x89\xce}\xfapi\x83x\x93]\xb5dv\xb3\xb8FN\xf2+\x11\xfds[\xc4\xba3Fx\x8d@\x1d\xb1\xfd\xeb\xc8\xb4\xb7\x90\xa6\xe5\'#\x91\x8e\x00\xa4/]\xb2+\x97\xb1\x85\xc67\xc1#?\xd6\x93\xf8\x93\xefXu\xbf\xda\x16\xaa.c7\x13Hb\x07\xd4\xa8\x13p\xfadS\x9dG\xed\x1bP\x96y\x05\x92\xec\x87\xa2\xb3\xa8\xde~O\\}+G\xd7<;\xa5\xcadY\xaccn\x17-\x80\x1b\'\xd8\x8ej\x85{\xe0\xdbd\x02[9\x08\x07\x1e\x899\x1f\xadX\xda\xddt\x1b\x92\x925\x88\x8c\xe3\x00\x10\n\xfb\xf6\xefJ[\x80N\xec?J\x8d\x83\xc7\x1a\xfc\xd8W\x96"\x07L\xa0\x03\xfaT\x94~!\xd5\xef\x0e\xc7\x9e-\xa4\xe7\x1e^M1\xb3\xd1\xcd\xbd\xc1Y\xe1\x08~z~\xb5t\xb0\xb1E\xf2\xd9\x13.\xe4\x05\xe3\xa7<qN]\xbfN\x87x\xad"\xe3b\x00\xc5q\xe6#\xbe\xd5`\xf0/\x8a\xb5?\rx\x87N\xd4\xd0\x99"\x85\xf6\xcf\n\r\xbedM\xc3/?\xd3\xe6\xbe\xe0H\xb4\x1f\x1c\xe8l\xc9*M\x15\xc2\x86h\xcf\xa6D=G\x1dU\x87\xbd|\xa1\xe1\xcf\r\xb0\x9a9\x1d#\x0crTI\xc9\xcfs\x81[\x06\x97\x13[\x82\xca\xc5$\xfc\'o\x1bJ\xf1\x81\x8a\xf3\x8e\xbb\xd4\xec\xa4\x93I\xb7\x12\x05\x07\xf2\xb6\x82\x1b\xb3)\x03\x91\xefU\x973+\xb7\x19<\x1f\x91Yo\x8c\xbe\xc7|cm{,\xbax\xfd\xa5i\xd6=\xa5VP;\xa9By\xc7\xb8\xebX\xc6\xa5\xa3j\xdaD\xad\r\xf6\x9duh\xd98Y\xe3d\'\xe9\xb8s\xf9W\xdb"\xe2W>\xa9\x1f8\xc0%\xba\x91]L\xb1\xeaV\xadg}\x02^[I\xe9x&\x1b\xd0\x8fp\x0fC\xf29\xa8v>3\x9e\xd8$w\x16\xcb$k\x81\xa9p\x1f\x1e\xe7\x18\x07\xf6\xa6V\xe3H\xd2\x10\x01_\n\xc7\x1c\x8e\xdbS$\x91\xd0\x0c\xd3\xf8\xa0\x91\x93vx\x07\x05\xbb~\xb5\xf4w\x86~\xcf#\xd0\xfe\xd1/\'\x88\x13aif.\xed\x0b\x9c\xb07\x1b\xa3Tc\xdc\xa1\r\xcf\xc0\xadB\xe6E\xb7P\x91\xaa*\x11\xf86.\xdf\xd3\x18\xab\xce\xa5\xe2\xcb{W\x81a\x87\xce\x12F\xae\x08m;0\xcf\xb1\xedMH\xe4\x83\x9d\xab\xe3{T\xce\xd1\x92FFqW=\x1fO\x132\xbb\xa9+\xb8\x0c{\xd6\xf3\x7f\xe1\xbf\x0c\xeb\xd02\xdc\xd8Cmp\xc3+uj\x8b\x1c\x80\x8f\xe6\x03\x01\x87\xb8?\xadu\xa7\xf8\r-\x95<\x9b\xfb[\x80\x08\x03\x07c\xf3\xfe\xd6\xe9U7>%\xb5\xb8\x81\x8ca\xd1\xf8(\x7f0\xfd9\xa8\x12E+\x91\xa0\x06\x07\xb8\xaaE\xbe\x8f\x1c\x85\x0e\xc6\xe3\x90A=~\x95d\x8fDv\xdb\xc1\xce3\xc0\x03\xff\x00\r_m\xbc/s\x12\x82-\xc1\x1d\x01\x0c\xa4~\xb5%\x0e\x9f\x0c\x04\x1b\x8b\x84Q\x8f\xc2\x9c\x9c\xfdzV^\xe6\xea\xf8\xe9&\'\x8dO\xe5i}\x00\xfd\x0bb\x97\x1d\xa3\x9f\xcd\xde\xa9V:Q\x89\x99\x81`q\x82A\xebR\xebf\xc5\xbd#\x92@\xabR[\xe9r ?{h\xd8\x0ca\x97?\xda\x9eEki\xc7\x974nH\xeax\xe7\xe8j\x17\xe1\xee\xee\x1d\x0f\x99\t\x0e\x01\x18\x95\x0bc\xff\x00\xc4\x1c\xd4\xc4\xb7\n1\xedUck\xe8\n\x0epq\x83\xef_\x11\xfd\xb5j3k\x9e1\xbd\x82)\x0b\xdb\xe9\xea\xb6\x91\xa8\xce7G\xcb\x9f\xcd\x89\xaf\xb5\xfcc\xad\xd8xGL\x97Q\x9c\x92\xc4\x95\xb7\x80~)e# \x0f\x81\xd4\x9e\xc2\xbe\x1e]:k\xa9\xa5\x9eV\r$\xae]\xdd\xb9\xcb1\xc95\xbd\xf0U\x9f\xfal\xf77\xb3\xaf\xa9WDd\xf0s\xb9"\xac\xac\x94+\x97;\x000+0\x83A\xb9\x95\x810\xf1\xeeO\x15j\xb2\xd0\xe5\x85\x00\x12\x04\xc8\xec\xa3\x93W\x84\xd2\x98\xed\n\xe0\x93\xd7\x03\x8a\x99\xb7\xd3\x81\x040\x00\xa9\xc6@\xff\x00\x9a\xdb\xddu\xd7u\xc6\xa1\x8fl\x7f\x9a\xb0i\x94\xd5\x03\xf6}\xf5\xa0\x0f \r\x11\xea\xc0r\x07\xb9\xa9KhP\xe0\x81\x92{\x9fj\xd1\x06\x8e\xf3\xdb\xb4[\x15\xb7\xae>\x83\xde\xaa\xd0i\xeb\xa6\xdc\xc9g37\xe2\xcc\x0cz0\xfe_\xa8\xaa\xd5\xeaKr\xb2\x0c\x8dk\xbe\x17\xb8\xf7\xa8\xef&T\xe98#\xb0\xa9\x1b\r>\'\x8c\x83\x18\x05\x87$\x8e\xdf\x15t\xb5\xb7\xfb\xb3E\x1a\x8d\xfb\x80\'\x18\x18\xc7o\xce\xa0\xed %w$\x84\x10z\x1eEY\x04/\x01\x82B\xc4\xe3 \x93\xdf<\x8e\x95\x9d\xbd\x99\x9d\x88/\xcev>\xf5Q,\xees\xb9\xab\\n\xea`\x1e`\x07a%@\xc63P\xff\x00k\x8en\xb4_\x07\xde\x10\x08\xc4\x90\xcb \xfe\x07\x00\x00\x08\xf6;jB\x162\xbc\x7f\xbb\xc6\x14\xe3\x91\xc0\x1e\xdf4\xb7\x8ctU\xd6\xfc\x03\xac\xda(f\xb8\xb2Cyj\xdd\xc3F9\xc7\xd4dU\x15\x9c\xebk\xd4l\x19\xf0\x14\xce\xaa\xc7\xfd\xba\xb2\xba\xb6\xf6\xcdv\xd1\xc3\xdc\xc4\xac\xd8\x0c\xc0\x13\xed\x9d\xab\x15\xd2\xa5!\xc2n\xef\xd3\xb1\xab\xc5\x9c\xcd\x16\t#\xaf_\xad|\xe7a\xe2\rF\xc5\x93p\x12\xaa\xf4\xcf\x07\x1fZ\xd8\xbc7\xe2\xdd\'P\xd9\x0c\xd2\xf9\x12\xb0\xc0\x12t\xcf\xd7\xa5mz\xcfJ\xb9\x85ZA\x1f\x98\x9d\xcaoW]K\xc3\xfdB\xd83\x88\x8b\xa0\xee\xbb\xe2\xb4\xdb[\xfe6\xb3\x02r\x06*\xc3\x15\xfb\xac\'\r\xf8q\xb7=\xbe*\xb8\xb6\xaa\xca\xac\x17 \xf4\x91\x0f\x18\xa7\x04\xed!wzOP;V\x16h\xa2\x90\xec;\xee*\x85\x0b\xa1 \xe75\xa2\xf8V\xf7\xef:\x88\x85\xc7\xac\xaf\x1f \xd6\x81r\x96\xb6\xeae\xb8\x95"\x8d2w1\n>\x9f5\x82\xda\xdd]\xc0\xe2X\'hd\x88\xed\x0c\xa7\x04\x02:\xe6\x92\x9e\xe2\xfbP\x93}\xcd\xe4\xb2\x9c\xfe\'b\xc6\x95l"\xb7\x8eU\xd0\xacZ@\xd8<\x0c\x01\xfa\xd0\xd7>^\xc4\x12j\xe7\xaf\xf8\x99&\xf3-\xb4\xd8\xa4d9\x12O\xb4\x8c\x8e\xea\x83\xae\x0fsQ\x96bO-$\xf5`\xd4E\xbc \x10\xa5\x9b$n\x1c\xd5\xcfF\x11L\x05\xbc\xa0\x1c\x90\x03\x01\x92\t\xf7\xf7\xa8\xae\x12i#\x8be.\xd8\xcf\xc9\xd8Ts3J\xd9<\xe3\x8a\x95\xd3\xef\x9dcP\x8c\xa4\x8e\x08|\xe4U\x8e\xc3]\xb8\x8cm\x93\x07\xe0\x0f\xf3P\xe7K\x8a3\x91#u\xc7\x03\x19\xfdi\x06I\xe3\x90\xa4G\n8\xc9\xe4\x81\xfej\xf2#\xd4\xfa8\x8fD\xce\x86=\x82\xa3\x03\x91\xf4\xa09\'9\xab6\xaf\xa6\xe9\xfe"\xb2\x91\x93dW[s\x198\x07p\xe9\xf9\x1e\xf5\x91i\xad"O\xb5\xc7\xef\x15\xb0~\x1b5tW\x9a\xdeF\xdf0\xe0c\x1e\xe0\xd5\x02\xde\xe6(\xb5\x8b\x95\x88*\xc7\xe6\xb6\xc0:(\x06\xa0u\x0e\xa4:\x8b\xb4\x9f\x85\x11]F\xa4\xca\xcb\x8c9\x1bd\x81\xc1\xa5\x902\xa7\xdc\xe2\x9bj\xb7\x01\xb5\x9dQ\x99Cm\xb8a\xd38\xe7\x1f\xady\r\xd2\x06<\x01\xc7J\xa8\xf8\xca\xe2\xfb\xc3~"\x92\xe8C#i\xda\xab\x99-\xa5<\xa7\x98\xdc\xbcE\x87GS\xd0\x1e\xa2\xbd\xb3\xbe\x8e\xe6/6\'\'\xf9\x94\xf5_\x83R\'\xb0s\x1csgTr\xa8eq\xc1\xcd?-\x9b\x84Y\x14\xeaV\x19\x15y\x8aQ,\x80\xa9\xe0\x03\xb9OCR\x96\x86!\xc3)\xc7lv\xf8\xe7\xb5S-\xef\x940.\x02\x9e\x99\xecjun\xc9Q\x85\xe7\xa9\xfaUT\xb1\xc9\x13&\x06\xc3\x8a\x8829\xad"\xc3C\xd3\xee\xb0\xd1\xccK\x11\xf8J\xf0\r/w\xe1\xd1n\xe8s\xe99\xfc#\xd2q\xda\xaa\x1a^\xb6\xd0\xca\xbc\x91\xef\xcfZ\xd1\xacu\xc8.\xa3\xf2\xa5\x01\x81\x1d\xf8"\xb4\x9d?\xfd\x07\xa8@\xd0\\@\x96\x97[i|\x9d$\xfe\xa7\x9aX;s_6\xfd\xa1h\xebg\xadA,P\x84\x8e\xe6 \xc5\xb1\x80\xd2)\xc1\xcf\xcdZ~\xceU\x05\xcd\xd3\x19\x0f\xfa\x1bv\x16\xe8s\x9e\x9d\xebX\xd4\xf4m7Z\x89\xa2\x9e%\x9a\x169P\x7f\x10>\xe0\x8e\x84V\x0b\xafYO\xa3j2\xe9\xf6\x86D\x08=r\x81\x82\xc1\xb9\x18=\x86:\xd7\x03L\x8b\x12\x1d#\xca|\x06\x07*Tw\xfb\xd4c\x11IL\x83u<\x8f\x9a\xd4\xb5-CLI\x99Y\x83\xc8\x8a\xdb\x11y\xf5\x9e\x99\xf8\xa4\xf4\xa4\xdf\xea\x91\x8b)\xed\xeck;\xd1\xednV5f\xe4\x83\x81\x9e\xf9\xab\xdd\x95\xf4P\x05R@l\xf7\xf9\xaa\xe0\xcb\x1c\xc4\x927r\xc5\x82\xf3\xf1O+d\xe7\x18\xabrG\x0cE\xca\xf7\x03\x9cv\xac\xf6}\x86\xeaY\x1fq\x0f#\x10\xca\x07sV\xf95\x05H\xf2\x8a\x19\xfd\xbbUm\x19\xa5\xbb`\xf1\xe1X\xe7i\xed\xf4\xa5\xdf\xc8%\x8e00\x06\xb3\x81\x8f\x7fzt\x11M\x85\xbbF\x99[\x9d\xc1\xbaeNA\xaf\x04\xb7V\xec\x1d\x19\x94\xe3\xaa\xe7\x15a[X\xc3\x00\x07\xa4\xf0E8\xfb\x9c\xa3p1\x86\xc7_\x91]\xb6\xb5w\xc1\\\xf6\xe3&\xbb\xb5F\xd9x\x82A\x95\x96#\xbcp\x18\x0e\xbf\x95}\x11\xe0\xb9\xee$\xd1\xa3I\xed\xe6\x89\xd1\x89\x1eb\x95\xca\xb7#\x19\xebY\x07\x84\xf48\xef|Ej\x18\x0f.#\xe6\x15<\xe7\x15\xf4`\xe2\xbd[\xc1\xfd2Kky.\xe4\x95\x89\x94\x14T\xce\xd8\x04z\x8f\xce\xd5&\xd1\x18\xb9|\xe0.\xdfZ\xf6\x8a(\xad\x9dXQE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14Rs3$R2.\xe6U$/\xb9\x03\xa5|\xfd4\xb3\\\\\\\xbc\xeaw\xbc\x8c[>\xf9\xaf\xa1k!\xf1F\x9e\x96:\xa4\xd2m\x029\xc6\xf1\x8fs\xd6\xb3>)\xb7\x96k\x04t|,O\x97\x1d\xb0v\xcf\xda\xa1\xdd\xa9\xf47`q\xfa\xd5D\xdb\r\x8b\xd7\x92I\x18\xf7\xa6SZ\x7f*\x02s\xc5K\t!\x03`?\x9flR/s\x14(\xce\xdf\x88\x8c\'p\x0f\xbdx\xd7P\x8e\x06\r\xad\x80\x1aw9\xe3\x15\x19H\xda\xa0/\x08O\xfau\\*p\xdf\xeeoz\x8eh\xc9\'\x03\xb7Z\x937\x053\xea\xceI\xcey\xe7\xf3\xa6\xd2\xc8\x1eA\xb4\x03\x9e\x8a\x07\xf6\xac\xa3:\x93\x95\xc8\xcf\xf2\xe3`+\xa5\x81\xe4\xd4y@\xbe\xe4\xfb\xf6\xae\x166p\xc5\x14z\x7f\x13\x9e\x14~\x7f\xe2\x9eJ\x91\xdb(\x96\xe8\x91\x91\xe9\x84~6\xcf\xbf\xb0\xa63]\x1b\x85\xdb\xb4F\x8a}\x08\xbd\x05IT e\xf3\xf4\xa4\x17\xc6\xd9\xc7\xc58\x82kI1\x1b\x96s\x1a\xb33(\xc0\xe0\xf4\x04\xd3Iog\xde6\x84D\xcf\xe1^\x9f\x99\xef\\\xdbG\xb2;\x99\t\xe0\x80\x99\xf9\'?\xe2\x91\x90G\x18\xcb\x11\xff\x00jX\xd3\x92\xa1F\x0f\xc5\x19v\x0b\xda\xa6\xed\'hf\x8aTc\x83\xc8\xef\xc7qIjP\xed\x9eU\x07\xd3\x92\xcb\x8e8<\x8ai\xa6]\xa4\xcb NDM\x8e\x9c\x10y\xe2\xa6u8K\xad\x94\x8b\x19!\xa1\xf5\x11\xfe\xd6"\x90\xaa\xc0J\x879B\x1b\x07\xb0;~\xf9\x14\xe1$\xa8\x1e\xd5\n\xb1G\x02\x0fI\xc0\xf6\x19\x1c\xd4\xf7\x83\x81k\xeb\xe4\xc1P\xd6\xc7\xf3\xc3\na\xfb\xa7\x0c\xa4\xe0c\xa5Z|\'\xa7yb\xea\xf00m\xc7\xcaLu\xc7\xe2&\xacl\xd0\xb4\x89\x8c8\xd0\xe4\xe3\x9e\r)3\xa8|T\xa3Zm$\xed t\xcd{\xe4\x14\x00\x9f\xd3\xbdLyD\xb0~x\xc7ZO\xee\xccN\t\x04\x9e~\x95Kq\xd1\xa6\x91\xf3\x14O\xeb>\x9fo\xaf\xfcT\xd1(Q\xb9\xa8\xb6\x8c,r\xb9\x1c*\xe4|\xd5Z\xed\xff\x00\x11\'\xe7?5m\xd5\x08\x8f\xcb\x88\x1f\xe0\xc9\xaaV\xa0Yy\x19\xe9\xd2\xa1\x9b_\xc2\xdd\xbc\x04\xe5\x90\xe1\x8f\xcf\x7f\xd2\x9a\x92c\xa75\x01q0P\xcc\xcd\xc1=*\xa1\xac\x13p\xc5O<\x00\x07\xb0\xab-\xf2\x99\xdc\x81\x90\x07\x18\xfe\xf5\x9f\xf8\x9b^\xb1\xd2\x91\x8bJ\x1aS\x90\xa8\x0eI8\xc5i\xfad/$\xd1,hY\xcf\x00v\xaeAoqu \x8e4-\x93\xdb\xbdV5V\x86\x18\x8b9\n\x88\x0e\xe2j\x83\x07\x8e\xf5\r*\xe6&\xd3.\x1a!\x1c\x81\x99s\xb9\x18\x03\xd0\xa9\xe0\xe6\x98\xea\xf7w\xda\xdc\x8c\xccXG\x9c\x88\xc1\xe2\xab\xcb\xa4\xcc\x0eH \x0e\xc2\xbdB\xc7\xa6Z\xac\x05n\xcaHH\xde3\xb8\x1f_z\xd9\xd8t\x08\xa2L\xdd\x1c\xbe? \xed_z\xc1\xa9\xa5\xe5\x9d\x8d\xf4\'1\xcf\x02L\x9f\xfbdP\x7f\xcdk\xfaT\x11Y\xe8\xd6I\x1cj\x83\xc8\x0c\x14p\x01\x7fW\xf9\xaf\x99\xbe\xce\x1ei\xfc\r\xa2\xac\xad\x96\x88K\x08\'\x93\xb5$!G\xe48\xaf\xa4\xa3\x98K\xe1\xeb)\x01\xc7\xfd2\x02~@\xc7\xf8\xac/\x87\xe3\x8b\xa6]\xf8\x8c\x02\x19\xed \x94&\xfc\xaa6+\x1bt\x86)\xe6\x8b9\t!_\xd0\xe2\xa1\xee\xee\x82<\xc3\x83\x83\x85\xc7\xf7\xa8K\x8b\x97\x95\x15\x0bt\xe4\x8frk\xbb\x87.\xe4\xed\xe0\x0f\xedQroa\xb8\xab\x00O\xb5`\xe6\xba\x96\xeaY\x19\x9c\x85f\'N{\x13\x91\x9f\xa5G\'|W\x17\x13\x88\xe2\xdc[\x00v\x1e\xf5\x95\xf8\xb3\xc7\x9a?\x85\xa3W\xbf\x98\x99\xa5\xcf\x97\x04c2\xb2\x8e\xe0v\x1f&\xb4\x8dA\xa2\x83O\xbb\xb9|\x14\x82\x07\x90\xe4\xf1\x84\x04\xff\x00\x8a\xfc\xfd\xd6>\xfd\xad\xeaWz\x85\xe34\x93\\\xb9vbO\x19\xe8\x00\xf6\x1d\x00\xad\x87\x83z\x15\xb7W\x9a\xe1\xeede\x86\x025\x01\xb1b\xdc\x01\xed\xc6\xf5\xa0\xe8\x9d-\xfa\x8b\xc8A\xf4D\x17?$\xf6\xab\xbe\xab\xf6\xdb\xe2+\x8b\x8c\xe9\xd6\xf6\xf6p\x02p\xac\xbel\x8c>Y\xb8\x1f\x90\xaa\xd5\xdf\x8f\xf5\xedE\x0f\xde\xf5\x9b\x97V\xeb\x18}\x8b\xfa&\x05V\xff\x00b\xc8\x06|\xaf\xd75\xe1\xd1\xc8PJ\x8f\xa6+\xd8 \xe9}\x02\xd8 \x86\xce\x15+\xb0m \xb7\xearkL\xde\x1f$\r1\xaa\xe3\xb8\xcf\xf7\xa7\xab\xabBN\xe6~I\xc9$\xf3\x9f\x9a\xd9>\xc6f\x8bT\xf1\xb6\x9d\xceM\xa43\\g\xdfj`\x7f\xfdU\x85~\xcaf\x1f\xe9\xe3\x9fj\xd2\xbe\xccu\xb8\xfc\r\xe2\x06\xd4\'\xb0\x96\xe2\'\xb5\x92\x17X\x88\x0f\xeb\xc1\xc8\xdd\xc7j\x8d\xd7m\xd2^\x93~\x96\xd9i\xda\x16X\xd7 d\x91\x8coPn\xba\x15\xc2\xc3.\x8fQ\xd3\xb2\x8eI\xaf\xba\xae4\xeb-HG\xf7\xbbd\x95c;\xd0:\x03\xeb#\x19\x19\xfa\xd6+\xa9\xf8\'[\xd1\xe7\xf2\xed!\x96\xfe\xdeW>Q\x8dK:\x7f\xb5\xc0\xe9\xf5\xe9N4\xcf\xb6+\xddb\xf6[m;\xc3\xa9\x04QG\xbf\xcc\xb9\x97{\x92N\x00\n\x80\x0f\xebWq\xe2\x1dJH\xc4\x93\xcc?\x08;\x14mNy\xe0\n\xf1\x94N\xb1\xd1\xc8\x8aX\xd1T\xe5\xbc\x86`\xd9-\xdf\xd2N+#r\r\x8c\xa6\x19\xc3$\x98\x04\xaf\xb05\x8c\xea:V\xafb\xf1\xc3u\xa7Oo$\xcc\x16 \xea@fn\x00\x07\xa1\xad\xb6\xda\xdf\xf6\x15\x9d\xbd\x85\xa2\x08V5\x05\xca\x93\xeb\x97\x03s\x13\xdc\x93R\x1aV\xa1i\xab\\\xda\xc3t\xa9\xb3\xcdV\xc1]\xc00\xe5H\xf6 \xf7\xa9mkNx yOFb\x17\xaeM3}uw}\x04Z\xedB\xa4,L\xa06FN\x02\xb1\x1e\xdb\xedHiT\xc7\x94c\xf5\xac\x0f\xc7\xdfi:\xa6\x89}\x1e\x9d\xa7]\xb9\xba\r\x0e\xf3\xbf\x93$\xa7\xd2\xac[\x80\xbe\xf5\xf4\\6\xae\xd1a\xc2\xef(<\xcc\x1e7c\x9d\xbf\x19\xaf\x89<gm8\xf1\xae\xb6eQ\x87\x99\x1dN8\xd8Pm5\xf7\x9d\xb4Gddd\x80\x8b\xd0\x7f\xb6\xb4\x97=*\xd1-:"\xc5\x12\xea\x96"\xf2\xc8\x06K\x17U;\xfcnj\xcf\xa9Y%\xad\x97K\x95\x1f&x\x8b7\xd7\x00\xff\x00z`\x96\xd1[\x18\x8b$M\xbd\x0e\x14r@<r=\xea3Q\xd2mn\xd8\xc8\xea\xcc]\x80\xc3\x1c\x82q\xc7_\x8a\xb8\xcbi\xbd\x0b\xe0)\xcfLv\xa8\xf9-\xc0\x93,\x9c\x00q\x9e\xe4\xf7\x1fJo\xaa\xf4\xcb\x8bh\xbc\xa8\x87\x97\x1b\x15+\x8d\x86q\x82MS\xc6\xdb\xe4\xd6q?\x86\xe1\xdb \x8a\x0f,\xafr2\x07\xe5Qm\xe1\x87#-\xfb\xe3\xb8\x1c0\x04{p+W\x9e[kE\xdd+\x12O\xe1L\xe1\x8f\xd4\xfbT"j\xd3\x89$0b=\xd8\xe1F0\x07\xb5eew\xb4p\x8fxX\x83\xeb\n\xa1\x98\x0f\xa9#\xf4\xcdK\\\xb7\xbf\xc5f\xab\xa1\xb3\xc2\xc5\xec\x966\x05\xb2\xcb\x1e\x14\x0c\xe3\x9e)\xa1\xf0\xf7\x97\x134\x1bd\xdd\xf8\x8b~,\xfe]\xbd\xabY\x8f^\xbfF\xf5L\xdcv\' \xfeF\x90{\x9b\x0b\x89\x0bKa\x16Xz\x8ae\x0f=\xf8\xe2\x9e\x1dJ \x08Y%\x19<2\r?\\\x82O\xda\x82\x84\xf3\x8a\xc5\xde\xd1\xe3fy"b9\x19\xc7\x19\x1cu\xf8\xaeSN\x8aE/\xb4\xee,Kc\xa6q\x8e\x07\xfef\xb5\xa9\xb4h\xe3\x85\x1a"\x1e,`\x9c~\x12{7\xfc\xd5J\xebJ\x8b\xef3"\xb6\xcd\xaa\xad\x95\x1e\xfcr*d\x17\xe7b\xe8B\x11\x90\xc0\xecE2\xc9\xbe\x03o\x9a\xc8|E`\x89\x1a\x98\xd7,A/\xb7\xb0\x1cd\x8a\xa0\x08N\xc6\x04\xfaz\x80O\\s\x83[\xbd\xf6\x88g\xb9*\xd2\xb0\xdf\x19Rvs\xe9\xe4\x1a\xab\xdexYt\xf4yX\x99\x80=\x15}G=\x075\xa5\xb0\xea\xd0$k\x11rX\x91\xa7 \xd3\xf1.\x0e\xe75\x9bZi\x13js\xc5o\x1c\x0c\xd2LUQ@\xc9f<\x00+z\xd1~\xc7\xc5\x96\xd9.u\xebE`\xb8*\x91;0\xf7\xe4\xe0f\xaf\x9e\x13\xf0E\xaf\x86m~\xfdy\x0cgS\xb8\xc1\n\xde\xaf\xbb\xa9\x18\xc0?\xceG\xe2\xf6\xe9O\xef\xa5(\xc7a\nr2~*\x07[\xf1\r\xc5\xbd\xc0\xb5\x89cl\xa7\xf1\x15\xb2t\x93\xc0\xd8\x8d\xf1I\x9a@A\x03\x81\xdf\xde\x98Yx_@\xb3\xd8\x01\xb9wN\x0b\x99\x00\xcf\xe4\x06\x05:m\x1b\x19k[\x84s\x9c\xf9o\xe98\xf8=\rG%\xdb\x07\xf5p\x0f\x7f\xadC\xeb\xde2\xd3|7m\xe6\xde\\a\x9b\xfd(\x94n\x91\xcf\xfbW\xdb\xe4\xf1Y(\xc7P\xba\xb8\x0b\xa4\xdc<\x9b\x04\xc7\xf4\xc57\x04\x0fr\xc1#\x88\x92N\xc1FI\xab\x01\xd3\xefwl{i2{\x058\xc7\xd6\x92\xd4\xf5-\x07\xc2\xb6\xebq\xae\xeb1Y\x82\tTc\x99\x1f\xff\x00j\x00X\xfdk\xe5\x7f\x13\xfd\xa3\xf8\x9f^\xb8So\xa9\\\xd8[+\x13\x1c\x16\xf2\x14\xe3\xdd\xd9pI\xfe\x95\xa6x\'\xec\xcf\xc9\xf2u\xcf\x12\xee\xbd\xd4$\xc4\xb1[\xce\xdebE\x9eU\xa4\';\xdf\xb8\x1d\x05i\xe4\xe8\x16\xdd.\xd9.z\xad\xc8M\x7f\x96\xde3\xa9\xc9\xf6\xce\xc3\xea{U\x9d\xd7D\xff\x00N\x85&\xbc\x97F\xaf\xcb\x1a\x8c\xb1>\xd5\xaeY\xeb\x91jv\x87Q\x86\xcakxnQE\xb8\xb8\x01fx\x13%de\x1f\x841bTu\xc75P\xd7\xbcM\xa6\xe9i\xba\xea\xebh+\x81\x1a\xe5\xe4\'\xe1G4\xaf\x8bu9\xf4\xdd:\xea\xe39nA$\xf2\xc7\x1c~U\xf3u\xd5\xc4\xd7\xb7f\xe2\xe6F\x96f>\xb6n\x98\x1d\x00\x1e\xc2\x8e\x97\xd2\x93\xab\xcd%\xd4\x9f\xc3\x80\x1c*)\xc9\xc0\xed\x93\xfdj\x82(\r\xd3\xbeIX\xd4\xfd\xcf\xc5h\x97\x9fj\xa261XiR+7\xe0\x92\xe3\x80q\xec\xa8\x7f\xb9\xad/\xec\xfa\xe7\xc4:\xcd\xa4\xba\xbe\xafq\x1f\xdd\xdd\x8aZ[\xa4J\x81\x8a\x9fT\x84\xf5 \x1e\x00\xf7\xac/G\xd2\xdfQ\xd4,\x95\x97i\x9aD\x861\x8c\x92$`7\x7f\xc5}\x8b5\xa5\xad\x92Eik\x0f\x97\x05\xb4k\x0ck\xec\xa81K\xf1\x1c};\xa7\xd8\x04\xb6\xb6\x8de\x91\xc2\x97o[c\x93\xa79\xc7\x15*H \x84*\xc7\x1e\xfd\xc9\xde\xa3o5;\xb1\xb5L\xa7\x00q\xec\x05Wn\xb59\x06\x03HGqR\x9a\x86\x19H\xc6\x0f\xc7Z\xce\xb5]wC\xd3\xa41\xddjq\xab\xa9\xe65\xf57\xe6\x06qY{(\x1e\xed\x81\xf2\xdeW\xf6\x00\xb1\xfe\xf4\xc0\xb7\x9ef\xd3\x12\xbb\x93\xd9Fj\xdb\x06\xa5$\x8e\xa8\xcf\x8c\xf4\xa9xg\x9c\xe0d\x81\x9c\xe75\x97\xd9x\xe7\xc3\x1eh\xff\x00\xadU\x00\x8f\xc6\xac\xbf\xdcV\x89\xa6j\xbaF\xab\x16\xfb\x0b\xe8&\xeeU\x1c\x12>\xa3\xa8\xa7/\xecn-\x86\xa9,\xa5\x8d\x7f\xdc\xc8@\xa7\xda\xc2\xf6\x05-$.\xa3\xe4\x11U\xbf\xb4\x8d\x16mV\xcfB\xd4<\xd9\x19 \x12Z\xb2g\xd2\xa4\xfa\xc3\x0f\x93\xd0\xfd+(]\x06P\xc1\xb7\x05\\`\x13\x83_I\xea\x08\'\xd0^\xdf\xcbV?{\x8c\xe0\x9ctSU\xeb-\x16\x1b\xa8\xb7\x1be\\\x9f\xc2\xfc\xf4\xfaU\xe5\xa7X\x99--"V\xd6DAq\x91\xb6\t\x00o\xf0+\xa8\xe5Tf\xb1\x88\xb4\x99b\xc6\xd8\x8b\x0c{c\x9f\xad:\x86\xc1\xe2\xb9Q$2\x1f0\xe5T\x0e8\x1c\xfeU\xb8\x1f\x0e4)\x1b\xec@\xa7\x04\x83\xd5W\xfe)\tt\x1d\x97\x0f3D\xb20\x18R\xa3\xf0\xaf\xd3\xe7\xbd9q\xd4n\xa1\xd5\xe7\xdb2ex\'}\xf8\xda\x96&\r\xf3Yz\xdb\xc9\x14\x92\x16R7\xe3wa\x81\xd0\n\x8b\xd54t\xd4\x10\xa3\xc5\xc7U8\xe4c\xbeEk?\xb3!%\x89\xfc$\x9e\x83\xa7\xd2\x9b\xc9a\x0cm\x807)\xcf?\xf6\xa8Qu}\x0e\x1d2\x18px\xe2\x92]\x81\x04s\xd8\xd6-gcyo \xb6\x98\x82\xd9\xc4R\x01\xf8\xf9\xe8\x7f\xdd\xfd\xebK\x83\xc1\xbe\'\x96\xc1&k\x1f-\x0f\xadVGTv\xfa+\x1c\xfd+F\xf0\xde\x95\xa7\xc1\x04\xba\x9c\x96\xa9$\xc2]\x96\xfb\x86B\x15\x1c\xb8\xf9\xe7\x8au\x7f\xa9\xacD\xb3\xb3\x1cw\xeb]\xbd\xeb\x80\xb2\xaa\xc0$\x95\x978\x07\x01O\xce\xdd\xfd\xaa4\x91\xab\x92\xect\xe7\x9cqX\xfcv\xf7\x96\xf3\x88\xe6\xb6\x966F\xf5\xef]\xa4\x0f\xce\xae\x16L\x92\xdb_\xa0 \xabYO\x95\xcfm\x84\xd5\x99\xaet\xcdV\x15\x86\xf2\xdc8<$\x80\xed\x91>A\xff\x00\x06\xab\x96\x16\xef\xa6\xf8\x85\xecd`\xc5\xa1\x91\xa2`8t#\x86\xff\x00\x91\xefP\xe6\x94\\\xdb4\x83\x02H\xd3S\xa0\xc8+\x8f\xaf\xf6\xa8\xc8\xbeT\xd1\xb2\x9dK\xacgz\xf8\x9e\xe2\xc6\xd5@\xc4\'vA#\x90\x00\xfc\xbd\xeb\xb4O,\xa8XT`t\xdb\x92\x0fj\xd4~\xd0\xfc+\'\x87\xf5{\xb3\x1c\x05m.\x98\xc9\x01\xfe\x1c\xb1\xc9O\x8d\xbf\xda\xb3`\xb2(\xce6\xfayq\xc7\xe4\t\xafa\xb2\xbfK\xfbHg\x8eMH\xea\x08\xc9\xcf=\xbe\xd5\xf4-\xa0\x87\xa9\xd9\xdb\xdc\xc2\xc1\xa3\x95\x01\x1f\x07\xb8?"\xa5t\xbd{W\xd2\x0f\x99m\xa8I\x10,\x03G\x9c\xa1\xfa\xa9\xe2\xb4\x8d+\xed\x0fN\xb8\x1bu[\x7f\xbb8\xc7\xef\xa3R\xd16x\xc9\x1dV\xb1\x99\xca4\\\x16m\xccH\x18\xfe\xb9\xebM\x80\x0f\x1b ,}Ch\xc7Q\xdf\x8aj\xeb\xa3\xd9_\x02\xd2\xc5\xa5\xc9\xfc\xe9\xe9a\xf7\xef\xf7\xa8\xf7~\x17\xb0\xea+\xfc[p\x1b\xb3\xa6\xcc>\xff\x00\xe6\xbe\xaa\xb6\xba\xb2\xba\x85\xa5\xb4\xb9\x8ah\x9b\xf1\x18\xdc6\x01\xe8N)\xcb\xc4\xd1\xed\n@\x04\xf5\xaf\x94\xac./l.\x04\xd6W2\xc3\'f\x8c\x90H\xf6>\xf5\xbcx;\xc5\xd2\xeb\x16\x82\xcbP\x00\\#\x13\x1b\x81\xb4H\x83\xaf\xe6\xb5\x91\xea\xbd\x02{\x043E0\x9a }@\x8c0\x1e\xf8\xefX\x0f\x12x\x0e\xef\xa6\xd9\xcb}o!\x9a\x18\x86\\i\xc3\xaa\xfb\xe0r\x05]S\xce\xf3\xa3V\x04)9\x04g\x93W\xaf\x0eD\xc6f\xf5r\x08\xdb\x91\xfa\xe6\xabvC\xcc\x93c\xfe\x01\xf8y\xcfZ\xbeh&8d\x8e@\xa9\x8d\xdc\x0098<\x8a\xcc\t\xe3[\xaba&\x15D\x8b\xa9\xbd\x86y\xfa\xd7\x9bB56sV\x99t\xab\x92\xc1\xd6x\xceq\x90Y\xbf\xcdF\xdd[\xb5\xba\xb8,\xa5\x88\xe0+q\xcf\xcd[g\xba\x8d\x97t~\x96\xe3\x01\xb8\xc6zUV\xec\xb08!\xba\x9c`pMn\xfcM\x15\x85\x9d\xb3=\xb9ff]\xd81 go\xd6\xa4(\x05\xb0*\x9d\xab<\xb0\xda\xc8\xe0m\x92C\xb5X\xf6\xaaM\xae\x9f+\xcb\xe6\x00\xd9\'\xfa\x9a\xd3\xb5\x1bcso\x1a\xe0\x12e\x1c\x9f\xa1\xa7v\xbaP\xb7H\xcb\x1e\x8a3\xbb\x91\xc7\xb7\xc5`zZ4\x9eb\xef\x8c\xe5\xd8\xfb|\xd4\x93\x18\xd8\xd5V+k\xe3k-\xbc\xb6\xe9=\xb4\xbcKo(\x0e\x8e:r\xa7\xbf\xf5\xac\xa7\xc5\x1a\x12\xf8Z\xf2\xce\xfe\xca9\xa1\x82\xe1\x985\xbc\xa7!q\x8c\xaa\xb1\xe5\x97\x9e\xfc\x8a\xd5\xfcg\xe3\xbd\x1b\xc1\xb6\xcc\x19\x96{\xe9#\xdd\x05\xa2\x9eH\xe8\x19\xc8\xfc)\xfdOj\xf9JO\x15\xea\xfe#\xf1\x1b\xddj\xb7\x9eq\xb9S\x1a\xa8\xe1#\x03\x95X\xd7\xf8@\xfe\xbd\xeba\xd3\xbaT\x9a%\x95$\x93\xc8T9F\xfc\xaf\xef\x81\xfe*\xe6\xcf\xa4\xde\xcbk5\xd0R\x91"\x96\x19\xfel{V\xc9\x0b\xc3(\x8eUPw(e8\xe3\x9f\x8a\x91I]\xfa\x05\x1e\xf8\x15^\xd2fY\xad \x8dO\xae5\x03nz\x8a\xb1C\x13\xba\xf0ps\xd0U\r\xca\x08\xdd\x94\xff\x00)\xc0\xcf\xb5P\xceT1\xc1\xd8\x9c\xd2\xe6YT\x10?Zo\xfbr\xfe\xc5\x94\xac\xb9\xdb\xee2*Aba\x1b\x19[\x8f\xe1?\xe2\xab\xd7pI3\x80\xb9\xeb\x83\x9af\xddb\x91\xf0\xca\xa4g\x9a`\x93\xb6\r]\xf4\x8f\x16j2\xe0\xad\x91a\xbb\xa8<T\x95\xdd\x95\xd6\xb9\xa8\x8b\xe9\xed\x84A\x91W\x03\xa1\xdb\xc7z\x95\xf0\xde\x91\xe5X[.\xc5\'ha\xbb\xdc\xfb\xd5\xfdm\x16X@1\x001\xd3\xe9[\x8e\x8d\xe1\xb4\xb8\x85\xdf\xf1\x12\x08\xdb\x04E\xb9RG\xc9\xce)Yf\x18\xe7\xe6\xb1\xedj\xc6}*%1\x80\x01\xee\x07\xf5\xa8M#u\xee\xa7\x10v;cR\xc4{\x9a\xd45\xdbG\x96\'BG\xa40\x19\xfe\xd5\x94):U\xc2L\xf9Bd\xf2\xc7\xe6*\xa3\xad\xda\x0b+\xd1\xa23\xa0cJ\xf3\xc6\xe4W\x02\xf3\xcdk\x02\xd6$\xb0iY@\xd8\x87&\xa04\x80\xb7N\x89r\xbbe\'\xd0\xc3\xb8\xed\x9aqy\xaa*\xf8vI\x0b\x94\xc8\xda\x8a\x06K56\xd2\xe47/ip\x06\xce\x17\x8f\x9a\x85\xd4ncs\xd2\xdd"\x1a\n\xa6\xa5?\xcd\x93\xbf\xd3\x8aR\xecqV\'\xb2X\x9c\x8d\xacOl\xfb\xd7\x08\x9bFZ\xa5\xe6&Y\x08^B\x9ek\xc8\xed\x9a\xed\xd2\x14\x88\xb3\xb7\x03\x1f\xde\xb41\xdaFn\n\xda\x83\xbba\x063\x93\xed\xb5,g\xbdZ|\x03\xa6\xe6K\xab\xf6\x07\x8f\xdd\xa7\xf9\xadB\xa2\xb4k\x04\xd3t\xeb{a\x82\xca2\xe4wc\xd6\xa5k\xd5\xecm\xbf\tgo\x07t@\x1b\xff\x00\xc8\xee\x7fz\xb5\xb7M\x11(\xeew4QE\x15.\x9e\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xa9\xfe4\xd3M\xf6\x97\xe6\xa2\x93$\x07w\x1dv\xf7\xab\x85x@ \x822;\x8af\xe2\x08\xee`\x96\x19\x06RE*~\xf4\x89\x10H\x8c\xa7\xb8\xaf\x97\xa4{\x98\xb26\x1c\x7fZg1\x96L\x00\xac\xb8\x1cn\xe6\xbe\x8d\x9f\xc2\xfa%\xc5\xc1\x9eK1\xb8\x9c\x90\t\x0b\xfa\nqq\xa7hqD<\xfb;UE\x18\xf5(\xaf/\xb9\xff\x00\xa6\xb2\xdcI)^\xa8\x15s\x98\xc1B\xdf\xae\xe3\x15\x03\xf0\xb2\x00u:\x81\xef_-\xca\xec\x07\xaf\x1e\xd9\x14\x9a]\x94\x7f\xdd(\xdd\xd9\xcfQ\xf4\xf6\xad#\xc5\x9aN\x89p^M!\xc2\xba\x8f\xdeF?\x0f\xd4Vc\x042\x99\x8c>\x95b\xc0z\xb8\x19\xaf9\xea}\x1a\xe3\xa4\xdf\xbd\x8c\xa5$\x90`\xa3Fr\xae\x1b`G\xdflT6WW\x189\x19\xfc\xc3z\xecb_S\xe7\'\x96$\xe7\x9f\xce\xbc1\xa0$\xe1Xg9>\xf5\xe9\x8d\x8b\x9fX`\xa7i\x0b\xc8\xe3\xda\xbb\xb8\x95U}[Tc\x18\x1dj\xb7\x1f\x98j:\xb3\x8d"\xa4G\x1e@$f\x9b\xcbv"\x83\xcb\xc8\xdaX\xb6>O\x14\xc0A-\xdf\xefY\n\xc5\xd8\x1f\xe2\xfc\xbd\xa9\xfd\x86\x9c\xf7k\xf7\xab\x81\x98\xf7a\x17\xdf\xe3\xe9V\x98l\x1eR\x0b\xa6\x13\xb2\xd7$\x9d``\xaa5?s\xfd\x85I\xd1\x81\x93\xf6\x15\x13\xa4\xd9\xf9j\xccT\x03\'?\x90\xe9R*\x19\x9el\xb3mE(;\xf3\xd6\xa5s\x14E\xe1\x8f\r9\x00"\xe3\xf0\x83\xd5\xbf.\xd5\x13z\xdfrC\x08s\x9crGS\x9a\x9bcm&\r\xfc\xaaB!9\xdfm\\*\x9f\x9d\xa9\x87;\xe9\x07s\xcd3dU-\xbc\xa9$g8\xc1?Z\xb8\xf8y\xd9-\x02\xa9\xc0fb@\xfa\xd6~\xb2\x17\xef\x9ep@\xabg\x86oB\x85\xb6s\x82\x18\xed\xc7R3\x9cSq?\xfe\xa9H>X-\x8d\x8e\xf8\'<\xd3\xf1\xf1\xf6\xab\xd2\xc4\xe4\x8c\x82>:\x9ar\xb1m`\x0e3\xd7\x15\xda\xb0\x01v\x9f\xaf\x15\xcc\xb2yY<\x9fs[\xc8-\xecm\xd4H\xe7e \x968\xc7\xedM1j\xa8\xebNV\xee]\xc7\xbf\x1fLqU;\xb9c\xc3\xe4\xf20F{|\xd5\xb7Zx\xeeF\xf5R\xac\x063\x8e\xb5\xf3?\xda\x17\x8c.\xfe\xf1u\xa2\xd9?\x93\x1a\x90.e\x1f\x89\x8e?\x00=\x87<\xd6\x06\x0e\x9d\xfe\xa7\xd6n\xe3\xb5\x98H\x8d3\xc8e\xec\x14\xb6r~w\xc5Y\xf4\xae\x9dq\xd5/\x16\x08\xd7\x1e\x9dLO\x00q\x9a{\xe2_\x1a\xdb[G<\x16\x0c\xb2\xcd\xca\xf9\x80\xfa\x14\xfb\xfc\xd6\ru\x1c\x97W\x12Mss\xb9\x8brs\xcd/\x85\x04\x82y\xce3\xda\xb9}\x9bTm\x1cu\xc7\xb7\xfc\xd7\xa8t\xce\x9d\x07KB\xb0\xe4\xb3~g?\x98\xd7\xadt\xbe\x85\x0fMB\x10e\xc8\xdd\x88\xde\x96HT\'\xa6U\x1f\xdf\x9a\xf1\xad\'\x90\xe1dRz`\x1c\x7fz\xf2"\xbc\x8c\x00O\x157\xa4i\xb7:\xbe\xa1oem\x1e\xe9\xa7p\x8b\xce0X\xe0\x93\xf0:\x9a\x95,\xbeJ\xbc\x8c\xe0*\x82\xc5\x9b\x80\x07z\xb4k\x08Q\x1eY\x0e\x15Af$\xec\x00\xe6\xbe\x91\xfb=\xd2\x9e\xcb\xc2Z4R\xfe\'W\x9d\xbf\xff\x00k\x96\x1f\xd2\xb5\x8d>\xf0\xb5\xb2i\x88\x03\x9d\xae\xeas\xc0\x00\xf2>\xbd\xea\xa8\xb2\xa5\x8d\xb4Vv\xa8\xa5a\x89#\x0e?\x95F0\xa3\xf2\xa6\xb0]Oi:O\x1bmul\x829\xe6\xbc\x81/\xdd\xae\xae\xe7%\x80\xbb2\tq\xb1\xf2\xe49 f\xbc6\xe1\xbc\xfb\x9b\x89@\xff\x00\xdc\x95\x98}\xcej\xd1p\x85\x0bg9=sL&$\x85\xcf$\x1f\xf1R\xe2\xee\xdbS\x8b\xce\x88m\x93\x03\xcc\x8c\xf6\'\xdb\xe2\xa2n\x19cFi}*\x80\x96>\xc0\x0c\x93T\x0f\x18\x86w\x8c8p\xad\xe9a\xdcv\xa8\xc6&i\x15p}G\x8a\xc9~\xd4\xf5ymtx\xb4\xabf\x02k\xef\xf5y\xe9\x02\x9e\x7f\xfe#\xc7\xeb_4Ka\xa93\x8f.\xd9H\xc7\xe2,\x00\xab\xef\x885k\x8d{V\x9a\xfe\xe0\x10\x18\xe1P\x1fJ\xc4\xa7\xd2\xa0\xfd?\xadC\xa2\x83(\x0c\xfbPw\xafd\xe8V\xed\xd2,#\x8bJ\x19\x0e^S\x8c\xfa\x8fm\xbd\xb8\xaf\xa1|7\xe1\xb3\xd2\xfad12\x8f5\xc6\xb9H\xff\x00q\xed\xf6\xe2\xa1#\xd2\xf57Rd\xd8\xb8\xeb\x8eE!&\x9dr\x99\xf4\x16$q\x81V\xa0\xaf\x90\x0c\x98\x05w\x8cr0:f\x85V\x1b\x8bnU\x00\xfc\x1f\xca\xad\x05\xec\x80\x93\xe8\xc7\xb0\x15p\xfd9A\xc9L\xd5-\xadnT\x12a \x0fq\xd2\x90\xd96q\x82?*\xd0"W`\t\xe4~.NF\x05I\xc2mB;Im\x1b\xe4\xfay\xee=\xf9\xefK\x1dD\x83\x86\x8d~\xb9\xa6\x1a\xc57\xf4\xd7_f\x1a%\xc5\xdd\xcd\xfd\xec\x85\x964)\x08_\xe6\'\xd4k\xe8)4\xf3,@*\xfaG\x00{\xd6e\xe1=f\xc2\xd6\xf0Z\xc7\x18\x8d.\xd9U\x86\xdc\x05\x90p\xa7\xf3\xe9[\xda\xc1\xe4YE Efa\xc0f\n>\xa75\xe7^%k\xf9\xba\xc2\xacq\xf9\x86@\x0cA7\x1a@\xc1\xcf\xb61\xbek\xc3\xbce\xd3.!\xeb\x934\xd8\xd3*\xabFx\x1a@\xc7\xf5\xaa*\xdb~\xce-!!_\xff\x00\xa6=\xdb\xb5k\xd7\xaf\x1e\xb1\xa3X^G\xf8%\x846=\x9f\x18#\xf25\x82\xeb77\x13^H\xc5\xce\xe0pT\xf1\xb4\x0e\x98\x1e\xde\xd5}\xfb>\xd7R\xea\xda\xe7D\x95\xf0\xea\xe6km\xc7\x96\x07\xf1\xa8\xf9\x1dh\x89\x0f\xfaWP\xb7 \xb4\xd7\t\xc8\xe3Rn\xa3\xf5\xaa\x01k\xe5\xa61\xb0\xe6\xb2O\x1exh\xdc\xeazu\xe41nq46\xf3\xaf\x1c\xa3\xbe\x01\xff\x00\xed\'\x1fJ\xfa\xd6\x0bdV#\xa0\x07\x07\xf2\xe2\xb2M\x7fLI\xcc\xf1\xc8\x81\x95\x81V\x04p\xc1\xba\x83P\x9a/\x8do|\x12\x8b\xa7\xeb\xc2\xe2\xe3K\x07m\xa6\xa0\xa0\xc8\xf0\xafh\xa7\x1dH\x1f\xc2\xddj_\x87\xba\xc2\x14\xb6\x8ed\xf3\x1a\x10B/\xf3\x11\xce\x07\xb9\xa9q\xfe"\xfe\xda\x0b\x1c\x83%\xb1\x7f%;\xba\xb9\x19\x03\xdc\x8cl+w\x9f\x08\x18\t7\x0cUwQ\xbd[{q!a\x90\t\\\x9c\x01\xc7$\x93\xedY\xce\xb5\xf6\xc5\xe1kh\x19\xec\xa7\x96\xf6\\glq\xb2\x80\x7f\xdc\\\x0c\x7fZ\xf9\xef\xc5\x1e3\xbe\xf1<\x93\x1b\xab\xa9!\x89\xa4R\xb6\xa8\xe4F\x061\x96\x1f\xc4\xd5sy%\xefVvH\xa3\x92\xde<c[\xa9 n\x0e\xc1\xb0N?J\xb9\xe9^\x0f\xea\x97\xce\x0c\xb0\xb5\xb4@\xee\xce\xa4\x1f\xb0\xad[\xc4\x7fj:\x0e\x91p\xf1\x06\x97S\x9f\xaby\x0c\xa5\x17=\x8b\x9e?L\xd6\x7f\'\xdbU\xfe\xfc[\xf8v\xd8\x0c\x8f\xc7;\x9e? +7\xf2\xed\x04{\xbc\xa2\xc0\x01\xceq\x83]*Y0#b\x82\x07RI\xe4\xf4\xe9\x8a-\xbc7\xd1`@%\xb4\x92\xe1\xff\x00\x99\xdd\xc8\xc9\xfa)\x15\xbd\x83\xc1\xdd6\x04P\xf1\xb4\xad\x8f\xcc\xc4\xef\xf6\x15\xf47\x85\xbe\xd24_\x11:[^@t\xdb\xb6\xe1\x16G\r\x14\x87\xd9\\\xe3\x07\xe0\xd6\x8cadl\x80k\xe31\xf76P\xb8\xcb\x0c\x0c\x13\xc5k^\x10\xfbC\x9fK6\xf6:\xc4\x8d=\x9e\x02\xa5\xc1$\xc9\x17\xb6I\xfcK\xfdEg\xfa\xd7\x86<\xb0\xf3\xf4\xe4|nZ\xdd\x8eO\xff\x00\xa1;\x9f\xa1\xaa\x0e\xb1\xe1&Ei\xac\x830\x1b\x98\xcf#\xff\x00\xc7\xdf\xe9_@\xd9\xdd\xfd\xdd\x98\x11\xb9\x18a\xd0\xf2\x08\xf65\xc6\xa1\xa6[\xb7\x97uk\x13c\x91\xb0\xf7\x07\xaa\xff\x00\xc5pUYC\xa6\x08 \x15#\x90A\xe4\x11\xf5\xa7\xd6S\xa3\x89-\xe7,\xb1H0J\xf0\xca{\x11\xf2++aw\xe5H\xb1\xc8G\x94O\xf3\x7f#\x1e\x08=\x87\xbd`]\x08?=\xaa\xa5=\x97\x9a\xe8\xca\x8cps\xbb\xeb\xd8T\xee\x91\xa4Ej\xa2\xfe\xea%\x92@sn\x84p\xa5\x7f\x8c\x8e\xe4\x1e\x9f\xad>\x9e\xc9t\xe8\xbc\xb5B\xca\xd8\xf2\xa4\x07\xd2A\xff\x00\xcei\xa2y\xc8\xa3s\xe4v\x02\xac\xba\x85\xc7\xe0\x99B8\xf3\xda0\xc0\x8e\x10\x9e\xfcnq\xb8\xc7\xd6\x9a\r\xc8\xc5<\xbb\xbbg\x198,\xdd\xea\xb1vw\x92Y\xeabYZPWg\x07\xaf\xc5Wn\xd0\xc7\xbbq\x00\x03\xfd=\xea\x96\xdb,\xf9f\xcb\x1d\xc9;\x93\x9am\x88b\x00\xde\xab\x9a\xee\xaa\xbaN\x9f5\xc6\xdd\xee\x06\xd8\xa3\'\x1b\xdc\x8e\x07\xd3\xb9\xf8\xaf\x9d\x9f@\xd7\xb5\xedFI\xe6g\xb8\xba\x9d\xb7t-\x90z\x00\x06p;\x01\xd2\xaf\x1a\xdf\x89\x1fP\xd4\xa4(\x07\xddc\x05m\xc3\x02\x0bs\x82\xe3\xa7R?*\xe6?\x10\xeaV\xce\x9fw\xb8\xf2\xd5\x90y\x8bo\x88\xf7\x0ct$\x0e\xbc\xf3^\xab\xe1\xfbX\xfadA\xe6,\xb2J2\xfaP\x16\x03\xfd\xa0\x92\x00\xf9\xafe\xf0\xe7\x86\xdb\xa7\xd8\xac\xb2F\xa6\xe6U\x0cCg\xd2;/\xf9\xa8\xb8\xbe\xc9<@Hk\xa3\x05\xb0$\x03\xe66H\xcfl.k\xeaO\x0c[\x17\xf0\xee\x8b\x1c\xf2\xa4\x92\xc1j-\xd9\x97\xa1x}\x1d\xf9\xe4\x00k\xe5K\xddV\xfa\x7f5\xe4\xd4\'9\x1c\x06\x91\x89#\xbf\x19\xadC\xecg\xc41\xc5s{\xa2\xca\xc7\xfe\xad\x8d\xcc\x19<+\xc60\xe83\xdd\x97\x9f\xca\xa6x\x97\xf07\xdd84P\xcc\x1a\x17\r\xaaV\x0c4\xf7\x04(\x15\x0b\xc6\x1d\x1a\xea~\x94\xf3\x92\x8c\xd6\xcd\xafJ&=<6\xe4\x9e9\xab\x8f\xda\x0e\x9b\xf7\x9d!\xa3\xda2\xacs\x8f\x9e\xf5\xf3\x9c\xb6\r\x1f\x9b\x1b\xaf\xac\x02\x06\x07\xbd}\x99\xafXCwnAM\xcd\xf4\xcf\x18\xff\x00\x15\x88j\xda\x17\x93\xe7H\x00<d\x81\xdc\x03\xd7\xf2\xac\x97J\xbe\xff\x00Mi-\x18\xe4k\xd4\xbfz\xf1\xddo\x13\x128;\xfd\xc5Ax\x0e\xd9\xee|S\xa1C.]E\xdaI\xc0\x1e\x95\x88o#\xe9\xc5}\x11{0\xdf+\xe7\x81\xb9\x89\xac\x9b\xc06"\xdb\xc4\x96\xd2\x95<C6\xdc\xf072\x11\x8c\xd3\xff\x00\xb5\x9dj}#\xc3\xc6\x0bw\xdb5\xf4\xbeNq\xf8b\x03s\x9f\xec*\x1fW\x1f\xea\xbdG\xa6YB@29\xc9\xc6\xc0\x1co\xf6\x19\xa9\xfd6\xdan\xa9uoo\x19\xcbM @}\x87$\xfd\xab%\xf1\xdf\xda\x15\xdd\xf5\xd4\xf6\x1aM\xc3El\x84\xac\x93\xa1\xc3H{\x85=\x94{\x8e\xb5\x91\xb2\xeeff|\xee\x198\xces]9X\x99\x90\xcb\x91\xb79\xc1\x1d}\xb3^\xc7\x87R\x02\x8c\x05,[\xfc\xf5\xafM\xb0\xb0\xb6\xe9\x96\xe9\x0c\x11\x85P\x06[\x1b\xb1\xf7&\xbd\xae\xcf\xa1A\xd3\xa1X\xa2\x8c\x00\x00\xcbcv>\xe6\xbc\x11.r\xa7\xf5\xa9\x0b\t.\xad\xa6I\xed\xe6xeB\x18H\x84\x86\x07>\xf4\xc9&P\xa41\x1c\x0c\xafN\xb4\xf5e\xde\x7f\x089\xc7<\x0cq\xd3\x02\x9f\x97QR\xac\x01\x07c\x9fj\x94l\x81\xd8\xa0 \x8c\x10F\xc6\xbe\xae\xfb6\xf1\x13\xf8\xa3I\xba\xb5\xbc\x9dM\xfd\xa3\x82\xe4\x007\xc6xW\xc0\xfd\x0e+F\xb5\x88[\xc5\xeb\x88\xe5I\xe0s\xdf\xbe+\xe2\x9d\x17[\xd4t\x1b\xfb]B\xc2o&h\x89\x01\xba\x86\x1d\xd5\x87u=\xc5}3\xe1\xef\xb5\r7\xc4";Ao\xf7ME\xd3,\x8cAFe\x1c\xf9g\xbf\xb8\x07\x9a\xf3\xee\xa5\xd1\xd6\xc2Yn\xe0\x8b\x11\x80\xcd\x85\x19\xd3\x9d\xf8\xf6\x06\xbc\xdb\xc4^\x18\xb9\xb4\x96K\x9bhK[7\xa9\x82\xf3\x1f\xbeG\xb5_u-R\x1b\x04A\x1a\x89&e\x1c\xb2\xfe\x01\xf4=\xcf\xcdD[k\x86y\x08\xb8\xc9\xdcF\x1b\xb8\xf6\xa8{\x93:\x19]\x9c\xb8$\x9ey9\xa8Xfs)\xc88\xcf\x1d\xb1\x9a\xceOs=\xfb\xbc\x8d)P?(R@\x1fj\xc43yL\x07\xedZ\x0c\xf6\x88U%S\xf8\xf3\xea\x1d\x0f\xd6\xa1\xe4\x848`\xc0\x00\x0f\x07\xde\xa5\xf4\x857Q\xbd\xb9\x9b\x96_A=7\x0e\x94\x92\xc7\xe6\xdcCn\xc1T\x86\n@\x18\xe9\xd6\xab\x19\x1fJH\xa3\x01\x9bG\xff\x00\xb0\xe6\xa4\xa9\x0c)W\x88X\xd9\xc7n\xb2\x921\xe62\xf6\x0c\xc3\x9cU>\xf6\xea\x1b\x89$\x85.\xa2.\x87\x0f\x18`X\x1ff\x03\x9a\xaf\xfd\xad\xf8\x9a\xefG\xb2\xb5\xb5\xb2\xb91\\\xde;\xb3:\x9fP\x85\x06\x0e=\x89\'\xad|\xe9n\xd72\xc8dY\x1c\xcd\xbb;\xc3\x1d\xcd\xee\xd9\x18\'\x03\xadiz?\x87\xa6\xeaP\x1b\xe9\'\x11+\x92"\x1au\x12\x14\xe9\xc9\xcfm\xab{\xe1\xef\x03M\xd6\xbay\xbd\x92\xe0B\x8f\x91\x10\xd3\xab!N\t;\x8d\xab\xe9;{{\xa5\x95\x82\xe7\n\xdd\x0f?\x9ej\xd3\x12\xc6\xd2Y\xcdq\x11im\x89\xf2\xa5\x1c:\x83\xc1\x07\xddO\xb1\xac\x0bK\xf1\x86\xa3g$q=\xc3]\xc6GF\x18t\x03\xfd\xfd\xf8\xe7\xbdk\x1a7\x8a-oc!.72\xf5\x8d\x97\xd4\x07\xd3\xda\x98\xea}.\xfe\xd8k(\x19pF\xa4\xcf\x07c\x9a\xa9\xea\xfe\x0b\xea\x1d\x1bT\x92\xa1x{L\x9e\xa4\x1f_j\xb9\xf8\x9fF\xd2\xfcW\xa5Kh\xeaW\xccN\x18`\x95q\xf8]}\x88\xf6\xaf\x8e\xbcG\xe1\xdb\xad\x02\xfe]>\xf6&c\x13\x86\xe1\x88WF\xfe5\xcfo\xfe+\xea\xe1\xae\xc4A+\xe5\x02:\xe5\xb0q\xf4\x15U\xf1\xdd\x9c\x1e\'\xf0\xcd\xf4\x88?\xebt\xf8\xcd\xc4l\xa3,\xd1\xaf\x0e\xbf\xa5H\xe8\x1d^\xf6\xc2\xf4$\xeb\xff\x00\xa7\x9eE\r\x81\xa7C\x9c\r[{\xf7\xa9\xbe\x0e\xeb?\xe9=F\x1b9%\x0fku*\xab\x0e4;l\x1c\x7fz\xf9!\x95\xd9Uw\x00\x98\xda0p=\xf9\xf8\xcd5*w\xe4\xf5\xef\x9a\x93\x92\x14\xdc\xa60\xe0\x1cc#\x9c\xfcR\x05If$r\x0f\xfef\xbdy$\xdbj\xf7\xc3f\x01\x1bW1\xa6\x0eG_\xedS6R]Y\xbd\xbd\xd4186\xc0\xb2\xb1\x18\x1b\x98\xe3?"\xa3c\x00\x0c\x80A\x03\xa8\xa7\xc8\xbb\xa2/\xb86\xdcey\xe0t\xcdG\x98\x86\x18 \x10v \xef\x9c\xedS\xd2\xd69c\xd0\xc8\n\xb0!\x81\x19\x04\x1d\xb1_B\xf8s]\x83V\xb0\x86\xe9\x7f\xd4Q\xb2d\x1f\xc2\xff\x00\xf0z\x8a\xd2\xf4y\xa5\x17\x10\xa26Al\xf1\xfa\xd7\xcd\x9e\x19\xbe6\x1a\x95\x9a\x89\xd5\xa3\xbb"\x17\x89\x01\xc0\xcf\xf1\xe3\xeb\xcd}\x13\xa0\xc6~\xf0\xac\xc7\xd2\x8ax\xf95\xe5\x1e \xb3K9\\\xaeB0,\x80\xfdx\xfb\x1a\xf9o\xc7~\x19_\r\xf5\xf5Kq\x8b[\xa1\xe6\xc2?\xda3\x86_\xb7\xf4\xad6\xe4\r\x89,r\t\x01PH\xf6\xf7\xfaTsl1\xc8\xe78\xeb\xeeF)\xdcM4\xb1\x12\x91\x90\x07\x19\x1c\xe4}+\x8beC)F\xda23\x82}\xbe\xb4\xf5\xcd\xebu\t\xed|\xac\xaa\xce\xb8\x01\x81\xd3\xab\x18\xc8\xce\xff\x00j\xca\xa4`\x1d\xc7zN\xd2\xd2y\xc6]\x82\x85\xf5\xa2\x7f\xcdG\xebZ\x8d\xae\x9dgwqu \x8a\x0bx\x99\xe6q\xd9W\xd8{\x9e\xc3\xde\xad\xe8\x88\x15\xca\xb1\xc0\xe0\x0f\x81XW\xdb\r\xcc\x91h\xb1Z\tB\xfd\xf6\xf1U\x81\xfe$\x89K\x9f\xcb8\xab7\xe9i\x04VP,\x8c|\xf91+\x83\x9fH\xe7\xe9\xb0\xab~\x95dz\x97P\xb4\xb4\x19\x02Y\x02\x9cr\x17\x93\xfbW\xcc^*\xd4\xe7\xd5\xf5\xddR\xfaX\x99\x92\xe6\xe5\xda=\xdf\x89c\xe8\x8b\xc6G\xa5@\x15_\xd3\xe3\x8d5==\xd5H\x1fxO\xff\x00\xaa\x9c\xde\xcaa8\x0c\xac\x07Q\x9agm=\xbb\\B\x15\xf0D\xc8\xd8<g\x07\xb5o\xa2B\xb6\xdaUp\xba4\xed\xc61\x8e+\xd8\xaf,\x04V\xad\n\xc6B,Z\x00\x1d\x80\x18\xaf\xa0\xf4\xed3\xf7\xca\xe8p\x11\xb1\x91\xef\xda\xb5\x0b\x1d\x1d\xae\xadD\xa8\x98e8#\xa0<u\xaa\xf6\x93\x02\x8d\xdc\x0e\xb9\x1f\x19\xadKBH~\xe73\x85e\xc9\x00\x10{\x83\x9e\x95\xe6\x10\x8f\xf5.\xa5\x1c\x12\x13\xa7K\x12s\x83\x803_=\x84*\xce\t\xe0\xed\x9a\xa1]i7d\x8f0`\x0e\x83\x1c\x1am\x16\x98\xe6h\xe3\xfcD\x9c\xf0+@\xbf\x8c\xc9\xc0bc\xc1\xcey5\xee\x9bm\x1cD3\xaa\xeea\xc1>\xd9\xe9OGa\xae\xef\xc8\x8d\x88A\xfc\xcd\xc7\xedJU\xef\xcd:\xb1>J\xa0l\x8c\x01\x8c\x1e\x95f\xb6\xbcF\x05\x0b/\x03\xe8i\x84\xb0\xa2\xc4\xc602OQ\xd0\xe6\x9a\xdai\xbf\x7f\xbd\xb7\xb5\xc9V\x95\x80\xcf\\\x0e\xe6\xb6v?\xea\x9d"h!@\'\x0e\xca4\x83\x80K\x1c\x01\x9a\x90\xa3Q\xdbcN\xef\xd2\x1b\x80\xd1\x87]\xe7\x90\x01\x04\xe7\xe9Xw\x8el\'\xfb\xbc\x05T\x86\x8e\xe1Y\xbe\x98\xc6k|\xb7\xf0\xa5\xce\x93\x7f}\xba\x17\x9bv<\xb9\x82\xe7(\x7f\xb1\xf7\xaa\x86\xb9\xe1\xf9<Cp\x91\xd9\xc8\x03&w!_\xc4\xc3\xa5O\xea\xb6w\xf7\xb6P\xdc\xc9`a\xbb\x12\xb2\xad\xb8:\x89\x00\xe3\x907\xf7\xdb\xb5-c\xd3.\x0f\x1c\x1aGO\xb1\xb2\x7f\n\xc6\xd7`.\xd8w\x96n\xd9\xa6zD\x11\xaf\x96\xe5\x80\x0b\xca/\xf6\xa8\x7f\x17\xc3\xad\xc3\xa5E\xa55\xb9\x89"\x88\x06#\xab\x95\xfav\xa5\xbc\x1e/5\x0b\x00\xe6\x00\x04Ci\x91\x8e\x01#\xb0\xac\xa7V\xb0\xba\xb9\x97\xa3\xdbAfC\xdb&\x99\x14\xae\x93\xa9\x06I?JI\x8fH,}\xea\xdd\x1c\xdbD\x84\xf5ni\xdd\x9e\xb7>\x993}\xd1ci\x9d0Y\x86q\xf4\xa8)b\x9cH\xc50v\xf4\x19\xefR\x1al\x08\xe4\xb0\x18p}@\xd5\x87J\x9e{\x07F9\xf3\xc6B\x0cq\x9eN\xfd\xe9\x01X\xf1\xb5[\xfc\x18\x9a\x94\xfa\xd4\xd77\x17\xd2\xb0(\xc5\x93\'i\'\xe2\xb5\xaa\xa4\xf8B\xcd\xd1n\xae]p\x1b\n\xb5v\xafV\xe9~i\xb0\xb7i]\xd9\xd8\x16%\xceO\xa8\xe6\xacm\x13D_V&\x8a(\xa2\xa7\xd4\x9a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a)\x8d\xce\xa7af\xdb..\xe3\x8d\xb1\x9c1\xe7\x14j\x1a\x85\xbe\x9bn\xd3O&\xd1\xd1~O\xb5`7\xd7\xb7Ws\xdc\xcb3\xef29\xeb\xd4\x0e\xd5Y\xd4\xfa\x9c]6%f]L\xd9\xd2\xb9\xc7\x1d\xcdF\x9e\x7f,\x85P\t\xef\xf1_B\xac\xb1\xdcA\xe6C uu%YNA\xac\xc6\xe2\xc6yL\xa6y\xdeC\xb8\xf0\xc7\x81T\xbb\x0f\x1b\xea^\x1eU\x856Ons\x84~6\x9f\x83Mn<w{r\xd2\x14X\xe2\x0cI\xe0d\xfe\xa6\xaa\'\xf17H\x96\xd0j\xb8ef\xe5\x00;m\xef\xc1\xa8\xf2J\xb2\x84%NFv\xedS\xad\xa6N\x97\xa8\xe3\x0b\x16\x181\'\xaeG@;\xd5\x07V\x80Gp\xec9\xda\xdc\x0f\xce\xa4\xe1\xd7\xaf./\xad\x0c\x8c\xd2\x8f5z\xfbTv\xa9:\xcbu.\x1dH\r\xdb\xbdy\x17\x8ae\xb3\x96\xe2\xce[=e\x7f\x88\xae_\xbepF1\xda\xb9\x12\x07V\x1e\xc4\x1a\x8c\x96G\r\x85b\x07\xf2\x8e\x05uka-\xf4\xb8*6g\'<\x0f\xad%\x9c\x93\xc7^\x80\xf7\xa8\xab\xa9\xee\xa4`\xae\xc4*\xf4E\xe8+7\x1a\x16\xd8\x10\xbe\xe7\xbd*G\x11\x01\x81\x93\xda\xb5\x1bh\xb4\xbd>%\x13\xdeB\xa0t\x05\x87\xf6\x19\xa6w^ \xb7\x91\xc46*v\xff\x00\x14\xcc1\xff\x00\xf0\x83\xfd\xeb9\xb6\x82I\\69\xedV\x1bkVL\x96\xc9\xcf\xe4*\xce\xd64\x0c\xab\x1c\t\x80F\xb9\x0e\xec~3\xfe)\x93#\xbeO\x04\xf1V\xa1q\x14\x11\x93\x18\x1ed\x9f\x89\xb1\x93U\x9b\x99\xdai.\x0e2FGL\xfcS\xa9\x16EUm\xc4s\x82\x07o\xce\x90UXL\x1ca\xa5\x94\x03\xff\x00\xb7?\xe6\x9d\xeb\x1dG\xcd\x11[\xa2hT\xdc \xd9~\xb8\xf9\xa5E\x11\xceI\xcei(\xa1f\xdav\xd3\xb8T\xc50\xf2\xdc,\x83\x0c\x06y\x04w\xfa\xd2\xba\x84\xb0i\x90\xb3+\xa2\x9d\xa5\x99\xdb\x00*\xfb\x9a\xc6\xb5o\x1e\xd9C 6q\xbd\xdbo\xc0\x97w\x97\x19\xc7\xb1\xc1&\xaa\xed:}\xe5\xec\xac\xb1F\xc4\xa9\xdc\x8c`\x1f\xaf\x15kiaux\xc1m\xe12\x1e\xe7\x80>\xe6\xbe\xac\xb0\xd5\xed\xae\xa0\x8c\xbc\x88\xb3c\x0c\xa4\xe3\x91\xdc|W\x97\r\xe7\x02rp3\x8c\x1e+\x04\xf0\xaf\x88n|Gg$\xb3*$\xb6\xd3\xf9R*\xe7\x042\xeeV\xe7\x9c\xe3\x83\xf4\xad\x06\xde{\xd8J\xacs\xc8\xb9=3\xc7\xf5\xa9]F\xf2\xf2V\x167X\x0e\xa7K\x15\xfec\xd8\x91\xfb\xd2.-\x1e\xd6ib\x91p\xe8p\xc3\xf7\xab\x14\xe8J\x80q\x91\xc5|{\xf6\x89j\xb6\x1e-\xd6b\x8d3\xe6\xc8\'\\\x0e@\x91C\x1f\xcb9\xaf\xa9\xee<E}o \x8flS)\x18o21\x9f\xd4b\xbey\xfbd\xd3\xca\xc9\xa4\xebJ\xf97(\xd6\xf3\x03\xc6\x1e?R\xf4\xf7\r\x8f\xca\xa5\xf8f\xd9:wYH\xbf\x14$\x17\x11\xb4x\xd3\x8fP\xc3\x0e\xe7;\n\xd3\xf8\x1eU^\xb8\x91\xb6\xc2x\x99\x07\xc9\x1e\xa1\xfd+ $\x8c\xee\xeb\xdb=~\x94\x8c\xce\xbf\xed8 \x06S\xc61\xedLL\xaa0\xdb[q\x1d\x0f\xd3\x83\x9a@\xe5\xd8\x92z\xf55\xeaK\x167\'\x15\xee)f3SK#4l\xcc\xe3!\x86\xe3\xc0\x1f\x15\xaa}\x93\xba\x8f\x14\xf9N\x03\x16\xb5\xb8\xf2\xd8t\xdc\x17\xaf?\x19\xacl\x96+\x1b\xbbn\xec3\xcf\x1f\xf9\xd2\xaf\x1e\x0e\xd4\x8e\x9d\xe2m&\xe8\xc8\x91,WI\xe6K\x92\x00\x88\x9c>\xef\x8d\xa7\x9a\xa9\xeb6\xc6~\x99}\x12r\xf0\xb8\x18\xf7\xc6\xd4\xc7V\xe9\xa6\xe7\xa4u\x18c\x1e\xa7\xb7\x90\x0c{\xe9\xda\xbe\xa9etf$f\xbc\x8e6\x91\x82\xed#\x9e*u-\xe3\x98,\x91\xba\xba:\xeeWR\x08e<\x82\x08\xeci\xd46\xa3\xcc@\x07z\xf1\x11>\xa2\x11W.v\x03\xe6\xbevXJ~a\x8cs\x9a\x8c\xb6\x82X%WF!\x81\x1f9\x1e\xc7\xe2\xa4u\x88D\xfaN\xa0\xc8q\xbe\xd6P\x0fum\x86\xa4~\xecT\x1c\xae\x00\xeaqP\xba\xf5\xf2\xe9~\x1e\xd5\xe7r3\xe4\xb2\xc6\xa4\xfe)$\x1b@\xfe\xb4\xcb%\xc1\xba\xb7S\x11\x12\x19\x14(<\x9d\xf1R\xec\xed\xda\xe6\xf2\xce8\xd7S\xb4\xc8\x10\x0frv\xaf\x91^$@\xa7pnG\x00\x1fl\xf7\xa6\xad\t1\t1\xb8\xb6\xed\x9c\xf1\xc1\xe75#/\xa0F\x8c\x01;\x89\xdd\xf8\x94\xe7\x81\x8c{Sr"\x8c\xc8\xb1\xeee\xfcc#\xd2\x0f\xfb\x8f\\W\xb3\xa3\x9c\x0eI\xcf\xed_W\xc3o\x85\x1boL \xf3\x04[\xe5\x04\x06RS\x07=\xe9\xe2yF0\x8c9\\\xe4\x13\xc8=\xa9\x9c\x12\x17\xba\x9bd\x8d\x86\x89\xd53\x83\xdb\xa1\x15\xd5\xad\xca\xb4\x84\xe7\x04\x96\x0c1\xc1S\xfe)\xf7V:\x8e1\x80\x0e\xd4\xe4\xf6E\xb5m\xf3\xb5I\xa2\xaa\x86P<\xcc\xe0\x002\t\xc8\xff\x00\x14\xaa"$\xa3jr\xc3\nH\xcb\x03\xee1M\xe3\x9a\'I\x03\x95\x08\x0e\x11\xc2\xe0\x92?\xc5teT\\\x1c\x83\xc6\x0b\x1c(\xdd\xd3\x83\xde\xa2\x90\xc4\x91\xbeN\xd5\x00\xd9\x1c\x91\xa6\x9e\x0cCq\x04\x8b(")\x15\x95\x81>\x92\xa7\x8e\x7f.+\xea[\xf9\xa4s\x1a\xbe\xdd\xab\x12(\xdb\x9ct\xcey\xfa\xd7\xc9;\xc21\xcb\x86\x1e`F+\x83\x93\xd7\xb5}=\xe1\x8dr\xcb\xc4:e\xbd\xbbL\xa3Q\xb5\x85c\x9e\x13\xc1`\x83\x01\xd7=A\x1d}\xab%\xe2\xa8\xa5H\xad&\nY\x13Pr\x06\xe0\x1c`\x9fa^e\xff\x00R:5\xc3\xdbt\xfb\xb8\xa1,\xb0\xb3\x89X\x0c\xe9V\xc6\t\xf8\xda\xa1u[1!\x12*\xe5\x93\xf8\x8fq\xedT\xe1\x15\xc47h\xd0\xb3\xc7 9F\x07\x04c\xb8#\xda\xb5K\x9d:L\xb6\x01 \xf6\xa8\xd6\xd2\x81o\xf4\xff\x00\x0f?\x9dR\xdau\x15\x8d0X6\xd5\xe4j\xc4l\xc2\x9ci\xda\xac\xf3\xc0\x8b{\x1e\xe2\xa0\x0f1z\x90?\x98\x1e\xa6\xa7d\xb5\xd2nbd\x9akvW\\2\xb9\x18 \xf6 \xd4-\xb5\xbc\x912/\x96\xbbH9n\x84R\xd2\xe9\xacw\r\xc1\xfb\x82G\xbdG\x16KrL\x90M\xe5\xe0\x92B\xf6\xfdi\x89\x11s\x9d#<\xfbUcR\xfb)\xf0\xa5\xce\xf9\xe3\x9d\xec\xd4\xe4\x93\x0c\xcb\xb0w\xe8\xd9\xaa>\xa1\xf6Y\xa7<[\xb4\xcf\x12\xc5#\xe0\xe1n#\xc09\xff\x00r\x8e?J\xd1g\xd2\xdd\xca\xa8\\\x12s\xed\\\xc7f\xf6\xed\xc8\xe7?\x9dY\xdb\xf5\x1e\xadj\xa0\xff\x00\xaaL\xfaN\x00u\x04}\x0e\xac\xd5\xc5\xb7\x88:\xe5\xb1A\x15\xfc\x84/\xf2\xb9\x0e?\xff\x00j\xf9\xae\xfbM\xbc\xd2\xaf%\xb4\xd4 0\xc9\x11\x1b\xd0\x10C\x03\xd1\x94\xf4 \xf6"\xa2\x8a\xecVc\x19\x1bO,\x06@\xcfL\xf6\xad\xb3\xed\x1e\xde\'\xb3\xd2d0\xc9$\xf1\xbc\xab\x84\xfcF0\xbb\xba\xfb\x03\xcdab\xef\xcb`VL\x96@\xdb\x1d\x0b.\xecc\'\'\x93\xfd+\xd0:E\xdb\xf5\x0b8\xe7)\xa5\x8e\xcc\x07\x19\x07\x1b|\x1a\xf6\xef\x0e\xdd7X\xe9p]4a\\\xe5]G\x1a\x94\xe0\xe3\xeb^\x89Ff*\xce_\x0b\x93\xb4\x9c\x93\x82y\xed\x8a\xedK\t#\xdcK\x03\xf8\x87A\x81\xedL\xe2m\xa5\x8c\xdb\x94\x9eH\x07\x19?Ol\x8ei\xe3\xca\x05\xca"\xa9\xe0\x01\xb5\x86\n\x93\xd7>\xfc\xd5\xab.\t\x00gn~\xd5xl\x818\xd3[\x17\xd9\xd7\xda\nXI\x16\x8d\xaa\\1\xb4v\xdbmq!\xff\x00D\x93\xc2\xb1?\xc0}\xfb}+\xe8fQ\x95a\xdf\x90GB+\xe1\xb9\x90\xc12\x06U\xe4(^r\x00#\x1f\xd2\xb6\x1f\x02\xfd\xa1M\xa7\xcfo\xa3j2\xa4\xb6d\xacp\xcd\xbf&\x02x\x00\xb1\xea\x87\xfaV\x03\xc4\x9e\x1b\xf3\x8b_X\'\xa8\xa9ib\x1f\xcd\xee\xcb\xf3\xee;\xd7\x9ax\xb3\xc1\x86E\x92\xfe\xc2?V\x0bK\x10\xef\x8eY~}\xc5}+gv\x84}\xde\xe57\xc2\xc4dw\x1f#\xd8\xd3\xc9\xb4\xb5\x8c\xe08e#*\xc3\xf9OCP\xbb\x00!\x81\xeb\xedSz]\xdb\xc8\xd3C$\x84\xf06\x03\xd0\x00:VS\xa5\x1bK\xd7K;\xcf\xff\x00\xe1&\xf9S\xfe\xc3\xff\x00i\xed\xeck\xc7\xa6VPH\xe6\xa0\xee#\x11+\xf5\xeb\x80qY\x17\xda.\xb0\xba^\x94\xf1\xac\x85&\xbb&%#\xaa\xae=G\xfc~u\xb6\xdf\xe1cu#8\x19\x1fRs_+}\xaf\xc9*\xea\xbab\x11\xfb\xb5\xb6r\xbdpX\xbf?\xda\xa7x~\xc69z\xdc03\x02\x10\x96a\xf2\xa38\xfdj\xfb\xc1\x9d>>\xab\xe2n\x99o(\x05\x01iJ\x9e\xfeX,\x07\xea+6\x8d\xdc\xce\xb8\x00\xe7\xd4MH4\xa5\xd3\nX\x9c\x96 \x1e\x80\x7f\xc5@M"\x87\x0b\t\xf4\xf9k\xf8\x8f\xb8\xe7\xb9\xefH\x89\x19y3\x11\xc7c\xdc\x8e\xa6\xbd`\xdb\xeb\xd2x\xdba\x8a\xfaa\xec\xf0\xa0\xa9\x03\xe3\x14\xf6{\x83\xbc\x83\x9e\x07\x1f$\xd2\xdaF\xb1.\x8d\xaa\xe9\xf7\xf6l\xad%\xac\x8b/|\x12\x0f*\x7f.\rD\xb3\x89\n\x1f8\xeeV\xce\xf0\t\xe3\xdf\xe9]\xdbZ5\xc3\x98\xe3\x9e-\xc4w;s\xdf\x00\x9e*B\xdbG2\x18\x9dr\x1dJ\x95<\x10v\xa8\xb2X\xc5:I\x1c\xb1\x82\xac\x85Xv \x8c\x1c\xd7\xe8\x1f\x86\xf5\xed?\xc5:=\xb5\xf5\x9c\x80\x07@\n\xf7F\x1dQ\x87\xb8\xaa\xf6\xbd\xa4\xa3\xf9\x9c\x00\x1b<\x8e\x95\xf2\x7f\x85\xbcU\xac\xf8?Scgtv\xe5CB\xcd\x98\x9f\x1f\xce\x07O\xa8\xaf\xa9|;\xe3\x9d\x0b\xc6\xd6\xdfv\x89\xcd\xbd\xf8\\\x9bI\x08\xc9#\xaf\x96\xdf\xc4?\xad`\xfa\xff\x00K\xb9\xb6\x80\x03\x1b\xb1\x80\xe69\x80\xdc\xafeq\xd8\xf6\xcfz\xf0\x1f\x14x\x1a\xff\x00\xa2K,\xf0F\xd3\xd8\x92Hu\x191\x83\xd9\xfe\x9e\xf4\xdfM\xb5k{\x8by\xd5\x02\x94`\xf8\xc7n\xf5\x92}\xba\x82\xda\xc6\x97\t\x94\x08\x85\x91h\xc6OVr\t\xc7\xe4+\xe9\x07\xd3\x1a\x05,\x0602s\xd0}k\xe4\xef\xb5\xcdR\x1dW\xc41$.\xb2\xc1m\x14v\xa2E9\xdc\xcb\x96b=\xc6[\x19\xf8\xa8\x1e\x1b\xb6\xb9\x1dn\x06\x96\x12\x1a4v$\x8f\xca\x08\xc6>\xf9\xa7?\xe9\xd5\x83\xcd\xd7\xd1\xd62\xd1\xc3\x14\x8c\xcd\x8d\x86F\x07\xdfz\xc6\xdd0\x0f\x982\xd9#\xaeH\xc5p\xac\xea\xa4*\x826\x9d\xc1\x86G\xd4w\xa7\x12[1\x92R\x1b\xd2\x0ew\x1c\n\xe28\x11\x89\xdd#t\xea\x14\x92O\xd2\xbdq#\xd4\xa3#\xe6\xbd\xe4\xda.\x0eSjl$\x01Ha\xb8\x85\x01OL\x7f\xcdH$\xa0\x1d\xb8!\x80!\x80\xf7\xf9\xfc\xe8\x16\xf0a\x8e\xc9\x18/\x7f\xc2\x0f\xd7\xae+\xb8\xfc\xb2e\xc8 \xb2\xe1B\xfb\xe7\x8e\xb5\xc9 b\xa4\x81\xb0;\xefM=\x88 \xe1w\xa7\x8a\xeb\xb6<\xe1q\x9f\xa6Ew\x16\xa0\xf6s\xc1u\x04\x84M\x14\x89,l\xbdA^G\x1fZHO\x95e\xf2\xb2v\xe0drX\xf5&\xb8HZ7\xdf\xb9H\x1d=\xc9#\xda\xa0\x18\x93\xd4%+\xc7\xe5\xe7#\xda\x98\xff\x00NVVYH\xc1\x04\x15\xe7#\xda\xbe\xbe\xd2\xb5x\xb5\xad"\xc6\xfc\x01\xb6\xe2\x05r\xbdv\xb7u\xfc\x8f\x14\xe2;ef\xf4\x01\xcfc\xdb\x9e\xd5\x89}\x98\xf8\x86h\xe7\xb8\xd2._r\\\xb9\x92\x0fd\x90\x0c\xb2\xfd\x18\x0e>k\xe8+Kwv\n\x83=\x0f\xcdx\xefW\xb2~\x93}<+\xf9Kj\x8b\xbeT\xf1\xfe+\xe7/\x13\xf4iz/V\x9e\xd5\x94\x98\xc9\xd7\t\xf7F\xe3\xf4\xe2\x9di\xca\xd0J\xb9\x1d\x0er;T\xe6b\x9fX\x92X\x1c\x9c[3\xb0#\xf8\xc0\xc1\xa6R:\xdb\xc0Y\x97\x91\xd3\xdb&\x9bhw\xa5o\xb0p\x1eh\xde,\x9e\x99a\xfej\x05\x94\xdf\xc41\xb8\xfe\x13\xca\x8c\xcc\x01\xd4\n\xe4z\x7fZ\xa8D!~q\xb5|\xcf\xf6\xb5x\xf3x\xbaHyo&\xd2\x18\xd7\x9c\x05,\x0bg>\xf95C\xb4\x9a\xe2(C\xa4A\\\x12\xb2\xb09g<\xe3\x81\xce1\xc1\xad\x0f\xed_J\x96/\x18\xdd\xb3\x16-s\x14RD:\x0e\x17i\x1f\x91Z\xcd\xed\x18\xa9\x8fw\xa4\xee\xdc\x1c\x8cd}Gj\xf5\x9e\x8ec\x1d\x0f\xa6\xacg\xd4\xb6\xf1\xea\x18\xc1\xd5\x8d\xff\x00z\xfa\xb3\xc2V\xd07\x86z)\x8c\x82?\t\x198\xf7#\x7f\xde\xac\x08\xaeQe\xda\x039 \xa9\xc6T\xfb\x801RQ\xbc\xd0\xcceG!\xe2\xc2\xabFr:\xe4\xff\x00J-`\xb3\x032]\x99$$\x1eFT\xafN\xbd\xcf4\xbd\xd7\xdd\x13S\xb4H\x06c\xf2X\xb2\x9cv\xf7\xf9\xae\xcdn\xfeQ%\x93N3\x8d@\xed\xf4\xfd\xaa\xe9\xa0\x86Ex\xda \xca\xc0\xe42\xe5H\xf69\xab\xde\x8b\xa8\xdbk\x0e\x90LR\xde\xf0\x8fH\xe8%\xff\x00\xbf\xc5[Z\xcb\xf6E\xad\xf5\xed\xd4\xc8\x90Ek7\x98\x0fB\xa620s\xdc\xf6\x15\x86\xcbr\xb2\xdc\xbe\xd1\x80\xcaF@\xe4\x01\xd3\x06\x9b\xeb:\xee\xa5\xabA\r\xbc\xf7\xf3\\E\x15\xb3\x14Wl\xe3\x8e\xa7\xfeO5\x9a\x97\xa1Iqq\x18\x8aq\x1c\x0c\x7f\x88\xa4d\x81\xff\x00o\xd7\xe6\xbc\xce\xff\x00\xfe\x98X\\uh.\xade\xfc<>`y"\xdfl\x1c\xfa?\xe7\x8a\xa7\xe9p\xd9\xcf\x7fg\xf7\xd9\xda8I\xcb\xberF\xde\xdf\x02\xa1\x9fo\x99)\x04\x1fQ \xfb\xf3R\t\x03\x99<\xb8\xd8\xb3`\x1e\x9f\x9f\x7fjw\x0e\x83\xa8M\xb1\x96\x02\x15\xd42\xee\xe0\x10k|n"\x8d\x00wU\xdf9\'\x19\x07\x8a\xf5\t#T \x96\x03\xb6\t\x15\x0e\xaaNx\xe4\xfbqS\x10\xda\x84\x008\xf5ua\x91\x82\x99\xe0\x8c\x1f\x83\xf4\xa9\xfb\x7f\x08K"\xa9\x9a\xe4+\x1f\xc4\xa83\x8f\xce\xacv>\x11\xd3a\x1ed\xac\xeev\xf3\xb8\xfe\xbc\n\xab\xb9\xea\xd6\x880%\'\x1d\x94\x13\xfe+\x9f\x88\x86<`\x93\x8faT;6d\x942\xc8v\xa3z\x08\xe4\x82:q\xed__xe\xc5\xed\xad\x94\xe8\x03\t\xe1Gc\x8e\xe4d\xd6\x14\xb0YD\xe2\x18-\xe3\x8a\x04\xff\x00Q\xc0\x03?\x15\xbc\xf8&K[\xbd"\xdf\xee\xf2\xa0(\x19%\nyS\x9c\x81\xf01X\xff\x00\x11H\xb7\xebi\x88\xca\x01&\tb\x00\xc1\xf7=\xb8\xaf&\xff\x00\xab\x10\xa5\xe7O\xe9\xd7+\x11\x0f\x04\xe5r\x06p\xb2.\xf9\xfb\x81W\x89\xb5d\xb1S\x05\xa4k$\xe7\x01\x9c\x8c\xaa|c\xb9\xae!\x95\xe0\x85\x8c\x98vc\x97\'\x82>\x95\xe4\x90\xd9\xdb\xdb1R\x06\x0eK\x1e\x00\xc7rOO\xadd\x9e(\xfbE\xb4\xb1\x8e{=)^\xee\xe8\xab/\x9e\x87\x10\xc4\xc4`\x10\xc7\xf1\x11\xd7\x8e>j\x03M\xd4\xe5\xbc\xb5\x82\xd6X\xe7\x11C\x88\xcc81C\xab\x9c\x9e\t\xf7&\xbc\x7f\xa7t\xab\xae\xa5 \x8a\xde\xdd\x98\x96\xf51\x1b\x01\xee\xc7\xb0\xab\xbe\xb9\xf6\x87\xe1\xdd\x01\xcc7\x17--\xc8\xfcp@\x03\xba\xfc? /\xd0\x9c\xd7\xce_h~8\xb6\xf1>\xa1\x14\xd1G$\x16\xb6\xf1\x18\xe1G \xb9,r\xccq\xd0\x9e\x07\xd0U]\xe2\xd4\xef\x18\x14\xb0\x95\xf77\xa9\x87\\\xf7?Zm\xa8h7\xc2\x10\xcbd\xe5\xdc\x1c\x13\xc0\\}{\xd6\xee\xd2\xc6L\xa1\x99\xdaF\x18\xcbl\x06}\xeb\xd7z?\x86\xbaOB\x96;\x85\x95\xa5\xb9T+\xe61\xd8j\x1b\xe9\x1d\xaa\x13\xcc\xb4\x94\x134\t\x81\xf8F;|\xd2\x96z]\x95\xf5\xfd\x84I\x00\x0f-\xc2\x04\x00\xe3<\xd4o\xec\xcb\xc8\x98\xf9\x8b&\xe0=\xea\xff\x00\xf6}\xa2I\x7f\xe2\xad-\x9c3\xb4\x04\xc9\xb7\xaf\xe1S\x83\xfdj}\xdb\xb5\x9d\xad\xcc\xc93a"f\xc2\x9c\xee\x06\xc3\x1fZ\x97\xd5oD6wsk\xfc\x91;\x0f\xa8\x1bW\xd0Z}\x90\x0f\xe5\xaf$\xf0=\xab[\xd2\xb4\xd8-\xacv\x9fQ\xc6MUl4\xd5GR\xea\xa0+\r\xfd\x8e\xdf\x8a\xb7]\xea\xfa}\x9c/\x1a\\\xc6\xcd\x8c\x04NN~\x82\xb1\xbe\x0f6\x90\xc9{\xd4\xaf\x1e4\x11\xa6\x98\xf5\x90\x0eNs\x80~\x95\xf3\xdf\x94\xd9$\x8c\x93\xb9\xa8\x1dL\xc4\xceQG\xa4\x0c\x0fni\x9a#\x17\x04\x02W\x1c\xd3f\xb8k\x8d\xe4\xaf\x07\xdf\xda\xac\x03\xc2~,\xb8\x86\tlZ\xce\x11"\x86c>X\xe0\xf4\x00\x0e\x98\xa5\xf4\xc8\xba\x87\x88\xef\xeed\xb3\x87*\x08fo\xca\x14\x0c\xe0oO\xc1m\xad\xd6=h\xb9\xe4\xb1\xc0\x1f\xa5u\x02\x80\xa0\x82Nz}*w\xc36\xcd&\xb7\x14\x85p"\x8d\xd8\xfec\x14\xd6\xdb\xc1\xfe)\x8aXD\xd7\x96RBB\x890\xa5X\x10y#\x1e\xfd\xabB\xd2\xb4h\xf4\xb9.\x1cJd2m\x00\x91\x82\x14v\xe3\xe6\xbd?\xa5tK\xc8%\x85\xaeQTD\xc1\x86\x97\r\x92;\xfe\xb4\xbf\xc2\xb4s(\xd6\xae\x01\xc9e\xce?p*j\xab\xf6Z\x14Vz\xb5\xed\xf0#\x13cj\xfb\x1e\xf5`\xa2\xb5\xf8\x07\x19\x00\xe0\xe4g\xb1\xe35)\x91X\xa9#\xf2\x9c\x8a\xab\xf8\x9bC\xb0\xd4t\xfb\xd9d\xb7\xcc\xc9\x03\x94q\xd4\x108\xac\x0bDk\xbd<\x1b}\x80\xdb\x8e\xdd\xf3\xdc\xd7\xd4\x8c\xaa\xcaU\x86A\x18#\xe2\xbe{\xf1=\xd4\x1a6\xb5y\xa7\xc3\x0e\x14\x80\xc8\xd9\xe0\x06\xac\xf7^Q\n\xdb\xdf+\x04h\x98\xa3\x1c~`\xf8\xc0?\xa5C\xba\x88\x92\xbaG<\xe3\xdcw\xa9\xcd&\x1d\x12\xf2U\x8ay%\x12H\xc0 A\xefW\x94\xf0V\x94\x8d\xb8I6\x7f\xf7b\x8f\x0b\xf8wJ\xd3\xedm\xef!S4\xd3F\x1c\xcc\xe7\'\x9foj\xb8T\xfb~\x9dl#C5\x95\xb1\x979$ ?\xb9\xa5A\x07\xa32\x00s\xb8\xa4-\xed\xe2\xb5\x868b\\*\x0c\n^\x8a*\xca\xa5\x80\x00\x00\r\x85\x14QE\x15\xda(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a\xa4x\xda}\xb6\xb6\x90`\x11#\x96?\xfd\xb5\x8cjwk\x181\xa9\x03\xb0\xf7&\xb6\xef\x18\xe9\x97W\xf6P5\xa4FI\xd2M\xa1G\xb3q\x9f\xca\xaa\xb0\xfd\x99\xfe\xe4K5\xfen\x8f\'\x8fB\x8faY\x1f\x10\xf4\xae\xa3\xd4\xe6\tn\xaa\x10D=lq\xf6\x15]*H\xd3>\x10\x9e?LVW\xf7\x01y\x06\xd7\x1c\xe3\x86\xc7CU\x85\xd35!1\x8f\xee\xb2`\xb6\x03\x11\x85\xfdO\x15\xac_\xe8\xf3\xe9\x17on\xee7.\x08a\xd1\x81\xaa\xde\xa3\'\x9d#\xc4\xc4\xed\x07%\x7f\x875\xe7=C\xa4~\x02)\x12\xe88t *\x82\x06O\xd7}\xa9\xad\xd8\xe3\x8cs]Agk\xa3i\x8fq4\xe9-\xe3\x82\x90\xa2\x9c\xaa\x13\xd5\xbeqUD\x0b4\xdeZ\x90[\x04\x96<\xd2\x1a\xad\xd7\x94\x84)\xc6:\n\xebDG6\x86i82\xb6W?\xca8\x15\x9b\xea\xb7Kp#h\xed\xd6\x08\xa1A\x12 %\x89=\xd8\x93\xc94\xfcxE8\xdf;\xd7|\x89\x91\x18\xf3\x8c\x7fZ\x9e}!\r\xbcw$\x02\x1f\xaf\xc7\xd6\xab\xd3\xb1\x86\xedN3\xe8<\xd6\xa9c\x0c\x13iV\xa1\xd3ph\x86~sQ\xad"\x0f&\xa6\xc6\x16"\xd8>\xf9\xc59\xa3\\c\xdf5R\xb4\xd2\x91\x8a\x94B;\x8a\x9a6h\xb1\xf2\xbc\xd4\x96\xe1m\x85\x8e\x10Tu\x1f\x15\xc4\xd7\x08\xea0\xa4\x1e\xe2\xae\xd7\xa8t\x98-f\xc4\x80J\x17p\xca@\xc9\xdbozl[JY@\\\xe7\x8cU~u\x03v\xe5\x1cs\xc7LV1\xe3\xaf\x10^=\x94\xdf\xb3\xee\x1a6\x8a\xe0G1Q\x86\xe3\xa0\x1e\xc3=}\xebj\xd4\xa6\x8f\x80\xab\xb1@\xe9\x9c\xf3Y7\x88\xbc!\x0c\xe2\xe2\xe2\xdd\xa5W\xbc\xc9\x94g\x80\xdd\x88\x15]\xd0\xe7\xe9_\xea\x92I~\xed"\x7f\xf6\x9dG\xa7Vy \x8d\xc5j\xfa7N\x8d]^\xe5t\x9c\xfa\x14\x8c\x8f\xbde\xde#\xf1N\xbd\xe2\x10\xb2\xdd~\xea\x00\x15|\xa8\xf3\xb0\xb0\x18,\xde\xe4\x9e~*\xb2\xa4\x0bK|\xf7*\x07\xd7<\xd5\xaf\xf6\x17\x88\xedm\xe5\x8aHRT~\x0e;|\xd5m\xad&\x89`YP\xa0L\xaf<z\xb3\xd2\xbd\t\x0fKEH\xec$_)H8\x18\xce~\xd5\xe8]2\xce\x08\xd0$*\xa1T\xe4\x01Z\x8f\xd9]\xe4Qk\xb7\xb6\x12\xb7\xaa\xfd3\x08=\xe4\x87-\x8f\xcdI\xaf\xa2\xbe\xe8\xfb\xf8\\\x1cc\x02\xbe\x1e\x92i\xe0\x9e\xceh\xa5xd\x8c\x90\x1dIR\x18t \x8eA\xab\x1c\x9e/\xf1\\zL\x0b\xff\x00\xab\xaf]\xa6g\x8a[o0\xeeT^\x8d\xbb\xaf5K{\xe1\xbf\xc6\xdd\xfe)\x1du>\x90\xd9\'\x00\xa8\xc6F\x01\xedU\x9d_\xc2S\xf5\x0b\xa5\xb8\x86\xe68\xfc\xc0\xa1\xc3\x02w\x1bdc\xe0W\xd3\xfa\xe5\xce\x95\xa4D\xd7\x1a\x95\xec\x16\xb1\xa8\xdcL\xac\x14\x9c{\x0e\xa7\xe8+\xe5\xef\xb4o\x1c\xc3\xe2\x99\xedm4\xf8\xd9t\xfbR\xcd\x1b:\xe1\xa5\x91\xb8.}\x87\x18\x02\xb3\xbb\x8b\xab\xab\xc9\xcbL\xf2H\xe6<e\xd8\xb1\xfa\xe4\xd3M\x8c\x87\x1f\xe6\xad:g\x86\xa1\xb2\xb9\x17SM\xe6\xcc7A\x80\xaa\xbbc o\x93W\xbe\x1f\xf0u\xa7H\xb8K\x99&3\xce\xa0\xe88\xd2\xab\x9d\xb2\x06\xfb\xd7$\x10NA\x04\x7f\x8a\xe9Fy \xfbWd\x13\x8c\x9c\xd7\x98\xce>?J\xd1\xe6\xb7\xca\xa7c\xcf\xc5,\xacs\x9e\x0f\xbei\xdc\x13\x15!KzGl\x7fcLWvF:\xf7\xf9\xa7e\xb2\xcaY\x14`\x00@\x1by\xcd0\xe0\x1d\xb1Sb\xdf\x03\x1b\x1a\xfa\x03\xec\xcb\xc7\xdfs\x96\x1d\x1fT\x94%\xa4\xff\x00\xfe\x96W8\x119\xfe\x13\xfe\xc6\xfe\x86\xbe\x93ON8\xe5Nz\x7fJ\xf8\x02\xca\xe1c\x94;\xa1h\xd0\x12\x88}@\x82x\x1c\xd6\xff\x00\xe0O\xb4\x86\xd3b\x87O\xd6Y\xe5\xb4\x18Hg\xfcR\xc3\xc7\xe1u\xeaW\xdb\xb8\xaf4\xf1\x1f\x87Yn\xbf\x1dg\x16\xe7yb\x03\x9f\xfb\x97\xe7\xdcw\xaf9\xf1\x97\x83Z\xe1\x9f\xa8t\xd8r\xed\xbc\xd0/\xf3\x1f\xf7/\xcf\xb8\xef_F\xceL\xa1\x02\xafS\x8f\xa9\xaf\x98\xbe\xd0|P\xfa\xd6\xa9-\x94\x12\xb0\xb3\xb2\x95\x91c\xc7\r"zY\xcf\xd7\xb7\xb0\xaf\xa0\xef<K\xa1Z\xe8\xd3jqj\x16\xd3D\x91\x12\x9e\\\x80\x97s\xf8T\x0e\xb9\'\xb5|z\xf29i\x19\xa2"R\xdb\xd9\xfb`\x9er>\xb5\xcb\x0bqw\xd5f\xbd\x91U\x8cp\xc6\x13la\xdb\xf3s\xdc\x7fz\x87\xff\x00L\xfa(\xfcU\xf5\xe5\xcd\xb3\x06\xb7"8\xb5\x8ca\x8euc=\xc0\xfe\xb5\xcb\xc7\x94\x85\x8bI\x18\x0cJ\xee\xf6\x1f\xe2\x93\x18U\x93\xd2\x1b<\x83\xce\x0f\xc7\x1e\xf5\xd9\x18\xcb;3\x06\\\xabu;G\xc7\xbd4\x91vD\xe6Y0\xae\x99@8,s\xfe:\xd6\x9dFp3\xde\xbd\xca \x08\xe7\xbd0\x95\x102\x96%]\xdf%\x80\x01B\xfc|\xd2M\xb1\xb2\xc7\xb0\x03\x03\x95\xce1\xf5\xe6\xbb\x99K\x03\xea%\x00\xfcD{q\xc7\xb6i\x12\xa1\xc9\x01\xd4\xb3m\x00m\xc6\x7f\xe3\x15=x\x1b\x9a\x9e\x14\x107\xa7)2\xdc>\x08\xd8N8\x1f\x84\x1c\xe0\x92{W\xa5\x94\xed\x8bb\xae$\x192\x1e>?\xf9\xa4\x03G\x14\x87*\x0b\xa8\xc7P\x17v{\xfcR\xa3c@\xea\xd2\xa0n@\xc6Ib=\xf3\xd8\xfb\xd2J\x81\x8c\x03\x8d\xb1\xfei\x93\x1a\xf6\x07\x1d\xa9g(\xce\xf3\xa1(\xc8\xe0zy\xce;\xff\x00\xc5J\xe9\xf7\xd7\x96Wk=\xb5\xcc\x82\xe5\x1b|rF\xdbB\x13\xdf\x9e\xf5\x13\x1d\xb9\x94\xa4k4{\x0ba[\x07\x93\xc1\xc7jp\x19\xe2\xdbu\xb8\xb1W*{\xfa\x80\xc7\xc7\x18\xa6$Eu(@l\x824\x91\xdb\xb05\x12xcude\x0c\x18\x15*\xc39\x07\xb1\xaf\xab|\x13\xe2\xeb_\x14A\x1d\xad\xd8H\xb5%ORcj\xcd\x81\x9d\xd1\xfc\xfb\x81\xf9U\xc6\xe9-\xec\xce\xd9\xe7\x8a\r\xe0.\x1d\xd53\xf1\xea"\xbe+\x8e\xf2H\x82O\r\xc4\x9b\x93\x94pJ\x18\xfdX\x1bH9\x06\xbc\xbc\x9a\xe6\xe4\xf9\xb3\\\t\x946Iv,\xc7\x07\x04\x02\x7f\xa5bg\xf0t2\\3\xc1t\xd6\xea\xcc} g\x19\xec\x06\xd5\xe57\xff\x00\xf4\xca\xd6\xe6\xf9\xe5\xb7\xbe\xfc=\xbb\x92|\x9f/QV\xf6S\x91\xb5}mi\xa9\xe8W\xf7r\xdaY\xea\xd6\x93\xdcFN\xe8\x92@[\xf2\x1d\xff\x00*\x9bXWk!PA\xaf\x85\xe4\x94G4\x97\x10I$2\xa4\xf9\x8fk\x9c\xaeNA${c\x1cV\x9d\xa2}\xad\xeb\xba4B+\xa2\xba\x9cQ\x85\x19\x9d\xb6\xca~U\xc7$}sM\\xF\xfa\xd1\x92k\x0b\x9f8\xe3\r\x1c\x98V9\x1b\xe0\xf0A\xf9\xaa~\xad\xff\x00L/!\x8c7N\xb9\x17\x1b\x0c\xc7 \x08\xd9\xf8#j\xfaT\xe9\xcaI;y8\xef\xd7\xf5\xa8\xadAt\xad\x12\xd6[\xedJ\xf1"\x819,\xc7\x03>\xc0u\'\xd8\n\xc7\xb5O\xb6\xfb\xa9at\xd34\x84\xb6c\x1eD\xb3\xb7\x9aK{*\x80\xa3\xf35\x90j:\xce\xb1\xe2)\xa5\xba\xd4u\x17\xbae\x03h\x95\xf6*\xe4\xf4U\x04\x00>\x95:\xcb\xa2_\\$\x7f\x8b\xb5\x8a\xd5\x17\x92Hw$\xfb\x01\xe9\xfd\x7fJ\x81\xd2?\xe9\x9fU\xb9\x90I\xd4e\x16\x90\x825(!\xa4a\xec1\x90?Z\x9c\xf1\xdf\x8dW\xc4\xf7\xb1\x8bL\xdb\xd9Z\x83\xe4/\xff\x00Q\xcb\x1eY\xb1\xd0\x9e\xc3\xb0\xac\xe6RF7\x03\x9e\x87\xa7\x00\xf3\xc6{\xd3\xe9\xe0\x11\xe66(\xac\x0e\xe5#\x9c\xe7\xb7\x19\xaf6D\xf1\xa8\x111\x93p%\xb2s\x8fo\xd6\xb7\x16p[\xd9\xdb\xc5\x14(Dk\xc7\xdf|\x93^\xd1a\xd2\xadz}\xa46\xd6\xb1h\x8a5\xc0\xf7\xfa\x93\xdc\x9e\xf4\xdeE\x89#\xdc\x14\x96`0\xd9\xe8G^\x98\xa7\n\xd0\xf9,\xcc\x87\x922;3\x1e2\t9\xfa\xd2\xb7\x08#\x12\x08\x89\xdaN\xc2\x8d\x83\xea=\xd7\xe0{\xd2\x028\x91`Vd\x05]\xb7d\x1c\x90;\x1faOj\x0c\xa3s\xcf\xde\x9f\xf2\x97\x03\x19;\xd7\x86?0\x15.\xac\xc7yR9\x04\x0e\xd9\x1d\x0f\x14\x80\x8e\xe1\x08\x8c\xab |\x1c\x1f\xe2\xff\x00\x9ar\x01\xd9\xc3*\xe0\x90\xcb\xd0\x90\xddy?\xa5\'t\xdc\xa8Tl*\x909\xc8\xe0\xf5\x1e\xf4\xa5c\x9d;`\xfe\xd4\x14\x19\xc1\xc6\x0f;W\xd2\xbff\x1e9:\xb4k\xa2\xdf\xc8\r\xc41\xe2\xdeV\xe1\xa5D\x1d\x1b\xfd\xc0~\xb5\xb0D\xe6\x0b\x95a\xef\xd2\xbe\x14\xd3/\xee,\xaf\xad.m\xe71\xcd\x1c\x82M\xe4\xf7\x07\xbf\xc5}\xb3\xa1\xeaV\xfa\xe6\x95\xa7\xeaP\x90Vh\xc3\x11\xec\xc3\x86\x1fPk\xc9\xfc[\xd2\x17\xa6^Gyn\xba"\x9c\xee\x07\x0b \xdfo\xaf5\xe0_\xf5\x0b\xc3Q\xf4\xab\xc8\xae\xedS\x16\xf7$\xe5@\xd9$\xe4\x8f\xbf"\xad\x1a\x95\xb9Lp}K\x9ey\xc0\xaf\x9f~\xd8t\x9f?K\xd3\xef\xd1[\x16\xf2\xb4r\x11\x8e\x16A\x90O\xc6Em\x1a~\xb3\xe6Mw\xa4^1\xfb\xc5\xbc\xcd\xf7w\xeb\xbe2s\xb4\x9fp:|T_\x8ate\xd64\x8dB\xc4\x8f\xf5\xe2!\t\xe8\x1cr\xa4\xe3\xe4T$\xb8\x8f\xa6u\xfb[\xa8\xc8X]\x95\xf09Ua\x86\x07\xe9\xbda\xbc9\xd4\x07I\xeb\x9d.\xf8\xe4,3\x81\'\xff\x00\x83z[\xf65\xf0\xf0\x11*\x8d\xe9\xbb\n\xc0\x15`9#\x8c\xf0zw\xa4\xb7*\x12\xc0+\x12A\x1cd\x8f~\x0f\x14\xe6{ya\x96U\xc0,\xae\xc0\xe0`\xa9S\x8e\x9d\xa9\xa3\x8d\xaex\x07\xa6pz\xd7\xb4&\x1b|\xe7#\xde\xbe\xb9\xca\xb0\x04\x1c\x86\x19\x1d\xc6)#\xc1![\xa8\xc1\xf9\xa7\xd6\x88\x92K\r\xbc\xa5"V`\x0c\xac\x0f\xa47\xbe:\x8aAb\xc4j\xf8\xc8bx\xc6z\nwd\xb0\xb3(\x92\x07u\x07\'kc\x8fc\x91O+\x80y\x18\x1c\xe7\x8aoFA?\x1d\xbf\xe6\xb4X|\x03r\xb0\xef\x86\xee)\xa4$:\x94\x07\x0c\x87\xba\xfb\x8f\x8aV?\x01\xf8\x8e\xc9>\xf1\x02\x80\xd1\xe1\xd3\xc9r\x1b\x83\xc1\x07\xa8\xa8\xbd\x13^\xd44LE\x10\xf3aI8B\xdc(n\xd9^\xd5\xa1Yx\xdaTso#K#;y\xa7q\x0b\x82?\x12\x03\xfd\xaa\xc8\x1e\x8bt\x06\xb2\xc8\xc4`\x80r8\xf9\xe6\xa8\xae\x97\xab\xc7\xa8 \x82d?\xee\x18\xc8\xf6\xc0\xaa\xc5\xe4~3\xd4`0\xcd\xa8\xdf\xcb\x81\xea\x82I\x9bq\xf8\xda\xc4f\xaa3\xe8\x1a\xcc\xc1\x04\xb6\x17$\x8eH\xd8r?/\xca\xb7V\xf1\x96\x89z\xa0\xcd\x00M\xb9!]\t\xce?\x8409\x06\x92\xb7\xf1v\x97\x1aH\x93\x86Q\xbf!\xbdY\xda{\x0c\xf7\xfa\xd2b\xe9\xfd&\x13\xa2\x1b\xd5P\xdb\xfap2~\x95\x06\x1b\x8b\xcbh\x88\x8f\xa3,X;\xa2\x00\x07\xdb\x1c\xd7\xcf\x8f\xa0\xde\xb3\x82-\xa5U\xcf!\xd0\xee\x03\xdf\x03\xad7\xb7\xd1\xf5i\x89\x02\xd2`\x91\xf0}$d\x13\xd3\xb7Z\xfaRO\x10\xf8s\x877\xc8U\xc0\nrx\xed\x921\x91\x8a\x86\x9bQ\xd04\x8b\x99\xae\xa3\xba\x13\t[\x98U\xf7\x06\\cw\xb6A\xe6\xa7\xb5\x8d\xaaF\x1b\xfdIXc\x07q\x91N\xc7\xd5n\xa4,\xad\xd3dV\xc7\xa7 \xe0\x9c\xf1\x9a\xc3-\xf4]Q\xa5\x9e(m\xdeM\xc8T\xa6\xd6\xef\xff\x00\x15\xe4\xbe\x1d\xd4\xa3}\x92\xdb\x05t`J\x92\x01\xdaG\x1c\xf4\xad\x8a_\x19\xd8B\xb2\x9b{>@%I\xc0$\xf6\xcej\xab\xa8\xebr]H$[x\xa33F3\x86\xdc@\xc7L\xf6\xaa\x9b\xcf\xf4\xe8c\xd4\x97\xc5\xe4-\xc0\xf6\xc5O\x82k\xa9\\\xeb\xb4\x11\xa9\x1c\x96\xc9\xcf\xda\xa9Q\xd8\xbc;:\x82\x01<s\x8c\xd2\xdftU]\xec\x03\x003\x8c\x81N\xfdk+\x003\x91\xdf\x8cW[K\x82\x1czv\xfb\xe3\xfbVq\xa6brN\xc7\xf5\xa9"\x16-\xbf\x14\xbd\xa8\x8bH\xb9\xb2\xbf\xb6p\xed\x1c\x90\xceG\xb6\x1b\xd5\xfa\n\xfa\xf3H\xf2\xe7\x8c\xcc\xb2\x00\xa60\xe8FNU\x80 \x0f\xd6\xbeD\xfb\xbb\xca\xc5x\xe3\xa8\xc7\x18\xfa\xd7\xd2?gZ\xdd\x95\xe6\x91\x06\x99%\xca\xa5\xdd\xb8\xd8\x11\xb0\xa6D^\x9bNy\xc5e\xfcMo\x1d\xe9\xb4\x9f\xcb\xd9\x0b,\x80\x13\xf9H\xc8\xdf\xb0\x04W\x99\x7f\xd4\xce\x8d%\xcd\xa5\x9d\xfc1\x97krV]#\'C`\x83\xf4\x18\xabv\xa6\xac\xe9\xb5\x98\x90\xaaJ\xe0\x7fz\xa7y\xa5%L\x120\xd9\x04U\xf2\xf1%x\xc8PP\xe0\x86\xc6y\x07\xb1\xfd*\xbf\xfb/%]\x89\xc8\xcfj\xc9]\xb5\x9aM\x88\t(c\x04go\x8d\xb3\xb9\xc5x\xba\xc6Yw\x1b\xe6\xa9\xdfi\xfax\xd7t\x1b}a\x10\x0b\xcd;\xd30\x1f\xc6\x8eq\xb8~u\xf3\xf4vF2\xacAT<\x1c\xf3\x80:\x8cW\xd6\xf7\xb6+.\x99\xa8A \xfd\xd4\xb6\xcf\x1b\x1f`\xc3\x00\x9f\xa1\xaf\x9f?ei\xd11W\xbb\x96R\xa4\x82#\x8c\xed\xf9\xe5\x88\xef\xf1Z\x8f\x0e\xf5)\xa5\xb5\xb9\x8eC\xf9$\xc8m\xb7\x0c3\xfdrk\xdc\xff\x00\xe9\xa7Y\x11\xf4k\x8b+\x89\x7f\xfeZo\xe1\xe4\x13\xe8}\xf1\xf69\xaa\xd2+z\x1d\xd0\xf0F\xdcq\x8c\xfc\x0f\x8at\xb0K#\xdb\xc9\x9c\x95B\xa7\x00d\x0c\xf7=\xea\xe2\x89b\x14,z[\xc8G\xf1K)\x1f\xd1\x00\xa2;+\x8c\x9d\x96\xf1 \'\xa6\xdd\xdf\xff\x00Vj\xce[\xe0\xab\xf9\xd7~Fx\xad\xf3u\x9bP\x0e\x11\xf28\xd8`\xfe\xf5S\x167\x0c\x8c\x0c\x0b\xea`U\x89\xdd\x8fs\xf54\x90\xd1R\'\x0c\xc3\x7f\xa7k\x0e\x07\x03\x9cc\xda\xaf\xb1\xe9Wm\xd6G\xc7\xb0\xe0\x7fJy\x16\x80O%sP\x8fVX\xf3\xfcU\x00\xf6\x15\x06^\xb4NBG\x8c\xf2I\xac\xf8i\xcc^2\xaa\xa9\xc8\xdc\x14v\xa98\xecn\xa4#\x12m\x1f\x0b\x9a\xd0\xa1\xd0\x94c\xd1R\xf6\xfaB)\x1e\x81P\'\xebh8\xc1\xc7\xbd@~\xa9!\xe5\x80\xc5f#H\xba$\x04f\xe3\x1c\x9e\xe7\xe8*R=\n\xf9\xd4e\x98\x9f\x81\xff\x005\xabA\xa6G\xc7\xa2\xa7\xadt\xc8F2\xa2\xa0\xafW\x9e\xe1\xf4\xc6\xa87\xe4\xd4\x19\xfa\xe0\x8co\x96\xacm<+s**\xb6\xef\xd0\n\x97\xb0\xf0U\xdco\xbe)\xa7\x81\x8f\x05\x91\xca\x92>H\xc5m\x10\xd8D\xb8\xc2\x01R\x91Z\xc6?\x84U\x8d\xba\xddH\x7f\x8b:\x95<\xa8\x18\x06\xa8\xae\xbcF\xce\xac<\x94 \xfb\xefY}\xb7\x81\xc4\xe4\x1b\xa9\xa6\x9b\x8c~\xf6F\x7f\xeejj?\x05ip&\x05\xac\x7f\xff\x00\x08\xad\x04B\x17\xa0\xaf]A\x1d*\xee9\x96\xd6"\xa9\xb1\x1f\xa5Q?V\xb8c\x85!\x17\xd9F\x05g\x13\xe8\x16P\xa1T\x88\x00;\x00\x05U\xb5-\x12)T\x83\x10\xe3\xa5j\xd7p\x13\x9e*\x02\xe6\xdb9\xe2\xb0\xfdK\xae\xdf\x9b\xc6\x8c\xce\xea\x83\xb6p\rO\xb7\xb92.Kd\xd6\x01\xaa\xf8y\x15\xc9\xf2\x97\x1fJ\x90\xf0|6\xda6\xa3,\xe4\xb4-$[\x04\xab\x9c\x8es\x83\x8e\xc6\xb4\xab\xdd=%\xc8d\xa8U\xd2\x10?\nG\xc5J^\xaeg\xb4hd\x91\x80a\x83\x83H\xbbE\xb8\x86Hd\xce\x87\x188\xa9\xd7\xbc\xb5\x9c\xfe\xf7VF\x04w|\x7fJ\xea&\xb2\x8bs\xac\x9e`=\x90g\xfa\x9af\x9a<2\xa0\x059\xa7\x10\xd9\xdc[2\xa0\x88\xba\x13\x81\x8e\xb5HD\'!%r\x7f\xdap3Tqxo\xa63fIe?\x19\x00\x7fJ\xb3\xf8K^\xd3\x17T\x92\x1dKLU\x89\xb0"\x91\xce\xed\xa7\xdd\x87N\x7f\xa5}\x04\xa5YT\xa9\x05H\xe0\x8e\x98\xaf\x9f\x1fC\x91 \x13\xcb\x03F\x07r0y\xad_\xc3\xfa\xce\x9e-l\xed\r\xc8W\xd8\x15\x11\xcf\xab>\xd5\xed\xff\x00\xf4\xef\xaaI\xf8y\xba]\xd5\x9a\xda<*\xb2E\xacyo"\xb9=\x8f\xe6\xc1\xefT\xbds\xa7\xd9[\x98\xe5\xb1S\xa0\xe5d\x03\xd4\x01^\xf9\xabu\x14Q^\x9dY\xea(\xaf\r{E\x14\x85\xcf\x9am\xe6\x11.d(B\x0c\xe3\x928\xe6\xb2\xdf\x0f\xfd\x9c\xe2{\xbb\xcf\x10\xc8/\'\x91\xf3\x1a\xef%UkY\xa2\x9a\x96\x18\xa6\xf2\xfc\xc8\xc3\xe8b\xca\x0e\xe3<g\x14\x86\x8dY\x819\xd8c\x14\x940\xc5o\x14qD\x81\x11\x14*\xa8\xe8\x00\xa5h\xa2\x9d\xa5\x81\x8d\x85\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14Q^\x1a(\xaa?\x8a\xf4k\xcb\xf9a\xb8\xb6\x88HR2\x18\x03\x82k&\xd54\xb6!\xdc+$\xab\xf8\x90\xf1\x9a\xfaB\xa05\xbd\x0e\xdfT\x85\x98([\x85_C\x8e9\xf65M\xd5\xba5\xbfS\x8eMJ<\xc2\xbbg\x82@\xdb\xe9P\xe5\xb79gC\xb9\xdc\x8f\xf1_$\xebp\xb1\x8c\x92:\xf1V\xc7\xb6\x86-:\xd6%\x18h\xe2\\\x1f\xcb\x9a\x96\xd7\xb412M\x0b\'\x95p\x9cm<\x02EF\xdfF\xe2\xd6\x12A\x05\x10n\x1f\x961^%\x7f\xd3&\xb3\x92\xe6\x19\x10\x91\xbe\xe4ps\xbf\xdcS<\xaf\xd2\xaa").5\x1bX\x95\xb7\x16\x97`\x1f\xfb\x85k\xf60\\Y\xd9\xc1o(\xc1Q\x8c\xd67\x89!\x9dnbf\r\x1b\x87\x00\xfb\x83\x9a\xde\x1a;\xeb\x9d&\xce\xfd\x10I\x1c\xd1+\x92\xbc\xe3#\x9ao\xa6\xf4\xc7\xbc\x86\xf1\xe3Y\x9aKh\xc1e\x8cg\xd2N\xf9\x1c\xd3\xf0\xbe\x10\x02\x075\x174\\\x9aq\xa7h\xb3_Hrv\xc6?\x13\x7f\xc5t\xab&\xc4,\xbe\xa3\xd0}kC\xb2\x86\x1b[H\x94\x10\x0e\xd0O\xb95i\xe1\x8f\x08[\xf5\xbe\xa7,\x97\x88\xe2\xd6\xd8+\x18\x8eW[7\x00\xfcU\xbe\xaf\xc2\xc2\x8c1\xe6?\x7faX\x7f\x88\xf4\x89\xec/\x84lI\x8d\xcf\xee\xc9\xee)\x85\xfd\xba4\xe1PzUT~x\xe6\xaf>+73\xea6\x82h\xf6\xc6\xad\xfb\xb5\x1d\xc7rj\xa8#\xdcX\x9e\xe4\xd6W\xc4\xf6\xf6\xdd/\xadu\x0bKX\xd9!\x8e_@q\x86]\xb3\x81\xf1\xbe\xdf\x15\xa4\xe9\xba\xae#\x85\xdf\x04\xe9\xdf\x1cT\x0b\xe9\xe8\xeaA^\xb5L\xd5\xbc\x1d\x15\xd1,\x83\x1c\xe7\x18\xc8\xcdj\xbeP\xc0\xcfz\xf3\xee\xe0\x8e\x95Mo\xd5\'\xb6}Q\xc8A\xadE\xb3\xb4\x04\x158\xaf\x9c\xf5\x1f\x04\xcf,m\x19 z\xb7\x02>*\xb7u\xe1\x9b\xdbfG0\x17+\xd4\x81\x9c\xe7\xe2\xbe\xa5\x9bOG\xfe\x1a\x87\xb9\xd1\x94\xe7\xd1Z;O\x15\xdc.\x95b\x08\xf6\xab\xd8o\xf2\xa0\x1cW\xc8\xf7\xfaT\xd6\xd71Hc-\x13\x02\xad\xc7*z\xd3y\xec\xe2\x8fo\xa4\x8c\x8c\x12:`\xd7\xd3\xd7\x9e\x1d\x82\\\xef\x81[\xea*\xb5y\xe0\xfb)\xc3\x06\x88\x8c\xff\x00/\x15\xa5\xb7\xf1\\N#\xd7\xa8c\x92\x0f5c\x1d\xea\xfarO\xda\xbeu\xb9\xb6\x92\xdbd\x9b\xb2\xaf\x9c7\xd3\xde\x9b)\xc0\x07\xa6kw\xb9\xf0E\xbb\xc5\xe5\xab\xb0\\\xe7\x04f\xa1\xa5\xfb<@7\xc3/\xab\xa8\x04`~Uo\x17\x88\xba{\xa8\xd7!\x07<\xe2\xadb\xea\x10`j\x7f\xda\xb2\xe8\x11\x92h\x0b\r\x9c\xee\r\x8fni\xfbB.\xa23\x17f\x95\xe4!}\x80\xf9\xf6\xab\x91\xf0\xad\xed\xbam6!\x80\'\x0c\t\'\x14\xee+\x0b\x98-\xa5\x85-\x14\x96\xc0%\xc1\xc0\xc79\x18\xfd9\xa7\x8fS\xb6s\xa9e]\xb8 \x8a\x9d\x1d\xd4m\x82\x8c\x0flg\xb5gF\x19Sk\x1c\x9c\x81\x8c\x0e>\x95/oz\xbbbI\x18\xae\x08\r\xc6\x06A\xeaqV\x88\xb4\xb7r\x1ap\xd9\xdcIU\x1e\x80Fp}\xf1^\x1d\x05<\xc9\x19rU\x98\xb2\xb8\\\x10O\xc57-\xfd\xbc\x8b\x87l\xe0\xed\x83V\x0b:2\xe0\xef\xedLV\xe1\x15\x06\xc9\t\x06@I\xe83\xdb\xfaS\xa1,RH6\x92\t?\xc4\xdc\x11\xee}\xab\xa3\xa7\xbeLaY\xf8\x19\xc2\xe6\x9d%\x91\x017\xa1\x1bF\x17\x8e\x80s\x8a\x80\xf2C\x8c\x83\xbf\xd6\xb8\xb2i<\x1d\xe9\x16g\x84\xe5B\xab9\x062\x0e\x08\xed\xc6)\xa1\x89N\xc0\xe5@\x8d{\xb1\x04\xe7\xe2\xa6M\x923\x02\x10\x83\xeez\xf3\xd4\xd2\r\xa7\xb7\xa9\x83\xe5\x87@GZm&\x8c\x7f6\x0f\xbdL\x8a\xe4\x0eN3P.\x1aH\x0e\xd6c\xb7q\xc3`n\x00\xe7\x06\xa3T\x9d\xee\xce\xe0\x0er:\x9cg\'\x1e\xd5f\x9e\xc2Y\xb2\xcf\x90\x08\xc9\xdb\x81\x9f\x81\xedQ\xa3Lp\xe5\xe3F\n0\x06I\xc8?\xe6\xa6\xc5<Z[,*\xc6+\x94 \x8dB\x98,I?\x9d\xbet\x8fn?\x16rA9\xe3\x15\xdc1D\x93\x80\xe8d\x00\x81\xc0\xe3\x18\xfe\xf4\xf2[f\'v\xdf/\xb1\x00\x13\xf9\xfeU\xec\x91;\x87\x927"@A\xdc:g\x18<v\xa7<\xd0A\xf5\x10\x08\xc7\xd0\xfdE+\xce\x19\xc6v#\x1fJo\x07\x97,\xab\x1e6\xc6\x0b\x9c\x0e9\x07>\xa3\xed]\xc0\xcc\xaaa\xcf\x98\xef \x00\xf2\xc4\x8cc\x81N\xed\xe1\x1b1\xe5\xf3\xb4\x02Gn\xc4s\xd8\xd7m\x01I6\x88S\xf1\xe4\x12I\xc0\x1d\xb3\xf3M4\x8b\x96_\xef\xdf\xde\x9ayA\xc8\xfd\xab\xa4\x8b\xcb\xf3I\x94n\x1c!a\xb4\x0fo\xa5#\x14N\xd3\x99\x0c\x04(b\xc3i9_c\xcfsO#\xb5\x9d\xa3\x0c\xe4z\xf2\x15z\xe3\x1c\x12s\xd3\x15\xd4\x91HX\x82\x08c\x93\x92\xd8%GN;b\x98\xf3\x06Xj\x07;\x13\xedLk\xe4l\x7fj\x8c\xba\xb5D\x8e\x12\x88\xcb&Ih\xfd\xf9\xcf8\xf6\xefHN-\xdd\x14\xf9l2H$\x102\xb8\xe8\x07qS&&!\x8eTm\x00\xec\x03#\x9cg\x1d\x7f3^\xbd\xb4r\xc7\x85@\xd8`Tt\xc1\xcd-g\x03N\xa2N\t\xdf>\xf4\x19\x06\x06I\xe6\xab\xf1\x8bD\x86D\x91\x18\xc8\x8c\t}\xb9!A\xeb\xf3\xc7QH\xc6\x11\xfc\xb2\x08\x06L\xab(>\xa1\xb7\xf8\x8e\x7f\xa0\xa9\xe9"\x05\xdc\xbcx\x12\x1cp?\xbf~\xdcW\x12\xdbD\xe5\x15\x15@T\x0c\x8c{\x9f\xaf\x1e\xf4\xf2\xdc\r\xf3\xab-\xbf9\x03jO\x9b\xbe7\xdf~j\r\xa0\xf3\xf2\xec\x19H\'{\x9c\x00A\x19\x07\x1cQu\x07\x01\xcb.\xc4*\xa0.r\xc3\xe3=8\xe4\n\x9c\x92\xd4\x97\xca\xede\xdc\xac\x0b\x0c`\xa8\xe8\x7fJT\xdaE\xe7\xeev\xde\xe7\x922\n\x86?\xd0\x01]\xfcP\x05Nv\x03`(2\xf1\xea\xed\xc5@\xbe\xc6HY\xcb\xeeQ\x95\x90\xfe"\x0fO\xd2\xbc\x92\xda6\x88\x03"\x97Ugi\x17\'\xafL\xe3\xa9?\xd2\xa6\xde\xd3{\xb7\xa1v!=q\xc8\xa5c\xb7\xc4\x93K\x0cj6\xe4n+\xc1\x03\xbf=\xcfa\\\xfcHP\x08\'m\xf9\xdb\xe9H.\xb8\x18$}*\xb1\x14W\x0b\xe5\xf2\x00\r\x9c\x93\xe98\xe7\x1fO\x9aNY\x19\xf6\xeef\xf5\xb9m\x84\x00\x01\xc7\x15ckuUO8\xee+\xd1T\x91\x80y+\x9f\xefQ\xf2ZD[\x0b\x160H\xc63\xfa\x1a}\'F9#\xee\x05$\xb0\'\'\x1f\xa5E\xb4\x04\xba\xaa\x00\x19Pnl\xe4g8$|\x1a\xfa\'\xec\x7fW\n\x97\x9a,\xb9V O\x17`H\x18p=\xb3\xc1\xacv\xdbOe\x8d6\xc6\xc1\xf7g\x81\xea\x07\x15t\xf0|\xc3O\xd7\xb4{\x8d\xc0\x118Y\t8;d\xf4\x11\xf29\xaa/\x10\x84\xbf\xe9\x97P\x1d\xc8R\xc8{\xea]\xc5g|Sa\x17U\xe8w\xb6\xe4e\x92"\xf1\xfb\xebM\xc7\xeb\x8cV\xc9\xe2H\xda=b9\x94\x95\xf3`S\x91\xd42\xfas\xf5\xe2\xa4\xf4\x8dy/qkx\xc1n:#t\x12\x0f\xf0\xdf\xde\xbd\xf1\x15\x81y\xe2\x95A\xc8\x18o\xc8\xf1T\x8b\x88\x1e\x19\x8f]\xca\xd9\x04pEy\xd4I\r\xfd\xacA\xcf\xac \xc3w\x04W\xcbN\x85u\x81\xd9\xcf?;\xd6\x7f\xf6\x9d\xe1\xa8\xb4\xddt\xdeF\xbba\xd4\x11\x9c\x01\x90\x16U\xfcC\x8f|\xe7\xf3\xac\x8ex\x14l\x0b\x10\x04.\t\xf7\xaf\xa4<z\xb2\xeb>\x1f\xd1\xb0\x86[\x94\xbceb\x078\xd9\xd7\xf3\xe2\xb2U\xf0\xd6\xa3!\xc0\xb4q\xcf;\x88\x1c\n\xf4/\x0f\xf5\x12:e\xb8\xb9\x98k\x8f1\x9c\x9cd!\xc0?\xa5}-\xe0N\xa3%\xdf\x86\xfat\x97\x0e\x0b"\xb4Y\'\x95\x8c\x95\x07\xf4\xaa|V\xaf*\xe3\xd0\xbe\x8c\x0cg\xa8\xff\x00\'\xb9\xa9T\xb4\x96\xddLo\x12\xa9\x04q\x8fP\xfd\x7fZ\xb1\'\x86/_\x91\xb1FG\x04\x8c\x8c}*r/\rHQRI\xd7h$\xfas\xd4\xfc\x1a\xb1\x9b\xa9\xc01\x99F9\xc5k\x1e\xf2\x05\xc7\xf1\xd3\x1e\xd9\xaaQ\x83\x1b\xa3$\x86=s\x91\x81\xed]\x84!\xc6\xd0N9$v\xff\x00\xb5_\x93\xc2\x96\xb9Rd\x95\xbd\xf8\x03#\xdb\xbdJE\xe1\xfb$P\x05\xb9orI\xe7\xf4\xc5C\xff\x00U\xb7\x04\xff\x00\x18\x0f|\xed\xfaTG\xeav\xa0m&\xaf\xa0\xac\xd1T\xb1*\\\x90\xd8`G \x1f\x9fj\\\xda8e"O0\xb0\xe4\x8eG=\xbe\xb5\xaa\xb6\x91k!Q\x1e\x99m\x18\x18\xe0\x069#\xdfq4\xa4:<\xd0\xe7\xc9E\x8c\x93\xd5T\x06\x19\xf6=@\xa8\xb2u\x9bU|y\xc4\x809\x03\xfc\xe2\xa1\xb7U\x84\x8c\x85`}\x8e\x05ecK\xb9w`\x91M\xb3\x18\xfc\'\x1cs\xda\xbb\xfd\x8fv\x10\x11k \x04\x1c\x92\xa7\xfc\xe2\xb5y4\x8b\xc9\xb1\xe6M+\xe3\xa6\xe6\'\xadq\xff\x00\xa7\xa4=A\xa6[\xaf[\x0e\x18\x908\xc9\x03\xf5\xa6\x0fT_`>\xf5\x95.\x91tY\x18*\xa7n\\\x03\xcf>\xf4\xa0\xd1e\x04\x1c\xa1\xf8\x04\x93\xfd\xabWO\x0f\x11\xd4S\xc8\xf4\x05\x1dV\x98\x93\xc41`\xe3\x1f\xad4z\xae8*+\'\x8fE%\xb2\xcc\xc0\xee\x07*2q\xed\xcd>\x87C\x88F\xc1\xa3\x95\x9c\x9e\x0e@\x18\xf9\xe2\xb5\x88\xf44\x1f\xc1Oc\xd1c\x18\xf4T\x07\xf1\x1684\xc3\xf5\x82?\xfb\xd8\xfaVU\x16\x92\x88W\xcb\xb2\x00`n\x0c\xec\xc1\xb1\xef\x8cqR\xd1A{\x1e<\x8b[XH9\x0c\x90)`~\x0bn5\xa6\xc7\xa4\'\xf2S\xb4\xd2\x17\x8fEE>#\x9c\x961\x83\x93\xc9Q\xfe*\xba~\xad\x1b\x8c<\x8c\xc3\xd8\x9a\xa6Xk^+\xb4\xc87\xedp\x87\xf8.\x14H\x07\xd3\xa1\x156\xbe$\xd7\x99HkKL\x13\x9e\x15\xc7\xff\x00\xddVD\xd2\x07\xf2\x8aXi*?\x84Ut\xd7\x0fr\xda\xda\xc81\xc65c\x07\x06\xb3\xb3\xc3\xd0fr\xef\xd3\xe1,N\xe4(\x19\xfd*\x83\xa8>\xb1\xab\xa1\x8a\xe2m\x90\x9e\xb0\xc66)\xff\x00\xdd\xdc\xfet\xc6\x1f\x0f(\xc7\xa2\xb4\xf1\xa6\x01\xda\xba\x1ax\x1d\xa9\x0buu\x14z#\x83\xcbA\xd9p\x05J\x86\xf6\xce\xd61\x1d\xbc)\x1a\x0f\xe5Q\x81\xfbU\n\x1d\r@\x19_\xe9R1\xe9(?\x86\xae\x02\xc8\x0e\xd4\xa7\xddT\x0e\x95\x1aI\xee\xc8$\xe7\xf5\xa4\xbfT\'\x83Ud\xd3\x95q\xe9\xa5\x85\x9a\x8e\xd5`0\x8fj\xe0\xc5\xf1P\r\xdb\x93\xb9\xa4~5\x9b\xbdB\x8b`;R\xe9\x0e;T\x8f\x95\xcfJ\xf3\xcb\xf8\xa4\x99\xc9\xefI7\x05\xbb\xd2q \x15%\t+\x8al\x8b\x8au\x1a\xf4\xa6\xbc\xe7\x8d\x83+\x10j\x1c\xcd\xab9\xa9X\x98\xe2\x9f#t\xa8\xf8\xb2}\xe9\xe2d\x1a\xd6Z]\xc8UX\x12A\xefT\xf2\x81\x93O\xd0\xf1]\x91\x9aE\x0f\x14\xb0\xab\xa4\x9c\xba\xe0\x9eEAa\x83M\x9e\x1d\xd9\xa8;\xcbr\x18\x90*\xccFi\xac\x91\x06\xedU\x1dJ\xc5.#\n\xa0\xab\x83\x90\xd5"\xdev\x8d\x81\xce\xd5L\x92\xdc7\x18\xa6\xa6\xc5I\xe9\xc8\xe9Vi\xed\xb6\xb7\x0b\xd7\xb7\xbd6h\x80\x19\xf6\xac|\x8d-\xb4\x8d\x1bd\x10qV\xebp\x1c\x0f\x9a\x83X6u\x14\xee\xcd\xb6\xdd\xc0\xe17\x04uc\x9e\x9c\x1a\xf6ps\x81\\B.`\x91%ON\xc6\xdc\xbcw\x1e\xf5.\xc6UK\xaby\xa4\xce\x98\xe4Vb\x06p\x01\xceqJh\x84\x88\xe3 jR0N+C\xbe\xba\xb3\xd67C\x1d\xc0\xde\xb13\x01\xf2\x05g\x9e\r\x92\xeb\xf6\xf46\xba\xa4DM\x14\x84\xe1\x86>\x87\xe9R07\xef\x03\x97*Y\xb2\xc4{\x9e\xf5i\x11\xc5=\xcd\x84\xd3"\x0b\xa8\x18\x18g\x07\xd3"wRk\xdb\xfa\x1f\\\xb3\xf1oQ\xb2\xba\x9d#\xb6\xb8\xb4\xb8RH\x19\x8eU$a[$\x95#\x1e\x92v\xce\xd5\x96\xbd\xb7n\x9bk<1\x16\x929##\x07\xf3)\x1d\xc7\xb8=\xebG\xa2\xa3\xa0\xd4m\xe6%C\x80A\xc1S\xd4\x1a\x91\x04\x11\x91^\xb8T\xaf"\xb2a\x83pk\xc3^\x8a\xf0\xd7\xa2\xb9]\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xbc5\xedrh\xa2\xbc\xaf(\xcd\x15\xda\xe52\x9fN\xb0\xb9\x93\xcc\x9a\xd2)\x1f\x18\xdc\xc3\'\x15\x15s\xe1-\x06\xe8\xb6\xfb 7\x0c\x10\xa4\x81V*)\xb9"\x8aQ\x89"G\x1e\xcc\xa0\x8f\xde\x92cC\xca\n\xabY\xf8\'\xc3\x96K2\xae\x9e\xb2\t\x06\x0f\x99\xea\xe3\xe3=+\x8d@\xe9\xfe\x1e\xd2\xd6\xce\xd96G\xce\xd4\xcep;\xf5\xab[\xba\xc6\x8c\xccp\x00\xc9\xacW^\xd5\x86\xa1\xa8\xdd2\xc9\x98\xe2\x1b\x17\xe4\xf7\xaa~\xad\xd4l|?c\xf8\x83\x1cQ\x92|\xb8\x94\x00\xbb\x9d\xcf\x1d\x862ipZ\x89\xee!\x824\x00\xc8\xd8$s\x8e\xf5+\xa4j\xba|\xfa\x8c\xa2r\x13p\x02=\xc3\x00\x9a\x99\xd7\xecg\xba\x81f\xb4\x98\xac\xd0\xf3\x1e\x0f\x06\xb1MF\xf6\xea$\xca`(<du\xa54\xbf\x1e\xde\xd8\x85K\x89@L\xe0o\xe5\x7f^\xa2\xb1\xf6\x9e4\xe9\x1dF\xde\xe2\xca\xe9$E\x94\x91\xe7D4\xeew\xc8\xc1\xceA\xe0\xd6\x9a\x7f\x0f^DVx\n\xb6\x9f\xe4\'\'\x15b\xb7\xb8\xd5\xae5\x9b\x04\xd4\x0c\x84\xef\xc0\x0c1\xc6;R>^\xd7q\x8e\x8c\x7f\xbdIi\xbe }gT\xb0Y\x04~Z\xc9\xbf\xcc\\\x1c/N\xa3\xeb^\xdf\xda\xfd\xd6\xeaU-\xb9w\x1c7\xbek\xcd<Sc\xe5\xd8\xa5\xccW\x93^G\xf8\xe9CM("OR&5g$\xfeR3\xc5X\xf4\xe2Rf\x8d\xe2X\xdb\xcb\x07J\xf1\xb1<S\x15\x8f&\x94\xf2\xe8V,p\xa3\'\xda\x9e \x822\x0c\xd2\xa8\xff\x00ny\xacL\x16\xb7\x17-\x84P\x17;\xbb\x1c(\xfa\x93W^f\x9f\xf09\xa6\xa2\x1d\xdd\x06~\x95\xd2\xd8<\xa3!x\xa7O\xaaB\xb9\xf2Qv\xf4\xc9\xe2\xa3\xa4\xd4\x91\x80Cp\xaa\xbc\xf0:\x7fJ\xb1\x16\x16\xf0\xb8\xd5,\x93\x8c\x1f\xfd\xb1\xa1I\xce\xde\xa6\xe4S\x88f~\x17O\xd7s\xfaW\x92\xe9#\xbb\x0e\xbe\xdd\xbd\xea2\xe3M\xb5\x8d\xb6\xc9 RFx\x19\xa5\xa4\xd4\xf6\xe4@e\x7fr8\x15\x11,\xf7\xf2\xb1>Z\xe0\xd4\x82\xf6\xc8\x00\x8e\xdb\r\xb6u\xc8J\xfe\xc4f\xa6F\xb3\xff\x003\xe0~\x86\xa3\xb5\x1bHa\x86y\x11\xd4\x84RA<v\xaaV\x97\xab\xcc\xd1$w6a\x9f82\x0e\x98\xf7\xc5\\\xee\xac\xae\xae\x94\xac\xad\xe88\xca\x8e\xf8\xa6\x83K\x8e\x01\xf8qR\xad\xee!H\x9d\\+\xb36F3\xe9\xfaT\xc4r\x06\xed\x9a\xab\xea\xb3\\L\x15-\tQ\x8eX\xaf#\xe9T\xd9t\x8b\x8d\xed+\xcd&\xf3\xfc[\x8ekP\x92\x0c\x92\xb1\xc7\x93^G\xe1\xe9n\x0efb\xaa{\x0e\xb5c\x07RKd\xe5P\x1e}\xcd9\xaf\x8c\x9f\xde\xb1\xd7\xb2\xbaG\xdb\x0c\xb2\xee=\x02\x92io\xd8\x1e#\xbc(Z\xe6d\x03\xa6[\x9f\xd0V\xfde\xe1\xfb;u\x1b!P}\xfb\xd4\xcczd#\xff\x00\xa6)2\xf8\xa8F\x7f\x87\n\x92?\x99\x80&\x94.U?\x9d\xb1\xec\t\x15\x83i\x9a\x0e\xb5c)\x91\xe7k\x9d\xdf\x89%\x03\x1f\x969\x15b6Z\x8c\xc9\xb4i\xb1\x0f\x90Ml)\xa7F?\xfab\x9e%\x84c\xf8ET\xcf\xe2C#\xebhSW\xc6\xdf\xb0\xa7?\xd6|\xb0\x00-\xb7\xfd\xc4\xd6\x184\rP\xfe+h\xb0{m?\xf3H\xff\x00\xe9\xfdMI?vV\xecy \xd6\xf9\xf78\xc7\xf0\xd7\re\x19\xfe\x11M\x8f\x12M\x9f\xfd\xb4\xa7\x17\xc4R\x03\xdc\xfd\xeb\x03}\x16\xe4\x8c5\x9c\x80\x0f\xf7\x03\xfaqH\xbe\x88\xf9\xce\xcb\x81\xed\xe9\x07\x1f\xd6\xb7\xd6\xb0\x8c\xff\x00\r"\xdat\x7f\xcbN\xa7\x89\x1f\xfd\x98\xfa\x1f\xf3RS\xc4\x8e;\x1a\xf9\xf9\xb4\x04V\'s\x03\x8e\xa5:\xfdi\x1f\xd8Q\x95#\xcfL\x1e\xe66\xfe\xb5\xf4\x1f\xec\xd4\xceB\x8f\xd0\x1e\xb5\xc1\xd2\xa2=c\x8c\xfdQ\x7f\xe2\xa6\'\x89S\x03T\x92\x03\xf0\xa0\xd3\xe3\xc4\xcc?\xf3\xfe+\xe7\xd3\xa1\xc7\xb0\xa8\xb8\x88\x1cc\x9c\xe0\xf3\xed\x8a]4\tg\n\x91M\x04\x9bF\x00\xdd\xb4\xf3\xf5\xad\xdc\xe8v\xad\xd6\xd6/\xff\x00\x86\xb9\xff\x00\xd3\xda{~+\x14?\xfbIS\xfei\xe5\xf1\x14\x0c@7\x01w\xe5\xd4\xe3\xf6\x14\xb3\xe2\x81\x8d\xc1\xcf\xd0\x7f\x91X\x84\x9e\x1e\xba\x12\xa3\xc8-\xd4\xec\xc7\xaaQ\xd0RRx~a\x872@7\xe4\x16\xf3\x14\x8cu\xad\xb2o\n\xe9o\x92\xb1J\x0f\xc9\x06\xa3\x1f\xc1\xf6\xdc\xe1\x063Kn\xbb\x0c`\x0f\xc4#{\x14\xdf\xfa\x9av?\x12\xa3c2\x01\x8e\xc5O\xf9\xacs\xf6<q\xb2\xaf\xde\xed\x88\r\x90\xa6A\x8e}\xc8\xa5\x13O\xb5\x8c\xed7V\xe3\x8d\xb9\x1b\x88\x00~]ke>\x11\xd3\x16\xdf\x0b\x0c\xa6b9b\xc0 \xfa\x002i\x99\xf0\x8c\x1d\xd6\x9d\x97\xae\xda\xa0\x00\xdc\x07,\xa0\xe5\x7f\x97=\x8f\xcd8\xbe"\x89\xb3\xfcLo\x8d\xc7?5\x92\r:\xd39[\xd8\x14\xe0`\xe1\xf28\xe7\xb7zM\xf4\xdb\x0c\x90\xf7\xaa\xc5\x8f\xa9\x95\x1b\xfc\n\xd7\x0f\x85!\x1d\x12\x91o\x0bD?\x82\x90:\xed\xb9\xc7\xf1\x9c~\x99\xa5\x0e\xba\xa7\x89\x97\xf4\xac\xb5,4\xb0\xde\xad@\x80H-\x88[\xb7N\x00\xa4\x08\xd3\xa2|\x85\xbb\x9b\x00\xa8\xf4*\x8c~f\xb5F\xf0\xbc_\xc9H?\x85\xe3\xfeJZ\xf5\x9bb}R\xc8s\xd8\x90?\xa0\x14\x93\xd6\x1d\xb8\x9c~\x82\xb2\xd7\x93LPJiWL\xc4\xf3\xbaE\x03\xf2\xc04\x82\xdc@\xa1\x97\xf6\x19`}\xe6?\xf1Z\x89\xf0\xd2\x8c\xfa)3\xe1\xc5\x1f\xc1O\xafW\xb3\xc6=G\xea\xed\xfei\xb3\xd4\xa6?\xff\x00P\xdb\xfc\xd6p/\xc2\xa8\x11h0+{\xc8\xec\xff\x00\xd3\x02\x91iu\x19\te\xb4\xb4B{\x08\xb3\xfd\xcdi\x83\xc3\xab\xfc\x94\xe5<>\x83\xf8(\xff\x00W\xb3M\xc4`\x9f\x92[\xfa\x93L\x9b\xc7\xceL\xcd\xfa\xd6[m.\xa1\x03\xee{H$\xe3\xa6\xdd\xbd>\x9d\xe9\xfc7\xed\x1e\x0bi\x1e\xa0A\x05X\x0eGC\xd2\xb5\x04\xf0\xfcG\xf8\x05=\x8f\xc3\xb0\x9c~\xe8~\x95\x1aN\xb7f\xc4\xea\x87$\xed\xb1#\xfaR[\xa8\xb0\x04\x19\xce>\xb5u\xd2\xee\xad\xfcE\xa5\xda^!\xdb\xe6F7\xa1\xe4\xa3\x81\x86S\xf2\rU<E&\x9f\xa4mk\xa6m\xcc\x0e\xd5E\xdc\xccGP?\xefN-tImIh\x1aHI\xeaP\x95\xfe\xd4K\xa1\xa4\xce^`\xd29\xfe\'$\x9f\xebY\xd0,\xe0d\xfe\x1c\x88\x81\x8e\x08$\x12\t\xc8\x1b\xed\xb7\xbdy\xbf\xff\x00J\xd95\xf4\xce\xf7\xf9\xb7v\xcf\x96\xab\x87\x1f\x19\xfe\xf5\x8a\xea\xfa\xa6\xa1\xabL\x9bm|\x9bx\x891\xc7\xb8\xe7\x9e\xa5\x88\xeaM\'\x07\xde\x17\x86\x89\xf1\xf5\xcdm#\xc3\xb6\xdf\xfe\xc8\x0f\xca\xbd\x1e\x1f\x84\x7f\xf4\xc7\xe9W#\xafY\xa4K\x1a@\x15W\x81\x9a\xda\xda\xbd\x8d\x94\x11\xc1o\x84\x8d\x06\x15Ef\x96\x8f \x18\xd9\x9cv<T\xf5\xaf\x94p\xcf\x03~Db\xae#@\x80\x7f\xf4\x85,\xba\x1ck\xd1qQ\x9f\xac\xc4\xe4`pv\x07qN\xb5\xec\x07\xf9\xea\x1e\xd6\x1b9\xc7\x11\xb0?"\x9f\xa6\x9dn\xec\x02H\xbfJ\x98\x83J1\x95#\x90;\x1a\x98\x86\xcc9U\x91#\x07\xb3\x10G\xeb\x8a\xbb\xb5\x82\xda\xfe$\x0c\x11\\\xb0\xdc\x0c\x03\xf1\x90v\xaa\xe9\xaf\x95\t)!#\xebP1h\x87\x8c`\xd3\x85\xd2\\\x1f\xc2*j}\x12\xfa \x92\x07!\x0bd<m\x95\xfaqL\xde\xe3R\xb6\x93j\xb0\x99\x7f\xdc?\xcdv\xf7\xa2[\xdb\x0c\xdcY]D\xa4\x8c2\x9d\\\xfc\x1cT1{$\xe31\\\xc6\xff\x00\xb5!\xfb0\xa8\xe5+\xa5\xb0\x07\xf8E<]h\xa1\xc5\xc5\x99\x03\xddy\x14\xee;\xdd6\xe7\x04J\x14\x9e\xcd\xc5SM\xd2\xece8\xb7\xbd\x01\x86\xde\\\xb9\x8d\xbf\xff\x00je\xa7\xbc]\xda6\xc7\xfb\x97q\xfbTH\xb2\x19\xc6\xda\xe8Y\xff\x00\xb6\xa7|\x84 \x14pG\xc5zc\xc09\x19\xaa\x8b\x8e\x93}\x06\xac\x821\xb8<\x82>\xd4\xd7\xe3\\\xf7\xa8Qk\xf1J\xad\xb0\xe3\x8a\x95X\xe38\xceW\xe7\xadz"\x00\xe3 \xfc\x8a\xab\x92\x0b\xa4\n\xc4\x06Rq\xb1\xfe\xdc\xd2\x1a\xe9\x8ew4\xd1-\xc0\xedO\x12\x01\xedNV\x13\xc7\x1cR\xea\x95yg\x11@\x80\xa6>\xb5\x0eK\x82s\xea\xa6\xcb\x08\xf6\xae\xc4#\xda\x9e\x84\xae\xc2\x13WI\x16\xac\x00\xa4\xe6\xa3\x19\x8f\xbdGy#\xda\xb80\xe7\xb5Ky5\xc9\x86\x96\xf6.W\xf2\xd7\x05\xc7\xcdD\x18\x80\xedI\x98\xaa\\\xc1H\xb4$v\xaa\xe9\xeceP}\x04\nug\xcfz\x88x\x8d"c\xf8\xa9\x83\x18\xa4\x9a\x00j\x82\xe7\xa7\xc8\td\xfd*B\\{\xd4G\x97@\x88\xfb\x8a\x93\xfb\xb7\x19\xeb\\\x1bcQ\xbf\x05w\x80|\xae{f\x9d\x17\x0b\xfe\xea`#\x1e\xf4\xe1\x15A\x14\xe9m\x97\xbd* \x8f\xe9O\'M\xb9c\xb8N\xdb\x13Hy\xd4\xf74\xb4\x18\xc6;T\x9a@\x1b\x9c\x8a\x8bU)\xde\x9d\xc4\xe4\x1ek_\xd3\xa4\x8a0\xb1\xcb\x0e\xae\xdc\xe3\x15]0c\x92\xadNvm5\xd8\x02\x95F\x0c\x06i&\xc8&\xae$\x828\xd4H\x98({{T@\xc4\x9c\x1ek\xde\x95\xc1\xa5\x15\x869\xa4\xdb\x03\xa1\xa8\xd3*\x88\xd5\xc3\x02\x0fc\xc8\xae\x8c\xe7\x18\xa4\xa5Du \x8a\x86\xba\xc2\x8e\x07\xc6jJiB\x83\xcdf\xfe(\xf1e\x96\x93<\x16\xad0\xf3e\xe5\xf0y\x8d?\x98\x8f\x9a\xcb\xdf\xa3^\xca\xb6\xf0\xc5\xaeV\xe7H\xc9\xd2\xbb\x93\xf6\xab+(]\xdc\x00\rOD<\xf9\x9b\x03\x858\xfa\x9a\x9dX\x01\x8f\x18\xea9\xaa\xe6\x8b\xa9\xe9\xfa\x8d\xbcr\xc1s\x1c\x83\x1c2\x90j\xd3\x19e\x1e\xeb\xee*\xee\xce\xc2\xce\x18\x8a\xc2\xe5\xd4\x8c>v`\x7f\xee\x1d\xa9\xfb\xa6\x900\x04i\xd3\xc7\xcdD\x88\x9a&*G\x14\xed%\x92\xdf\x00\x8d\xc9\x91\x95=?/j~\x04ny\xc6iy\x92\x06EP8\xc7_\x9a\xab\x83\xa1\\\xc0\xd3\xdc\xda\xdf\xacM\x19\xccg;\x9f\xfbO\xc7\xbdG{\x80\xfaU\xe3\xc8<\xd2W\xe8\xd7\x16\xbf}\xb2\x99\xbc\xd8\xc0\xdd\x8f\xc4@\xfe\x17\xff\x00\x06\xac\x9e\x14\xd6\x0e\xa3hc\x95\xbf{\x19\xc1\xcfZ\xa7\x94\x9e\xd5\xbc\xc8\x98\xe0\x8e~G\xb1\xaa\xdd\xe6\xba\xfe\x17\xd6\xf4\xadI \x91\xac\xef\xa6\xf2.\x920HI\x0f\xe1a\xed\x9e\x84W\xb3xG\xc5\xb7=Z\xe6\x0b\x1b\xd4\xfc=\xd2G\x87\x8d\xb2R@8t?\xd4Vz\xff\x00\xa5\xc7\x1c2K\x10\xd43\xa8\x11\xc8\xf85\xf4\t\xafi8\xa4\x12\xc5\x1c\x80\x10\x19A\xc1\xeb\xcdv+\xd28\xac\xf8\xde\xbd\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xaf\r\x14W\x95\xc95\xe9\xaeM\x14Pk\xca(\xa2\x8a+\xdc\xd7\x94QEP<g\xab\xea\x11\x04\xb0\xb2\xb5\x95\x9ea\xf8\xd5I\x00Vn4\xeb\x9d;\xca[\xe8\xde1#d\xe7\xa9\x15\xf4)Db\tPH\xefX\xef\x8f/\x03_\x85\xcf\xa6\x18\x89\xc0\xf75\xe6_\xf5\x0f\xa4\xa4\xb6m\xd4\xa5\xbc\x9aI"\x92(\xedm@\x1e^]\x80 \x81\xb9-W\x1d\x01\x0bu(\xf0\x07\xe5b\xcd\xdc\x00*\x85\xaf\xddC;m\x89\x02E\x18\xc2\x0f\x7f\x93Y.\xaf\xa9\x08>\xf2\x91\xdb\x1b\x92\xa8KF\x0e1\xf3WO\x12\xbd\xe6\x99%\x88*\xa2[\xac0F\'0\xa1\xff\x00\xea\xc8\x06x\x1e\xd5\x1f\xe3\xb9\xf4\x8f\x0bi\x91\xc7k\x0c7z\xb9#}\xcb\x82\xae\xdej\xe7z\x81\xd4{\x03\xc5@\xf0\xef\x83\xaeeY\xfa\x97Y\xcd\xba\xa8\xf3<\x9c\x05\xc0\xed\x91\x8d\xbe\x05j\xaez\xb41\x1b{kO\xe3I#iR7\x1brsP?dW\xfa\x8akZ\xf8\x96eX\'\xd3\x9b\xcb\xb5\xe4\xb2\x92\xcb\x86\xf8\xad\xeei\xde\xde\x19\xe1\x99U\xe5`\xa6I\x19\xbf\xd3\x03\x9d\xb9\xe9\xf55\xf1\x7f\x84\xbcs7\x845\xf6\xbd6\xbfz\x96\xe0y2+6\xd3\x96a\xcfC\xd3\xb0\xab\x0f\xda\x87\x8enu\xbb\xd4\xd3-|\xdbx`#\xcdD\x93\x89U\x86w\xb0\x1dOlWz\xa7\x87/\xba\xfd\xc2~\r\x16\xda\x08m\xccM+\xe0\xa9\x0eNB\xaf%\x88<\x9cc\x15\xc9\x17\xf0\xf3\rc[J\xc1\xb6\xecW\x1c\x9fa[v\xab\xe3\xbd\x0bN\x86\xfc\xc7v\xd7\xb2Z&\xf9\xa2\xb4\xf5l\x19\xc7\xa9\xba\x0e~k\x0b\xd4\xfe\xden\xf7L\xba~\x83\x10\x0b\x9c\xbc\xd2\x17o\xc8.\x05f\x16W\x1a\x94\xb0j\x16V*\x14\xcb\x19\x13\xb36\x10\x0e\xb8=\x87\xc5Wmt-F{\x91\x13BT\x027\xc8\xc4\x85\x00\x9e\xc7\xbd?\xd3<\x17\xd0zp\x8c\xb9{\x99\xb4\x1d^i\x00g\xfe\xd5\x1d\xa9\xd3%\xc9\xd4B\xe0j\xc0 \x7fZ\xde\xf4\x1f\xb6+\rNE\x83QI,\xe4$\x00\xe4\xe62~\xbd\xabl\xd2\xddn\xc2:\xb0da\x90A\xc8 \xd7\xc6\xe7\xc2\x1fsc%\xca4\x86A\x94^@+\x9e\xab\xff\x00z\xd1<\x19\xe3{\xcf\r\xc9\x1c\x17Q\xbbXn\xdb\x82r\xf1\xfc\x8f\x8f\x8a\xa2\xf1\x07\x86-\x9a9\x1f\xa5+\x07Q\xea\x88\xf1\xff\x00\xeaN\xf5m\x05\xcc\xf1\xa6\'U\xdf\xf2\xb0\xe7\xef\x8a\xfa\xde\xde\x10#\xd88\x04\xe4\x8fzpm\xd4\x7f\rEh\x9a\xbd\x86\xado\x0c\xf6\xd7q\xbcr\x80R@}\'\xeb\xedVG\xb7\xb8\x8dC<Gi\xe8\xc3\x90~\x84W\x93\xcbm\x7f\xfcF0JV3\xa5\xce\t\xd1\xf0}\xbe\xf4\xdb\xcd\x87\x00\xb0\x04\xfe\xf5\x14\xd0)\xedQ\xd7\x16\xcaG\'\x1f\xde\xac^K\xb8\x18S\xcf\xc5t\xdal\xca\xa1\xcc\x0e\x01 n*z\x9an/\xc4n\xcb\x14\x84(\xc9!I\xc0\xf74\xb1r\x89\x80\xce\x01<UV\x0b@\x1b+\x18Q\xeez\x9a\x93Kpz\x8a\x95\xfb\xa1F\xc3\x82\x18v#\x14\xba\xc0\x07Jjk\x96\xd4C\x02\x08\xd8\x83\xc8\xa1\xaeW\x1b\x1c\xd3\x14\x84\x0cqN\x16/\x8ar#\xc5(\x12\xa24\xa4\xf7\xa8\xed1=\xe9%\x8e\xbb\xdb\x8aP-{\xb6\x99-\x9e\xf4\xc9l\xd28\xaf6\x8a[o\xc5z\x16\xbb\xab\x15\xcdT\xdff{W\x9e_\xc5:\t]\x84\xf8\xa09<\x02h2\xe3\xbd3\xf2\xab\xdf({S\xd1\x11\xae\xbc\xa3K\t;q\x1b~\x94\x9f;\xe6\x99yc\xda\xbd\xf2\xc7\xb5<\xf2\x8f\x14yF\xbaa\xb8\x1f\xfd\xb3\\\xf3~i\x9e\xc1^\x18\xc7\xb5<X\x9d\xce\x15r}\xbe\x95\xc1CH)2\xaa\xb3F\xc1I \x1clH\xe4\x03\xf7\xa0K\xbe5SO({W\x06\x11\xedOv\xd1\xb3\xe2\x92$4\xbf4\xfb\xd3\x03\x00=\xa9#n\xbe\xd5\'\xb2\xbc\xd9\xf1J\x13\x11\xde\x96\'#\xbdD\x9bu\xf6\xa4\x9a\xd5O\xf0\xd4\xc9\x8f\xe2\xb81\xf3\xd2\x9c\x13\x9fzqn[\xde\xa0\x9e\xd1OjD\xd9\x83\xda\xac&0{W\x06 :S\xabr\xde\xf4\xf2\xdd\xb8\xeej\x03\xeec\xda\xbb[1\xedS;@\xea+\xd1\x18\xf6\xa5~!\xfd\xe9F\xed\xcfz\x8dK@;S\xb8\xa0\xdax\x14\xf9"\xdd\x8c\n\x90\x86\xd3\xa1$\x0c\xf4\xa9\x16p\xde]\xca\xbeJ\xb6\xdf\xcd\xd8TI\xae\xf0\x0e\xa3L\x16<\x8f\xc3\x8a\xe4\xda\xee\xe7\x15k\xb6\xd2ZL3\x15\x08{\x8esN\xe4\xb4\xb0\xb6]\xcc\xe7#\xa0\xe3$\xfd+{\x17\x83\xfa\xb5\xd5\xa8\x9a\xed\xd2\x18\x80\xc9iX.\xde\xe0U[u4W\xd2\x99c\xec7\xaa1\xb4#\xb5s\xf7o\x8a\xb1K\xb5\xd8m\x00\xe7\x93\x81\xd2\xb8\xf2\x0f\xf2\xd50\xf0\xd3J\xe4B\xc5\xd4\x1d\x98n\x0f\xe9\x9a\x92/\x1b\x03;T\x1a\xdb\xe3\xa0\xa7\xb0\xc1\x19\xc7\x98\x87\xf2\xa9/!\x87\xf0\x0f\xd4W^S\x8f\xe1\xfe\xb5\x7fc\xe1\xc9\xad\xd9K#0\x1f\xcaS#\xf7\xa6\xde\xebP\xfc\xd8\xf9\xcd3\xfb\x94D\xf0H\x1f"\x9c\xc7i\x16F\xe6\xc0\xf7\xc6iuG\x1d\xab\xdd\x8f\xed\xfdEh\xad\xbaZD\xda\x96\xcfrw\x18`\rFi\x9c\xed\xe6\xfe\xe2\x88\xc7\x90O\x96r\x0f\x04\x11\xc1\x1f"\x99\xdcX\xdaNK\x01\xe57\xcf+\xfa\xf6\xa7,\x18u*?:A\xe4P2\xd2\xa2\x8f\xaej\xdc)\xf2\xbc\xa9\xa1S\x109\x0b&\xc0}\t\xc1\x14\x85fV,\x92\x10\xc4r\xbc\x9f\xaf\xbdEM\xa4\\\x00J\xc5\xe6\x01\xddHaU\x8b\xfb\x10\x03\x02\xbbH\xed\x8ejsQ\xf1\x97\x87\xfc<\x8f5\xd6\xb5o\x0e\x06\x08.\t?\x90\xc9\xac\x97\\\xfbr\xf0\xf3J\x86\xca\xd6[\xb6rUe\xf2\xf6F1\xee[\x9f\xe9Q.:WE\xba\x83\x11H\xe6BwE\x02E\x1f\xfe\xcb\x8c}\xeau\xac\xfdK\xcd\xf5D4cf9S\xfa\x1a\x98\x92]V\xd1\xcf\xdd\x9aN\x9c\x11\x9cR3}\xa0I\xa1\xc7\xbbW\x92\xd4F;\x99\x02\xbf\xe4+\x14\xd7~\xd2<S\xaa\x86Dx\xec\xe1f \x88\x08\xde\x17\xdfs\x7f\x8a\xcc/,n\xb5+\xa7y\xa5\x96\xe2L\x02X\x92\xe7\x8e:\xfd*\xae\x0f\x0c\xc0\x8f\xb5\xf3*r@\x03q\xed\xcd_0i\x13\x12[\xa9j\xfb+B\xfbO\xf0g\x88$Xm\xb5t\x8ebp#\x9b\xf7D\x9f\xf6\x96\xe0\xfeF\xb4x\xa4\r\xc8#\xb1\x15\xf9\xee\x9e\x19k$\xd5\xfe\xf2\xa4MnT\xac\r\x94e\\d\xb9\x1dN:b\xaf>\x14\xf1\xc7\x8a\xfc=\x142Y\xea\tuf\\(\xb5\xb9\xdcS\x1e\xd1\x93\xea\\`\xf4\xa6z\x87\x83\x80s%\xa3\xb9\x07\xf9\x1dw\xdb\x9c\x11\xed\xf4\xaa\xd7\x88\x1c\x80WW\xb6k\xed\xd8\xa6\xdaFG\xebR\x91G\x14\xea\x02\xfa\\\x9f\xcb\x15\x8a\xf8g\xed_\xc3\xba\xe2\xacw\xa1\xf4\xb9\xf7\x05\xfd\xf70\x16=1/A\x9e\xdb\xb1Z\xd42aU\x91\xb2\xa4d\x10r\x08=\xc5W\xdaY\xddYHR\xe6\xdcK\x0e\xe0\xe4n>\x9e\xdfZ\xac\xb9\x85\x97\xb1F\xa9\x96\xb1\x919\xc6G\xc5$c#\xb5\'\x1d\xe4\x83\x1e\xb3O\x16\xe9\\a\x805x\xb0\xf4\x99s\xe4\xb3\xc0q\xf9_q\xfa\xd5i\xf3\xd3\xf3\x00\xdf"\x9a\xed5\xc1V\xa7D\xabt\xa3\x02\xa3\xb5\xa0\xc9\xf5d{\x8a\xe8r;SR\x8ci6\x8d\xbd\xa9\xf6\xd1\xed@\x1f\x14\x93f\x18`\xea\xde\x94%"\xa2\xda\x16\xfeZD\xc6s\xd2\xa6\xf6|RL\x83\xda\xa1O\xd2P\x0c\x91\xfa\x8aqn\x0f\x18\xa8\xc5O\x8a\xec\xc7\xf1K8\x0b\xc8\xa6\xe6F\xcfZ\xa9\x9d\xa0\xb7\xc2\x11\xbd:\x0b6\xe2\x92h\x9b\xb5#\xe5\xbez\x1f\xd2\x9dn\xcfz\xf43\x0e\x86\xaa\xdcB\xed\xf9\x9c\x0fq\xbd:\x1d\x87\xb1\xa6\xc1\x1a\xbc\xf5\xaf#4\xec\xc8q\x82\xa2\x80\xa4\xf3\x8a\xef\x90\x8c\xc0C3\x12=\x86\x08\xa3Y\xee\x05\'\x1c\xe0u8\xa7"\\\x8e\r#$a\x97\x04})\xb0\x0c\xa7\x83O=\xe5\xc5\xa1\x11\xb1\xd4\xa4l\xc3cI\xd0\x8f\xb8\xd8\xfbS\xdd\xd9\xa4\xa4|\x0e\xb4\x97\x99\x81\xea\xa8\xbb\xdb\xe8\xad\xe1\x96id\t\x1cjY\x99\xba\x00;\xd4;\x8b\xe4\x0b\xb1%\x9be\x03\x92~\x94\xb8\xe0.\xc0\x01Q>&\xd7\xe0\xd0\xf4\xe9\xee\xe5\xf5\x11\xe9\x8a1\xd6I\x0f\xe1Q_\'\xfe\xd4\xbd\xd45\xcb\xa9o\x97\xcc\xb9\xb9\x94\x90\xacp2F\x00\xc8?\x84t\xc5h\x1a\xf6\xb7\xa9k\xba\x9d\xc4\xa8\xb1}\xda5Ao\x14\x8e\x17\xcbBr\'\r\xc8$\xf7\x1dj\xab\x16\x9b\x0e\xa1\x7f3\xa4\xc1Li\x81\x81\x96f\xc7\xfa\x99<g=F+\xd3|3\xe1v\xe9\xd6\xa9yp\xc3\xf1\xd7\x0c\x0b\xc6\xc0a#\xcf\xe4\xdf\xbf\xbdj\xba|i\x00et\x18e\xdd\xbb\x83J\xc3q\xaa[\x9bq\x06\xa0\xd6\xe65"\x11o\x19 \x9c\x9fK\x9e\xb8\x07\xb9\xab\x96\x95\xf6\xc56\x97<vZ\xcd\xa7\x99\xe8\x05n 9\xdc:z\x94\xf7\xfaVk\x7f\xa8%\xa1\x969Ze\xb8\x87\x82va_?\xc4\x08\xe3\x06\x9c\xe9\xd6ZK\xda-\xf3\xc6\xe6I\x00\xda\x8e\x14\x9e=A\xa3\x1d~\xa3\xa1\xadwV\xf0\xefL\xea\x89\x13\xb2\x85\x9c\x90\x16d\xcaH\xa0\x0c\x10\xc5y\x02\xa3\xcbo\x89\\4yNq\x9d\x8e}\xab\xe9[\x0f\xb4/\n\xea*\xa7\xf6\x8aD\xc7\xf8e\x063\xff\x00\xfdU\xb2\x1b\xab{\x94\x0fmt\x92\xa9\xe9\x86\x0c?\xa5|u&\xb2\xeb.\xdb\xad=\x1e5\xc93\xf4R?\x87\x8e\xd8\xe8jWO\xd5\xe1\xbaEK\x08\xa70`\x8b\xb6\x82M\x866<\xa9R\x08\xc0\xac-\xcf\x84\xa6Yf\x8e\x1e\xa0\x1bF2e]/\x82q\xca\xd7_\xa4)Udf\x19\xed\xb3\x0f\xed__[\xde4/\x89\xa1\xdc\x87\xf3\xa4u\x9d\x1e\xcf[\xd3\xaf!\xb5\x9bc\xc9\x1eB\xf4!\xd7\x95a\xf2\x08\xcd|\xc4\xbe \xd5 *\x0e\xab|\x9b\x00\n\xab!l\x01\xef\x9e\xa6\xad\xba^\xb1\xaaX\x18\xae\xa4\xd5\xde\xe5f\xf5\xc6\xca\xe4\xe1\x08\xe4\x10{\xff\x00j\xb9\xe8\x1d\x07\xac\xc2\xd0\x0b\x8b\x8b)!IC#\xb1"h\xceq\x94`\x07\xe9Tw\xf6\x1eN\xa2\xa5\x8b\x15>\x95\\\xab\x003\xb85\xf5\x1f\x84uV\xd5tKG\x95\x87\xdebO*\xe5z\x15\x95=,\x08\xfa\x8a\xb3\n\xa3\xf8\x0e\xc8Z\xe9\x06w\x97\xcd\x9a\xf2F\x9aY\t\xcb\x12\xde\xf8\xf6\x1cU\xdf5\xeb-\xab>\xa03\x81\x9cq\x9e\xf5\xe7\x84*\xb3\x859P\xc4/\xd0\x1d\xab\xaa+\x9c\xd7\xb9\x14\x9a+\xda(\xcd\x14QE\x14QE\x14QE\x14QE\x14QE\x14Q^d{\xd1\xb8{\xd1E{EpdQ\xde\xb9\xf3V\x8cQ\x9aV\x8aD\xcc+\x838\xf7\xae\xe2\xb9\x9asE23\x8fz+\xbaMsU=\xa2\x8a)4\xaa(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xb9\xafI\xaeI\xa2\x8a\rrh\xc8\xa0\x9a(\xaf(\xa34f\x8a(\xaf(\xc8\xaeK\x00\t\'\x18\xa2\x8a\xa3x\xc7\xc7\xbaW\x84`\x94\xdc:\x99\x96=\xe1\t\xc6s\xc0\x1e\xf9&\xber\xf1|w\xde\'a\xe2k\xf9\xaet\xfb\x0b\x18\xe0\x9eX\x83m\x0c_\x04D\x9f\xcc\xc7\xde\xb4\x0f\x12\xda\xe8~*\xd6\xeec\x8fR\xb73\xab\xb6\xe06\xbb\xc6\x91\x1c\x923\xd0\x93\xc5c~4\xf1\x8f\x87\xad\xf4\xd8\xf4\xfb\x0b\xa7\xbd\xb4\xb4p\xd2C7\xa4<\xa7;\x88\x1f\x07\x9c\xd5e\xf2C ?\x88\x11\x98\xd0\xe6<\xff\x00\xbcm\x9a\xd2\xf4kf\x91\xa3\x16\xeb\'\x9c\xdf\xfb\xad\x8d\x82\x1e\xc3\xb6\xf5K\xfbM\xf1\xd4w7\x96\xb7\x9aM\xf9\x8b\xcd\x83\xc9\x9dU\x8e\xf21\xf8[>\xdd3UM\x7f\xc7z\x96\xa9m\xa6\xdb\xdf\xdd4\xed\x08\x8c,\x91\xa8\xf5"\xaf\xa7su$Vq\xa9L\x9a\xae\xa14\xfb\x02F8\x00{\x0e\x9fZua%\xed\xe2Z\xd8G\x05\xbb"6\x11\xc8\n\xdb\x8f>\xa6\xefU\xb7\x13\xbd\xc9\xb9\xc37\xf1P\x06E\'\x07\x1cV\xc2>\x97mc\x15\xbe#Vd9V8$g\xe6\x99jF\xed\xb5O\xbc\xab\xfa2\x19G\xf1\x02*\xddae\xa8x\x86\xeeK\x85\xb3y\xa2U\x12L\xff\x00\xc8Uq\x92G^;V\x87\xe1_\xb3\x99u\x1d/N\xbf\xbb\xb3y\x96}D\x99<\xb7\x00\xad\xb4$,\x8cA\xe89\xe0\xf4\xad\xb6\x0b}?\xc1ZV\xa3>\x9d\xa4\xc9\x1c7\x8a\x92\x8b\x087J\xf1\xc1\x92\x16\xe2w\xed\xe6p1\xc0\xdbS:m\x85\xd1T\xf3\x0f\x95\x08\x8c\x12q\xc8\xc1\xc6\xdf\xd6\xa8\xfa\x9fQ\x867\t\x08\xf3e/\xa4\x0c\x8d\x8epA=\xab\xe6\xed\xad\xa5\xe9\xd7\xb6\xb6\xf1[\x0f.\xec0\x92fU\x9f\x05A9\x19<\x1f\xce\xa2\xe7\xb5h\x0e\x9fy%\xbf\x91\x1d\xc3\x16\x08d\xdd\xbb\xe4\x0cp9\xe2\xa5\xae\xfc/s}\xa8=\xc4\xae"\xb5\x17\x18\x9aR\xa4\x0f0z\xb6\xed\xc99=~\x94\xce\x1dZ\xde\xfa\xe6\xea\xda\xd2\x08\xa0\xb7\x0e\xd1\xe6oQ\xdb\x93\x92\xbf\xcb\xd3\x809\xaai\x96T\xd8\xc4\xe5\x8b\xe1u`.\xc7\xf3o\xbf\x1cU\xec\x05<\xb2<\xc0\x0f|o\xbe8\xda\xba\xb9\xba[\xa5\x82+\x92\xf1\xbazd\x8b\x80\nv\xc6:\x1a\\\xe9\x9aL\xab\x02-\xfc\xea\xcc\xa3\xf7l7\xe0\x9f\xf7\nB\xce\xc6\x01\x1c\xd2\xbc\xac\x81\x7f\n*na\xdf\'\xd8}i\xee\x90\xd6\xfa\x84L\xee\xeb\x04\x90I\xb6E\x00\x97\xca\xf3\x9c{Ue\xc3]e\xb4C\xf9\xc69\xc1\xf8\xcf\x14\xe8\x8fP\x05\x8f\x15\x1b?\x88\xb5\x1f\xb3\xedF3\xa7\xdd\x03\x1c\x982B\xff\x00\xe9\xb8\xf7\xc7c\xf3_Dx\'\xed\x86\xc3Q\x86(\xcd\xe7\xdc&~<\x99X\x18\xc9\xff\x00k\x1e+\xe7o\x10XY\xea\x0c\x86ks(\x9d\xb8\x9d\xf2\x08\x00\xff\x00\x0f\xb0\x1d\xea\x12k\x87\xd2\xb7Y\xe1\x1e\x1c\x0cn@r=\xf21U\xad\xd2,\xfa\x84I1\x92\xe2\xd6\xf9\x14\x8f\xc5A\xe9c\xed\x9c\x11\x91\xf5\xa8\xd7\x11\xb8V>\\r\xc5\xddN\xf5\xf7\xfax\x9a\xfc\xa0d\x9e2\x0f!\xc2\xa9\xeb\xf3Mg\xf1\x1d\xeb\xeeI\xee\xcb\xc7 \xc1\xdd\xce\xd2\x0eA\x1e\xc6\xbe(mKU\xd2#2\xdaj\xd7\x10*\xb0\x11\x88\xa5\xdc\xa0\x91\x9c\x15\xe4\x1ao\'\x88|I\xe4\xc5-\xdf\x88\xb5\x19D\x92m1G&\xcc|>\x06ERM\xe1o\x12H\xc6/\xfe\xa3\x9ah\x8a\x95\xd2^L\x90F\x0eW$q\xefQT\xd8/\xa8\xda\xa2\x9c\x8d\xf4\x8e~\r}\xd5\x0f\x88?h1\x8a\xe9\xd6FS\xe9\x90\x0fP\xff\x00\x9av\x18\x03\xc1\x04v5\xf9\xf3\x07\x8a\xb5\x9b}ON]7Zt\x99$\xc1\x90J\xce\x8a\xeb\xc9\x8f\r\xf8\xf8\xe3\xd8\xd7\xd5^\x0b\xfbG\xb3\xd6\xda=>\xfc\xc7m\xa8\xf4\x0b\x9cG1\x1dLD\xf3\x9f\x83\xcdf\xbcW\xe1\x0e\xbbk\x02\xdf\\\x16\xbb\x00\x7f\x12\\\x13*\x81\xdd\xf9\xc8\xf9\xe4R\xa0{Y\xb2\xb0)U\x1c\x0c`\x1f\xa5l \x8a\xf6\x9a$\x9d0x\xa7*\xd5\xe6l\xa5iL\x85k\xba1\xf3FiE u\\\xd7\x14\x06`\x0b\x05\x1e\xe7?\xda\x9b?J\xf1U\xb6\x93\xd0{\xd7\xa1s]\xe4\xb63\xd2\x94P*j\xda\xac\xa5tj\xd2\x17\x96\xe4\x9f\xec)\xb2\xc4f\xb9T\xa7\x0b\x18\xaf\x14R\xb9\xc8\x03\xda\xae\xac\xecb@u\xae\xe0m\xf2i\x86b{\xd7\x9b@\xaf0=\xab\xba\xf2\xac<\xa4\x03\x01\x00\xa4f\xb8\xc5xE)\x8a\xf3\x14\x86\x88{Ws^\xc0L,\xd2l\x0c0F\t\xa46u\xa5\xd5K0\x00rx\xc5z\xcaT\x95#\x04\x1eErKv\x96\xd6\x14(\xdeLn\xd8\xdbmo\xb9\xdf\x1d\xc0\x1b\x1a\xe0`\x18\x9e\xe4\x0f\xd0S\x7f/\xe2\xba\x11\xd2\xe0W@Tt\xe9\x91\x926\xdf\xe9]2\x1am\xe4\x8e\xf5\xe1\x84T\xa4v\x92J20)\xe2i\x83\xf8\xdc\xfeUum\xe0\xdb\xdb\xd0\xa6+/I\x19\x0c\xd8Q\xfb\xd3\rv\x91\xf2\xfb\xfbUm\xa2\xa4\xbc\xa6\'\xa5X\xaet\xf6\x8b\xd4\xa7r\xf7\xf7\x14\xc0\x84\x18\xc0\xedU\xd7\xbe\x14\x96\xcef\x8e\xe1|\x96\\m\xd9\x81\xee\x0fzz;\xa0\xea\n\x9c\xd4Y\x89\x87jH\xc6A\xe9RlT\xd2L\x07j\xaan\x8c\xb9!$c\xf6\xcdHY[\xda\xa3\xfc\xa6?\xc3K P\xb8\xdb\xcf\xb59\x039\x19<\xf5\xc0\xa0El\xa72\xcc\xc0\x0e\xd9\x00\xd5\xa5\x97B\x95\x182\xb2\x00F\x18\xca\xca\x00\x15\xd3.F\x0e~\x00\xe6\xb8P\xa0s\x81\xedN\xa3\xcb\xf0\x8a\\\xfcT6\xa1\xe2?\x0fh\xf1\x19.nm\xe2\x1f\xcd3\x81\xfaf\xb3\x9d[\xed\x9fJ\x89]4\xe8\'\xbc*2\n/\x97\x1f\xff\x00\xc4\xf8\xfe\x82\xb4\xd6\x96Vql\x935\xc9\x03\x18\xb6B\xc3?.\xd8Q\xf7\xae\xa5\xad\xd5\xc7\xe4\x81\x87\xcbm[[Iw\x1cAd\x9dcO\xe5S\xcf?J\xaf\xeaZ\xe6\x91\xa4\xc6\xd2\xde\xdf\xc5\x12\x8f\xe2\x91\xc2\xe7\xe9\x9a\xf9W_\xfbN\xf1\xa6\xa5\x94\x8ex\xf4\xc4bF#R\xf2c\xe5\xdb\xa7\xe8*\xaet]J\xf9\x8d\xcd\xc5\xe5\xd5\xc4\xaa2\xf2J\xdb\x99\x81\xe9\xb47o\x9e\x95v\xf6Ww-\x1a?\xf0p\xa3H\x95\x9ay\x00\xc7\xb6\xca\xbfl\xd4\xebn\x8d\x80^I\x14\x0c\xef\xa0\x01_K\\\xfd\xadxb\x16\xfd\xd5\xc4\xb2)8\x0e\x90\xb9S\xf4$\n\x87\xba\xfba\xd2bR\xc2\xda\xfd\x86p1\x10P\x7f2\xd5\x8a[\xd8\x89\x88]\xea\xe0zc\xe7af\x003\x02\xa7%Ts\xea\xe8M\'\xe2\t\xec\xac\x9a\x08m\xef-\xee& \xbc\xc5\x08h\xe1\xf6PG\xa4\x93\xcfN\x95*O\t\xc8b3\xc9\xd4\xa71)\x00\x930\\\x9e\xfaB\x81\x9f\xb5K[K\x14`\x826.F@#?\xaf\xb5iS\xfd\xbcY\xab\xec\x8bK\xb9s\xfe\xe9\x11\x7f\xb04\x83\xfd\xb9\xdd\xecfM\x08\x90;\xb4\xc7\xfc-cVZLW\x17\xe9\x11\xb4g\x92E\x0e\xb1\x81\x8d\xaaF\xe0\xd8\xe4\xed#\xbd^W\xc0\x97\xd7\x02\xdbe\xba\xacL\x87\xf7\xcc\xa4\xa09#\xaf\xfc\xd7S\xc3\xf0k\xd1\x1cW\xae\xc0\x02\xd9\x9aQ\xb1\xff\x00\xf6\x14\xb3\x15\x8cj\x0c\xa8\x8b\x9e3S\xa3\xed\xdbZ\x97!4H\x10\x03\x8fT\x8e\x7f\xc0\xa4\xe6\xfb]\xf1\x84\xe8\x1a\x0b{\x18\xc3\x03\xfc,\xc4c\xdf-JC\xe1\x85\xb1\x81\xd4X\xfd\xf69\x11Ig\x8b([\xbf\x07\'\xf3\x06\x9aE\xe1I\x98\xc4\xabdIv\x061\xd0\x85\xf6\x18\x07\xad75\x94\x11H\xb1\xad\xbc\xec\xc7l\x17\x91\xc7\xc6\x0eNs\xf1N\xc7\x05\x89Fm\x11\x80\x07\'\x1f\xdf\x8a\x89\xbd\xfbA\xf1\xec\xed\x1a\x9dqB\xc8\x01"\xd2\x10\n\x83\xd8\x96\x19\xc8\xaa\xad\xfe\xa9\xe2+\x9b\xb8V}gQ\xba&B\xbe\xa9N\xd2q\x90\x02\x82\x01>\xf5\xb9?\x85\x9bB\x06\xfeM>\xd0\x989{Eb\xe5\xf3\xc8\x04I\x92\x00\xc7\'\xbfj\xa4K\xe1\xedWU\x9e\xd2\xfa\xed`\x84\xea7.C!\xf5\xc2Q\xc1#\x1c\xfa\x8er3\xd8U\xff\x00\xfaL\x16\xeac6\x91\xfe!\xb7\x08\xab\xf9S8\xd4I\xdfrqU\xc9426\xa8\x88\x10\x8d\xb5\xfb\xb0\x19\xc0\xc7\xc0\xcdgw\xde7\xd4t\xe9\xed>\xef\x1cj"\x8dZ\xe8\xe2=\xcc\t\xc6\xd0\x1c\x1c\xf3\xd4b\xba\xbe\x97P\xd6\xee\xe1\x12\xdb*e"\x96h\xe2\x8dc\xf5\x05\xca\xee*\x07\x01Nj\xb9\xaa\xe81\xcbv\xd3\xc8\xeevL\xd8\r\x82\xdds\x96\xab=\x9d\x9d\xfc\x96S\xdfyc\x07\x1bd\xdd\xb4\x80\xbc\x00\xa3\xfe9\xa6\xcc\xd0\xda\xd9Eo\x03\x15\xc31a\x9d\x98\x9c\xe7\xfe*zB\xd2K\xad\xa3\x1c\x0cm\xb8\x15l\x83G\xb0\xb9\xd3\xeeg\x8bN\x95V\xd5\xc1/$\xa1\x92@\xa3\xd5\xd0g<\xf5\x1ct\xe2\x97\xd2b\xbc\xb0\xb3\xbc\xbb\xb4Yl\xc43\xaci4E\x97+*\x82\xd1\xb6\xe5\x05\xf8\xc1\xc05\\\x8a\xda\x08\xec\xbc\xdb\x92\xd2L\xe7\xcb\x1b\x1b\xd3\xe6\xa9\x1b\x81\xfea\xb7\xae:\x1cR\xd3\xda]-\xa2]\xc1t\xc8\x8b(_ \xcaN}9\x0cP\xf2W\x04\x80i\xa7\xb8`T\xaa\xb4r\x08N\x96L\x02\x08\xc9\r\xb0\x18\xa9\xad\x08\xc1\x0e\x03!}\xc1\xc9\xc8\xf6\xa7\x17\x91G\xa8\xc8e\xba\x85ndc\xfb\xc7\x94\x9d\xcc@\xc6I\xeb\xcfzzt\x15\x85\xed\xbc\xbbe\x85bpC#\xb60O\xe2U\xe0\x8c\xff\x00Z\x95\xb7\xb6\xb7\x82;dy\xed\xa4\x86\xe0\xff\x00\xfa\xb2\xce\xaa\xa9\x8e\x1b\xb8\xe0\x82\n\xe3vx\xaf`\xf1<ZzO$\n\xf2\xed;s"\xe6<\xb7 \x1c\xf4\'\xb6**O}\x04\xab\xe79}|\xb6rW\x1b\xef\xef\xf6\xa5Ik\x04\xa8DH6\x1bv\xcfaPw\x9ae\xfd\xa5\x94\x92_\xe9\xb7SG\xb5\xfe\xef,\xa1\x15\x8f>\x86\xdc\xd9\'\x81\xca\x9c\x83\xda\x9fxC\xc6\x1a\xdf\x87\xed\xc4iw+D\xae\x7f\xe9\xb0\x1a5\x07\xd8\x1eG\xe5\xc5T\xf5\xbf\x15\xdej\x97j\xd7\x0e\x00h\xf3\x1chI\xc7\xbf^8\xe9\x9e\x94\xf3H\xd1\xae\xaf\xde\xdf\xee\xa9!\x96X\xdeTE.\xc5Hl\x0c\x86\x04\x9c\xe3\x903S\x9e;\xdb\xf9UR"\xc50C \x1a\x8e\xf8\xde\xa2\x8b{{x\x88\x98\xaf\xa8n\x1b\x81\xfa\xd7\xd2\xbe\x1a\xfbF\xb2\xd6\xc1\x8eh|\xb9B\x86\x1b2C\x03\xf0y\x075v\xd3\xbcC\xa3\xea\x83\xfe\x8fR\x82R\tV@\xc0:\x91\xc1\x05N\x08#\xd8\x8a\xf9S\xc9\x8e\xc2D1\xab\xc78u2\x97\x8f\xcb\xca(\xf5\x15\xc1#9\xe0\x80~\xb51\xaeZ\xea\xb7\xda\xb5\xbe\xa7q\xa6\xc7s\xa6\xc2\xb1!\xbb\x8a<<\x83qUgb}L\x0f\r\x83\xd3\xa5I\x9b\xa2\xc6\xd6\xe4\xcblV\xe27\x02V\xe0i;\x968\x1bi\x1d\xea\x9e[\x08\x1eU1\xc8\x02H\x0e\x9f\xaf`3\x8c\xe7\xda\xbe\xae\x0e\xddA\xae\xc4\xcf_ \xd8k\xfa\xfd\xa4\xb7\xcfi\xae]\xc5\x14lJ@ev\n\xa0\x9e\x9b\xf3\x90>y\xab%\x87\x8a~\xd2\'\xfd\xa7\x1d\xb6\xaf\x13\xbd\xa2D\xef\x14\xf1#\x1c9\x03\x82\x06\t\x1b\x81 \x9e\x95M\x15\x95\xbc\xb22@nN3\x82\x8b\xa9N2v$\x8fjD\xdd\x0eh\xd41\x9a\x0c\x1c~bT\xeeq\xec}\xeb\xe9\xa6\xb9`:SV\xd4\x02\x13\xea\xc5|\xed\'\xda\x07\x8e\xac\xfe\xef\r\xd3i\xb2\xcf2\x07U\x8a2\xc4\x83\x90\x06\x14\xf5\xe3\xa5p\xbfh\xbe+3\xdb\xc5s\xe1\x88\xd8\xccp\x9c\xb4A\xb1\xd7\xd4K\x0e1\xcf\xb7z\xaf\xbe\xe9\xfdQ\xc4\x82\xc8\xcb\xad\x08\x07\xccB\x00\xcf\x19\xc6i)\xd1\xddt\xeb1\x1c\x8d\xb4\xb6s\x8f\xae+\xe8\xd5\xd5\x87@\xe2\x95]N3\xc3\x159\xaf\x9f`\xfbR\xb2Yd\x86\xefB\xb8Ic\xe5\xd2\t\x96R\x17\xf9\xb1\xc7\x1f"\xa7m\xbe\xd2\xfc\x1d89\xbf\x9e\xdc\x85\xc9\x13B\xc0\x01\xd7\xa8\xcdg\xe5>.\xb6\x19\xd2\x93i\xc8\xc0\x0c~1\xb8\x14\x97\xe9H\xa4\x8f-\x87\xe9\xfd\xabl{\xdbY\x90"\x8d\xa4w\xf7\xa6\xa6\x1d\xdc\xa3\x06\xfaVwa\xe2\xef\x0f_\xb0[]r\xcaV=\x14L\xa1\xbfF\xc1\xabL7\x84\x00\xca\xdcv#\xa7\xea+?w\xd7%\xb8\x94\x0e\xa9\xd3\x8cl\x00]Q\x82\x84\x01\xf0v\xa6\r\x83B=\x04\xfd\xeaX\xa3\xa1\xe4\x11\\\xef\xc5u\x0e\xab\xb8bU\x0e)\xfc\x7fs\xb8\xc6\xc6\xda\xc7\xb1\xa9v\xf66}GH\xe9\xddQ\x0b\x9f\xfe\xd4\xc3D\x9fn\xc6\xa39\x92?\xfd\xc8\x8e=\xc6\xe2\x91\x88\xa9\xc14<\xde[`\x01O\x1a\xdd\xd3\xa0\x0c\x07\xb52\x96%\x93\x83W\x17V}B\xca\xd5cE\xd1(\xdc\x121\xab\xdf}\xe9\x84h\xdd\xb2NEz$W\x04\x1e)\x8c\xcc\x10\x9e\xf5\xd9\x88 95\x1f3\xf2@bEd\xfa\xa5\xed\xc8\x81\x16x\x95f\x07b\x0e\xff\x00qR\xe1\x8dKzNE7\x9e}\xa0\xb36\x00\xf7\xe8+\xe7o\x1f\xf8\xf2k\xeb\xa9\xf4\xbb\x18\x90\xd9\xdb\xe0\xcf,\x99\x02C\xec\x17\xbac\xa7\xb9\xe6\xae\xbe3\xd4\xeeu[{\xfb\x1d;W\x82\xca8CG,\xcc\x0b4\xcf\xf8Y#\xdb\x9c,y\xcb\xb7\xbf\x02\xbez\xd6-\xe5\xf0\xfc\x91Ax\xe9:\xc7&\x1a\xe6\x10\xc5Y\x03gqnz\xf4\x07\x18\xc5m\xbc\'\xe0\xbb\xe8m\xed:\xcd\xdc\x1e\xb9Hkd|\x10\xa0\xf0\xec7\xdc\xf2\xb9\xed\xbd_t\xe5\x85\xe5)\xcb\xaev\xc1\xe4\x7fZ\x97\xb7\xd6\x03\x08\xa4\xb5\xb3\xd9\xcc\x05Y\xfd\n\x121\x92\x18c\x19\xefR\xd3<\x85F\xa53E\x1c\x12\x92K)\xdf\x12n?\xcc\x00\xe4t"\x8b\r{\xc3\xb2\xc0\x0e\xa9\xa6\t}%\x89\x8d\xc2\x15r\x7f\x08Q\xc1\\\n\xee\xff\x00O\xb7\xfb\x8d\xdd\xb4\x05\x94\x1by^T\x93\r\x11\x85\xbf\x0b&IR\xf8\xfc$rz\xd7\xae\xdaY\x89\x95\x98\x10T\x1d[~l\xe3ee`23\x9e\r?s\xf8\xd8\x19u\xbf\xc7`\x08\xce\xe4b\xa9z\xc6\xaf.\xd5\x8e\x16\x12*\xfa\x16@p\xb2g\x93\x9c\xf3\xc6x\xaet\x8b=B\xe7QI\xca\x81\x13(Eg\'h*:\x0e{u\x15;\x7fm\xa6^D\x8b$o\xb2\xdd\x14\x07\xc8fb\xab\x9d\xc4\x0c\x0e\xbcUF\xd2\xe9\xe7\x91-\xa3am\x1bI\xfe\xab\x12\xc7\x8f\xa7L\xd3\xb7\xf0\xf9\x0b\xe6\t|\xc2\xac\x02\x91\xb7\x1fZM\xbd\xd4\x92\x05W\x1a3\xc8\x1cV\xa1\xa7h\x97-o\x7fes"M\x11\x8fp\x95\x81\xda\x806\xe2\xad\x8fz\xadY.\xb1\xe6\x00"\x8d-L\xab\x1a\x88@\n@$)`:\x9eq\xcd1\xb8\xd6uX\x84\xdat\xb3\xb2\xc3t\x17\x0e\xacA;;\x9f\xfd\xd5;g\xabY[\x8b{{\xa5c\x02F\xc3r63\xed\xbb\xbe\xdc\x9f\xadf\x8d\xdc\xf2M\xf8pR5\x99\xc3z\xb8\xdb\x80N\xfbU\xcc0\xa9\x06B\x0bi\x04m\xfb\xedZg\x884m\x17J\xd3\xe5O\xda\x0b\x1d\xd4\x10\xab\xb2\xbc\x833)<\xe1y\xf5\x8fl\xd45\x9d\xf6\x8duc\x1d\xc5\xa4.\xb3Z\xb8U(\xdb\xa3`y \x8f\xf3T\x9dG\xc5\xa7Z6\xd6\x97\xff\x00uu\x82%\xb7\x8a\xe7a\xc8P\x7f\xd4\x18\xe4\xb1\xc79\xabe\x94vz^\x9bl\x96S\xdb]\xb5\xc4y\xf3\xd0\x15*\xd9\xe8\xc0\xf7\xe6\xb5\xd3=\xa4\xf0\xbbC\x1cQ*\x84f\x00z\x81\xcf\xf9\xee*\x9e8\xde\xdeH#\x9c\xc9,\x8c\xcc\x01\xcf\xa7\x8f\xe9\xf0k\xe8\x7f\xb3\xdf\x11$\x97B\xd5T\xc6\x93\xc3\xe6,{\xb2\x15\x94\xe0\xe0\x1e\x80\xd6\xc9\xe7\x0fz\xf9\x8fI:o\xd9\xe46\xda\xa6\xab1\x95\xe6\xf4\x96^J\x93\xc8\x15\xb1xw\xc56^&\xd3c\xbf\xb4oC\xe7\xd2O#\x1d\x8dZ\xdb34j\xb2\xb8\xf3\x00\xce\t\xf5i\xecMy\xb7]\xb3\x10]\xbc\xd6\xf0\xb0\xb6\x91\xb0\xaf\x83\xa0\xb8\xe4\x03W\xb10\xf7\xaf|\xe1\xefP\x1fxj\xf7\xef-N6\x05S\x00MOy\xc3\xde\xbd\xf3\xc7\xbdW\xfe\xf2\xd5\xe7\xdeZ\x91\x91K\xd2j\xc3\xe7\x8fz>\xf0=\xea\x00\\5\x1e{{\xd7u\n\xe6\x83S\xc6\xe4\x0e\xf5\xc9\xb9\x1e\xf5\x07\xe6\xb1\xefF\xf6=\xeb\xa0\x8a\xe6\x9a\x997_5\xc9\xbb\x1e\xf5\x0f\x92{\xd7\x9c\xd0Z\xba\x16\xa5M\xdf\xcd$o>j8\xa9=\xeb\x8d\xb5\xcdU\xdd"\x9f\x9b\xcf\x9aL\xde\x1afR\xb9\xd8k\x995\xdd"\x9e\xfd\xf3=\xeb\xc3r}\xe9\x9e\xca\xf4-\x194i\x14\xab\\\xb5\x14\x9e\xca)Z\x8d\'\x02\xaeY\x1e\xf4TO\xde\xd7\xf9\xab\xaf\xbd\xaf\xbd\x18\xa4\xe4\xd4\xa5\x15\x17\xf7\xb5\xfej\xf7\xefc\xf9\xa8\xc5\x19>\xd5\'EE\xfd\xec{\xd1\xf7\xb1\xfc\xd4b\x8c\x9fj\x94\xa2\xa3>\xf6?\x9a\x8f\xbd\x0fz1FjK#\xde\x8d\xc3\xde\xa3~\xf4=\xeb\x93t=\xe8\xc5\x195$\\W&J\x8c7C\xde\xb87#\xde\x8cQ\xbdI\x19>i3(\xf7\xa8\xc6\xba\x1e\xf4\xdd\xae\xc7\xbd\x1bQ\xbdL\x19~k\xcf4{\xd4\x19\xbc\x1e\xf5\xe7\xdf\x07\xbdv\x8c\x1a\x9e\xf3Ey\xe6\x8a\x83\xfb\xe0\xfej>\xf8=\xe8\xda\x8c\x1a\x9b2\xfc\xd4f\xad4\xe3M\xbe\xfb\xb8&_%\xf6\x01\xd78\xedMM\xd8\xf7\xaa/\x8f|]s\xe1\xbd\x06\xfa\xe6\x1bY\x1d\xbc\xa2\x12Q\xf8\x14\x9e=]\xc5weR\xc4\xe0\x01\x92k\xa8\x8f$\x89\x1a\x0c\xb30\x00|\x9a\xc2\xae"\xd4|\t\xa7\xebz\xba\xc5n\xb77\xf2\xa4p=\xc6\x1eXr3\x96\xecK|W\xcbz\xad\xfb\xddMs$\x9e\xb9\x1d\xcb\x92\x06\x06\xe69\xe8+\xe8\x9dSD\xf1.\xb7\xe0Y\xb5\x06\x9a\xd5\xe0C\x10X\x9b>a\xe7s>\xe6\xe0?\xbf\xc5Ru\xdf\t\xc3\x1d\xbe\x95\x1c1\xa4W\x12Z\x96\xfb\xc1l\xac\xf2u\xda\xab\xf1\xd2\xaa.lM\xca\xa6\x8dB4@\xc0\x1e\xe5\x8fj\xf4\x0e\x99v\xb6\x86me\x1aV\x90\xa32v\xd26\x1b\xd6\x1b=\xa9\x85VW\x91ZBG\xee\xfa\x03\x9e\xc6\xaf\xbe\x19\xd1\xa5\xf1F\xa9\xa6X\xe9Z[\xc1,\x83e\xd23y\x8a\x80\xf5\x94m\xe4(\x14\xc54\xfd;K\x8a\xed\xf5R^y\x11\xd2(\xe3\xc3\x94q\xd4\xb8=\xbd\xabh\xfb%h<%\xa0M\xad\xacP\xcd\xaa\xde+5\xac2K\xe5b\xd18,\xcezg\xb5.\xda\x05&(\xf0\xbeY\x04\xcb\xdd\x80^?ZU\xfd\xcc\xec\xb2<a\x9e]\x965\xecX\xf7\xfa\x0e\xf51\xe2/\x1c\xda\xdax^\xcfJ\xb4V\xb0f\rc\xe6*\xe4\x08\xe0\x1c\xa1\xe8}m\xc9\xa9ko\x13[XxM\x8f\x8a\xaeg\xbb\xbd\xd4K46\x907\x94\x93"\x84Q\x99\x00\xfc(\x06\xdd\xbe\xf9\xaaw\x85\xf4\xbd?\xc4\xfe,\x85u\xe5\x92\x0b;\x92n\xa1\x85Xl,\xcf\xd1z\xfa{{\xd7^6\xfb\xa4\xda\xae\xb7t\xf3<v\x90J\xb1\xe9\xe8\xcav\xb6\xc3\xf8cP= \xfe,\x8e\x83\xebW\x02\xe2D\x82Y\xe4 \r\x1a\x15x\x04\r\xf5\x10x\xaa\xa9,\xed\xa4\xb8\x82\xca8\x88:\xbc\xf9$\x1b\x9c\x93\x8d!\xbd\xf3\xcdU\xe2\xd5u\x1df\xee\xe2\x14\x8bm\xab_\xf9\xad\xbd\xb7"\xc8Wn\xe3\xeeB\x8c\x00j\x8f\xa5\xe9/ayu\x1b\xc8\xb2\x04\xba\n\x02\xe1\xfc\xc6v\xf4\x8d\xa0\x82w|V\x8d\xa7k7W\xf0[\xc3\x05\xa0\x82\xca\x07&\xf6yH\x08L\xa7\x99\x1f\x1c\x9e\xdbTg8\xaaV\xaf\xae6\x9b\x7f\xae@\xf6\xb1n\x96\xe2dR\xcb\x96B2\x8aq\xed\xb7\xfa\xf3T\xf7\x1f\x86\x9a\xd5\x19\xcb6\x97\'Q\x07\x1cgj\xd1C\x03,\x9at*\xe0~\\\xfc\xe3\'\xe6\x94\xbe\xbe\xd44\xddE\x04\x82\xf2\xce8\xd0\x91\xe6\xa6\xd7b\x07@>z\x12{T~\x9f\tmh\xb2\xc6qy\xb0\xca\x99;C\x0c\x9e[\'&\x9dY\r[Q\xb3\x9bQ\xbf\xba1ZI\xfb\x98\xa3$\xa8\x99\x95\x7f\x02 \xc9?\'\xf55\x1bys4\x11O!\xb0K\x19\xad\xc2\x14\n\x1dN\xe5\xc6p\xad\x9cd\x0c\xe3\xbdW\xcb\x1f\x98\x8c\xc3 9\xd4\xa1\x86\xf8\x1e\xf8\xec{T\xc7p\xa0\xc7\xcb\x01\x8c\x8f\x7f\xbdiz\xa4\xd2$v\xed4I=\xb9\x8c\xc6\xb6\xd1\xfav62\x0eO\xbdP|K\xa7.\x9do\xa7]\x90Z\xde\xe2-\xf1\xaa\x12\xc1\t\xea\xa4\xe3\xad[\xbc=\x14z\xcd\xdc\xf2M1\x9cJ\x8a\xd1\xa1b\x02\x9fq\x8a\xb47\x84Zm>8\xee\n\x88\xa0\x91\xd3p9\x1c\xf2\x14{\x9ej\x89\x81\xd7\xe7"\xea&\\\x1c\x121\xef\xcfm\xa9\x88dm\xe3c\x8c&F{\xd6U\xe08\xf4\x8dOQ0M2C\xe4/\x99\x18\x9b\x95m\xbf\x8cn\xc8\xda:c\xbdK\xdaYEs,\xf0\xdfY\xcf\x04WL\xcd\r\xd09\x920\xb98p:\xa3\x9c\xfc\x83Q3iV\tw\xaaIf\xad\x00\x8d\x19w\x02\x01#!H\xcf8\'\xb7\x15\xe4\x11\\\xdaX,p\xdd\xdc\xcbgv8V\x022$L\x82\x99$\xed\x00\x9eI\xea+Gb\xb0\xc6\x90\xdc\x05\x05\x8eI#}@\xe3\x00\x83\xd8\xf1\xb5E\xd1\xf8\x87\x95K`l\x00;`\xf7\xc1\x15\x0f\xa9Z\xd9D#\xbb\xd3\xadd\xb4\x8a\xcbt"F`\x18\xeefa\xb7\x80FFs\x9f\xa5FM~b\x7f\xfaV\x90H#@dp7\'\x96C\x10\x8d\xdb\x07\x81\x8ey\xa9\x8b\xab/\x13kW2F\x9a{\xcb\x14q\r\x91\xa9\xc8\xf4\x9cd\x0c\x8c\xe4\xaf^M)}\xa0\xa6\x91\x813y\xf2[~"\x991\xef\x07qA\xc8\xfc\'\xf24\xbb\x89RX\xbc\xe6R\x11\xdb\x19l\x01\xed\x8c\x0f\x8aJ\xc3\xe5\xb7\x96\xa0\x12\x07\xe5\x1c\xfdk\x7f\xfb5\xfbT\x83V\xfb\xae\x91\xaa\xca\xe9rUR\x0b\x99F\xd13c\xf01\xe9\xbb\xd8\xf7\xad\xf9\x1e\xbe\x02\xb9\xd5n h\xed\xf4\xe2\xce\x92;\xcf$*\xc1\xd4+\xa8f\xcb\x15\xce\xe0G5\xf4\x8f\xd9\x87\x8f\xa4\xd5\xe2\x87F\xd5_\xfe\xbe8\xff\x00q1 \x8b\x85^\xa3#\xab\xaf\x7fz\xf0\x9f\x1bxB+S\'Q\xe9\xab\x98\xb73\xc4\x06\x02\xff\x00\xdc\xbf\xf6\xfb\x8e\xd5,\x06e\xf5\x0c\x11\xff\x00\x9b\xd6\xe8\xad\x9aS4\xcd\x1f\xe6\x97\r^TW\x06\x98d\xc1\xa7hx\x14\xb0\xa9\x1d8\xda%\xb9b\xc8\xcf\xd5\xf7u\x1f\x034\xc1\xe5\x13\xca\xce\xa8\x14\x13\xd2\xb6\xaf\xd2\xe3\xb2\xe9\xdd6\xe1\xaf\xe1\x92k\xa5\xca\xc0\x9e\xad*9%\x86\xd9\x1d\xc5@\xf3\x0b\xc9"\xf9l\x02\xff\x001\xf7\xae\x81\xae\xb3I\x8f\xad*\x14\x9e\xb4\x98\xc36\xca;\xd7\rvq\x85\xc1\xceG?\x06\x8f\x9a\x02\xd7\xa7\x02\xa6\x95m\xc9U]\x86\xc0\xd23\xf3^QF+\xdc\xe2\x91\x827;Q@\xdc\x08`pA\xc85\xeb\x12\xc4\xb3\x12I\xeak\x90hf\xc5+a\x19\x1a\x9bNs\xa7\xb6x\xce+\x989\xafA\xae\x95\xc0\xa4\x0b\x13\xd2\xb8\x05\x8e~;\xf6\xae\xc5#\xab&\x95$\xef\xdb4\xad\x19\xcdL\xc3|\x91py\x18\xeb^K\xac(\xe1G>\xddj\x8d\xaex\x9fC\xf0\xfc[\xf5-J(r=1\xe7.\xdf\xfbPrk\x1c\xd6~\xd8\xee$y!\xd14\xa5]\xb9\xfd\xf5\xc9\x05\xb8\x19\xe1\x01\xfe\xe6\xb46\xddw\xc4w\x11y\x16(\n\x02G\x9b\x8fH\xfa1\xd8\xe3\xe34\xe4=+\xcf:\x84D\x8fs\xb0\xaf\xa2\'\xbe\x9al\xeel/\xc9\xaa\xad\xff\x00\x8b\xfc7\xa5\x96\x17\xba\xe5\xa4L:\xa1\x95K~\x83&\xbeJ\xd6<W\xe2=f\xf2(o\xb5[\xb9\xe2\x90o0\xc6|\xa5\xdaG\x1e\x94\xe3\x19\xef\xedQ\xf6Z<2\xe5\xe6\x9dF\xec\xe3\xd5\xf8rG\x18\xea~\x94\x86\xe8\x97s1\x9f\xa8u-Nw:F\xb3\xfa\x9f\xf1WV\xfd\x1dt\xe3P\x1f\n?\xbd}E/\xda\xe7\x82\xd0\xed\x86\xf5\xee\x0fO\xdd\xc2\xe4~\xa4\x01Q\x93\xfd\xaeX\xb2\x93i\xa4\xde\xcd\xc1#*\xab\xd3\xeaI\xac\x86\xd3\xc36\xd7\x1eS1de\xeb\x81\xd5{q\xed\xc5Xt\xf0\xda"\xca\x92\xa5\xb6\xd9\xa3 )\x19m\xa4\x02@nFFpq\xcdJ\xb7\xe8\xb6\xf3\xb2\x96\xb8\xb8\x11/\xe7f*\xa0\x7f\xfc\x01y\xa9\xa7\xa5Z@\xa3*ds\xc2\xe7\x19\xa7z\xa7\xda\xf6\xbb$a\xact\xcbuS\xc1vv\x93\x1f\x92\x85\xe6\xabM\xe2\x9f\x18\xeb\x96m<\x9a\x8bA\x1b>\xcf\xdc\x81\x1a\x83\x8c\xfe.\xb9>\xd9\xcdX\x84Ztq\xac1\xc6m\xe2\xb9#\xcc\xf2\x93xr\xb9\xdb\x90\xb8\xdcFx\xaa\xda\xe8\x17+y\r\x9c\xd676\xc5\xee\xc2\x16\xf2HE\xde\x06\xd7\x0f\x9eA=TsS\xa0\xe8\xb6r1\x10Z+\xb2\xff\x00\xf7$\xf5\xe9c\xdb\xd6I\xc5J\x8a\xde\xde\x12\x7f\x86\xa9\xdc\x0e\xf8\xaa\xff\x00\xdd\xa4v\x06\xe1\x9awl\x9d\xcf\x97={\x13SPi\x90\x18\x8112\x81\xca\xaeq\xbf\x9eT\x9e\xa0|\xd4T\xe2o4\xc4\x923\xca\x1c*H\x84\x01\x81\xdbcs\x93\xed\x9a\xb1&\x9b\x1a\xdf<\x1a\x8e\xa2\xd6\xed\xb71\xc7\n4\x8c\x0c\x802\xa9\x0c2z\xe0\xafQ\xd6\x96\x96\xb7\x0c\xe9\xa2X0\xad\x86%\xb0\xa0\xf6\xcev\x1cU\x9b*\xa2\xe0\xa3n\xb9\xc0\x19$\n\x8c\xbb\xd1\x93T\xbd\xcf\x96\xed8%\x96>\xd9\x1e\xfc\xf6\xab\xee\x8d\xa5\xbd\xcc1#X\x8b\xb2\x81Qa\xf3\x8cm\xd7 \x009#\xe3"\xaa\x90Z\xeb\x16+\xb6\xf5b\x8ecr"m>V\x11J\xa8\xca17?\xc2s\xdb\xdb\xa5j6\xde \xf0\xb5\xf6\x90\x92[\xdc%\x9d\xccH\xb0\x80P#)@\x07$`:\xb1\xf7\xe4f\xac--o\x92W\x9ai\xf4\x14\xc9]L\xa7X\xe4\x8d\xf2\x03\x0cpj\xae\xf4\xaa\xc6\x12(\x99\xd5\xdb\x1a\x94\x1fO\xb18\xdf\x1f5B\xf1\xfe\x91cmi.\xa7\xe6\xcf\x15\xfc\xae#$\xc2!m\xac\xa13\x81\xc8\x1bT\x81\x93\xd2\xb1Amu}wege\x1c\xb2\x99Dg\x022If\xea6\x01\x92\x07oz\xd7\xbcc\xacO\xaf\\\x85\x98\x99\x82\xed@\xf2\x1e\x01\x03\xf9\x8fa\xefT\xfdCG\xfb\x83Y\xfd\xda\xfe\xca\xecH\xcc\x19\xe0\x98\x10\xa5NF\xe68\xc6z\xfcU\xac\xb7\x91\xde\xdc4\xa9\x07\x99\x12\x10\x19\xb3\x82\xc7\xdf\x93\xbbRm-e\x8e\xda8\xa4\x94\tH%G \x0fn\x06\xc2\xa3\xf37\x82u\xe6\xb4f\x170\xdc\xaf\x96gL\xc6A\xc7m\xa5\xb6\xaeO*N~\x95\xa6Zx\x9fUX\xec-m\xc3F\x979T\x01\xc6A\xc9\xdd\xca\x9c\x80;\x82>k-\xd6\xe6\x12\xcbo\x06\x9d\x01\x8a\x1e\xa0yi\x1f\x9a\x9b\xce\x0f\xa3w\'\x1e\xa6\x1dqV\x9bsp-\xde?\xbb\x04\xb9,\x11ea\xfb\xc1\x81\x9c\x0e\x9c\xf3L\xf5GD\x9ai-\x0bB\x0cD\x10\xaeI\x19\x19\xdc\xf7\xa2\x1boB%\xd2\xac\xac\x08\xc1 r6\xe3\xb5oV\x93Y]\xd8Cnu\x02\xf2*\r\xc5}9u<\x82\x07,\xa7\xe2\x9d6\xa3\xa7Z\xc8\xb0M\xbc\xce\x98\xd8a\xfd\xdb\xfa\x86@!\xab$\xb1\xbe\xbb\xd3\xbe\xea\xd7\x97\xdbE\xbcM\x86\x8518\xc2\xf0;\x03\x92?\xaej\xa7w\xe2\xfdE/\xec\xf5K\x85TK\x96v\x82=\xe7\xcc*\xa7\xab\x0ex9\xcd&\xdb\xa8\xdc\xcb\x16\xb8"\x0f,\n\xab$\xa0d\x04\x00\x0c\x90O95\x02^\x95\x1f\x98\xca\xd2\x9f*BYW\x8fQ\xed\x91\xda\xbe\x86M]C\xfd\xe2\xfe\x07&\xf3e\xbcrH\x07\x9b\x12\x86\xee\x07\x04\xf3\xfaUC\xc6\xba\x0c\xfa\x03]\xc9g\x7f$\xa2;#*+\xb0\xccfF1\x82\x15}\x83\x1c\x9f\x9aN]n\xe9\xe2\xd3\xae\xef\xb4\xc9u\x01r\xbb\xac\x18K\x88\xd3\x18%\xc2(\xe5\xb2r7qQ\x89\xa9\xc2\xb3^}\xfa\xd1\x91n\x12h\x9c\x89rTH\x84\x10Cs\xc1\xe4{T\xa9nad)!\x7f<\xb6\x16GVG\x8c\xb0\xc9,\x06\xc41\xdcnv\xa6a\xb6\x9a&\x0c\x9aV0\xa7TjU\x95\xf4\x9c\x00\xb99\x1aF\xdcsY\xbe\xae\xa9q\xe1m+|\x90\x97\x82\xe4\xc7#\x80\x01\x01\xd0\xb0RG<c?\x9d?\xb7\x8e\xe3L\xd1\xf4\xa9\xef\xad\xe5\xf2&\x8d\xde&\x8b\x0c[\xd4AY\x00\xc6\xde\xe4r\t\x02\xa2\xfcDmD6P[\xdc\xc8\xf6\xbfw,\x11\x10F\xa9;\x0e}]X\xf02\x7fJ\x89\xb0\xd6\xcczt\xb6\xf7S\xbf\x9b\xb8\xa7\xe2!\x8a\xb0\xc6\x0f\xf6\xaa\xf9\xde0#\x7f\'\xcc\x0b\xa5B\x8c\x1d\xf07#\xbdZ\xdb\x12\xb9\x05\xf4\xe4\x93\x92\x08\xdb\xdb\xb6)\xed\xfe\xac\xb7\xb9\x1eC$\x89:\xc9\xb9\x7f\x01\x025F u\x05\x8a\x83\x8e\xd58\xb3Ms\x05\x8d\xa5\xec\xa9\xe5\x99?q3)\xc2\xab\xe1J\x9f\x8e3\x9e\xd8\xaaU\x85\xfc2\x85\xb61\xc6Sy$c\x0c~\t\xf6\x1dj\xfbg\xa9.\x9e\xd6\xb7\x1a}\xc9i!\x88\x99!\x96<\x84\xff\x00\xd8\xc79\xcf\xc6\r7+I5\xc6\xa7q\x86\x00J\xa4\x01\x95\xc8\xe0dg\xedR\xc3\xa2\xc5\xa5Fq\xf9\x0f\xb1\xc7\xbfj\x83\xbf\x7f\xb8^\xde[%\xc7\x99\x126\xc6\xc2\xe3~\x1b\xf1z\x86@\xef\xcf\xe7QW\xb2\xc0HPB\x06\x00\xe4\x9e*2}R]CQ\x91!\xdd;I(\x8f\xd1\xeb|\xe7\x9f\x7fQ\'\xbdm\x8f\xa6i\x1e\x1a\xd0\xce\xa5.\x97\x04r\x0f-^+\xcd\xb3\xdcH\xe0\x15(2p\xac3\xce\x06\x0e)\xfb.\x8d%\xd8\x96c \x868SQ-\x9d\x878\xfb|\xd4y/c\xb7\x11 \x1ec;i\x00\x11\xcdU<"\xbao\x86\xad\xee\xbcA}ak|}Q\xc3$\xb3\x02\x01q\xb7`\x8b\x1c\xfc\x9c\x8d\xb9\xcdL\xd9_\xc5\x1f\x85u)\x92\xe5\xe1\x9e\xdfU\x99\x80\xde\x19\xa3\xb6\x9a0p\x1c\x00\x0f\xa9\x00-\xdc\xd6y\xaei\xd1jf\xee\xc8j\xe5\x1fj\xdc\xd9*\xba%\x9a\x97\x1b\xda6L\x90\x1b\xa8\xc0\xcf<U\xb3\xc2\tt\xd0\xdd[\xc2\x96\x97\xfb\xac\xc4\x8d\x1b\xabF\xc8#B\x19\x95G\x07\x00\xe0\x8ex\xad\x87O\xb8khl\xa17\n\x15\x96H\xc0P\xba\xb5c\x05\xbd;\x9e\xd8\xaa\xc9\xe1\x8aI.\xa6h\xc9`\xd1>\xed\xb6\x01\xd9p\xdb\x01\x82sL\xed\xfcV\xda\x82"^\xaa\xc9<\xf2.\xdb\xcb\xb2R8\xe5\x97\x96\xcb1\xe1x\xc0c\xc6:\x0cS\xd9u;\xab\xa9l\xe0\xbd\xbbqg\x19\\\xacJ\x1fd`q\xb0\x0c\x03\x91\xd0\xfbTl\xfe\x15\xb0\xb6\xb6\xd3u6\xb7\xb9\x92\xce\xf1N\xf5I\x00\xcbC\xb5]\x149`\t\'\x83\xdb\xb5\\\xe2m\x12\xc8\xc9>\x93~\xb1\x89\xf6[\x98\xb5\x05F\x8c\x02\xbb\x8a?\x07p\xc8\x18`\x00\x1c\xd5GR\xba{\xe9\x824\xaa\x00\xd3\xe6.\xac\x17Ldlp\\|\xe6\xac\xa1\x82\x18c\x1eTL\xc0\x02\x15\xb1\x90\xac\x0e\x0e\xe3:O\xc6)\xb4\x1a~\xae\xf6d\xd9C\x1c\xb0\x1d\xf71\xb4r\r\xf1 ;J\xc8\xbb\x81\x18\xe3w\x15e\xf0\xab\xdb\x1b\xf0\xcdz\x96\xc9\xe5\'\xde<\xe9#E\rtXM\xd7\xf1~\x1c\xae\xdc\xfc\xd4\x02k\x11Z\xcb\x16\x9d5\xbd\xa1\x8e\x08\r\xb5\xf1\x11\x80\xb2\x05\x97 \x8d\xb8\xce\xdepG4%\xb7\x86\xf4\xfd6+\xbb\xb9\xd4Zy\xeb\n\\\x1623\xc4U\xa4 F2\x01R\xc0\x1c\xe0\x82*WO\xb7K{\xa8^\x06R\xa8\xa1\x9d]\x82\x84+\xbe\x17m\x80\'\xbdF\xbf\x0f=\xb4\xa9*\xe92\x12#h\xd4\xb1 \xfb\xef\xb9\xc7\xb5f^#\xf1\x16\xa9\xe0\x9f\x12D\xab\xe6F\xd6\xd6\xd1\xc0\xf3Dv\x15\x9e3\x82X(\xe40\xe4\x1e\x98 \x8a\xac\xea\x1fhSj\xad\x03\xde\xea2\xcf\x1d\xb6\xff\x00&\x12\xb2\x05\n\xc4\xf4*\x14d\xf7\'\x9a\xb4x\xa3Z\xd35{-5D~}\xd5\x92\xb4"t;\x92xA\x05\x01\'\xd4Br\x06y\xc6\x05P/\xf5\x8bK\xb9U\x9b@\xb6\x82=\x825\xdaX\r\xcb\xd4\xf3\xef\xedR\r\xcd\xbb\tm\x96 \xd0\xea\xc9\n\xec\xb9\r\xb9\r\xa7\x19 \xd4&\xb3\x9d\x9dfi\xd9%\xd3\x8c\xe9V\x00\xae\xc0\x8c\xf0\x08\xedR#\xc60%\xd6\x99\xa8\xc7x\xd1\xca\x02\xac\x86\xdc\x91%\xbe\xd3\xb3\xd5\x90\xb9\x1by\x18$\x9e\xf5s\xb2mC\xc7\x9a\xcd\xc3K\xab[\xdbY\xe9\xd6\xf2Bu3\x07\x94\xb2Z\xc6A\x1b\xd51\x9ep\x14VOy\xa2\xda_\x98>\xe0\xc5K0\xdd\x08Q\xbbq\xe0\x01\x8e\xbc\xf1V8\xf4\x1dWEAm%\xc3\xd8\x97\x8d\xa2\x92\t\x15\xa2;G;[p\x1djH\xba\x82+5\x86\xd6\x06\xf2\xcb\xa9\x95K\xb6\x96\x1f\xed$\x9e\xe6\xa1\x0b\x0b\x96\xbc\xf3\xa6\xba\x0c\xe23\xe5\xb6\x85\xc8\'\x92\x06;\n\xb3\xb7\x86\xd2\xfeX\xafe&+I\x12o\xbb\xc8\xfbr\xfeY\xc7\xa8\xe4\x0e\xbdO\xf4\xae,e\xd6\xb4\x84I4\xcf\x12\xddZ\xf0]\x91\x0c\xb8\\q\x82\x0eW\x1f4\xbe\x9b\xaajvv\xc6!\x1cR\xc06\xb6\xd6R\xc8\xac\x7f\x8b\xff\x00\x9e*\xe5\xe5\xf8Zm\x0bP?t\xbd[\xd0\xca\x04\xd1\x94\xf2\xa32&v\x1c\xe4\xe0\x10zu\x1dk.\xfa\xaf\'ko&\xdd\xa3*\xec\x04\xa3P8\x19 \x01\x91\xdbj\xbc{`\xb1\xf9\x8c\xac\xe4\xb8R\x10q\x9d\x81?\xde\x9e\xd8}\xaa\xf8\x97I\x92858\xed\xaf\xb0\x8aX\xf1\x1b\x90Fr\x198\xfdEi:_\xda\xd7\x86.\x84f\xea\xe2M9\xdb\xa7\x9d\xea\x8c\x9f\x87L\x8f\xd7\x15\xf1\x86\xb9\xf7\xb8/\x0c;\xc0U\x94\x13\xb7\x0e\xb8\x03\xd2\xc0\x8f\x7f\x9ami{rn\xa6\x8dU\xe5+\x8d\xb9\xf7\xc7?J\xa5\xbe\xf0\x1f@\xbc\x8e9\x92\'\xb6v\x00\x93\x01\x0b\x82\x7f\xed\xe3j\x810BY<\xac\x11\xdcq_\xa6\x1av\xbe\xb70\xa4\xd0\\\xc5u\x03\x80U\xe3p\xeaA\xf9Rj\xc0\xb76\xd7P\xf9\x83\x82\x0e\x1b=W=3\xf1_\x99:V\xb3\xaaY]\xc7&\x9buqk)nLnT\xe7<\xf4\xaf\xa0t?\xb5\xdd\x7fKS\x1e\xa9\n\xdf\xb2\xa8\r\x85\x11\xcb\x82prW\x83\xf9\x8a\xa9~\x91\xd7z;<\x02\xf5:\x9d\xab!\x02)\x86%_b\t\xf6\xf6\xcdV\xc9\xd3\x84\xa3Tk\xa5\x878\xda\xbe\x9f\xbc%\tR~\x95\x8d}\xaa\xf8\xdd\xfc%\xa1\x85\xb68\xbd\xbd\xdc\x90\xbf\xff\x00\xb3U\xc6\xe7\xfa\xf3\x81W\xcd\x17\xc5\xda\x07\x88\xac\xd7\x17_s\x99\x14\x16[\x82\x15F\xe1\x90\xa2A\xe99\xc6G9\xc7j\xf9\x1f\xed7V\xff\x00\xd6\x9a\xe5\xd3\xd9\xc9\xbe\x0b!\xe4[(\xce$P\xc7s\x8f\x96\'8\xf6\xaa+\x1f\x0b]\xdc\xf8\x92\xd2[\xdbF\xfc\x1e\x9f4\x06<\xe9\xfeC\xef\xb9\xfb\x8a\x91a\x11fe*CF}Y\x1bg\xb5Di~5\x88Y}\xdeH\x83\xa4\x92\x07f\xc6\xd2\xac\xa0\x83\xb0\x83\x9eA\xe7\xdc\xf5\xa9\xbb\x9de\xf5]>X\x0b,\x91\xdc$p\xcbn\xb1\xed\x05\x13\x84\x04&\x0f\x7f\xd6\xb3\xbb\x7f\x0e\xdc\xd9\xa7\x9c\xab"\xe62\xc23\xd4g\x85b\xa4\x8c\x82{\x8c\xd5\x9a\xc7N\x97L\xbe\x84K|&\x99\xe3\x12)\\\xae7.p}\x98{W\xb9\xc2\x92*B\xaa\x18G\xa8\x0cppw\xfb\xd5\xc4\x92\xc4T\xfa\x06\xaf~\xd9\xa8+m\x1d \xbe\xbbW}\xb1)\xde\xb1\xc8\xc7(\xb9\xe9\xf2\x05Z-5\xd9\xe5e\xb2`\xf76Q\xb8\xca\xa2\xe4\xa0\x1e\xccz\n{\xa8X\xe9\x1a\x9a\x0b\xa6\x86X\x95"*C7\x99\xebQ\xcfM\xbe\x92\x7fJ\x81\x83U\x968a\x8a\xd6\x14H\xe0\xde\xb1\xae\x17\x9d\xddw\x15\x03?\xe2\xa45\xbc\x02\xe1\xa5/\x95\xceP(#\x9e\xc4\xed\xb5F{\xa9e\xb7\x11\x15\xdf\xb9c\x92?\xadN\xeb:\\\xed2\x0b\x16\x8d\xa2x\xb7\x01o(\x7fO<\x1d\xbd\x0e\x06H\xaa\x9f\x92a\x8d#\x8eA\x98\xc8\xce\x1b;y\xc9\x07\x1d\xcdHE\xa9\xcf\r\xbc\x91\x98U\x8b\x16#i\xdb\x82\xdd0OaP\xb0\xe8\x9a\xad\xdc\xf0=\xbaH\xe2E\xdc|\xa5-\xb0\x8f\xc5\x90:\xed\x1c\x9an\xf8\xa4\xd1\x85XB\x96#\x03\x9f\xebL\xc0\x84r\xff\x00\x95s\x9e*{X\x96\xda\xe2\xde\xc2X\xb7\x99\x15\x02\xb2\xe38+\xf2>*\x12\xdfTQ?9F*F\xd6\xe7\xafz\x94\xb0\xf0\xee\xa3})\xb5\x86\xe4\xe4F\xd2oR\x18`g\x9fI8\xf9\xcd@^\xe9\x97Q\xde\x0bkKf\x96X\x94\xb4\x8e\x9c\x86\x03\xbdT\xa5\x98\x0f\xaaH\xc8e`\x06\x06\xd8<c\xe6\xa7\x0b\x99\x13!pr>\xf5#\x1d\xd5\xacO\xb9\x94\x89\x19\xb8\x07\xa6;\xd7\xd1:_\x85\xec\xd9"h.R{t\xb5\x13\'\x97\xceK&y\xe9\x82\x0f\\\xd7\xce6qH\xd7\x919\x8c\xa2G\x81$N\xbd1\xd4s[/\x85ou\x1bx\xed\x87\xdeY\x95#{\x86\x00r\xc0p\xa8\xd9\xf7\xedV\xdeL)\x14\xa1\xe3]\xf0\x03g\xb2\x9a\x80\xd7\x13K<z\x1fN\x8c\xed\x8c\xe4\xb0\xda\x98\xea\x82\xe7Q\xb9\x86\xda\xe2\xf4\x887\x83\xfb\xc6%W\x15\xf5w\x80\x9fJ\x93G\xff\x00\xf2\xfb\x04\xb6Dm\x8d\xb3\xa3\x95\x18\xdd\xc7Z\xf9\xafU\xb3\x17\x11%\xd0\x8cD\xae\xde\xa1\xde\xbe\x8b\xfb3\x85\xe2\xf0\xd5\xbb1\xf4\xb9%?\xf6\xe7\x8a\x8f\xd0\x9c\xf9\x92\xa9`\xc7N\xe7\x9d\xb3\xb6>*/\x8d\x82\xb7O\xb4m\xc6\x99\xb0\x14\x1d\xb7\x19;{\xd6\x80\x075\xee\xdc\x9a\xe8W\xb5\xa1j\xf3e\xae6\xd1\xb6\xbb5\xe5&\x97^\x05\xa3\x14g\x14f\x81\\\xafk\xdc\xd794\x13]\xaeW{\xa8\xddIn\xc5y\xba\x8a)|\xd7\xb4\xdc5t\x1e\x8a)Z\xf3\x15\xce\xfa\xf0\xb5\x14WtR{\xa8\xddE\x14\xa5\x14\x9e\xea+\xb9\xaeb\xab\x83[O\xe6\xaf\x7fm\xa7\xf3\xd6|Y\xbd\xcds\xb9\xfd\xea\x1f\xe2\x9f\xda\xa4y\x0b\xefZ\'\xed\xa4\xfej\xf4kH\x7f\x8e\xb3\xe5-\xfc\xc6\x9c&\xe3\xdc\xd7\x7f\x12\xde\xd4y\x03\xde\xaf_\xb6\x14\xe3\xd7J\rX\x7f5SP\x1fsK\x01\x8aW\xe2\x1b\xda\x93\xe4\x8fz\xb7\x8dU\x7f\x9a\xbd:\xa8?\xc5U0M\x1b\xfek\x86\xe7\x1c\xe2\xba \xcf\x15l\xfd\xaa\xbe\xf4~\xd4\x1f\xcdU\x13!\x1d\xe9#3{\xd2\x7f\x17J\xfc5\\\xff\x00j\x0fz\xf3\xf6\x98=\xea\x9e\xb2\xb1\xefN#rk\x9f\x8b\xcf\x15\xdf\xc3\x81VF\xd4\x0bt\xa6\xedu#t8\xa6\x08i\xc0\xa5\tY\xbb\xd7<\xb5^\xd5\xd1\x9e_z\xf3\xcf\x97\xde\xba\xda+\xb0\x83\xda\xbb\x96=\xe8\xc0\xf6\x15\xc0\x9aS\xde\x95\x12\xc9\xef]\x08\xd6\x96X\xc5tj\xf74\x92\x17\xda\xb8Ws\xde\xb3_\xb5]I\xa0\xd0\r\x86\xc5cz\xae\xb9c\xc6\x14d\x81\xfe\xect\xadMP\x0e\xd5M\xf1\xde\x99=\xc6\x91\xf7\xfb;q=\xf6\x9aZ\xe2\xd9=\xdbiR?CKr\xc6\']X\xc8\xc1?\x1d\xe9v\xe68\xeea\x91\x97!\\\x1c|\x8e+\xe6\x96\xf15\xdd\xaf\x87_M\xd4"\xbcH$\xd3\x84\x96\xc0F60f\xe5\xf9\xc1\xe81\x9a\x89\xf1\x1f\x8f,/<9ef4\xa8a\xbdf\x05\xe6\x1d\x02\xaa\xe1\x02\xe3\xf0\xfb\x9fs]\xde\xf8\xabP\xba\xd1\xecd\xbf\xb0\x81\xee\x12\xc6K&w\x8f\x0c\x999\xe3?\xc5YM\xd6\x1e0\x92\x00J\x1cr;U$\x9dI\xad\xf5D\x93\x96\x050\t\x1d\x85o\xa2\xb2\x8eUI\xa4\x81P\xf9\x85\xf0\x1bl\x9a\xefSo\x0b\r8\x08\xeeo\r\xe0\\\xba:\x82\xa5\xfe\xa3\xb5X\xed\xe6\x9e\xff\x00\xc3\x9aa\x82\x0b\xa1\x14v\xe6\xdeyv\x9f,\xfa\xc9\\\x11\xd0\x01\xefT!\x0c\xb7\xb7"\xd6\x0bP\xceW\x00\x81\xc9\xc7\xcf\xb5i\xbah\xbe>\n\x8bG\x17R\'\xfd[3\x00\xc4\x86\x0b\xc8\xc2\xfb\x0c\xd2\xad\xe5\x13\xf9\xac\xcabQ\x16\xc1w\xc9\xc84\xb1!\x8eh\xb4\xa8|\xbe\x0e{\no\xa4M.\x93y\xf7\xd8.^\x19 p\xe4\xa6\x0e\xdd\xbc\x0e\x0eFi\xd9\xf1F\xafyl\xd3\xcd\x0b\xdf~\xf5\x94\xa5\xc2\xf9\xb1\xc7\x95\n\xa7\x07\xa1 pGN\x95Y\xb9\xb5\xd44\xc9.,\xddd\'j\xb3q\xd5O#=\xc7\x06\xad\x9e\x16\xb4]J\xdf[I$1\xd9A\ny\xf3F@*\xa4\x8ev\x9f\xc4r:WD\xf2\\\xc5,\x11\xc8P\x8d@\x82xa\xbe\xff\x00\x1bQ9\x8e;\x85\x9c\xa0\'`\x0e;\x1fj\xa6\xc3sv\xeb+<\xcd\x14d\xfe\xf3h8\xf4\xf6\xc0\xeb\xf4\xa9+=*\x1f\x11x\x81#\x8b\xef\x1eK\x83=\xed\xd4\xec\xbb\xc2\xa8\xcb7\x18\x03\x8e\x14u\xcdy&\x95(\x8cI\x18\t\x06\xe0Af\x1b\x89a\xc6@\xf8\xaem\xb4\xbb\x8bYm\xae\xe5\x9f\xc8\x8dnDyY6\xb1\x07\x9d\xdd\x0f\x1dFqQ w\x7f)\x19U\xa3\xd9\x9b\'c\xa7\xda\xac\xce\xe3P\xd9\x88\xc08\xe0\x9a\xd0\xf4\xff\x00\r\xda\xdfA\x1e\xb5.\xb4m\xac\xa3G\x10\xc3\x1a\xab<\x11\xc2\xc0\r\xacs\xb3\xdd\x9b\x19\xaa\xbf\x8b.\xad\xb5\x9b;\xbb\x9bK\xc8\x05\xb2\x86\n\xb3\x13\xb9\xba\x15\xc7OW\x1d>)\xaf\xdc\xef\x0cwW\x16z\x82}\xd9g*\xca\xc4\x86,NT\x15\x03\x0c\x0e:Tu\xee\xa8V\xcex/\xa2\xc5\xd4lL,c\xc9\x0f\x906\x91\x81\xd8c\xdcU\xa0\xbb\x8f\xcbh\x9a3\x18t$\xb1;1\xc7m\xf6\xfaTv\xb6`\xc5\xfc\xcdxm\x861\xa4T&\x8f\xaa\xddY,\x10%\xc3\xa3\x15+\x19\xc7;OO\xd3\xb5i2\xea\xb7\xd6\xbe\x13\xb2\x86k\xeb\x8f9\xe4\x91\xd8\xe4\xee`\x0e\x0f=\xb1Y\x9e\xad:\xc9"\xb2\xcedh\xe6\x0c\x0f\x96\x13\x1b\xbdD\xe1{\x03\xefV+\xbd@\xea\xdae\xa2=\xd4Q\xdd\t\x9bx\'\x04\xaf\x00c\xf4\xe6\xb2\xf7Q\x92\n\xab\xb0P\xd9 p}\xf8\xa4\xe8\x11\xb9|\x0c\xe3\x1fJZ\xd2\xd6\'\xb0\xb8\xb8\xb7\x8eIn\x08\xdc\xe4\xc9\x8d\x911\xc3d\x7f\x16}\xaa\x1c\\\xcao\'m\xce\xccNXs\x9c\x01\xd7\x81\xc8\x15k2\x1f\x0b\xac\x0f\x1c)t\xd72\x08\xb7J\x08\x8b\x01w\x1eA\xc8\xc6j\x9bc\xa9\xdb\rk`\x89|\xc9\x17\xce,\xc4\x18\xfdG\xf0\xb2\x9e\xaa:b\xa7X\x89Z\xdda#H,[\x9e\xc3l\xedLK*\xc3/\x98{\xe1~\xf8\xce*\xf7o\xabiw\x96\r$\xf6\x0f\xf7\xd8\xc0\ty\x13<o\xbb\x96\x05\xb9\xfe>\x87\x18\xaa\xe9\xd5^\x0b;\x88b\x84\xac\xec\x0cn\xc6OC!\xe8v\x1e\xeb\xef\x9a\x956\xd73\t\xe1\xb7W\x8eT\x89\xa4$\x9d\xa6X\xc8\x00\xa0\x00\x1epr1\xda\xa15\xbd*\xc2)-\x0e\x9cn\x84\x8e\x99x\xe4eb\xb2v\xdb\xb8\x0e\x0f^j\xce`\xcbo\x9d@o\x86$\x00w8\xda\x95\x13\x03! \x13\x9d\xf65O\xb8\x8d\xe0\xc3DY:\x02\xc0\xf5=\xf3\xf0{\xd6\x91\xa3E\x7f\xf7+wr#w\xb8i\xed\x9a2#eh\x17v\xf0O\xbeG\xd6\xa0/5\x12-\xc4:\xb5\x82\x0b\x89\xb6\xff\x00\xa7\xe8)\x1a\xb6\xc3\xb5W\x80\xc7\x07\xa8=i\x13\xa9Kp\xdarE\xe6\xde@#Q,\x92"\xfe\xe9\x97*\x11O\'`\x1d\xbb\xf5\xaa\xd3l\xb9\x91K\x06P\xa7:\x866<\x82\x0f;S\x8c\xe1\x94lrH\x1bo_`\xf8#\xc5p\xf8\xa3K\x8eFd[\xd8UV\xea%=\x18\xf4o\x80\xdf\xd0\xf1W\xc8\xcf#wJ\xf8\xb7B\xf1\x1c\xfe\x1c\xd5`\xbe\xb7O(\xa7\xa6H\x02\xfaf\x8c\x9fR\x13\xfd\x8fj\xfa\xe3C\xd5\xad5\xeb\x1b;\xdb)C\xc58\x1bs\xc1V\xe8U\xbd\x88<\x1a\xf0\x1f\x15xq\xbaM\xeaI\x04d\xdb\xce\xdf\xc3\x03}\r\xfe\xc2?\xa5rT\x1b\xef\xb5X\x08\xc1\xe9N\x91\xbd8\x02\x93\x96/,\x94\xdcILg<W(\xd5\x9f1\xcd\xd3\xafe\x85\xc6\x96$\xab\x0c\x83\x82\x0e\x08\xc8\xf65\x00\xe1\xd4\x11\xbd;S\x8aT9\xa4V\x9c\xc5\x1f\x98\xc1A\x03\xe6\xafm\x16yJG\x1b\x1dL@\x00w&\xa3>\x06I\xed^d\x9a\xf75\xc60\xc4dpz\xd7\\S\xeb\xacg\'p\xc4\x1d\xfb\x8aM+\x1a\x86<\x9c\n\xe0\xe3\x9a\xe0\xb6+\x82Y\xbaS\xad2hDX\xf2\xf99#rk\x81NI\xce\xd5\xd1nh9#\xa5y$\x96\xd6pKsuq\x1c\x10\xc6\xbb\x9aI\x08U\x00{\x93\xd2\xb0O\x17}\xb5[\xdb\xf9\x96\xda\x0ck+\x03\x83u*\x9f,|\xa2\xf0[\xeax\xa9\xf0t\xdb\x97T\xfe\x1b;\xc9\xc2/a\xee\xc7\xb0\xfe\xbd\xa9\xe8by\x9bJ/\x1c\xb1\xd8\n\xd8\xb5\x8dwK\xd0mZ\xebR\xbd\x8a\xda%\xe0\x17<\xb1\xf6Q\xd4\x9f\x81X\'\x89>\xd8n\xb5\x11%\xbe\x8aM\x9c]\x16\xe1\xc030\xef\xb4r\x13\xf3\xe6\xb0\x8f\x14k\x97\xba\xed\xd1\x9a\xe6\xf2\xe6\xeaYaC\xbaC\xf8\x1c~ 1\xc0\x07\xa8\x03\xa7zi\xa6K)\x9a\xddF\x1aBs\x1a\x90\x18\x16\xcf\x19\xcf\x07?5\xa6\xb4\xf0\xba\xc4\x8a\xd7R\x89Y\xbf\xfbC\xff\x00l}G\xf3}\xf6\xf8\xab\x8b[HQ\xc6\xb0\x1c\x8e\xe7\x81V\xfb\xb9\xc4\xc2Yn%7s:\x93)fc.[\xa1\xcbu\xc69\xfa\xd2Z\x1cz|\xee\xcd;\xac9\x0c}cq\x05y\n\x01 d\xfb\xd2w\x11^YX\'\xde\xec\xa6\x11N\xc1\xa2\x98\xa8\xdaq\x9e\x8d\x8c\xf5\xea\x01\xa6\x97zu\xdf3\xc7u\x0c\xc0(f\x00~\x1c\xe3\xf5>\xf5\xa06&(\xd1\x06\x01P\t\\c#\xe9\xedV\xc2T%\xb4\x8d\xb8\x04v\xab\xae\x87\xe1\x98\x8b\xa4\xf7BFK\x89\x97\xc8\xd8\xf9\xc9\xc1\x01@\xee\xb9<T\x83\xd9[\xd8K\x19\x85$f\x99\x82[\x92\xc1W,8;\x89\xe0\x83\xd4\x1a\xafi\xfe(D\x8dRH\x8f\xde-bH\xa2\x12\x1d\xca\x1d_.\xcc\x0f\\\x8a\xae]\xf8\x93]{\xe6\x13\xdb\xbc/\x15\xc4\xe72\x05c \x99\xb7\x15d9\nG\xebL\x8e\x9f\x14\xf3<\x93]\xca\x15\x02\xfa{\xec@\xc0\xe0g\x93O\xa3\x14\x08\x12%\xcb\x93\xbfo\xa9\xad\xbfN\xb4\x9fQ\xd3Vx>\xf0d#\xcb-\x81\xfe\xacg\xd4\x99<\x17\xc0\xe1)\xcd\xc6\x95k\xaaJf\x92T\x96\xe1!b\xe6`B\xae\x10\xe7p\xc0\xfc8\xe3\xd8\x8a\xa9x\x0bZ\xd5`\x8bW\xbb> \x92\xd2B\xaa\xe1dm\xab,\xdb\x80\x0b\x96\xceHPIn\xd5\xce\xa3\xe2\t\xaf\xe7\x0c6\xa8y\xdaV\x03\x19S\x91\xc9\xc6I\xe4U\x83Kkej\xae`\x92O1\x8e\xc4.\x0e\t\xdf98\xdf\xde\xa24w3\xdc\xcb\x18\x91\x02\xa6\x02\xb0\xceF@8 \x81\x91\xf45d\xd3"\x99`\x8e\xefO\xbc\x8b\xef\x0b0\x10\xd8\t\x02\xba&6\x99\x07\x9a@\r\xdc.N*>\xec\xeb\x1a\xd6\xb1.\x9d\x1d\xcc\x96\xa2%g\xbai\xa5b\xb1*rY\xdc\x13\x81\xdb\x03\xa9\xc5URi/n\xb6Kt\x96\xe8\xf2\x8cL8\x8d\x17\xb9`\x06s\xf4\x15\xa6\xd8\xe8\xf6\x0f\xe1\x8f\x10\xdf\xc7{,\x0e$\x86\xd8\xc8Ha\x94p\xe4\x821\xd4\x10G\xb5G\xe9\xf1I|\xa5b"4@\xcf*,\xbau\x05RN\xdf\xcaN1\xce)wR-\x91\x12Hu;\xba\xc7\x1b\x18\xf2T\xbb\x008\xe4\n\x83\xb6\xf3Z\xd3Y\x91\xf4\xebU\x8e\xc29-\x05\xe4y\xda\xcc\xe0\x05\x865 q\xfcE\xba\xfb\xd2\x07T\x9d\xaet\xb9-\xedWO\xb6\x13o\xf3\x8cG~\xc7dwd\x0c\x0fV\\\x8cs\xda\x9d]\xddEy\x146\x16\xcbr\xd6\x16\xe4\xc9+\x13\x99\xe6f#|\xd2\x13\x91\xb8\xf0=\x80\xa7\x12\xddEw\xa7\xde;:Gi\xa5\xd9\xb3C\x0c{\x82\xc5+\xb8P\xb9bwn<\xe4q\xc1\xa6&\xba/\xe6-\xb4\xe0\xf9`*\x9c\x0f^\x93\xa9\x88;z@\xee78\xa91#a^X\xb0\x1d\xb89:A\x18\x1bo\xb9?a\x9a\x8b\xd5!\xd1a:\x9e\xabs\xe2\t\xad\xd4\xdcL\xf0\xc5\x15\xbc\xaf3\xa1$nbv\xaa\x83\x9crh\xf0T\x17Z\x8e\xa9\x1d\x8e\x93yk-\xb6\xa5n\xca\xf2O\x11Q\xb23\x92\xac\x8c\x0f\xadq\xc1R}\xf3U\xf8d\xb9\xd5%\xb8\xd2\xaf\xed6#\x00\xf2\x8f3\xcba\x1a\xfe\xf3\n_\x8c\x91\xd39\xcfj\x96\xf0\xdc\x96ZjX(2$Ks\x90\xdb\xb1\'\x96\xc7 \x821\x83\x8e\xe2\x9a\x8e\x7f\xc3\xfe\x1d\xe6\xb2\x10\xb1\xba+#\xab\xba\xb6\x9e[\x92@\xf68\x14\xf4\xf1L\xf6\xf7\n\xb7BA\xe5\x7f\rY\x11\x95O\xf2\x9d\x80\'\x8c\xefR\x1e%\x84X\xea\x1a\x8d\xbd\xb5\x8f\x94\xb1^M\x15\xb5\xb2\xb8\x95rq\xeb\xdaN\xe0\xa0\x0c\x96\'\x19\xabF\xa3g\xa6\xe9\x9e\x1d\xbb\xd5\xc6\x8d\xa7\xea,\'u\x95e\x8c\xb0,\xacK\xb2\xec $e\x8f\xa4c\x04\x0ei\xae\xbd\xe1[\xab\ri\xe6\xb1\xd4D\x96\xd3\x96X\xf1\xb8L\xa8\x17\xd4\xad\xbb\x93\x90y#\x83\x9a\xa8\xde\xd9\xea6\xa5!\x97\xcd\x9a\x05\x94:B\xc4\xb2\x96\xe8==\xf8\xe3\x8e\xd5e\xf8\xe7\xe8\xcf\x7f\x1b\xf4\xff\x00\xe2J\xcc\x0b\xa8\x0c\xaa\xdf\xcb\x8d\xb0F\x0f\xb0\xa8qZ\xc5\xd4a\xb0t\xbc!T+0\xf5+8\xee\x0e\xf9\x07#\xde\x99xN\x0bX/\xb4\xcdF\xf4\xa4\xbal\x17\x0f(\xb5&8\xd0\xcf\xb3\x03v\xee\xdcs\xf4\xc55\xd5oc\x9bU\x17\x16\xb0:Be>LLA\x93o^q\xc5i\x1e\x14\xfb=\xbd\xd6\xf4\xe3q8\x16Q\xa4\xbb\x90\xc9\x1f\x0f\x13\x92[nO\x04v$S\x9f\x15\xe9\xfe\x18\xb0\xb3\xb1\xb4\x8eXo\xaf`\x94\xa1x\x89\n\x90\x02v\xa1a\xcb2\x8c\x00z\xd3\x13\xda\xdf\x0e\x92\xb3\xcf\xa2\x18\x17\xf8\x88\xd2\x11\xaeN\x06\x95\xef\xf2\x06)\xb9/\xba{uV\x8a\x16y\xa78\x8eE\x8c\x12\x91\x81\x96\xc9\xed\xdfsU-N\xee]cM\x86X\xeddu\xb4\x06X\xb7\'\xa7\x05\xbd#\xa7;H\xe7\'\xe2\xab0i\x02\xe6\xf6\xf4\xdc,\xd7W\x1a\x80Y\x11\x8a*\xc5\x18 \x96\xcfM\xb88\xc0\x1dj\xf5\r\xe4\x1e\x1d>K\xc2\x1e)\xe2\x0c\x04\xac3\x86\x1e\x92\x08\xce\xe0\xddGLTf\x9dq\xaf\xcc\xb76\x90\xda\x97\x92i\xe4\xb8\x10"\x0f1\x15\x7f\x1a\x85l\x11\xef\xc7jf\'y\x02\x08f\x95\x9a`VX\x80\xdc6\x9c\r\xbd\xf1\xc5,\x8f-]\x9a4T]\xd1\xc9\xc0\xc19\'\xf5\xe6\xa9\xf6\x0f{\xa0]n\x8ei\x165\x07\x1bq\xf4\xc6;T\xee\xb9\xa7jJb\x9fT\xb5\x9a)&\x85&\x01\xf9vF;A t?\x1e\xd8\xaa\xfd\xf5\xec6z\xa2\xcb\'\x98\x1a)\x82\xb4eAd\\\xfa\x8e\xd6\xeb\x8e\xb84\xd7X\xd6\xefu\x8b\xbbx\xce\xa1q-\xb43K\xe4\xf9\xccF\x03\xe4\x96+\x93\x82z\xf54\xe4P\xc7\x15\xbc\xdey,\xec\xde\x85\x05q\xa8we\xe4}\xa9\xb9\xc4\xad4>Z\x80\xba}e\x81\xce;`\xd7z\xc5\x8a\xc3\x05\xb7\xee\xdfk\x12\xcaq\xd4\x0e\x0fJ\xa74\x10\xc8ff*\x02\xf1\xd7$\x8f|\xd6\xa3k$\xd6\xd1_-\xb5\xc2\t6*\xef\x95R@\xc9\xf8\xbd\nA\xda}\xc8\xaa~\xae\x9a\x85\xd4\x02{\xad:\xd0\xec!\x04\xd1\x8d\xae\xf99\x0c@ \x0e=\x85H\x10\xdb\x8ch\xd9\xc0\xce\x8026\xed\x90\x7f\xb54\x15\x9b!\x87\xa78\x07;\xfe\x98\xa6\xb0x~+\x88\x12h\xe3\x92L\x05f)\x8fH?A\xdf\xde\xa3\xee"\xd5\x12\x17\xb7\xb5rn&\xdf\r\xbey%\xf1\xe9\x04V\x85\xe1\xc7\x9a\x0b7\x92\xd6\xe9\x9d\xd1\xd4\x80\x07\xa5B\xf4\x1c\x7f\x9a\x82\xd5,\xe5\x96E\x9f\xf0\xdc$\x9b\x84\x8b\xc0\xc8\x1d\xc0\xc7#\xdf\xad-\xa1\xd5\xe5\xb6\t+\xea\x1b`\x1f\x8c\xd4vf\x85\xdd5`0\xc1 \xef\xbde\x1e\x1a\x9fW\xd3\x85\xdcw \xfe\xf9\x97\x11\xc8\xa0\x851\xf4\xc6z{}*\xff\x00s\xae\xc7u\x7fs\xa8_\xc4%y\x1aG0\x16!\x14\xc80\xac\x98\xec\x06>\xb5M\xd5\xee$\x87U_\xbc\xab"\xef\x1b\x99W~\xdc\xf5a\xd3$\xf5\xc7zd5?\xfa\xc7\xbd\xb7\x91\xe3p\x13\xc9\xf2\xdbiP\x9c\x82~s\xcdN\x99\xae:\x8c\x8a\xd3\xb6\x84|\x16\xd2\x01\xc1^\x06\t\xae\xdaG\x0c\x11\xa4P\x00Jl\x0b\x1cs\xc9$V\xab\xa0X\xf8WP\xd5\xf4\xb9\xb5{\x82Dr\xab\xc8\xb7\x1b\xa0F\x12.\n\xab(`\x02\xb7%\x8e3\x8e+P\xd5|?\xa2xz\xda\xea\xd3O\xd5\'\xb9\xbb`\xac\xd1yI(\xf2\x83ed,\x07\xee\xc1\xf6\xea{\x1a\xc0t\x99\xe6\x9aI\xae\x1e\xf4\xe2x\xb64hv\x82\x84\x8c\xe4\x0e\xc4\xf5\xabD\xde3\xd4\xaeb\x96\xd6[\xc4S\xf7sjKg{D\xaa\x00f#\xd3\x90\x10.\xe3\xcd[Z\x1b\x15\xb6\x92\xd6[h\xdd\xd00\x8d\xc2\xfa\xc0`r3\xab\xbd&\xe6\xca\xf1n\xe2\xb8\x8a\xec\xaa\x12<\xd8\xf24\xb1S\xe9<\x1a\xde<\x1f.\x9fq\xa4]^2\x8b\xabT\x94\xac\xca\x19\xa2\xb8\x8bp\xc1$.v\xa9\xe9\xb8pA\xe4U\x1b\xc5^\x1c\xb2\xb2\xd6\xadZ\xca\xf9\xff\x00f\xdd\xc6\xb2\xc7\xe6\xa9\xf3"\x04\x95uc\x8ev\x90x\xeaj\xb7\x07\x8al\xf4+\x99e\xd3Q\xad$\x930\x9bY&\xf3\xd7\x0f\x11Ws"\x0fP\x04\x820y\xa4\xe5\xd4\xe4\xbd\x86\xcd./\xbc\xd3\x04L"W#*\xac\xc5\xce1\xee\xccN\x7f*\x87|,\x85\xacv\xe6\xd1$\x9e\x13\xb620T\x81\xb98#P\xecx\xa9]9/?\x1b-\xc2\xdd:\xc3(\xddI\x07!\x97#a\x91\x95=\xc7"\xad\x1a\xf7\xdc4\xbb];\xf6T\x96\xb7\x18\x8a9\x96\xe7\xca\rr\xaf8\xc9\x13\x13\x9d\xac\xa3\x1b@\xf9\xac\xcbP\xf3\xef\x0c"Y\\A\x1a\xe2$\x04\xedg<\x12~[\xb9\xa9\xb9\xe5\x0fm\n\xc2\xcc\xc3\xcb2nT\xe4ob\x08\'\xa8\xe6\x99\xcf\xa9\r>(\x95\x127\x03\'cdz\x07\xf1`\xf7\xf65Ev\xf7r\xc8LAc\x8d\x90e\x01\xf4\x8c\x0c\xe0s\xce1WpF\x91D\x15\x98\xc8\xe0\x9f[\r\xc9\xf7<{\xd3\xad#@k\xb8g6\xf6\x9et\xc1\x0b\x04E,p\xa3\x9cc\xa61Q\x9a\xd6\x8c\x16\xce;v\xb5\rr\xd2\xa1,J,b3\x8d\xa4\xb1\xe79<\xf6\x02\xb5\xff\x00\n\xeb\xb66zD\xed\xa5Z\xe6{\xbc/\xde\x15\x99\\\x10A\xdb\xb7\xf9r*\x97\xf6\x83f\xf7\xfa\xa3k1\xc5s\x03]\xc8L\xf1z|\x90T(\xf4m\xf79-\x9a\x83h\xe6(\xcc\xeb~5\xab\x15\x96\x12\xac4\x9dX\xc0n\t\x18\xc9\xfa\xd4E\x12\xcbt\xf1\xb5\xbe\x94\xc7\xa5\xf5\x03\x92\x009\xc7`s\xb7\xd2\xa8\xe7\xc3\xe9\xa3jK\x10\xbcX\xef\xad\xa4\xde\x02\x84\xba\xb6\xb8\x0e\xa7\n0?\x12\xfb\x9e\x05Zd\x93S\xd5t\xd1a\xa8\x15\x9e\xde\td\xb8\x12:\xaf\x99\x19\x7f\xc4\x80\xf5\x03#\xf0\xf6\xa8\xdd\x01\xe4\x96\xed \xfb\xa0\x99=j\xe1\x9fb`\xa9\x03\xa6\x18\x90ON\x86\xb47\xb4\xf2\xad\xe5\x96\xe3q,\xa3\xcegc\xeac\xdf=zt\x06\xad\xff\x00\x16\xf2\xc4\xc8\xa7\xcb\x0c\xa7![9\x19\xcf\xaf\xb7\xb5)\xad\xa2F]H\x18\x83\x90\xc4\x0ex\xf4\xd2^\r\xd5-!\xd0u\x0b(\xa6K{\xb5\x06c+\xb6\x15\xd5[\x94U\x00\x93\xe8\x1c\x9fzh\xd3x~\xca\xea\xfak$\x82\xde\x0b\x88\x88\x85.wI"\xf9\x88Cm\x07\x92\x84\x91\xb5\x89\xc8\xe9\xcdU4\xd6x\xaf$\xd4\x15bk{9\xa3yQ\xca\xfa\xd5\x9f\x85\n\xdc1 t\xf6\xaa\xfe\xab|\xca\xd2\xb4\x10\x9d\x9b\xdc\xa4C\x1b\x8a\xb3eq\x9e8\x07\x18\xa9v]D\xf96\xb1\xb4(Y2\x10\x91\x80Fy\x07\xfa\xd3\rb\x82K\x97\x12>\x1ce\xb0{\x9clG\xdbj\x81\xd7\xa3O6iUC\x01\x90\xaa\x08c\xe9<\xf2:\xfc\x1a\x83h`\x8ekV\x9a|\xab\x94i|\xbe\xa1H\xc9\x1fQV\x9c\xdd\xdd\xa8_\xbb\x12#b\xc1B.\xfeF\x0f#\x19\xe9\xef\x8aV\xf3\xc3\x97\xd1[\xc1uub\xf6\xe6i\xbc\xb4\x05[j{.\xe2\x00\xc8\x07&\xa4F\x04\xb0\xb1S\xf9\t?\'\x1e\xff\x00\x1f5\x06t\x06Ob\xdf\xf9\xb50\xb4\x16r\xeb0m\x95cS\xe61\x94\x0eNF@*\xa3\xd3\x9ct\xab\x12\xce\xd0\xdcn\x9a\xc5g\xb9\xb8\x9b\xcc[\xb9J\xbe\xd0H \x10=\xfa\x11\xdf5\x15\xa3\xe8O\xa9\xcf,q\xf9H@`]\xd40\x1bO$\x0e\xe7\x8a\x9a\x9fH\xbe\xf0\xc4\x88.R\xd2\xe30\x05VFf \x12\x1b%\x18\xf1\x90q\xd3\x15\x1c\xa4\xae\xbf\x88\x8f*\x91\x82\xa7R\x96\xdc\x8c|\xef\xb74"\xa8>[r\xde\xa1\x83\x8d\x85_4k\xf4{?\x11\xc3\xfbB\xde\xd84>]\xbaH\xa2\x08\xfc\xc3\x95!T\xee\n\xa3\x1c\x1e\xb5E\xd1W[\xd2d\xb9\xba\x87J)\x0bJ\xd6\xfet\xca6\x82H|\r\xe3\xa9\xc7^\xf5d\x8bR\x7f\n5\xbc\xf2YX%\xc4\x80\xdc\x02\x91l\x9a6nT>\xee\x9c\x1c\x8cq\x83P\xd7\xbe\'\xd6o\xec\x1a8\x11\xe5\xf3\x1cN]\xca\xff\x00\xa9\x92K`v\xe7\x03=\xaado\x04\xdaE\xcc\x92G$\x19\xd2\x15H\xfc\xfe\xa0I<s\x8aJ\xc2\xd1\x96x\xd66\x8eL\x13\x9e\xfav\xdb\x03\xe2\x9f\xf8\x87\xc5cR\xbb\x94\\[\xc6\xef2\xfe\xed\xb8a\x12\xed\xdb\xc69R\xbd\xa9\xec\x1aJ\\C\xabj\xfa\xb4>R\x9bg\x92\xd6\x07}\xb2\x92\xac\x033\x0fI\x18\xec:\xf3P\x86\xdex\'\xbb\x9bY\x82\x08.\xe5T\x9e\xd9cU\n\xa9\xb0\xe3`_@RF;\x9a\xe3W\xd7V[\x0bh\xa6\x97r\xa33\x84\x93\xd4\xa8J\xe0\x9c\x9eN~j\xd1f\x86\x19K\xcaZf\x04\x9c6\xc7Q\xee\xdf\xae\xd4\xc4\x8a\xd2\xc6\x8b\x12\xac1\x8cq\xfe\xd1\xd8UJid\x08\xea\x8d$h\xcaA\ny#\xbesQ+1\x85\xe2\x86\x08\xf7\x92G\x1d\xd8\x9fz\x91\x82X\xe7\xd4l,\xe2\x0f*\xcb2y\xd8\x07\x1eNrI#\xa7\xb5[\xd5l\xf4\xb7\xbb\x914\xb4\xfb\xd4\xa4}\xdd\xf2\xc5\xe3\xe7\x9c)\xe3\xa1\xebL\xdcO\x0c+\x11i\x11L\x8d\x80\x83<|\xfbR`I\xa5\x95\x82FHQ\xeav\xe0g\xfa\xd7\x1a~\x96\xda\x8d\xb4\xa8\xf0\xaa\xceU\x88\xdd"\xc60\x80\x93\xc3\x103S:&\xbd\xad\xe8\xda|\x96\x922C\x0f\xdd\x9a\xde"\x0e\xde\t\xdc[ u=\xea\x12i\xe7\xbcb\xb1\xd97\x9b\x1c\x8a\xcdr\xcf\x94\x93nK.\xde\xc4\x8aE5[\xeb\xf3=\xb4\x12\xad\xb8\x9a&I\x0b\x05`rr|\xbc\x83\xb4\x9e\xe4`\xd4\xa5\x96\x19\xa0\x83L\x84>\x92C\xc6NF\xaeT\xf1\xf7\xa0\x92\x93\xc8\x1e0\xe8\x18zXlq\xdcsV\xbf\x0fk\xd7\x17z\x8c\x93\xc2#\xb4\x06\'\x85\xdc\x81\x93\xe6\xf1\x92O\\\x11\xc1=\xaa+\xee\xb2h\xba\xed\xad\xc5\xe5\xc2\xbd\xba\xda\xbb/\xaf\xd3 \xdd\xca\x90\xbc\xe0\x9ey\xa8{\x8dR+M\x8b\x0c\x11.\xe0\xb1\xcb\xb7\xf0\x82\x067{\x96$u\xa6\xd7\xc6K\xcbH!-\x1cR\xac\xa1\x9ac\xcc\x9b[\x8d\xb8\xf6\xa8\xcd0m0\xeb9\xd6Z0r8\xdf\xfbWIQ\xae\xe4\xa8\xc6\x9c2\x8eOa\xfdi]SXI\xee\x84v\xf6\xcb)eUf\xd9\xb7\x04\xf6\x1f\xfbs\xd4\xd5\xef\xc2Ww\xda6\xb5&\x9bsm\x0c\xd6\xd3\xc4\xaa\xae\x08\x0c\x07\xb7=~\xb5V\xd04\xadKu\xfa,v\xebn\x80)\x99\xc7\xa8\xe3\x9fN}\xea\x9d\xe3\xb5\xd64\x8dkN\xd4\xad<\xd6\x90F\x88]rP0\xe9RV\xe2%\x98,\x8d\xabX\xc0\xc9\x1b\x807\x19\xaa\x91\x1c\xad\r\xc4\xed\x95\x08Cm\xfc\xb9<\xd7\xd1\x1e*\xd2E\xa5\xe4v\x16\xb9&\xe1\x95\xa3l\xe4z\xab\xe9\x1f\x0ci_\xb1\xb4K\x1b2\xfb\x8cq\x80O\xb9\xaf\x92~\xceumj\xf2\xfbI7\xf0\xb6\xa0\xd2H\xcc#\xe0:t$\xf3\xd3\x15\xf6dlLq\x9d\x85}#\xd2{Q\xd3\xeda\x86K\x97\x8c\xe7-\xa4|\x0ej\x97\xc4\x97\xf3\xdcG\xd3\xe2\x93\x81\x1e\xb2\x7f\xdc\xc7l\xd3\x9a\xf6\x92V=\xe9Q\x83V\x06\xb3\x03\x8a3^dW\xa4W\x04W)U\xed{\\W\xb94\n+\xaa\xf0\xd1Fk\xb5\xcaL\xfd)2icI2\xd7\rtR{\xa8\xdf\\\x95\xa4\xcek\x94S\x80\xf5\xd8l\xd3QJ)\xae\xe6\xb9N3Ex+\xd1]\xa2\x8c\xd1^\xe2\x8a(\xac\xa5`\'\xb5v-O\xb5I\xa2\x8aT\x01\xedU\xc1A\xa9y5\x1a\xb6\xa7\xda\x96\x8e\xd8\x8c\xfdi\xefJ\xf74\xa0\xa0Q\x9aMa\x00W~]u\xba\xb9g\xae\x9cb\x81\xcdp\xca\x00\xa4\x08\xae\xcb\x13]"\x13\xda\xa1\xbeI\xa9\t\x80) \x84\xf6\xae\xfc\x8c\xf6\xa7\xa9\t=\xa9\xd2\xdb\x9fjRDOj\xe38\xa8\xb1\x061\xc5.\x91c\xb5Iy8\xedF\xc0)\xef$\x8d\xe9\xbf2\x9b\xa2\x1fj]W\xe2\x94\x03=\xa9UP)\xd5LSl\xd9\xa4\x82\x9fjUP\xd2\xc0|Wx\x14\xf0\x14\xd6k\x80\xb8\xa5@\xc0\xaf2+\xca\xed\x14\xa6@\xafA\xceA\x1cRU\xd0\xae\x83\\5\xf3\x07\xda\x8f\x87t{+\xbdI\xe2\xb8\x8e\'\x9f\x12}\xd5\x8e\x19\x9c\xff\x00\x14\x7f\xe6\xbe{\x9c\xe6\x02\x8d\xe9\x95N\x00\xc63\x8f\x9a\xfbO\xed/\xc0#\xc5\xd6\xb0][\xc8\x16\xf2\xcd\x1b\xcb]\xb9\x0e\x0fc_)j~\x0c\xd4\xa0\xb4\x93Q7\x08c\x85\xccR#6\xd6WS\x826\x9ek!\xd5\xa0d\xba\x07F\x95\xdd\x81\x19\xde\xb7}\x1e\xf5\xa4\xe9\xe1\x03\x96t\xf4\xb08\xdb\xb0\xaa]\x9cS$\xeeRW\x85\xb6\x11\xbdN\x08\xcf\xcd\\|7q\x12^\x18noeHD\'n\xd1\xbc\xef\xe8\x0f5M\xb8)\xa7\x97\xf3\xa5\x91\xcc\xc4,k\x8fn\xb59\xe1\xfdF\xda\xce\xfa\xd2\xf2ko6\x0bY\x96Y;\x8d\xab\xceH\xef\xf4\xa90\xea\x8d\xadP\x10K\x10I\xdf\x18;\x1a\xeb6<\xc6\xdf+\x9c\xfb\x82*\xef\xa8G<\xda\x8d\x93I\xe6\xef\x9e\xda2L\xa9\x8f@\xf4\x8cg\xb6\x05Oj>\x0c\xbe\xd2t;\x9b\xa8\xe2s\r\xe6\xe9\xc1\x04\x18\xc9\x88\x10\n0\xe4\x922pj\xf9\xa0\xc1{\xf6\x8b\xae\xdb\xeb\xb7\x8b\x1cvv\x9b\x12G\n\x123\x0c~\xbeA\'\x05\xb3\x80\xa2\x9fx\xc3]\xb1\xf1\x16\xa8\xfau\x9cr$Vv\xd3\xc6\x9c\xe5\x18\x0e?v\xaa85g\x05\x85\xbd\xbcwRy\xa4\xfe%\xf1\x16v$\x91\x82w\xa8R\xf5\x1b\x99n-\xe3H\x94\x18W]\xc1\x07POa\x9d\xab\xe7K\x95[\x88\xa0E\x0b\xe8\x038\xe3\x9cw5\x05\xb3\xfe\xa3\'q\x8c`\x0e\xe4\x0f\x8a\xbe\xdaZh\xcdojd\xb9\x0f&\xd9S\xcb\nU\xe3\xd8K1~98\x1cUE\xa5\xb3\x9c\xa3Z\xe4\xc2\xfb\x7f{\xc8\'p\xc9\x04\x1f\xe5\xe9\x91\xd6\xa8\x9e\xc6[DF2)\x1a\x86N@\xe3\xb0\x02\xb4\xb1]\xa4\xdb\x02uc<~\xf4\xcb\xcb\xb5y&d\xb8\x96&\x04\x1d\x92uf\x07\xaam\xe0qN\xed\xae4\xb8g\x92]B6\xb8\x00n\x903r\xd8?\xc3\x9e\xa4\xe7\x9e\xf4\xda{t\xb7\x04\xfd\xe1v\x06\x07{\x13\xc6zSK\xb8\r\xea3y\xcc\x1c\x84U`\xa3\x1cp1\x8cW?\x15\xe5\xb0\x90\xa6\x90O\xa7W\xe5 |f\x9ev\x01\n\xf7\xa5-\xad\xac\xda\xdfV\x12Cp\x86Di\x84\x10\xba\x95\x11\x93\x95\xcf9\xe0u\xaa\x92\xa4\xf7\xae#\xb7\x8d\xd9Rp\x03\x1cd)\xfel\x7fz\xbeE\xa5\xc6,\xa5\x94\x82\xd1\xa1X\xdc/%\x9f<)\xc7@q\xd6\xa4\xe7\xb3\xb3\xb52\xbd\x8c\x03u\xd4@\x1bq\xb9\x04.\xad\x9c\x06\'\xd5\xf9\xf4\xa7\x9eo2$\xca\xa2\xb6\x9c\xae{\xeb\xe3\x8e\xd5\x19\xd41\xe7n\x0f\xb0\xc5@\xea\xfa\xa7\xdf\x9e\xc2)@\xd9ej\xb0`\x9c\x02\xeb\xc1\xc7\xb5Ixm\xb4\xaf\xda\x10\xea7\xd6qK\x00\x02\x14FM\xa1@`Y\xfaz\x80#\xa5)kmkw \x87P\xd1e\x86\xd9V\x17\xbb\xd4\x146\xe4\x00\x93\xe6\x11\x9cz\x8f\xf4\xa7\x11[\x08\xda\xce\xda#/\xec\xeb\x86v/)\xdc|\xd5\'\xd2\xbb0J\x00Alu9\xab>\x9fmq\x1a\xac\xc5\xd1Y\x94\x8dDpN\xdc\x11\xb8\xf9\xe2\xab.\xb4H\xc2\x1c\x1d\x00\x82q\xc9\xef\xb5w}5\xdf\x87\xb5\xf9\xfe\xf1\xa9K\x1a\xa0UX\xe0\xc4\x80FW\x85/\xd3\x90y\xedH\x9dB\xdfQ\x9d\xfe\xe9\xa7"\xc9\n\xb7\xef\x19\x89\xdd\x18;\x87\x98:\x02\x07\x1cqO\xaen\xf5]6\xda+\x0b\x89\xd2\xf6\xcc\xede\x85NH]\xb9\x00\x90:\x8c\xe4u\xa8\x7f\xbaI\xa7\xcb{}\x0cw\x16\xednC\x08\x9e2\xd1I\x13\x12\x08fm\xb9\x07\xdb\xbd5\xe6y\xd2\xb2#\x96@\xe7Z\x91\x92\xb8\xdf\x92H\xa9J\xa6\x14\x1a\x80\r\x81\x83\xd8\xd4d\xd0\xc5\xe2]F\xd04V\xfakMt\xc4\xca\x18\x84@\x07$\xf5\x00w8\xa9\x08\xe1\xb2\xb3\x8a\xd0D\x8a\x15#1\xc9"6C\x82\xff\x00\x8b\x1czx\xc8\xf9\xae\xb4\xc1m\xaaIa\x04\xc2\x18aEu\x90\xa2\x00\xe7\x7fv\xfec\xcf\xe4)\x9cV\xcao\x85\xa2\xc3\xbaUw\x8c\x10s\x95C\x9c\x02q\xce:T_\xc4+\x9b\x82\xaa\x18\x968\xdb}\xf1\xc0\xfa\xfe\xb4\xb5\x18d\xf5l\x06\xff\x00j\x9b\xd4b\xb7\xb8H\xd2\x0b\xd6\x91CnH\x95wH\xca\x06Ir3\x8d\xbe\xddMZ|\x0b\xe2\xa7\xf0\xc6\xa2\xb1\xb6\xe6\xd3n\xe4\x02e=c\'\x85\x91G\xf4>\xe2\xab\x96\xab\t\x94A,\xd2\x0bU\xc9\x85J\x85s\xce\x01#\xbdw4v\xd7\r\xe5\xdcO*H\x84\x08\xbc\xa4\xde[#\x199#\xa6\x06+3\xd5!\xb6\xea1\xcfmr2\x8e\x84\x1c\xf6<\xed\x9e0x50\x85*1\xdf\x15\xf6]\xac\xaa\xfb\x19X2\xb8\x18 \xe4\x10{\xd4\x8a\xc7\x83\xda\xbev\xfb0\xf1\xc8\x1a\x93\xf8n\xfeW-\xe6\x13c$\x80\xf2G-\x19\'=O+\xfaW\xd0k6\x19\xb8\xcf&\xbc^\xff\x00\xa6\x7f\xa3\xdd=\xb5\xd8\xce\x1c4O\xd9\x91\x87\xe6\xdb>\xdb\xd5\\\xa3S\x1d\'=\xbfJ\x92E\x07\x00\x0f\xad*\x00\x075\xd5\x8ay\xe8\xec\x0f"\xb8\x9bt.U\xc7=kL\x96\xa6+\x0bk\xd3\x1f\xf0\xa4\xfc\xae\x06\xc3\xb0\xaa\xd2\xd9\x91\x93;\x8eEp\xd8Q\\g5\xea\xa3\xc8Fj#]\xf1&\x85\xe1x\x91\xb5\x1b\xccM!\xc46\xb1\x8f2y[\xb0D\x1c\x9f\xedQ"\xb3\xb8\xbcr\xcb\x1f\x97\x17\xb9\x18\xcf\xd0R\x89\x0b\xb6rjg\xcbc\xff\x00\x15F\xf1G\xda\x06\x85\xe1\x80\xd1I(\xb9\xbc\xfe\x1bX\x98\x12\xa7\xdeF\xe8\xa3\xfa\xd6O\xe2\x7f\x1fx\xfb\\\x96\xea\xd3K\xf0\xd6\xa3cb\x84\xab\x94S\xe78\xe9\x96q\xc2\x8f\x85\xfdk7\x83\xc2\xfe \x12K4\x96rFn!\xd8\xc6@\x85\xb9nC\x02r\xa3\x8c\xe6\xaf-z=\xaa\xb4Mqx\x90\xc6\xc0\xb7\xe7]M\xed\xbev\x14\xa4x\x00\xcb\xcc\x87\xfe\xd0\xc3\xf7\xa4|K\xf6\x81\xae\xf8\xc3Qh\xafeH\xed\xe2\xc9Kd$F\xb9\xe0\x1fvo\x93U\x14\x99\x16\xe5\xd6s\x93\x10$\x83\x8e@ \x9e\x86\xb4\xcb?\xb3\x0b\xa9\xe6\xfb\xc6\xa1\xa8E\x1ce\xc9h\xe2]\xcd\x93\xfc\xa4\xe0\ng}\xf6E}\xff\x00_&\x99\xabE(9h\xed\xe6R\xae\xe3\xf1m\xde22{v\xab\x98z\xbfA\x85\xbc\x94\xbaD\x00s\xa5\x8a\x96\'r[\xde\xa5\xc5\xd5\xec\xe3+\x19\x91T\x0e1\xb0\xaa-\xc8E\xb1\x9a\xdb\xc8\xb7c\xbd\xf6I\x82\x08Y8-\xc1\x1d1\xc6}\xe8\xd1\xade\x86\xde\xfa\xd8\xdd\xd8I\x00\xb7bL\xb8\x0e\xa5FAM\xd8\xe7\x8cdsQ\xd2\xcd=\xdb4r\xc52\\"\xaa\x0e\x02\xedX\xc66\xb0\xeaH\xe3\xe9^\xae\x95v\xef\x18Ur\x08/\xce\xd0H\x03\'\x04v\xadR\xcb\xe5J\x85\x9c:\x03\x85\\`\x91\xc0\x1d\xea\xcc:\xba\xfay8\xdf4\xe1%Y\xca(\xbe\xb8\x11\x8e1!f#<\xe4 \xe8>)\xb5\xcb\xea3G3Cp\x98T\xf5yc\x07\x91\x8e\x7f\xcdN\xd8i\xa3U\x92\x14\x84\xacN\x00\x0e\x826\x00\x05\x18\xdcXg\x9fz\x9f\x8b@\xb7\x8fQ\xba\xd3\xa2\xb9\x89\xe3C\x12\xb0W#\xef2\x17\x18\x8d\x00<\xe4\x9eO\xb0\xc8\xa0\xba\xee\xfaAR@]\xf78\x1bm\xf1\x8at3\x1d\x83\x10H\xde\xb3\xad\x1b\xc3Z\xa6\xa7s<\x16\xb24\xd2\xabn\x8cd)r\x06J\xaex-\xf1\xd6\x9c0\xbeu\x11\xc8\xf1\xe62rXa\xb3\xf3\xf3[V\x9d\xa4k\x1a4%t\xfb/)\x95\xe5\x90\xc8fT\t+~\xed\x9c>y\x00p\x17\xafsP\x1ag\x84o5\x19\xda[\x9f\xfa?Iyd\xb8b\x8b\x12\x05\xdf\xe6\xb9\xee\x18\x11\xfa\xd4\xcf(\xdcG\x00\x10\xb9\x92C\xbeT\xaa\xf6\xc7=\xe8\x8ec\t\x94\x99T"\x8e\xcd\x93\xf3Y\xe4\x17O\x1f\x97\x1bC\x97\xdc\x00bx=\xaa\xc55\xc3F\x96\xed\x14\xb8\xc6\xe1\xb9y\x05\x87\x0cx\xff\x005)\xafx&\xfbG\x9ax\xe7\x8b~#I\x04\xf0\xfa\xe2h\xa4>\x87\x04v8=G\x15\x15a\xa4\xdf]"\xc3km\xe6\x93\xd0\xc6\x84\x9e\xb8\xe3\x15V\xf6d\xca\xf1\x1bf\xf35cI\x1e\xaf\xb0\xa9I|\x8d\x1aH%R\x84d0;Wz}\xf8B]\xca\x9d\xccCu#\xf2\xf9\xab\xc6\x93\xad\xc6\xb6\xda\x9d\x94\xda\x93\xc1h\xd6\x93\xb4\x16\xc5K#J\x14\xed\xed\xc1\xf5\x13Qw>\x16_\x0f\xd8\xbc\x9a\x9d\xccQ^H\xa4\xdb\xd9B7\xc8s\xd1\x9c\xf4P*)%fx^x\xd7lq\x07(\xcc\x14\x17\x07n\xe022O\xb7\xb5%\xed\x9f\xa4\xdc\xa4\x85\xf4\xc9$d4;\xfe_f\x0b\xfd\xe9q\xdc\'P\x88\xa8\xf5 `C\xe3\xb8\xee3\xfdkG\xf0\xf5\x9c:\xed\xa6\x9f\xa5En\xd1Ost\x82[\xb6\x9b8\n\x0f\x08\x98\x00\xfc\x8c\xe75)\xac\xd9Zi~\x0fh\x10+\xc8\xda\xc4\xf0]I\xc9Vk|\x85\x07\xfd\xb8<\n\xa8\xe9z\xf4V\x97\x92m\xd4.-\xb4\xc2\xfb\x1b\xf0\xabz\x86x f2\xc4z\x9dF@\xa4\xa5\xd6Z\xe2\xc1\xedm\xed\x1dB\x19%\xb911\x967_31\xbe\x18d2n\xdb\xbf\xab\x0cf\x90\xb0[\'O\x94\xaa\x83q\xe5\xc9\x10l`\xe3o\xca\x07\xdf\xd4~i\xe6\x17-{\x11.|\x80\xe8\xe5s\xb6w\xdc\x93\xf6\xc0\x1d\xea\'J{\x8f\xbfK\x0c6\xefp\xf7\xa8m\xe4P\x82IdG \x11\x1e\xe1\xc3`zOj\xbf\xf8z\xebN\xb0\xd6\xe6\x8e\xea\xc5\xee\xec\xe7\x87\xc8\x8cK\x16\xc9\x19F\x020\x00~<\x0c\x1295\x9aM~ \xb9X\xe3\x90\x80\xf8p\x03w\xc7\xc7qW\xbb\x19,\xad\x96\xc2i/\x8c~Q\x12\xc9\'\xa9\x84`z\x8barx\xeb\x81\xd6\xa1\xda\xcf9{u<\xa4\x82MM\x8278#\r\xces\xbeju\xfcp\xbcR\xf2\x03\xc6W\x0b\x90\xde\xf9\xc8\xdfn\xd8\xadGX\xd2\xaf\xf4\xab/\x0f^\xe7h\x81&X\xe2\x90\x1f0FX\x15G\'\x82\xc1p\x07|u\xa9\xfbMgG\xd4\xe3\x86\xea\r<\x89\xa1q\xb2r\xaa\xa5s\xd5\x1d\x86\x01\xe3\xa9\xaa\xad\x85\xa6\xbb\xafB\xba\x87\x99sui37\x95%\xc3\x04.\xbd\x03\x05s\xdf\xfaUvG\xd7\xed\xf4\x9dKN\x8e\xc8%\xb8\xb9s4\xa5\x86#\xdc\xbb\x1bp\xec;\xfb\xd5\xe4C\xa8C\xd4\xefd\x16\xf3\xad\x9c\xb1#B\x19u\xeax\xd0(\xc1\x03\x03\x8c\xe4qY6Ky\xed\xe1\x89\xee\xa1{\x98\xa5`\xe5\x1f@U\x91\x89*Frq\xc6\x0f5q\xd7\xbcP\xba\xd4\xcf\x04\x17\xb1\x08\x11\xf6\x08\x11\xcedn\xdd:\xf3\xc7\xb5eZ\xde\x9b\xe2\x0bO2\x17\xb2f\xbc\xc3\xccUW\x05"\x04(a\x8e\xe4\x9cb\xa2\xee/c\xd3\xe7\xd6\x12\xf6I\xfc\xef\xbby\x16\xfeATPN\n\xb1=v\x8e\xb8\x1c\xd4\xa5\x9f\xda\xa5\xca_\xea#Rv\xb8\xb6d_\xba,k\x82\xae\xbc`\x93\xce\x1b\xa9\'\xbdA\x11G\xd5o&\x93\xaa\xdf\xb8r\xc0\x04\x1c&\x9c\xe4\x1d\xfe6\xc5Z\xc5\x03\xf4\xc8\x11,m#1\x85\xef\xb1l\xe3\x04\x1e\xff\x009\xac\xeeY5\xe6\x86vhX\x8bd\xf3\x1bc\x89\x1d@\x90\xc6x_\xe2\xdc:u\xc75\xed\xc7\x8a\x19\xda%6\x97\xb7W>_\xfd<\x9eqIc\x93\xf8\x8b\x92\x0eF28<S{-oV\xd3\xe1\xd4"\xb2\xb8\xb8\xb4\xb6\xb8\x93\x12\xbcd\'\xac\xe5\xd7\x0cz\x1e?J\x9e\xf1\'\x88\xed\xb5\xfb}5\xe3\xb50\xdcB0\xf3\x06\x04\xce\xca\x8a\x81\x9f\x03%\xce\t\'8\xe6\xa4B\x9d6\xda\x1f:?L\xcb\xba\xc7"j\x0cw\x03\xed\x8a\x9f,w22\x86P\xd16s"\xbe\n\xe0\x03\xb8\xf94\xcbI\xd1f\xbf01c\x86\x04\xc8\x0f9rq\xf9\x00)\xf6\xb1\xa0[ZC\xba\'\xcc\xbc\x12\xd9\xc0\xe3\xb5Lhw\x97{\xa4D\x9e\x18\x84\x83hg\x18_\xd4\xf7\xa6^!\xb5C\x10E\xbd\x13\xcb"\x92YO\xa0\xa9\xf7#\xde\x89 \xe9\xd6\xb6\xc1\xe5p\xd26FA\xdf?AQ|\xc9\xe4\x9c\x85S\xa7\x9c{\xd5=${(\xa4\x95\x18\x96x\xf2\xc1[\xb7\xb8>\xd5\xe7\x9a\xa5\x16K\x88Z5q\xe9Fa\xbd\x81\xf9\xe34C\xa1j\xd0A\r\xda\xf9SE\x9c\xb2\xe4\r\xb8lgi\xea>\x952\x1e\x1dN\xee)\xa4\xb5,\xf1>\xd4P0>I\xcf\xb5B\x8cC\x1a\xb1\xd5\x97\xc0a\x93\xd8\xf7\xcf\xb5If:T\xaa\x82\x01\xc1\xfa\xd4\xf7\x86|A\x06\x95o}m%\xb1\x85e\x8bb0\x1ds\xf8\x81\xfd)\x8d\xd5\xdd\xb5\xdd\xd4\xb2\xac\x8b\x16\xe1\x8c\x05\xc8\xe0u\xc0\xab\x8e\x9d\xa8i\xec\xf8\x9bG\x0fol=\x03|q\xb9uel\xb6A\xc8=1\xed\x9a\xf3\xc5\x1f\xfaz\xee\xf5\xae-\xd5%i\xdb}\xcc *(\\\xe7j\x95\xce\x0f\'q\xa7^\xf5\xd2\x12E\xecn\xb1\x14\x014\x95$7}\xf9\x03\xe2\xabf\x81^\xe0f\xdd\xd5\xa4\x04\x96\x04\x11\x91\xdb\xe3\xefX\xe6\xa1\xa4Ev\xf2\x15\xb8\x12\xc7\xfc<\x8c\x8f\xd7\x15\x99jzT\xf6\xd3\x84\xb6egi\x1c2.\x08o\xcc\x1cq\xf5\xad\xa7\xc6:)\xd3\x0b\\\xe9\xd6j\xa9\xa8*\xb8\xb6\x8e6\xdb\x14dnP\xa0\x92y\x07-\xf5\x1c\xd5N\xc2\xdbMk\xeb8\x1e\xe27_#s\x08\x97hF\xe4\xed\x91\x899|\x1c\x1cv\x02\xad\xed\x90\xc6\xd2\x97\x91p\x988\x1c0#m\x8f\x15\x19\xa2\x0c\x10\xa0;\xf7\xce\x08\xc5Vmm\xafl\xa2\x8aD1\xa9u\xf4\xabn\xcf=;S\x11\x14\x86\xe4\\\tLr\xa6p\xb1\x83\xc8<\x1c\xee\xc89\xee\x0fQ[\r\xf7\x87\xfe\xf8\xb8\\\x85\xfe^\x98\x18\xea*\xbdq\xa2\xc3\x04\xc2\x18\x90\xbb\xc7\x188e\'\xaf^=\xfehGh\xa52E)I\x07\x0f\x9c\x1andr\x80?\xad{\xabn\rT\xb4[Yf\xf3\xc4\x10\x19\x05\xaa\x83\x87m\xa0\x83\xc1\x00c\'\x14\xea\x0b\x8b\xa7\x97zC\x92wq\xd7\x188\xabt\x9a1\xb5\x83\xce\x84\x04\x90cx\x00\x9c\xa8\xeeG\x18\xaa\xbb\xe9\x17M6\xf8\xe5\xfd\xd39\',T\x83\xf5\xf9\xa8&M7R\xb4\xc0\x81\xcew\xce\xe3\x7f\x8d\xea]\xbc\xec\xa8\n\x9c\x81\xd8S\xb3\xab\xce\xaew(W\x03\x19n\x82\xb8\xb0\x99\xef/\xb7\xc8\xden\xf2\n\xb0\xe7\xaf\xc7<R\xbf\xfazH\xe32I,c\x00\x9f,\x0c\xf29\xe3\xde\xa5t}\x17\xf6x7&\\\x12\xc7\'9a\xfat5\x12k\xa8^)\x96\'$\x93\xe9_\x9a\xb1\x82\xe1\xd9\x93P\xc0\x15\xb5}\x9dk:\'\x86\xa4\x9a\xe6\xea\xd5\x9e9\x07\xdd\xf6\xa3\x86e8\x1b\xdb\x07\x1c\xb1\xed\xd8T\xef\x8a\xfcqo\xaci\xf7v\x07I\xb7H\x99\x81\x8eS\xf8\xb6\xa9<\x003\xcb\x0cg\x9a\xce\xf4\xc1\xa2B\x93D\xf7\x10\x92\x02H\x11\x8e\x19\xfc\xc6\xc7\xa7\x1c\x12:\xe3\xae*P\xe9\xb6\x96\xb3\xb0^X6\xe5\xe3p\x19\xf6\xa7\xed\xeez\xaaZ\x8be\x92\x08\xad\xa4%\x9be$\x86$\x1c\xed\xdc\xf1Q\xe7\xb2\xe9\xad{\xf8\xc6\x86G\xb8] \x12\xcd\x80Wq\x81U\xcb$\x9a\x07h \xb7E\x87w\x19$\x90I\xc9<\xd2\x1a\xac7s\x89wNA_NKd\x9f\x9ez\xf4\xab\x95\xe4\xbe]\xbcs\x86\xe22\x06x\x1f<\x1cTL\x93\x0b\xf8\x11\x96"\xae\xca\xcc\x01=\x15y-\xf01\xcdV\\\xd8\x88\xe62\x891\x9c1\\\xfec\xf0*\xc69\xd9\x94m\xb7\x19\xac\xda{\x88\xed\xa2\x9e6\x83\xcf\xf3B\xae\xed\xcc\xb8e\xe0\xf0:\xf1\xefS\x9ad\xc5~\xef\x8b\x14\xb9p\xa5@e\xdd\xb4\x91\xc7N\xa4u\xc7\x7fj\x98\x8b\xc3fy\xbc\x94H\xbc\xd9\x1c\x13\xd4`\x9f\xe2\xe7\x83\xf5\xa2{\x7f\xd8\xce\xee\x86d\x92\xdf\x0e\xb2\xc6FU\xf3\xc3\x129\x03\xae1Rci\x14@<\xcd1\xeb\xc8e\x199\xe7\x15\xd2C\x87\x19\x19+\xc6}\xf6\xa7\x91Z\xdb\xe9?\xb2u!s\x03\xcf$b\xe9 \x18}\x8c\xaf\xb4,\x8as\x82G\xa8g\x8fz\xacx\x8a\xff\x00U\xd7\xf5\x0b\x8b\x8b\xb9\x19\x96WQ\xe4\xc6\xb8@\xd8\xc6I\x1dX\x8ao#_-\xdc\xae\xa42*\xa2\x9fF\xd0N=\xf1\xce;\xd3\x86\xfb\xb9\xf44\xdeS\xf2\x1eV}\xb1\x82@P\x00\xee\xe0\x9e\xd5k\x0bJ\xcd\xa5\x0b\x08\xe4\nJ\x16\xd4\x0bc\x9f\x8f\xb5Cx\xe3\x1e\xa9\x002.\xa1\xabN\x08\\\xf1\xf4\xa7\xbe\x1a)\xa1\xdb>\xa1$\xf0\x08\xa7\x9cZ\xc7\x1e\xec>Qw\x92\xcb\x82v\x9eAo\x8e\x95~\xd4\xed\xb4\xe5\xd0^\xfd[\x0fw\x12\xb0k\x92c\x91\xa1\xd9\xc8u^Y\t\x1e\x901\x92*\x85\x0e\xa3n\x93\xe9\xf6\xa9\x18\xba\x83Ng\x92\r\xf1\x80\x93\xce\xf2\x02\xcd \'\xf0\xe0c\x8e\xb8\x15X\xd6<A<\xb7\xdfu\x82P-\x9b\x0em\xf8UM\xa7\xf0!f9A\xd8\xf7\xf6\xab\xf8\xee \x8e\xdd\xa3EG>^\x08\x1b\x90\xf8\xdc\x8es\xedU\x12D\xef"\xb33 \x0f\x9d\xbf\x99s\xb0?\xd6\x91?v\xbb\xd4\xd6+\x99dpv\x00\x8c\xac\xee\xc3\x18\xcf<a@\xe9S\x16\xe6\xde\xce\xecIj\xb1\xc2a92\xaf\x07#=A$f\xaa\xd2\\\xcd\x14\xcaZ\xe4\xcd4\x81\x15\x00m\xf8\x8d\x01\xc0\xcbt\x034\xde\xda{tk\x94\xf2\xe5b\xd2e\x86\xf1\xf8\x88\xeb\xd0\xd5u\xc4P\x94F\x8eS\x18#\xff\x00s\x18\xcbg\x04\x13\xbe)&\xe7\xcbw\x0cT\xe9\'l\xf6\xc5M\xea\x17\xb0\xdb\xef\x05&y%\n\xb1*\xe3\x0e{e\x8fA\xf4\xaa\xad\xca\xdc\xcf\xbe)|\xc2\xa0\xb4A\x90n\x8c0\xc7q\xd7\x1d\xcfJ}q\x04\x97\x16\xae\xa6\xefca\xcch[\x0c\xe1x\x1f\xd4\xe0\x01\\6\x91w\xe1\xe9\xac\x13P\x9a2n\x11n$\xb7-\x9d\xaa\xdf\xc2\xfe\xc7\x8av\xdd\x02\xda\xef\xe8\xc9S\xa90s\x9d\x81\xce\xfb|Uk]\xcb{u\xe5\xc4\xe5QG\xa8\xd5\xeb\xc3Z0\xd24w\xbd\x9d\xa3\xbb\x88\x8d\xd2\x04uM\xb2\x9e\x15\x1b\'-\x8cd\xe3\xa6j?S\xd6\xee.\xa4d\x13;#\xed\x06VP]\x10p\x14})h\xad\xe1\xd5!\x8e-<-\xb9\x96DW_3\x10\xbb\x9f\xc2X\xb1\xe3\xe4\xf4\xa8\rQ\x84D\xdb\xc7\x08\xcc^\x99YN\xec7C\x8289\xedO\xdd\x85\x95"\x8e \xcf\x92\xba\x9f\x1d\xc0\xe3lm\xfd\xea\xce6{q\xa4\xb8\x18\x1e\xfb\x90{\xfdj_Q\xf3m\xac.M\x9d\xc9h\xc2\x00\xcd\x8c\x16-\x81\xcf\xcdT\xb4tY\xc6\xa4\xf7\xd7R\x08\xac`.\xa5\x07\xfa\x8ep61\xfe\xe4S\x8dn\xcbU\xb6Y7Y\xcdm\x14\xbbV8\xe49e%A\xf5\xff\x00)\xef\x8a\xe2\xf3T\x85\xf4[\x1d9Q@\xb5RZU^\xac\xc7\xf0\x8f\x81\xfdi\xcb\x0bca<\x90]\xc7\xa2@r\x88s\x821\x81\xcf\x03~MC\xbc\xbcY4\x98\x9c\x1dC\x19\x1b\xe3\xe7jv\x17N\xbc\x82\xd0\xdb$\x91\\d\xf9\xc1\x98\x18\xdc\x13\x95)\xdf\xea\rX\xf4\xc5\xbd\xba\x9eR\xf0\xa4\x85\xd7k;\xb79<g\x9flqQ\xd6\x16\x10\x1bxn\xa3\np\xa5\xd8\xf4\n\x00\xf6\xeci\x0bM}\xb4\xf9\x8d\xdc\x0b\x04\x9e\xa6TI\x0eNH\xc6\xec\x0f\xe9R\x84/\x89\xa4\x11p\xa3Q\x04\x0e;\xfbo\xfb\xd4ma\x1a5i7\' o\x81\x9a\xb7\xc3\xe2k+\x19\xed\xd2x\x84\xfbr\x8c\x83\xb1\xe9\x9f\x93Z\x1e\x87-\xa5\xc3\xc2.\xed\xa1{Cp\x19\x9a@\x1b\nzp}\xab/\xd2\xbc*\xedeo\xacL\t\x89\xe5\'9\x1cc\xa9\xc5Z~\xf76\x0c\x16\xe8\xd2\xa4\x8c\x08\n2\xc7\xf4\xaa\x9b\xbb\x99\xed<\xa0mNuf3\x8c\xe7P\xc8\xcf\xc1\xabk{d\xb8\x12\xa3K\x90\xeb\x87\xc1\xe3\x15\xa0\xe9\x9a\x96\x89\xe1\xbf\x19\xcfp\xd1\x89 t\xdbm\xe4\xff\x003c\xb0\xaf\xa5"\x97\xcf\x8a96\xe3z\x83\x83\xdb5\xf1\xff\x00\x87\xad\xee\xf5\rr\xc28bE\xba\x8aee\x8ep@;y\xe75\xf6<\x11H!\x88H\xa08Q\x90:f\xaezT\xd2M\x04\xac\xd1\x04\x1a\xf2\x00\xf7;\x9a\xc5\xf8\xae\xde\x1b{\xcbeG,\xfeH\x0cI\xec\xbb\r\xbek\x8a\x07\x1d)\xc7\x95\xf1^\x18\xea\xc0\xd6hR\x1b\xc8\xa3x4\xa1JD\xa7\xc5&\x95]dQ\x9aH\xee\x15\xe6\xff\x00z+\xb4\xa1?5\xe6\xea\xe0\x9a\xe0\x93E\x14\xe35\xe1\xa47\xe2\xba\x0e(\xcds\x15\xd1\xae\n\xd7{\xc1\xae\x86\r\x14R\x1biE\x14\xb0Z\xf7ev\xb9\\\xa8\xa5\x00\xa0-u\xb6\xbbEq\x8a)CE\x15\xca\xcd\xd5\xd6\x95\x0e*\x14L\xd4\xaa\xca\xe6\xab\x83T\xd2*[x\xf7\xa3"\x98\xa1sN\x91\t\xa5\x02i4\xa8\xe6\xbb\x08\rz\xb1\x9a\\&)x\xaef\x93X\x87\xb59H\xd4W\x1c\n\xec\x1a4\x8fj5\x1fzr\xbbE+\xbcb\x9ag\x15\xe1zX\xda\x92~\xb4\xe4\xb85\xc1"\x9b\xee&\x80M\x19\xa3\x14\xedM*\x08\xf7\xa6JX\xd2\xeb\xf3J\x14\x93NCW`\x03M\xc1\xa5W5\xd1\\\xa5\x80\xafq\\\x03]\x8c\xd7qEy\xb6\xbd\x0b^\xe4W\xa0\xd1Ez8\xaf\x98\xbe\xd4\xf4\xd3\xa0\xcd\xaa\\\xcbo\xe6[\xea2#G(8\xf2\xdb\xf8\xb2?\xcd};\x8f\x8a\xae\xf8\xa7\xc3\xb6\xfe(\xd1\xee\xb4\xe9\xce\xd1*\xfa_\x1c\xa9\xa8]B\xd7\xf1V\xee\xa3\xf3\x00J\xfdqV\x1d2\xf4\xd8\xdd$\x9c\xa1\xc0q\xee3_\x9fQ\xfd\xcfRi#\x96|\xc7\x17\xaa6\x03-\xb8\x7f\xcdAjO5\xaa\xa4\t\x1e\xf1&\x01LrI<t\xeb_Lx_\xecm\xb4\xddsR\x87_\xd3<\xeb\'\x80\xbd\xbd\xc4R\x95\x01\xf7c\x9cw"\xaf\xb6\x9fd\x9e\x0c\xb0\xbf\x86\xfd`\xb8\x95\xe1}\xf1G,\x9b\x900\xe8H\xc78\xac\x1c\xdd\\\xd8\xddK\x04\x91H^%\x04\x07\xc0\xceFGz\xd1\xdeuk%W\x08\x0b\x16\x19\xca\xee7\xedT\xef\x0c\xebW\x1fg\x9a\x0e\xa2\xd7\x97`\xdc\x1bk(m-V\x12\x04E\xc6\xe7r\x0f\x0c\xca\t\xe4\xd5*\xea\xe9E\x82j\xb6\xb7l\xf7\x0e\xf8\x12\x1961\xda\xd98Q\xc8\x0c\rj\xdfi::_x}\xf7#m\xb6\x7f4\x94]\xd2p\xa4\x0c\x0e\xff\x00J\xf9N[\xe3k4\x16\xce\xd1L\xc4\x9f-\x93\xf1\xa1 eH\xec3S\xbaWY\xea\x1dS\xa6\xc4\xf2@\x0c\xb6\xbe\x97 \x8dZ\x9b\x92\x07\xb7\xb6\xd5\x13\xa7\xcbl\xcb+\x8c\x99% K\x9e08\xa9In$&\xed\xa4\x94\xf9\x97[\xb7\x82N\xe3\xbf\xb8#\xfa\xd2pMj\x0cv\xea\xcd\xb0C\xea\xc8\x00oRr\x06;}i\xb2\xc9\x18\xdd\x0c\xe0\xab\xe7p\xc9\xc3)\x1d\xbe\x95\t>\xa7\x15\xbd\xe1y\xe7\nQ\x82zNx\x039c\xde\xa7\x07\x92E\x7f1s\x92q\x19\x1a\x98\xe7\xb8\xc5XEs\xe5I\xfe\xdc\x0c7\xdb\x8a\xbcO\xa6\xd8J\x8b\x1b\x10\xce\x01a\xb1\xc3+q\x9cW\x16P\xda\x1d\xcb ,N\x02\x8c\x8cu\xc0\xc5T-\x9a\xeeY\x9b\xc9H\xd8;\x03\x00V!py\xeaif\xbc\x8e\xd5#\x04Je\x0cK\xa2\x9d\xb8\xc7uny\xcdG\x8a\xc6R\xef \x90\x18\xd9\xb0\xb9?\x97\xe9\x9cT\xdf\xc5\xa9#\xdb\x1b\xd5\xaa\xe2\xcc\xac\xad\xe4\xdd\xack\xe6\x87m\xa7oN\xc7\xe9O/5\xa84\xfd6\xf8\xc4\xb2\xdb\xcc\xd0,K*\x9d\xf9\x0f\xc4\x84\xe7\x18\x0c:|\xd5\x0e\xd3\xc40j\x177\x11\xc2\xd2G\xb0)-#\x06m\xe7\xaf8\xe4}jV\xf3\xef\x92D\x89,"@S(\xfb2\n\xb1\xc1$\x8fl\xf1\xc5*\x08\xee-n\xca6\x01RFNN\xc7\xd8\xf6\xe6\x9c\xf3\xa3\x96<.\xe0\x90H\xed\xc8\xe7\xe2\x9b\xd8\xeb\xc1\xac\xd3K\x96\x12\x90\xcbp\xb3M0bd!A\x000=p\x0e\x061Wm+\xc4\xbaE\xbe\x87\xab\xe9\xcbk.ev\x16\x97\x01T\xc8\xb1\x12p\x0e\x7f\\VM\xadXj\x1e\x15\xbc\x8e+\x81\x98n\xe1\xf3\x10+#\x96\x8b9\x0c\xa5O+\x9e\x82\xbc\x8b\xc4:k\xc3\x18IB\xc8\xab\xb5A8\x19\xf6=\xea\xfe\xe5\xef hr\xa7PQ\x19\xca\xe7\x0b\xbfn\xdc\xd4Q-\xa9,\xce\xcb\xeamG\r\xc9\xf7\xcdj\xf0\xdf\xdb\xcc\x8f%\xd5\xf5\xcd\xcc\xaa\x08\x8a\x17e\x88\xb2c\xd3\xb9\xc1\xe0t\xe1~\x95\xde\xa6,\xa0\xb7\xbak\x19\x84Wm\x03\x19\x07\x98g\x8e\x06\xc6\t\x1b\xf2\x08\xc1\x1c\xe0\x91\xda\xa8/\xaeEh\x02\xdeik\x13I\x17\r,l$ea\xe9e\xdc@\xe3\xb1\x02\xa3\xef\xfc\\\xf73\x13<\x8c@\x88e\x17\x18\xda\x08\xf4\xe0c\xf3\xf7\xa8\xb1:\xdb\xe4\xc6\xa1\xdd\x9b \x85\xce\x0f\xb9-\xde\x97$\x91M\xf9\xa4\xc2\x01\x8cj\xc7\xf4\xa6\xd6\x1eD\xa6d\x9ay\x1aD\xe0\xca\xa3\x86?${\xd3\xf9e\x921\x1b\xac\xb2K\x1c\x92f@\xd8b\x0e0\x0e~qTk\x0b\xfd\xcbr\xe5\x9cBd\xc4\x85H\x04\xe4\xef\x1c\x0flsW\x85T\xba\xb4\x08\x93\x08\xe4\x8b%Y\x17-"\xbf\\\x92y\xc7\xb6)?\x84\xd2\xf2jb\x99V\xe7l\xd4/\xc4\x86ud\xdf\x81\xb5],\x04\x171I*\xcaN\xe4\xdb\xcb\xeen\x06\x14c=>\x05W\xe7\xbc\x8a;\xaf)K\xa3n%\xd8s\xb4\x13\xdf\x9e*\x1a\x7f\xff\x00*}\x91\xdc\x1b\x98\xd6M\xb1N\x17b\xb9\xeaY\x86I\x18\xe3\x1e\xf5-=\x9b\xde\xd8\xcbv\xb0\x17\x1f\xfdY\xd5\xd7\x05\x8f?\x84s\xd2\xa9\x7f\x00\xd0I&\xb0e\x0er\x089\xc0\x07\xdf\xe9SM\xde\xb4;`\x81\xde\x8b\x1b\x9b\xa2\xe94WL\x1a\x17\xf3|\xc1\xcbG\xb4\xf0\xc0\xff\x00\xcd}\xcb\xe1\r~\x0f\x12\xe8\xfa~\xa2\xcd\x912m\x9fh\x03\xcb\x99?\x1a\xb7\xb6s\x95\xf85\xf9\xfe\xc1m\xe3\x8f\xf7\x93B\t?\x85\xff\x00\x1a\x100\x18\x11Zg\x81\xbe\xd15O\x06Zj)\x04\x96\xdbnU\x14\xdb]\xa9;\x9b\xaa\xb8\x00\x8cpz\x93\xd2\xa1u\x1e\x89o|ci-\x96eA\x96\x1aA8;\xecOz\x81+H\xcaB9G\x07l\xf1\xf7\xaf\xbb\xb4\xeb\x9b{i\x88,B9\x00\x12x\x1fZ\x8e\xd7|A\xa5\xe9\xe5\xae/n\xd2\x18\xf1\x84\xdd\xf8\x9f\x1f\xca\xa3\x96\xfc\xab\xe4K\xef\xb5\x1f\x18_$p\xc3\xaaAhrL\x91ZB\x88T\x0c\x11\x89\t|\xee\xcf\x035U\xba\xf1]\xf2\xcdu%\xe4\xf2^\\9+\x99d\xdc\xeb\x8e\xc5\xbe=\xaa\x81z7W\xff\x00O\x8f\xa7\xbb\xdb\xc1j\x93y\x8a\xa0\x12\xfb\xef\xa4\xe0`\x00Mqb_8\xca\xc4\xea+\x82{}kn\xf1\x17\xdb]\xd4S-\xbe\x8dd\x96\xc1\x99\x94Mv\x9b\xe48\xe8\xdbA\xda\xa3\xdb9\xacC\xc2:\x9f\x885\x9f\xb4\xad>y\xa7\x972\xcd#\xdcH\xe3%\x91T\xb3.H\xe8\xd8\xfc\xbbU;X\xd7&\x9a\xe2\xdd\xa4\x8a9\x1c\x05_\xc5\xb3\x8cd\xe2\xb5\x0f\xb28SU\xf1[\xdc\x88\x9c%\xa5\xb3\x00[\xbb\xcf\x98\xd7\x9e\x9d\t\xab\x1b\xcb8\xfaoD\xbcs\n\x12\xd6\xce\xa1\x8f\xabw\x1aF>\xa6\xa3_\xba\xc7mp\xca\xfb\x05?\xae8\xad\xf2I\xe1\xb5\x1ecH\x8a\x18`\xab\x0c\x9f\xca\xa0?hC;6\xd6,@\xca\x80xe\xea?:\x88\xd5.\x95\xd9\x92I\x15\x0c\x0c@\x04\xe0\x86_\x7f\xadEXN\x1022\x83&\xdd\xa0\xe7h\nI\xe5\xbd\xf3^w\x15\xa35\xb2kv:\x06\x00\xec2sXh\xee\xd9u\x11\xc9\xab|:\xc8vH\x1e2\xaa\xea\x14\xb1\x18\xc1\x1d*Nh$\x1c\xab\x1c\x1cr\x07\x7fj\xcb\xfe\xf7\'\xfe\xa0\xb0\x86k\x9f\xdd\x19\x82\x93\x8d\xa3\xaf\\\n\xdf$M6\xdeha\x96a\x1e\xe8\x95\xd4\xe4\x95\xda\xfd2Fy\xa4\xdct\xd7\x8d\x90\xc4\x00%5\x10x\xdc\xe3\x93G\xe2\x19\x81\x0c\xdc\x9ek\'\xf1\xcf\x87\xeco\xf4V\xd5\xa6\x81\x9a\xe2\xc0+\xbc\xa3\xf1\xc9\x018e\'\x9c\xe39RzV\'kz\xb6\xc5\x12\xde\x18\x8bI\xc4E\xc0b3\xc1\xc8<t\xe7\x9e\x95\xf4\x7f\xdalp\xc5c\xa3\xdaZ^*&\xa2\xee\xb3\xfa\x88C\x1e\xd2w\x13\xdb\x04W\xce\xda\x86\x90\xfau\xe4\xbeu\x84\xc2\xd9S\xcb\x8eX\xa3\x0c\xden\tPA#\x86\xf7\xee:q^\x8d\xd0zE\xfc\x1d5\x0c\x92j\x0b&\xcc\x0eB\xe4d\x00}\xabo\xe1\xab\x9c\xda\x94\x92L\xfa\x8e\x85<\xe9\xab5\x9e\xb9\xa4\xe8\xfaq\tlf\x9ad\x91!y\x08T\xdd\x9c\x07\xe3\'\xaf\xebJYC\xa1\x9d2\xdbP\xbd\xd5&K\xa9.6(\xb7R\xcc\x10\xfavd\x8c\x00:\x91\xf9U.\xde\t"\xd4\xad\xde[I\x95a\x9e0\xc6B\xbb\xa3\xdc2\xbb\x81\xc7\\d\x03\xda\xb4E\x166\xf1[&\xa0\x97\xf1&\x9b\xfb\xdb\x84\x8aH\xccR\xb2\xe3l\x90\x89[\x0c\xd99!Fzg\x8a\xd0X\xf4\xe6\xd4\xceaP\xc0i\x05\xc1\x00\x13\x81\x9c\xed\xc7;\xd6\xc1\xe4\xfe\x16\xa4c\x8c\xe7\nFH\x1d\x86}\xea~\xcav\xd7,f\xf2u\xa8$\xb6\x92B\x1bM2\xc5\r\xcb\x98\xdcm\x91KmT-\x8c\xf22\x17\x8aOV\xb0\xd3\xecu\xad>\xda\xe2K\xc3m\r\x82\x06e\x9dX\xccz\x84Rp\xa3\x93\x8e3\x8a\xcb\x86\xb7\xa7L\xd70\x9bC;\xbb\xaa[\xce\xdba_Q\xf5L\xe8\xb8\xcb\xf3\x9e\xb5n]~\xfb\xc4\xb1\xc5\xa0[\xdb\xe9\xf1\xdbB\x00\x8e\xf1fX\xe3n\x02\x99\x1b>\x95\xf68\xe9\xd0f\xac\xda\xde+\x8bk\x8dE|\xc8\xd9\x15\x06K\x19\x1bs\xa7\xbe\x01\xf88\xa6CK\x0c\xb1\x923\x1b\x87.v]\x03\x03\xd5\xf2~\xd9\xab\x8f\x89g\xd3\xd8iP@o-\x06\x9da,M\x0c\xed\xbev\x90H\xc4\xc6vq\x8c\xf0\x0fz\xb0\x8du|-\xe1\x94ab-\xcc\xccE\x92\xbe\xdf5\x831,\xd2\xaa\xf1\xb9G$\xfd\x05T5-\x16-2\r.\xee\xeb]mE.nJ]\xcdgl\xce\x02\xc6\x83\x01\x1b\x001\x18\xc7A\xda\xb3\x1f\x14y\x91^\xcbmk\xa9\xf9\x96\x919{wc\xb7\x02E\x05\x90\xaeN\x0ez\xe3\xbd2\xcdu\xd3\'\xbc\xb8e\x11\xc9"\x05C\xa9v\xca\x80\xa4\xa8\xce\xd8\x1d\xbb\xd41\x1d\x9d\xec\x10F\x18\xbcH\xec\xef\x95m\xc8c\x91\x93\x8e\xe7\xbfj\x90\xb4\xd5$\xd6\xb5)\xe5\x92FS+\xb4\x8dp\xde\xa6`\x06T\x0e\xec{\x05\x18\xc9\xefW\xef\x06Aqs\x0e\xad\x03[\xd9H\xf1\xd9Ip\xf6\xf3\xdb\xf9\xdekD\x7f\x80g+\xd7\x9ek%\xf0\xac\xbas[\\-\xf4\xf3 \xf2\xc9\x8a\xe21\x93\x19V\xc8*\xb9\x1b\xb3\xf8O#\x15+.\xbf\xab\xb4R\xdc%\xdc\xb1\xbaX\x9bF\x90\x15VxX\xed\xc3m\xc6\x17\x9cT(4\xa5\xd4SN\xba\x8a\x96\'I\xf5\x10F\xfa\xbb\xfc\xfc\xd5\xec\xb6\xcd-\x9b,,\x13\xd24\x92= \xf6\xc5Ij\x13X\xeaw\xcd-\x9d\xab[F\xd3g\xee\xc5\x02E\x12\x15\x07\xd2A\xc9\xe7=\xab\x89\xec\x96\xd4\t\xff\x00\x12\xb8`6\xbeTt\xce\xe09\x02\xa1\xbe\xf2`\xdc\xcaw\x0f-0\xc7\x83\x9e\x94[\xea\x17\x11\\\t!}\xa7\x93\x94>\xe3\x1f\xd8\xf3U\xb7\x16\xec\xd7O3\xa0E d\'\xbf\xbe?\xb5J\x8e@\xb1\x88\xd5\x8bi\xe3V\xfc|\xd3\x97\x82\xd5H\x98D\xdd\xc0\'\xe3\x83\x8a\x9c\xd2.\xde7\x11I\x02M\n\xc8\x92\x98e-\xb4\x95\xec@\xc7\xe2\x1c\x13\xd7\x14\xce\xd2\xd4=\xbb\x8d\x80(\x18\x03<s\xda\xae\x1a^\x91\xa5_]^\xdc\xea:\xb4z\\\x11\xc2\n\xc6\x1f$\xb7M\xa3\xcc\xc9*\xa0s\xde\x9aH\x19\xe6A\x18]g`\t\n1\x8d\xf3\x9d\xb1]\x92uDma\x8a\x0et\x82O;`\r\xf3V\xab\x18\xee<_\xaeZ\xd9\xa1\x9d\xe3\x11\xc2K7\xee\xd68\x89\xcb4)\xc0\t\xd9@\xec*\xd9wom\xa1\xf8\x82+\xcd7L{\xbb\x1b\xbcAwn\xe1\xb1\xbd\x18\x90A\x938e \x11\x9f\xa7z\xc1\x92\xf5\xf4\xdb\xa9~\xeb\xaa\xbc\xd6\xf0\xb3y3\x8d\xc8:~%\x04\xf1\x9e\xdf\x15#w\xe3;\xd2\xd0<\xe8\x9er\xcd\x13}\xe1\xc1\xdf\x98\xbf\x0e\xe2\xa7\x91\xf5\xc9\xf9\xa9\xb6\xddR8\xcc\xa2h_\xf1\x1ez\xb8\xb8\x041\x18\x07\xd2\x0e\x0e\xdc\x8d\xf9\x06\xa1]t\xb6\x94\xc7\xa2U\x16\xe2\x02\x9eF\xeb\xbb\x7f1\xe3~\xe3\x8cS\x8f\x17N\xda\x9e\xa34\xcf\x1c\x10\x9d\xb2\xec\xf2|\xac\x1fW\xe1$\x11\x9e\xbf\x95f\x1fz\xf2d\xf2\xa4R$\xce\x0f\x00\x0f\xfb\xd6\x91\xa4^\xa5\xe1\xbf\xbb\x96\x0bm\xd7,\xf2+\x00\xab\xe5\xf2X\x84\x12\x06\xc09\xe3\xbdSu\x8d6\xe8\x06i\xaceE\xde[\xcch\xb1\xe9=H+\x80>\x94?\xfe\xac\xb5\xd9\xc9vv$\xe0\xff\x00.\xd94\xf4r\x88\x02@\xaa\x02\xa2\x80\x06j\xbd\xa8<q\x95\xe1p\xc3\xf2\xcf\xfc\xd7Zp\x9aR\xd2\xefT\x85\x06\x0e\xe7\x19\'\xb6\xd1\xd4\xe6\xba0\xe9\xec\x17\x99\x9c\xc7\x82\xd2 \xe1\xb7\x1c\x0c\xe4\x8d\xb8\xf9\xa9Xn\xe5W]\xd0\x80aR\x1c\x14Pv\xbf\xb6\xec\xf5\xf7\xa0\x05X\xdaF,@\xc1\xc0\x19\xe6\xa5\x895eA\x035n\xf0\xf5\xc1\xb6\x96\xce\xe2\xcb\x06\xe6+\x95TG\xc3!,q\xea\x07\x82\x0epsW\xef\x19\xe9\r\xe1\xd7\xb3\x8e[(#\x92xW\xefo\x03f\x17\x90\xbb8@\x87\xf0\x80\x00\x1c\x0cV{\xe1\xa5\x91\xcd\xf3\xb4\x0c\x96\xca\xad\xb4.\tW\xe8\x81\xb3\xce\x0f \xd4\x96\xa9\xac\xea7w0\xddM9\xdc\x18"K\'9\xda\xa1\x7fL\n\x82\x08kk\xc8\xe5\x8eOYV\x85\x93\xf2\xed\xf9\x8e\xe3c\xb0\x15\x1c\x86K\x9bwGM(\x18H\x08:\x98\x9f\xca2;\r\xcdhv\xde\x0b\xf3tkk\xc7\xbb\xb6\x8e7@\xeb\x1b\x96\xc2\xee\xe0\xe1GC\xf1P\x7f\xb0%\xd1\xa7\x8e\xe1\xa3A\x1f\x9e\x00\x8eA\xf8\xf9\xe0\x15\x07#4\xf2\xe2\xea[}"\xce\x195t\x9a \xfen\xc8@\xca\xb1\x1cg\x81\x91\xc54\xb3\xd4\xf5\r~\xf2\xc2\xc4\xb2\x03!D\x0cQQ\x9b\x00\x9c\xfa@\xf6\xeai2E\x04\x01\x1a\xde\xd6E\xb8x\xd4\x0c9r\xcew\xeep\x05\x114\xf3y\xbem\xc2\x18\x839#N\x9d(=\xb6\xdc\xd3+\x84\xfb\xad\xa4\xba\x84\x97\x96\xaa\xbek7\x93(\r\xb86w\xe0\x0c\x15S\x8c\x029\xcfJ\xa7\xdc\xea\xb1Au\x8d%\xe3\x9a\x05\xdeAd\xc3\x1f7\x99#\'9+\x9e\x99\xe9\xf5\xad3\xc5\xbe\x00[[\x19Z\xe3V\xb7\x88\xc2\xa2@\x92\x17\x11H\\\x11\xb7#\x9c\x83\xc8\xac\xd6\xcf\xc2\xb7\xb1\xc3b\x90\xc7\xb4\xb9\xf4\xdc\xc8<\xb4\x93\'\x97\xf5c\xd23\xd7\x15,\x9e\xa9\x1d\x9c\x10\xf9Z%]\x8a!\xd6\xf9\'}X\xe0\x13\xfd)1Ke;\xb4\x89&\xb8\xff\x00\xde\xc3J\xf1\x91\x8c\xf3\x81KiZ\xa5\xe6\xaf\xe2\x1b\xeb\xc4\xd5-m.\xe2\x89\xe6E\x95\xfc\xa0\xa5}$F\xc7#\xd08\x08\xddEW\xaen\xac\xfe\xf4\xf3&\x9f\x16Q\xc9\xc4@\xf9D\x8e\xb8\xcez\xf54\xce\xf7K\xf1\x16\x81\x7f\xa8ZMed\xf1\xddN6\xde4a\x8a\x8e\xa3\xcbpz2\xf3\x8a\xb8h~\x1b[\x91\x14\xce\x8c\xa1b\n\xde\xca{\x93\xf2j\\\xf1\xcc\xa2\x0bx\xb7\x99\xc1\x96`\xd9\xc8s\xb1\xce\xc3\xb8\xae!H\xc4\x92\xb0\x02<\x05\x8c\x8c`\xa8\xe3\x184\xde\xee\xe1\xeeeF\x81\x08-\x809\xc0\xfaqW?\x0fxx];\xcbuuo\x0c\x88\x99\x91\xe7p\x91\xa4c\x9c\x9c\xf2s\xec95\x1c\xbf\xb1t\xedB\xcb\xce\x8c\x1ba(\xf3\xd9[l\x8a\x9c\xee*y\x19\xa8\x8dSS\xd2\x17T\x9a\xe6\xc2\x03\x05\xbc\xa6"\x07\x9c\xd3\xcf\xb4\xe0\xb33>U\\\xe3\x9e\xb8\xa9\x96\xd6\xc2\x1f\xfdU\xdd\xcce\x91\xb0a\r\xa7;s\xc7\xf5\xa8\x17\r%\xc1\xf2!\x8aEVMBl\x02\x06\xfcs\xcdIx\x92\xc3\xee3]@\x976\xb3\xda\xca\x81\xd2hI`\x11\xba\x0epA\xf8=+<\xd3\xfe\xff\x00\xa9j6\xca\xd72I\xa7\xd9\xc0S{\xa0P\xe4p\x00\xdb\xd7\x1e\xe7\x9a\x9b\x83W\x97R{\xcbyc\xde\xf7\x13<\x938\\)\xde\xdc\xed\x1cp{U\x8fH6\xf6\x16\xec\x16\xc9\xc0F(\xac\xd8*\xa3\xa6O\xcdC\xba\x9cMt\xe6<\x84l\x83\xcb\r \xf1\x81\xcf\xf6\xa4\xa4-\x14(\xb9\xd4\xcb\x8c\xb0\xc0\xc9\xaf`\xd2\xe1\xbf\xb4\x92qz\xb1[A\xc1\x0f\xc0\xfa\x03Rm\xa7\xdaA\x02\xfd\xddc\xdb(\xc8\'\x91\x93K\\\xea){\xa6\xac/m\t\xf2\xc1\xf2\xce=#=r@\xe4\xfbT\x02k6\xf6\xb6\xd2\xac\xb7Q\x16U\xe5G\xf1\x03\xedQ\x12\x15$\xcb\x1c$\xb3\x8d\xc7\x96C\x0c|S\xe8pp\xe4.\x93\xfe\xec\x83U\xc9\xf4\xa7\xd2\xe7]\xd2\xcd2\x99\tC\xb8zI9\xe9\x81\x91V\x8b]wC\xd3\x84v\xf2\xdd\x99\'\x98\x95\x88\x1eQ\x18\x9crG\xf5\xaa.\xb3}&\xb3~\xcd"\xcab\xf2\xb3\x12p\xaa\xc7\xf9\x8e1\xf9Uj\xdbH\xb0\xb4\x9d\xe4Ef\x99\xe5\xde\x101a\x16z\x8f\x9f\xad8#\xe9\xf0\'\x9d\x89\x8b\xba\x9d\x00\r\xb2}\xf2v\xf7\xa5\xfe)\xcb\xa4d\x02\xb9\xdc\xea\xe2\xb6{\xe6\x8a\xe9\xd9@]\x91\xbf\xa8\x82H\xce1\xc7\xbdAL\x96\xfb\xf3$\xaacNNG8\xe9\xc05\x05\x0e\xb4\xf0\xc6\xbbF\xf5S\x83\xb8\xe3\xd5\xf1\xf1S+\xa96\xa3j\xaaQ\x1fb\xe2=\xe3\x94\xe7\x901\x8c\xfeu\x15\xe0Y\x962\xe1\x9d\xfc\xbd\x8b\x0c\x80~\xd569_\xb6\x00\xce\xf8\xa7\xa9yy\xf7ky\xa1\x92\xe1nd\x94\xb6\xe0\x14/\x94\xa3\x01\xb29\x07?\x95U\xeeu\xeb\x08\xb5xm\xae!\xbaY\xc8csq3\x8f\xbb\x94\\\x14U\x1dr;\xd3\xd4\xd4\xfe\xe0\xd7\x11\x04\xc3\x9d\xa01\x1bW8\'\xaf|\x01PZ\x8a\xc0\xb7)\xa8jA\x1f;eH\xa3\xc1i\x17\x19\x07=\x94\x9e\xa6\x9f_\xc2\xdb\x15Y\xd2YY\xa3\xd2#\x07\x1e\xad\x8eF?\x9bo\xd0\xd3S\xddG\n\xe7\xce\n\xda\xf21\xbeq\xdb\xe9\xbdZ5f\x81\xad\x92\xea;\xb8V\x10\xaaSh\xf5\x1d\xe0\x8c\x9c\xf4\xfc\xea\xabi\xa9\xd9_\x83o<\x19\x82\xdf\x1cnT.z\x93\xb9\xb3\x96\xa8\xf1\xab\rF\xf3u\xe5\x8csF\x8aUb\x900\x8dK\x0c\x12NA,;S\x1d\x7f\xf6e\x89\xd3\xe2\xd3\xa0b\xf2\xda\x16\xbb\xf5\r\x81\x8b\x9c\x05\xcf`\x07\x07\xde\xa7\xa4r<\r\xa1\x91$E\x05\xa2b\t\x03P\xfa~\x95Qs\xd5\x82\x90\xfa\x80\\\xe3\'\xff\x006\xa9;i\xc4"E\x95w\xc8\xcf\xbb\xcb\x07\x03h\xed\xbb\xe9\xd4\xf4\xa8\xddI\x8e\xa0\xd1\\\xcfim\x17\x94\x17hA\x82P\x91\x80@\xfcD\x8e\xe7\x9agf\xd2\xcb*\x03\x12\xc7\x1e\xc073nQ\x93\xce0{\x9e\xb9\xa8\x9dc^\x86\xdc=\xb1\x94y\x8c\x19\xa4#\xb0l\x00\x9cg\x9e?J\x93o\xe6\xba0UL\xb7\xe7`F\xfcl\x00\xcdB\xbc\xbd\x8eX\x81VV\x1b`\x13\xdc\xd4N\xb3\xa9X\xdbK\x13G\xfb\xd9K\xb1p2\x00\x1d\x00\xf9\xa6O\xe2\x0e\x14\xb2\x15\\\x1c\x85\xc2\xf4\xed\x80id\xb6\xd2\x8c\xadsuq\xf7\x86H\x00\x8e\x06S\x89\x1f\x1c\x83\xb4\x82\x07\xcdAM\x05\xc5\xfd\xca\xec\xb6<\xb6\xd0\xb1\xae\x13\xf2\xf8\xf9\xaby-m\x94C\xabIe_|c\x03\xdb\xb5RD\xb7r\xbb\x1dZT\xb6\xd8\x19\xc8\xad\x02\xd2\xfa\xcd\xb4{k\xb94\xf9.\'\x17\xb0\xc5;glq\xc6\xeaJ\x80FH\xf98\xab\r\x9e\x8au\xd6[\xab\xe9<\x9bM\xe20\xf89\xe9\x80\x01\xef\xd2\xa9\xb6\xdad\x96\xcb\x1b<N\x82&\xf2\xaeHc\x86*\x07a\x91\xc7L\x8a\xd4\xf5?\x1fZh\xfaq\xb4\xd0\x8b,%Dk\x1d\xc0I6&?\x08\x00{\x92sR\xa6\x16\xa7\xcaI\x1d#\x11\x04 *\xeai\x08;\x0eF\xc3\xbdX\xc6\xcfj\xacB\x02\xa4\xe0\x82t\x81\xef\xef\x92j\xb3\xfbN\xdfJi#\x8e2\x92gh\xdc\xd9\x05\x00\xc08\xc0\xe7=\xea\xb9\x17\x89.\xacu\x08g\x8f\xd4\xc92\xb2\xb1\xc9\xcb\x83\xc3`w\x1d\xaa\xdd\x1d\x96\x95\xe2\xf9,m\xe2I\xed\xd6\xddK^^\xb4l\xc7h\x19\xc1\nO\xd0b\xb8\xd0?d\xe9\xe7S\xd4\xa3\xf0\xfb\xdd\xc5d|\xb6\x95\xdb\x90X\x90\xbe\x83\xfcM\xfd)\x10[\x94&h\xeeF\xef\xb3wR\xa3\'a\x93\xb6y\xae\xcb,\xd3\x12\xa7\x01N\xdb\xf1\x83\xb6=\xa9\x1b\xad#\xc5>$\x8e\xefRK\x94a\x0e%\xb8F\x7f\xde\x94\xeaX\x03\xce=\xea9,E\x95\xf4F\xee\xd2D\xb7\xb8\x8f\xcc\xb7Tl\x86=\x9b\xd5\xdb5v\x89\xe6\xb9\xb5}N\xda\xdcX\\\x88\xda\xd6(\xd4\xe4\x19e\xf5z\x8b\x1e\xbbN1\x8a\xa7^\xddMkcsy\xa9\'\x992\xc6\xf0E\x92G\x96W\x8e\xdcT\xf6\xb7An\x9es\xa7\x9f*3k\xc6\xad\xc1\xc0\'8=\xf8\xa8+wn\x8f\'\x94\xda\xbc\xb6\x00\x0c\xe0m\xc8\xab\x04\xda\xbe\x85mgk\xa7\xcds\xf7s4d\xcaQ\xbdr\x00{\xfb{\n\x86\xd3N\x8fg{$\x9fw\x13@\xea\xfb\x16C\x92\xbe\xd5\x8c]\xce\x12\xea\x19\\\x16\xcf;\xb3\x9f\xca\xb4\xad\x1bQ\xd2\xa5\x86\'\x91\x9dT\xc6U\x88\x1f\xc4j2$\xf0\xc3\x0c\x05\xd1\x82\xb1,\xec\xbc\xe4\x7fJ@\xbd[\x99\xa4\x91\x94#`\x05\x00\xd5\xd3F\x9e[KI\xe6k\xd2\xb0\x06! \xdeI9\xf8\xabo\x87<[u\xa1_\x99\xa1\x8d$\xde\x08\x1b\x86v\x83Y$:\xd6\x9ba\xa9\xa4\x1e\x99\x07]\xa7\x9eO\xbdj\xd6\xba.\xaf\xae\xa5\xb1\xd2\xf4\xc7\x93\xcc\xc2\xbc\x88\x84F\xa4\xf6$\xfbUm\xccw\x10E\xae-e\xd0\x0f,`\xb6\xe3\xda\xad\xed\xef\xadc\x89\xcc\x8e\x848\xc3j#\x8f\x9a\x9f>!\xbc}R=DN\xabr\xb2\x03\x1b\x00:\xd7\xd9\x1e\x19\x92\xfe\xe3G\xb1\x9a\xfeE{\x89#\x0c\xec\xa3\x03$W\xcf\xde\x10\xfb\x18\xb9Y \xb8\xd6nAP\xc1\xbc\x94\xe9\x9fbk\xe9\x8bX#\xb6\x86(c\\"(U\x1f\x02\x9d\xe8v\xddF$\x9e[\xd9\x1b2\x9c\x84;c\xe7\x15\x9d\xf1\x1fT\xb0\xbf6\x91\xda\xa8c\x08!\xa4\xc63\xec\x07\xc5<U\xafJ\x03B\x9a\xeb5tk6\r \xd1R-\x15=\xaf1\x9a\xe5w5\x1a\xd0\x9aE\xa1\xf8\xa9r\x80\xd2f:\xe6+\xb9\xa8\x93\x11\xae\x18c\xadJ\x94\x1e\xd4\xdaD\xe0\xd1\x8a3QO\xc7CH\xef>\xf4\xe6X\xba\x91M\xf6\x10y\x14\x93J\x06\x95G&\x9d\xa1\xcd5E\x1d\xa9\xca\xe4v\xa0W\r8\x15\xd7JL1\xaf\x0b\xfc\xd2\xab\x94\xb6\xea\xf7u52|\xd1\xe6\x0fz3E8-E \\Q\\\xcd\x15\x96\x88\x89=)\xdcp\x1e2*Im\xc7\xb5.\xb0\x01\xda\xa1\x04\xa9:\xa9\x9aC\x8e\xd4\xe9P\n_\xcb\x02\xbc#\x14\xe0\x18\xaef\xb9\xe0W\x9b\xab\x96\xa0\x0c\xd1Ev\rv+\xc0\xb8\x14\xb2\xa6k\xa2\xb9\\rk\xd1\x194\xba\xa8\x15\xd5+\x14\x9c\xd2b1]\x84\x1e\xd4\xa2\x8c\xf5\xa5@\xf8\xae\xe2\x8c\xd2;>+\xa0\x94\xb0\\\xd2\xca\x83\x15\xd0+\x99\xa6\xe1>)P\xb4\xae\xda\xf4\nUs5\xc0\x18\xaf1J\xe2\x8d\xb4QI\xe2\x94\x0b]\x05\xe6\x97T\xa3\x14f\x93\t\x9a\xe1\x8a\xab\x14$\x03\xb7"\x94\xb8\xb9\x82\xd2=\xf2\xb8PN\x07\xc9\xf6\xaa\xd5\xf6\xa4\xa6x\xa6Q\xe8\x03\x18\x1e\xde\xf5\x9a\xf1\x07\x88\xec\xba**4\xa8\xd3\x92\xb9\x8b;\x84;j>\xd4\xa4F~\xdb{\xd7\xb2n\x96G\xdf\xd7\x1c\x9f|S;\x80\xd1FH\\\xaf\xd7\xa5;y\xe3\x11\xeeR\x180\xc8#\xe6\x9aO,RE\xe5\x9c\x0c\x0c\x1cW\x9bG\x17\xe2\x9a\xe6Y\'/#)!\xcbd\x92x\x194\x89\xe5\n\x00\x15U\xbd\xbfF\x8eH\xdc\x02\x0f\x04u\xaf\x88<[\xa6\x1d/\xc4Z\xc1\xb6\x8c(\x82F\x93\x07\xb8nr?Z\xfbj\xee\xd60\x1cs\xd7\x8a\xc2<y\xe0k\xddB\xe6MCO\x91D\xcd\x1e\xd9!\xed&8\xeb\xd8\xe2\xb9\xd1g\x9f\xa6_\xb1\xbaq\xe4\xc8\x9aw\xce\x01\xcf\xf3c\xfa\xd2m/V\x19\x18\x87\xd3\xa8c5\xf3\xad\xb6\xa6\xb3\xdd\xc6\x92\xb6&q\xf8\x86x\x1d*sW\xb7\xb0\x8e8\xa5\xf3\x16I0r\n\xfe\x1c\x0erG\\\xf6\xaaf\xa5\r\xd6\x8b\xa8L1*JX\x86\x8eA\xf8\x0f~\xbdA\xae\xedu{[\xc34@8\x99Wr/bGPs\xda\xbd(@\x0b\xc3s\nk\x8c\xa8;o\xcf\xf6\xab\xb8\xafw,\xc7Qa\xb1\xa9\xabMA\xc5\x9e\xe8\xe3e@\xc4c\x9cq\xdb4\xca\xff\x00W\x02Hc\x9eY$]\xbc`\x81\xc0\xed\x9fa\xda\xabp\xdf\xeav\xcf\'\xee\xc8\x8c\x96\x04H0\xa3>\xc2\xa3\x1eYKDf\x7f1W\xf8G8\x04\xd5\x8a\xdbn}GI\xdc\x0c\xf7\xa9\x0b{\xa5\x07\xfb\x8e\xc6\xad6r\xda\xcf=\xc0\xb1\x85\x95\x9c\xb1\n\x99$\x05\xe7\xd4OZ\xd2\xee\xbcJ\xb7\x16\x9arD\xae\xd0Z[[\xf9\xf0\xccNdh\x97\xd4N\xdd\xa4\xa1n\x9e\xc2\xb2\x8d\x1fU\xb5\xb5\xde\r\xb8;I\xc1\x1c\x91\x91\xd4\x8a\x92\x1a\xa4w!vB\xc0\x06"@H\xdaGl\xe0t\xa8\xf3\t\xd6G\xd1\x1b\xa8\xd4\xa4\xb6\xc4\x1cv\xfaT\xab{\x84@\x1dd]X \x0f\xafz{\xe2\x9dr\xfb\xc4\x93\\]\x08\xc4{B\x91\x14G\xd1\x1a\xa1\xc2\xaa\x03\xf8B\x8e\x00\x15d\xf0ri\xde\x18:m\xf5\xcd\xbc2_\xee.\xd8\x1b\xddw\x1c\xf2q\xc1\xf8\x1d\xea\x16;\xc4w\x8a\xce8aUB6\xb9L\xec\xc7\xa8\xed\xe8\x06I\xeasOo\xef\xdeh\xed\xac4\xa9\xa7\x98\x92|\xe9\xb6\x05\x05\x8fe?\x1d+\xb3\xcd=\xda\xaf\xa9\x81c\x997\xd2\xd8=\x85H\x8d\xe1\\; :F\x10c**{\xed/\xed\n\xdf\xc5V\xd1\xda\xacF\x14\xb6\x94\xc9+\xcc\x03;8;T.\x07\x18\xeak%\x01.R\xe9!e\x133\xe4`c\x8c\x0cs\xedRw\x16\x96\xb6\xd6\x97\xd0_\xb6d\x94\x81\x1b\xab\x05+ \xec\xf9\xcf\x18\x15\x164\xcb\xa5\xb4O!\x11\x92\xe3\xd2\xaf\xbb g\x90\xa5\xb8\xed\xce*tQ\xa4q\xa0E8\x07\x93\xf5\xe6\xab\xe5w\x96IN\x06\x0e0\x07#n)\x84w\x16\xf1\xde.\xe5V?\x87*1\x828,\x07C\xf1Z&\x89qj\x88\xc8\xb0\x96m\xc1\x86}<\x13\xd4g\xa6+1\x96\xdekb.\x1cE\x0bFN\x10\x8c\x92A\xe0c\x9f\xd4\xd4\x95\x9e\xb9p\xea\xabq\xe5\xf0\xa5\x8b\x14\xc9l\xf4\x1f\x97Z]\xc4:\xd1I\x8c7|\xea\xc1\x1fJf\xdeq\x1c\xa5X\x91\x8d\xc1\xc6\xd8\xadQ&\xfb\xcc\x8b-\xf8\xb9\x96\x13;M0\x07\x92@\xda3\x93\xdf\x8c\xd2\xb3\xb5\xad\x85\xc4\xf7I\xa6\xca`\x87\x01\xa3g0\xbcN\xe3\nT\xf2B\x93\xc8\x1f\x95Qa\xf1\x05\xc4\xd2\xf9s\\\xbc\xcc\xf2\x07f\x0f\x96,z\x1c\x9es\xf1Zh\xd2\xacn-\xe2\xf3\xafe\xfb\xd1S"e7*\xbb\x8c \xc1#,\xa7\xaez{Uf\x8f\xe2\x84q\xe9-\xa8\xc8\xf8\xcf\xdb>\xfe\xd5t\xb2$\x89\xa9\x7f61\x81\xc5Vu\r>\xe6\xce\xde\xdd\xe4\xb7t\x8e`\xca\xc6H\xf6\x80\x0e\t\xc1\x07\x96\x19\xe2\xa6Vin#\xd3\xa6\xb8\x81om\xc2\x86]\xd8B\xca\\\xf2J\xf2\xc7+\x8ez\x01HkP\xebW:d\x16\xb7\xaf\x0c\x89\x04f-\xc9\xfb\xb2\x8c\xb8m\xc7\x1f\xc5\xc7Z\x85\xf0\xd7\x84\xfcK}\xa9Gag\xe7\xdcJWj\xc0\x83qR9\xf5\x90p\xab\xceI<S3\x98V)tJ\xf1\xaa\x91\xb3l\x18\xfc\x9aD\xae\xd1\xe9gQ\x80\xa4\x97$m\xfa\xd4\xd4z]\xce\xa7\xaaZ\xd9ZD\xd1\\\xde\xcc\x88!\\\xe0\x969,q\x91\xb4u5\xb8\xd8}\x88\xc0 \x03T\xf10\xf3\x0f+\xf7HF\xd0~K\x90O\xe9Z\x1f\x83|\x07i\xe1\x1d>\x06\xb8T\xb8\xd5d\x8c\x8b\x8b\x91\x96\xc6\xe3\x9f.,\xf4Q\xdc\xf55=wo*\x02\xcb\xf8G8\xcdyg\x88<Iw\x05\xc7\x93l\xe1B\xfeg8,N~G\x15\x98\xbd\xebr\xcb&-\x8e\x94]\x8bc\xf3|\xd6\x05\xae\xfd\x87k\x06\xde\xe2M.\xfe\xdbS(7$X0\xce1\xecNU\x8f\xe7W\x7f\xb3O\x0c\xdcxgF\x96\xe2\xfd\x15.faqr\x08\xd8bX\xc7\x08\xdf#\xbf\xc9\xabj_Km+H=;rx$Uw\xc4\x9e"\x9a\xf6\xcakc\n\xc6e#\xcee\'.\xa0t\xfc\xfb\xd5D\x9dg\xaa\xf5Xb\xb2\x98\xa1\x8bXgp\x06p7\xc7\xd2\xaa\xee\xba\xac\xb2Bc\x95\xc19\xd8\x81\x82~\xb8\xaa\\\xfa\x82\xdd\xea\xb7\x8ev\x85\x9aw\x93w\x03;\x8eA\xcf\xb75`\x81 \xbc\xba1\xa8*DC\xbf\x19\x04\xff\x00l\xf3T[kQ\xe6@r\xca\x19\x07\x19\xe3\x81\xefV\xdd:V\xfb\xe81\xc2\x15\x04c\x82>y\xc1\xa9\x97q\xaa!\xd0\xc7">~EQ,\x80\xb75\x1d\xaeX\xcb\x1d\xca2\xe4\xb9n\x0f\\|\xfeU\xae\xf8gJ\xb9\x9a\xdc5\xed\xf8k\x8c\x82\x84/<\xf4\xe7\xe9T[\xa9U\xefaw\x1cy\xa8\x0f\xc0\xc8&\xb4\x88.cT\x0f\x11`1\x93\x9e\xb5O\xd4n\xc0\xb5\x85\x1e\x1f1\xb7\xc1;m\xf5\x15 a\xca\x82v\x1b\xd6\x7f\xf6\xab\xe1\xeb\xb7\xb5\xd2\xe7\xb5ig\xb6\x86\xe3u\xc4Y\nT~"\xde\xdbx\xfc\xb3X\xd6\xb7ye%\x81k\x0b\x9b\x8bdEV\x16\xb7\x0c\xe2]\xac3\xe9 \xed\xdaG"\xb5\xff\x00\xb6mz\xd2\xdb\xc1B\xdem\x8fs}u\x18\xb7\x8c\xf5\xc4L\x19\x9f\xe8:~u\xf2\xad\xfd\xd5\xdd\xe4\x11\xa9*\xac\xa8\xc9\x1a\xb1\xecO\x1f8\x1d\xab\xd1|\x19wyq\xd1\x7f\xf5\x11\xacj\xd2h\x8b\x00\x8fJm\x90s\x9e\xe7\xe2\xb6\xdd\x05\xd6;W\xdc\xe01\n;{\xefH\t\xcc\x92\xe6Y\x19@9\xdaX\x90H\xe0\x92=\xea\xe7\xa1kzO\xde@\xb9\x02\xf0DI[R\tV$\x1e\xa7\x8c\x00pH\xefYm\xc4/\x02\xc7\x0b)2\xb3H\x14\x07\x1c\x04\xef\xcf\xb8<{\xd7\xadn\xeaa\x92\x1f:6C\x968\x03$\xf3\xce\x0f5\xb2kB\x85\x1d\xdd\x862\x10\x11\xe9\xcf9\xab\xe8:\xbb@\xfe^\x8c\xaf\xf3\xef\xef[7\x8a5\xcd\x0e\xf7M\xd2\xd6\xdbM[{\xf8\xe11\xcf&#D\x9d\xb7\x12\x1bh\x1cu\xc3{\xf1V[\x1dO\xc3Z6\x9fg%\xb6\x9b\xf7\xb9-\xaf#\x96\xeak\x97\t.P\r\x9b\x02\xfe\x18\xf3\x91\x81\xd7\xbdcZ_\x89uk\x16\r\x0e\x03\xc3*\xca\xa0\x85e\xde\xa3\xab#\x82\x0e3\xd0\x8ab\xb3M\xab^9lG\xbd\x8b\r\x80\xa2\x92Nz|R\xcf\x9aA\x90\xa2\x17\xd0\x03\x1f,\x1d\x87\x0c9\x19\xdb}\xa9\xf6\xbf\x81\x93\x08$\xd1\xa8\x95P\xcd\xdf9\x07\xe3\xda\xb4\xfdw\xed3Z\xb8\xb7:|RE;\xdc],\x92\x16\xc9x\xc2\xae\xc0\xaaA\x03\x18\xf7\x15L\x9d\xee\x08\x91\xae7<\x8e\xb8fV\xe9\xf0>\x05!oaog\xf7\x91\xb0y\xa5@VnWvs\x96\x1d\xf8\xfe\xb4\xe6\xee\xea7\x9b\xee\xd10\x90\xa1C\xe6\x01\x80I@\xc4`\xe7\x18\'\x1f\x954#K\xe5Y\xa4\x97[*\x84\xd4\xc7\xd4rs\xb9\xa6\x9as\xa3\n\x824c\x9d\x0b\xc08\x02\xa3\xb4[\xc9\xa1\x92H\xe4\x91\xa2\x96\xdd\xc9\x1c\xed\xe4\x9c\xe4|U\x8a\xebY\x95\xec\x85\xb3\x85\x08\xb9`\xd8PF\xeeI\xcfRN;\xd5CR\xb4\x9a}B\x12\xb2\x114\xb1\xa9\xc8\x00\x8cc\'4\xa5\xce\x97+y&k\xde\x17\x82\xa2=\xa3\'\xa9\xe7\xfa\xd4I \x8d\xd9]\xa4\t\xab\x90\x01\x1b\x8ex\xe7z\x9fk\xd5\'H4yd\x85\xd86\xd5t\x87R\x88\xc3\x1an!\x8a`\xa9\x03\x81\xdb\x93\xde\xa4\xed\xedd\x12F\xe2\xe24\x88\x1c\xbex$c\x8c\x1cVS\x16\xa6\xf6W\x8f\x1b\'\x99\xb4\xe3<\x01\x8f\xeb\xcd]\xec<[\x0c\xb04RH\x01\xc6\x10\xb0\xc1\xc8=\rG\x9e\xdex\xd5\n+:\x85\xfd\x8dH\xb5\xeaQ\xcc\xc43\x04l\xef\xda\xb5m\x06\x0bK\x95\xda\xd2\x18\xc8bI-\xc6\x0f\xf1q\x9e\x95\xc6\xbd\x05\xb1\x11\xab\xc2\\\x0e#\xc1\xcf\xd4\x83U\x8d\'V\xb4\x86[s\xe6\xc4\xb0\xc9\x19\x1bK\x1d\xea\xd9\xc9\xe81\x8cqV\x84\xd6t\xcb\xbb\xa8\xedd\x01\xbc\xc2\x16"\xac\x0e\xd0}\xea\x8fI,\xda\xbd$d\x8c\x03\xff\x00\x9d\xb7\xabX\xe7R\xf8V\xcej.+K\xcb\xeb\x9b{{\x07+#\xc8\x14a\x94g<q\x93\x8c\x9fj\xf5\xf4\xe9\'\xbbM9!w\xb9\x0f\xb1\x81\xe1\x94\xe4\x82\x1b\xe8x5\x15\xa8O$SI\xe4*\x98\xe2\xca\x96C\xc22\x9cn-I\rFM\x1bP\xb2k\x98\x84\x92K i#\x97p\xf3\x00\x19e$r2;\xd5\x8cV\xe0&\x93\x12\x84\xff\x00y$\x80\x08\xdf`\t\xa4\xcbp\xe4\x9fWm\x87rkH\xd5tk\x0f\r\xfd\xca\x1f\xdav\x97\xab,H\xf1\x94\x7f\xdd\xb6\xd3\x89\x06\x14\xe7\x03\xb18\xc8\xa6\xba\xa4\xba\x93\xcc\'\x83\\\x98F\xf1\xed-pL\x91\xeca\xb7\x18l\xfeC\xa8\xaaK]\xc7w|\x93LB\xabH\xca\xe8\x0e\xc0\x15\xb9\xc0l\x13\x8c}imG\xc5\xfa\xac\xb1\xcbg`d\x82\xd4\xc6\x03y\xc5]\xca\xe3\x18\x07\xdb\x8e)~w\x98\xce\xd0\x9f"0\xca\x02\xabjm\xbb\xe4\xe0\xe2\xa2g\xc9\x08\xb30\x91\xb0r\xec\x00\xce~\x06w\xa8m^\xd6\xe5Z]\xcfo,[\xb0$\x07\x05\x8fL\xf1\xef\x8c\xd3kM6d\x8a?;\x7f\x96\xf91\xc21\x83\x8e\xbe\xc7\x8aj\xc0Gn\'3\x86\xde\xddH\xf5\x00>9\xc7\xd2\xac\xde\x1c\x82{\xf9%0@\x18\xb6\x15\xa5a\xca\x8c\x8eA?\x84\xfc\xd4i\xe5"90\x18\x13\x9e\x0f\xf3\x0f\xadI\x82u.2s\xf1\xf1V\x1d>ak\xa2\x99\x14\xc8\x1eg1\xb2\xaf\xa7r!\xce\x0f\xbf5\x07\xe7\xc1\'2\x02C\x1c*\x03\xces\xc6k\x7fo\x07\xe8:v\x97\x1b\xbe\xab\xe6\x18\x91d\x95\xcb\x0c\xbeFH\x8d;\x01\xdc\x9esX=\xf5\xc6\x9a5\x0b\xaf\xbb\xc4\xf1\xc4\x1b\xf7a\xff\x00\x88\xe7\xa8\xf64\xd2\xc3sn\\H\xf1\xb3\x83\x9d\x01\xb3\x80\xd5"\x1b\xb8\xae\n\xb2\x06\x00\x922W\x1cV\xe1\xa1\xda\xf8M\xb4\xcb7\xbb\xd5\xf6M2\x85\x11,\x0c\xf8\x04\xe0d\x8e\x9c\xd4\x8e\x85g$\xebq\x16\x9emn%\xb4\xb8\x06Uh\xb6\xb8\xcf\x00\x86o\xe1\xed\xdb\xe6\xaa\xdff\xf2iOui.\xa5\xa8C\x1417\x9c\xaa\xc3+#\xa0\xe09\x1f\x87\x07\x9eA\xcdiW\x97\x10\xdck7\x12\xec\x92).c\x11\xce!]\xe9\xe8\\\x87fln\r\x9e\x08\xcf\xbd[\xac6\xf7\x16^d\x89\x14%_\xcad\x89\x88|c:\xb2X\x81\xf4\xc6\xe35Oq-\xcd\xb5\xdbD\x8d,\x80\xa0\x93S\xa81\x83\x9ci\x00\x00N\xdc\x9c\xecqY\xe7\x8c\xd3T\xd4\x19\x13P\xbc\xe68]a\x808p\x14\x9cc\xd3\xfc\xdd\xb2k(\x9bQ\xbb\x827\xb7\xb8\xbd\x98\xa4m\x88\xd7\xcc*HROL\xf6&\xb5\xaf\x11A\x05\x8e\x9bu\'\x92\x10\xc8\xdc>0\x17=\xb3_9\xcdx\xb6\x9a\xad\xd4\xb2n,\xc3\x8c\xb7\r\xdb\x1fJ\xa5Xd\x0f\xaa)g\x08\xe9\xc9r\xccH\xdb\x04\x9c\x7f\xf1W\xb6\x93\xaa"\xc6\xcb\x1f\xa5\xb6\x01@\x03;\xe4\r\xea\xeb\xab\xf8\x8e\xef_\xb4\xb5\x86\xe5!s\x1c\xacQ\xd60\x8c\xa5\x94"\xaf\x1c\x05P\x06\x05X\xb4\x99[e\xc42^:e0pp\t\xc7L\xd5\x0f\xccW\xb7\x12D\x18\x93\xd7\x03\x8ek\xd9^\xea\xee[{+3!\x92f\x11\xc6\x80\xe321\xda\xaa\t?\xd4\xd5\x8d\x95\xcc\xfet\xae\xec%\x91\xb4\xaa\x06\'s\xc7\xf7\xa6\xafDI\x18UP\x91\xaeN\x06\xc0w\xa9\x8dB+\xe4\x92\t\xaegH-\xa6V\tq \xc4C\xd4A\xc1\x19\xc9\xe3\x18\xa6\xda\x95\xd6\x87a\xa6\xcdlf\xf3\'\xf3\xc2\xc30uT\x92\x1c\x13\xbc\xa9\xf5\x02{{\n\xca5\xcb\xcb\xa8\x05\xc5\xa5\xc2\x13p\xa4F\xd1\xf1\xf8\xb3\xdc\xf7\xcfZ\x8f\x82\xc2\xe8\xa7\x9c\xeb\n\r\xbe\x82\x15\x7f\xbdY\xbch\xb1\xb1\x97\x01\xc8\xd3\xb9\xc8\xce7\xc0"\xaa$\xea\x9eQ\xd0\x8a\x08\x18;\x121\xbdi\x9aE\xfe.\x96X\xc4j\xb1\xa2\xb3y\x87;\x9b\x91\x95\x18\x07\x8c\xf4\xf7\xad7\xc3\xde"\x9e\xda\xe6K\xa4\xd3\x86\xa3g\x1a*^\xac\x91\x1f,#\x1e\x06p\xdbI\xce3\xd4\xd7\xcf\x16\x9a\xbc\x8a\x04o\x18y\x07FN\x87\xeb\x9a\xb1[\xeaZ\xc3Ar\x96\xe2D\x8eE\x1eg\x96\xc5U\xc2\x9c\x8c\x81\xd7\x06\x9aW\xb8\x80\xa9\x88\xe1\x90\xe4\x10\x07a\x81\xb7\xb7\xbdw\\\x17\xb10\xce\xb0\xdf\x98\x10F\xd9\xdf\xfe+D\xd7<A\xa7\xc7\x1c\xd1\xdaA,"2\xc0\te\x0c\x84n\xc8\xe7\x03\x90\x08\x18\xe78\xcddZ\xb7\x88$\xbd\xbb&Y\xdc)b\xe5\xa3Q\xcbt\xed\x81\x9f\xa58\xd5\xf4\xe9g\xb32\\\xbbG B\xe4\xb6v\x901\xfd~\x95A\xbe\xf1$H\x15-\xe0>\x95\x00\x96\\\x00G_I\xa91C5\xc1$\x8c\x93\x80\xca\xa3B\x8d\xb9=\x8dU_\xdd\x0bs\xa3V\x17\xeb\x93\x8f\x92w\xab\xdc\x17\x17\xa1\xde_\xde2\xa1\xe1\x9f\xb9\x1f\x04t\x15!f\xf6\xf1y\x8ftH\xdcx\xe7\x1f\x9f\xd2\xb2\x98\xb5\xbb\xeb\xa2\xaf\x10\xc1\x8ce\xce\xe2O\\t\x1d\xaa^}GU\x94\xa3\xcd0\x86\'\xc2\r\xaa\x18\xe0\x0fn\xb5\xc3\xd2\xe6V\x8c\x04E\xeew\xcf\x1f\x1b\xd4(:\x8c`\x02\x01\xfa\xe6\xb4q{h\x1f&@Ip\n\xb7\x18=\xb1\xee*N\xdf\xc4vp3\xa4RF\xdeR\xfa\xc1a\x91\x8eI# \x81Y5\xde\xa3\x15\x9492\xac\xc4c\xd2z\x9c\xf4#\xbe\x7f\xb5AI\xab\xde\xdd\xa8\x06B\x90I\xfb\xb6d\x00d{\x164\xd8\xe8\xd3\x12X1\x8c}v\xfd)\xf3\xd7^"B\x90I\x1b\x0eEm\xd7\xbe!B\xf0I\x0cFy&%r\xa0\x14\xc1\xe0\x8e\xf8\x07\xfa\xd4e\xebCr\xd2^:\x92\xfb<\xb8\xd3\xa8\xe0\xe7 \x8e\x83\x9a\xa8\xe8\xb6\xcbi\x0b\xbcz\x82\xbe:!\'8\xcfQ\xcfj\xe2\xfe\xfe\xe6Y\x8d\x9a\xc8I\x18%xR\xe1\xbe\x95\x13\xf0\x0c\x93\xe69\x0epuJN\t\\\xfbv\xa8s\xdf\xcc\xea\xd2I\x8c\xb6\x00#l\n\xbexOG\x1e.\xf1\x16\x99\xa6\x0b\x87X\x95\x8c\xaeW\xa2\xa2z\x89\xc7|\x9e9\xeb_P\'\x83\xf4\x9d/\xcfKK\x08\x97\xcd}\xd2\xb3(w\x91\xcf$\xb9l\xe7\xe9\xd0V%\xf6\x1d\xa7\x81\xac_\xdc*\x12\xb0A\x1c*\xe3\xf0\xeev\xdc@\xfc\x85}\x8dq`\x93\xc5orF\x030\x0f\xf1\x8e\x87\xf3\xe9Y\xf9\xae$\xbd\xeb\x97==[\xf8qB\x87\x1cd\xb6\xecO\xea+\x15\xd5\xee\xa5\x9eC\x89\x0e\x94\xec\x0e\xde\xf9\xac/U\xfb&\xf0\xcf\x88\x15\xe4\x9e\xc2KiX\x93\xe7\xda\xb1\x8d\xb7\x11\xd4\xaf*\x7fJ\xc0\xfcQ\xf6-\xaax`O-\xa4\x1f\xb5m\xe7`\xa2~b6\xc3\xdet\xe7 \xff\x000\xe2\xbe\xff\x00\x8a;{u\x08@\xda\xdd?:cy\xa7,\xa0I\x17\xf0\x8c\x11\x9c\x10\x0f\xc1\xadD1\xddt\x95V\x8aAs\x12\x8c\xcbn\xc7\xb7\xfd\xa7r*\r\xb5\xfd\xd5\xb9\xca\xc9\xabla\xb7\x15\xf9w\xa4i\x12\xb3-\xc7\xdd\xdf\x11J\xea\xe0\x9c\xa1 \xe0\n\xd54\xad\x1bQ\xb8\x81\xeeR\x18\xf1\x13\x82\xb6\xea\x99y\x02\x8d\xce\x00\xc7\n\x14z\x8do\xbe9\xf06\x99\xa6iZ\xc6\xa5\n5\xac\x12\x88\xdekx\xd3\xf7K2\xbf\xa6dQ\xf87~\x17\xc7\x15\x95G\xab\xea\x1e\x1d\x94\xbc\x1ap\xb6\xb8\xb3\x88\xa4\x93\xb2\x17\xe5\x8eC\xb6r\xaa\xc0\x1cR\xbc\xd8\xba\x80\x82\xe5\xbc\xc1\x1b.\x1d\x00\xcbF\xd9#I\x1cg\x03#8\xc8\xafG\xe9]M.-u@4\xb08 \xed\xbe\x01\xfe\xfd\xaa\xb1\xe2\x99-\xae\xb4\xf9n\x15\x9a\x19\xc4g\xcf\x88)U\x8c1\xda\xaa7\x1c\xb1\x03\xaf\xc5f\x960\x08^I/\x9e\x7f#\xca\xe8\x10\x82\xdf\\\xd6\x9d\xac\xebVW\xbaE\xd4z\x83\xb4\xb2\xdf\xce\xbe\xb09S\xb7p9\xc7\xa5\xb8\x18\xf7\x15X\xf0\xfe\xab\xa3[\xcf\x13j\xf7\xab\xa8\xad\xa0\xf3-\xadv\x91\tf \xba8<\x8c|pM[\xf4\xfbw\xbc\xb7\x9c\x05h\xf4\xb6\xe6A\xa4\x91\xce\xa02I\xc8\xf6\xefM\xdf\xdc\xacw\x11jmE\xb8\x00\xe4g\xd8\x9d\x80\xfb\xd3\xb3\xe2\x9bkW6\xfa^\x9d\x14Pm*\x1aB\xdb\xc0#\x1b\xce\xdcz\xabk\x98xK@\xf0\x95\xad\xd7\x92\xa9q$Q\xcc\x9er+%\xca\xba\x90\xae\x0e:\xa99*{W\xcf\x1e)\xd4|3\x13\x9f\xb9+\xb3Mp\\\x8cl\x1eA\\\xa8\x1c\xfay\xea+w\xd7\xe7\xbc\xd6<\x1d\xf6}\x14v\x90\xbe\x9b.\x95\x08\x9aA\x8fN\xc1\x82\xa4\xfcb\x92z\x83t9\xad\xdd\xa3\x86H\xd9\x99p\xca0\x0ey\xcf\xbe\xd5\x9b\xf1\r\xec\xc6\x08Qn\x1e4.C\x85ldb\xb3\xef\x0f\\\xd8<\x1a\xce\xa5r\xef\xe6Z\xda\t\xad\x90r\x8d9m\x8b\x91\xef\xcf\x15N\xd7\xae.\x1e\x0b\xd8\x1f\xef\x13I1\xff\x00M\x86N\xe6;\x89\xc0\xab\x7f\x81e\xf0\xb6\xb7\xad\xeb\x1e\x1d1\xdc\x18&e(\xc3\x0b\xfe\x979_\xa1\xed\xdcT\x8f\x894]\x7f\xc2S\\\xcddE\xe5\xc2\x9f3\r\x17\x1eH\xe1]3\xdf\x1d}\xaaE\x8d\xefL\xbb\xbf\x929\x8c\xb0N\x02<\xa1\xb0\x1b\xcac\x80T\x1eFN\xe3\xde\xa9!\xearZ%\xd7\x96\xa1\xa5\x90\xa8\x89_a\x8cgsYf\x916\x85\x04\x8b\x06\xb7`D\x89\x11![\x8c\x928\'\xda\xa5\xac\xe2\xd0\x80\x8e\x16"G\xdcd>Sq\xb4\xf4_\xca\xa2\xd3C\xb9\xf1\xb9\x9aX\xe6\x99\xf5\x9fQ6\xeb\x19b\xeb\xef\xe9\xa8\xfd;K\xd6|3u%\xbe\xa5c=\xa4\xaepU\xd0\xa9\xe3\xb8\xcdin\x1a\x1be\x8b%\x1e\x17Rb\xfc\xa6B\xb9\xfe`\x0e\xc7j\xb4\x83\xadC"\xba\x18\x82\xdcG\xa4J\xbb\x81\x9c\x7f.q\x91Q\x9a\xcbF\xbe!\x8eM:\xdd\xa2\xf2\xc8%I\xdd\xc8\xef_i\xfd\x80x\xb3\xc4:\x8d\xc5\xce\x9fq\x1c2Z\x01\xbf;p\xc8\xdd?\xae+\xe6\xdd6\xfa\xcfL\xd6^Cg\x05\xc9\xb9\x80F\xcd \x07a#\xa8\xaf\xa0~\xc2t}kI\x9a\xe7\\q\x18\xd3\x1aW\x8f\xcc=\\\xe7\xfa\x01\xd2\x92\xd3Emhek\x83\xa0\xe5\x9d4\xfeP\x06\xc4\xd4+\xdb\xa4p\xe4\xc6\x14\xb3)C\x9ew\xc9\xc5}\x96\x80\x9cqN\xd1O\xb5T\xae|Cs\x1e\x04p&\x08\xf4\xb6r\r7\x8fP\xd6\xee\xc6U\xd5W\xe0V\x0e\xfb\xc7\xdd\x16\xda\xe9\xed#\x8a\xee\xe6\xe1y\x8e\x18\x89#\xff\x00\xe2\xc5&2H\x07\xb7\xb9\xab\xc32F2\xcc\x00\xa6\xe9{m#\xecYT\x9f\xadR&\x8fQ`|\xe9Y\x87p\r \xb0:\xb0#p>\xf5\x85\xea\x7f\xf5^\xe6\xd2\xe9\x11:\x0c\x91\xc6\x0e\\L\xda\\\x8f\x8c\x02\x05O\x8a\x0f0g\xcc\x1fj\xd2\x875\xedW\xb4\xdb\xb9\xa3\xf2\xe3\x95\x8b\x03\xd0\x9e\xa3\xebV.\rzg@\xeb\xd6~!\xb1K\xabmK\xc0x\xdb\xf3!#84\x97FC\xa4\xd1\x91^\x1a\xf6\xb95yH\xc5x@4\x83%,k\x93E\x14\xc5\xe2\xf8\xa4L\x03\xda\xa4\xf8\xaeJ\x8a(\xa8\x96\x84\x0f\x8aH\xb3\'\xcdI\xbct\xceH\x87<W1]\xa6\xdfx^\x84\xd7-2\xf6\xa4e\x87\xaf\x15\x1e\xc2e\'\x1d)$\xd7qO\xda|w\xae\x04\xe0\xf7\xa6BBxaJl-\xd0\xd1\x9a\xee)\xd7\xde\x00\xefE519\x1d(\xaeoF)\xba\x01J\xe2\x90\x8c\xd2\xdb\xc0\xa6\x858h"\xb8a\\\xb4\x87\xda\x93/\xeeh\xc8\xa2\x82\xb94\xaa\xa5$$\xf8\xae\xc3\x9a\xe5v\x9c\x80\x00\xae\x80\xcd7\x0e)A%\x00\xd0E8\x0b^\x12+\x8f2\xb9\xdc3K\xcd\'\x14\xb2\xd2\xe0Su"\x97\x07\x8aP\xa4\x9aTR\x80R\x00\x9fzP8\x15\xda\xe5)Fi\x03 \xf7\xae\x0c\xa3\xde\x8c\xd7qN\xb3^\x83L\x8c\xc3\xde\xbdY\xbek\x99\xa3\x15"\rsq:[Bdf\x19\xc7\x03\xb9\xa6\xab(\xa673\x8c\x96\x9fiU>\x92{U7[\xea\x9f\xe9\xf6\xc3C\xaa\xc9!!I\xe0|\xd2\x95rw\xa6\xfa\x95\xc2jV\x91\xabFF\xd3\x96\x07\xdf\x15\x9f\xde\xf9\xf6N\xa6)\x99\xa2\xcf\xaa2s\x8f\x91W\x93<RF\xe1\x1dN[\xa8\xaaT\x96\x97\x1a\x96\xa4c\\\xacQ\x9c\x16\x1dY\xb3\xd0W\x87\xf8\x98\\\xf5N\xb1k2\xb0\x95\xe7\x8c!\xd29\xd3\xb6)F@\x91\xb0\xe3\x06\x9d-\xdc\xf0\x04\xdar\xae2\x01\x18\xfd)\xa5\xc6\xb3\x1d\xbf3\x07P}\x86E\\o\xb4\xb8\x8a\xc7\x14K\x9d\x83\x00\x8fz\xae_hs2\xb7\xa0\xb6\x06X\x0f\xf1ZD\xe8\xddB\xdaC\x1ca\xe4\x8d\x08\x04\xa8\xc8\xce7\x02\xaa%\x9bV\xfd\xea\xbe\xba\xa5\xad\xc9;d\x05\x89\xe8{Sk\x87,\x0e\xd2\xa7\xd8\xd7ShO\xbd\x1b\xc9\xdb\x8c\x9eF)\xd4Ze\xd8\x8c\x06\n\x0ex+\xd3\x1f\x9d1=\xa5\xdcx\x1f\x87\x98\x86\xfem?\xd6\xa2k\x07\'#\xe9Y\x0f\x8f<!c\xe2\x1b\x193l\x12\xe1\x14\x98\xe5\x03\x9c\xff\x00\xc5|\x89\xe2\x1d#\xf6\x18\xb4i?wvw\xee\x0b \'\x83\x8eGl\xd7\xe8\xc4\xb6\x04\xa3n#\x03\x8ek\xe4\xcf\xb6\xcf\x03\xcd\x13>\xb9ilv*\xe2\xeboog\xc7\xf7\xad7\x86/d\xb4\x9cZ\xcf\x91\x14\xdbG\xbe\xca\xde\xdfCSl.\x82?\x94\xe4io\xcb\x9fz\xc3g\xd5a\xb8\xb5\x0b$\xee\xaf\x81\x94\xc6A?\x06\xa1&\xbbe\x0c\x16%@\xdd\x00\xa6\xbb\xc9TP\xa3*\xd9\xc8\xa9\x8d-\xed\xe6\t\x0c\xb6n\xec\x1d\x98J\x99%x\xee1\xc8\xe2\xbd\x11 T\x18U\xc8\xcf\x15l\xd33\xe0d\x0f\x9a\x81Vq\xbbinG\xab\x15\xa2\xf88\xe9v\xd0\xcdu\xa8ZI(?\xbbES\xc9|\x8c6\x0f\xb5R\x92\xe2o\xbc\xc9\x1cab\xf3\x9c+.1\xc6kM\xb0\xb9\xfb\x95\x8bY\xea;U\x18\x06g \x1e3\x84!x\xc3v\x19\xfa\xd2\xa6l*\x9e\x0ew\xc8\xc8\xfb\xe2\x9e\xe9\xe0y\xf9-\xc6\xc3\xebZm\xde\x99\xa6\xddX,\x86H\x1d\x9e&\x99\x1c7\xef#A\x9c\xab\x81\xc2\xe4\xff\x00\x0e2i-\x02\xee\xe0ZC\x15\xb4\x11$\xd1E)R`B\xa1T\x028 d\x93\xc1&\xa8\xfa/\x88\xb4};W\xbd\x80\xbb\x9b+\xbbs\x14J\xeb\xbeE/\xc8o\xe1\x1c\x11\x91\xcd \xf6\xfa\x95\xe5\xe3\xfd\xde\xe1e\xb6\x90\x80$Fh\x84\xa9\xed\xea\x19\x03\x1d\x8dA\x8a\xde\xf1&\x121V.\xd8,\xa7\x801\xf7\x15{%\xcd\xb4\xa9\xa1\x17\x05F\n\xfc\xd2\xd6\xf2\xb5\xe1\x955%\x02x\x9cC\x18\x01<\xb5Uc\xb9X\xa7R\xde\xfe\xd5\t\x0c\xb1\xe8\xfa\x91\x9a7\x8e\x1b{\x81,\x89\xe5\x03(\xb7\x1c\x806\xb9\'\x04\xe0d\xf3\x8a\xb7X\xc3f\xb1E\x0b_G%\xab\r\xd2F\x85C\x06_NNx\xc9\x1c\xd5w\xc5\x1a*\xc3l\'\xb6\xbf-\x01e\x11\xc7\x1a\xe4\xc8\xb9\xf5\xb1\x03\xf0\xe3\xd9\xba\xd5\x82;\x92\x0e\x01\xd3\xdc\x10)\x9f/Dg\xbf&\xa0|Kqyw%\xc4\xb2\xc5\x14\x11\x89\x00xb#\x1b\xc2\xaa\xe4u\x04q\xd8\x9a\xae[\xbf\x92\x9fx\x9b\x7f\x93\xea\x88\x15\xc1\xcb\x01\xbb\x18=\xbd\xe9\xfa\xe9Mv\xd2\xc1\x15\xf1\x92T+\xe5\xc4\x01 #\x1cg\'\x18\xc7R1\xc52\xbc\xd05X\xa5x\xc4\x12J\x12#32~\xf1v\x03\xb7~P\xb0\xc5,\xc6\xce\xc5\x981\x04\xf3\xcf\xf4\xaa\xc9e*\xb9D\x03\xde\xa2\xbe\xf2\xbetO\x12y%[%\xb7\x16\xe79\xcf5\xba\xe8\x1e!\x87\xee\x88\x8d:\xc2dd-\xb0\x90\xae\x03n\xcb\x11\xcf\\t\xac\x15m\xa57\x0b\x01R\x1c\xb8Lt\xe4\x9cc\x9a\xb1\xe9\xefq\xa7\xde\x18Wi`\xc5]x\xfc#\xa8\x07\x91\xf3Q/m\xc4\xb1\xea\x1b2g\x07\x1f\xb5+\xa6\\\xbcR\xb0o\xca\xc4\x02>kb\x9b\\{\xa7\xbbV}\xe9;\x87l\xa0\x8c\x06\x03\x07f\xdcaq\xc6=\xab\xeb\x1f\xb2\xdd*M3\xc2\xb6\xd3\x02"\x97Q\xff\x00\xa8\xda\xaaF\xd8\xb1\x88\xd4\xe7\x9e\x835\xf27\x83c\xbf\xf1N\xab\x1e\x91\xa4G\xfb\xeb\x96\x01\xa4\x91\x14yQ\xaf\xa8\xbb\x1c\x1c\x05\xeaq\xd6\xbe\xf7\xb4\xd3\xd6\xc2\xca\xd2\x08\xd9\x9a;xc\x85\x0b\x0f\xc4\xb1\xa8\\\xfe}k\xce\xfcMs:E\xa4\x13\xa9\x9b.3\x8c(\xf9\x1d\xa8\xf1\r\xda\x08\xa1\xb7F\x1e\xa3\xa9\x80\xe7\x03\x8f\xde\xba\xf3\xca\xe4I\x92~;\x9a\x81\xd5.\x960\xd2;zGA\xd2\xa6f\x92$\x04\xc8\xb9\x18\xeax\x1f\xa5b\x9e$\xd6g\xd4uI-t\xe4\x96U\xb4p\x1d#\x19\x05\xbb\xee>\xc2\xbc\x98,\xfdN\xf1\xe2\x12\x7f\r7b{cm\xcde$\x94C\x18\xff\x00q\xe0T\xfd\xc3\xc9p[\x12F\xa3\x1cF\xde\x9d\xc7\xdfw\xbf\xf4\xaaN\xa5\'\x9aY\x10\xbaF\xacVWa\xea\r\xddT\x1e\xff\x00=\x054\xba\xf1\x17\xdeUc\\\xab\xc7\xb9%\x04\x10U\x94\xe3\x19>\xc6\xa1[Y\x17\xa94\x05\xfc\xc9\x16`[\x04uu\x1c\x1f\x9e+Gi\xd3\xe4\x89rb\xd2S\xf6\x19\xc6MAg,\x18\x90I\x15,\x96\xa9\xb5^\xdeyT.\x02+\xb0\x7f\xcb\x91V\xab]6\xe2#\x0c\x93<\xae\x19\x07)\x84P\x0f=\x14TU\x95\xb9\x16\xb0\xe4(\x91\xd8\x10\t\xe4\x8c\x7f\x8a\xd0\xe3h\xe2\xb5M\xc4\x96\xf2\xf0G\xb7\x1di\x89\xa5i%\x11\x82\x0eKe\x8e3\x81\xf3M\xa1\'$\xfcU\x1bW\xb5\x96\x02<\x96v\xcf,$l\xee\'\x00\x90\xdd\x8f\xf4\xad\x17\xc2r\xc1\xa9i\xe6\xe6E\x7f-\x08\x8d\xa3#\x0ed\x1f\xc3\xcf\xbf\\\xd5\x1b[\xb9\x8aH\x0b!e|\x81\x85\xed\x8e\x0f\x02\xb4\x0f\x01\xc9oq\xe1\xc8\x02aL\x172\x06\x07\x93\xbb9\xc9\xfc\xa97\xd0\xc5q\x15\xb2\xe9\xff\x00\xee\x81\xab\x8d\xb0I\x07\xf4\xa7\xe2oY\xf7\x00\x91X\xcf\xdb\xb6\x9f\xfbCK\xb1\xd5B\x18\x8d\x8d\xc2\xa1E\xc9\xc28\xdb\xc0\xf88\xaf\x97..R\xde"f\x8a\xe5X\x8c\xac\xb9\xc1\xe7\xa63\xda\xbf@\xbc}\xe1\xcb\xbdc@\xd4\xadc\xb6\x8f|\xf0\xb2\xa4\x80\xf0\x1cr\xa4\x83\xeck\xf3\xbeH\xae\xd3R\xd4m\xee-\xe4\x92km\xebq\x0c\x80\xefP\xbe\x83\x821\xf8{g\x8a\xf4\xcf\x0b\x15\x92\xd6[i5+@\xfa\x82\xe9+\x84}\xf8\xf6\xcf\xda\xafzD\xecc\x926oR\xb6G\xd0\xd2\x11\xdbj\x17\x12C3F\xee\xec\xc3s;\x05\x1e\xae9>\xc7\xe2\xac\xe2\x19!\xde\xd3B\xc9n\x15VB\x80\xbe\xd6q\xc0$\x8e>=\xea&\x085(\xedZX\xe4g\x81\x80\xda\xa4\xfa\xb8;J\x12:0\xa7\xf7\xd7,R8\xecc\x928\x88B\xe9+\xe5C \x07\'n9\xdd\xcf5\xac\xf4H\xa5$8\xc1\xc0\xd0\xc4\x1d\xc6v^+@\xa4\xa6\xa2\x01\x07\x19\xdf\xbf\xd6\xa5\x85\x8e\x96\xd6\xf0\xdeG<\xf0\xa4\xaf\xe5)u.\x01\x03\xf1\xe7\x81\xb4\x9c\x8cu\x15\x1f\x17\xde\xe3\x97q\xc4\x9eS\x10Z>T\x8c\xf4SP1\xdcH\xd3\xcf\x14\xf6\xe1\x89}\xc5r\xdf\x88\x9e}<\x00{\xd5\xd6\xca\xe6\xea\x18\xda5\x80/\xa4\xff\x00\x08\x07\xfe\xd5\x02\xe1\xda\xd8\x1d\x1arN\xcf\xb8:O\xdc\xfe\xd5"\x17\xf3\x15q\xe9\xdb|{\xd1u\xab[\xcc\xa1BI\xe6\x127!\xe3j\x8e\x9d;\xe7\xf5\xa7\x16\xe2\xdet\xda\xb6\xe26W\x01\x08\xc6\t\xc7\'\x8f\x9ab\xb2\xdb\x02\xed.<\xd0\xdc\x06\xe4\x8f\xce\xac\x96\xf6\xa9\x05\x8cW!\xe1`\xe5\x8ck\xe6\x02\xfc\x1cd\xa8\xe4s\xd35\x0e1\x10b\xc4\x14\x11\x9de\x86\xe0\x9c\xf6\xf8\xa9\xd1\xbbH\xc5X\xa9\xc6\xfe\xd5\x0b|!\x82\xee\r\xf2`\xc5\x1e\x0f\xd4\x1c\xf1\xf9R\xf7\xb6\x97\x1a\xab\xdb\xc1gmq+\xb1T\x81\x15\t\x92g#\xf8Td\x9ezW\x17\x86\xe1\xe7\xb7\x825K\xb7\x98\x90"E\xcb\xa9f\xcf\x18\xeaq\xc7\xd2\xbe\xb4\xfb\'\xfb<\xbb\xd1\xe1\xfd\xb7\xae\xc3\x8dQ\xd0\xc7m\x0bc6\xd00\xc1$v\x91\xba|\x0f\xadC\x99\xf4\xb2J\xa4\x1cja\x93\xef\xbe\xc2\x9a\xbc\xea1X\xdbI\xab\x05\x89\xf4\'r\x7f\xc5`\xda\x1f\xd8\x06\xad$Ow\xafj\x89c#.R\xd9\x07\x9f0?\xff\x00\x90\x82\x15~\x99&\xa3\xf5_\xb1\xdf\x14ir\xf9\xbah\x8fV\xb3\x03\xfdH\x97d\xa8\xb9\xe7\xcc\x8d\xbac\xdc\x12+\xedMN\xd6$P\xa3 u?\x1f\xfc\xd5:\xe2&\x03\xc9\xb6b$~\x9e\xd8\xeeH\xef\x8a\xa4\xb8\xeb\x9dB;\x9fT\x912\xb6\x17\xcb#a\xf4#z\xc9E\xd6.|\xcdM\xa4\x8c\xfeR6\xaf\x94\xb5\x0f\x01\xf8\xabO\xb77/\xa6^b\x08\x84\xb7G\xcb?\xb8PFC\xe38\xc1<{\x8ei\xa3]\xb2B\xbeL\x83 \x10p\t#\x03\xafj\xfb;\xc3\xbaTv\x9f\xbb\xb8_5dI!\x9by$I\x1c\xdc8a\x9cs\x9a\xf8\xdb\xed\x0fD\x93\xc1\xbe%\xd5\xf4\xb5\x91\xb6E3\x85$p\xd17*s\xecA\xfdi\xfb\x1b\xcf\xf5I$W\x89W\xcb\x90\x85\xd3\x92\xa4\x11\x91\xcdjz_X7^ln\xa1Y\x17 \xa9\xed\xc50\xd3u\xfb\x8d:@x\x95\x95\x84\x8a\xce\xbb\xc0\xc7@T\xf1\x8e\xfc\xd4E\xd6\xa3}{u-\xec\xd7DG\xe6r\xed\xcb3\x9e\xa4\xf7\xe4\xd5r\xe2\xea\xe3k\xb4[\x81\x04co\x19\r\xdc\x03\xc9\xae\x96\xda\xfah\xe0\x967\x12\x078\x0b\x9c\x01\x8e\xa7\x9a\xd2\x08\x1bF\x19\xc0\x0cF\xc7}\xfe\xfd\xea\xd3\xf1\x8c\xcb\x83\x92G\x07\xe2\xa6\xa5\xbe\xb8\x96TY<\xc6\\g~\x0f\xd38=j^\xdexw\xad\xbe\xf9q(\xc29!y=\xc7\xbdGC\xa3\xac0,\xda\x9d\xeb\xa2\xc9\xb4\xc6\xbb\x8a\x87\x04\x90\x18\x1e\xea\x089=\xaa6\xe2H\xe6\xb9\x9eHo\xd9\x96\x0c\xaa\xe1w\x16\xed\x88\xc1\x1e\xac\xf6\xaeIb\x04cm#\xdc\x0e\xe7\x8f\xd6\x9a\xfcn\\\xeabj\xdb\xa8\xdb\x1d($R3\xb34{\xcb\x05\xda\n\x9e\x9d=\xe9-\x13\xc5\xefez\xc9\x0c\xa5Q\x90~\xedI\\\xed9\xe39\xe6\xaa:\xb4Ok\x1cr=\xc9\xba\x0c\xb9\x8d\x0f\xa7nz\x92\x079\xedZf\x8b\xa5\xe9\xf6\x16>\x1b\xd6m\xadt\xe9\xa4\xf2\xc3L\x91\xcb\xe6\xdc\x99B\x96-\xe5\x1d\xc4\xaa\xe4\x03\xc6A\x15\xd5\xe9\x82E\x94<l\xdd\xc8Q\xab\x18\xf8\xe4\xd4\xab{\xc0g\x8c\xc6\xc1@8\xf5\x1ej\xfb\xe1\xff\x00\x10\xc3\xe2\x15\x92\xcd\xe0\x89W`c<\x92;2px\x0cz\x86\xec\xa0pE&\xfe\x12\x99\xaf\xcb\xa5\xb1u\x18)\xbb%v\x9f\xf94\x9f\x86\xe2\xd0\x9a6\x9e;\xb8\xe2\xd4.\xa4\x95\xe1WtT\x08\xa4\x10\x8d\xfc\xa5\xf2ps\xc7\xb5M[\xf8\x8c\xf8k\xef\xf7Z\xaa-\xe3;\xbcq*\xb9\xccrt8R=$c\xbdWO`\r\xd7\xf1\x1dR\x1d*\x0bD\x00\xe7\xdc\x01\xb5i\xa1\x95V\x06}\xcb\xaes\xafo\xdc\x9a\x9b\xd0\xf4\x0bs<\xb6\xb2\xbc6\xf2F\x1c\xed.W\x1bF\xe6\xfd1\x93\xedP\xf0x\xfe\xff\x00G{\x95\xb3\x88\xdcY\xdaN\x04\x97*\xbb\xa3%\xc9U\xe5\xb1\x90s\xd6\xaa\xd6\xfe8\xfd\xa6o|\xbd&\xdaY\x8d\xc2\xc8$\x9d\xc2\xeebyFoJ\xedc\x8d\xc3\x80Ef\x92x\xa0[\\\xcf\xf7\x9bW\xb8o<K\xf7f9\x88H\xab\xb5I\xc9\'\x19\xe7h\xe2\xacc\xb1\xb0\x96\xddq#\xa4\xab#\rI\xe9b1\xe9,q\xf7\xc5U\xdc^\x18\xe5%\x99\x1a\x17U#P\xd43\xfc\xd8\x19\xef\xc0\xadS\xc5\xde*]b\xf3\xca\xd4.\xe3\x85\x00I\x15[|k"0\xc8e\\\x16PG\x03#\xe6\xb2\xab\xf3a\x7fs\xa7\xc7e(\x12H\xfb\x04M!v/\xd4\x1c\xe1z\x8e\x00\xf7\xaa^\xad\xa9\xcf\xa9\xdcKuu$\xcdt\xe0)g;\x88\xc0\xc2\xe3=\x868\xa7Z\x0f\x86u\xef\x14jvV\x9aM\xb3\xbd\xe3\xc9\xb8I\x9c\x05\xc7W$tQ\xdc\xf6\xae\xc7gkm\x14\x8f$\xdaSS9w\xe4g\xdc\xfbUT\xddoD\x81\x82\r\n\x00\xc6p0=\xeb^\xd3\xf5\x1d.\x1d>\xe2\xd9\xd6B\xea\x85#T\x94\x00\x1b?\x88\x82=X\xe7\x8aW\xef\xb6V1\xcb4+ "0L\xcd\x84d\x93\x91\x88\xf1\x9c\x83\x9esV\xab\xcf\xb1\xd6\x86\xdaT\xd1\xa6Yuh\xe2\x8ba\xb9\x98\x04\xb9\x97 J\xe3\x7f\nz\x95\x06\xab\xc7\xec\x7f\xc7\xd2\x12\xba\x88\xb1\xb5RF<\xcb\xa1+g\xbe\xc4\x87w8\xf7\xc5RAw\x0c\xed$\x91K\xfc8\xd8\xa9\xf3\x10\x06\x18\xdf\xee7\xa4\x9f\x15YL\xac\xda\x95O\x18,F\xf5\x9b\xc8~\xebp\xb7\xb7\x11,\xac\xb9\x90\xb4\x83>\xa3\xc7?\x1c\xf4\xaa\x06\xad\xaa\xdc\xb0t[\xb6\x11\xf9\x84\xacjG \xf2I\xdb\xd3\xe9_Bj\x9ff\x17O\xa3\xdf\xc9\x1e\xb3\x14\x9eD-*@\x96\xf2\x06\x95\xe2R\xdbw\x13\xc18\xeay5\xf3C\x16\xd4g\x8e\xd9\x15#Tn\x15\x17n\xe2\xc7\xaf~\xd5\xa4\xe9\x8foq\x19>`\x93\xcb\xfc\xd9\x18\xc6~>\xd5G7RK\xb2E\xbc\x9a\xb0w\xc6F\x7fZ\x98\xd2/\x12\xde\xe6\x14\x9d\xfdd\x8c(\xe4\x11\x8f\xefZ\xa4\x17\xaf\x1cH\x9eLq\x0689b\x08\xcfqX\x8c\xf1\xc3h\x97("\x8c\xca\xac\x869<\xd3\x95\xe7<\x03\xd78\xe7\xda\xad\x9a_\x88\xedg\xd3\xe7\xb6\xd4.\x9b|q\x96\x89\xe3\x88\xc8\xcc\xcb\xd1:\xae\x14\xf75&\xef\xa6\xb3\xcf\x13\xc4\xc0\xea\xd9\xb7\xc0\x1f\xae\x05N\xe9\xddX[\x87YA\x04n\xa0o\x9f\x8a\xb8x\xbb\xc4\x91\xcd\xf7X\x83\xc2\xadm\x8eb\x04\x8c\xaa\x81\xcf\xd7\xa9\xf75\x9ci"\xda\xfbRq\r\x87\x9a\xc5\x0b\xaa9%\x03 $\xf0z\x83\xf3]\xfd\xf9\x05\xb4\xd1\xc7fDd\x92\xd2\xc8\xb9,\xc4co\xc0>\xd5u\xf0\x9f\x87t\xe4\xb7\x96[\x8b\xc7\xb7\xbc\x82\xcd\xeeLr\xa8M\xfb\x9bhT<\xf2T\x93\xcf^\x82\xa4\xd9\xc5\xe4\x04\x8c\xb1f\x07|\xb0\xdcw\xc6v\xa2y\x9e\xees.\xc11\xed\x9cv\x02\xa1\xae\xb4\x8b++\xb4\xbb\x10\xc7\x03-\xd0\xdf\n3\x02\x14\xaeO\xa4\xe7jv\xc9=i\x8e\xa9\xa8\x99\x1a\xc9`x\xe3\xf3\x13\xd6\xe0\xee*\x15\xba0\xed\xff\x00\x15\xa2\xcf\x1e\xad\xe2\xcb\xfdN\xf5\x15\xe4\x99c\x8dg\xf5*\x97TP\xa0(\x01A\xe9\x9e\x9c\na\xa0\xe8\x1aM\xdd\xb4\xd6\xd7\x16Q\x89e\xb8^\x11U\x98)\x18m\xacrY\x8e=*= \x9eM9\xe6\xc2\xef,\xc2R\x06\x18FYB\x86\xc1\xecx\xa4\x08\x99\xb4"\xc6=\xdfI\xc8\\\x7fZ\xcf\xaet\xab\xb7\x9d\xe43\xfd\xed\xd22\xeb\xb23\xe9Q\xc9v\x00t\x19\xc5LXxf\xf4K\'\xde#D\xd8\x8a\xaf\xb5\x87\xef\x04\x98#\x81\x9c\xf1\xcf\x15\xa1\xad\xb0\xd0\xee\xef\xcd\xb4\xd7\xa9s*4\x1a|\x8e\xc8\xeb"G\xe8h\xdd\x90\xe7#\x19,8\x07\x83UH/\xfcE.\x9fun\xea\xb2\xda#.\xe7,7\xc7)#& 1\xea#\x8e\xfcS\x8d,I\xa4\xb9l\x95f\xd0\x0f\n3\x8c\x8ew\xa8\x8d\x12\xea\'\xf9A\xc6~~\xb4\xdfR\xf0\xbe\x9fkp\xa9\xa7\xea\x91F6\x13\x90\xce\xc4\x95\x1d\x17\x8erzd\n\x8b\x8bA\xb8\x9fT\xb3hd\x9e\xe1Y\x90D6\x82\xecH\xc1\x04\xa8\x1dOLV\xbb\xa7\xfd\x98x\xc2XmU\xa3\x82\xc2\x19Yd\xd9rwL|\xc5\xe1\x8a.[x\x07\xa1\xad\xcb\xc2\x1fgv\xba\'\xab\x1fx\x95\xb0\xdes\xa6\x1861\x84\xeb\x81X\xdf\x10\xf8\xb2\xd3\xa6\xdb\xcb2,E\xd8\x91\xe5\xae\t\r\xc6\x9c\xe4\xfd\xea\x9e\xee\xf6\xd1\x10\xc5\x13\xf9\xd2\xf00r\x00\xf7$T\xaf\xd9\x87\x84\x9bC\xd2-\xd1\xd0\x17iZIH<\x068\xe0\x7f\xed\xe9[\xdd\xba\xa7\xdd\xa5\x89\x86VE \xae}\xea3F\xb1K}=\x06\xd1\xb9\xb2s\xf5\xedRpG+\x12\x02\xe7\x19\xc5b:J\xddG:_I\x96\xb8\xbf\xf5\x9c\x0c\xe9\x0f\xc0\xfd;U\x1e6\xc1\xfb\xfc\xd4\x02\\\'\x9a\x14\x0c\x01\xe9\xe3\xaf\xcf4\xac\x8f+\xca\xbeX/\x91\xd3\xa9\xc7\xb5V>\xf8\xd3(R|\xb2\xa4\x803\xea?\x97jS\xc6\xbe!\xb0\xf0?\x87.\xef\xa6\x93d6\xd0o\x99\x81\xf5\xca\xfd\x91s\xdc\x9e\x00\xa7\x9b\xae\xc9y\x1c\xd1\xc6L\x804`*~vv\xd9QG\xdb\x9a\x8c\x88O5L\xfb\\\xf1\xfe\x95\xe1\x8d\x19\xb4\xcb\xabE\xba\xb9\xd5\xa0\x96\xde87\x00\x140\xdb\xbd\xcf8POn\xf5\xf3\xf4\x7fhr\xff\x00\xe9\xeb\x8b+\x88\xa5\x17\xd0,q\xde\x999\x8eH\xe3\xf4#\xe5yVRy\xc8;\xab/\xd5\xfcm\x1f\x8bm5\xddWV\x96\xe4\xde\xc9q\x8b\x08c*bU\xcf*\xd9\xe4\x00\xbd\x08\xefO|)\xaai6>\x13\xbf\x8bQr\xd3_\x10|\xb0\xb8o-Xp\xac3\xcf\x19\xe7\x81^\x95\xd0\xad\xba\x97I\xb5b[\xcc\xb9\xba\x1f\xc7P\xe3\n7\x18\x00\xe3\xf2\xfb\xf7\xad\x87N\x82\xce8\x94H\xdaYq!v\xce\x9dC|}?\xbdRn5G\x9bR\xbb\x89n$\x91"f(I\xe3 m-\xc7\xc7CW\xbf\x0fxVM\x7f\xc2\xfa\xbe\xa7g\xa7J\xf7v%\xda\xf2V?\x8dX\x9d\xa2,\xf7\x1d_\xe3\xa5Oh\xba>\xb1\xe2\xc7\x82\xc6\xdfMKr\xd6\x96\xce\xdb\xed\xd4G4q9\x01\xcc\x8b\x82\xa0\xaf\xe2=X\xf6\xaf\xac\xbc!\xe0\xcb/\r\xf8}4\xb8\xf3\xe528\x95\xcf\xe2f\x93\xf15K\xf1\x0f\x89m<!-\xa5\xb4./.\xee\x02\x19`+\x96\x86\x1c\xe5\x99\x81\xe0\x91\xb0\xce\rdo:\x83\xf5Y% 4B9\xb2\x8e\x8f\xe9l}9\x1f\x15\xf9\xbf\xe2\x1b;\xb8\xa7\xb6\x8dm\xe4%\xcbyaS*\xc5N\xd6\x00\x8c\xe4\x03_h\xfd\x8ci\xab\xaf}\x9a\xdfxsP`\x97P\x97h\xb3\xf8\x91e\xe4c\xff\x00i\xaa\xa9\xfb!\xd4\xf4\xb9\xae\xc2\xa8\x9fd\xf2=\xbc\xe5\xb2\xbe@>\x9c\x0e\xa0\x9e\xe2\xad\xde\x0b\xd1\xf5]#J\xb8\xd4\x95\xc8\x91\xae\x1cnS\xd9x\xfe\xb5\x9a\xeb}f.\xa1\x1e\xab;MP$\x9a\x97Sd\xb6\xd8\xca\x9cp3\xb5"\xea\xe9\x8cQ\xc6\xe4>7c\x8cW\xcc\xd6\xfe\x1c\xf1\x87\x85|Suocc;\xdd\xc1q$E\x95I\x127\xfbONz\xd7\xd2z3\xfd\xa3\xde\xe9\xc9&\xa3\xa0\xdbC4D\x00\xb2\xc8\x85\x99\x0f^2q\xf3R\x83\xc6z\x98\x94\xfd\xea\xd2\xde\\1%\xbc\xbes\xeeq\xc6jf\xcbX\xfb\xd2;7\xa7\x921\xf0k\x0f\xd7\xfa\xd5\xf4\xad\x0c\xbf\xe9\xd6\xeb"m\xe7e\xb5\xe0|\xa9\x1b|Uy\x969\x98\x96b\x0e\xdb\x8d\xbf^i\xde\x99\xa5i\xdau\xe4z\x85\xad\x94\x16\xb7/\tI\xc4J\x06s\xd7\x04v\xab\x1d\xd6\x99\xa5\xf8\x82\xc9\xa3\xd5l"\xbc\x880\xc2\xca9\xc8\xe7;\x86\x08\xfc\xaa\xbc.\xc2\xb6v\xfaA\xea*\xcbe\xa9Z\xbc%<\xc5\x1b\xb0Nx\xc1\x1d\xeb\x1b\'R\xea?\x88I\xda\xeedl\x1f\xe2!9\x07\x1f\x152)\x94\x9c\x16\x1f\x7f\x8ama\xe1_\x0c\xd8\x05[/\x0e\xe9\xb12\x9fN Vo\xd5\xf2j\xcf\x80\xf6\x12\xda\xc4\x91\xc6\x0bnh\xc0\n\x18\xfe]\r2\x8aX\x9d\x86\x1d[=\xd5\x81\xab*X\xb4\xd1\xa3\xe0\x1c\xa8\xcf\x157\xa7\\\xf5\x99e\xb9{~\xa7q$\x862\xb2\xa4\x8c]]\x1bb\x0858yn7Q\x8fqU\xad\x1e\xfd\x04\xd2\xd8\\\x06L6\x00n\xaa\x7f\xe2\xaev\xb7\xa9h\xdfw\x94q\xfc-\xee*\x89\xe2\x8bf\xd3\xbe\xeb\xa8\x05 \x89\x16\'$uS\xd3?J\x96\xd3\xef\xe2\xbd\x81\x16N\xb8\x1b\x1f\xb8\xfa\xd2a\xbf\xba\xb1+\x8cEw\x10)\x13\xc82\x19y17\xc1\xe5M9\x11\x01\xcclr9\xfb\x1e\xf5j\xba\xbePq\x1e\x0f\xcd&\x97\xee\x8b\xca)\xfc\xaa\x18n\xdf\xb4\xf6\xabF\x97d\xae\x82Y\x17?\xca\r@\xe9p\xf5\xef\x16\xf5\xe3\x0c3\x98\x18\xe5\xa5?\xc9\x12\r\x8e\xdd\xcd\\\xa1\x8e(\xc1#>\xdf5\xe5\xab_\\\xb2\xb0\x80"\xe7\xa9\xabB\x93\xb4g\xae)\x05\x01@\x00b\xba\xdd\xf3_Bxs\xc3V\xde\x1d\x86U\x8a\xe6y\xe4\x97\x06I$l\xe4\x8f`6\x14\xd3\xb9\x90\x8c\x801\xc6)m\xd5\xe6i<\xd7\xa2\xb4\xb9\xa6\xeb\xad\xd5\xe6k\xc3^f\x8c\xd1]f\xbc4Q]\xa2\xb99\xaeJ\x86\xea+\xbe+\xd0\x05\x14SV\xb7V\xa6\xafh=\xaaW\x15\xe5s\x15\xca\x82k5=\x85&m\x8a\xf4\xa9\xe2\x8a{Rm\x0f\xb5\x18\xae\xe6\xa1\x95J\xf0E\x15"\xf0\xfcQ\\\xc1\xa2\xaa\n1\xd4\xd7E\x80\xa6Fo\x9a\xe3\xceRz\xd4]B\x9f\xc1\xa7\x0c\xf9\xa4\xb2s^\x07\x15\xd894g4W\xa2\x94\x19\xaeA\x1e\xf4\xa8\xae\xe2\x8a\x06iN\x94\x02+\xae\xdd+\xb8\xaeW\x1b\x8dz\t\xf7\xaeX\xe2\xb8\xe6\x8c\xd1N\x95\xc0\xa5\x04\xb4\xccf\xbd\xdcE\x00\x9a1O|\xecW\x86cQ\xe6C\xcdpd>\xf9\xae\x191]\xd3O\x1a\x7f\x9a\xe3\xce\xcfzf\tc\xd6\x96Ec\xdb5\xcdf\x8c\nT\xc8Oz\x03\xb5v\x90\x9c\xf3Kyx\xe81K\x00\x91\\\xc8\x14.J\xf3Q\x9a\x84\x1fy\xb7\x92\x1d\xe4\x16\x18\x04u\xcd>2\xa4G.x\xa8\xab\xbdN\xd2\xd6Q\xe6\xa9\x00\x9fK\x0eFk\r\xe3(\x12O\xc1\x97d\x8dX2\x19\x18\xe0o\xda\xba\xad\x80\xd8\xc9\xf8\x15_\xb5\x8e\xf2\xc2\x0b\x98\xaf1\x18\x88\xe07s\x9e\x84U\x87C\x81DQ\xdco\x07w1\xfd\x0f\x7f\xadG\xdd\xa8\x9f/,\x85\x99\xb9\xcf\xc7j\x9c\xb6h\xad\xad\xad\xa3\x05r\x10`{\xe7\xda\xb2\x9d7\xa7[G\xd4C\xa6\xad\x16\xc8tkl\x9c\xb3lv\xf8\xe2\xa1\xdc\xbbh\xc9\xeey\xa7\xb2\xbe\xcca\xbaTl\xda\x8b\xc6\x84\x0c\x1f\x93M\xae\xf5\x15\x93*\x8aI\x04\xf3\xd3\x15\x04\xd7!\x8be\xf3\x83\xd75qu\xd7^\xd8\x94\xb5\x94\x81\xc1a\xc5U\xb0\xd5\xcd*\xd7W\x12\xb8\xcc\xbc\x02p\x00\x00\xe2\x9e\xc7\x1a0\xdc\xcaO\x1c\x92sM"\x8c\x07\x0c\xc3\xd3\xd74\xe6y\x83\x00\x14a{c\xbd7mw;\xc6\xd2\xdc\xccd;\x05F\xdc\x9f\xd6\x98`3\xb0\xa6W,\xbb\xc1\x1d?\x84{|\xd5S\xc4z%\xbe\xa9aq\x04\x89\xb9$\x8d\x92E\xc6r\x18t5m\x8a%\x91\xd8\xbev\x81\x9f\xa9\xaen\x1c\xf9\x04\xc0\x88\n\x9eU\xb8\xce}\xbd\xe81\xbc\xb1I#\xecpYq\xc8\xc7\x7f\xb5 \x8d\xeb\xf3O]\xfb>\xf1\x1e\x9d\xae\\\xd8Ec#\x81#\x08]U\xb0\xeb\xd4c\x8fjk\x16\x81\xe2m%\x18M\xa1\xea\x11E\xbb2\xca\xb1\x16\x18\xc7\xbe+\xf45\xb4\xdb\xb9\xa4\xf3g\xb8h\xd4\x92I#%G}\xa2\xa3/\xb4\xfb(7\x19\'\x96TV\xe4l\x00\xed\xff\x00\xbdXE\xe3.\xa0\x16!\xf88\x8a\x80\x01gm,\xc7\xdf\x03\x8a\x96\xbdBT\xc1(\x0e9\xaf\xce\xc8\xac-\xae\xa4w\x8ai\x1d\xe2\x91w\xc4\xeb\xb5\xd8\x13\x8c\x8f`;\xe6\xae\x90\xd9O\x03\xd8\xdc\xc9d!1\xb3\r\xb38\x95\x00\xc1\x04\xed<\xfd\x0f\xbd}qu\xe0\x8f\x01\xf8\x8aus\xa5\xb0\xb8*AeQ\x1b\x9c\x8er\xcb\x8a\x97\xb6\xfb)\xf0\xcb\xddI\x03F\xd7~j\xa8x\xe4\x99\x98*\x80\x01\xce\x08\xcfO\xce\xb56\x9d~\xd6\xe2\xdd\x9d\xe1\x99N\xc1t\x00\xcb\x93\xf3\xb1\xa9\xb1\xf5h\xb1\xb4\'\'\x9f\x9a\xf9\xbf\xc0\xde\x05\x8b\xc6Z\xfc\x8c\x1a\xe1t\xeb@K\xea\x0b\n+\x87e\xf4F\x06pX\xe7?\x02\xbe\x8b\xb3\xfb-\xf0%\xa5\xb1\xb7\xb9\x8e\xfe\xe1\xc3\x93\xe6=\xc1\x8c\x81\xd9@\x8c\x01\xb4|\xd6\x91\xa6\xf8kL\xd0la\xb2\xd3\xacR\xda\xd6\x12J\xc4\x9d\x8bubO$\x9fz\xf6dE\xf6\xc0\xe7&\xbc\xdf\xc4\xbe.\xea\xf1\xdc\x13o9\x8a\x14\xd9\x10\x0c\x13\xf2{\xd2\x9e\xeaYdfGh\xc1\xec\x0e+\x1d\xb9\xfb\x19\xf0\x9b\x12\xd6w\xd7\xd1\xc6A\xdb\x14\xea\x97\x11\xf21\x82F\xc6\xc7\xb75\xf3\xc7\xdaG\x80\xbcI\xe0\xebd\x9e[\xd3\x7f\xa5J\xdeS\\\xc0\x18l?\xc3\x1c\xaa\xdd3\xdb\xb1\xaf\xb5&\xbe\x8e\x03\x85\x04\xff\x00Jb\xcb\xa2x\x9e\xd6\xf7O\x95\xa2\xb9\x86t\xf2n\xed\xf7s\xb5\xbd\xc0\xf6=\x08\xefU}\'\xc7\xbdf\x0b\xa8^\xf1<\xebP\xc08\n\x01\x00\xed\x9c\x8f\xefNG\xd4\xae#:|\xf2\xe0\xf2\xad\xdf\xe8k\xf3\x96\xd7Z{K\x84\xb9\x86\xd0$\xc2\x05\x84\x0c\x0cH\x0f\x07w\xb9\xed\xeej\xee\xdfpd[\xebw\x96\xc9\xe6C+\xc0\x85N\x10\xa8VQ\xc8\xc6pI\xecN\x06+\xed\xbd3\xc1\x1e\x0f\xb0H\xe3\x8f\xc3Z|%\x1b\xf1,\nw\x11\xd0\x92\xc0\x9c\xd4\xa5\xce\x83\xa5\x91\xb54\xcb//\x1f\x84\xc0\x98\xf9\x07\x8a\xdb\xbf\xfdG\x8a4&.\x9b#\xae\xae\xf2\x05#\xed\x83\\\xfc~[x\xb21\x8d\xcf5\xf9\xfb\xa9\x9d\'K{;\xc8\xede\xbb\xb9\x92p\xd0\xf9\x91*!X\xf0J\xb4gp8\'\x1d0j \xe8~$\xf1%\xdb\xcb\xa7xZ\xe5\x0c\x8d\x96[h\x1dc\xcbw\xe7\xd2\xb9\xfd+\xef\xd9\xb4}.\x19\x04\x83M\xb4\x8aD\xc8\x8d\xd2$R\xa0\xf5\xc1\x00c5\x11q5\xdc\x8f\x1c\x10]\xcd\xb7\xaeY\x8e\xd5\x03\xe7\xbf\xd0TY?\xeaX\xb8f\x10\xf4\xaf/\x1b\x9drj\x00\xfd\x80\xa6\xda\xfd\xd5p\xa8\xa5\xb1\x8c\x9ek\'\xfb*\xfb,\xf1\'\x86\xb5\xdd\x07Y\xd5\xef\xa3\xb7\xd9r\x03Z\xa821Y\x06\xcd\xac\xc3\x00\x1fW\xcd}\xd6l\xa1[8\xf7\r\xc5x8\xee\x05bv\xf1\xc3qo\x18\x9f\xd6\xe3\x04\x1c\x9e\x18\x1c\x82=\xb9\xad\xb5nE\xe6\x8f\r\xdclx@N\x0f\xbfQ\xfa\xd2"\xea+}\x0fS\xbb\x9e4\x91\x85\xa1e]#\xf2/\xa8\x8f\xb5Cy\xe5\xb9rel\xb0\x00\x0f\xa5g\xfa\xc2\x93,\xa5B\x85\x04\x9c/\xf6\xac\x97]\x82\xefG\xd1\xe7\x9a\xda\xc5\xe1\x81\x9c\xef\x94\x03\x93#\xf3\x93\xd4\x92OsZ\xfd\xdeZw\x00u\xce\x00\xedP2\xdc\xcd\x036X\x9085\xe4VW\x9a\'\x96\xe1\xe1\xf3\x12I\x89\xd2\x0e2y\xf6\xf9\xa6\xa5U,5\x121\xed_\x16}\xa0X^hsZ\xd84\xf3+\xdc\xd9\xdb\xcc\xf0\x96$\xf9\x93\x0c\xb6G\xbej\xe5\xa0\xf8}\xb4\x8d\x1dw\x9c\xc8\xf3F\xec\xca0NW9#\xe9S\x1e4\x8e\xde/\x1f\xd8\xea\xf7q4\xed\xf7X\xbc\xa8\xf3\xc2\x94,3\xcfS\xde\x96\x8bXMjMp\xc57\x96\xb6\xf7\x11\xc3\xb4.[pNq\xd8\n\xf5\'\xea\x12\\\xf4\xbbb\x10*\xb4BYX\r\xb5\xb3\x01\x8f\xb53,\x9a\xd0\x85\xe3r\xc7\xdfz\xbb[\xacm\x15\xac\xf1\x9d\xc1\x17\x82=\xcf8\xcf\xbf\xc5\x17\xfa\xabE\xe5\xa0pX\xf4Q\xd4\x9e\x80\n\x88\xd0\x16{k\x01\x1d\xcb\xff\x00\xd1H_\xc9\x1c\xeel\x1c\x11\xf03\xf9\xd3\xab\x8b3\xae\xda\xde[$\xcb\x1d\xcd\xb3$\xf6\xcf\xd8\x11\x95 \xe3\xb1\x06\xb2\x8fm\x1c2\x17y\x83F\xad\x86=\xd7\'\xbf\xdf\x9a\x8e\x06\xdb{T\x06\xb7\xab\x88!\x16\xc8\xf9;}l:g\xa9\xfe\xb4\xf7\xec\xe3\xc5\xed\xa4j\xafgv\xf8\xb3\xbe!I\xff\x00\xf6r\x13\x85s\xf1\xd8\xd6m\xac~\xd5\xb4\xb8\x92=B\xcaXJ\x9c,\x98-\x13{\x10\xc3\xad0\x11\xdf_G\x17\xdc\x90\xb4\x92\\\xc5\x12F\x01\xcc\xccH%\x17\xdb\x8e\xb5\xa3\x8b\xa7B\xd6\x9a\x0b\xa6\x1f\x07\xcd\xc8 \x1e\xc7"\xbb\x10\xcc\x80\xf1\x9a\xfb\xe80h\x97z\x06\x19#\x91\x9eO\x18\xe2\xb0O\xb4?\xb1\xfb\x0f\x10\xdc]\xeb\x1adkg\xaa4E_<%\xc7\x1cn\x1d\x9b\x8cg\xbfz\xd7t]`\x1bX~\xf7\x03\xda3\x80Z\t]\x19\x91\x87b\xc8J\x9f\xca\xac\x8b\xf7[\xbe~\xf0\xbc\xf4\xc6\x0ej\x05\x8fY|\xc4\xd0\\\xa8\x99=:r\xb8=\x88-\x9d\xd4\xd4\xf8L\x90H\xb2Fp\xcb\xff\x00\x9b\x8a\xfc\xe4\xd4\xf4\xcbm\x07S\x9e\x07WE\x9252ZLIx\xd8\x8c:6q\xc8a\x95=\xc6*\x9dm\xa9^h\xda\x97\xde\xa0\xb4\xf3a\x0c@\x8eQ\xbd\x19s\xd1\x81\xe0\x83_\x7fx\xff\x00\xec\xc3E\xf1\x9d\x91\x8c\x9d\x97h\xa7\xc8\xbb@7\xc6z\xe0\xff\x002g\xaa\xd7\xc3\xbe)\xf0\x7f\x8e\xbc\x03|\xebw\x1c\xa2\'$\xa5\xc2\x0f6\t\x07\xc19\xc1\xf8<\xd6\xf3\xa2\xf5\xd8/\xee\t/\x1d\xbd\xd0\xc6b\xcf\xa4\x91\xbeP\xf7\xfe\xd5\xa0\x87\xa8,\xf1\x84u\xd2\xe0`\xe7|\x8a\x80\xba\xbf\x17>I\x82\xc9\x94\x8cy\x8e\x00\xeb\xd3\x03\xe6\xbe\x98\xd0\xfc\x1f\xa6x\xe7\xc0\x1a\x15\xccv\xc8\x9a\x95\xb4R\xc13\xc3\xfb\xb9&\x11\xb1\x03=\x8b\x8fc\xd6\xbel\xb0\xba\x8eW\xf3\xa6\x90\xa1\x95\xfdF1\xe8c\xd8\x95?\xe2\xbe\xb6\xfb\x12\x9f\xef>\r\x90\xfaG\xff\x00\x98\xdc\x1e}\x9bi\xa8^\'\x96[[Ky\xad\xcb#Ep5\x1c\x9d\xf2\x0eA\xa4\xf5\x19\xa4\x8e\x04\x91$*\xde`\xdcm\xc85\x94h\xda\x07\x83c\xb4\xd7\xc6\xa1\x1d\xdc\xefg\x13\x92\xd2\x03\x01\x12\xab\x00W\x9c\x84\xc6@\xe6\x9e\xeb\x7fdz\xc6\x9fem}i<w\x11\xc9n\xb3y\x01\xc9\x93\xcc\xc7\xa9\x14\xe0\x03\x80A\x1e\xf5\xbfx\x83\xc2\xf6~!idWH.\xde3\x0c\xb2\x14\x12$\xd1\x9e\xd2.FH\xec\xddh\xbb\xd15MKO\xb4\xd1L\xb1\x9b\xf8\xa1I!h\xc9X\x9cF68bG\xa4\x11\x8eOCYu\xf1<\xef%\xa8\x81\xb5\t$a*H\t`H\x18\xc1\x00m\xb7j\xabN\xady\x1b3+\x16$\x8ew\x07\xe3\xe2\xb1\xdf\xb1M\x0bU\xb0\xf1\xf5\x9b\xdc\xdb\x94Y-n\x95\xf72\xb1\\G\x9e9$\x10E}\xa8"H\xc6\x0f\x1b\x7f\xcdS|\'\xe1D\xd0\xf1wtb\x92\xf4\xc3\xe4\x86A\xe9\x8dN\x0b(c\xcb\x12G&\xac\xda\xa5\xecv\x90\x12\xce\xb9 \x9f\xa5X_u\x15\x8a\x17\x9e]\x02@\x06q\xc7\xb0\x14O<\x97n$\x91B\xb6\x9c`UkV\x94\xb1\x91@\xc0\xc9\xf9\xe9U\x8b|\xfd\xf8\x9cr\xa8\x15\xbf2O\xf8\xaf5\r`\xc8\xccc \x83\xc1\'\xbe)-2U\x91\x89\xe0\xb3\x90HQ\xdf\xb5b\x8fQY|\xc6r\xd9$\xeeF\xd4\xc61\xedVx\xce\xd2\x0eH\xc7\xbf\xebX\x07\xff\x00\xcc~\x8a\x07\x8bt]H\xc7\x88n\xec\x967ld1\x8d\x8f8\x18\xc9\n\xc0\xd6\xfc\x13\x00\xf5\xc8\x00\x9f\xad+\xe2\r\x0fJ\xf1\xbe\x89\xfb\x1fU\x02)\xa3\x1b\xadnJ\x861>03\x9e\xa3\xb1\xf7\x15u\xe1\xbe\xa4\x96\xd2\xcd\x1c\x8c\x06\xb6FRv\x07N\xa1\xa4\x9e\xc4\x86\xdb\xe9S\xac\xee\x05\xb5\xc4r\x90H\x19\x04\x0fc_\x9f2ir\xc5q\x04O\x04h\xec\xc1\xc20\xd8\xeb\x8c\x82\x186\x08\'\xa8\xfc\xabt\xf0\xcf\xd9\r\xae\xab\xe1K+\xeb\xcb\x99\x11\xef\x1cMoi\x91\x1a\xbc!\x87W#(\xce\x01\xdazt&\x9a\\}\x98\xf8\x85\xbcQ\xa5\xe9\xb7\xf6\xb3$\x97\x17\x91\xc6oUKE,=\xdd_\xb1\n\xbct\xf9\xaf\xa8\xef\xa1\x8c\xacqB\xa0E\x14a#Pp\x15W\x85\x1f\x90\x02\xb6\x17\xddW\xf0\xfeY\x83N\xa2\x01U\x7fV\xdf"\xae\xef\xfa\xc6\x9bx\x05\xb3a\xd9\xb3!\xc7\x00v\xfb\xd7\xe7g\x8c4\xf9|9\x7f\x1d\x9c\xe6\x7f0B\x8cR\xe1JH\x8cF\x19\x08 p\xa7\xa1\x1c\x1e\xc6\xb3I\xe6\xb8\x92@}j\xe7\xf0\xb2\xf5<\xe7\x80;\xd7\xe9\x8e\xbb\xe1m\x17\xc5v\xd1[\xeb\x1ad\x17\xcb\x16LfL\x87\x8f<\x1d\x8e\xa4\x10\x0f\xb6q_7\xfd\xa0\xfd\x86\xcf\xa5G&\xa7\xe1\x9b\xc7\x86\xd0c\xcd\x8aY\xb6\xb5\xbb\xb1\xdb\xe6y\x98\x1f\xba9\xc1\xcf\xe1\xefZ\x0e\x8f\xd6m/\x99<\xc8\xbc\x89[\x00\x01\xba\x92=\xb3PGU\xf3\xc8C\x95c\x9ex\'\xeb_)}\xfe\xea"\xea\xd21\xc8 \x86\xe4\xf3\xf5\xefZ\xc6\x87\xa1\xebz\x8c\xf6\xd7\xd7Ww\x1ee\xecn\xd0:\xa8\x1b\xde4\x0eT\x15+\x9c\x83\xd4t<u\xaaL>\x17\x0fey;\xea\xb61\\\xd9\xbb\x89m$s\xbd\xb6\x02r\xa4d1=0?3N\xf4\x7f\x16_\xe9\xc6\x1b\x19n\xda(\xe2\xde\xa0\xee/\x18W\xe4\xa0Q\xc0V\xef\x8e\xb5\xa3\x924@\x1c\xc0[pp\x06\xe7\x04f\xac,\xae$\x8d\xca\xbc\xe5\x03\x1cd\x93\x81\x90~\xdf\xadk\xb6\xde\x18\xf1&\x8d\xf77\xd3\x9e\xda\xfe\xe2\xea\xd9\'khf2\xbaz\x8f\xee\xd0\xe3\x05\x862@9\xedP&\xefV\xd44\xb9\xb5Y\xf4\xc9E\xa2\xccby\x8b\x86\x06F\'8\x1dO=N8=jF\xdf\xed:]I\x82\xdc\xbe\x9f9HB\xba\xce\x9b#`\xa5v\xe0)\\\xb2\xed\x00\x1e\xb8\xa6\xc9\xa6\xea\xfa\xf4\xb7Q\xab\x12 oX\x80zU$%\x82"\xaf\n\xb9\xce1U\x1dG\xfd\x1214\xda%\x8d\x82\xaes\x95\xdf\xb6\xe7>\xf5n\xfd^\xee\xce\xd1\x9ak\x941\x8eJ\xe1\x86I\xe2\xa1t\xfb[\x89\xae\xf1\x1d\x8d\xc4\xc1\xf7ac\x0cA#\xbe\x009\xfaU\x9f\xc3En5\x11\r\xa6\x98.\xf5)\x8b\xa5\xb2\xed\r\xb2G\x18\r\xb5\x81\xdc\x17\x93\xc9\xc7z\xbfxg\xec\xd2\xf7S\xb0\x8ex#\x92K\xa1)\x02\x1d\xe65\x8dA\xe4\xbb\xe4m\xc5}\x15\xe0\xcf\xb3\xfb\x0f\x0bi7,m\xad\xce\xa1pI\x9et\x00\xb0V\xc6"\x0e@%x\xe7\xdc\xd6vn\xac\x8b\x83l5J\x14\x95;i\x07\x9fl\xd6y<D\x0cr(\x80\xb0\xecI\xdb5\x82\xd9\xfd\x895\xed\xd7\xde\xf5\xfd\\ng2M\x05\x98\x13L\xe7\xd8\xc8@\x8d\x7f,\xd6\xc1c\xa0i>\x14\xd3\xc6\x9f\xa4i\xa9e\x14\x8b\xfb\xd6\x04\xbc\xb2\x7f\xfb\xc9\x1b\x96\x1f\x1d>*\xf7h!\x82C\xbfh\xf4\x9e\xbd\xb0\x7f\xefPz\xb5\xe6\x9dp\xf3D\'Eq\xc6A\x19\xc7\xf8\xaa\x07\xba\x92\xf62n.\xc1a\x92c\xce\xd9\xf9\xcf&\xa8\xae\xfa\x85\xc5\xc9%\x9fo\xf6\xae\xc3\xf4\xa8}\x16[9\xdee\xb9\x9671\x92\x883\xea\xca\x9f\xcf5\xa8\xd9\xaa\xb6\xd6\t\x14q\x85\'\xb1n\xd8\xc8\x15\x81]\xc9\x1d\xbd\xc0KK\xa5Y\x879R9\\\xfe\x13\x81V\xdd\x17X\xbb(\x01\x938\xe1\xd0\x9c\xed#\xb6{\xd4hz\xdf\xe0$\xf2\xda \xe9\xb7\x07\r\xf7=\xc5BV\x15\xa2j:}\x8c\xb2\x82\xb1\xab\xe5\x0fc\xc9\xc8\xe4b\xbf8\xbe\xd1\xfc+\x15\xa7\xda?\x88t\xaf\r\xda\xcfp\xa9y\xe8\x86\xde2\xe5\x1d\xd43\xc66\xe7\x85bE~\x94\xe8R\xad\xc3\\\xdcHT\xfd\xde\x16\x95T\xe3\x04\x8f\xf8\xac+\xc4\'\xff\x00G\xdc\xd9Zi\x16\r4\xfa\x94\x8f5\xc1\x89I\x9a\xe2y\x1bs;\x15\xf56I\xe0t\x02\xada\xeb"\xc9\x9e\xea\xde\xddd{\xcfLp\xaf\xa4\x12\x9bj\'z\x92\x97F\xcd|\xc0\t\xc8\xc0\x02\xbe=\x93\xec\xcf\xc5\xda$0_j\xbe\x1c\xbc\x8e\x02\xc4\xc90\x8f\xcdX\x80\xe7\xd4\xa9\xb8\x82}\xd8`Wzr\xdc[K\xaa\xdei\xd0\xacp_\x13o\x08""1!\xe8F\x06\xdc\xf3\x82\x00\x02\xbe\xca\x9fS\xb8\xd0.\xad\xa3\xd4\xfc\xcb\x1b\x99\xa2\x12,N\xd9\xdc:\x10\x18d\x1c\x1e\x08\xedU}o@\xf0o\x89\x12[\x9d-\xac4mt\xa3\xaf\xde\x1e\xdb|\x12$\x99W\xdd\x1e\x08W\xc1\xe1\xd4g53\xa5\xf8\xdaG\x9dm\xfa\x95\xa3\xd9\xea\x7f\xfd\xe5\xc9Q\xdb|\xf0?j\xb1\xb3\xeb\x90\xe7M\xc4J\xa7\xb1\xc7\x1fZ\xf9+I\x11M\xab\xb0\xbdXQ"\x8e\\I:\x84\x86I\x19:3\x1e8\x03(@\xcezU\xef\xc3\x96\xba\xb6\xb7wm\xa4\xda\xb1\x9e\xe3S\xf2\x96iUD\x88\x06\xe1\xc6{"\x85\x1d\xfbW\xd0\xf6\x9a\x17\x82<\x11\xa6\xc2u\x9b\x18\xb59%\xf2\xf3wwj&y\x99@U\x8e\x149\xd8\x83\xa2\xaf\xebS\x1e\x0fo\x0fxyn\xbfgh\xcb\xa7\xdb\xc91\x96(\x1d\xc4\xb7\x07\x04\xff\x00\xa8\xeb\xd0s\xc2\xe7\x02\xa6\\\xf8\x9e\xd2a\xe5\xc1\x1c\xab\xbb"9\x03\xd5\x91\xb9\xff\x0055\xba\xf0H.\xb4G\x9c\x9fC\x9d\x81\xdf\x1c|Tm\xcf\xd8\xee\x89g\xa7O\x1cZ\x85\xc7\x99\xe4\x81\xe6\xca\xa0F%\xcf\'j`\xfa\xb1\x83\xf1_;=\xce\xa1\xe0Mb\xf0I\x14\x11\xddZ\xbb\x05\x8aF\r\xfe\xa0\xe1\xd4\x9c\x8e\x87 \xd7\xda\x86\xf6\xe7Wx\xeeM\x9e\xc8\x14z\x0b\x1c\x06\x1f\xces\xd7\xaek7\xfbO\xb1\xf0%\x8e\x9a\xfa\xfe\xbb\xa1Ew,*-`\x19di\xe5pv\x86a\xc0U\xc6ry\x1d\xaa\x8a>\xa8\xa7\xa8\xb8\xd6^\'u\x8e\x14A\x86iA\x1f\x97\x8d\x87z\x8d\xd3z\xfd\xdcri\x95\x9aUm\x86\xc3#?^\xd5\xf2\xa4\xb7\x97qjp\\\xc5w\x04\xf7\xb7\xb2\x9d\xa9\n\x07\xf2\xfc\xee\xc1q\xb7\'w\x00w\xaf\xa6t/\x05i>\x01\x85L\xae\xf3]\x03\xe7\xc6\xf7!X\xdb\xb1\x1c\xec\x00\x95\xde0r\xff\x00\xa5|\xed\xf6|\xb6r\xfd\xa5\xf8b\xcd&\xb6\x9dE\xd7\x99\xba\x1ec\xde\xa8dE\x04\xf5\xc1\x00\x1a\xfb\x02\x7f\x0fO\xe2\x7f\x14YG8\xddii\x06$N\xcd&r\xa3\xe9\xdc\xd3~*\xeaw\xd63\xdat\xf8\x9eH\x8c\xa8d\x91\xd4z\xc9\xce\x95E\xf9$W:\xdfQ\x96b\x90\xc0\xe4\x06\x1b\xe0\xe0\x10}\xe9\xd7\x86\xf4k\x8d]\xa2\xd6o&\x97c\x12aF\xca\xe7?\xc4{\x9c\x8e\x95\xa5\xc1\x146\xed\x89\x00$\x01\xcd?\xbd\xd3\xfc\xab\x04\x8a,(E\x07\x1d\x06j\xb6\xd33\xe3~K\x859\xc7\xf9\xacGX\xb5\x97\xa4\\\xc2\xf7\x10y\xb3\x94\x0e\xa5\x8eP\x13\xf9\x94|\x8f~\xf5S\x02\x04]#os\xdc\xd5\xb6)c\xe10:pG\x1d+\xdb\xbdZ\xdbH\xb6{\x99\xb0Bt\x03\xa9\'\xa0\x15TK\xd2\x81pp@\xeaMd\xfa\x97\x8d\xec\xf5\xedn{\x01!Hm\xce\xdbi\x1b!$~\x8c\x7f^\x07\xbdJ\xb1\xf1%\xc4\xb1Lm\xe1&HP\x1d`d(\xfb\xf3\x8ay\xd4\xa8\xdb\x93\xc5J\x1dBg\x9f\xd2\xb8,\xd9\x03\xaf|\xd4\'\xdb\xaf\x87\xee\xbcZ\x96\xbaZM"\xc5o\x18\xb9\x968\xc6K\xc8x\x1c\x7f\xb4g\x1fZ\x9e\xd1\xec\x9emZ\xc6\x17\x04\xee\x99A\xfag&\xaf\x93j6\x8f\xa9]K.\x8b/\x98\x1c\xa2\xcep\xcb \xce\x00\xc7j\xef\x87&\xb4\xb5\xb83Mw\x15\xb9\xf3\x14\xc4\xef\x9c\x16\x00\x83\x8c\x03\xb8\xd5P\x8f\x9a\xa8t\x93\x9dC\xed\x8a\xfc\xda\xbb\xfb8\xf1\x16\x9f8\xb7\x92\xc9\xe3\x84\xb6\xe5v\xcf\xa8\x1e\xd8\x19\xe6\xafp}\x9e\xea\xf6rZ_M\xa6\xf9\xd6\xb0\x042oR\xf1g\x1f\x85\x80\xe7\x03\xe7\xad}\x95&\x95\x06\xa1r]\xad\x16\xdd\x0b\x82Ps\x92*\xfb\x06\x8f\xa3\xddY%\xbbZ\xc1*\xed\xda\xc8\xea\t\xc7\xb15\xbb\xe9\xbe0{\xeb\xc9\xe1\x8aX\xcf\x97\x1f\xa2em:\x9f=\x83\x03\x9aT\xb2\xdf\xdcA\xa1\x9c(\xc6\x927\x19_\xed_+\xf8\'\xc40\xe9lL\x93+\xc8HR\xc4\r\xdc\x0cc\xe0\x01\xd0\x0e\x05l\xf6\xba\xea\\\xb2\xc6&\x0c\xacx\x03\xe6\x98\xeb_d>\x1f\xb8\xb9yl`6\xb27;A;A\xf7\x15IM6\xefI\xd5SM\xb9WUe&\t\x0f_OQ\x9e\xff\x00\x15\x85\xeb0\xc9wuwtg\x9c\xcc\x18\xb4\xc5\x9b:\xbd\xce{\xfc\xe6\xa0\x04\x96\xd4\x01\x81\xa3;\x0cb\xb7\xbb;hnl\xa6\x87\xab\xc8\x87\x8c\xe3\x82+\x8b]\n-;G[\'U\xda2r:\xfa\xaa\xbf\xe1\xddFH\n\xc6\xee2\xa3\x83\x8eM]\xafn\xb6\xc4\xb2.?x\x06\x01\xe9\x91\xd4V\xa3\xc2\xbdV\xcaK\x11\x14\x85U\xe1R\x02\xf6\xd2O\xef\xbdI`\x8e\xba\xf1\xdb\x15\x86\xeb\x9aM\xbcs\xca\xb1\xa6w\x0eH\x15\x01f\x89m\xe6\x07\x05pq\xfav\xad\x83S\xb7\x17L\x92\xc7\x18-\xb8\xe4\xe3\xb0\xac\xf7T\xd2\xe6H\x1e\xe5[,\x1c\xe4\x01\xf3U\xde!\xb6a\xa7@%\x1d\x8b\xea\x1c\x05\xc5B\xf2\x86\xa69\x1bqQ\xbfye\x05\xbb\x11\xd2\x93\xfd\xa1\x1e\xd6\x0c\xa0\x12p\x0f\xf8\xa8\xb9d\x90\x0eT\xd7Ze\xab\xde\xdeyj\xa4\x9f\xc5\x8fo\x9a\xca\xf9\x11\x84fn\x06\xfbS\'\xcc\x0c\x17\x1b\x9e+@\xf0\xf5\x80e\x17\x123*\xe7)\x1erq\xf2k\\\xb0\x82\xe6KT\x96&\x8dP\x1ce\x9b\'"\xa8\xba]\xb8\x8a\x18\xc1\x19\x00\x01V\x81"\xda\\0\x926\n\xcb\xb6E^:\x0e\xbfQR\xbc2\xb6\xb3_\xcfs}\xa8C\x95@Q\x8a`\xbeH$\x81\xc6\xdcU\xd4h \x89\x00\x1b\x9d\xcdK\xdf\xe8\xf2j\x1at\xf6\xf7k\xe6G(\x07p<\x0ct#\x15\x8e[\x8dGC\xd4M\xa4\x90I4\x05\xbfw*\x8c\x82>kM\xd2\xb5+\x81$\x82;\x92FN\x019\x04\x1fqIM\xa7\xcbuy+\xb9U\xe8N\x0e\x07\xe5W\x1e#=?\xa9t\xdbo\xc0\xf4\xe9\x9ea!\x8bNCm\xb9\xc9nO\xde\x9dE\xd6\xca\xda\xb4\x91\xde\x9di\xe2\xde\xee\xdc\xc9,\x8b\x13\xa69n2*\xc4u{(!X\xe1>k\x81\xc2\xafO\xd6\xa9\x93-\x95\x92H$\x99X\xe0`\x03\x9ej%\xb5\xcbH\x11\x82u\xcf\x04\xfbU\x07N\xf1\x07P\xf0\xea\xb2[Z\xda%\xd4\xd1\x04\x9e|\x19$\xc2\x13\x8d\x87\xa46?\xe6\xac\x96@@\xd4\xdb\x0e3Z\xe5\xb3\xb4\xd0G#c,9\x03\xde\x96 \xd4v\x84]\xb4\xab7rr\xe9\xbb\xf5\xa9|f\xbe\x82\xe9\x13\xcdu\xd2\xbal\xf3\x7f\xeeKk\x13\xbf\xd5\x94\x13\xc5;M\x89\xc5t\x1c{\xd7N\x94\xdd\x97\x06\xac7\xae\xf3N7W\xa0\x8ai\xb8\x8aY[5\xda1K\x9a\xe0\x9a\xf3&\x81\x9a+\x94d\xd7jk\xd0\xa0\xd7aEv\x8a\x00\xa3\x15\xd0\x18\xa0\xd7i5\xc6+\xd0\x05\x04\x8a\xf34Q^\x90;\x8a+\xcc\xd1E\x15\x90\x1d\xed\xc9\xae\xe3SJ\x84\xcd*\xa1F8\xcdW\x81R\xc9\xae\x94\x1e\xd4\xa0\xcdt\xb9#\xa5*\xb1\x1e\xa4S\x80RMp\xa0\xd2\xa2\xba\x0b\x81\xd2\xba\xdaM*\x93@a]rk\xc0\xb8\xed^\x95j\xedv\xb88\xaf@\xa3\x15\xde8\xaeb\x8c\xd7\x06\xb8\'\xda\xbb"\x80\xa6\x8a)\xb9RMt\xb1\x1a{\x1c[\xbbS\xa1\x12\xa7&\x8f/=\xa8\xd5\x8a\x8f\x8e\x03\x9c\xe2\x9e\x04U\xedCH\xab\xde\xa3\xae5\x18\xa1\x07,)Z@\xa4\xea\xa9=\xca\xbdx\xa6ww\xd1B\x84\xe4qT\xbdC\xc4\xf1E\xb8y\x80U2\xf3\xc4\x93\xdc\x12\x91d\xe6\x90\xd3*\x0cWDl\xd5f\xd5\xf5\xb6rU\x1f\x14\xa5\xbd\xd3\xdf\xc7\tt\x05c\x1c\x8cq\xc7L\xd5.\xd6\xd6\xf2\xeeEg\x07\x04\xd6\x87ka=\xb5\xa4k\x81\xb5\xc8\xdc~+#\xe3\x08\xde\xeb\xa1\xdc\xb4i\x99#*\xc8}\x8e}\xbb\xd4\x88\xa3\xd3"\x0eu\x1c`Q\xa6\xa0\xbd\x92w\x9eG!N6.\x14c\xeai{\xab\x89U\xbc\xe8\xb0L\x1c\x01\xd7\x00w\xae\xcf\x95\xa7\xc0T>\x0c\x99en\xe75R\xbb\x97R2:d\x03\xf8\x91\xd4c8\xef^}\x11\x9e\xc2\xd6\xda\x06S\xe6\xb6ZY\x14\xe5\xb5\x9d\xd4\x13\xcds\xae[M\x16\x86\x19\xf2\x00\x01\x06\xc0\x03\x8d\xf8\xab\x04\x12\x8d@H\xf00\x12\x0c\xf9\x89\x9f~\xe3\xe0\xd2\x13iw-\xb7j\x85 \xe79\xae|\x1e\xebuyx\x1a\r\xb3,>\xb2\x06\x15\x86\xe1\xc8\xf6?\x15\xa4%\xb4M\x1a\xb3&{s\xed\xf1W}7\xa5\x0e\xb1m\x1c\xcd\x85\x7fQ$~S\xa5\xb1\x9f\xbfz\xcc\x9c\xd5:;9\xe3\x8b\xd4\xcc\xc0\x81\x9e\xc3\x8f\x8a\xe8\xc6\x99\\\x83\xfa\xf5\xa9\x9b\xb6B\xc2%\xfe\x13\x93\xff\x00\x15\xe40( \x91\xc5[C\xd3\xc7\x99\xa1\x08:p\t;\x81\x8ao\x19\xa8\xa7\x82S\x80\xab\x8c\xaeA\x1c\xf1L\xcd\x91,\xae\xc5\x8a\xc6w\x11\xf5\xe2\xac>QBr\xac\x00\'\x91\xcf\xa4\x9e\x9cS\x94\xb6\x1c\xe5p3\xc5"n\x9d$\xecW,=\xc1\xe0\x1e\xd4i\x1e\xd5_\x06H7\x05<\x11\xea\xcf#\x1e\xdc\xd5oX\xd4\xec\xecT5\xc2+g$(\xc6qWK\xf1\x15\x9c[\xa4%\x90\x0c\xe0\x0eG\xd2\xb0\xfdvq\x7f\xa8\x88Q\x8b\x17q\xc1\xe89\xaa\x0e\xa1+\xf4\xcf.\xdf\xcc\xd5#\x12B\x13\x90\x8a;\xe3\xe7\xb53(<\nQf3\x99.\xd2"\x8a\xdc&8\'>\xff\x00A[7\x85,\xa2\xfd\x98\xb7i\x1a\xbc\xd3e\x1d\x8f\xb2\x1e\x9f\xadg:n\x89w\xa8\xbc6\xd6\xc8\x00Q\xb9\xcb~\x15Q\xc1l\xff\x00a[\x97\x87\xac\xe0\xd3\xb4\xe8-#\xc9X\xf7e\x8fV9\xe4\x9f\xa9\xab\xfe\x85m%\xc2\xebrU<\xbc\x07#\xf9\xb6\xce?Z]\xbcXbH\xa6\x97\x16\x81\xa2\xcb \xc1\\\xed#\xa1\xaa\x16\xaa\xbeS\x15\x07\x18\xe4\x8fj\xd5/\xf9@Tt\xe7\x15\x92\xebs\x08\r\xf4\x8c?\x01b;\xfd\x05b\xfcq\x1aC<1\xc65j`3\xef\xb5N\x1b\x03X\x9f\x8b\xb5\xcb\x89/\xbe\xedm\xa8}\xde\x18N&UNd~\xe0\xb0\xec=\x85D\xfd\x9b\xad\x8d\xbf\x8bM\xcc\xd7\x1eK\xb2\xc8-\xa1<+\xbc\x87\x1bI\xf8\xce@\xeek\xcb\xeb)$\x91\xdd\x93\xd5#\x16b}\xcf&\x90\xb3\xd3[\xccW^\x19X\x10\xc3\xb1\x1c\x8cR\xe0\xf2 \xe9\xef\x02>\x8dQ\xe9,\x00\xc9>\xe7m\xfe\xf5\x03K\t51$\xfbW\xd3\xa9\x03\xc8@n8\xe4\xe3\x92~\x86\x94[Q\xb4`\x1c\x80A\xdd\xces\\\xe8\x17\xff\x00\xb5t\xe8e8\xf3\x94\x05\x99O\x1e\xb0:\xfd\rL\xf9G,y\x1c~\xb5[ki\xac+\x02[\x9d\xcf\xfev\xc5L\'\xf7\xaaU\xfe\x9e\xe12\xea\xa0\x03\x95A\xc8\xaa\x8d\xec\x05dB\x0f\'#\x1fQZ\xb5\xe5\x99\x9a \xe8\xf8\xe7\x04pqT\xbb\xbb\x12\x19\xf22\xd9\xeb\xdc\xfc\xfeU\x0e\xff\x00\xa7\xcba22\xc6\xe67\\\xab\x1d\xc1\xcf\xd2\x93\xb3}sP\x96\x07l\x83q\xe3\xa5j^\x12\xbc\x12\xc1sb\xe4\x15e,\x99\xec{\x8a\xcc\x92\x17\x89\x81\x00\xfb|f\xac\xda\\\xb3D\xeb*\x10\xac\xb2n\x078\xa9\xfd\x16\xfc\xc72!R\xca\x03\x06\\~da\x82\xa7\xechd*CT\xc5\xc3\xb47jH\x19\x05\x87?\xa5W5U\x95\xcc\xa5A\xdd\xdc\x81\xedV\xfd@\xc3p\xd0](\x01\x1d\x81q\xd7\x07\xb8\xa5\xef\xec\xad\xd1"0\xaf\xa1\xd7\x93\xedT\x91\xf4\xc9\x95/\x91nc\xf2\xec\xe6\xc8B\xdb\xba\xb6\xca\xe0{{\xfbP\xeb\xaf<\xef\xde\xbeL\xfbL\x90Xi\xd6\xfa\x8c\x91\xef{;\x94\x0c\xa3\xf1\x18\xe48?\xa1\xc1\x15\x9c\xe9\xde,\xd0b\xbd\x99\xe2\x90[\xad\xd4@\xcd\xbc\x15\xfd\xea\xf4\xcfl\xe0\xe35\xf5?\x8a|5i\xab\xc2\xe95\xacr\x86FF\x88\xff\x00\x10=\xfbr+\xe2\xbf\x19}\x9cj\x1aE\xe3\xb5\x92\xceav9\x8d\xb2Y~\x84\xf5\x15\xbe\xf0\xac\xdd+\xa8Z\x0b+\x9b\x86\x8aQ\xabI\xce\x14\xa9\xc1\xc7\xd8\xefLG\n\x82Q\xc9\x1e\xc7\xb6+\xe8\x0f\x08\xea\x16\xba\xfd\x95\xd6\x91.\xa3\x19x\x1d\xae,e\x88\x83\xb6\'8*\xc3\'8n}\xf9\xaf\x1a\xe6\xefD\xd4\xb0\xc3l\xb6\xf2l\x95s\xc3\x0e\xe3\xe8Ee\x1fd\x9e\x01\xf1P\xf1&\x9f\xa8Fd\xb7\xb7\x8bw\xdedu\xfd\xdb\xc6\xdcyj{\xb1\xfe\x95o\xf1V\xb3$\xfe#\xd5f\nZ\xdc\xcc\xa18\xe4\xa4@&s\xf3\x8c\xd2/:}\xbau\x8b\xabKk\xb8\xeeb0\t\x1c.=\x0eN\n\x9cw<\xd2\x96\xdf\x12\x10\xad\x91\x8d\x8d^\xae|gcr\x97\x11\xbe\x85\xbc\x1c\x85\xdd.\x06\x07\xf3q\xc7\x157\xe1\x0f\x0e\\I<:\xf6\xa1g\x1d\xa7\x97\x1b\r>\xcd\x10 \x8d_\xac\x84{\x91\xd3<\x9e\xb5\x97\xe8\x0f\x06\xa9\xe2\r\x16\xc5\xcec\xbb\xbd\x85%\x1d\xca3\x0c\xf4\xf7\x1d\xebv\xf1\xbf\x8bm4W\xb8\x82\'Dd\xfcl\xdc,~\xc3\xe4\xfc\n\xa3\xeaP\xcbf\x90\xd9\xd8\xc3\x89.\xb2\x1bv$\'\x04\x8c\xf1\x9c\xe2\xbaQb\xd4\xf2m\xa4\x8c\x0cri\xae\xb3|\x90F\xca[-\xd8S\xcb{c\xa7E\x14d\x91+\x00\xf3\x10\x7f\x88\x8c\xe3\xe8:W\xcf7^7\x9a{\x90\xdb\x9b\x06@\x109\xc6Nx\xc2\x8a\xfa+_\x94Cs\'c\xbb\x04U]\xff\x00K\xb8\xe9\xe9e\x14\x83\x1ev\xb2~J\xe3\xfc\xd3p\x13!\x92B\xa4c\x00}\xeaj[9\xee\xf4m\xd1J\xe9#\xab\xede$\x10A\xe3\x91U}\x1fW\x97s\xda\xdcJ\xec\xc3\x87W9\xcfn\xf5\xab\xf8}a\xbe\xf0\xbe\x95\'\xa7&6RG\xba\xb9\x1c\xd6?\xe3\xdb#\xa1N5h\xfd1+\x838\xf8\xc7==\xf1P\xd2\xd9\xa2\xb9\xfc\x1c\x84\x7f\x1dU\xe1e\xff\x00q\x00\xe9\xa5\xdd\xc4\xe1c\x9a<\x926aR:\x9f\xd9\xf7\x83\xb5\xc8\xe4{\xaf\x0fY\x97q\x93,\x08 \x97\'\xb8h\xf1\xcf\xd75\xc7\x85<\x1fk\xe1k\x1b\xad?J\xbb\x94\xc7%\xc3L\xb1\xdd0\xc8,\x00\xda\x1d@\x18\xe3\xb8\xa8\x8d\x13\xed\'\xc3sB\x82MZ\xde5\xda\x08\x0e\xfbH\xfa\x83V\xd85\xfd\x03S`l\xf5\xab\x19X\xf4T\x9d7\x1f\xcb9\xa5=\xcf\x88\xac\xd5\xad\xee\r\xd3@\x18\x1d2\x06+\xb7\xc9\xe2\x94%\x12\xc7\xa4\xb3\x01\xddI\xc6\xf5;cct\xd2\x08\x84#\xce#/\x928\xf7l\x8c\xe4}*\xedi\xa7%\xa48\x03\xd6\xdc\xbb\xe3\x96?\xf0;\n\xa5\xc1y,-\x1b\xef)$|\xc5"\x9e\x87\xdb\xe4\x1a\xbe\xdbj6\xfa\x95\xa3J\x14\t\x13\x0b"{\x13\xed\xf0kA\xd0.l.|\xdc\xfanQ\tDc\xb6\x9co\xa4\xfb\xfb\xfcR\xa3U\\\xe3zgy}kc\x0c\x92\xcf*\xa2\xa7\xe2,qY~\xa3{.\xad#\xca\xae\x04\';\x14{|\xe2\xb2\xbf\xb4?\xb4+MOW\x9a\xca\x1b\xa0-l\xa5(\xa1N\x04\x8e\xa7\xd4\xff\x00#\xb0\xa8-\x0f\xc6)\x0c\x88>\xfa\xa2"=JXeO\xc6}\xe9\xeb\xdb\x1b\xeb\x90\'h\xb2\x17tB\xa4\x0c\x1e\xff\x00&\xa4\x18\xc9^\xe2\xb4\xab\xd1*\r\x8b\x82>z\xfc\x8c\xd4\xa6\x99v\xadp<\xa8\xc0b2P\x1c\xed\xf9$\xf4\xf8\x15[\x7f\x10\xe97h?\x7f\x18*7aNF\x07\xb7z\xeb\xc3\xd7k,\x93\xc8\xac19\xf3\x07\xff\x00q\xe0~C\x15Mu\x0b42\x1f)\x93\x18\xceF74\xd1\x8d\x90o\xef[\x0c.\xb3*\x11\xd0.\xe6\xc8\xc1\xcfa\xfehV!\xc9\xe9\x9e\x95\x01gq$o\xb4)1\xf0O<\xf3V\x88\xd3y\x8d\x82\xf5\x04\xe4\xf4\x15\xcb}D\x15a\xea\xd8\xe7\xdf\xb6k\xa1\x87cR\x10\xde\\\xa5\xac\x88\xacwmb\x8b\x8d\xde\xae\xd8\xcfJ\xac]^"\xa4n\xe5# \x00\xe8\x18\x11\x9c\x7f\x8a\xb2\xa4+\x9e]\x99q\x92\x14c\xbf@k5\xd5o\xd1\xb5\xbdn\x1c\x82\x90\xde\xc9\x1a\x85\xc0\'\xcb8\xc9#\xe6\xa6\xf9\xb3-\x84\x92;\xc9!\x8aU\x8dApB\x8220>qN\x9c\x90\xb8\x02\xac\x11]\r\xd8$\x90O\x07\xfe)\xb7\x89\xd6\x1b\x8f\x00x\xd5\xfb&\x912\x91\x9ev\xb0!\x88\xeb\xce:TlB\x19\x9d\x03\x96\xda1\x9fW\x03\x8e\x9f\x9fz\xb3\xad\xac7\xfaN\xa9\xa5\xbb\x0f.\xfa\xc6[un\xc1\x99H\\\xe7\xb78\xaet\xcf\x10\x18o\xadRL\x04bG\xa8\xed\x92=;\xfdk\xab\x16\x18?\xfbH?\xa5|-\xa5i\x1e\x19\xf1\x03=\xbb\xee\xb1\xb4\x827\x96+\xd7E\x12\xcd\xe5(%\x1c\x820\x1b\xf0\xa8\xeb\x93\x93T\xdf\x1a\xf8WC\xb6ky\xb4+\x9f\xbc[\xa5\xb25\xcb\xa8bcr\x7f\x0bn\x0b\xcf8\xcfBi\xe5\xfe\x8et\xdf\xbf\xd8_[\xf9\x17V\xb3\x10\xbek2\x90T\x90\xca\xcb\xdd\x8f\xcf\xe5\x9a\x9c\xb0\xd05\xcdx[\xa6\x8d\xa3\\\xb8X\xcb<\xa4\x00\x19\xba\x10\x19\xb6\x8d\xbd\xc0\xcd{\xdb\xf5H\x12\xd7YXU\x8f\x0e\\\xe7\x9d\x87qZ\x19d\x8d\x87\xf1&\xc4z@\np\x07\xd7<\xd6`t1\x1d\x8d\xbd\xfb\xa8\xc7\xde\x19\x1a6]\xa7\xca\x1d\xddq\x80\xcd\x9e0k\xeb\x1f\xb0\x1f\x0c\x08\xfc\xdb{yVF\xb9g\x9aI2\x1bj\xe0m\x19\xcf,\x07_\x9a\xd8\xfe\xcb<=v\x9e\x00\xb4\xb3\xd4m\x84\x17P^\xdc\x07\x8d\x95[\x01\x982\x93\x8c\x83\xd7\xadXm\xf4\xbb-6\xf1\x8a\xe9\xf6\xf0Hw~\xfa\xdd\x04O\x920[)\x80O\xd4V\x0b\xc5\x1e"&\x14[\x8bR\xb6\xc6p\x1d\x91\xb2\x08S\x82\x0e\xd9\x19\xf7\xde\xb3w?\xc6v\x89\x1b*\xaf\x90s\xf9\x80;qW\x88t\x98\xb4\xd8\xd2\x18m\x82D\t$*\xf5c\xc9f#\xa9=\xc9\xae\xeeeH\xed%\xe9\xc2\x9e>k\x16\x93\xed3]\xf0\x1e\xb5\xfb/\xc4\xaf\xfbN\xc0\xa2<\x17\xc8\x02\xcf\xe5\xc8HBs\xc3\x1c\xa9\x0c\x0f<u\xa9\xff\x00\xb4\x8f\x15\xd9G\xe0I\xb5\xed=\x1e\xf6)\xfc\xb4\x8f\xc9\x05\\\xf9\xa7n\xd6\xfe_\x9c\xd4Y\x9a)\x16\xdeK/O\xe24\xf9J\xd8\xc1V\xdb*\xdd\xc0\xa6\x14\x12\n\x85 \xf1\xa7\xda\xa9>,\xf1\x82%\xfcV\xdaT\xca\xc8\xc5\x92Y\xc8\xf4\xee#8_\xd3\x19\xac\xcbP\xbe\x92)\x0b\xdd\xdd\xb7\xa8n\xe0\xfa\x8f\xd3\x15\x9b\xcb\xe3\x0f\x13\xeb\xf7\x96\xfa}\x8f\x86\\\xcb4\xa1`\x84?V\xed\xfa{\xf6\xadoB\xfb\x1e\xd7/\xd4O\xe2/\x11Cl_\x19\xb5\xb1\x8f\xcc w\r,\x84\x0c\xfd\x01\xae_/N\xe9\x11\x86\xbc\xb9\x86\xdc\xb8\xc8]Z\xd9\xb7\xec\x17\'\x14\xf2\xdb\x95\xc0m\x8f\xb7z\xa7E\xe2\xe5\xb5\x91\x96\xda0\x1bw\xa5\xdb\x93\x8a\xbfx{\xc4mx\xc7r\x05\x90\x90I\x1f\xc4}\xc9\xa8}c\xecc\xc4:~\xa5l40\xfa\xad\x85\xc6CH\x02,\xb0\x11\xda@H\xc8=\x98q\xef[G\x82\xfe\xcb\xe5\xd2\x92\t\xafR$\x7f\xe4\xfco\x9f\x92\t\x15O\xd4\xdb\xa6\\\xd9\xa4\xb6`\\\x19W*S\xe3m\xf3\xc7\xde\xa3M\x03\x16UE \xfb\xd5\xc7\xc2\x9eb\x013\x83\x89#*\xeb\xd8\xab\x0eG\xe7]\xdc*\xe8\n\x90+\xf9\xb3D\xb8i\x8f\xe3 \x9e\x99\xec1\xd8qRZ\x9c\x92\xe9\xb1\xa5\xa6\x99\x00{\xa9HQ$\x9f\xe9C\x9e\xac\x7f\x98\x8e\xc3\xa6k!\xd4\xfc{\xa0j\x9a\x9c\xd0\xda\xeb\xb6\xd2\x98\xe51I\xba@\x8c\xc5=$\xfa\xb1\x9c\xe3\xa8\xe2\xb2\x91\xad\xea[I\x04Ld\x969\x8b1\x8f,!V\x18 \x91\xc1l\x0f\xd2\xa6\x08\xc2\xa8\xc2\x96*9\xc7sW\xaf\x12\xf8z\xc7\xc7~\x1d\xfb\x94\xe7\xc9\x9c\x0f2\xce\xe9G\xaa\xdep8q\xf0z0\xee+\xe3K?\x11x\xa7\xc2\x9a\x8d\xcd\x9e\xb7`\xcf=\xad\xcb\xc2\xd9\\\x02P\xe3\xe8W\xe9_m\xe8R\x19"PN\xe5e\xf4\xe3\xa7?J\x8d\xf1\\\x9e(\x82\xfa\x03\xa5C\x0c\xf0Io\x99\xa3\xb8\x89$Tpp6dg\xd49 \xd5\xff\x00J\xf1\x02Ib\xf0\xdd\xc1\x1c\xe62\x06]\xb4\xb0\xc788\xdb\xe9Qn\xa1]\x1a\x99\t\xe3\x81\xbd|\x9b\xe2O\xb5\ro\xc4\x1ft\xd3\x83\xc5\xe5\xc8\xc1E\xbcQ\x16$\xe4aH\x1f5\xb9x\x0b\xc1\xd71\x1bk\xddQ\x0c[vyV\xfbH\xdcq\xd5\xc1\xfa\xf0*\xc1\xa6\xa7\x8c\xa0\xbc\xf3\xe7\xd0\xf4Yab0\x86\xd7\xc9e>\xe8\xe8G\'\xe9V\xddK\xc4\xb2\xd9H\xd6zf\x83s\xa9jk\x18i\xa3\xb5_2\x1bbx\xda\xd2\x1cd\xf3\xc8\x14\xfd\xd7P\x93\xa8$v\xf61G\x16\xd9\x98\xab\x17\x90\x83\xd8l\xbc\xe3\x1c\xd2m\xedD\xe5t\xab\xe1G\xf3\x02?zw\xe2\r^\r"h\xa2\x8e8\xdaB\x800l\x1c\x0f\xce\xab\x8by\xe1\x0f\x1e\xc1w\xe1\xedB\xda\x19\x1aL7\x96W\t#Fw\x82\xa3\xa1+\x8e\x95N\xd4|+\xf6\x8b\xaa \x9e[[{i\xaf7\x15y\xe5\x1b\xd7=\x01U\xe8q\xd0f\xa3\xbc\'\xe0\roG\xd7\xec\xb5+\xedDI%\x9d\xc0\x90E\x1a\xe0\x1cu\xceq\xfaUl\x90~\x06\xe4\xdd^\xdd5\xbc\x89 xa \x908\xc0\x03\x18\x1bw\x18=\xea\xe6;\'x\xce\x02\xe3\x1f\x19\xfd\xaa\x06\xce\xcfF\xf0\xaf\x8dl\xac\xe2\xd1l\xad\xde\xdd\xb7\xa3\xa4*\x99^@ \xe3\xbd}\r\xe1\x7f\xb9\xc7s\xbe\xd9\xc1\x86Ff\x03\xf8\x91\x9b\x9d\xad\xdf\x8e\x80\xd7\x1e)\xf0\xb6\x8f\xa9\xdc[]\xc8\x17\x81\xe9\x99\x7f\x12\x06\xe7\xf4\xf7\xf6\xa4\xec\xbc84\xdd\xb3Gt\xce\x15r\x18\x1e\x18w\xe2\x9c\x99\xee\xef&K\x92VYz{#L5\x823\x11,\x18\x1d\xce\x1b5E\xe5M\x04\xe4\x10YO\x04\xf3\x83Zt\xf1\x02\xfe\xa1\xc6\xde?:\xab\xdfi(wH\x9c\x9c\xe7\x02\xad\xe4\xf9\x90Z\xcb\x8c\x02\x83#\x1d\xfaW2[\xef\x04\xe7?\xe0V\xef\xab\xf4\xebn\xad\x14\xa8\xd1\xac\x80\xa8\x926\xef\x87\\\x86\x158)SY\x94\x9ag\x9e\x1e6\xc8$\x11\xd7\xb5R\xef\xfc\x17a#6\xd4#\xf9\x8cg\x18\xcf\xbdn\x0bb\x8a\x8c\xe0`\x93\xfd*\x16\xf6\xc0\r\xcd\x1a\xa2\xe0\xe7\xe4\x8a\xf3\xce\xa3\xe1\xcb\xde\x95\xd3\xe3\xb8\xb6c\xe6\x1c\xbb\x058\xca\xf6\xfa\xd5\xff\x00MX\x88+ \x1b\x9a\xadxSL6\xc6W\x9aA)\x82=\xb1;\x0fP/\xc6>x\xa9GE\x17\x04H\x98\xc3\xe7\xfe\xf4\xefJ\x08\x97[\x1c\x85I;\x9e\x99\x153\xaa\xe9\xa3\n\xcaq\x8crzU\x1a\xd9]u.\x85\xf8\xc8\x14f\xcev\xf3\x00#%\xc9\xceH\xed\xb6*5\xfc+\x05\xd3(P\x15\x80"\xa1\x1e\xd9\x19\x8c\x80c\x9eq\xd2\xbcH\x8cR\x86\x8f\xb7qK\x8f:0\x14\xa9a\xd3>\xf4\xc6\xe7Q\x83N\xff\x00\xf5\x0f\x86?\xfd1\xcb\xfec\xb5W\xb4FWB\x88\xf1\xb6\xadN\xfcio|\x9fz\x87\xe9]\xce1S\xe4I$h\xc0\x16pI\xcfL\n\xce|y\xa6\\\\i\xf0jP\x00d\xd3\xa6Y\x9d1\xcb \xe1\xb1\xf4\x06\xb4?\x0fjk\xaa}\xe5V \x81Pm\xc9\xc99\xeb\x9a\xebQ\xb2I\xe2\xb8\x81\xd4\x15u*\xea:\x10k\xd1\xe2\xb6F\xe9\xf6\xb7\xdel\x97\x11M\x1b\xa3\xaa\x92\xb9e\x1aN\xe7\xbe\xdb\xd4)\x90H\xac8\xac\xc6\xccI)\x8a\xe1"\xca\xb2\x86\x0e\xbc\x82\r^Q\xe5\xba\xb2*P2\xa8\xdd\x93\xd7#\xda\xa9\xfe\x1c\x82\xe7\xc2\xfa\x83i\xd7D\xc9e#\xb1\xb3\x90\xf3\xe8\xeb\xb4\xfc\x8e\x95\xa4\xdb\xbf\x9e\xb3\x88\xd5v\x15\xc0\x1f\xd0\xd3\xbe\x16\xe8\x9a\xa6\x96O\xc4\xba\x06\xf4\xb4:w \xaeT\xfd\rD\x1c\x15<\xee\rB@\x80Z\xbc\x8d\x1e\xdd\x80\xe4UGR\xb6i,\xa7\x9d\x97h\x9d\xbd+\xec\x07\x7f\xce\xadw\xd3\xa4\x01\xed`\x93s\x7f\x17|\x03\xfej>\xed\x08\xd3\xd1\\tR\x07\xb5\x1do\xaa\xc54\xd2t\xd4\x9bQ\xb3\xb3v\x90\xae\n\x89I\n2G\xb0\'\xef]\x10\x11\x18b98\xaf\x9f\xb5?2\xde\xe0\x85b\x07\xc5)\xa4\xea\xc2)Y\x99\x01\x04lb8$S\xdd~\xdfl\x8cq\xb7 \xe0\xd5R\xcbj1]\xa4\xe0\xe3&\xb3\xd0\xacw6~\xa1\x93\xa4T6S\x9d\xbb\x1a\xfa+C\x96\x1b\xd8\xedJ\xc8\x08fQ\xba\xad\x1a\x84R\x1b9\xc9C\xe7"\xeco\xfd\xa7\x80\xd5\x91x6\xf5\x87\x9dlx\xd9\xeaJ\xd6\xed/E\xe2l\x91\xff\x00x\xa3\x19\xfea\xeci~\x1c\xba\xb4\xb5\xb8\xbd\xe9\x97\x19\r9\xfe\x13\xed\x86\x04ps\xc3\x0eG\xdcU\x8a\xe6X\x15\xbb\x81\x82>j\x97\x016L\xa8\x92\x11\x81\x8fzmq}>\xe7V\x9c\xe3\xebT\xff\x00\x15\xddj\x9e\x1e\xd5d\x8d\xd4\xbd\xb4\xa7|2\x0f\xe5=A\xf9\x14\xca-a\xf52\xa9\x0cL7pX\x9a\xae\xea63\xf9\x981\x84\x8d\t\x07\xd5\x91\xb6\xdb\xd2cg\\.\x0f\xc5M\\\xdf*9&\xe3\xafNj\xd7\xe1\xdd\x08]\xa0\xbf\xbb\xc1`s\x14g\x81\x8f|T\x16\x97\xe1\xb8|\xe4\x96\xe3\xd6z\x85=\x01\xad:\xd27H\xf9\xc2\x85\x1f\xd2\xb3\xd7\xb7Q\xc6\xbeT\x00\xbe\xc7[\x0fN\xd8\xedV\xd6V\xc4\xb6\xb9p7\xd9y\xfdjkH\xd5\xce\x16\xc7\xcb\x19\x8f\x85#\xdb\xe6\xadJ\xdc\x0c\xd6~\xf6\xc9g*]\xdb\xcc\x04\xad\xd4u\x07\xebS\xb6z\xfa\xca\xeb\x15\xcd\xb9\x89\xcf\x01\xd4\xe5Mz\xef\x81\xfc[\x05\x9c+\xd2\xba\xcd\xff\x00\x97p\x9eZ\xdb\x97\xc6\x83\x19Q\xa4j]\xb3\xf5\xa9L\x84\x92\xca\xb9\x04\x9c\xd5\xa0`\xd7,\x8a{R \x9cdt\xa0\xbbW\xaf\x82\x08\xa6\xeb\x93\x10\xf6\xaf6`\xd7a\xeb\xbc\xe6\x8a+\x95\x02\xbb\xda)\x16\xc8\xe9I4\xac\xb4g\x14S\xbe\x95\xe8jf\xb7\x19<\xd2\x82@{\xd7r(\xc5<\r\x9a\xf34\xd7y\x15\xd8\x96\x8c\xd71J\x93^qIn\xcfz2k\xb4R\xb4W!\xa8\xa2\xb9Y\xb8\x84\x9e\xd4\xa2\xc0Gj~\xaa\xb4\xa6\xd1Q\x82\nx\xb55\x8e\x1cS\x8f.\xba\x1bW\xa9\xae^uQK\x00\nI&\xb9 \n\xf4\x01M\x1a\xe5}\xc5s\xf7\x8fj\xe6E\x1b\xd3\xc6 \n\xe79\xa6f|\xf55\xe0\x98\x9e\xf5\xcc\x8a7\xa7dW@qM\x16S\x9e\xb4\xed\x15\xda\xbb\xb1\xa3\xef^\xed\xce)\xc4p\xe4\xe6\xbdUU\xeb^=\xc2\xa0<\xe2\x94\x05p\x9a_\xd3\x1d4\x9e\xe0($\x9e*\x12\xf7Y\x8a\x00}c5L\xd4<W\x12\xa3\x06\x90\x0e=\xe9&D\x1d\xeb\xbaX\xf6\xa9\xddW[Keb\x1cb\xb3-G\xc4WWnc\xb7\xcb\x13\xde\xa3\xaeo.uy\xb6&\xed\xa4\xd5\xcfB\xf0\xe0P\xac\xc9\xfa\xd4G\x98\xb1\xc2\xd3\xe9\x1e\x06MU\xec\xf4\x1b\xfb\xd3\xe6N\xecs\xce*\xd3i\xe1\xd4\x84\xa9e\xce*\xfb\x15\xa4\x16\xf1\xf2\x07\x02\xa3n\x18\x96\xc2/\x14\x86\\nN\xf4\xea\x1c\xf1^\xc5m\r\xb4\x05\xc2\x0e\x05xoT\xc0"w\xdb\xb8\xe7?\x14e\x8c2)\\\x82\xa75C\x9a\xff\x00\xcbYP\xb3\x02\xb9\xc0\xac\x17\x8b\xba\x9d\xdd\x9d\xc5\xa4J\xdf\xfay\xe2`\xe9\xeeA\xce\xf5\xa6\xe86\x90N\xb2\xbb.d\x8d\xc1\r\xed\x91R\xfa\xad\xdbO=\xbcH\xd9\xc0\xda?\xe6\xa7X\xc7\xfb\x84\xda\x0b\xc66\xb1\'\xe2\xb3\x85\xd4\x1a;\x98\xe4<`g\'\x9c\xd3\x8b\xedmL\xa4\xa3\x93\xbb\x0c\xdf\x06\xa8\xec.`\xd3s$\x8f\xa9\xa5e\xc0\xf6\n21\x9f\x9a\xb5\xea\x1d=.\xa1\xf2\x19}$\x1d\xfeMlZ\x1d\x9cvq\\O\x80\x1ar\x07\xff\x00j\xff\x00\xde\x9fOs#\x1d\xab\x80\x07z\x88\xf0\xee\xa3m\xa8i6b9F\xf4\x84\t\x13#p#\x8e\x95\xee\xa5w\x1e\x9f\x0b\xcd$\x8a\xaa;\x9fs\xda\xb5\xb6\xec!\xe9\xf1<o\xa2\x1d\x19b\x0f\x1d\xce~\xf5\xe4w0<7\x12BT\x96W+\x8cnpq\xc5w;\xc5\x19\x06YB\x05<\xb6qN\xec\xaf-.\xa3-kp\xb3 ;w\x06\xce\x1b\xda\xb0\xadwR\xbe\xbe\xb9u.\xc13\xf8G\xf9\xa6\xba7\x8a\x8f\x85\xf5\xab(\xa4\x8c\x9b;\xc0\x16\xe0\xf3\xe8\xe7\x01\xc0\xf8\xef\xf1U\x16~ \x8b\xf1\xe2\x14\x84\x08\x9c\x90d\'\xd409\xfaW"\xb5\x96BB\x0c\xb6\t\xc7\xd2\xbe\x8d\xd8\xf8a\x8e\xd8\xcek\xb6<n\xc1\xe3\xb7\xcd*\x8c\xb2F\x8e\x8c\x19YA\x04r\x08=\x08\xfa\xd4.\xb7~\xb6v\xccT\xae\xe2\x08\x1f\x1f5\xb1\xbd0\xf4\xfbY\xae%|"&\xa2}\xfe\x9e\xf4\xcf<U[\xc4\xb7:\x8d\xc4e-\xade\x95\x08;Lk\x9d\xd8\xe3\xb5RtO\tk\x93\xdf\x9b\x9b\xdbqm\x19=da\x9c\x0fe\x1c\xd4:\xf8\xcb\xc5\x1a\x8d\xe5\xc6\x9b\xa3K\x0c\x10\xdb\xb92\\\xb2nl\x16\xe7\x04\xe4q\xdb\xb9\xab\x88\xbb\xd6t\xa8\xe1k\x9djk\xb7d\x04\xa3\x80Aoa\x8e\x82\xbc\xc6cd\xee\xd7\xd7b\xe5\xdaP\x8c\xe9\x95\xf4\x83\xfc\xa3\xfe\xdf\xde\x83\x17\xa8\x02\x08#\xb5iP\xb5\xa6\x99a\xf7k\\\x83\xf8\x9d\xbf\x89\x8f\xb95\xd6\x9b\xad\xc5\x0b2\\\xb1T\xc7\xa5\xc7;I\xeb\x90:\x8a\xa3\xdbj?\xb4\xd1\xda6t\x95\t\x0f\x1b\xf5R?\xb8\xa5\xd3\xcc\x7fI\xeeq\xbb\xeb\xde\xac\xa4\xeb\xf3<\xb6\xfeB\xaa\xc6\x8b\xa64\x03\xd0G\xb1\x14\xe2\x8c\n\xd4\xe6\x1et`\xa3oR2\xae\xa7 \xd6U\xe3K{\x84\xb7\xb9\x91\x10\xfa\x82\xee\xc7\xb0=jL\x1b\x8b@\xbfw\xb9\x92-\xa0ck\x10\r2\xba\xf1\x0e\xa2\x81\xa3\xb9\x8a+\xa8\xbb\xab\x8d\xad\xf90\xff\x005\x07\xafY\xc7~\x16mM\x1c\xc8\xca\xc1H\xd4\x87\x1d\x89\x1b\xfd\xf1JIB\xb2\x92\xb9\x00\xe7\xf4\xac>\xe1\xcc\xf2\xed\x0e\xa03\x05l\x9e\x00\xee\xc3\x153ggol\xab\xbeh\xf1\xc6\t R\xda\xff\x00\x87RY\r\xfe\x8b!\t\xcbKjx\x922z\x90\x07\xe2\x1f\x02\xa2\x96au\x0b\x0f\xc3"\xe1\x8a\xf5#\xf25\x9e\x93\xd7\x1a\xaa\xbe\x90\x0e$^\xea~j\xe6>\x9fiv<\xd8\x9d\xb7\xe5v\xda\xafZ\x0e\xb1\x0e\x9d\xaa\xc6\xa6Q\xe5L\x02\xc9\xcf\x00\x1e\x8d\xf9V\xc2\x14K\xb7p\x1cq\xcfNk\xe6\xd4\x8d\x95\xdal\xae\x08\x1b;\xb0\x07\xa6Em\x9e\x16\xd5\x92\xf3O\x8a#6\xe9aUG\'\xdb\xf8O\xe68\xa9\xdd"h\xa2\x99`\x90\xe5\x1f\xdf\xbbs\x8d\xe9\x8b\xee\x9cm\xe1YW$\x03\x86\xf8\xcd\\M\xaa\x80T.\x03\x8e\x83\xe6\xabz\x86\x9aR@Ur\xa7\x8e\x9f\xde\xaeq&\xf1\x1b\x0e\xc2\xb8\x9e\x17 \xf1\xc8=\xab\xd3\xaf:5\xad\xe5\x98S\x19\\n\x8c\xa38\x1c\xd5>;\xd6Y=\x93o*\xaa\x00\'\x19=\xa9\xfd\xb4M\n\x05+\x8e003V\x0b\x9b0\xcc\xc3f\xdf\x91\xfd\xe98\xe0!J\x9c\x1c\x1a\xc5\xc1\xd2c\xb4\xba\x94\xa3\x15\' 7c\xf1\x8eiD\x96P\x08\xa8yr\x0b\xa9\xe8z\x8a\x97\x86I/#\x11\x94pP\x01\xbb\x1e\x9e\x9dG\xbd6\xb8\xb6\xcb\x12\x07\x1f=\xaaWE\xbc\xb7\x82GI\xdc\xe1W#\'\x80O\xff\x00\x15\x94\xb9\xe9\x91\xbfY\x10\xdc]\xfe\x1e+\xa7*\xcd\x9c\xa9\x03\x7fQ\xf6\xab>\x9fn\xd7\r*\xace\x8a\xc7\xabnv \x7fz\x8fm&9]b2\xa1\x91\xcf\xa5y\xfe\xbc|SY\xbc \'\x9a \xd0\xc4\xc5\x86FW\x81\x8fz\xd0\xe0\x16\xf2M\xbdQK\x18\xf2O^;sO\xa4U(\x8c\xab\x8eq\xf4\xad\xafN\xf0\x1fF\x926w\x99\xce\x1f\xd2bv\x19Q\x8c\xe7$\xefK\x92\xd7I\xc1S\x9f\x9a\xcb\xef\xbc%~\xdal\xb1\xda\xdd%\xac\xee\xa1\x03\x04\xc9D\'\xd5\xb3\x1f\xc5\x8e\x9e\xc7\x9a\xc15?\xff\x00\x97K\xc9\xae7\xc5\xae\xce\xe1\x9d\x9b\x12J\xcaUI\xe0\x12s\x9ct8\x15\xf6r\xc6\x18\x03\xdf\xda\x9a\xcfl\xa7q#9\xff\x00\x1f\x15\xad\xb4\xf0\xb7H\xe9\xd1\x91e\xe6\xc2X\rn\xaf\x96|\x0eIl\xd2\x10<y\xc2\xa9\xf8"\xbe3\xb1\xfb%\xf1/\x84_O\xd4 \x87\xef\x8b\x1c\xe9$\xe2?\\\x8a\xb1\x9d\xd9\xc9 \xb7N\x80T\x0f\xdag\xd9\xef\x8b\xf5\x0f\x12\xdfjV\x0c\xd7\x967/\xe7\xc2\xbc\x86\x88H3\xb4\xa1\xeb\xf5\x15\xf6\xf7\x96\xe6DR\x98\xc2\x93\xc7c\xf3L\xff\x00fG\xb9\x99\xa3\xde\xc7-\xcfO\xa5g\xba\xb7N\xbf\xb4\xbb\x86\xeb\xa6\xbcsK\x82\x92~$m\xa4\xeepTg9\xa4\xc9j\'\xdc\xa0\x07\xe2\xbe\x0e\xf0W\xd9&\xa7e\xae\xc1\xe2/\x15L\xd0Xi\xaf\xe72\xc9\x842\xba\x1c\xa4q\x8c\xf4-\xd7\xdcU\xc3\xc4\x1e2\x82y\xe6\xdb*3\xb9f$\x1e\xe4\xd7\xd4\x1e \xf0\xd6\x9f\xab\xd9\x81}l\x92$d4i\x8e\x15\xbd\xf1\xd3&\xb2\xe9\xbe\xcd\xbc-\xa9\xf9\x8ds\xa6\x18d\x85\xb2\xab\x1ec\xdc\x18\x7f\xb7\x1c\x1e\xd5\x99\xbf\xb8\xb9\x93\xa8[\x9e\xaf\x13<\x9eY\xf2\x84!V5Q\xbe0\xc4ni\xe5\xe9\xeaSv\xd8lp*\x1f\xec\xeb\xed_\xc3\xb6\xb6\xbf\xb15\x8b\xe4\xb6*\xc4\xdb\\8>^\x1c\xe4\xab\x9cq\xcfC\xd2\xb4\xfdQ\xfc;\xac\xd9J\x92jZl\xd6\xd3F\xcaI\xb8\x88\xa3+pA\xf5t\xe6\xaa\r\xf6\x15\xe1\x9b\x99M\xd34\xcc\x1czb\x1bU#\x1e\xc39\'\xfei\x84\xbfa\xfa,os\x1d\x8c\x93G!#\xf7\xaf\x86\x0b\x8e\xa0)\xc0 \xe6\xa4u>\x85\r\xe4V\x85\xad\xae\xa0t\xc1G@\x84\x92}X\xc8\xcf\x1e\xf5\xcf\xc3\xc5\x82\xa1\xf21\x82\x08\xacW\xc5\x7fa\xda\xf4\x0f\xf7\xaf\x0e\\\xc1\x7fc.]\x11fB\xea\xa7\xf9Np\xe3\xfa\xd6s\x0f\xd9\xa7\x89\xcc\xa4\\YJH\xf6+\xfe\r}\xcf\xe1\xcf\x02\xdb\xf8N\xc6hmo/&\xdd\xb5\x9b\xcd\x97r\xab\x01\x82cN\x8b\x9e\xb4^x~\'\xb9i6\x93\x93\x9d\xcd\xd4\xfc\x9c{\xd4{\xcf\x13\xf5\x8e\x86\x1e\t\xf4:\xa9P\x92\xbaa\xd8\x1c\xeeq\x81\x91\x8a\x815\xb3(Q\x19\xcey\xaf\x99\xfc#\xe0?\x14i\xb7(\xe9\xac]X\xa0`\xcf\x0cr\x12\x1b\x1f\xce\x0eT\xd7\xd2z]\x85\xec\xb0\xcf\x03\xdd\x18\xda\xe6\xd6H\x0c\xaa0\xde\xb4 >:\x02\x0f5\'m\xa6\x08GN*z\xc7Oy\xa1\xba\xc2\x8fTf5\xcfA\xbf\x83\xfd+/k\xd4\xaf\xbcO\xd7\xfatJ#W2\xa9.\xab\x8c \xdd\x89<\xf1JKB\x80\xbb\x12N6\x15\xf9\x81&\x81\xe25Y\xae\x12\xe5\x8d\xba\xcf$++\x8fK\xbcg\x04\x03\xef\xde\x86\xb2\xd6\xe0H\xdaD\x0f\xe69P\x06F1\xc19on\xf5\xfa+\xff\x00\xe1\xc5\x95\x95\xa3\xd9\xda\xda$p\xc9 c\x14|\x82F=D0#8\x15\x03\xa9}\x96\xfe\xd4\x92K{\xe5{\xc8M\xcbM\x11s\xb1\xa2\xdc\xbbJ\xab\x8cu\xf6\xe9^\xf3%\xbd\xf8\xe6\x18\x9b\x18\xd9W\xb7\xd6\xa4\x89#8\x05\x08\xf9\xaf\x84<\xdd[M\x92<o\x8d\x9f\x04\x18\xc9\xe6\xaf\xfe\x0f\xfbF\xb9\xb1\xd4\xe2\x83T\xb7i\xa2oC\xca\x07\xef#\x07\xb9\x03\xf1|\xf7\xaf\xa6o\xfe\xc2\xf4\xd9\xed\x8a\xdb\xc0\xf0\xc8\xab\x84e\xb8\xdc\xc0\xfb\x9d\xc3\x9f\xa5?\xd1~\xc8,\xedvo\xd3\x12b\x99Pg\t\xb4\x826\xb7\x18$\xe7\xdc\xd55\xf7O\x92\xedM\xbc\xfd$\xc8\xce\xa7\xd6\x99\x1a~A\x14\xa2\x902\x92s\xf44\x8e\x93p\xb7\x8f\x14\xd0H\xaf\x04\xaa\x1e9\x14\xe4\x15\xedW{y=Dn\xc8\'h\xfa\x8as\xa7}\x9eX\xe9\xb6\xef\x1d\xb4b\xd7s\x16h\xa3\xe5\x15\x88\xfe\x01\xfc>\xf8\x15\xcd\xa5\x84\xd0\xdc:\xcc\xb8keg \xf2\t\x1d?.\xf5\xe6\xdd[\xc3\xdd[\xa3\xde[\x06\xf5C;zd\xdflr\x1b\xd8\xe3z\x81\xe4\xe9\'\x1c\x13P\xfe9\xf1(\xf0w\x87//\xd6X>\xfa\xd0\xe2\xce\xdd\xdc\x07\x91\xc9\x03*\xbdN\xde\xbe\xdcW\xc7\r\xe2\xbdN\xe1\x9e{\xa5\xbbI\x1d\x89ve\xc3\x16<\xe7\xd3\xceM}\xe6>\xce|7:O5\xc5\xab\xdd\xdc\xdca\xe5\xba\xb9s,\xc5\xb1\x8c\x86o\xc29\xe0.\x00\xae\xed\xfc\x05\xa2[Z\x9b1h\x1a\x1e\x18\x86\x03,W\xb9#\x92~z\xd7\xa5Z\xf8A\xe1\x87\x00C&\xa1\xa8\xb1c\x9c\xe3\x8e85%J*\x80U\x89\xf7\xaf\x8b\xf4\x7f\x19\xeaV\xf1D\xd2\xcb#\x03\x8d\xc4\x83\xc1\xfa\x9a\xd9|!\xe3\x085K\x98\xacK\xe6i\x9fj\xe0pI\x19<\x0e\x98\xadRO\xb3\xed&[\xa9U\xadBA\x91\xe5\xaa\x7f\t#\xd4Fs\xc94X\xfd\x95h\xd6\x17\xb6z\x94\x13\xcc\x97V\xef\xbd\t\nFy\xeb\xc6pA\xc1\x15\x99\xea\xbe\r\xba\xba\x17\x00XF\x84j\xd2\xe9 \xc6G\x1b\x106\xa9\x08\xb0\x9d\xd5\x98\x1fb+1\xf1w\x84\x13\xc4Z\xe4\xa3Z\xd1\xa2\x96\x0f)\x1bO\xd4"#\xccC\x1f\x1e\\\x99\x1c\x9e\xf8l\xa9\xe9\xc5S\xaf|-{\xa6\xdb\xc8\x90\xf8\x95d\xc2\xeeVp\xd1\xc9\x91\xd3\x91\x91\x8f\x8e+\xebmCMf\xb3\x91\xbe\xea.\x1f\xd3\xb6$!I\xe7\x1c\x16\xe3=\xea\xaf?\x83\xad\x99\xa7\x9a5\x8af`U\x84\x8a\tS\xfe\x08\xa8\x93\xd8\xf8\x97\xa4\xbc\x02x?\x15\x04q\xa9-\xa5\x9cm\x9e\xd9\xcfn\x05A\x9e\xdb\xcd#K\x05\xdf\x82x\xac\x8f\xecn\xeam:}_H\xba\xd4c\xb9\xfb\xd3}\xe2\xdffO(\x08|\x93\xc8\xdc9\xc6:\x8a\xb2x\xa7Z\xb7\xd2\xee]\xa5q\x95#j\xf4,\x0f\xb0\xfe\xf4\xf0i\xf6^\x18\x86\xe2\xea8B\xdeN|\x98\x14v\\\xe5\xdb\x8f\x81\x8aa\x88\xa7\t5\xd5\xaeCg\xcb.\x99^\x0f8\'\xa9\xff\x005\x9f\xea}U\xfa\xca[\x85\xb0\xf2\xa0\xdd\xd9#f\x03oN=E\x88\xc9\xfe\xb5\xa7\xe8\xfe\x16\xb8\xbb\x81\xa6{\x8c\rEU\x8a\x83\xa8\xf3\xb61\xc5T|c\xe1(\xfc}a\xa1\xea\xd6Q\x99\xee4\xc3,R\xdb\xe3\x0c\xd0\xc8C\xa9\xc7S\xb4\x83\x90=\xea\xd9\xe1{\x01\x16\x8bq\xa6_X3\xc0\xeec\x929\x10\xec!\xc0\x1b\x08\xf9\xedSm\xa9$Vec\x84\x013n.N\x18\x90z\x81R"\xf0\x1b6\xdcVG\x90d>p\x14\xafaK\xb6\xb5\xbd\xebp[\xdaG1\x85l\xe1WV\xdc\x15\xcet\xa8\xdb\xf3q\xb8\xda\xa7\x1f\x07\xbcs\x89\xcd\xcb\x1c\xb1@\xa5v\xf9<\xd5\x07\xc2?fzw\x86\xf5\xfdn\xf0,\x92\xc5\xf7T\x8e\xc0\xbf\xe2\n\xecL\x8b\x93\x9c0\xc0\x04\xf7\x15\'{\xe1W\x9et\x0f|W}\xc0M\xb18m\xa8OS\x92:T\xac\xf7w\x91\xf97\x06\xe8\xeea\x8c1$\x10z\x0e:d\xd3y\xfcB\x01\xf3V\x05W\\)nO>\xf5+\xab\xce\xd7\x12\xdaIu\x1f\x934J\x88\xec\xc3y\x00\x1f\x98\x05\r\xb9\xee3R\xa3\xf0H\x97^\xb9\xdeP\xc7m;i>\xc7<\xd4\x85\xa7\x80\xcc\x1a\x9cK\xa7\xf8\xa6\xe68\x95\x03\xf5%\xf21\x9c\x7f\t\x15y\xd5\xe1x\xace_\xbcH\x85be3"\xe1\x830\xc6\xe1\x81\x80\x7f\xcddO\xae\xde\xdc\\/\x953\xfa[+\x8cds\xd0|U\xc4\xea\x1a\xf1xV\xe1\xdah$Bd\xc0\x1e\x91\x8eK}:\xd3\xf0_\xf4\xdb\x9b[\xe8W\xa6\xcd\x04\xb2H\x19e\x87S"\xe7\xf2\xe4\x16\xc8\xc1\xfdEHo\x07%\x94\x901\x922\xb8\xc9\x8d\xdbs\x8d\xf06\xa7\xb6\x1a}\x83\xe8\xe7J\x9e\xe6\xeaV[V\x89%i\xc2\xdc2\x11\xb4\x8f0`\x96\x19\xeay\xc5V!\xfb3\xfb7\x8a\xd3\xc8\x83\xc2\xd0\xdc\xc9\x12\xb0\x13\x06b\xf9^}l\x08\xfdjkK1k7\xf7>t\xaa\x1d\xa2\xc2\x90\xa0\x12\x07\x1c~_\x9d^,\xec\xact\xe5\xf2`\x80&\xe2\x19\x8erN:\x12M\\t\x18\xaeo\xadC[\xb40\xc0\xdedrLQ<\xc9;\x06\xd2\x01\xc3\xfc\x93\xb0\xe2\x98\xbb\xe9\xd6\x16R\x11\xe57\x9at\xbf\x962\x14{\xef\x9e*#\xc3\xde\x05\xf0\x85\xb5\xbd\xad\xcd\xa6\x90\xd0:\x8e3<\xa4\xa9\xff\x00\xf8\xb0~*\xc9>\x95o\x1c\xab"\xc4\x1b\x8c\x00\xc7\x8e+\xd8%*\x18D\xbbWy\xdc;\x0ey"\xa5\xade3B\xac\xca3[h:gI\xbb\x82\xde\xde\xe6\xc6\xdd\xe7DV3\x88Uu\xb2c-\xc5f\xaf-J\xbb\xc8\xbb)m\x94\x9c\x90\x0fj\x82\x8bD\x8c\xdc$\xe51\x8eB\xf5\x00\xf6"\xa4\x16\xd0[:mQ\x87\xe1\xb0;\xd4\xc0\xed\\\xb8\x1f\xa75ig\xd2z\x7fI\x86d\xb2\xb6HL\xaedv\x03r\xc7\x00\x9f\xf8\xe2\xa1\xaa\x96a\xab|S\t\xedb\x9dv\xc8\x81\xb1\xd8\x8c\xd4\x05\xd6\x9d\x01!\x94\x00\xc7\x81\x81\xcf\x1f5h\x19$\x86\x00\x7f\xc50\xb8\x89\x81}\xa7\x91\xde\xa9:\xe5\x82_[\x92`V:\xb0I_P\xc7\x15c\x02\xaa63\x83\x8f\xb5T\xa4\x83\xcdWFB07\x03\xd75\xd6\x95el]\xd4\xb3\xa6\xd2\xb9Bp\xb9=\xb8\xebK$w+4\xbeb\xf1\xd8\x8fn\xf4\xf2\r2G\x91dY6\x86oVG8\xaf#\xb5\xb0\xbd~\xa5k<=)\xee\x1de"H\xdf\x08J\xe7\x00\x9e8\xfd\xc5=\x7fh\x9a\x01\x05r1\xb8\xf6\xc5H]<\x8b\x04v\xf0\xe1\x98\x1e\xbd\xa8\xb5[\xa0\xa0L\xeaN1\xd35)\x1d\xba\xaa\xe3f0x\xf9\xa5\x99\x01\xc7\xbdz\xfc}\x16i/\x16\xf6[\x89\x10\xacK\x1a@\xacDaWl\x11\xdc\xfc\x9a\xaaX\xe3\x0b\xa4\xaeO\xbd0\x9a=\xc0\xabt#\xb7\x15\x07y\x18\x08\xde\xddI\xab#\xe4eH\xcf\x1cT]\xc4K `A\xe4\x11\xcf\x14\x8e\xb3f.\xa1\x91G\xe6*G\xab\xfaT\xcbs\xe5\xb0\xf6\x07\xb5RfM\x80\x14\xe4g9\xfa\xfbS\x95\xd5n<\xa5\x8aC\xbc\x00\x08 \xfa\xb1\xed\xf3O\xee-\x84j\x9cn\nF\xdaa4O\xb0\xaa\xa0P2A\xc75\xe2\xb7\x9d&\xfb\xa7\xcdtm\xe4x\x8bF5\xc6\x99*\xc3\xd8\x8e1V\xd2y7\x11\xa8t\x0c\x018\'\x9an\xfa\xec\x9bJ$j\xa5\x90\x8d\xdc\xe4\x1289\xed\x8a\x80\x9e\xd6+\xc5-\x90[>\xa3\xeei\xc4\x887\xf08=i5q\x12\xae\x07S\xcdf\'\xbf\xbc\xba\x11y\x93\xb3yy\xd06\x00g\x9e>\x95\x12\xee\xda\xd6;g\xc4J7\x18=\xea\xc5\xe1X\xcd\xab\\\xb1\x18\x04\x04\x07\xdb\xbd[\x1d\x03H\x0e\x06\x1dy\xe3\xadT\xb4\xeb\xa5X\x9ba\x19\xceMJ\xc5r\xcaT\x9cs^\xa3\xe1\x8e\xab\x04=.\xc6\xd2Ug\x01\xcc\x84\xf6R\xcd\xbf\xf5\xc5f\xa5Q\xa9\xb1\xc50\xd5\xf4\x95\xb8[k\x8c\x95kI\xc4\x8a\xd8\xc9\x0b\x9fP\xc7\xb1\x15\r6\xb7h\x16X\xad\x1d\x80|\xf9\x8e\xde\x93\xf4\x03\xb5^\xd1\xc4\xa0\x06\xe4\x10x\xf7\xac\xdb\xc4\xbe\x0fe\xf3o\xb4\xa9v\xb36\xe7\xb7?\x84\x9f\xf6\x1e\xdfJ\xb4\xea\xf6W\xf6\xdd:\xe2N\x95*\xc7\x1c\xab\xfcv\xff\x00\xee\x00\x062\x9e\xc3\x07\x07\x1b\xd3p,\x06`e\xfb\x1e\xd9\xf9\xa4\xa2\xb9\x8d\xe4\x01H\x05\x9b\x035a\xfb\xbe`uq\xb8\x8f~\x98\xact\xdd\xea\x7fy\xb7\x8e(\x19d\x8d\xc0p\xfe\x90\x87\xfd\xc4\xd5\xf8x\xba\xc6!o\x1c\xd21b\x00\x96D\x19E\xf9\x19\xe4\xd7\x9d\xf4\xcb\x18\xed\x9eI\xa5;\x94!7\x04\x1e\xc4|\xd5\x8d\xcd\xad\xc4\x8c\x16(\x8b\x80\x01:Fj\xb1\xe2-(bR\x13\x1cdf\xb3$\xb4\x11;3\x1c\x00pkj\xbd\xd44\x9dHI\r\xa5\xe0\x95\x88;\x03)RO\xc6z\xd61y$\xe2S\x0c\xa8\x11\x96NF0A\x15#\xa7\x19\xd1\xae l.\x86\xecA\x18\xf8#\x91Q\xed\xfa<\xb3\xceu\xa9@\xb8,\x0eC\x10}\x85[<1\x1c\xb2_\x94\x85@\x0c\x9c\xb1\xed[-\x8d\x9a\xc1\x82$/!^\xa4V!\xe1\xedJ=:\xe6I%\x04\xc6\x11\x98\x81\xc9\xc8\x19\xab\xbd\x9f\x8e\x81>g\xddX)\xfc##5*\xdf\xf0\xd0\xde\xf9\xd3\xc2\xc7\x05p\xe0\x13\x81\x8e~\xb4\xbe\xa3h-&TT\x08\x8c\xa3O\xcdY\xfcK\xa0\x8df\xc0\xc6\xca\x04\xa9\x96\x89\xc8\xe3>\xc7\xe0\xd6\x0c\xf1O\xa4\xde\xc9\x0c\x8aQ\x91\xb0G\xb1\xad\x86O\xb4\x8b&\xdb\x1bY>\xfc\xf4\xdc\x06j\x17]\xb7\xb2\xf1\\\x02\xee\xce#\r\xf4c\x94b\x07\x98\xa3\xb6}\xc5N\xbf\x9e\xc0\xbb:\\1W\xc0!\xd0\x8c\xe7\xbeq\xda\xa3\xc0\xba\xb6\xe7\xda\x9exv\xec\\\xc2\x0b0%;\xfcT\xee\xa1\xe2+{HY7o~\x9bGo\x9a\xa4xoJ\xd6g\xb2\xb9\x16\xd6r4\x8aHn\xd8#\xb75#\x07\x80<Ws\t\x9d\x8ci\x9c\x9f*F\xf5\x1a\xa1\x83\xc3W\xddB\xe2Y \xb5\xb8\x92\x12N\x9d\x08\xc5X\x0ew\x03\x18\xa9^d\x91\x80\x15r}\xfd\xa9\xcf\xfe\xa4\x83\n\x03\xb6}\xa9\x8d\xcf\x89\'\x89U\xa2b\x186z\xd3\x19|;\xabZ\xb8\x8ekY#\x938\xe9\x90~\x84U\x9bL\xf0\x0e\xa3y,My\xfb\x98:\xb7\xf3\x11\xf4\xedK\xb3\xf0\xf4\xd7\x17\x9f\x87\x82\xc2i&V\x01\x93I\x05O\xfd\xd9\xfc\xbfz\x03NF\xe7\x1f5{\xf0N\xaf\xa8\xeb0M5\xcb\x96\x85@T$u5yp)\xa5\x85\xa5\xb6\x9fk\x15\xb5\xbca#\x8c`\x01N\x19\xc8=+\xe8\xae\x87a?L\xe9\x96\xf6\xd7\x17Oq*\xe4\xbb\xbb\x16\xdc\x9c\xe9\x04\xf6\x1c\n_\xb7\xd2\x9b\xbeW\xa6k\xc5\x94\xfbS\x8c\xab\x0e\x94\x9e\xc5=\rZ\xd7sK!\rJ\x18\x95\xa9\xae\n\xf44\xa2\xcaEv\xb9I\xbd\xb0\xec)\x16\x8d\xd6\x9d4\xdcR^f{Q\xb5\x19\xa4D\x84u\x15\xde\xe0{\xd7\xa4#|\x1a\x048\xe8h\xa3j\xf5I\xa5\xd7\x14\xc9\xf7\xabqJ,\x87\xbd\x14S\xc0@\xa2\x9a\xef\xa2\xbb\x9a\xe6*\x94\xb3\x1aPL{\x9aGi\x1e\xd5\xc9\xc8\xedL\x0c\x8a_5\xe4\xb7\x04t\xa6N\xf20>\xa2)\xcb.{sM\x9e9\x0fAI95\xd0j=\xe41\xb7$\x93J\xc7#\xc9\xee)\xc0\xb4f<\x8c\nq\x15\xae\xd3\xde\x92\x14\xfd\xa8$mDq\x13\xd74\xee+R\xc7\x9aV4\x0b\xd6\x96\xf3\x82c\x14\xea\x81\xde\x92M8\x8e\xd24\xc14\xb1(\xa3\x8a\x8ek\xdcg\x9a\x8a\xbd\xd6\xed\xedQ\x8c\x92\x81\x81\xefNe@\xa4oR\xf3\xdc*\x03\xea\xe9T\xbdg\xc40Y\xc6\xc5\xa4\x0b\x8f\x9a\xcf|M\xf6\x93kj$Hd\x05\xb0G\x15\x8a_\xeb\xda\xbf\x88\xa7\xda\x8c\xc1\x18\xd4y%\x03\x8ar8\xc9\xe4U\xd7\xc4^6{\x99Z+B\xcc\xc4\xe3"\xb8\xd0\xb4\x8dOV\x91$\xb8\x91\xf6\x93\xde\x97\xf0\xcf\x83\xb7l\x96t\xdc\xddy\xad\x97N\xd3\xe1\xb2U\x01G\x02\xa0\x93\xa9\xb6=\xf9\xa9\x98\xd28\xa5to\x0e\xc1l\x89\xe8\x19\xc7z\xb8$)\n\x8c\x0cqQ\xd6\xf30\x1d1N\xe4\x95\x8a\xf1R\x10*\x8d\x852\xc5\x89\xdc\xd1+g SS\x1eH\xcf\x02\xb8\x8ddv9\xfc\xa9\xfa\xdb\x96 \x9a?7j\xe8\xc0\xefM\x91\x009\x15\x94\xf8\xad\xbc\x9dJP\x00\x03\x83\xfa\xd6\xc4\xc8\x10\x00+9\xf1n\x8f5\xcd\xc7\xde#\x8c?\xeeI#\xa7\xe1\xac\x87\x8cm\x1a~\x9b\x13\xacZ\xccS\xa98\x198 \x8a\xd0\xf8z\xe1c\xbbtf\xc0x\xce3\xee+-\xba\xbd\xcc\x84o\xe3\x03\x8aeq\xa8\x02\x86A\x9d\xe8H#<\xe3\xde\x9a\\\xed\xf3\x13h\xcb\x96\xc1\x15\x13s3ZO\xeb\xeb\xd8{\xd6\x12\x08\x81\xc0\x1c\x9d\xf1Z\xe9\x1b\x03z\xb6h\xba\xe4\xc9& \x90\x87\x91\xd60\xc0\x91\xf8\x8f\xbdhwf\xefdQj7f\xf9\xa1\x90\xb2 \x04&\x7f\xdeO\xe2\xc7j\xf9\xfe\xd2\xf8\xd9\xdd\xc7"\x82#2\x83\x9f\xe59\xe2\xbe\x9b\xb0km^\xca\x1b\x94\x00\xef\\7\xc3\x0e\xa2\xa5\xdd\tb\x84\x81&\xc7\x85\'\x9cv#\xbdc\xbcJ\xf3*[\xbcj\xa0j!\x9fH\xd4\x0e6\xc1\xedQ\xf1\xdaG{\x03]4AKd\x10:\x0ek3\xf1\x95\xaa\x85Yb9\xf2\x81\xcf\xb6\rj\xb7\x91\xda\xd8\xc1!{\xa0\xb1\xae\\\xc6\xac\t\'\xe9\xeek$\xba\xd4\xa6\xd7\x05\xe4l\x8b\x14D\x8f-\x07R3\x8eOsP\xd1\x1d\xa4\x8eVP\x8e\xa7/\xees\xce\xc3\xde\xa9zGN\xb8\x96Q*\xfaQN\t=\xfe>kM\xfb/\xf1{\xdc\xe8\xf2i\x97r\x9f:\xd4f\x02\xc7\x93\t\xe3o\xff\x00i\xfe\x94\xb7\x8e5g\xb4\xd3.n7\x10\xcc<\xb8\xbf\xf77\xfc\n\xc74\xe4\xba\xd2\xee$\x92\xd2r\x93B\x1bc\x00\x08\xe7\x829\xebH_\xeb\x1a\xb6\xbd+}\xfa\xeaY\x95\x01*\x84\x05U\xed\xc0\x18\x15kuy=\xec\x11A,\x84\xc3\x164\x8fq\x9d\x81\xfaT\xf9|:^\xfcL\xa5D%\x832\xf7\xcf}\xbej{\xc0\x1347\x17\x16\xcc\x7fwt\xc3$\xf5\x0c\xa3 \xe7\xe6\xb4\xadV#u\x12\x91\xfb\xb8\xc7*O\x19 \xff\x00\xe75P\xf0\x15\x95\xad\xd2O\xd3\xcd\x8a@v{\xf1\xd7\xf2\xad\x03\\\xbb\xb3\t\xe44\xf0\xad\xe7\x95\xb9c\xde\x03\x15\xe9\x90\xb5S\xd4\x04\xd3Z\xca\xeaB\xe8;\x92\x0e\xe0v\x18\xee*\x8b\xaaE\xa3\xa8\xdc\xa8C\xb1\x07\x1f\x18\xe6\xb3}kW\x9fA\xb4\xb7\x9e\xcaM\x93\x8b\x95\xd8O9\xfe&\x07\xdc\x100kZ\xf0\xf6\xafe\xe2]:;\xdb_K~\x19\xa1\xfe(\x9f\x1c\x83\xf0{\x1e\xe2\xb0\xcf\x19\xc7"\xe9\xbak\xb7\xa7u\xd3\x80{\xfaW\xfe\xf5Q\xb4\xbe\xd4,\xa4_\xba^M\x03\x1074R2\xf0:\x13\x83\xf3J\xe9\xb1\x01d\x84\x8d\xd9\xd9\x89?\xd6\xacm\xbaB\xdeXFT\x84\x93Q\xc3c\xf65\xf6\x1f\xdd7\x01\xea\'\x8c\x10zTU\xf6\x97$\x9f\x84\x8a\xf9\xcd|k\xe2\xcbt\x1e^\xbdz\x0b`\r\xe7p\xfa\x1d\xc0\xd4\xa4^.\xf1\\\xb6\xb3\xbd\xce\xb5t\xf1\x87\xc6W\x01\xba\x7f\xb4\x0e*\xd2i\xe30a\xa3$\x9c\x00\x03c4\x9f\xfe\x97\xbb\xc8\xfe<X\xfb\xff\x00\x8a\xbf\xeb\xcfg\xa1\xc4\xd3\\N\x0c\xbdc\x846\x18\x9fs\xec>k.K\xeb\x8b\x9b\xe9dX\xc9g\x904\xb9\x00\x8c\x7f\xb4\n\x8f\x9ei\xe5cp\xcc\xccYN|\xcc\xb3\x13\xeeI4\xf6\xc6gyeb\x9bPF\x13\x18\x07\x9f\x9a\xa6hcA$\x825$\x8c\x1c\x9e7\xe3\xe6\xaf,\xba:X\xc6pu\xc8\xdf\x99\xb1\x8f\xb0\xab\x05\xbc\x8d$\xd2;\xe5\x958A\xd8\x0e\x995;\xa4k\xf3Z_+\x1bm\xa5\x97k\x00\xdd\x06x\xfa\xe3\xadUb\xb8r\xd8\x0b\x84\xee\x079\xc7\xf6\xc5<\x8a\xe4\x8f+\xcb\x89L\xb2\x10\x08\\\x9d\x82\xab\x9e2\x0et\x0c\x804\xef\xc6*s\xda$\xd1\xb4N\xb9F\\7\xd0\xd6\xfd\xa5x\xc2\xd5\xe2(\xd2\xc6\x8ezy\x99Q\x9f\xad[SS\xb7\x91s\xe6D\xdcg\xf1\x83\xf9\xf5\xaf\x9b\xed\xe7\x94\xdc\x88\xdfc*\xa1bzg\x1f5.\xb2\x0f-\xb0Xg\x91\x81\xef\xda\xaca\xf1_X\xb3U\x8d\xa5\x12(\x00(8\xd8~\x95\x00\xf8B\xdaL\x18\xeed\x8cw\x04\x06\xff\x00\x15\xba}\xea\xdaB@\x92&=\xc0`qQ\xd7\x97\xb66H\x1eyR!\xd8\xfd>\x9dk7\xb6\xbaI\x11#\x8c\x15\xf5\x0c\x91\xc98\xf7\xa9{\xa8.\xae\xa3D\xf2\x8c\x91\x8e\x8d\x91\xc7^*<\x9e$\xbf\xbaI@\x80\xb3\xa0\xceUurw\xf9\xe3\xbdpxB\xdd\x1d5\xde0Rw\x18\x00\xfe\xbb\xd2w\xfe/\xb5\x94I\x15\x82\xb3?y$\\~\x83\xfei\x94W\x12I\x07\x98\x8c7m\xdc\xc7\xb9\xc7\xbdV\xeel\xbc\xb9\x98*\x95$\xfd\x08\x15\xe8\x99\xa0\x8a(\xd8\xfaG*s\xcf>\xf5\x9e\xbcv\xbea$\x8e\xcc\xde\xc7\xfaV\x9a\xc7\xa4Z\xd8)[x\xf0X\x0c\xb1\xdd\x8dl\x1a]\xfc\xc6\xce\xdc\xc0\xdb$\x00\xa1\r\x82\x0e\x0ep\x0fj\xb5\xfd\xebp\x8c\x97U\xde\x06y\xe3?\x15\x92X\xea\x06\x08\x95\x18\xb3\x07\xc4\x83\x1d\xb6\xf1\xcf\xd6\xaci\x7fo2\xc0e\x9cn\xdb\xfb\xb3\xcf~\xa0\xfdkO\xd1\xbcA%\xad\xbf\x90d\xc9\xf2\xa3P\x8e\xfaPi\xdb\xbf\x19\x1e\xdc\xd4\x1b\xce\x92$\x93XM\x8b\x13\x902w\xad\x15n\xa0a\x9d\xe9\xb65\xdcH\xcex\xed\x8a\xe9\xae\x1b+\x85\xe0\xf3\x9e\xbcU=o\xd0<J8$\xe3#\xa1\x03\xbf\xd6\xac\xd1\xdc\xc9.\\\xaa\xaa\xc6\x80\x92O\xeb\xfaW\xa0\xf4\xee\xb3\xf8\xc3$bQ\xa9J\x8c \xce\xf8\xcf=\xb0+?s\xd3\xc48:69\xe4\xd2\xf2\xc8\xb0#\xbe\t\xdd\xce;\xf3Lnu\x18\xed\xe2\xde\xc3\xa0\xe8\r8r\xce\x93C6\x1c\x1c0\xc7pO\x02\xa9\xba\xa5\xc1\x92u\x89e\',\x06\xd0;\x7f\xf3P\xbcE\xd4\xa6\xb1\xb5/\x1b`\xb2\x84\x8d\x08\x19\x12\x12s\x9c\x9f\xa5;\xd3\xecc\x9aL2\xe7\x07$\x8c\xe0\xae*]\xb5O2\x05R\x03\x19\x1c\x01\x81\xfd\x0f\xfc\xd3\xa8"\xb3\x98\xc0\xe5c\xdc\x01Q\x8e6\xe7\xa8\xfa\xf1U\x08\xee$\x12\xba\xc7\xbb9\xc2\x9c\xf0;c\xf2\xf6\xa9\x139\x82EB\xe9\xe6\x04\xc1l\xf7\xc7j\xc7\xd9u\x99\x9aA5\xc1\xf3\x84ec%\x87\xa7 \xe4c\xdc\x9cf\xac\xee:\\EJ"\x85\'-\xb75t\x11\xaa\x80\x06\x068<\xd2n\x91\xe3\x80\x0ej\xb05i!S\x13\x07r9\x07\x1cc\xad6\xb7\xd4%A#\x06L;\x02=Y\xc7\xc6*\xf2\xe7\xc5\xb6\xea\x125\x89\x99\xb4\x9f3l\x94#\xb7\xb7\xc5V\x0e\x86\xfe\xa6$c#\x1f5;t\xdeT\x0e\xccv\x8c\xf2\xc7\x81Q\x9f~\xb7\xf2Dk\x11+\'\xff\x00Q\xb8\xc7\xb7\x07\x9aR{\xa7x<\xa9\xa2\x0cY1"\x1c\x11\x8fz\xad\xc9\xa3\xde+\x89lu2\xb1\xbeO\xddf\x8c\xb2\x86=\xd5\xb3\x90>9\xc5e:\xcd\xcc\xd7\x92I\xe43\x06\x16\x85\x0f\x98\x9b\x8dG\x04o\xc1\xc1\xc6\xc3j\x877I\x98\x15p\xaa\xc3W\x00\xfe\xf5lKes\x1cj\x01f\xe4\x9f\x8a\xb3X\xda%\xbc\x1bB\x8e\xbdj\xb1\xa4\x89\xac\xe3a4Cp\xc6\xe2\xa7 \x0f\x7f\xce\xad\xa96\xe8\xf200\xb9\xad7\x80\xac,\xec\xcc\x97\x92A\xe5\xdd\x04e\t\xa7tA\xb62F\xe4\xe3$\xd4\x19\xac\xe5\x04dzs\xb6ig\x8b#\x8ct\xe2\x99<m\x12.\xe1\x9c\xb7aO\xa2\x94H\xa1\xbezR\x8cQ\xc0\xe7\xbdz\xdcwQ\xca\x8a\xe1\xb6+\x90~*#[\xb2\x92\x08\xdc\x1a\x8f\x8a\x1d\xfea>\xa5=\x88\xa7>Z\x95\x18\xc7^)\xc18\x1e\x91\xf5\x14\x9a\x90\x14\r\xa0rx\xa5\x99\x91;\xe4\xe3zH\x89\x8fjk\xea+\xea\x03#\x83U\x9dj\x11\x04S\xdc\x81\xcb\xc0\xd1\x9f\xafj\xb5H\xc0\x1c\x1cTm\xe5\xa8\xbe\x81\xe1-\xb4\x13\x90z\x9c\xd6S\xc5\x01\xaf\xfa]\xdc0\xa9y\xca\x9f%v\x18p6\xe7\x8aym\x19\x94\xec\x06\xd9\x14\x9f\x87/~\xff\x00\xa7\xa8~d\x84\x04\x7f\x91\xd8\xd4\xbc\x80\x02x\xe9Q\xfa^\x9f\x0e\x9c\x8c\x88X\x979f=\xc8\xe9\x8f\x8a\x90\x96E]\xaap\x0b\x03\xdf\xda\xa5t+\x8b\xdb^\x87\xd3\xe3\xea,\xbf\x8a\x8e \xb2\x1c\xe7\x83\x85\x04\xfb\xe3\x19\xf9\xae\x0bf\'\x18\xaf\x12\x15 \xe7\x9e)`\x06\x00\xf6\xa4\x13\xf0\xf0I\xf7&\x94i\x82\x80{|\xf1V\xa9v\xae\xa0\x91\x81\x80}\xf3]0\x158\xe6\x97\xda\xa3\xa7J\xac\xeb1\xdd\x05i-\xcb0oIT\x1e\xa1\xdbp9\x1d*e\xe5TR\xce\xfbPrI8\x18\xfa\xd4T\xda\xad\x84r\x847*X\xf4\n\x19\xb3\x9e\x9c\x81U\xbdV\xe2\xda\xe2\xcd\xa0\x9ea\x029\xc0ma\x0f\xc7\xd4|\x1eju\x9d\xb3\xac\xca\xeb\x1f\x98W|i\xd4+/\xd6\xf4\xc8VK[\x8dF\x1b\xb9\x94\x96Y\xd9\t>\x90\x01S\x9e\xdd\xfb\xd3I\x9e=C\xc2\xb0\xf9\nU\xadf\x95bY\\\xfa\x95\x8f\x07#\x9c\xff\x00J\xd25\xe8l.\xf4\xfb\xcb#q,~lx\x04r\x13\x9c\xe7\x15\x81k1\xc6\x9a\xbf\x91k|\xeb\x1cqmbF\xdf\xde}8\x00\x91\xed^y\xd4\xad\xed\xba$\xd2$&\t-\xe4\x88\xa4\x8a\x0e\\\x12s\xf3\xc1Pk\xd1:+\xff\x00\xa8E\x08o2) \x93Z\xect\xe9\x00\xf6\xed\x9dX\xa5\xb4\xdb\x81qt\xb0\xdd\xcc\xf1F\xe0\xabI\x82\xc1Xt$\xff\x00.z\xd3\x1b\xe9\xa7K\xc9\xe1\xb3v\xb8\xb6\x8eO\xdd\xc9\x9cg\x9e\xa0\x1e\xbf\xf1\\\xdc\xdd\xc6-\xdc5\xd0g\x07n\x18\x82Kc\x07\x00w8\xa8Y\xef\xc8\x8a\x18\xd0\xb32>v\xe7\x19$e\x8dR\xd8~\x0e\xe3Z\x08\x04X\xdcLI\x126\xdb)\xed\x8f\xb5k\x15\x1dd\xd7\x9d\x88\xc1M\xb4\x8f\xfb\xb8\xcej\xc3\x1f\x88d\x92\xf4,1\x88\xbc\x82\x00l\x86P{\x8c\x1ag%\xec\x92L\xe5\x9f\xd7#\x9d\xdc\x00\xa7=\xc6;\x9fj\x86\x8e\xf7rG*\xed\x1e^pH\x03\x1d\xf9\x1d\xf95%g{\xa75\xd1\xb8\x99\\\xa8\x04\xedS\xb7$\xa9\x19\x1f\x15c4\x10\xdf\xc5\xa1\xee\x02\x93 !\x9fe\\\xed\xdb\xe9K\n\xb0\x82\xeb\x0eH\\`nN7\xc6M[\xf4\xed.h\xa3\x8e\xfaG*\x08\x0c6\r\xcc0z\x9ct\xad:3\xf7\xabF\x9e\xe1\xc3o\x8c\x8f,\xfe\x16?\xc2\xc7\x1c\xe3=\x85f~\x1c\xf1\nEh\xe5\x90\xf9d\xedw\xea0\x7f\x87\x07\xa0\xab\xb5\x86\xb0\xb7\xf1\x93\x14A\x13v6\xb1\xcf+\xf4\x1f\xa5L\xe96\xd6\xf6\xca\xcf\x0b3\xa4\xcb\xea\x8d\xb2}K\x9d\xce\xdc|V_\xac%\xdc\xb2\x96x\xf6\x8d\xf6\x90`aOaU4m[J\xd6c\x95\xac\xdc4R\xa3>\xd4\xdc\x029\xef\x8f\x8a\xd1.5\x93\x14\xf0\x85dh\xa4\x94!\x906H\x07\xa0\x03\xfej"\xf69\xafdY\xe3\xb8\n\x96\xf2\x92T.w\xe4\x7f\xdb\x9aw%\x9a\xdc"Hn\x15\x01\x01\x84{}J\xc0\xf2\x7f\xe2\xbbikq\xd3\xd6\xf2\x1b\'r\xaf \x922YF{\x128\xfa\x1e\xe7\xb5C\xbb\x96\x0b\xa3l\xf3\xc6\x81\x95\n>\x90v=\xbf\xcd^m\xdd\x14\xab\x19\x15\xb21\xe99\x075\xd47\xca\x89\xb6A\xb1\xd4\x9c\x81\xc9\xe0\xd53M\xd4\x1e\xdeh\x91\x83<~\xa6,\x06\x19X\x0e2=\x8fL\xfb\xd2\xf0\xdey\x90\x97\x91I\x98\xb1>\xbf\xe2\x07\xa9\xe2\xaf\xdb\xc4\x11\x88\xa0h\xfd\x0eC\xeaV\xe3`\xa7\x91\xc9\xdflVr^\x98\xc1\xdc?\xa9}8#\xef\xdb\xfa\xd5\xfa\xde\xea9\xd4yd\x95\xe7\xd5\xf3\xedK\xb3\x8e\x99\xa8\x1d0\xaa\xc6\xa7\xa0\'z\xe3\x8e\xa3\x1c\xd4\xc4l\x8c\xbe\x92\x0f>\xf5\xa6\xb1\xbb\x92\xe6\xda\x16\x90\xa0v\x1b\xe3\x8f\xb5Q\xcf\x02\xc5+\x85\x04\x80iV9\x07\x8e\xd4\x8b\x82\xd8\x04\xe0{W\x10\\\xc51q\xb8\x02\xacA\x14\xa8xy\t"\xb6\t\xe0\x1a{\\S(q"\x95oc\xce)\xbd,\x84\x82\x87#\xe2\x9ay\x0b\xb4`\x1e\x07\xe7J\xc1\x85\x1bI\x04\x9f\xedN26\xd2RI\x10]\xcc\xf8\x1d\x88\x14\xd2\xc1\x04\x04H\xa5\x17\x0b\xf4\xda\x95\x96\x7fI\x04\xef\xfb\xd2\xd8\xdd\xc6s^ \xf2\xc1\x0c\xd9\xec)\xba\xcb\x80\x19W!\xb9\x1e\xe34\xb3\xa8uR2;\x9a~7\xd6\x0b\xa6\x0b.\xfc\xf64\xd3\xa6\x08\x07`v\xa1\xbaq\xf9\xe6\x98N\x85\x8eH\xf4\x8a~\xc0\x04;y\xe3\xa1\xa6\xef"s\x19#8\xe8{\xd3W\x08\x1d\x08r\x00#\xecO\xb5u6>\x91\x9d\xfe\xf8\xa8i\x08\xc9L\r\xad\xd0\x9e\xd5\x0fx\x820U\xc9#\x07\x8ey\xab\x14\xbeZ\x90\x00\x04\xf4\x18\xed\x9a\x89\xbaR\xc1\xb76\x08\xfdNk\x1b\xd6,D\x900\x1aY\xf7\x1b\x8d\xb1\xdc\x1e*|\x1b\xb0\xd8\x81\xfb\xfdj\x9c\xe0#z\x88\x01\xbaWpZ\xac\xccwu\xe7\x02\x96\xbb\xb2\t\xb4\xcb\xb8g\xf0\x80y\xcf\xbd1\x82\xe5\xed\xc7\x9a\x01tO\xc6~\x9dk\xc4\xee\xfa\\\xf6\x17\x8a\xae\x87\x1a\xb2@\xdd\xb4\x8d\xc9\xc5L\xbb\xb3{\xbbq\xe5\x1c\x91\xbe;\x1ay\xe5\xc7f\xc4\xe3\r\x80q\x9aa\xfbaZR\x8b>[\xdb\xda\xa4/#7\x0b,\xe4H\x11\xcf\xa0c\xb6?\xbda\xfe%\x9e}6e\x96\x17h\xddd\xce\xefl{\xfcT\xd8\xec\xaeZs\nL\xf1\xa1f0\x90H\xd4;1\xc7\xbdC\xb7\xf0\xfc\xd2\xdb\xbc\x920F\x03!q\x9c}kt\x83Z) V;\xc7\x18\xf8\xab\x14z\x8d\xbc\xc8\x9b\xca\x85\xceN\xea\xf9\xb2\xc7X\xd6%\xbaF7\xaaA\xc3g+\xb3\xe9O5\xab}b\xf2h\x19\xef\x19\xf7\xf2\x00lF?!\xc5k:WU\xebV\x8c\xf1I"\\G\x81\xb1\x04\xe3~3\xcde\xe7\x83\xcbl\x1d\xb2y\xad\x83\xc4\xba6\x93q\x1c\x97\t4K)\x1e\x82\x1cs\xf0k\x1dh\xbc\xd6+\x8eA \xfcQ\xa4\xe8\x97+p.\xe5\x97\x11\xc7\xd3\xbe\xe2x\x15k\xfb\x84K\xb0\x92I\x94os\x8f\xc2\x0f\x02\xaa\xfa\x94\xf0\xdc_O-\xbd\xb2@\xbaAdS\xe9\r\x9c\x1cg\x1f\xb5m<7iq\xf8i\x1aP|\xb6a\xe5do\xb7?j\xac5\xa9\x88$\x88\x19YNU\x85V\xf5K\xbb\x8b\xeb\x85{\x92\xae\xd1\xfaC\x85\x00\x90;\x9cu\xad\x0e\xe6\xdeM\x80/(\xbb\x80l``V\x7f}\x03\xaa\xb3\x15\xce\\\xf3L\xd91/\x97\x1b\x91\xe9\'\x9d\xfd\x8d^\xcbb\x85\x83i\x04\xae\xc0\xf7\x14\xebN\x83\xceK\xa9:\x0f%\x87\xf4\xa9-+J\xbd\xd4\xadbX\x95c\xc2n2?\n\x00\xefS>\x17\xb2\x80\xc7\x12\xcc\x7f\x11\x04\xae:\x8fj\xb2kS\xc1\x1c2\x08\x9c*\x90F\xd01\xf9Ss\xca\xea\xc3N\x86\xd5(P5z\xb6\xdb\x8a\x87\xd4z\n\xf5\x1f\xc3\x83!\x8f\xcbC\x93\xa79\xcdb\xfa\x8d\xbb%\xcbD\x93<\xd3\x87\x01Z1\xe9\xc8=\xabP\xd2\xb4\xbdF-9\xef\x1d\x82\x08\x90n\x91\xbao#\x18\xfc\xeag\xec\xf3\xc3Q\xde\xde\xcf\xa8\xdcE\xba(\x8e\xd4\xc8\xe1\x9b\xb9\xfc\xab^\xd54\x98\xae\xf4\xdb\x8b(\x91Q%\xe7\xd28\x07\xaeksg\xe0\xdb\xce\xab\xd3?\x13+\x85\x02)\x0cQ`j\x91\xc0\xf4\xef\xc0Rk)ykieu\xe5BI\xd2\x06\xa2Nw\xaa\x8f\xd9\xdc\xda\x93Av\xb7k\x08R\xc1\xb2\xa7\xd5\x93\xfe+I;{UG@\xd0.4\x96.\xf7\x1b\x89\x18*\x07\x18\xab\x0bErd\xdc\xbd+\xd0<!m\x7fe\xd0mm\xefm\xcc2\xc6\xce\x02\x16\x07\n[#\x18\xce\x06\xfcT6\xc1c\xbd;dF\xc1e\x07\xea+\xad\xa8E!\x99\xcf\x05O\xd6\xb91\\/\xa8\x1c\x8a\xd3m\x92t\xf3\xcd\'\xefN<\xb5\xc1\xc5q\xb5s\x82+\x98e,v\xb0\xc1\xa5\x1d[?\x86\xbbG\xde\xbc\x11\xa9\xe9\\48\xe9K*\x91\xcfJ\xf4\xba\x8e\xe0\xd7qFi\x01\x19\xef^\xec\x02\x97\x05Xf\xbb\x08\xa7\xbd\x18\xa35\x1c\xc8\t\xe2\xbd\xf2\xc6:S\xd6\x84\x03\x90k\xcd\xa8x\xe9F+\x99\xa8\xd7B:R%\xe6N\xd9\xa9c\x10>\xd5\xcbF\x00\xe9\\\xc5w5\x16g8\xe5H5\xda0\x93\xb59*\x8d\x90V\x9b\x94\xc7\xe1^+\x95\xdaPF\r\x15\xe2\x8e:\xd1]\x00{W7\xaaYdS\xc9\xcdpeS\xd2\xa3\xa4Y[\x92\xd8\xaeQ\xa6S\x80\xb9\xf9\xa8\xfa\xbe)U,\x8b\x9e\xa6\x9c\r\x83\xa0\x06\x9a\xc0\x92\xb0\x1b\x8e)\xd0\xda\x0e\x00\xc9\xa5\x8a\xe1\xafBn=8\xafHU\x1cu\xaf%b\x8b\x92p*\xa5\xa8k&\t6\xa8-\x9fj\x18\x85\x15\xc1\xbdX\x9eP\x0e\x0bb\xb8\x92X\xc2g9\xaa}\xf6\xa8\x12\xd5\xa6yB\xf1\x9cf\xb2\xfb\xdf\xb4\xbb[\x7f6#6J\xf0\x005\xc2\xc0}\xf8\xa3\x04\xf1\xda\xae\xfe$\xf1\\zj\xc8\x16@\x08\xf9\xaf\x9e\xbcE\xe3\xab\x9b\xe9Z(eg-\xc0\ni\x8e\xbf\xa9\xea\xbe\'\xb8u\xb7V\x08\xdd\xea\xcf\xe0\xef\xb3igd\x96\xe0`g\x92\xdd\xea39\xe0\x9c\x9e\xc2\x9fU\x1c\xff\x00Z\xa7\xe9^\x1b\xd4\xb5\x89\x04\xb3\x16 \x9e\x95\xafh\xde\x15\x82\xc1Aq\x92\x05^\xd3E\x83L\x8dc\x85\x06G\x14\xfa-9\xddAn2j\x14\xae\xc4\x91\xfbT\x94\xc0\x00\x8a\x8f\xb7\x95a\x01P`\n\x9c\xb6\x9c\xb7\xf0\x93Nm\xb4d\xea\xd8\xc5K&\x9e\x88\x00@\x00\xf7\xa4C\x14\xb9\xd4\xc7\x14\xa9$N\x07\xebH\xc4\xe0/JS\xcf\xeb\xb8`S\xd5\xb5E\x1c\x8ei\x0b\x8bPW*jv\x08\x15\x18\x11\x9d\xeb\xcb{\x98\x98\xe4\x0e\x94\xe2K\xc0\x9cS\x1bh\x12\x10I94\x84\xaaebs\xc6h\x0c\xc1Fh*3\xb7\x15!\x1d\xc2\xc8\xde\xa6\xa7\x8d\xe4:\x10\xca\x08 \x8f\xd6\xa2R\x03\xc6\xdc\xd3\xa4\x85\xf3\xcb\x1c\xd7G\xabfPG\xb1\xde\x8f\xcb\xba\xb1\x07\xb6+\x1b\xf1\xd7\x85\x13OS\xa8\xd8\xc6\xdeV\x7fz\x83\xf8~Eb\xf7\xa4\xcb\xd4\xe4\x91\xef\xcd}\x9dsb\x97V\xb3A*\xe5%B\xac\x0f\xcd|\xa1\xe2}\x06\xe3D\xd4\xee,\xde>\xa4\xb4L\x07T\xedX~\xb9\xd2\xd2\xc6\xe5\'\x86-\x10\xc9\xed\xc2\xb7\xb7\xc5k\xba?Qk\xa8Z)_T\xa9\xdc\xf2EQ\xe6,\xfb-\x8b\x05\x0b\xc8?5h\xd3%\xb8\xbc\x820\x93\xc8\x92B6mW#q\xf7\xe2\xa9\xf2!s3\xcb\xc1Q\xc58\xd35\x16\xb5\xb8\x86h\x9fk\xc6s\x83\xd0\xd5s@\xb2 \x04d)\xc9\xc7bG59\x9dF\xc7\x1f\x19\xad%\x84\xb1D"\x96fF\nK\x12z\xe3\x9cf\x91\xd3B*rp[\xf0\xe4\xf03R\xd6Z\xa6\x99\xa9A\x13HT\xcb+\x15`FHlU~\xf1f\xb5y\x11"&1\x90x\xfc$\x7f\x83Pd\xb7h\xdc\xec\n\x82q\xf2\x00\xa5\xeb\x0e\xa0\x03\x83R\xb2/\x93\xe4\x99\xad\xd9_9$p\x00\xe88\xf6\xa6R\xdb\x98\xd6W\x8a`\xecH=\x08<\xf3\x8a\x7foq\xe7X\xa4\xc4\x02\xc2-\xca\xa4eq\x9cc\xf2\xa8\xcf\xbfB\xe72.\x1c\x10=<`\x8e\xd8\xf6\xa8\x93+Ft\xa2\xe4\x0f\xd7\xff\x00\r:\x98q\x9a}\xa6]^\xe9\x97\x91\xde\xda\x90\x1a"\xa4(\xe8\xc0\xf5\x07\xdc\x1aKY\x96[\xeb\x9b\x8dFx\xdb\xcf\x91\xb7\x05\x19\xca\xa9\xe0\x05=\xb1I\xc0\xa8\xd0;+\x93\xc6FOl\xe7\x8fjV\xec\xac\xc5\xe5\xc9\xca\xc6\xa3i9R1\x8f\xd6\x98\x120 \x178\r\xc6\xf8\xdcW\r\xac-\'\x9b\xe5\x8dz4\xea\xef\x8eqPWMss\x08_6G\x8cL]\x94\x9c\x80\xcc1\xbb\'\xbf\x18\xaf-\xec\xfan\x8f\x95\xfdG\x14\xee;e}\xe0\x06\xfd\xe2\x9c\xaey\xfa\x8f\xa5?\x11\xeeT\x0e0\xdf\x85q\xdf\x1cS\xad6\x85\xd26\xae\xc7l\xab\xb0P>\x95\x18b\x91\x91\x82(\xc1l`\x9e\xbd\xf8\xa7\xdam\xaa\\$\x90o\xe07\x0b\xd3\xa7\'\'\xbd-,\x0f$EQ\xc1+\x93\xb8\x9c\x0fn\xb4\xe6\xde\xc3\xee\xd1\xc6]\x946\xfc\x92\xbe\xe3\xe6\xa3\xc901\x1fV\x92[lnr)\xcf#}\xab\x94\xb5\x98\x8d\x8eQ\x89\xc8\x18\xe1q\xdb\xad:\x8e\t"\x0b\xe6m@@)\xc6\x0ei\xca\x06\x88\'\xa8\x92\xd9\xeb\x8c`\xd1\x14A\xe3b\xbb\xf1\x1e0\\\xe4q\xd8f\xa14\x8c\xd9\xe3\x1f\x02\x97\xe4\xf0+\xa8c\xf5\x1d\xdd\xc9\xc9\xf9\xa9\x8bkHm\xd8\xb8\x93p\'\xb8\xeeGj\x85\x89d3\xa2*\x1fW8\xeb\x8e:U\x84BT\x02\\\xeeLn*8\xdc:\xaf\xe9Q\'\x0eA\xc3\xe0\x103J\xf2\x01##zR[V\x12)\xc0\xf3\x11\x80+\xdc\xe6\x9e-\xc3olD\x01\x04\xe4\x1eH\xa4\xa6\x89\xe4\x89\xaeU\xd8"\x00N\xe3\x82\x07o\xadq\n\xb4\x89\xbfq#<\xe3\x8cf\xa1\xb2\x92\xaapv\xc9S\x8e\xd5.(\xc0\x188\xdbj\x98\xd3\x9833\x16\xd8W\xbf\xd0U\x8e\'\x90\x05\x7f43v\x03\x81\xc8\xff\x00\x8a\xadi\xf2F\xa6u\xda\xcc\x06Jw\x1c\x0ez\xd4\x85\xa5\xc4\xad?P\xc0\x82X7@>=\xaa+.\x08\x00\xe0\x96\xc8\xc1\'\x04pqN\x18\xcbg\xd3\xc0\xefS2\xc6^H\xe41\xae\xf1\x1e\xee\x80\x92z\n\xab\xea\x16\xcdo1\xdc\xa7<c\x9c\xe4\x1e\xf5o\x88Bv\xf9l\xa9:\xeeg,N6\xff\x00.*\'Y\x867)2\x1fB\x9f\xc4\x01\x03\xda\xa5=\xbe\x98|\xcf1I\xf4\x9c\x06\xc99\x1b\xfbd\x8f\xe6\xf6\xa6\xe3#\xcc\xd3\x82\x06\xfd\xbd\xb8\xff\x00\x8a\xea\xd69\x1e\xd4\x90B\x85L\xa8#\xa9\xef\xf9\xd7vR\xfacG\xecH \xf5\x18\xe0R\x9aY\x90\xdb\x80\xa9\xe9\xceA<\xe4\x8e\xc0{\xd3a!\xb7\x91\x9b\xca\xde\x92\x0fW\xb8\xc9\xcf\x1f5\x15\xe2Q\x14-\xbeNrXm\xb7\x1f\xe2\x9d\x1b\x99\x13\x03\x9d\xb0w\xab}\xbd\xcc\x17\x0c\xc8\x88\x91\xb18\xc6\t\x19\x1cu\xed\x9a\xb4Z]K\x04l6y\x8a\x14\x8c\xe4`\xe3\x8e\xfd\xaa\xabm\x0e\x95s$mos\xe5\x15E\x07\'\x04\x9c|\xff\x00js\x1e\x8dt\x93\xba\xfa\xa6\x8aD~\x87\xa0#\x8e\rm:q\xeav\x85f\x86\xddn\x19\xa5\xf2\xfc\xdbW\x05Fq\xbe\x00;g\x9d\xab?u\x1d\xb4\x99Ws\x18\x0b\x9d\x12.\xff\x00\xad\\\x1a\xe2IYa\x8e\x10\x03\xc7\xbcI\xb8\x15^\xdd\xaa\x87\xa9\xc6\xeb$\x85\xc6\xe3\x93\xc8<\x8e\x7f\xcfj\x98\xd2\xa6\xbd\x83N\x99\x02 \xf2\x89\\\x9e\xbd\xc9\x07\xe9Q\xb3\xcfk\x7f\x08\x92)Q\xca\xff\x00\t\xc2\x1c\x81\x80H5#\xae\xcf\x1fU\xe9V\xd2\x13"\\:\x97X\xe4\xc0\xc0\xd8\x10\x06\x06\xad\'\xbe3L\xd8\xc2\xd6\xb72\x00\x14\xa2\x90\xba\x97\'\xee}\xb3Q\xd0\xeaN\xacc1\x95\x03;@\x00\xfa\x80\xc7\xd6\x97E\xb78E\xcf\xad\x0e\xed\xfd\xb2pH\xf9\x1dj\xbb|n\xa0uyC6\xdf\xde(\\z\xb1\xd8c\xadM\xc1;<p\x9cF\x0e\xeeF9\xe7\xb5ca\x95\xe6s\x1d\xc6\xa6(\xde\x90\xe9\x86\x00\x91\x90\x06v\xab\xd9`\x08\xaa\xe9\x80\x1b\x9d\'l\x8arHE|LIPc\x19n~\xb8\xa6\xa1\xbc\xbc\x13"\x9d\xcc\x14\xaez\x1cS\x88\xd1\xa0\x91\xe5x\xd1\xd7\x9c\x01\xces\xd7\xa74\xd2u\x0e\xc5P\xf2\xa7\xd4:\x0c\xfb\xe6\x91w\x0b\x18\xd5\xccD:\x92\x16"N\xacva\x9er?aMF\x01b3\x90F\xed\xfd\xa9\xc9\xbdS#\x16\x1c\x82\x06\xe0\xc7o\x15\'\x15\xe9\x88>g\xce\xf1\x8eFO\xb8\xc1\xaa\xc8\x040%G\'\x82{\xe3\xda\x9f\xb8\xc4\x11\x95\xd9\xc9\xc2\x81\xc8\x0c:\xe7=\xe9\x8bk\xab\xa4i\xa5\x1b\x15\x05\x8f \xfa\xbe\x98\xe75\xc9\xad\xa2:\x17\x1b\x1c\x0fz\x9aMNa0\x8dT\xb7\x1f\x8b9\xce{\xe3\xe3\xda\xa7\xad5G\x92\x03\x19OVNO\xe1P\x01\xedT\xdbV\x11C1\xeb)\xc6\t\xe0\x0c\xf3\xde\x94\x8eO6\x0f/\x1e\xb5\xc9=\x87\xe7V\xbd;\xac^\xd9\x10M\xc31\x92\'+\x17\xc6p\x178>\xad\xaa\x05\xc5\x8c2dh\x03K\x0fW\xf7\xfaV\x95kp\r\xba\x94\x19`\xde\xa0\x0fRi\xdb\xba\x85\xdeI^=\xbf\xc5Q\xad.%\x81[d{\xb2\x8aw\x1e\x08\xc7|T\xb5\xbd\xe16\xf8g,\xc6A\xc6r1\xf9\xd7\xa3t\xee\xbe\x93C\x14o\x19W\x11\x1c\x83\x9d9]\x81\x1b\x0c\xe7\xe2\xb3\xf3\xf4\xf2\xae\xcc\xa7#W\xdfz\x9d\x92\xf5c\x05K\x0c\x81\xd79\x1c\xd3\t/w\xa1UbX`1\x03\x8c\xfdj\xbf4\xc1\x98\xc8\x93*\x95 \x84c\x8c\x11\xcf\xe7^J\\B&\x05\x84A\x89 \x1e0\x07L\x1e\xe6\xa1\xdc\xf5\xf9\xe6\xf3\x95W*\x80\xe7I\xcf\xa0\xed\x9c\xf6\xc7|\xf1OG\xd3\xe3M\x19\xe4\x9e\xe3\xbdM\x0b\xa4,KK\xd0\xf3\x91\xf8\x88\x1d\xb1\xda\x97\x82x\xdeH\xe32\x1e\xc0\x93\x80*\x92\xfa\xb5\xbc`\x05\x89\x95\xb7\xe4g\xff\x009\xa5!\xbf\x95\xdb\t\t\x19PX\xb7\x18\xc7qU1x\xa2\xdde\x8du$\x8d\xaf$.\xa6\xc8=\xbf\xf3\x8a\x94\xfd-\xca\x13\x82\xa3\x1b\x13\x81Z\x12\xdd\xa2\x7f\x10*X\xe1\xb0y\xe6\xa0\xe7\xd4D\xb7;\x95\x89T\xe3$t\xa6_|\xff\x00I\xa3}\xcd\x9cz\xc7\x18\x1cdTl\x81\xa0iB\x9c\x86-\xdf\x903\x82jWZ\xeb\xb7R[\xc0\xb0`\xc4$\r!]\xf0\x00\xca\xee\x0f\x04\xd4{{\x04Vb\xc3\xd4F\x06\x7fz\xba\xdb\\\x07\n\xbc\xfa\xcf~+\xa9B\xf9\xcb\xfb\xd0[\x04`\xff\x00z\xadZ_K4\xc60\x84\xc6\x0e\x01\x1ct\x14\xe9n<\x98\x86\xd9A\xc7\xea3\xed\x9ej\xe2\xc3\xaeE=\xb2\x9d%\xd5Y\x80|`\xfa1\xc0\xee>j4\xb6,\xb2\x11\xc1 m\xf5\xf7\xa9+\xdb\xa8-\xe2a1\x07f\xd2\x01\xfe,\xf6\xfe\x95\x07(\xf5\xcf\x1e\xc2\x08P\xe1@#\x19\xe9\xd3\xbd\'5\xc8\x94\x15\xb8\x8cI\x92\n\x822w\x1e\x01\xe7\xb7\xb5E.\xafron!\x9e3\x1aA1\x8d\'\x04\xa8$\xaf\x19\xc8\x1c\x1e\x99\xe9L]u\x08o\x9a5\xc3i\xd4\x14(OP\xe7:\xbe\xdcT\xcbkG\x8d[\x1b\x9cd\xef\xb7n)\x96\xa7z\xf6\xd1(\xcc\xac\xbc.\xcc\x9e\xa7\xe7\xebX\xf7\xec\x9dgR\xd7\x92\xe2\xf2\xdd\x85\xb5\xb4\x8d\xb5\x81\x03j\xaa\x90\x1b\xf3\xcfz\xd6,5-\x1fS\xd7-,\xe5\xd4\xa37\x12\x97\xd8\x8a\xd9\xdcb8 \x8cv\xc7\x07\xbdFx\xf2\xe3K\xd0\xa1\xf2Z\xe5\xe1\x86y35\xc2\x92\xd2FH$\x00=\xd8\xf1L\xf4\xce\x9cd\x81\xfa\x84\xb3/\x94\x93yh\xae\xdaX`\x00\x00\xe7\x19\xee;V\x86\xda\xf3\xf0\xb3-\xa2\xc0\xfel\x91\xeb,\x17#\x1b\xe4\xfc\xf1X\xd3jv\xf7?yx\xa1\r4WR\xb2\xb0\x18\xc8\xe0`c\xe9H\xcbkwoz\x05\xccQz\xa1WF\x89\xbc\xc5Q(\xc89\x1d\x0f\xb8=:WZ.\x99q\xe6K}mj\x8b\t*\x8c\x18\xec\x00\x90Ie\x07=)\xc5\xc3Ikq\x17\x9d\x88\xc4\x8b\x92\xe8\xfb\xcbz\x8f\xe2\xf9\xcdU\xacP\xac\xb2I#1g\x94\x12\xe7\xf9Crp}\xcdk\x03\x91\x80\xb8\xc0\x04\x11\xf3\xf5\xa5\xecmmR&k\x82Y@8\xcf\x04\xe7\xfb\x9f\xedQe%\xf3D\xd6\xf6\xf2\xb4i\xc1\x00~\x04\x04\x02\xc7=\xb2jB\xf9\x10\xb5\xb5\xcc7(\xe8\x01\x8d\xa2$o\xdf\x8c\xe4\x0f\xe9N~\xe3\xa8_ZI%\xa1\x0f$D\x16P@\n\x80\xf2Xg\x90)\ri\'\x9f\xe5G\x11u#9\xcf<\x9c\xd2\xd6`\x14\xb3>7\xef\xda\x9e\xda\xdd\xc1\x15\xcaH\xc5\xe4\x0f(3+\xb0\x00\x93\xc9\\\xf1\xcd{u\xabI\x04\xdee\xac\xae\x8b\xb82\x8d\xde\xbe9?Z\x85\x86K[8\xfc\xcb\xa8\xcd\xc1\x91\xb6\x02\x06F\xee\xa3n:\x11V\r#I\xb1\xba\xdc$p\xc1\x08\'w\x0522I\xa7A\xbb\x82\xde`\xae\x0b3\xeb8\xc6\xc7\x1e\xe4\x8a\x1d\xa0\\\xb3\xa9\xc0\\{\x82>\x95b\xf0\xce\xaenn$\x1fz\x1e\xa0Y\x83\x9e\xad\x8ex=M[\x8c\xde\xb9\x00\x9eGRL\x84rXd\xf3\x9f\x8cp>*\x87q-\x9e\x85i\x0c\x90Y\xa4\x97\x0c\xd8|\x92LK\x83\xea@}\xc7\x154u\x89f\xb4\x85c\xd3\xdd7\x11\xbaRG\xf4>\xc4\x9c\x1c\xd3I3\xa3\x98\xa7\x9dT\x95\'Kgc\x8d\x90c\xf5\xaak\xa8\x84\xd3\t#\x8f\n\xc4/a\xc7z\x9c\x86\xe2\x0f\xbc\x16R\xc5$\x06"\x8a\x0e\xec{\x9ez\x8fcS\x91\xdcI\nE\x1f\x94\xa7\x95T-\x93\xe9\xf9\xf6\xaa\xd6\x8fgr\xd1\xdd\xb3D\xac\x15\xc4\x9e\x82\x01\xd8O\xb1\xeax\xabLW\x10",o\x17\x98H\x07\x90\x06\xdc\xf2\x17\xe7\x15_\x0c\x92\xc8\x85\xbd\x16\xaa\xf9\x11\xb9\x07\x04\xe4\xe5q\xef\xb7a\xb5U^\x84W(\xa3\xcc\xd3\x80F~65k\xfb\xcd\xba$O\x95v\xd8r\xa0\xe3\x8c\x7f\x8a\x88k\x89\x83${\xccm)\xf3\x17\x90\x01_\x82>=\xe9\x93\xcd\x13"\xa6B*\xe3\x00\xfe\x1c\xf7\x1c{\xd3y\xd8\x97Y\r\xd2\x90W vA\xf9t\xab[\xfe\xad,\x8a\x19@\x01\x02\xe7\xcb`\x06\xf8\x0cI8=\xb6\xfe\x95M\r\xa2\xa99\xe4\xe7\x91\x9f\xa5M\xb7\x9ar\x10\x97*\xa7{d\xe4\xf3\xf9t\xa7\xd1J\x9ez\xae}q\x9c\x13\xee\x01\xe4\xfc\x93P\xa6G\xf2T\xb2\xa1\xd82\x00$\x16S\xfcLG\xb5%$\xcc\x92\x19\xa1!#\x8c\x06\n\xfb\x82\x9c\xf58=I\xa5\x8e\xa0\x96\xcc\xb2`\x91\x94b\xa79\n2I\x00\xfbcs\x9c\xd3f\xdc\xc8\n\xf1\xc8\x07\xb6j\xfe\xd2Hv\x94\x03\x07\xa84\xca\xf2\xed-\x82\xb1\xce\x00\xed\xcfS\xedUa\xa8\xcf\x14\xae\xa6R\x1ed\x18\xdd\xd0d\xe7?\x02\x9e\xdcj\x08\x9bwM\xc7\x98#(pA\x00g8\xfa\xd6\x8f\xff\x00\xa9-\xe7\xb7\xb8ef\x8d\xd3\nK\xe0\x84\'\xee=\xb3\x8a\xaf\x1d9\xd2H\xf2\x03\x03\xbe\xd9\xde\xac0\xddF\xd1\x06\x0b\xc1\x07\x91\xd8\nv%\'j\xe3\x18\xe0f\xab\xb6\x97\xb6\xf8\x99\x07\\\xe4`g \xf6\xa71j!\x94\xee\x84\xa7\xd7\xa7\xeb\xefW\x10u8D1k\xb8R\\c\xd2;\xaf<TYm\x1f[b#\x80{\xfc\xd4\xb3\xb3\x0e\xae0x\xc7\xd6\x9a\xe29\x18\x15n\x87\x19\xa4\x1ay\x18\xab\xa8$r1\xefM\xcc\x92\xc5\xb4`.\xf6\x1f=i\xf7\xb9\x8d\xc8:\x0bF\xbe\xa2NO\xd3\x14\xc8\x81\x87\xf3\x00\xc7a\xc5.\xf3\xc6\x83\x07\xd4s\x8f\x9aj\x80\\1\xca\x8c\x83\xef\xce=\xe8s\t\xe1\x88\xda\x0eG\xe7]\xac\xd1\x16*3\xbfa\xe3\xb9\x15\x0eFF!\x19\xe3\xd0\x0f\xe5\xeeO\xdf\xf6\xa7\xd62\x01![V9\xa4\xaf!\xb6 y\x83\x9e\xd5\x1f\x1e\x9c\xac\xd2,{\x14m\x19?\xc2)K\xbdB\xda\xc4m\xbap\xf2\x10\n\xc7\x91\xb8\x83\xec);\xbb\xb8\x99v\xdb\xab(u\x05\xb9\xc1\x04\xfb\x8f\x8a\xce\xdf\xbfNiei<\xa3"\x01\xaa\x15?\xc4\xc9\x04`\xe35c\x04s\xa2 P\xd8n\x1c\xfe]\xa9\x8e\xa74j\x86\xdfy!\x10s\x802H\xe4\xe3\xe6\xb1\xaf\x18\xc3k3\x86HF\xd1\xc3\x01\xd3\x1f\xf2kY\xbb\x8e\xd6E\xcbL\xd2\xe4\x05`88\xc6+9\xd4\xec\xf2\xf3\xba.\x17\x07hc\xc9\x03\xbdbz\xa4\xb3\x1b\x95\x90\x84\xc1oHV\xd4B\xaf\x1b\xee1\xbe9\xad/M\x8a=\x04z\xb2\x06\xf9\x18\x04\x9a\xf9\xf7R\xf0N\xa7uv\xd2\xe9?\xbcG\xc9\x11\x16\xc1_\x8ej\xf3\xe0\x8f\x01k\xa2Cw\xa9\xea\x12A\x04\'\x9bh\xe4,d\xf8$d\x01\xef\x8ej\xed\xa7@\xf6\xec\xb8\x0c\xa5\xb2\xa8\x00\xceKU\xcd\xe3\x16o\x1d\xbc\x13\x03#/\xab?\x87q\x1d>\xa2\x9c=f\xf2{v\x8c\x85h\xd7\x08\\\x01\xe6e\xb6\\d\xeek\x93t\x9bC&Y3\xab}\x07u\xdb\x9c\xfcRW6p\xa5\xb0HI"=\xab\xec\x00\xa4\xc2\x9d\xd2\x07\xda=\x01A\xff\x00\xd9\xedL\xe5\x9a\xe6$\x95\x03d\x9e\x18\x83\x91\xb8\xff\x00\x9a\x8c\xbb\xd5Dl \x12\x0fH\x01\x80\xe4\x0fqT>\x96\xd4\xc9\x0b\'b\x83\x8c\xef\xcf~*\xc1`\xc0U\xc8 q\xf4\xa5\xb5k\xff\x00.\x14\x85\xa5\x00n\xdb\xb4|w\xaa\x8d\xd6\xd9\x9e?-\x81\x0c\xd9\xc7q\xf5\xa5\xe6\xbb\xb5y$\xb9\x99\xc1@J\xc7\x1a\x9eA\xc7SQ\x11]\xa0#\x8d\xcc[\x8cv\x1e\xf5c\x1cM\xa03\rL\x17\x00\xe4\xec\x07\x1c\xd2\x0ck\xa8\x01\xb6\xfb\xd6\x89\xa4\xc8\xb6\xd6\xdb\xc4~\xb9\x0e\x15\xbb\x00:\xd2\xb3i\xf7\x1a\xa5\xe5\xb5\x940\xb3I!\xdd$\x9dUP\xf7\xa4\xbc7\xa2\xea^"@-XE\n\x1c4\xce\x0e9\xfe_s[\xc7\x87\xb4+-\x1e\xd0Z\xc4\xbb\x9f\xab\xca\xdc\xb3\x9frkO\xe1o\t]u;\x98\xaf.\xa31ZG\xbcy\xc6\\\xf7\xc0\xc7\xefT\x9dk\xadAb\x8d\x0c,\x1e\xe0\x8c\x108_\xaf\xf8\xa3O\xb3\x87M\xd3\xed\xac\xa0@\xab\x12\x05\xc8\x1dO\xbd:Y%\x8c\x0fH"\x9dHQ_c\x1e=\xeb\x92\xa8\x07\x12dW\xb6*,j\xa8\x80*\xa8\x00\x01\xd8\n\xf3\xa2\xc5\xd8\xb3\x1c\x969\'\xdc\x9a\xed%\xca\xe4u\xf6\xa0\xdd\x04\xfcB\xa3n\x1dQr\xad\x83\x9a\x8b\x9e\xfc\x9f\xdd7\xe2#\x83]-\x8e\xf4\x05\xcdO\xb6\xa3\x16q\xde\x93\xfd\xa23\x8cT]\xbc-\x12\x06\x98n\xcfz\xe5\x8a3\x16\r\xc5\x1a\x8d\x18\x15&.\x15\xdf\x8e\r*o\np\xc0T3\x16Nv\x92;\x11J\xc6\xed"\xb7\x19\xa3Q\xae\x90*L\xdd\xa3\x0c\x83LZ\xe9\x0b\x1fY\xfaw\xa6\x8di4\x8d\x94r\xbf\x15\xca\xa1\x8d\x82M\x16\x0ff\xech$\xd0\x00\xf7\xa7\xcbv\xbc\xfa\xbf\xa5(\xb7\xac\x0f\x18"\x98K\x0c\x91\xf3\xb7*}\xab\x85\x8d\xa2\x05\xc6q\xf3FM\x18\x06\xa4\xe7\xbe}\xbe\x80sL\xe3\xd4\x15\xdfc>\xd6\xae#- \xdd\xbc\x0c\xd2R\xdb\x19\x01\xdc\x9b\xcf\xb8\xa0\x93F\x05Jy\xb7\x08F\xc6\x0e)Qzs\x87\x8d\x94\xd5y \x99\x0f\xeegeq\xfc&\xbaY5\x02\xfbd+\xf5#\xadsQ\xf9\xaec\xe9V\x02\xe1\xdb\xd3\x8ek\xbc\x11\xedQ\x9et\x98\xda\xd1\r\xc3\xa1\x14\xaa\xca\xd2\x1d\xa1\xb6\xb0\xeciY\xa3\x14\xb4\x90\xbb\x1c\x87\xc1\xa2\xbc\x0b2\x0c\xb7\x1f=\xa8\xa2\xb9T\xcf!\x9c\x82T\x8a~\x90 Q\xc74\xb1p\xa9\xea\x00T]\xce\xb1knJ\xee\x0c\xfd\x80\xe6\x9b\xc2\xaf&\xbb\x92{S\xd6\x1b\x08\x1d\x05#$\xf0\xc6\tB\x19\xaa\xbbu\x7fw8\xdf\x8f.>\xf9\xebU\x1d[\xc6\xba6\x8e\x08\xfb\xc2\xbc\xa0r\xa0\xf3\x9aK8A\x9e\xd4\x00X\xe0sS\x9a\xfe\xabs\x14n\xe5\xc2 \x1dk\x10\xd7\xbe\xd1m,D\x8a\xaf\xbd\xea\x9f\xe3o\xb4]GY\x91\xe1\xb6%"\xe9\x9a\xcb,\xb4\xbdCX\xba\x08\x81\xdc\xb1\xe5\xba\xd4fmM\xa89\x0b\xf3O*``\x8c\x9a\xb2\xea\xff\x00h:\xce\xad\x98-\xdd\xc0n\x00Zq\xe1\x8f\x04j\xfa\xb5\xc2\xcfu\xb8+\x1c\xe0\xd6\x95\xe1o\xb3\xfbM5Rk\xc4R\xf8\xcf#\x9a\xd3\xe1\xba\xb3\xb3\x8c\xacH\x14\x0e\x06\x074\xd9\x98g\x9d\xbd\xcd/F8\x15\x15\xa5\xf8n\xcfJ\x81T"\xb3\x002j\xc7oz\xb6\xff\x00\xba\x8c\x0c\xf6\x15\x16\xb3\xdc\xdd\xb11\xa9Pz\x13Nm\x16\xda\xdd\x98\xcaw?z\x8c\xd3\x00\xc0/4\xea\xc7\xb6\xf52\x8b+\x90\xee\xd9\xcfjy#\xc8\xa86\x8es\xde\x99}\xe4\xbe\xdf.</\xbfO\xebSpM\x06\xd5\xdc\x83\x8f\x8a\x16=d\xe5\xeb\xa5\xb4\x81\x85\xa4\xedM\xd3\x0c\xb7\x03\x8a\x96K\x91\x16C\x1c\x9fzlu\x0bd\xe3\x1d)\x9c\x9f\xf5yu\xf4\xa8\xa9*4\x0fKd\xd3G\xd4w\x18\x14\xfeK\xc0\xc0\x9d\xdd)!\xa8\xc2\xa3\xd6\xc3\x15\x15\x10\x91X\xa0]\xc0\xf7\xa7\r\xa6!_2OH\xf9\xa3S\xb7\x02\xba\x15\x07&\xa5\x1a\xf6\xd1\xa3%FMF\x89\x18\x9c\x91\xb5A\xe2\x94C\x14cdQn\'\xa7\x195\xea\xd9J2\xf3\xb0PO\x03\xa9\xae\x9dG\x1f\xda\xba4\x8c\xd4\x9d\xb5\xd4L\x15\x00\xcf\xf7\xa9\x84\x8d6\xe6\xa3mm\xe1@6\x8c\x9a\x93\x8e"I\xdcq\x8e\x82\x9e\\\xe3|S,\x06v\xae\xbc\xbd\xc3\x81U?\x11\xf8J\xcf\xc41*\xdc\xae\xd7_\xc3 \xea*\xe6$\x8e%\xe4\x8c\xd7\x12\xcc\x00\x0c\xc0b\xb9=\xbd\xbd\xdc-\x0c\xea\x19\x1b\x91\xc7\xf4\xa29e\xb7\x91d\x89\x8a\xb0\xef_&\xf8\xb7\xec\xcbR\xb3\x92Cl\x8d,k\x82\xae\x07Q\xf3X\xd5\xd5\xa4\xf6S\xc9\xe6B\xc5\xa38a\xd2\xbfCg\xbb\xb7t\xda\xe0\x15=\xb1\xc5g\x9a\xff\x00\x86<+\xaa\xca\xf2\xddXE\x96\x1c\xba\xfaH\xc7\xd2\xa8_\xc3o\x13\x1f\xc2\xdd+G\xda99\x1f\x1a\xaa\xdd:\xd1`\x04\xf0\x90\xdd\xd9\x7f\xc5|sk\xac\\\xdb\x90\xd8\xd9\xb5\xc3(\xcf\x00\x8e\xf5m>(\x83P\x0b\xeb);\xa9\x0f\xce\x07#\x18\xad?Y\xfb\x1d\xd2/\xd9f\xd3/^\x15\xc7*\xdc\xae*\x93\xae\xfd\x91\x1b\x18CZ\xeaj\xcc\xab\xc8#\x1e\xaf\x8a\x8e\xfd&\xedAW\xb5$(\xe50F\xfe\xd4\xfau(\t\x05f\xdc\x9e\x0e\xc6\x98h\xda\xc4ZD\xa2;\x94\x0f\x00\xc9\x04\xb7\\\x8e\x8d\xf0i\xe06\x9a\x9cB\xf2\x19#\x89\x89"E\x1d2;\x8c\xf6\xac\xabX\xd2\xbcW\xa5D\xa2H\xd5\xe3\xdd\xb4s\x9c\x93\xefU\x93\xa9j\xd6\x88\x0cv\xef\x0c\xb1\x928n\x0f\xbf\x15\x0en\x88\xd2(S\xe9a\xdc\xec@\xf9\xcfj\x99\x17P\nr\x0eA\xfb\x8a\xda\xe6\xba\x8e\x0bV\t1br\x08\x0b\xc0\'\xa8&\x9d\xc1y\x11\xb7\x18\xe4\x807\x82y\xc7\xbf\xd2\xb2;?\x1d\xdcZ@\x8b{`\xb2nR\xb2\x14\xc0\'\xdb=\xaa_J\xf1E\x9e\xa93Cj]fe\x05a\x93\xf8\xb1\xd4)\xaa\xab\x9e\x85<q\xb3\xe8\xd4\xa0\xe4\xb2\xee*\xc6\x0e\xa3\x1b\x95R\xd8\'\x8c\xd6\x9a.\xd1\xe3\x90\xa5\xba\x94\x1bV6S\x9c}~\xb5)\x00G\x88JT\x9d\xaew\x02zc\xb0\xaa\x15\x8e\xb4\x90HC\x03\x0b0 \x8e\xbd\xfej\xc4\xba\xb4\r\x0c\x01\xa5\x19-\xeb `\x1e\xc3&\xa8.,\xe5R\x00\x8c\xe3<\xf3V\x91\xca\x8c9\xab\x8b\xcb\x1c\xf0\x18\xe3\x85\x17$2\x91\xca\xe4\x7f\x8a\xe60\xcd\x10\xca\x96F\xe0\x82\xb9\xc7\xc8\xaa\xb4w\xf03J\x04\x85OU^\xfc{\n\x94\x8fXH\x95\x17\xcc\xf2\xdb\xca\xc2\x02:\xb1\xfeo\x93U\xefm2\xe0\x05<\xfb{\xd4\x90T\xadKD|\xe6\x98\x96\x0c3\xe8\xff\x00n\xde\xd4\xaaB\xe6(\xe4\xc6\x0e\xe3\x9d\xbdO\xfe{\xd3+K\xa9S#b\x00\x10\x16$\x0fQ<\xd4\xa5\xad\xcaJ6\xf0\x01 ol\x1e\x9c\x8cc\xf4\xa8\x92jM^\x90F6\xa5\xe8\xc8\x14\xde\x1b\xd8N\xa8\x96,\xbb\xd8\xa6\xe2\x17\x83\x903\x8a\x9c\x87&\x1f0\xa8U\x0e\x01\xe7\x80I\xf6\xfc\xb9\xa6m\x1d\xb47\xcfu\x1e\x01X\xb68\xc8$\x82{\x9aqq-\x9cQFB\xb2\xbc\xcd\xfb\xa5\xed\xbb\x19\xc1\xeb\xc50\xec\x8c#\t\x1b\x1fN\xfb\xff\x007\x7f\xb5(!\x04\xea8\x19\xe7\xe2\x9d\x89\x86d\x8d\xa2,\x8d\xc8_\xe9\xc14\xe5b\x8c7\xa4\x92\tR>\x87\xde\xbc\xb4\xfb\x94N\xd0^\xab\xe5\xe2;fRHVnT\xed\xf6\xeci\xf4\xb2D#\xb5\t,l\x98l\x81\xc9\x04\xfb7p)\x89#"/3Z\xef\x9c\x00ps\xecA\xf8\xa7\x14\xfa\xb4\x85o\x9aR\xd0*\\\xaa\xec\x08\xae\x8e\x8e[\x9e]q\x9f\x8a\xf01\xb62\xe5\x14\xb2\x95#\xbes\xd7\x8e\xd8\xa4L\xc1\'A\x82v\xe0\x8c\xf4\xa9\x07c{g6\xdd\xbekaS\x1e\x9fP\xe9\x9f\xca\xa3a\x9c\x05?\xcb\x93\x828\xe3s\xfaR\xff\x00)\xce2\x0e\x06i\xf5\x96\xa5\x04\xc6\x08\xcc\x1e\xa5;\x99\xba\xe4S\x8b\xa7Yc*\xee\xa5\x08\xf4\x91\xd0\xf3\xda\xabP\xc0\xfe\\d\xb8G<\x13\xb7\xa0\x07\x91\xf1V\x19\xf4\x99m\xed\xad\xe5\x17QI\x1c\xbe\xb0s\x81\xb4pz\xfbw\xa7\xc4\xd7\x12\xc3 D\\D\x149\x18\x03\x1b(\xd4;\xff\x00\x9am\xd2\x18\xdd\t|j>\x9c\xe4\xef\xc9\xc1\xa5\xf4\xe8l\xa3\x80\xc6\xd2\xb9\x97~\xe8\xf1\x9d\xa0\xe3\x03\x07\xf9\xaa2\xea\xd9\x91\x8f$\xfd:u\xf9\xef\xefO.gXf}\x8a\x19\x1b\x1b\x0f|\x0e8\xf7\xa97\x96\xde8\xe2\x92\x00\xfeC\x05.\xae9\xdd\xd0\x8c\xd74\x0b\x98\x8a\xb1\x89\x05\xbe\x01p\x0e\xa2\xa4\xe38<\xfc\x9fj@f\x8d\xc3\x00\xcd\xe6o\x83\xc6}\xaa\xb1\x1d\xdb\xa4\x9b]\xb1\x9e\x84\x0e~\xb5n\xd3\xb5+\x9f(\xce\xb3\x90\xa8\xb8\x19s\xd7\xdf\x19\xaa\xd4\xe2\xdeFq\x82\xa07\xe2\xc0m\xa3\xaf8\xa4\xe3m\x80\x88\xf1\xb7<\x1cd\x1cTH\'{)<\xd4f\x04\x83\xf9\x1bH\xc8\xd8\x1e7\xdfz~h#\xb9M%@\xe3\x91\x9d\xaa\xf9\r\xd9\x92\'x\x9c\x03&Ap\xde\xac\x9e\xff\x00Jf\x9aQU\x95\x98\x00\xa1H\x04\xf3\x92O\'\x9e\xf5\x0bix\xf6\xa5\xd8\xa0m\xe9\xc0>\xf9\xceqN\xac\xf5iCli_,\xc5\xb7\x1eHo\xfe\xea\xb0\x17\xd6\x97\x11\xda\xfe%\x9d\xd9Cz\x7f\x947\x19<s\xcf\xf7\xaa\xd6\xb4\x9e#!\x87\x00m\xbfr?\xe2\x9c^Y\xb4Z|\x0c\xb2\xb4\x85\x0f\t\x8c\x80\t\xe7\xf2\xa8\xa8\x88fth\x8eA\xc8\xc1\xcf\xe8\rXN\xa0dy\x12H\xb6\xf0\xa0\x01\xf8\x07\x18?@j7l\xb3\xb4\x8f\x1d\xa9E-\xe9$\xf5\x03\x8e+\xb7\xb0\xda\xc8bx\x1c\xb8\x08#x\xf4\xb1\'F\xdbg$};R\xa0\x92@\x8c\xb2\x807\xd4\x1b \x0fV\xf5\xcc)#\x08\xd7\xc8 1\xc0s\xd0\x1c\xfd)\x18\xae\xe0\x99\xe4V\x95\x90\xe3n\xf3\x18!\xbf\xe0|\xd4\x94\x16\x82\xe3n\xe9pT\x10\xcaXzA8\x19\x14\x9c\xc9f\x04K\x1c\x07sI\xe5\x8c\r\x98#\xdb=\xbd\xa9\xe3f\xcbk\x1c\xab\x8d\x94`H\xc7\r\xb60\x02`\xe4g\xf7\xa4\xf9\xa0\xc8W\x7f\xb0\xe3\xf5\xa4V9\xc4R\xb2\xce\xcc\xd1\xbe\xdc\x1c\x11\x86\xe9\x8c\xd2\xb3(.\xb8e=r\x8b\xf8N;\x8f\xf8\xa9I\xa2\x02\xdf\x02x\xc6T\x068^H\xe3\x9f\x9cS\tm$\x17\x05\n\x08\xdd\x88\n\x14eNG\x07\x8aE\xe5\x9c\x90\xa2\xa7\x94\xee\xaf\xe5\x82ud\x02s\x8e\xe4\x03\x81\x8d\xf9\xa4$\xea\xe7%\x80\xc6q\xb7\xd2\xb9\x12\xc0b\xc4s\xfa\xf2W*9+\xdf4\xe5\x08\x0e\xac#\x1b\x90\x01\x81\xc9$v pj:\xea8\xe2\xf4\xee+;\x12\x1e0=#\x07\x18\xcd9\xb0\x92N\x02"\x89#9\x1c\xe0s\xef\xf4\xa8\xd1\xb3\x0b\xa5\x85\xd1C\r8\x085\x91\x8f\x8d\xfdx\xe4l{R\x9d\x07\x94]I \xe7\x9d\xbf\x7fjx\xd7\x82)7\xa2\xbc!\xf9\xc0<1\xff\x00\x15\xe3\xdf\\\xc7\x14\xbb%\xcf\xab\xd8dc\xa1\x19\x14\xdex\x0c\xc0\x98\x15\x94"\x02\xe8\xc7-\xbb\xb9\x04\xf5Zn\x8c\x8d\xe5\xab\xa3\x1c\x822\xa7\x1c\x93]\x9a\xe2\xf2)$O=\xa3\x0c\t\x89\xd0\x95RX\xe9b4\xf1\xb9\xe3\x1f\xbd4\xb1D\xca\x0e\x80\xc4\x1fR\x9c\x13\xb6\xe39\xa5\xff\x00j]\x9c\x13\x0c.\xa9\x82\xd9L\x1c\xfb\xe4w\xae\x06\xa2\xd2<\x9em\xcf\xa1\xd4\xee\xdf\xd4g\xb0\x14\xd2[b%\x9dD\xac\xea\x01\x1b\x90\xe3?\xf2+\x9bm=\x1cK&2\xa80rx\xc9\xe8sQ\xd2~\xa2]"w\x91\xd9Y\xb5\x86;\x1d\x19\x04\x12\xbc\x8cT\x91\x15\xa0B\xd8\x03a\x8c\x0f\x7f\xafzqk"1`\xad\xe6\xb0O\xdd\x8ct\xfc\xaan=\x91F\xc7\xcbm\xd9\xda\xccFB\xa9\xa8\xaf\xbbK\x0b\x89`&,\x81\xb8\xf08\xc7\xf0\x93\xd74\xb9\x9a]\x8d\x10VU*7/\\\xed\xfag\x91R\xad\xc0\xb2V\x12\xa3y\x8a\x08\x8f\xd3\x95%\xb8\xc1;\xef\xc6\xfc\n\x8d:\xac\xa4\x14a\xa4\xe3;\xee=\xf8\xa9F\x08\xe7\x82@\xdb\xfe\xa09\xfc?\x15\xc7\x9f\xe5\x82\x82%\x90\xfe=\xd8\xe7\x03\xbe*#2:\xee\x13\xa1\xc1\xc1F%N\x07\xc59\x96c#\x17g(7\x10\xe4\x9c\x15$\x0cq\xc7\x15*;\xb3).\x89\xe5\xb3`\xaf\xe5:\x83lp8\x18\xfdi\x8f#\x04\x02r7\xcf;\x11R\x16\xd7Re\xb7K\xe5\xee\x07n\xd1\xce;Q\xf7\xa59o$1\x89I$\x9eO5\x11#J\xa0\xa3\xa0\x12rC\x02\x00\xc2\xd4;_\xc9\x1c\xd1+F1$\x9bX\xfb/s\xc7\xf4\x14\xe7\xe3\xe6\x85bGWlj\xdd\xc6\xf9\x18;\xea\x18\x188\xa7\x12\xc8I\xa9\x94\x0f\xa0\xff\x00\x8a\xb1\x9b\xdf\xbb\xde\xd8\xbc\xf2\x06\x86f\xc7\x07\x9c\x91\x90\x07\xd2\xba\xd6\xe6\xb1\xbf\xd2g\xb3\xd4Q"\xb7\x99<\x99X\x92\xa7\x04\xe4\x00\xc39\xaa^\xb7\xae\xc3ol\xb8\x86d\x11\xb3\xccG\xa6_\xc01\x85n\xcc@\xe9\xda\x96\xd3\xf5-?\xc4:M\xb5\xee\xd2\xb3\t|\xfb\x7f5K\x05\xc0*APy\xc8\xad\r\x85\xe7\x90\xed\x12\\<h\xe5\xcc\x85\x8f\xa4\xb6\xc7J\xb1\x1b\xe4\r\xbe\xf5\xc9,\xb2"\x95\xa3\xddH\x03\x1c\x8c\x1d\x8e*\xba\xda\'\xfe\x97\xbd\xd0\xf5=:\xff\x00\xce\xb6\xb0\xb6h\xe5\x89\xf9\x96F\x93 <Y\xce\x08\'\x8c\x9c\n\x83\xf1\x15\xfd\xbf\x885\x1d\x14G#\xc9\x1b\xc8\xcf<l0\x14*\x16\xe8?\x8c\x9cR~(\xd5\x03\xd8[%\xbd\xe4\xa6tB\x8d\x0cj\xa1\xdd\x00\xd8\xdd3\x85\xdd\xda\xa04[\x93a\xfb=\xaf\x96<O3\\H\xf9;\xc9a\x85\x1b\xbe\x8b\xd0T\xdbH\xbf\x11qnfm1DK\xe9\x07!\x8e~\xbe\xde\xf5m\n\x14\x06M\xdaM:s\xdc\n\x98\x8bXhDv\x06E\xdb,\xde\xa6\xc1\xc6\t\xeaGf\xe7\x81U\rV\xf5V\xe6f\x8e\x19&\xf2\xa7%0\x00g\xd9\xc05\'=\xb4\xd3\xdf\x99,n\xce%\x90\xb9\x92E\x03\'\xb0\xff\x00\xbd>\xd34qq\xa8\xbc\x1bV\xf2t\x05IF\x1bd\x04n g\x8e\xdfZfH\xe3\xba\xbd\x11F\xa3\xd4v\xdc\x96\xc6\xf8\x18\x1d\xb2j\xc8\xb8\x866rq\xb6O\xb7\xd7z\xac\xad\xdc\x17\x91\xef\nq\x13\x86\xd8y\xcb\xe3\x91\xfdz\x8a\x94\xb5E\xb8\xdf?\xdeO\x9aCE\x10\xdeTF\xcc:\x00:\x9f\x92{U\xac\xe8\xdaF\x8f\xa4\xdf\\^\xe8M\x14\xd2\xdc\x08b\x80\x11\xb7\xcd\x90\x10\x08\xe9\x95Q\xea\xf7&\xab7\xb1\xc2\xec\x90\xf9\x11\x99c\x00\xa1\xce\xc5\xc8\xe01\xc7\'\xe4\xe0\xd5\x9c\xfd1l\x94j\x9dI\x1b\x15#8\x07a\x90x\'\xb5G\x82\xf3\xf1\x05\xb4\x83\x80va\xc1<\xed\x8ejJ\xde+k\x7f"\xe6\xe6IY\xe2\x94y\xb6\xe8T\x02\x1b\xae\x08\xcfL\xf5\xedM\xf5\x18\x0c\xf7s,\x17\x18\xb1g\x06D\x906\\\x0e\x83 \x0f\xeb\x8c\xf4\xa89Z\xf5\xc3\x19-\x9a\x15]\xcc.\x14n]\xa9\xc9\x04\x83\xd7\x9e\x94\xe2\xc7V\xb8\x96(\xe78\xb6\xc3\x92"\xb8B\xed(F\x00*c\x80\x08\xc9\xc9\xf6\xa8\x13J\xebnTD\xba\xdb\'\xd4\x02\x9e2\x0e~q\xb5JR\xba\x89\xd6Xq\xb1\xcf\x7fjqe\x7fss\xab\xddG.\xa2K\x06Ua\x1f\xe1\xc6v\x85\xc9\xe3>\xf5\xb4Gcqa\xa3\xdd]j\x93\xc0\xbeT\xbb"\'#\xd3\xc7U\x19$\x8es\x8a\xc9\xacm\xf5\x1dH\xda\xdd\xa4\n\x87\xcf\xf5\xc2\xca\xa46N@9\xfe\x0eNq\xcekq\xd7u\xcd\x1e\x1d\x1d\x12\xd1_\xce$4;\xb2\n\x149$\x1e\xa3\x1d\xb3LGaa,S\xcdu4j\x04j\xda\x0e2r\x08\xc8#\x9c\x11U\x9dBy\xc4\x96\xd1C\x13\x10\xcf\xbb(\xe0\x0c~\x94\xb5\xcb\xdb\xd9\xc5\xff\x00K\n)Et\xdf\x8fQ\xdd\xc1\xceNMF\xad\xf6d\x85e\x8c+;\x10\x83\x07\x07h\xc9\xe4|{\xd4dZ\x9d\xad\xcd\x9c\xae%\x82FS\xba\xe2gr\nn\x1b\xb0\x07\xfb\x8dI=\xe7\x9fn\xd1\xc5 \x85C\x06H\xd4\xef\xf3I\x18<\xf65\x9f\xbas#\xa12,Qy\x19\x8e-\x03 \xeeFA\xfc\xbb\x0f\xde\xa3\xa4Z\x14\x82\x85\x9bY\x0c\xe4\xefR77Dd\xc3\x94<`\x9e\xa0\x11\xd3\x15\xdd\x933\xbcjYB\x15\xf5c=3\xce\xef|Uz)\x9d\xe4\x91\x01\xdcFAU\x03%\x87@\x0fNjV\x0b\x87Cq\xb2%\xd9\xb7$\x9e\xc0\x1e\xe7\xb5S4\xcf%\xd2\xcd!\xd3\x19\'\x01A\xc6F\xe4`\x0c\xf1\x8c\xfcW$\xb7\xd1\x19E\x038\x1b\x9f\xd2\xac\xf7[\xe2\x12\xef(\xb12*\xa0Q\xd5\x01\xcfZ\x8ci\xe2hY\xa7\xb8I\x10\x10\x107P\x07l\x0f\xf1Q\x92\xcb3/\x9b!eX\xc0\xe4\xfd8\x00\x1a\xa5^_\x9c\xdcJ\xef!\n\xc4\xca\xc1}(\x0f\xb5J\x9f\xa8=\xcc\xc4\xc7l\xca\xac\xa4*;\x16\x0c\t\'$p@\'a\x8an\xd7\xa7\xeb\x18i@\xc1\x19 w\xff\x005t7\xef5\xdb\xbc\x19\xc8l\x82q\x81\x8f|\xfd)[\x9dON\xbd\xbd!dP\xcf\xd7,\x02\x82\x06}$u\xf8\xaf\x9c5/\x1d\xde\\\xcd\xf7m(O\x0cr)\x8d\xb3\xd6D\x07\xa9\x1fZi\xa4\xea\xb3\xd88ff\xbe\x91\x9fc#\xb1\xdb\x11Q\x9d\xcc\x0f^\x0fj\x9b\x17M\xbbKi\xbc\xf0\x8d\xe7\xca&h\x9drA\xdf89\xdbc\xde\xac?\x01\x16\xa0\xca\xd8\xd2\x9aT\x8f\xef_Wh\xf7r\xc7s\x11\xc0\xdc\xa3\x0f\xb8\xf2\x10v#\xe2\xa7\x9ahn0^S\xe5\x90YO\xbe{\xa8\x1d@\xaf\x9dt\xaf\x10\xea\xd2\xb1\xb4\n\x136\xc7\xef1\x95 e\x88f\x00\xae\x08\xcf\x04g\xbdj\xd6\xb7\xca\x16\xde\x18\x968a\x8e,\t\x18\xfa\x8f\xc7Z\xba\xb4\xbc\x8e\xc2\xd9\xac\xc4\xaf2.\x08V\x18\x19\xc0\x18\xdblm\x9c\x93T\x97\x9d<\xf9\xbeg\xa4\x1e==\x85^>\xfa\xb6\xf2y$zA\xe6F\xcf\x19\xa8\xf9\xf5\x99]\xee#\x8e\xdc\xca\x13\x80\xea1\xb4\xf5\xfc\xe93u\x04 -\xcd\xecO3"b69~z`SK\xdb\xf4\xb5In`\x90\x98\xcf\xaaTe\xc2\xf4\xe7\x93\xf4\xabI\xefeHJ\xa5\xd7\x95\xbeJ\x8d%\xd50p0Oo\xd6\xab#\xb6FpL:\x8f\x199\xc1>\xf4\xf9nd\x80K\x03\xe32F\n\xe3\xd8\xf7?Je\x0c\xb3=\xf2H\xb7.\x89\xb4.\xee\xbb\x94\x1cU:-~\xcfT\xbb\x96T\xb9\xda\xb6\xfc\x1d\xbf\xa8\xc0\xee\x05L\x8dr\xda\x0bK\x84Y\x0b9\nU[\xa2\x83\xc9?\xf6\xac\xdd\xc7U\x8d\xe4\xf2\xe4\x95\xd68\x1bR\x1dgQ+\xea\x03b\x0e\xfcU\x9a\xd8\xc8\xab\xe8\x883H\x00l\r\x86v\xab&\xa1\xa5\xc5$\xcdw\x16\x0c\x81\xb7\xb6\xf5\xdc\x19@\xe3\x19\xf6\xa8;\x9b\xf7\x99dy\xa5\x19$\xa8\xe3\x19\x1d{v\xaa\x8e\xa3\xe2i\xad\xde?\xdf\xe1\x8f\xe0\xec1\xee\x05BM\xaf\xfd\xee@d\x95\x8b\xaa\xe0\xe4\x8e\xa7\xfb\n\xad\xbd\xbe\x17\x8d$\x96\xf6\xb2B$b]5z$\'\xf9\x88\x07\x91S\xedzd\xc8\xa9\xe7H\xad\xa4aN=@{T\xb6\xa3\xab}\xdeI\x02H\x1f\xcc\xc2\xed\x07\xfbg\xb5C\xfe\xdf\x95\xa3\x9b\xccE%\x8f\xa4\x11\xd7=\x80\xf6\x15V\xbd\xd5\xa0\x83QP\xac\xac\xfb\xf0\x18\x1fH\x03\xa7_\x8a\xab]\xf8\x8f|\x93NgX\xcb\x13\xb3\xdf\x0b\xfd\xbe(\xb7\xe9\xf3\xbf\x08F\xa1\xbe\xfbnx\x1c\xedVL\xd0F\x00\xdbj\xd5c\xd5cWI^Q\xe6\x81\x858\xc0P\x7f\x94{\xfc\xd7\x17\xbe$0\xc7\x16\xc06\x86\xca\xf3\x92q\xd4\xb5`\xf7^10<\xb2\xc8\xc4t\x19\xe9\x83\xf2;T\x1c\xfe=\xfb\xcb\xaa\xee\xdd\xb7</\xb5Z\xdb\xf8j\xfeF\xca\xab\xb0o\xcd\x8f\xd6\xa1K\x7fi\x1f\xe6u\x18\xe35\xb8\xdek\xec#\x12\xc98\x8dd%\x94\x0e\x01\x1d\xcf\xfcURo\x11\xc0d\xff\x00P\x05\x07\x81\xdd\xbe\xb5\x8bk~9\xbc\x02O&\xd1\xf9\x18Q\xd8\n\xeb\xc27\x96\xfa\xcc\xea.\xc4\x92N\xdcm\xdd\xb1P\xf6\'\xde\xb4\x96>\n\xb8e-*\x84\xcf\xbf\xcdS\xddx\x86\xd5\x0e\x98\xd8\xbe=\x85i\xfa\xb7\x8a\xa0\x99\xd5b\x8c+\x03\x80\x8b\xc0\x03\xdf5q\xf0\xb6\x96\xfa\xb1\x82\xe6\xe5\xda+L\xfa\xdb\xa1c\xec>>j>\xdbHYbX\'\xd2\xed\xb6\xb2\x98\xcc\xa0a\xf1\xee\rO\xe9\x8f\xa9xV\x00\xad\x00\xbf\xd2\xff\x00\x8d\x80&h\x17\xe5\x7f\x88\n\xd2ZxV\xc6)\x15\xae\x18H\x14\xe7@\xe0\x9f\x9f\x8a\xa5\xba\xeb\x972!\x10!Bv\xd4{}+\xe8\r?]\xb1\xb6\xb6\x86\xce\xd8\x88\x965\xda\xa1G\x18\x14\xa5\x87\x8aV\x1db;k\x8b\xa0\xa2S\x85\'\xa1\xaaV\x93w\xa6jVp\xdc\xd9<r\xc5/*\xcb\xc8\xfa}jnKKI\xd3\x98\x90\xf1\xe9=\xc1\xadI\x94\xa8P\x9aUW\x18\x03a\x8fj\xcey9,_Qf\xe4\x9d\xf7\xf7\xadF\xea\xe8E*\xef`\xc2_\xc3\x8e\xf5\x18\xf2\x98\xe5\xdf\x0b1\x04\xe0\xa1\xe9T\x8d?^\x97N\x94[\xeb\x0c\xa6\x05 As\xddO\xb3\x7f\xcd_\'\x99c\x8e\x19\x03F\xd0\xcb\xf8e^FOL\xe2\x9dYD\x80\x90q\x8f\xd4S-\x11B\x01\x1c\xf7\xf7\xa4\xdbQ\x829\x15nP\xa6\xf3\x80O*M{qa\x04\xa4K\x1bm8\xc8\xc5!)iT\xfa\x91\xc8\xfe\x16\x1c\x1a\x8e\x17W\xd6/\xba\xde?21\x8f6\xd9\xbf\x10\x1e\xf1\x9e\xff\x00J\xe9q\xfc\xdb\x8a@V\xce\xd53\x1d\xf1\x8e?.T\'\x1d+\x91l\xd2\xe5\xc1\xc2\x11\xce)\x87\xed[[\xd8|\xc8\x8b{\x15#\x0c\xa7\xd8\x83\xd0\xd3\x04\xbd\xbcIJ \x90+~\x16Q\xfd\xeb\xba\xd7m\xf2>(\n\xdb\xed\x8a\xb6Z\xc0QLr0\xf2\xff\x00\x85\xff\x00\xc1\xa7\x06\xc9\xa2\xe52A\xf6\xaa\xc5\xc9\xbae\xf4\xce\xd1t\x0e\x07!\xbd\xf2\r\x10\x1dE \x0b\x05\xdb\x88\xd8zX\xfa\x94})a\x87\x1aM$\xa9\xe7P\xab,k!\'pa\x8aQ\xe4^\x8f\x1b8\xf6"\xa1V\xf6\xea\xd9A\xbb,\xab\x8en\x13\xd5\x1f\xff\x00p\xea\xb5$%\xba*\x8e\xae\xac\x84d\x1e\xaa\xc2\x94\x08\xa4\x91Jm`\x0b\xc4\xac\xcb\xde6\xff\x00\x14\x81\x8e+\x80Ld\xab\x03\xccm\xc1\xfd)u\xbee]\xd9\x18\xf9\x1d\x08\xed\\\xddKmp#\xca\xfa\xd5\x81\xc8\xe1\x81\xf7\x15\xdd\xb1\\\xde\x9b\xfd\xdaE\xe9\x0f\x1d\xc7\xb5u\x13\xb2\x16\x19>\x9e\xc6\x9c\xa4\xe4\xaa\x86m\xe38\xdc\xbc0\xfa\x8a\xe2x\xf7F]x#\xa3g\x00\xfc\x1fj\x07\xc5v\x90\x9a4o[\x12\x08\xee84\xd6Q#\xe0\xa1\xde\x98\xe4\x1e\xbf\x95HGq\xe7[\x871\x80T\xe0\x83\x8f\xf1J\x8f$o\xdd\x06=9\xe2\xbb\xcds\x8a\x85\xc4\xa8\x07\x93"\xb1\xcf!\x8e1I\xad\xf12\x14\x9e\x10\xa7\xb1\xcf\x06\x9c\\\x8b)\xd5\x19RB\xc4\xe02\xa9\x07\x1e\xf4Edb\xff\x00\xe9\x99\x17n=\\\x9f\xce\x93\xbeF)[cz[\xf7\xd2(Q+ \xec\x0f"\x8a\xf3\xc8\x95W\xfe\x98\xfc\x84|\x94\xfa\x0e\xe2\x8a\xee>\xb5\xcc\xd5\x0e\xfbS\x9ap\x8b\x1e\x04dz\xa4\xcfj\xae_j\x1aV\x84~\xf14\xea\xdb\x86r\xc6\xb0O\x14\xfd\xaa\x9bW\xb8\xb4\xb5BS>\x8c\x1a\xcbu\x7f\x12kz\xf4q\xad\xcc\xe5c\xec\x01\xa8E\xc9l\xa8\xcf\xb14\xfa\xc7\xb7\xa8\xe3\xe2\xb5\xcf\x1b}\xacMxd\xb5\xd2\xf2\x07B\xc2\xb1Cuyq?\x9bq+I#\x9f\xc29\xe6\xa44m\x1e\xfbU\x99-lm\x9eV$\x06\x93\x1c/\xd4\xd7\xd0~\x18\xfb3\xd3t\x9d\xb3\xdf\x11,\xf8\x07\xd7\xd0\x1aC6y\xdc\x9aX\xc2\x8c\x01\x81\xefYf\x81\xe0\x1dO]d\x9a\xe1L0\xb68<\x12+m\xd2\xfc!\xa7h\x10\xa9H\x81`\x06[\x1c\xe6\xad\xd1\xad\xbd\xbb*\xa1P\x98\xe0\x8e\x94\xda\xfa\xf3\x18H\xc1l\xf75\x1d\xb0\xc0\xean;R\x86r0**\\I\x11\x90\xf0\xa3\x80=\xe9+h\x84\xad\xfe\x97^\x82\xbc\x16\x97W\x0c\xca\x98\'9#9\xc5K[Z<8f|0\xc0\x00SYRF\x91\x9f\x9aw\x04\r\xeb\xb4\xb3\x99\xc8T\x1bF:\np\x96\xb6\xd10_/\xcc\x93\xfaf\xa4m\xec\xef\x9e\x16\x92I\x964\xcfq\xc9\xfaT\xc4Q* \x1e_ t\xee~\xb4\xfaE\xb6q\xfa\xd3L\xfb\x9d\xff\x00J\x8e\x8e\xd9D\x88d\x00(\x19\xda:\xd7\x0f1r\xc2;c\xb0\x1c\x03\xefR\x17\x13Ek$m)T;{\xf3\x93\xec*<\xea\x13\xdc\x92#\xd8\x8a\x0f$\xf1\x81K8\x1bps\\\x1b\xef\xc8\xa8\x82.~\xf8\xc1\xa3\x0202}\xeaL_ P\x8b\x19\xc694\xc2\xed\xe3\xde\xc5fU8\xf7\xe4\xfc\xd3X\xb2\x01av\xac?\xb5!I\\\x8ap\x80\xd8$T\xb1\xbf\x920\xc6;vf\x03\xa5"n\xb5\t\x17\xcc\xb9\x1b#\xf6\xf6\xff\x00\x8a\x81}|o\x92-=\x8d\xec\x89\xf8\xf6\x0fB\x7f\xeen\x94\xefI\x87U\xd6K}\xeeD\xcexE\xc8@?\xcd\x1a\x89\xd8\x13\x93\xd8Q\x80\x06H\x1fz\x97\x8bY\x85A[x\xcb\x7f\xb8\x8e?\xefN\xe2w\xb9\x95d\x9af\xda;v\xa6\x97Q[Y4q4\xbel\xf9\xc2\xc5\x18\xe3\xf3\xc5$\x93I#a\xd0\xb9\x07\xf0G\xf8G\xd4\xd7588c\xf6\xa0\x05#"\xacGSH\x8a\x88\x93\x81\xc6\xee\xc2\x99I\xadJ\x1d\x94\x12[9\xcdD\xce\x97\x12N\x03:\xaa)\xcb*\xf6\xa6\x97\x17\xf6\x96\xf34\xde`dE\xc1\x00\x7fos\\i\x9cw\xc6\xf4\xa5\x8dv\xc8\xcdM\x9dU\xdd\xbc\xc2NGj\x87\xba\xf1K\xca\xed\x14!\xa5o\xc3\xe9\xe8\rB_\xdc\xdc\xea\x92A\x01V\xb2\xb5~v\x8f\xf5d\x03\xdf\xd8R\xe2H\xac\xed\xe3\xb7\x82\xdc\t\x19\x8e\xd4\xfe \x07\xf11\xa6\x0c\xef\x93\xea\xfa\xd3\xa25\xc7\xe5\xa7\xe2\xeaw\xfd\xd4\xd7\x18b3\xb4\x1eE0\xbc\x950\x02\xbb3}j&\xe6W\xb3o=\xa7\x8f\xcdc\xea=\x94|\x9e\xd5]\x97[{\xab\x89 \x85B\xc2\x17\xf7\x92\xf7?\xfbh\x17,\x07&\x95\xe4\xa9<T\x9e\xa1\xae]B\xcbi\x04\xccN2\xc4v\xaa6\xafs\xa8\xb3\x167\x8cS\x1d\xcfzq-\xfd\xb4\x05\xf3\xb9v\xf5\'\x96#\xdc\xd5WW\xd5E\xca:\xc4\xa4c\xa6{S\xc9w!\xc7?\xad%\xad\xd0\x7f(\xcdRu\xfb\xbdR\xe2P\x9fxfU\xedT\x1b\xe9o\x04~^\xd2J\x92j\xfd-\xecR\xc8\xcb\xb4\xb6\xd1\x82\xf8\xc0\'\xe2\xab:\x8d\xcaF\xe9\x1c1y\x936x\xea\x07\xc9\xf6\xa9\x0b31\xdds\xf5\xa6\xcc`\x03\x83\x8f\xa5g\xf7\x8fz\x88A\x04f\xa3#M@\xbaH\xaec+\xca\xb08"\xaf2YH\xc0\xbb\xfa\x98\x9es\xd0}**\xfa\xd1\xc4dF\xd8\xe4nc\xda\x9fW^4.\xfc\xedM20\xdfS~\xb5\x14\xfa\xfe\xbd\xe6\x97}E\xe5*\x7f\x8f\x06\xa6\xa1\xf1\xad\xd4V\xc8\xbeIi\xd7\x1b\x9c\xb7\xa5\xb9\xeaEAM\xa6\xb4@9\xce\x0fA\xdd\xa9\t\xec\x19F\xd01\xc6X\xff\x00\x81M=\x9d\x8c\xc1C\xdb\xa6\xc7;\x0c\x7fJu.\xae\xe2\xd4Vg\xdcw9\xfe\xb5y\xb3\xfbE\xf2\x89\x13\xdaHs\x9c\xedp@\'\xdb5g\xb6\xfbD\xd0\xa6\xc2\xc8\xf3D\xbf\xef\\\x9c\x8f\x91\x9a\xc5\x9a\xcbk*\x8c\xf23\x83\xd7\xebM\x8d\xbb`\x93\xd38\x1f5\n^\x81\xd2\xa7\xdf\xcbt>\xea\xdf\xe75&>\xb5\xd4\xa2\xc7\xa9\x1c|\x8f\xf1\x8a\xfasO\xf1\xf6\x97.\xc0\xfa\xad\xb3\xab\x9d\x88\t\nW\xd8\x10q\xfa\xd5\xe6\xc7Z\xb1+\xfe\xa8\x0f\xbb*W\xd4\x98\x1f#\xfb\xd7\xc4\x850@\xceO\xf6\xa7\x10\xdd\xdd\xda6`\xbb\x9a#\xdbc\x95\xfe\xd5Ou\xe0\xabI\x81\xf2nY\t\xecT\x11\xfbb\xac`\xf1L\xc9\x8f6\xd4\x10;\xabc\xfa\xd7\xdc\xeb\xa8?\xef%_H\xd8H|\x8ct\x07\xbdJ\xc7\xaa\x04\xd3n\x9fk)X|\xc5$\x03\x9f\x8c\x9e\xdc\xf3_\x0eY\xf8\xbf\xc4\x96.\x1a\x1dZ~\x0ev\xb9\xde?F\xcd_\xac\xbe\xdb<W\x00\x1fx\x82\xce\xe4\x04+\xeaM\xb9\xc9\xc9\xce8\xe6\xb3\xf7^\x05\xbf]>SC(\x04\x1d\x98\xa9\xdb\xb6\xf5k\x0f\x8a\xac$\xc8u\x92-\xbb\xaeG\xed_Mi\x9e!\x86\xf3q\x8e\xe4\x02\x14\x06Y\x06\n\x8f\xa9\xed\xc5KGx\xb1\x8b\x89\xb9\x91\x04E\xdc\xa1\xfc\x00\x7f\x11\x03\xb7\xd2\xbee\xb1\xfbb\xb1\x8b{K\xe1\xa4\x8eFP\xbf\xbaeeP\x0e}!\x87\x19\xa9H\xbe\xd74\x03\r\xd4"\xce\xea\x15\x9b\x19\xc8\x07\xea85W?\x84z\x98\x91\xb1\xd3\xe5\xd3\x90\x08\x05X\xe3\xea\xa6\xaca\xeb\xdd1\xd4\x0f\xc6\xc4\x1b\xdc\x82\xbf\xd4W\xd3\xd2\xcc\x1b\x1b\xe5\r\xe9P\x08\x18\x07\x1f\xdf\x8an\xd7R.]d\xf5g*\x7f\x84q\x80N+\x07\xb1\xfbZ\xd1\xa4\x8ax\xbfl:nUQ\xe7F\xeb\xb8\x01\x8c\x83\xc8S\xeej\xc5e\xf6\x81\xa1L\x11c\xd5,\x98\xed\xc1S(\xcf\x1f\xfb\xb1T\xd3\xf8s\xaaB\xccd\xb4\x98\xef\xc9C\xb8\xfd*\xca\x0e\xa3a(\x01.\xe1#<\x07\x15\xb4\xcd\xaa\xc9(G\xc1\xf5*(\xe3\x80@\xe6\x9c\xdb\xebd\x02\xb2o\x9a\x00=\'o\t\x9f\xaf\xd3\x91Y\x8c\x1e*\xb1\x91\x83\x0b\xb8\x98.\x19@t`@\x1d84\xe2O\x11*$\xae\xb3d\x1c\xe7\x07\xd2~\x9dj\xb5\xfau\xc9w\xd5\x13e\xcf\xab=\xf3S?\x82T\x00F\x07\x15\xa8[\xdf\x86T*\xbc+d\xcazg<\x11\x9e\x83\xe2\x9e\xc9u}2<e<\xd1\xe7\x02\xde\xad\xa4{\x00\x17\xaek\x14\x1a\xbd\xcd\xd1\xf3\x16\xfb\xd0H>Z\x90\x07\xb7A\xc7\xd6\xaev\xbe \x95\xe11\xcb?\xef\x14\x0c\xb7\xb1=\xb3\x91\x8ai\xecn-\xf5\xfa\xd8\x87\x1a]\x14\x91\xdb\x1b\x8e\xf4\x92\xaa\xc4\x10\x06A\xc8\'r*\xcbwrc,\xb9E#\x0b\x93\xc6jV\xc6\xf1m\xf6\xc7\xf7hd1\xa9V$`\xb0\xceIo\xf0k6\x97Y\x86f\x00\xcc\t\xce\x069\xc1#\x19?\x15!\xfbI\x82\xc3$2z\xb7cy9c\xc6?\xf34\xc4v\xd3\xdb\xe8e\xca6y\xc0\xed\xbfzu\x91\x1dt\xb0\xe7\xff\x00;V\x84\xf7\xa6}\xa1mc\x8d\x01$(\xcepO\xbf\xd6\x9a\xcf\x1d\xcc\x88dH\x9d6\xcb\x8d\xbd\xb1\xd8\xf3\xd4UR\x1d]\xa0\x95dr\x1c\x8e\xe4t\xcfZ\x95]p]\xe2O\xbc\xa8\xc9!\xbad\x0cv\x1f5\x19\xe2\x95\x9aI$\x8f[\x1e\x08\x00\x01\x81\xce\xc3\xf6\xa6\xfc\xa2\x9aB\x00\x07\xceOz\xb0\xa5\xd3\xc8\xe8\x18\xc6<\xb5\xe88\xe9\xfd\xe9\xf0\xbf\x91\xe2\x81E\xccC$\xe3\x8fX\x04\xe4\xe4\x9e\x05U?i\xda\xf9p\x94\x927)&@n\x17i\x1d\xc9\xf9\xed]C\xe2->/1n\xa1;\xd6@\xc2\xe1X\x1ct\xf4\x81\x83\x90~)\xcbt\x98\x87\x1eiVq\xeb\xce\xac\x901\x81\xb7\xd3jn[ppDY\x00\xec0?\xbdh\xb0[,m\xe5\x82\xcf$\xf1\x95\x129\xc7=Fq\xed\x8a\x91\x9a\xc9\xcc\x0bp\xa1$Xs#\x96\x04\x91 \\\xf4\x1d>*\x97\x1e\xa0\x9767rYZ\xcf&\x08h\x94\xe1\xc7\xe2\xe4\x82=\xb1\xd2\x9f\x9dGV\xba\xb4b\xb76\xb6\xf0L\x165\x8c0\\\xae=\xd8\x92H\xf7\xade\xb5\xcc\to,mm#\x06]Q\x88\xbdD\x15\xcf$\x81\xb0#\';\xefT\xb2Z\xce][\xceE\xc3a\xb5\xed\xfd3\xda\x9b^\\Bg\xddl\xac\xe9\xce\xe2G^\xfd\xe9\xcd\xb5\xfc\xa5\xc4\xab<j\xaa\x0eAl\xe3<\x0c\x0e9\xaa\xf2\xea\xb1Gt\xf2\xc7!f\x11\x05,\xb8\x1c\x8e\x0e\x06:\x1aW\xef\x90]E$J\xcbn\x19\xc1Y\x11\x03\x15>\xddzb\xb2\x91\xcb"\\\x19#\x98F\xef!`\xab\xe8PF\xeas\xdb\xe9V\xadk\xfc5S\x19 (\x1a\x8e\xe7~r;\xd4\xbd\xe4\x8a7\xef\x9d\xa4\x07\x94;\x00\xe7\xa1\xa6\x115\xea*\xb3[\x9c6J\xb1\x1c\x1d\xa7\x1cb\x9bIsc\xb8D%d\r \xdaY\x80\xc0\xfe\\\xf4\xa5_U\xb3X\x0c+(PH\xc8,\t\xdd\xf0\x07A\xf3M0\x13<\xf2\xb0\xd2U\x0e\x82\x9a\x9bSgq\xea\xdf\xbf\xda\xba\xb1:\xaa\xa0\x8fVH\xceF0>\xd5-\x06\xaf6\xf7Y\xad\xa2`\xe9\xb7\x0c1\xf4 \xfb\xd3y.\x95\x88\x910\x1f\x8c\xfa\xb208\xe3\x15\x19\x1d\xcc\x130\x1bI=I\xcf<w\xc5+:@\xf0\xb1\xf3V#\xb4\x8fVy\xc7$\xf28\xa6\xe5\xb8\xbc\xb9\x8dRIC\x05b\xcaX\x0c\xe7\x93\x83\x8ek\x9f\x87\x8a7\xcf\x96S8\xce3\x8a\x9a\xb7\x94)E\x05q\xc3d\x03\x83\xcfCR\x93H\xb0M9>S\xc7#\x00cP\n\x03\x8c\x83\x81\xd2\xa9\xd6\xb7W\x8d\x1a\x84\x8d\x9e\x1eDlXm,\xbczs\xedN\x85\xfcI\xb1VM\x8e]\x93\x9cr1\xfc<\xf55*\x0b\xa9m\xe1\xf2\xd9X\x02\xc8\xc1\xb3\x8d \x02\x08\ny\x045G\x96\xcc\x99\x0e\x08;\x10q\xbf\xeb\xed\xc5K^j7\x17K\x1a\xc7.\x11\x14/e\x19\xf6\xedICqqj\xed$\x98\x84\x86E\xdd\xb8a\x83s\x91\xec*\xb7w\x04W\x918[\x94\x0c\xa0\x1c\x16\xf79\xcdy\r\xd4H\x14!\x0e\x11v1\'\'\x8f\xaf\x19\xa6\xbf\x15,\x92\xac\xf7\x12\xdc4\x8cF\x18?\xe4\xc0\xc0#9\xa7\x85\x9ay~Z*\xe3\xb8\xd3Wm@E\x00\x82e\x82I\x18\xfa\x99\xb1\x92=\xf3\xda\x91R\xca\x91m\x90H\xce\xb9\xda\xcaI\xce?\x0f=x\xaa\xd5\xb7\x89\x1a\xd3\xef\x11\x97\xf3\n\xc6IwB@G\xe0\x80NFF9\x14\xc2\xe7\xc4~H\x85C9\xfb\xc4\xa9\x18(\xbc\xe5\xfa\x1c\xf6\xfa\xd5\x9d\xcd\xdc2\xcd\x0c\xd1,\xa2G\x00\xb2\xaa\xe9\xf2\xf0\x06\n\x90FY\x87s\xc5G\x8e\xcap\xbaX\xa9\n\x7f1<\x8f\xa6;T\x9d\xfd\xdc6\xf0\x9b\xa9IH\x95X\xcd+d*\x94\xe1\x87\xd0c\x9a\xadj\xf1M\xe2\xfd\t\xdfI\xfd\xec0\xce@\x93i\x1b\xc1]\xa4q\xdb\xebH\xea\x17\x89w\xf7\xbd;T\xbb\x8a4\x98\x14\xb7\x8dr\xc1\xc2\x82I$q\x93\x8e\x95\x17\xa2^M\xe1m\n{{K\xc8\xed\xe3\xdcY\xa6\x92P\xa8\x81\xfde\x8e\xeeO\xc6\x06i]:;{{\x95\x96T\x94\xb1\x90\r\x03\x18a\xa7s\xce\xfe\xaa\x94\xe8\xfeW\xa0\xaeW\x82s\xef\xfe*V\xc5\xacl\xf4\x93\xa1\xea\xf2\x89Vx\xff\x00\t\xceQ\xb1\x8c1\xf68\xceMV\xb4O\x11xcU\xba_\x0fi>e\xd2Y\xdbK\n\x85\xf4\xc4\xf9S\x90$\xeb\xf1\x9f\xd2\xb3=S\xc6\xd7\x9e\'\xd5V\xc2-Z\xd6,\x12#\x05\t\x92Ul\x8c\x8crs\x8e\x9e\xd5=\xe0\xed\x0bQ\xbc\xb5\xf1d\xb6\xbfr\xb0{\x85"\xd2\xf5\xd9\x96g\x97\xae\xe0\x8a\x02\xf9d\x02\n\x80\x0ekK\xf89V\x02n.Z\x07\x08\xa68\xc9\xd2\x83Y\xdd\x9c\x9ep;\x0f\x9a\x8cd\x01\xf2\x8a\x1c\x16:\x88\xdfp8\x18\xa7\xbe.\xd0%\xb7i/4\x1b{\x7f&\xc6\xcdm\'\xb7W\x90\x8d\xef\xeb>\xc0\x95\x07\x8c\xf2{\xd5]\xafd\x86\x0bs\xaa]\xb2\xcd\x02\x04\x11&\x18\xc7\xe9\xea\xe1\x7f\x0f\xbe*\xee\xba\xf7\x89\x17M\xb7\xb1s\xa7\xdb\xcdirc\xb8\x1e\x8d\x92\xc1\x1aaSi\xdcS=\t\x19=\xfaV\x7f\xab\xfe\xc6\x92\xff\x00[\x92\xce5\xb7\x9eg\x8e_\xbb\xc1#\\+\x16<\xb3\xb9U\xc7\xe9\xd6\xa7[\xebhP~"& g\\Dj#8\xdf\xd8~\xb9\xa7\xe2\x90\xab\x90Q\x86\xf8\xf5q\xef\xf7\xab6\x91ohV\xe2]V\xea\xe2\x19\xad\xd1e\xb4\xb6\x04\x95c\x9eN?\xde\x0eA\xed\x8a\xb4\xf8r\xfbH\xd1\xd9.\xc5\xe4\xbfz\x92\xe9\xd9`_\xe0\x84\x0e\x01\xfa\xe4\xd6o\xa1\x98\xf5\xcb).\x14mb\xcb\x14\x8b\xb8\xac\x99\x07\x07\x04\xf029\x06\x9a\xebV\xb6\x1e\x19\xb8\xb0w\xd5Q\x9aH\xa4\xdb\x1e\xf0\x80\x08\xdfj~.pW\x07>\xf4\xecRH\xb7,\xca\xa8\xb3\xa4e\x151\x96,\x0e\xadX\xce\xf8\xf7\xa7$\xd0\xc8\x01r\xc8\xe7Q9\xdb\x18\xc6+b\xf1]\xd5\xdf\x8a. \xbe\x17N\xb6\x16?w\x11C\xb4\xe1\xa5}\xcc\xccON6\x81\xf4\xaan\xbc\x96\xb3\xc8\xda\xc4v\xd7\x10\x9b\xab\xc8\xa3\xb5\x8a\x19D\xec\xf1\xa9oQ\x08\x0e\x07\x19`H\xc5Q4\xdf\x14\xb6\xa3wslw\xb4`\x12vH\x1e=\xa4c\xa0<{g\xad?\x9b\xc4\xa2\xd2\xda\x17\xd3\xc7\xdd\xa3\x8e<G\x16\x1a\x1cq\x86bN\t\x04\x1eI\xebK\x92[\xb7\xb8o\xc4C\xa9\xe5\x0b\xe6c\x04d\xe7}\xf3\x8d\xb8\x15\xc8\x92$\x89D2\x00\x89\x9d\x03\x8c\x01\x8d\xbew\xa9\xe5\xb9\xcd\xd5\xdc\xa6\xfa\xeeU\xf3LRE \x02\x05\xc2\xed;s\x921\xf1\xd6\x96\x9e{\x8dj\xe2]Z\xea\xf2\xc9\xd2\x08\x82\x0by\xc9>bp\n(L`\x908=+=\xbe\xf1\x11h\x95|\xbd\xed FC\x1f\xe1%\xcf\xc7@:\x92j\xab\xa9\xeb\xb2\xad\xbd\xc2Z\xcc\xd2\x193\xbd\x91pv\x8f\xe1\xcf\xb0\xff\x00\xbdr\x0b\x1b\xc9\x8c@\x00\x80i\x00c\xd2t\xed\x93\x8e\xfb\xf3K\x9a\xee\xda\x05vf\xc9\xd2x\xe4g\xb0\xcf\xd2\xb5X<Wggm%\xad\x9cr!Vg+\x04\x84\xaa\xb1<\x83\xf2p3N\xae\xbcj/\xe1\x89/$X\x91r\xa1f}\xa4\xe7\x81\x96=\x87\xb7z\xf9fmzH\x0e\xdby\xdf~xe\xe0\x8f\x8a\xf5<Gs"\x10\xe0H\x17\x0cX\xf3\x8f\x9e{\xd5\xc4\xbe\x133\xb7\x9a\xecX\x96\xd5\x92NA>\xc3\xb5T\x0f\x12Y)\xd0\x00\xca\x8c{\x8a\xfa\x88\xf8\xbfOcim\x1b\x00\x08Tg\x89\x1b\x04)-\xb3w\x19\x04\x92y\xab\xc6\x9f\xe3\xbd\x12\xd6\x15\x13\\\\\x12P\x8d\xc4\x84\xc6;{\xe7\xdb\x15\xf2\r\xb7\x8a\xe0E-"z\x89^\x01\xe3\x1d\xeag\xff\x00WB\xca\x1d\xbc\x97#\xa3\xb0\x03i\xc7\x1cg\xa8\xf7\xaa\xcb\xbf\x0b<\xb2#2\xcaY\x7f\x9b#$\xe3\x1e\xdfj\x94\xbd^\xd1\xe3 I\x18\x1c\xe0|\xd7\xd5\xb0\xf8\xfbH\x85ge\xb6u;\x8b\x02\xa0\x90\xc1\x87\xe2<\xe0}+\x8b\xcf\x1aH\x96\xefomq \x8eu\'tk\xbfh\x1c\x82\xc7\xaf\x1e\xd5\xf3\r\xb7\x8f\xada\x1bY\xa3\x90\xb1\x1c\xb0\xff\x00\xccT\xdax\xff\x00M\x90\xcdn\x8c\xb6\xf0d8%\xc3\xe5\xfb\xe4\x8e\xc6\xaa[\xc2\x12\xc2\xfa\xd2\xd6M\xb99\xe4\x11\x8fl\xd2\xd3\xaa\xd863*\x1d\xf3\xbe\xf8"\xb6\xfb\x7f\x1f\xc9i\xa6Mi0g\xb9\n\xa1fa\x97~\xc0\xe4\xfb\xf2N;UsU\xf1\xdaChm..\x8c~lqI$Q\xaeY\xb6\x83\x8e{u\xcdf\x97\xde3\xb1\xb8\x8a8\xb4\xbb\x19$\x9d\x88\xf3\xa6\x01\x9c3g\xa0$`\x0f\x81\xcdA\xbe\x83\xe2}Hy\xdf\xb2\xaf$i[$\x95\t\x908\xc0\xcfP:qV\x96>\x18\xd4\xc2Y \x96.p;\xef\xce=\x85C\xbb\xeb0FJ\xc2\xe8\xdb\x82Om\xbf\xbdN\xe9\xfa\xc5\xb3\xea\x04^I/\x91.r"\xc0s\xdct\xed\xefZO\x87,\x12\xe2ky\xa6\x95\xa0\xb22\x8d\xbb\xc8\xc9$\xe39\xf7\xe8\ra\x97>\x1f\xf1\x85\x8d\xdce-\x85\x94a\x94\x87\x93\x04\xb1 w\x19\xe0V\x99m\xa1x\xebQ\xdb3\xdf\xd8\x94\x8a\x15X\xe2\x08|\xb5\x19$\x94\\\xe0g\xbdZ\xdft\t\xa4L\xc6\xca\xba\x93\x18\xc9\xdb\xed\x8a\x89\x1f^S\xa9p\xe4\x86\xfc\xd5\xf4\r\xbc\x96zr:\xda\xd8\xa3}\xdf\xd0\xed\x13\xfaY\x8f\xb1\xe7\x8fz{mqsx\xaf$\x89j\x96\xcd\x1bd\xa9>`q\xce8\xe2\xb1]kJ\xf1\xbai\xf7\xe0jv\x96PO\xb0\x95\xb7B\x00\x87\x18*\x99\'\x00\x9e\xb9\xe74\xaf\x85|\t*i\xed\r\xfe\xb3\xab\xdeYM\x16#\xb7\x86\xe8\xdb\xa9#\x91\xb8\xa8\xcf\xf5\xedY\xc9<\'t\xd13\xc9r\x88Y\xbf\xf6\xd5rt\x9f\x9d\xb7\xa0\xf5h\xcb\x80\xb0\xb3\x0c~bq\xbdi#\xc6\xfe\x1c3\xda\xf9\xba\x97\xefeo,\xbb7\xfax\xfc#\xe78\xed\xd2\xa7/\xbck\xa5I\xa32\xae\xa1\x1a\x9b\xa4\x96\x0cL\xea\xe3*=D\x0c\xfec\xb5|\xc9}\xf6Cie\'\xde\xa4\x12\xcf\x07\x9aU\x83\xc9\x96\x0b\x9fI\xcf\x1d\xaa\xd7a\xf6M\xe1\xdb\xd8<\xd8\xd2Y\t\n\x1dVv8\xcf\xce{f\xac\x17\xc2Vp\x10\xd1u\t\x01+\x86b\x99\'\xf7\xa8\xff\x00\xea\x92\xbf\xe6\xb5]\x8eG\xab\xfe+\xab/\xb6_\x07\xf8~a\xa7\xb5\xb4\xee\xcbr\xe6iU@;\n\xf0G\xb9\xcfQ\xedS\x17\x1fjZ,\xd6\xf1:\xdc\xa0Y\x00+\xc8\x19=\x87\xc5Wo\xbe\xc5\xf4kh\x89\xb7\xb1g\x94\r\xc06[8\xed\x9fz\xefA\xf0O\x85n\xe4\x8e\xd2\xe3E\x82;\x82\xac\x030\xf4\xb1\xfav5"o\nt\x19<\xa6\r0a\xf9\xdb \xea>\xf5\xd8z\xcfP\x8c\xc8\nDA>\x9eF\x05@\xea\xbfi\xb6fY \xb5\x93{\xb7*\xec\xd9\xc1\xec\x00\xfe\x94\xdbN\xf1\xee\x8c\xd635\xd5\xcd\xeb\xdc\xc4\x00{x\xe2>\xb6s\x8fCp\t^\xf9\xad`}\x9bh\xa7\x98t\xf8\xa2m\x85\x142\x82\x18u\xc9\x07\xa8\xf6#\x9a\xa5\xea\xfe\x14\xb4\xd2\xaeJ$a\xe3\x93\x85\x1bC\x1e:\xa9\x1cr*l]\x0f\xa2,b0\xb2gbH8;|\xd3run\xa4\xcd\xabTc\xb61\x91TD\xd6u\xbdR\xed$m>t\x8b\x18\x8d\x18\xae\xf6\\w\xff\x00>\xd5\tw\xa0\xf8\xba_5\xc9\x11F0\xcaK\xee\xc0\'\xb8\x15\xaeh\xde]\x9b\xc2\x93\xdb3[\x99\x0e\x18\xae\xe6\x89\x87BO\xb7l\xfe\xb5\xa9\x1d6\xda\xed&\x9a\xd1\xe2Y\x15\n\xee\x00\r\xbd2{\x8f\xc8\x8a\xb4\x89,-\x8f\xf0\xed\x97\xb0\x19\xde\xa0\xbc\x97S\x03\xaa\xe5\xb7\xe7\x1bW\xca\xe9\xe1_\x15\x0b\x04\x81\xafVH\xbc\xcd\xec\x02\x9d\xce\xc7\x9f[w\xc7j\x90\xd1\xf4\x0b)/b\x8a\xe9L\x13\xab\x00\x1f\xb6\xeff\x07\xb1\xaf\xa5\x12\xc2"\xf0\xc5\xf7uC\x1c@\x11\xb7\x903\x83\xd3\x8d\xb9\xeb\xedU\xfdO\xc36w\xcbp\xc9d#\x9e3\x82A\xda\xde\xf9\x1e\xe3\x15,^\xa0\x04"*\xef\xdbnj#[\x02A.X\xfc\x9a\x81\xb1\xf0\x9e\x99u<\x88\xd6\x08\xb9\x01\xbd\';\x87M\xe9\xee=\xc7Z\xf6\xf3\xec\xde\xc8H\x97V\x0c\x16d\xc7 zXw\x1cW\xb6wWzL\xebkp\xcev\x8c\xa8bA#\xaeW\xd8\x8f\xd4U\xe6\xcbP\xb5\x0b\x0bO;\xa4.\xf8\x9eL\x1d\x9b\x80\xe1\xd8\xaf\x0b\x93\xd4\xf4\xf7\xa6\xcd\xe4\xb9\xfc\xdbQ\xe4\xc5\x8f\xcbUG\xb1\xd6t\x90R\'\x92\xe2\xdc\x80v1\xc1\xfc\x9a\xae:\x0e\xbd\x1bGn\xb7.\xe4`\x831\x00\xed\xcf\xf0H?\xfe\xea\xb5\x0bV\x9a\r\x9b\x1d7\x10\x06\xe5\xe8{d\x8f\x7fz\xac\xdd\xf8>\xe4\\\xad\xcd\xbc\xbb\x1c\xa6\xe9\x11\x01\xda\xdd\xc6M \xcb#\xeey\xecE$\x84]\xb3O\xd3I\x9fE\xbd\xba\xbc\xd0\x94<O\x18\x9eK\x03\x8f.|\x1eZ/\xe5\x7f\x91\xc1\xefV\xdd\x1fY\xb1\xd5#\x91\xec\xcby\x8a\xc1e\x81\xc1Y\x12B2Q\xd4\xf4a\xedU]>\xfciO<W0\xca\x88\xe4z\x1f\xf0\x03\xfcF6\x1cma\xdb\x8fpjZ\xe3M\xb4\xfb\xc4\x1a\xb5\x8e\xa8\xd6\xf7Raai\xd71\xcf\x81\xb9\x16e\x18\'\x03\xa3\x0fP\xa5\xc6\xc7\x1e\xdd\xf1L\xb6?\xe6\xad\x17\xe2\xda[R\x97\n\xcb\xb8p@\xce\r3\xd2u\x89a\xb7\x96\xc4\x07`\xaeX\xda\xb7\x1et`\xe0\xb4Y\xc6\x18w\x1d\r<\xd359.\xe7}2\xfe\xdc\xdbj\x88\xbb\x9a\x06\xc3\x07\x8c\x9cy\x90\xb6\x00\x91;\xe7\xa8\xee*jm4L\x17\xf7H}E|\xc5;_#\xf9O\xbf\xc5KP\xf9\x05{\x0c\x1d\xaa32\xe0\xa9\xf7\xces]i\xfa\xde\x9f}p\xd6k.\xf9Y\x0bG\x1b\x82\x8eTv\x1e\xe4w\x1di\xfb<rFc\x95X\x11\xc0`\x7f\xb5T\xb5-\x07R\x8d\xa4\xb9\x86\xe3t\xef\xb5\x92p\xab\xe6,\x89\xf8Kq\x86\xc7C\x9e~i\xae\x8f\xe3\xc5\xb0\xbd\x1ag\x8a\xe0\x8bN\x96V\xc47\xc87Y\\7M\xa4\xb7\xfaNObp}\xe9\xe5\x90\x83\xa5\xf6\xdfc\xda\x99d\x04e7\xf8\xefS\x97QI`\xef4\xc6I\xed\x9b\x04\xcc\x8b\x99\xe2\xf8p9t\xfe\xa2\x9c\x8b\xf0\x8a\x87\xcf\x12\xc2\xd8\x11H\x99\xda\xc0t\x19\x1d\xea\xcd\x12Ar\xf9\x8aH\xe4\xe7\x9d\xae\x01\xcfn\x0f4\xdd\xf4\xebDI`kU1\xc8\xc5\xa4\x89\x97\n\xd9\xfe =\xfei\xf0\x84n\x0e\xd4\xce\xa0v \xe6\xa2a\xd4 \x97\xf7\xb6\xf7Q\xc8\xca\xde\xb8\xdf\xfd@\x7f\x94\x83\xd3\x1e\xf4\xb5\xc4\x17$\xb5\xee\x99xm.\x91=PH7\xdaN3\x9cH\x83\x90\x7f\xdc\xbc\x8a\x8f\xbd\xd2V\xd5\x14<\x12]\xc0\x1f\x02U\xc1\xb9\x847O\xff\x00x\xab\xd3\x07\x9c{\xd26;>\xed\x0c\xb6\xfa\x84d<\x85R\xe3;\xed\xe4=\x86[\x98\xd8\x9e61\xc85\xddG8aA\nFA\xa9\xdb\x7f\x14[\xbb\xc3i\xa9[\xbe\x99\x7f&\x15a\x90\xee\xb7\x99\xfd\xa2\x97\x007\xfe\xd3\x86\xf8\xa9?,\xc1\x1c\x9fu>Qv\xfc\x05KDXw\xdb\xdb\xf2\xaa\xa34\xd2Cum\xa9\xdaGy\x03\x81\xe6\xab0\x08\xcb\xdfpl\xe3\xff\x001]\x9b\xdb\xdd\x1a\x18Z\xcc\x99\xed"G\x07O\xb8\x93\xcc\x93\x00zD\x13\x92\x08\xc6:>F;\x8aXs\xdfq\xef\x8c\x11H)\xed\x8f\xedV\xd8\xef\xe3\x01D\xea \x97\x19$\xfa\x94\xe3\xd8\xff\x00\xcd9i\xed\xd8\xe5\x8cn2\x08\xe3\x955P\xb5\xd74=mXG \x8a\xe4*\x97\xb7\x9ftS o\xe1u9\x18\xf9\x19\x07\xde\x9e\xc8\xa1\x1e_2\x16\x8f\x08\x07\x98\x87*G#<\xf1\x9fzX}\xb6 \x8fzI]\xf7\x04\x1a\xb0Ks<#|(\xb3 \xfcQ\x82\x03\xfdT\x9e\x0f\xd0\xd4k\x95\xba247\xdb^2\x0b\xa2\xfad\x8c\xf5\xc3)\xfe\xc6\x99\x19Dq\x87]\x8f\x1cl\xb9\xc6\x0f\xa4\x9e\xe7\xd8\xd4}\xd6\xa1f\xc2F\x927\xca\x06>dy\x8d\xd1A\xc6U\xb2H\x1f^+\xa5\xb6\xdc\xd0\x14\xf6\xde\xa6\x14\xdc)\x91\xd1\xd5\xc2\x83\xbd\x94\xe0\x0f\xfd\xe89\xcf\xd2\x857\xf7\n^\xde\xe6\xd6hK\x8d\xc1\t\x07\xd3\xd5A\xecO\xb1\xa6\xb6\xb2\xf9\xc0,\xd1G\'\n\x12\xe10\xaf"\xb2\xf5u^2\x0f\x19\x04\x83\xec)#\xa7\xcc\xd3\x0b\x8bW\xfb\xad\xcf\x96?y\x18\x0e\x92\x00\x7f\x0c\xcb\xd1\xc7o\x7fc\\\x04\xe0c&\x8c\x0f\x8a\xb2\xdb\\E!\x08W\xc9\x9b\x90RN\x08?\x1dG\xe9N\xd86P\x968\xc7A\xc8\xfe\x95R\x97Z\x16\x8a\xf1k\xbax\xb2\x1c\x0f\xbd\xc6w\xd9\xb1c\x81\xb8\x9fTD\x9f\xe6\x18\x1e\xf5(n\xef`[c\x1a\xf9\xd08\xe6@F0zm#\xb7\xb5,7\xedI+S\x8a\xa90\x8f\x83\x91\xf8J\x9d\xac??\xf9\xa2\x9a\xdbL%WdW\xce\x07\xa4\xfe {\xf0\x7f\xf8\xa2\x94\x08\xf6\xa4\xe2\xbf+\xcd\xbcq\xec\x92g\xf3%c\x8fsZ\x87\x85\xbe\xce\xf5O\x10I\x14\xb7\x88l\xec\xc6\x08\x07\x87q\xfe\x05h>\x0c\xfb8\xd34\xd8\x85\xd6\xa2\xd1\xdc]+\xa9\xf3Y\x86\xc8\xc9\xec\xa0\xff\x00z\xd0/\xb5\x1b{x\xd1-\xb0\x80\xae\xdf0d\x90O\xc7AU\x8d&\xdbl*_\'\x1b\x9a\xe7O\xb1\xd1\xfc7\x02ZZ[\x82\xcb\x80vu\xe7\xdf\xdc\xd3\xcb\xe4{\xb8\xc8\x9d%N2\xb1\xa1\xcbc\xfd\xc7\xb5G5\xf9\xb0\xb6\x93\xc8\xb37W\xa7$\xe5\xb2\x14g\x1c\xb601\xf1Q\x12K\x7f%\xcc\rxeb\x83pX8M\xcd\xee3\x96\xc7\xcd0\xc4\x9d\x89\xc8\xf6\x1f\xde\x9dE\xee0>\x7f\xc5KEu\x05\xbcR[\xc3l\xec\xc8\xd8+\x9e\x06\x06\x7f\x11\xe2\xa4-\xa1{\xe0\xb2\xcb\x08U\x001E\xfc?\x19=\xeb\xcbK\x03\x12\xcb,\xc9$g``\xa7\x979\xe4\xf0(\x13^\\#6\x9b\x14/ \xca\xbc\xf3dC\x07\xb9\x0b\xfce\x7f!\\\x08\x062\xbbc\xf2\x81]/\x9c\xe1\xb7\xf7&\x9f)\x85"\x9c\xc5\x00\xb5V`\x1aiN\xd5,{/\xf3\x1f\xa5:\xb7O2!$H!T\x1f\xea\xdc\x02\x07^HZ\x85\xb5\x11@\x0c\xd0L\xda\xc5\xea\x82\x1a\xfe\xe7\xd3m\x0f\xb9^6\xe3\xd8&O\xcdM\xb4\xb1\xc3$\x0fwr\xd77s/\xee\x02\x83\xb3p\xeb\xb20= {\x9aqUy\xc0\xfe\xd4\x86\'\x8f\xfei\xea\xdcIpD\xf1\xa9\x91U\xf6\xac\xb3\xfa\x10\x01\xdd\x16\x93\x9fY\x89\x0c\x80\x12\xf2\x0e\x18\x8f\x8aR\xe5neh\xff\x00\x12.\xdc\x00X\x05\x19\xe3uD\x1d:\xd6 \x1e\xf1\x996\xb9\xc2\x96\xc1s\xee\xde\xcbKb\xfc\x0f\xb94\x95\t\xde\xa1.5Y\xaen\xa4\\\xbb\x05\x1f\xbb\x01Ic\x9f\xf7\x1e\x05"\xb7\xda\x86\xd0$\x82\x18\xd0\xf1\x96\'w\xe7N\xa6s<\xe4\xc7:,|p0\x01\x1d=\x18\xed\xf3Q\xb7\xd7\x16\xdat\xc9\x1c\xa8\xb7\x17R\xe0-\xbd\xba\x99\xae\x0e}\xd0\x10\x10\x7f\xb9\xb0)\xad-\x92s\x9a{P\xc0\x18\xa7\x92I\xb25\x92Rf\x91\xbaG\x18\xc9\xc7j\xa9]]E\xab\xdc\xbd\xaa\xdcI"\xa1\x0b%\xbd\xabyh\xbf\xfe\xf6^\xe7\xe0T\xe4\xf6\xfa\xbe\xa4\xb1\xa6\xaf<\x1a~\x9f!\xda\xb6\x16\xce\x0c\xb2\xfb\t$\x03,O\xf2\xa7\xebV\x0bm6\xd2\xd2\xd9\xb6G\xf7\x1bh\xd3\x1b\x88D8\xf8\x1d\x13\xfa\x9a4\x9e\xc74j\x03\x91QZ|\x16:U\xacV\xad"\x06\xc1+k\x009`>\x07\'\xe4\x9a\x94\xfb\xdc\xcc\x91<\xce\xd6\xb1\x95\xf4A\x03n\x95\x81\xf7=\xbf*\xf6+\x142\x08\xe0\x8c\xdb\xc5 #\x7f[\xa9\t9\x00n\xe4\x03\xee\xdc\xfcTD~Tf\xe2\xc7J\x8d%0K\xb6\xea\xe6fg\x866\'\x90\xf2g/\'\xfbT\xfdH\xae\x1dC\x8cc\xde\x8fI\xe6\xac\x1eu\xb2)i%K;p0Iq\xb9\x89\xfef\xf7\xfaW+\xabZZ\xdb,\x85\x99\x13v\xdbk\\\x134\xc78\xdc\x14s\x8f\x93Q-\xa5j\x17H\xbb\x19w\ts\xf7\x89\xe3F\xf2\xcfe\x86!\xe9S\x81\xc19\xa5m\xec\xca\xcf\xba\xcc\xa3\xedw\xfb\xfd\xfc\xed\xe6:\xed\xfe\x11\x93\x80O\xb7oj\xe6\xf8\xa3j}|^xVk\xbb\x84\x820}p\xa3rs\xd03w?Jes\x12F\xd0[\x87\x8dQJ\x9f4\x8d\xd8\xcf@\xab\xdc\xfc\xd7N\x92\x99\xbe\xe9nY\x0cY\x90\x96_2IX\xe7/\x83\xd0\x01\xd0\xb6\x07\xb0\xa7\xda|\x01l\xb7\x98\x84\xb26|\xb0_-#\xaf\xfb\x8f^?!M2\xea?\xd6\x9cV\xc0\xa8\x9b\xb9\x9e\'\x10\xda\x17\xf3\x1f\x99.\x98n`:a\x17\xfc\xd3\x1bia\x12L\x126\x91\x90\xed\x96Fl\xf3\xec\xcd\xef\xf1S\xd6\xd1I$j\xe0\x86,\x0f+\xe9V\'\x80\x11\x9b\x92\x17\xde\x99\xc9\xa4\xc8\x828Byv\xc4\x12\x96\xfb\x7f\x1b\x9ew9\xea~\x9f\xad4\xcai\xd5a\xde\xaa:\xa6..\x85\xb2E\xe7lpX\xb9\xd9\n\x1cd\xe7\xf9\x88\xf6\xa8\x1dFh\xdaI\xad\xed!&\xe1\x10n9\xc0\x00\xf4$\x0f\xe8+A\x1at\xf0y\xd2<\x82YQJ:(\x04\x86\xeb\xd0w\xc7\xebU\xfb[+;U\xd4\x96\x0ba,\xdb\xf7\xfd\xdd\x1c\x02Y\xce\x07\x9b/ \xb1\xeaGaM\xe0\x8e\xd4\xe8a\xefT;\x9bo.\x14s\x1f\x9d&\xd22;\xb9\xe3\xd5\xec\x05G\x8d\x15\xa3\x868\xe4\x93$\x82\xd2q\xd5\x8f\xf6\x02\xb4h\xedD0\xd9ZH\x15\xa7\x901*\x9d\xd9yb3\x8fJ\xfb\x9a\x8c\xbb\xd2/u9\x8a8X\xac`\'\xcc\x03\x1bX\xa1\xe89\xe4{\xb3q\xec+\x81\xd8m\xf7\xa3j\xca_G\x96\xfa\xe2D\xb6\x8d\xfe\xeb\t\xf5\xce\x07\x0eGUS\xdc|\xd3{\x9d\x02;i\xa2\x93\xca\xf2\x84\xa0\xe5OWn\x80g\xaf\xe4+iKC\xf7x\xa6KV0\x92V\xde%\xc2\xee\x00c+\xd3\x83IG\xa0\x88&{\xd9H\x96\xe9\x94G\x1eG\xa6<\x9f\xc2\xa0\xe4\xe7\xdc\xd2\xbc\xf7\x15\xcd\x03\xfek\x0c\xbb\xd0\xaf\xe3\x8d\x95\xa1A#\x9c\xf28\x8d=\xce{\xfdj\xbfw\xa3H<\x92ONX\x9e\xa0\x0f\xe2>\xdf\x9d}\r\x17\x87&\x9e9@\x91^g\x95\x84\xf3\x03\xb9\x83\x7f*\x83\x91\x90;\xf6\xa8\xf9|?m$\xd3Z\xc1g\xe64\x1bX,\x8d\x85\xdf\x9e\x0b\x9e\xe7\xbd:\xb7\r\xedI(\r`S\xe9\x12\x13\xea\x05\x80\x19U\xc7<\xfb\xe2\xa2\'\xd2f\x99\xcf\xf2\xc6xQ\xd0\x9e\xff\x00\\W\xd2w\x9e\x0f\x8e9\tw\x1f\xbc*\xd21\x18\xdeO\xf0\xaf\xb2\x8e\xf4\xdaO\x0fi\xb6\xd6\xe6{\xc9\x16\x08\xd5C\xb3\x95\xf4\xaf8\x00{\xfc\x0e\xf4\xf2\xdd\x1cpx\xa4\x98\x81\xaf\x9b\xa5\xd1w\x07}\x8eI\\\xb18^\x83\xbf\xc5B\xb6\x9b5\xd0\rk\x011\xaf\x06c\x92\xb9\xf6_\x7f\xad}\t.\x83o\xaa\x10/ax\xac\x15\xbfsk\xb7\xf7\xb3\xff\x00\xba_\xe5^8^\xfd\xe9\xcc\xf6\x16\x9b\x19-\xed\x86\xc8\xb0\n\xa8\x18\x00\x0f\xe8;S\xebrG\x03\'\xf6\xa6\xcc\x00\xfcW\xcd\xf2h\xe2\xdd\x02m\x1b\xfa\x90z\x9c\xf4\xa8\xd8\xf4k\xdb\x99B\xc7n\xec\xc79\xc2\xd7\xd2_\xb04\xb8e\x8aMB2D\xdb\x99b\x88\x033\xe3\x81\xb4c\x8f\x92x\xc5;\xb7\xf0l\x9e"\x8a\x08\xc9[;X\xa3#d%\x95YO\'q\xc0$\x9e\xe6\xbb\xf8\xed\'\x18\xdf\xde\x81h\x08\x04\x9c\x0e\xc2\xbeU\x9a\xd0C\'\x94\x0f\x9b0<\xaaz\x80\xfa\x91]\xc7\xa5^\xcb\xb8\xf9$\x01_\\\xa7\xd9-\x8d\xb4O\xe4\xc5\n!#\x01xs\x9fr}\xe9G\xfb3\x82(\xe3\xcc\xaa&\x90\xfe\x04\xed\xf9\x93J\xff\x00Q\x1c\x01\xf74\x81b\t\xdf\x8fa_#6\x8fv\x84\x03\x19\xcf9\xf8\xfa\xd2M\xa7L\x00;x\xe7\x9f\x81_]M\xf6cdw"\xb9\xdcT\x12I\xc6\t\xee=\xe8o\xb3\x1d)\xd6=\xac[\x01w\x123\x90>;f\xb9\xfe\xa1\xc1\xda\x95\xf8\x15\xaf\x8f\xcd\x9c\xc3\x18Br3\xc5{\x1d\x85\xc3\xb66c\x8c\x92x\x18\xaf\xb3\xf4\xcf\xb1\xdd;R\xb9\x08\x1dU\x01"I\x1b\x080\x0f\'\xe2\xa6\xf5/\xb3O\n\xe9v\xe8\x1aM\x8d\x8c/\x94C\xa9\xc8\xc6A=I\xf8\x15\x0e^\xbf\x1cr\xacI\x19w\'\x07\x1c\x0f\xad=\x1fH.\x0b\x16\x00\x01\x9a\xf8E\xe0\x91\x0bm\x07\x0b\xd5\xab\xd5{\xc6\x1bVIq\xd7\x198\xaf\xaf\xed\xbe\xc8\xf4\xdb\xd3\xcb\x01\xc6B\x9c\x1d\x84\x93\x92\xca:\x93\x8e\x07j{/\xd9>\x97\x1a\x80\xb1\xec;\xb0\xca\x06I\xed\x93\xf1\xf4\xa9\xa7\xa8\xa0PJ\x03\x8fsL\x8e\x9e\xd98r>\x05|w\x1c\xda\xac<Eqr\x99?\xc2\xec?\xb1\xa9\xf8\xbcc\xe2\xed=V(\xb5\x9b\xb4\x0b\xce\x1d\x83\x9eF\x0f,\x0f\x1f\x15\xf6>\x9f\xf6K\xa0\xc1o\x13\xdc\xd9\x82I\xc33\xcb\xb5T\x0eK\x02\xbf\x1d\x85@O\xf6s\xa0j\xb7\x97\x11Y\xd8:i\xd0\xe7<\xe5\xa4(3\xb8\x92\x01\xe7\xfa\n\xa9\x8f\xacXu\x19\xe4\x89\xacc\x91c\xfc\xcc\xc1Xg\xf7\xa9\xa2\xc2\xee\xd9\x03%\xe4\x91\xb3p\x15\x885\xf3\x04?h\x9e0\x8e\x19b:\x91\x93x\x004\x91\xab2\xf5\xfc\'\x1dOz\x9c\xd3>\xd6<Yh%\x17\x0c\x97d\xa0\xf2\xcb.\xdc0\xe0gf21_A7\xd8\xe6\x86\xa41\xca\xa2\xf2\xcd\xb7\x00`dc=\xbek\x9b\x1f\xb1\xed\x12i&\x99\xa2\x92;u\x1b\xa3g\x1bK\x003\x9e\x9d\xfa\x01\xde\x97<]\x11\xd1\xfc\xce\x99m\x83\xbe\xca\x01\xfbczv\'\xea\xc8\xcaW\xa9Nq\xb6\xecH\xfd\x0ek\x16_\xb6]]cd\x9bHM\xd8\xeb\x1c\xce\x9f\xaesO`\xfbi\x98C\xe5\xc9\xa3\xb8\xfe\x12RP}?\x19^\rk\x97\x1fd\xfaD\xc56i\x05#w\xf4\xee\xfcD|\xb1\xec:\xd2\x87\xec[\xc2\xe0\xc6\xa1$\x04\xaey\xc608\xe7\xbeMA\x1d7\xc3\xb3 o\xf4\xd02s\xb3\xb0\xfe\xf5,_u\xc8\xdb\x03\xa8d\x01\xdd\x14\xff\x00j\xc9a\xfbg\x8c\xab%\xc6\x97s\xb4\x91\x82\xb2) \x0e\xdc\xe2\x95\xff\x00\xf1kI\x98\x81$\x17\xb1\x80\xdf\xca\xa7\x8f\xc8\xd6\x9a~\xc6<3\xfb\xd6\x91d\n\xbc\x86\x04\x12\xd9\xed\x8e0\x07\xf5\xa6\x89\xf6c\xa0\xefh"\xd3NH\xda\x0b\x9e_\x07\x8e\x9e\xe7\xa5%\xbaG\x87\xc18\xb4d?\x12\x7f\x9c\xd3\xc9\xd4\xfa\xd8\xe6\xea6\xfa\xa0\xfe\xd8\xaa\xe2\xfd\xb1i\xff\x00t[H\xf5k\x98!G\x0e\x02\x07BO\\\x12\xa38\x1dq\x9e\rz~\xd4\xf4f>t\xba\xc3\xb9br\xc5Il\x9e\xe4\x11\x93Z\x1a}\x8ax]~\xec\x82\xdb\xb9g,@\xdczc\xe9\xf3N\x1b\xeco\xc2\x83hk\x1e\x11F\xf6\xc8\x1c\xfe\x95\x1d\xba/Ee\x0b\x89\xf4\xe78.\xb8\xfe\x94\xfa\xf5n\xa82\x7f\xf4\xf9\xf7\x08\xdf\xe6\xa8\xf6\xbfj\xbaW\xa5\x8e\xab\x1b\x1czK\x1d\xa4g\xb1\x07\xfcT\xc1\xfbT\xd2\xa6\x7f^\xa9k\x82I\xc20\\\x13\xc1\xc0\x1cv\xa5/>\xcc\xb4\x0by\xd5!\xd3"r\x00\xd8\x0br\xc7\xa0\xfa\x9a\xb0\'\xd8\x8f\x84\x94.\xfd1K\xaa\x02\xfe\xbce\xc9\x1cc\xfbTF\xf0\xd7Cr\xd82\r\xbb\x11\xfe*@\xeb]Iq\x94\x88\xfc\xee*\x97u\xf6\xa9d#;u\x88\x08\x0f\x94\\\xa9\n?\xb9\xa8o\xff\x00\x16l\x84\xe6Cz\xbe\x93\xd0\x1e\xbf\xde\xb4\x99\xbe\xc9\xbc\x19k\x13\xb0\xd1\xd7\'\x85m\xc7\x19\x07\x18\xfc\xaa\x10\xf8\x13C\x8ex\xd4i\xb6`3s\x95\x07\x19\xf6\xfc\xa9C\xc3\xfd\x06%9F;|\r\xbe\xc2\xb9\xfe\xb1\xd5\x18\x82\xa25\xdf\xe4\xff\x00z\xe2\xc3\xedWG\x97s\x1b\xb8\xd5\xc2\xf0<\xce9\xfd*~\x0f\xb4\xbb\x10\xaf(\xbf\x81\x80\x8c\xae\xde\x08\xe7\xdf\x9a\x9c\xb1\xfb2\xf0\xd5\xed\xbcsK\xa0\xd8y\x93&\xe2\xc6!\xc9\xcf\x03\x1c\xe35`\x1fe^\x14;\xdb\xff\x00OX\x0c\x82\\\x08\x861\xee\x01\xa8rxW\xa39\xd4\x8d"\xe7\xb74\xf2\xf5\xcb\xcc\x10\xf1\xc6\xde\xdd\xab3\x7f\xb5m\nI\xe5\x84\xeaq\xeeF\x0b\x90xS\xfd\x8e>)\xb8\xfbU\xd3\x15\x84k\xa9\xa1\xc6y\xd8\x18\x8c\x7f/^Mi3}\x9f\xf8v\x08\xdff\x87`\x8c\xea\xd9a\x12\xf4\x1d\xc6\x069\xf8\xa8\x8bm\x07K.\xeb\x1f\x90XK\x86\x1caX\xf2G\x1d\xc0\xc5\'\xff\x00\xa6:\x1c`\xff\x00\xee\x9d\xb7\x19\x07\xb7\xd2\xba:\xc5\xf3c\xd3\x08\xdfm\x8dS\xa5\xfbc\xf0\xf4\x89\x93v\x1aM\xa1v\x85+\x9f\xe9\xfa\xd5v\xeb\xedsGp\xab\x1c2I\xe5\xc9\xe6zcs\xcfL\x8e\x06\r}\x05o\xe1\xbd1\xa1\xb63Z\xc2\xceaU#\xca\\\xe3\xf3\x07\xa6i\xcbxn\xc5C\xed\xb6\x89B\x83\x82\xa83\x8e\xe7\xfe\xd4\xfc^\x19\xe8\x11\x1c\xf9s7\xff\x00\xb8\xff\x00\x14\xc3u\x8e\xa0F5B?\xfdO\xf9\xaf\x9a_\xedZ\xee\xe2I\xc5\x9e\x81|\xe0\xa6|\xc6\x8d\xc2\xb7\x1c\xae\xd02I\xed\xce*\xb5y\xe3\xbf\x17_\xbc\x83\xf6\x1e\xab\x14~V\xc5\x10#\xa9!\xba\xee\xc7\xe81\xda\xbe\x9f\xd4\xf4=8m\xcc\xdbF\xc6\xdc20\x0f\xb7\xd4\xff\x00J\x93\xf0\xfe\x8bi\xf7FD\xd8\xec\x92\x16\x18$\xb7\xd0\xf6\xe6\xacm\xbaWB\x81\xbf\x87a\x96\xc6\xc5\x895\x1a^\xa1\xd4\xd8e\xae\x80\x04\xf0\x14\x01_.[x\xdf\xc6\xf6\xd6\xf3B<%\x7f2\\\x05_\xde\xa98\x00c\xd3\xe9\xe3\xebH\xdd\x7f\xf8\x83\xafX\xcc\x9f\xfa~X\x98\xb6XK*\x05\xc6x\xc0\'\'\xe9\xd2\xbe\xc0\x9fB\x83\x05\x82\xa0\x00\x16\xc1\xc7~\xb4\x84ZE\x99\xc3\xaf\x95\x11#$g\xa7\x19\xe8j\\v]&9\x15\xd3\xa7\xa8`A\xceOo\xa9\xa6\x1a\xee\xfd\xc1\rw\xb68\n+\xe3\x0b?\x0bx\xd1\xae\x14I\xa3#]\xa7\xaa7\x8eh\xd6P\xdd\xb6\xe3\x81\x8a\x95\x8bA\xfbVE1\xc7\x0c\x81\xc2\x0c4\xb2@ps\xec\t<\xf4\xaf\xa7?b$Z\xd6\x9e\xef\xe5\xcb\x96R\x008*ry8\xabci\xf0E\x18P\xbb<\xc9\x16?r\x8a\xc7\x00\x1c\x0eq\x9a\x92\xe9m)\xcbZ\xc6\xc3<2\xea\xfd3\xc57\xf8\x8b\x94\x18\x17.\t\xee\xa7\x1f\xd2\xbe1\x93\xc0?i\xda\x90\xc5\xce\xa5oh\xac\x07\x01\xf6\x92\x0fs\xb4df\xa6<5\xf6O\xe3=3U\x83Q\xb5\xbc\xd3o\x02\xee\x13@\xd2\xc8\x80\xaf\x01\x8eGS\xed\x9e3_U\xdc\xe9\xb1*a\xa4e\x1brX\xb7\xaf#\xe4q\x8a\x8e\xd1\xd2D\xd4\xca\xfd\xe9\xbc\xbc\x96\xd8\\\xe7\x1c\x9fH\x1e\xe0\xf2M?\xaa\xdc\xc6\xd0~\x19\x169\x01V\n\xa1v<\xf1L\x06\x9fZ\xcd\xf8\x99\x19\xd4\x86\x05\x98\x9d\xc5W\xb4\xef\x0b_i\xf2am\xed\xe3\r.\xe7}\xeb\xca\x93\x9e\xdd\xeb*\xf1\xd7\xd9#\xf8\x97\xc4M\xa9\xbe\xa9,Mx\x11<\xbd\xa2P\xac\x8b\xb4\x01\x9cu\xeb\x8a\xfazx#-*\x89LGvG\xfe\xd5\x1f\x1d\xaa\xa5\xa9Y\xc8\xf7\xb6*\xb79\xdd2)Ps\x81\xdc\n\x81\xd3\xfa]\x87K\xb9{\x98\x16C+\xae\x82\xce\xe4\xecH\xdb\xf6\xa9W7\x97\x1dB!\x14\xcc\xba\x17\xd5\x801\xb8\x15\xf3\xd8\xfb,\xf1\x0e\x91\x04b\xd2\xfbM\x99m\xc2\x87P\x867`\x0f|n\x0cO|\xd5\x17\xc6\xcfg\xa2Xi\xd6\xf3\xda\xea\x7f}\x99\xe6\x171N\xb8\x88\x05+\xb0\xa3\x8e\x1dI\xcf\x00\xf6\xe6\xbe\xdd\xbb\xd2\xc0\x8e\xe0$h<\xc0rF0x\xea}\xb9\xe6\xb2\xbb\xcd\n\xdb\xc4z4\xf6Z\x9d\xbf\x9a\x11\xda5v\x19d\xdcy\xda>\rY\x8bkI\'Y\x19\x08nv\'sQ\x9a\xf2\xee8\n\xc7"\x9d\xb1\xba\x8e+\xe3\t\xbcax\xf1\xbc@0\x8c\xe31\x13\x85c\xee\xf8\xeb\xf4\xaa\xfd\xde\xaf{w\x90\xf2\xedS\xd5W\x80~\xbe\xf5\xe6\xada&\x99\xa9_\xd9HIkk\x89!$\x8c\x13\xb1\x88\xc9\x1c\xe35\x1a*\xde\x1b;XpR\x15\x07\xde\xb3\xf7\x1dF\xfa|\xac\x97\x0cG\xb7\x1f\xd2\xae~\t\xf0\xe4\xfa\xfe\xad\x1b\xf9\r%\xbd\xab$\xb3\xf6\x05A\xfc$\xf6\xcfJ\xdc\xbc)\xf6W\xa4jW\x1a|\x13@\xd7fK\x81-\xd1\xc6\xd2\x03\x82?@\x7fL\xf3O~\xcf<:\x96\xbaE\xacq\x01\x1d\xcb\xa0yd\x07\xf8\xb6\xef\x07\x83\x8c`\xf0Oz\xdf\xbc\'\r\xbe\x8f)\x96vF\xfb\xc2\x81\x83\xf8\x97\xae\x008\xf9\xe4S2\xdc\rX\r\x8f\xe9R\xed\xadB\xa6\xa2\x998\xac\xa3Z\xfb#\xf0\x95\x89\r\x1e\x99\x18\xde\xe0+\x02\x08\xc7\xb1\x03\xb9\xab\x0c?c\xfe\x0f[dg\xd2\xe2\xce\xc0\xf8\xc2\xe7\x0c22M^\xbcK%\x8cm"yJ\xeaW\xccV\x00ey\xdb\x91\xeeEX,\xe5\xb1\x96(\x0cBQ\x8c)\x0c:\xe0v\xc7Oz\x86\xf7o\xad\x86\xdcmS\x85\xbca\x14\x85\xe4\xee\x7f\xcdb\xd7_g\xbe\x15\xd3\xe7\xb6\x10i\x82"&\t\x93\x1a\xf4n\x8c}\xc75v\xb2\xf0?\x87\x1a\xd9\x16+H\x19\xc0\xcf\xfax#\x07\xa9\xc0\xe9\x9e\xd4\xfb\xc563Bl\xee!\xff\x00N\xde]\xee\xaaNv\xa8\xf8\xe3\x8c\xe6\xa4|=\x89J?\x99\xe5e\xbfv\xa5\xba\x83\xceFi\x87\xb8\x90\xb8\x1a\xb1\x91\xc58\xb1\xc6\xb1\xec\xbc\x1a\xaek\x9e\x13\xb3\xb2\xb6i>\xee\x81\x01\x0e0\x80"\xed\xe0\x92{\x13\x9e\x07z\x95\xd24\xfby,\x123\x1a\x8f,n,NIS\xce\x07\xb7\xb1\xabV\xa1kuua5\xbc\xd2\x19Q\xa3`\xf8\xc0\xdd\x9e\x0es\xd3\x1d\x8dP\xbc;1\xd3\xee\xae-O\x9c\x91\x8d\xd8\xe7\x85T\xea\xa4\xfb\xfb{\x8a\x8e\xf3K\xa8a\xc8\x18\xa7\x14&\x93\xe9\x06\x98\xf8\x97H\xf2\xe1\x85\xfc\x9c*\xb2\xee\xca\xee \xb8 s\xff\x00\x9cT\xd7\x86c\xb46p\xfe\xfdw\xe0)\xe0\xa9\x18\x06\xaeRE\x1d\xe42\xc5,*\xe1\xd4\x92\x01\xca\xf0:\x8a\xce\xf4\xfbK\xfd\x1b\\{a:,3p\x8cq\x85W\xfe"\x0fa\xfd\xa9\xb6\x92F\xc6\\\xfb}\xeb\xa3N\xf8\x1b\xd5\xda\xebO\x8a[[\x8bY\xe4\x08\xaeJ\xa1\x1d\t\xdb\x95\xfag\xbdW<;#\xdb\xc8\xb6W\x08\xacm\xcc\x887\x10CG\xc3p=\xc1\xeb\x9e\xdd*\xf1\x06\xe9-\x95\x15\x83<q\x94\xce2\xc3i\xc1\x03?\x8b\x1e\xc7\xadT\xf5\x9d5\x87\x9fw\x04 O\x01D\xb9\x8c.U\x94\x8fK\xa1\xef\x8f\xfb\x1ae\x836\x93\xed]\x0c7\x1e\xf5)s\xa6\xc3qk*0D\xe1\xd1J\x82\x00\x19\xce\x0eO\xfd\xbd\xaa\xa1\xa1\x93\xa5_\xbd\x8c\x91\x80\xd0\xb91\xc8\xbcnF\x1f=\xc8\x1cU\xdfK\xbb\xb4\xba\xb0Xe\xfd\xd4\xa12\xe1\xb8\x0c\x07\x01\xd7\'$\x03\xc1\xfe\xf5\r\xa8\xe8s,\xa6Ki\x99\xaePnFc\xf8\x94c# ~t\x87F*\xa4o\xdcW\x03\x8c\x90v\xa9g\x8e;\xa4Yc\xb8o%\xb2\xa0\x01\x87\xc9\xc6s\xbb\xf5\xc7Z\xcd5\x0be\xf0\xf5\xdec),rmc!\x8dI\x8fi,v\xbf<{\xfcU\xc3H\xd5\xdavk+\xabf\x89\x84\xa4\xc8\xce:1$\x92G\xfesOum*Y\xedb\xb7\x86<K\x13\xec\x8eO\x9cd3\x0e\x9c\xf4 \xd74j\x185\xcdeM{e\xa9\xdb\xdc\xc3j\xe5d\x0c\x9b\xb7\xc4\x14n\xdb\xd0c\xe0g\xafqM\xf5k;\x1dj\x13\tPd\x0cJ\xb0\'r\xf4\xc1$\xf1\x82\x0f\xbdB[\\j\x1a%\xc2\x8b\xabT\xf2\xe1c\x92\xab\xfc?\x84\xb0\xce2\x07z\xb3i\xd2\x9b\xa5\x91V\xd0\x05\x95\x89\xc6\xee\x8arw!=T\xff\x00)\xae\xc6\xb9<\xfa\xbb\xff\x00\xe1\xa4\xbbw\xedX|\xd6\x17\x96\x97\xf7\x16\xc6\xe0\x17\x85\xc8\xc9\x04d\x8e\xb8\xeb\x91\xcf~*\xdd\xe1\xe9\xae\xacdX\x95\xa2;\xa3\x1f\xc7\xbb~\x07\x00\x9eq\xc1\xef\xd2\xa6\xf5\xdf\x0b\xc9}!\x9e\xc2$If\x849_\xc4\xb2/N\t\xfc8\x1c\x1a\xa6\xa4\x9a\x8d\xa4\xc5e\x8a5\x966"H\xfc\xb0\xa4\x8ep\x00\xfaT\x96]C\xe2\x9b\xd7\xec~\xb5\xab\xdaJ\xa6\xdeX\x89"@wD\xe7\x1f\xbdV\x00\xee\x1d}C\xa3R\xcb\x12\x19a\x90\xedW\x84\xb7&3\xb1\x83.\x08\xc9<t\x1c\xfb\xd5OG\xd7f\xba\xbb\x80\\\xc4\xc1T2\x99\x13i\x05s\xf8$\\t\x1f\xc2\xc3\x91W\xb4\x9b\xcf\xb4*\x90\xf9\xe4\x00\x93\xc0pd\xf5\xf02:\x10G9\xee+\x82,\x11\xf1\xfb\xd2ZC\x8d\xea\xb5>\x97\x06\xa3j\xeb<\t I\n\xc8\xdbN\xe5e\xe3 \xf0Fx\xc7L\xd5T\xc1q\xa2\xea0\x86\x82f\x86C\xb7r\xc6&\xdd\x91\xce\xf00\x06}\xb1\x8cu\xadF+5\x86\xd2+uc+C\x12\x84\x93 4\xaa9\x04\x13\xd5\x94\x0cb\x9aM\xa3\xad\xc9\xb8\x8c\x8f\xc3\x90\xe5@\xca\x12\xb9\xdcA\xe5IRFG\x14\xe8\x84\x7f\xb7\x9ah\xcd\xc8\xcdC\xd8\xea\x91\xdbEp68\xb4\x8d2 t\xfd\xe4J\xa7\xd4\xb9$\x07O`pGj\xb8i\xf7\x8a\x89xSu\xd5\xb8\xf2\xdd#U>tH\xc9\x9d\xac\t\xf5\x0e\xe3\xf4\xac\x86\xea\xd6\x7f\x0e\xdf\xb2\xdc6l\xbaF\xc1\x08\xf2\xc0\xf7=\xc7\xf6\xab\xb7\x87/\xed\xcd\xcc\x8f\x17\x96\x91\xdc\x1c\xc6\x8a\xc3\x12y\xb8,G8^Fx\xe0\xe6\x9eE*F\xd8\xa6\xdfu\xab\xbd\xde\x9dk\xa9Y3\xc7\x1b0h\xb7\xa0\x00t##\x19\xc6\x0ex\x00\xd5\x1ax\xee,\xec\x16[V\x8a{H\xa6W1\xee*\xd0\xcc\xbc\xe3\x8eU\xc1<\x7f\\\xd5\xfbN\x95f\x9d\x920\x04\xd6\xed\xb2d\xfc\x01\x91\xb3\x86\x03\xa1_o\x9fjGX\xf0\xd3]\xc9\x1d\xf5\x8c\xd2\xda\xdeBB\xa3\xa0\xdc\x92\'\xff\x00\xb3\x99\t\x01\xd3=\xfa\x8e\xa0\xd4\x9f+\xcc\x19\xc6\xfd\xfej0\x94\xa1\xc1;Uj\x1d_N\xd5\xac\xe2\x8aid\xb9\x95\x17\xf7\xd2\x05h\xee\x14\xf6\x960\xa3\x87S\xc8\xdb\x8c\xf3\x8a\x98\x9fV}"\xf6\x0b\xdb\xc9\xd0\xdb\xcf\x18D\xd4\xc3\x1f \xff\x00*]"zF\x7f\x86^0x5\x11\xfb*\xf8O\x1d\xcd\xa8H/\xd6\x11$\xb0o\x0e\x19\x17\xd3\xbe&\xc0\xdc\xa7\xdf\xa8\xefR\x1am\xfc\xd3,\x90K\x18*\xef\xb2\xea\xd2d\xca\xb6x%:\x8fQ\xfc@\xf0G4( \xef\xb7\x1b\xfd(%O\x18\xf9\x15\xa0%\xca\x14\x89\x82\xaa\xc70\x05NIC\xb8dd\xe3\x82{S-KF\xb0\xd5\xad\xa6\x86\xe28\xa7\x8eU+"8\xc8 \xfb\x8a\xa6\x0b\rOA\xd3\x0c\xfe\x1cs\x12\x89\xb2\xda5\xd1\xc4$`\xabE\x19?\xe9\x16<\x8f\xe1\xcf\xc5Y\xf4\x7f\x11\xd8k0\xce\xd6\xfet\x17\x10\x10/,n\x10\xa4\xf6\xfd\x8a\xb2\xf7\x19\xe8FEJR\xad\x85n\xe3\x8a`\x86]\xd4\xf7\xe6\xb3\x8b\xbf\x0e\xea>\x11\xbb\x13Y\x19\xef4c\x90\xd6M&n-\xb8\xe0\xc0\xeeF\xe5\xf7\x8d\x8f\x1d\x8d_4/\x14\xdbO\x01D\xbd:\x85\xa0,\x92$\x8cL\xf1H9(wa\xb7\x0e\x84\x1eEO2\xa3:a\x9d\x82\xb6\x19I\x07\xb79\xc8\xe9\xcdg>%\xf0\x9c1J\xda\xce\x973i\xf7\xca\xa1\x9d\xd4\x06\x8ap\xa7\x85\x9a<\x80\xeb\xdb=Gc\\\x11\x98\xb2S\x8fj\xee\xb1&\x03\xf3\xefZ\xdcQ\x99<\x99a\x91\xa5\x89\xd7\xd6\xb2`:\xe7\x91\x91\x8e}\xaa\x16\xf3@K\xd0\xd2Y]\x1bK\x92\x0f\xef\xa1Q\x923\xce\xf4oK\x83\x8e\x8d\xf9\x1a\x81\xf0\xd7\x8c\xed\xee\xa5\x8e\xd7U\xb3\x1aU\xec\x98\x10\xb1}\xd6\xd7A\x7f\xfd\x8c\x87\xdb\xf9[\xd4+H6"LO\x0c\xe40 \xba\x96\xfe\x11\xc9\x02\xa4\xa8W\x1e\xf5\x1c\xeaF\xc1\xdb\xfb\xd54\xdcM\xa5,\x11\xea\xb0\xc5m\x19|4\xf1\x82\xf6O\x93\x81\xea9h\t\xf6l\xafl\xd5\xa6;h%T \xa9\x05\xb8\xe3\x8d\xa4v=0GqU\xedf\xc8jq\xc5\xe4\xdd\xddZ\\\xc3\x96\x82\xea\x06\xe9\x9e\xa8\xeaxt=\xd1\xb85\x05i\xad\\\xe8\xf2Y\xe8:\x84pis\xcc\xe1\xad.\xad\xfd6W_\xcc\xa8\xad\x9f-\xfd\xe3<{\x1a\x01\xd0p\x7f.9\xae\x90Xds\xdcU\x83V\xf0\xb6\x85\xad\x11\x1c\xbb\xe0\xb8\x84\x97\x86\xe2\x161\xdcBO\xf1F\xfc\xe0\x1e\xe3\x90{\x8a\x84\x82\xe6\xe3\xc3\xd1\xb4>%\x08"B#\x8fX\x80\x95\xb7\x947\x03\xef1\x8f\xf4\x1f\xb1?\x80\x9e\xe2\xae0\\HS\x0cLr) \x02r\xbc\xfc\x9e\x99\xf6\xefN%t(\xeb)R\xac0P\x80}\'\x82\x08\xee=\xe9Z\x17:\x80\xc1\xfe\xbfZHc\x8c\x13\x91\xff\x00\x9cT_\xec\xab)\x13jI4j\xe0\x12\xaa\xf9\x07#\xf1\x03\xcer\x0fj\x81\x9e\xc2\xca\xdaS\xb1\xe5\xb7\x91\x94(\'\x0c\xac3\xd0\xe7\x8c\x81\xdf\xaf\xcdr\xbat^\x1f\x99\xdbG\x98\xad\xa3\x87#Kg\xfd\xc8v\xeb\xe4\x16\xcf\x93\x9e\xe0e~)\xf5\xad\xed\xa6\xa4|\xa9\xecZ\xdeq\x19&\xceVS&\xd0y#o\x0c>Ep\xe9;i\xc1\xa5\x0c\x8d\xc1\xc8\xa8\xf8\xef`\x84\x0f1\r\xbc\x98\xc2K\x13cp\x07\xf10\xc0\x07\xf3\xc1\xf9\xa70\xbc\xaf<\x92[M \x99\x9b{\x8c\x83\x1b\xb19\xc8c\xdc\xf7\x07\x04W:\xa4\x11Y\xc6\xc6\x00\xf1\xcd2\x10\xbe\x8f2&$g,\xa3\x1fBA\x06\xa3\xa0\xd5#\x9f1\x88$\xb5\x93~\xd4\x89\xd7\xf7r\x9e\xfeS\x0e\xa4\xff\x00)\xe4{W?.\xc4\xd2\xbf0\xc8\x15ty#\x98(\xb9\x81\xd5\xfa\x13\x19\x18\xc9\xceFG^\x9c\x8a\xad6\x99\x05\x9a\xcb\xfb\x0e\xe0\xd8\xca\tf\xb5\x9a\x1f:\xc9\xdc\xf5\xdc\x99\xfd\xde\xee\xe62\x0f\xb85=n\xe5\x964\x9e\xce\xe66T\xfc,\xbc\x908\xe7\x9ei\xe1\x928\x94\xf9A\x0f@\xc8F\t\xf6\xa7684\xd6H\xdb\xff\x00\x8a\xa9Zx\xbe9\x046\xb7+\xfb/T\xdd\xb4\xdb\xca\x19\xed]\xc1\xc6a\x98`z\xbb\x03\x86\xf8\xa2\xacwv\xd6w\xf6\x8d\x05\xe5\x9cS\xc11e) \x05\x18t\xc3\x03Epj\xff\x00p?\xb5\x1a\x93\xfd\xa4~\xf5\x8e\xea\x9a\x87\xdd\xd1U!\x8a\xde\xdd\x87\r\xb7)\xe9\xe7qa\xf8\x9b\xb8P?:\xa5[k\x8a\xd2\xb4v\x90F\xfel\x8c\x1a\xf2\xe7,\xfdNJ\xa0\x1c\x0f\xfc\xcd=\x87H\xb8\xb9\x9d\xa7\xb8\xb9\x8e\xdd\x0b?\x97\x08\x93{\xa8\xc7#-\xce?\xadJ\xcbgi\xa7mK\xeb\x8f M\x94\x86&\x1f\xbds\x8c\x9d\x8a2X\x91\xec\x0f5TU\x8f\x03\xefR\x81U\xdb\x9f\x8aB\xde\xc8\xdc<\x92Gx\xce\xf3.\xc9\n\xa1M\xcc\xbc\x8e\x14\x8cm\xf6\x1d\xeaG\xee\x1eTF[\x8dE`\x8a"\x04\xd2K\x84%W\xb9/\xc2\x0f\x93\xd7\xb5HXXj\x8c\xd1<0Gg\x13\xc4\xd2\x99n\x94Iq\xbb\xb0\x08\xa7j\x8e\xe4\xb3\x13\xf1L\xf4\xed7J\x9e[\x8b\xa7\xb8\xb8\xd4\xe4\x85\xd4\x9b\xdb\x82$\x8e!\x9c\x95\x8c\x10\xb1!\x18\xe3h\xcf\xc9\xa7Dx\xc6\xdb\xd2\x0b\xe4\x9d\xf6\x15\xed\xac\xedw3\x9b`~\xee\xa9\xfb\x9f0:\xa4\xceF\x01\x91\x98\x06a\xcfn=\x89\xa9[\x08\xe2\xb8\x92K\x16\x89.\xc08\x968\xa11Z\x87<\x91\xb7!q\xed\x92I=Ez\xf0O)\x82[\xd7\xccY\xf3\xa3\xd3\xe3]\xf2\xb1n\x04\x92H\xfbq\x8c\xff\x00\x08\x00{\xd3\xb6\xbb\x8c\x92\xb2\xa8(S\x98\xcb`\x90\xa3\x90:g\x1f\xa5((;0\xc8\xf9\x1c\xd2u{mRV\xf7Q\xdc\xc6\x9b%\x85\x92\xdd\xb6\x80\xa4y1`m\xd8\xb8\xe0\xb0\xefBkv\xf3\xdf<\x10\xc6K\xa2\x16i1\xbc\x05\x1c\x92@\xe3\xe0\n\xac\\j\x0e\x96w\x12Kko\x041\xc6BG\x8fS\x0cs\xc7\n\x17\xdb\x19\xf6\xa8\xbb\x1dZ[;Y\xef%\x90\x89\xe7m\xab\x0f\x96\xb1:\x05$aCe\xdb>\xd8\xfc\xab\xa6L2\x81\xf7\xfbWB\x02\x18\x9f\xb7\xd6\xad\x97Z\xd5\xf9\x95\xd6\x0b\x1f7\xf7\x8b\x89]F\t=\xc2\xff\x00\x0e>j\x12\xefSh\xd5\xa7\xbe\xbe\x08\xb2\x9c\x00[.\xe4u\n\x8a\x0b6~\x01\xc5W\xae5\rZ\xfe\xfa)&\rch\x80\x82\xd7\x89\x1bJA\xe0\x95Q\xb5W\x19\xe0\xbeI\xf6\xa6\xd6\xbav\x95\x05\xcc\xc2\xce\xd2f\x96t\xdd5\xf5\xf4\x99\xde\xbb\xb0q\x80\x0e\xdex\x0b\xb4\x0e1If>\xfd\xe9J\xa0v\xedV4\x9a\xee\xea\xdc\x08g\x8bF\xb7\xdaZ\xe2R#k\xc2\xb9\xe3\x0cIHx\xeer~\x94\xf2\xce=.\xce\xcee\xd3D6\xd0\xb1\xdf-\xdc\x8b\xb9I\xea\xcf+\xb1\xdd#\xf3\xc9c\x8f\x9a\xa8\x9b}:\xe1\x82i\xaf&\xb1<D)-(\x86\xc6"\xbd\x89\xf5.\xe5\xcf!C\xb0\xab2\xf8n-E\x0bkW1^\x80w\x0bh\x80\x8e\xd51\xcf\xe0\xc926O\x05\xc9\xf8\x02\x8c\x93\xb7\xb5\x07\x19\xce)\xb4z\x85\xb5\xd1i\xf4\xabio\x9d\xf7"\xdf\xdczm\x9b\xb3m nu\x1e\xd1\x80\xa7\xde\x96\xfb\xbe\x9f\xa6:]j\xf7\xcdyr\xe0$~b\x1d\xdb\x81\xe1-\xad\xd3\'\xaf\xd4\xfb\x9a\x96\x86!$qC\x0crDL;\x95\t\n\xea\x06\x07\xe1\x03\xd2\x07\xe7\xf4\xaec\xb3\xd1t\x18\xafo\xee\xdd-`\\\x19\xf5\x19\xdb{I\x93\xf8\x01|\xb0\xe4\xf4\x04\x92i:r{R\xb2\x05G\\Z\xcdy\r\x9f\xed \xd6\x10J\xac>\xe3\x03\xe6\xe2q\xd7\x12\xcc\x87\xd2\xa0~ \xbfBM:\x9e\xfa\xdfL\x92\xc7K\xb3\xb4\x8d&h\x81\x8fM\x81\t`\x14eY\xcf\x0b\x14C\xb9$\x13^3\xeb>\'\x95\x85\x93\xb6\x89\xa6(*n\xe4@of\x8b\xbf\x92\x87>R\xb6\x7f\x13z\xbb\xe0T\xb5\xae\x81g\xa6\xdb\xddAg\xe6G\x172M)\x94\x99e#\xf14\x92>Y\xbf\xf7\x1e@\xe9\x8a4\xed\xb5\x05\x87~}\xaa\x0eE\xd4\xa4\xb2\x84j\x13\x08\xc3)y\xd2&1\xc6\x80\xe0\x90\xf2p{\xf0\x16\xa4\x0co\xf7o*0\xf14lcO%Bpy"<\x8c(\xf7~N>k\x9bEK\xbbW\xbe\xb8\x96\x15\xb1\x0c\x1e\x04p\x12%T\xe3\xcdi\x18\x92\xc4\x9e\x87\x81\x8a\x89[\xfb\xfdo\xef\x13\xe2]/IE!n\x00)yy\xb4\x8c\xb4A\x81)\x17^\xc5\x8flR0Fw\xe4R\x89\xcf\xb6\xc6\x96\xbd\xbe\xb7\xd3Y\xb4\xad"\xc0\xdc\xdd\x9c\x17\x87y\x11F\xcf\xc9\x92\xeaf\xc9\x00\x8ev\xf2\xed\xd8Wv\'n\xeb\x8b\xeb\xa6\xb9\xbaH\xc8\xf3B\x84@\x87\xaa\xdbG\x9fB\x1e\x99<\xb7s\\\xc3\xfb2\xdaH\x99ld\x88+\x98\xad\xe1\xe5\xa4.\xdc\x93\xd4\xf2\xdd\xces\xefMRc\xf7\xa9\xe3\x92\xcc\xb4\x8c7\x18\x91\x89\x11\x8f\xc4<\xd9O\x0b\x9cp\x82\x90N\xfbb\xba)0\xfa\x85\xc5\xf6\xe7\x8c$p\xe6D\x82\x12|\xb1\x9e\x03L\xfd]\xfb\xed\x1c/|\xd3kmU/\x04\xd2\xd9\xa3:y\xcc\x1a\xef\xcd\xdc\x0e\xc3\x8c\x06=y\xe3\x0b\xc0\xfa\xd4\xcf\x94.\x8c\xd6\xf3_G4\x91\xa2Iq\x18\x05U\x18\xe3j\xed\xe3\x80\x07F9=i\x0b\x8b{[F\x92\xfa\xee\xfa\x05\xb7\x83\x98\xdf\x85U\x18\xe5c^\x02\x8f\xe5\xea\xc6\x9b9&\x9c\x04l?\xcdB\xcff\xb7+,,\nX\xedbc\x8fr+\xb8>\xaf2@w1c\xd7\xb6;\xd38\xaf\x03\xd8\xc8t\xc8m\xc2\xa4{ \xb8a\xfb\x8d\xc4\x8d\xdb@\xc7\xa5q\xce;\xd3\xa3mw\xe2+\x853$\xd6\x9aJ\xaf\xa2\xdd\xff\x00u=\xd6?\x08p\t\xf2\xe3\xf8\xfcM\xf1R\xf7v\xce\xd2Egj\xb1\xdb\xc6`\x0e\xd3$`\x98\x10\x1e\x15G\x01[\xdb\xfbSgojp\x1a\xa9A\xe5\xc1\x1b\xca\xaf\xe6]\xcb\xe9\x96\xfae\xfd\xf1\x07\xb4)\x8e\x01\xe7`\xe9\xefSS\x98\xed-a\x90D\x85R<fF\xccj\xbdw8\x1c\xb3\x1e\xde\xe7\xa5?66\xca\x86\xd2\xd9\x84P\xc2\x9c\x9d\xbb\xa5\x91\x8f\',\xd9\xc9=\xf9\xe6\xb9-$\x90\xda\xcd#G\xb1\x08S\x1e\xd4\xf4\xc8\xbc+o\xc7U\xf8\xeai\xb3K\x06\xa3\xd6\xeab-f\xbd\x0c,\xe3\x0f7\xef\x07\x97$\x8e:)P}\x0b\xdf\xdf\xde\xba\x12}\xec\xcb$\x91\xeeyYv6\xe3\x8f-\x86H\xc0\xe4\x13\xfdi\xdb\xdd\xc5\x1c+o\x87\x9eV\x1e\x88\x9f\x07\xf0\xf5,\xc4\x1c\x0fv5\xdd\xb1\x9d\x9a\x1b\x89X3\xa2\xe2\x18\xa2\x18\x8d3\xc6Fy\'\x07\xf1\x1f\xd0Rs\xb6\xf4\x0ej\x1d$\x9cI\xe5YB\x99Q\xe4\xcaS\xfd(\x87q\xfe\xe9\x08<\x01\xd0\xf5\xa7\x90Y\xc0\xbe`Km\xa7vK\x1c\xef \xf2Kg\xbf\xcdI\xf1\x02\xaa\xef\x91\x10\xee\xc2\x86bX\xf3\x93\x81\xef\xdc\x9e\xf5N\xbf\xf1%\xe5\xc4\x93\xda\xd9\x02\xc4\x0f\xde\xce\xb9h\xa39\xc67\x7f\x13|\x0f\xd6\x82N\x05,o\xde\x9dj:\x8d\x8e\x96\x06\xf0\xd3\\N\x81\xa2\xb7\x8c\xfe\xf5\xce\x08\xce\x08\xf4\xa0\xee\xc6\xaa\xbek\x19M\xe5\xe4\xaaf\\\x98"P\x0cP\xf6\xca)\xce\xe6\xf7s\xd3\xb510\xcf\x1b\xcf$\x8b,\xd7\x0e\x8b\xe6O6\x04\x92c\xa6y\x1cs\xc0\xe8)\x0f\xbc\xc8\xd2\x14\xd8\x80+\x8cHH\xdd\xd8u\xec?\xa1\xa5)\xf9\xdf\x1b\xd7qR1\xea-(\xccg|\x99\xecI*;\x95\xc0\xec;\xd7k\x13\xc5u\x1d\xbczd\xd2^+\x01q,\x83\xf7)\x9c0\xc7w~{`{\xd4\x84\x16\xd3M*\xad\x8ef-\xe9\x92\xe25\x01\x15\x9b\xa0@\x7f\x11^\xf8\xe9Z.\x9b\xa5\xcdi\x0c>g\x99+#\x03\x87\xc8\xfc\'\xae{\xd3n\xcc\xccB\xec7\xce\xff\x00\xd2\x9c\x1aUrwm\xb0*\xa3a\xe0\xa1+\xfd\xeah\xdf\xcc~e\x0e\xbf\xbcrNB\xb3{\x0f\xd2\xad\xab\xa4\xa5\xba\x08\xe3X\xe3\x00\x0cFO\x18\x1c\x0c\xfc{\xd5\xa2\xda\xfeD2\x19#\xf32p\xaa[\x0cG\xb09\x18\xff\x004\xb5\x9d\xbe\x95\x15\xbc\xd1\x1bq\ts\xbd\x89\x01\xcb\x13\xfc\xccy5\xcd9\x00\x06\xfe\xd4\x93!\xc9$~\x95N\x82\x05e\x93\xccp\n\xbfu\'y^\xbbA\x19l{\xf7\xaeE\xa7\xde\x10N\xea\xbb\xc4g\xd2\xe0\x0c\x02q\x82\xc3\x81\xf4\xabe\xcd\x8a\xc90\xb7\xb3Ey\x1c\x12\xecz*c\x1b\x98\xfb{\x01\xd6\x9bM\xa5Kk\r\xb4j\x9ek+\x8c\xe3\x00\x9c\x1eX\x81\xf3\xc8\xa6\xccrs\xbe=\xe9bE\xe3\xbdV\x96\xc5<\x9c\xcb"\xed\x1b\xb77\x01\xdf\x18\xc1\x00`.sKZ\xe8\xebu\xe5\xb2#\x00F\t\xc1P\x0fA\xc0\xec*J->@n!\x86&w\x9a\\\xcd\xd7\x96n\x84\x91\xd3\xda\xa6\xe6\x93O\xd0\xe3\xff\x00\xa8\x98\x17rw"\x9e\x06\x07+\xf4\xe2\xab\xefg\x9a5\t\n\xe5\xd8s\xfe\xdf\xb5I\x80+\x9c\xb1\xd8U{Z)\xa4Z\xc8vB\x11\x91UJ \\\x909\xdc9\'q\xe8;\xd5F\xcfJ\xbd\xba\xbd\x17W\xb2K\xb8ym\x1c{\x83\x12N\x7f\x168\x00\x1e\x83\xf4\xab0\xb6\x9fV\xb9:\x83D#\x89d>W\x98FXv!O@;U\x91\xac\x8d\xb4@\x15_Td\xb1\x19\x18\xee3\x8f\xe9]\xb0\xb2kh\xbdLZF\x19w?4\xa9\xee\x030Pv\x1c\n\xabl\x82\x06\xd8cf\'\xd3\xd0z\x9b\xdb=\xf1S\xf6\xba]\xb4V\xf3_]\xc9\xb5\x15=\'\xd8w\'8\x1c{\x1e\xb4\xa5\x86\x9e\x02nhLJ\x98\x1d73s\xc6\xe1\xd7\x8e\xd5\x0b\xe2}j=Jt\xd2a\x89\xe4]\xe0;\xed\xda\xad\x81\xd3\x1f\xca;\xd4\x0b\xd6\x9a\xf1\xd6\xda\x07!3\xfcFV\xec\x7f\xc59\x19\xd250\xdf\xb6j\xbf\x7f\xa9\xdc\xf8\x86yl\xadP\xc3`\x9eXi\x18\x1d\xce\x01\xe1\x9b\x03\xae\x0e@\xfdj\xc2\xb6\x0bk\x14+o\x19s\x18\xc2\xa9\x189\xe9\x9f\xae)\xfe\x97\xa5\x0b+T\x867\xf3]\x81f\xc7S\xbb\xab\x1f\xed^_y\xc6U\xb2\xb6\x9b\xcawR\xf22\x9ec\xdd\xc1nq\xc9\xedV0\xdbEi\n\xaa&\x84\x1e\xde\xe7\xfa\x93M4\xcd#s\x93P3\xc1}\xab1\x86Eh\xe1Eo0\x96(\x1f\x1f\xc2\t\xc1*;\xfb\xf4\xa8\xedSV\xb9I\xa1\x827u\x85\xbdK\xcf \x8c\x0c\xb6\x18\xfeC\xda\xa7\xf5\xbf"\xcfM{{wb\xc0mF|1+\xd3\xa9\xc9\xcdAxcD\x9a\xfd\xa4\xbf\xbd\x9f\xcc\x1b\x8e\x03\x10I#\x18\'=\x87jb5{\x86%\x9ba\x91\x8d\xc74\xb2\xe1\x008\xfaT\xa6\x99es\x02\xb5\xc4\xd2\xfe6\xfcD\x96\n\xbd1\xf0I\xe6\xa4\x86\xf1\x91\x1c\x90\xe7\x03 \x12:\x9e\xbf<T\xdc\x91\xc3\x16J\x81\x85\xc0\x19\xe9\xc6\x07\x02\xaa\xfa\xa4\xd6p[\xcc\x00\xc330\xe39\xc6\x7f\xcdK\xd2G}\x87\xb56$-\xf7\xaa\xce\xb7\xa9y\x97+ah\xe19\x02Nz\x81\xceO\xe5N|3\xa3\x18f\x17\xf2+\x8d\xccLq\xb1\xcf\x00\xfe#\xf5\xedH\xe8\x1a:]\\\xbc\xa5@@\xe5\xe4,7d{d\xd6\x93\r\xa4H\x08\x8dB\xfaN\t\x1dG\xeb\xc5qA|\x95\xdcv\xf9\xa54\x9ap3\xbfz\x8c\xd9n\xe7,\xe1\x0ey\xc7M\xc3\xaf\xfd\xaa\xbdw{e<\x92\xb4\x13H\xd0\xed)\x18-\x90\xc7>\xa6\x1f\x1c\x00*\xc7t\xbej\xc3\x10\x89\xb2\xd9wd\x03\xa7S\xcfl\xf4\x15Oh\xed\x91\x9a(\xe3\t\x1c \xed@HP;*\xfb\xd7\x18zps\x9cWRC\xab\xb6)]\x12\xc1\xa7\xbby\x8d\xacE`d\xdcq\x87\xf5\xf59\xfat\xab\x9d\xc4\xa8\x8b\xe6*1\x8c\x1d\xa5\x0eA$\xf7\xa3I\xd3\xd6\xd6\xd6#\x80e\x957I\x8e\x99\xf6\xfc\xa9\xf5\xc2\xe4\x80\xa4\x9d\xbf\x8f\xd8\x93\xd0\x03\xefG\x96B\xd1\xe7\x12\xf9\xedUM]#1@\x85\xde<.F\xd0\x0f8\xf8\xefTaql\'\x8a\x03f\xac\xcb0/3\xee\x0cx\xc1\xe4\x1c\x00\xb5s\xd6c2\x02\x82@\x9bGS\xc7\'\xb5Sl-\xc1\xb9\x90\x04%\xca\x95\x18$\xf2\xdcq\x9f\x8aG\xff\x00\xdc\xeeN\xc3jp1\xf4v\x03z\xd0\xb4&\x98\xd8\xda\xee\x03+\n\xb6Nv\xe0\xe4\x8c\xd4\xf1\x92BK\x15\n\x008\x1dA\xef\xfdk\x8bEH"\x8a%BQc\xdb\xd3\x90:\xe4\xd3\x97s\xd0FW<(\x03\x8cc\xad?\xa1\xb8\xce)\x8f0f\xab\x1a\x84\x92\x0bI\x02\xc4T\x03\xb8\x91\x8e\xbd\xc9\xfc\xcdV\xec\xf4\xd6\xb4xcm\xaa\xccL\xb2\x85\xfe&l\xb1\xfa\x91\xd2\xa75\xd9\xe4\x7f.\xda\x16el\xee\'\xa1\xc7\xb5\'\x0cR\xec\xb6\x05s!\xe7\x9c\xf4\xeej4\x8a\xc7J\x83\xb9?\xda\x9f\x8eLd\x9e\xc2\xa7\xecc\x92+8ZE\'\xd2\xa4m>\xe3\x93H\xdc\x1d\xa9\xbb\r\x92\xc4\xafnq\xc8\xe2\xa5\xa3\xde\x88\xe3\xccE\x1bT\xe0\x8fn\xc2\x98\xdd\xe3dl\\m\xdd\x90\x14`\x8c\x8e\xf58\xc4\x00\xfbmQ\x84\xa4\x9a\xa9\xdeI\x13\x01\x9e\xcaG*s\x8fz\x96\xd0\xa3@\x932\xb9\x88\x90\xa7\x9eO#\x9e\x08\xa6\xb7\x16\xcf,\xc4\xc6r\xa5FFzU\x97K\xb3U\xb7\xc1@\x0bcvrzt\xa4B\x99\x91\xb0\xbcS\x92I\x84\x19<\x9aV\xe4\x91\x08\x0cL\x9c\x93\x85\xe0\x9a\xadI\x14\x8d\x03H\x92\x8f\xbc6\x17\x91\xe9R\xed\x83\x93\xf4\xab\xa4\xb6\xfb\xa3\xc6\xdev\x9e1Pw\x1aSM\xe5.\xe0\x15\x1c8Q\xc6\n\xf2)\xe2\x8c\x0eq\xed\xfbSj\xe3\x8c\xd4\x05\xc8X\xf5\x0b=\x81w\tW\x0c\xa39\\\xf3\x9a\xb1\xba\xbc\x93\xc2\xc1\x91UY\x9b\x81\x93\x8cc\x1di\x184\xa5\xfb\xf0\x90\x90\xdeZ\x93\xf4&\x9d\xe9\x9b&:\x84\xceAQ9X\xfe\x00\xe0\xe3\xf3\xa7#OH\x07\xb9\xfe\x94\x99$\x1a\x8e;\x0f\xebL/\x87\xee$M\xc0\xe0\xe3\xa6\x05@YD\x05\xfc")p\xfb\xb0C\x12F\x00\xe4qV\x9dF\xdftj\x80r{w\xa66V-\x15\xdc.\xb0\xaa\xb7\xa8\xf2z\xe7\x8eh\x032\x80+\xa1\xf1\x115\'{\x00\x91\xa3\xc6\xd0\xac\xd8`H\x18\xe2\xa2\xef\xe2\xb5\xb6xn\x10zD\xca\xaa\x81\x86\xe2\xdf$\xf5\x15-t\x84\xb8\xc9Ps\x8e\x99\x1c\xd4\x05\xf9\xb8\xb0\x9bOe\x85&\x8dY\x99\xdbo\xe1\'\x81K\x93\xd2\xb9\xc7q\xde\xb9\x11\xc9\xc6\xae\xc6\xa6n\x96S4\x04\x1c\x0cz\xb9\xeb\xff\x005I\x8e9\xac5+\xb8\xa5\x18I\x0e\xe4`rw{w\xe3\x9a\xba\xce\x92K\x1cL\x81\xceps\x9e\x05T.\xe1\x9a\xd3\\\x82[\x88\xfd2\x02\xb9##\x9fzx\x9d-\xc9\xe74\x80A\\g\xb7\xf4\xaf\x8c~\xdb4$\xd2\xbc\\\xf7p\xa0\x16\xfa\x84K*\xb0\xe8d_K\xfeg\x83X\xd5}\x9f\xf6\xef\xe1\xe8\xaf\xfc6\xb7\x90\xc0\xab6\x9d\'\x9aX\x1e\x0cM\xc3c\xfa\x1a\xf8\xc4\xf5\xab\xcbY\x04\x91/\xb8\xd8\xd5\r\xe2h\x98\xfb\x1d\xc5}u\xf6qp\xf7\x1e\x1e"q\xe6\xb5\xa8E\xfcXvD]\xd8\\rx5\xb3i\xd7s^\xacl\xa8\xa8\x04G\x90\x0b\x04\x19\xdb\xc9\'\xa9\x00f\xbeV\xf0V\xb0\xf66\xb6\xbeS\x04a.\xc7\xc9\xc1*WnO\xc0\xce+\xe9\x1b-L[Gk\x1aF\x0ceT,[\xba\xe4\xf59\xaa{\x9c\xac\xad\x8f|\xfd\xaa\xee\xd9\x83F\x83\xfe\xd1S\x92\x17\x8a\xda\t\xe7\x05\xd6"\x00a\x85\x01\x0f\'v9\xe3\xe0\xd5\xde\x16\xb4\x9e\xce\x17\xb4E\xc0]\xae@ \x1e\xe0`\x9e\x0f\x1dMC\xdaY\t`\xf2\xa4\x89N\xfe6\x01\xc0\xdd\xce)\xeb\xc1u\xa7\xc7\x98\xa3$\x18\xd5dP0\x0e\xde\x05CrG\xacv\xe7n\xd5(\x15oA8$\xed\xf5\xaf/\x0c\xe0:\x15\xde\x08;\x97\xe1\xbf\xb58\xd3`\xb3[e\x01!\x8d\xa3#\n\xd2\x1d\xc1@\xfa\xd4\x8cWQ^\xda\xc7" r\xf8\xc8\xc7B:\x8a\x80\xd6\xbc\xa8\xcf\x9e\x90\xa8t`\xa4\xff\x00\xb4\xd7]\xb0\xba\xc0\xd4@\xe2\x9b]\xdbA\xf4\xe4\xe0\xd5\xa3\xc8K\xcd\xad\xe6#\x06\x19\xc7n\x98\xcdA\xde\xe9\xf3Z<r\xc0\xd1\xa7\x9d\xc4\xca\xc9\xbb\xeaI\xe4\xe3\x8a{\xa3\xcc\xc6=\x8e\xc0\x1ceO\\\x8a\x90\xbc\x96B\xad\xbeL\xc7\xb7\x0f\x85\xe7\x9a\xe8\xd34j\xe3\xbe\xe2\x90KE!S\xda\xa3\xec\xd2)\xa0\x063\x92\xb8B\x83\xa63\xd7\xe9P\xba\x96\x8e\xaa\xa6f\x92_5\x18\xb2:u t\xfc\xb2qL\xa0\xb9\x9bK\xd4e\xf2Y\xccD\x10\xc1\xc6ISV\xd8f\x96\xee\x00\xc8AU\\\x02\xc3\x9d\xa7\xaf?4\x84\x1a\xc3)\x1b\x8f\xcc\x05u\x89B\x08;\x1d\xc5A\xe9WAL\xca\xf2\x97\x91Q\x87\xaf \x86#\xa1\xce:\xd5\xa6Kx\xae \x1bd\x02@\x80\x8cu\nF=C\xbdR\xb5H\xe7\xb6\x7f:$\x0e\xaf\x81"2\xe4\x15\xff\x00\x91R\xda-\xebK\x1b#\x04,\x00\x08\xb8\xc1\n;f\xb8\x80\xabym\x83\x9e3C\x9c\x80\xeb\xb69\x15\x19{\xa3}\xcd\xe5\x9a<\xa2\xc7\'\x9a\x81:\xaa\xfb\x8fu\'\xa8\xa9\xdb\x1b\x9b\x1dZ\xdaC4E\x1d\\\x96u\x18(\xc0p\xcaOAO\xa7\xb7\x13\xa9uUu#k\x06?\xc3\x9c\x90~EVa\xb5{;\xe5B\xe5\xa1euE#\x86V\xe7\x07\xe4\x1aXE\x88\xe7\x1e\x92x\xf94\xd9s \xc7\xf3\n\xf7S\xd3\x9eY>\xf5\x0cdL\x83\xd5\xfc\x92\'B~?:\x7f\xa3j\x9er\x8bK\x82\x1b\x1e\x96Y:\xe3\xb0?\xf3R\xf3\xcb<\xd6\x91<Q\x106\x1d\xf1\xf1\x92\xa3\x83\x8f\x91U\xfdJ\xc5aH\xef"`\xeb \x1b\xb1\xc3\x1f\x9a\x1a?,\x97D\'\xfd\xdfJ\x03\xeb\x1aX\xe3\xdb\xe2\xa4\xb5\r\x1d.\xa2\x99\x98\x16\r\x83\x9e\xf1\xb6ya\x8f\x8e\xbd\xaa\x8bk\x05\xde\x89t\xe27>K8hC\x91\x80\xc7\xb2\xfc\x1e\xde\xdd+V\xd3\xaf#\x9e\xde=\xeaA\xdb\xce{\x81\xefL\xb5m\x12\xd2\xf6\xdeD8\xc36\xf4\xe7\xf0\xb7\xc1\xa7Z\x00\xea\x1d9\xe7\xfb\xd3K1V*\xfcqM4\xe9E\xf4\n\xd2[/\x9a\xa0nA\xc1\x8c\xe3\x19\\}j/V\xf0\x9d\xb6\xa7\x18\x02\x13\xe7\x81\x81 \x00\x96+\xd0\x91PpK}k|#C\x89\x11\xb09\xc1l{\xfc\x1a\xd2\xf4\xf9V\xedY\x83\x90v\xf4=Q\xbb\x8a\\Ad]\'c\xde\x91!h\xc9 \xedXY\xd1\xf5-2vQ\x00\x018!\x9b\x90;\xe3\x18\xab.\x92\x1a@\xb6\xf2\xc8F\xf1\xb1\xf0p\xe1:\xedV\xea0y\x07\xde\xae\x1a\xf6\x8e\x97q\xf9\xb1\x9eTdu\xc95H\x1atq\xcce\x12\x18\xdd:\xa0\xe3\x8fjm\xa3h\xdb\x93\x8c\xd2\x95\xc3-hv\x0c\xb76ikx\xee\xce\xd1\xe3\xcf*\x17y\x1c`\x81\xd1\xf1\xd7\x1d{T\xb3[[+\xfd\xe4C#\xbc\t\x80\xa0\xe0\xb2\x01\xfa\x13\xed\x9a\xabZ^\xa7\x95\xe5\x19K3`\xe0\xf6\xc7qV+K\xa9Q\x96\xdaiK\xe7\r\x1c\x80`m\xeb\xb4\xff\x00\xcdK\x8c\xa9\x0b\x9a\x8a\xe0\xe4\xef\xf6\xa6\xf7\xfa>\x9b\x7f\x16\x1a\x16+0S\x86\xcf\xe2\x1c\xfa\xbek-\x92\xd6\xef\xc2R\xdc\xcf\x15\xb8\xb8\xb0b\\\xdb\xe3\xd7\x03/S\x19\xf6\xf7^\x9d\xc5m\x8c\x0b\xda\x15%\xa2\xf2\xdf \xafC\x83\xfei\xad\xf5\x8cW1JJ\x8c0\x18V\xeci\xc7\x888\x14\x85\x94\xaeA\xe3\x8a\x83\xd0/m\xb5h\xed\xae\xd1\x91\xe0r%\x8aU\x07\xf1t\xe3\xd8\xd5\xbc\xbd\xc4"\x13\xf8\xc21\xc9\xcf\xe2V\xe9\xff\x00~\xf5\x8e,\xb2\xf8GR\xb8\x96\xd9ekI\\\xb5\xd5\xba\x8c\xedo\xff\x00i\x18\xed\xf2+Z\xd15\x8d;V\xb7\x8aH.\x16d#\xaf\xcf\xc8\xeck\xb0\x11\xba\x92A\xcd"Ps\x9cdb\x9c^\xd8\xd9\xea\xf6a\x0b\xbcR#\xe6)\xa2b$\x86E\xee\xa7\xb1\xf7\xecj\xb1,7\x7f\xbb\xb5\xbdD\x86\xec\x10"\xbaA\x88\xe6#\xa1\xc7\xf0\xbf\xb8\xe8{U\xee\x08Qr\xe10\xc3#\x9e7}i\x0b\xbb\x05\xbc\x08\xc5@e<\x1e\xa0\xfc\x1a\x92SP\xce\x06\x7f\xad4\xaf\xa4\xe0\xf1\xfd*\xa7\xa6^_\xb3Og{\xe5\xf9\xd8e_5}2/\xb1\x03\xa8\xaen\xb4Q\xafY\xd9\x08\xaed\xd2\xf5\x0bk\x96x\xa6\x88\xab4l\xa7\x95\xf6h\xdb\xa9SKkV\x970\x05\x90\xa7\x98\xb1\x9e\x1d\x7f\xd4\x8f\xe4{\x8a{\xa5,w\x11\xad\xc5\xb3\x03\'\x06U\xc7\xe3\x03\xdf\xe6\x91\xa7\x07I\x19\xdb\xbf\xb5+V\x06\xa0q\x93\xfb\xd4e\xb7\x89/,u+]/\xc4v\xd1Y^L\xd8\xb5\xbd\x84\x93ks\x8e\xc0\x9f\xc0\xe7\xf9O\xe5V\xcb\xa8|\xe5>ly\xe3\xb0\xe3\xf2\xa6\x17\xb0i\xfa\xb5\xb3\xdaj\x16\x0b-\xbc\x8f\x8f-\xff\x00\x84\xfb\xe7\xb1\x1d\xaa\x0f\x1a\xb7\x84\xed\xd04\x93\xea\x9aR0\n\xc7\xd7sn\x87\xdc\xff\x00\x1a\xaf\xeb\x8at\x1c\x03\x93\x91I\xc6H\xc6\xcd\xfb}\xab\x8b{;\x16\xbd\x9e\xce\xe6\xd2+\xcbk\x90\x0b\xc0\xc8\xb9\x03\xa6pzc\xdcsW\xb9\xf4\xef\xba\xa5\xba\x89\xe5\x96\xc4\xa8\xc4,r\xca\xc3\xa7\xaf\xa9\x1f\x06\xab2C\x05\xec\xd6\xda\x96\x9d">\x06C\x0eC\x0fcV\xcb\rf;\x95xL~\xa4\x18\xf2\xcdu\x15w\xce7\xe0\xd2\\\xb6A\x1d\xb9\xa4R/1IB\xa0\x91\xca\x9f\xc5\x8a\x89\xbf\xd3"\xbdI\xad\xee\xe0K\x88\x9f\x97V\x1b\x95\x80\xe8H=\x18{\x8a\x93\xf3\x1df \xa6\x1f\x19\x1e\xd8=\xa9\x9d\xf2jQ\x0f\xbci\x85Y\x80\xf5\xdbI\xf8$\xfa\x1f\xe14\xe6\x068\xa4\x8c\xe4o\x8a\xa7\x9bmS\xc3\xc1d\x81\xa6\xbe\xd2#V2Z6d\xba\xb7\x0b\xd3\xc8n\xae\x9e\xea\xd95;m\xa8[\\\xd9[\\\xc3v\xb3ZK\xc9+\xd0|\x0c\xf2\xa4t*zT\xb6\x9d\xa8\xc1z^7\x8c\xc1p\x9f\x8e\xdd\xcf\xad~\x9e\xe2\x92\xb8\xd1mb\xb9\x92\xea\xc4\x08%\x94\xe6d\x03\xf7r\x9f\xf7\xaf\xbf\xcfZ\x02\xed\x95;R\x89\xdf\xd47\xf7\xf7\xae\x0c\x16WX"We\x1c\x00\x1f\x8f\xae=\xea\x0e\xefL\xd99\xb9\x8efG\x88\x97\x8f\x07\x95=2\x0fPM-q`\xcf"\xbcp\xf93n\xc9\x19%N)U\x85\xe4 J\x8d\x13\xee\xc0\\\xf0\xdfJI\xc1\xe4oJ#N\xea\xe0\xfcRpjSC\x00\x83SG\x9d\x06\x02\xdc(\xc9o\xff\x00x;\x1f\x91L\xef-,\x12_6\xca\xeeH\xb7\x10\xef\x14\x9e\xb4c\xee3\xdf\xe9V\t4\xe7p\x01V\xc0\xc5DM\xa5\xde)!P2\x03\x95\\WH>\xd9\xfe\xb4\x90W9\xce>;WZu\xdd\xda:\xc6\xcc\xf7H9\x16\xd3\x13\xb8|\xc5/\xff\x00\xda\xdf\xadM\x05\xb4\xd5\x0c\x92\xd9\xc8VX\x80Ym\xe4;eB;8?\xd0\xd3[\x13qi\x1f\x10`\xb1\x07kv\xfaW\x17\xd0\xcby!\x9b\xee\x86\x19\xf6\xe2;\x98\xf8\x91\x0fn{\x8f\x83]\x19\xc7\xbd$\xf3\xce>i\xf5\xb0\x8e%x\x9d\xe5RA\xde\x8f\xcf>\xe34S\x1b\rvh\xbc\xbb]v\x05I\x94\x90\xb7H=\x12\x0e\xc7\xe0\xfb\x8a+\xa1\x97\xdcRY\\\x1e\x0f\xda\xb0\x18\xecuK\xc7V\x8d\xa0\xb0B\x0b;\xbf\xef.\x00\x07\xa2\x81\xe9C\xf3\xc9\x15a\xd3\xb5\x1d?M\xbf6\xf0\xe9\xd3j\x1a\x91\x8f\xaaf[\x82\x1b\x95\xf3drDi\xc7s\x8a\x8e]6\xfeuU\xbe\t\xa6\xda0\x05-\xed\x9f7\x05{\xef~\x83w\xb2\xf3\xf3S\xf6\xa9c\xa2YN\xb6\xd6\x89o\x0f.\x91\x8c( \x0f\xc5#uc\x9e\xb9\xaa\xf5\xf4\xd3\xc4\xe4{\xfcS\xf4\xb4\xbd\xd4\xc4\x87Zx\xed\xe2\n\x15\xac\xad\xe4a\x0b\xb1;\x80\x92N\x0b\x11\xec\x83\x1e\xe4\xd3\xc9u\xad\x19\xf5\x0bk\x16u\x96\xe7\x04\x80\x10\x80\x0fL"\xfd\x07\'\xb0\xefQ\xf6w\xda\x85\xd2,\x8c\x00V\xc3F\xee\x08,q\x8fJv\x03\xe6\x94\xb0\x81\xedf\xf3\x15\x97\xceuc$\x98\xc9\x7fb\xec{\xfb\x01\xc0\xa7\x03\xf1\x81\xcf4\x8cs\x9e\xde\xd5-q\xe7]\xca\x11m\xc4I\x10e33\x15.\xa3\x8c(\x1c\xf1\xfc\xc4\x8f\x8ag:Z\xc1#\xf9\x03\xd7\xb1p?\x1b7ls\xda\x94/qs\'\xdd\xf2d\x1c\xef\x94\x8c*\xe7\xaf\xd2\xbcdxd\x88E!\xde\xa0\x8d\xe8py\xe0\xe7\x8e){\xb7a\xf54\x9c\xe3\xbf\xe9PMk|\xf7\x124\xd3\x04\xd8C\xa8\xc7\xa0\xa9\x18\x1b\x8fS\x83QN\x960;/\xdfU\xe5}\xccd\xce\x00\'\xf8\x9b#\x9c\xfb\n\x9e\xd4\xa4H\x14Ksr#N\x14\xc8\xfc\xee\xc9\xe9\x81\xcb\x1faU\x9b\xcbc\xa9)\xf2&\x96\xc22\xc7\xf7\x8257\x12\x03\xc6\x14\x10Dc\xe7\xad2\xd8\x1bb\x9cRN\xe6\x9b\xddj\x166W\xb1\x02\x8f\xa8\xdfN\xc0$J\xd1\xbb(=\x0e\xdc\xe25\xc7W4\xfa\xef@\xd45_&m@\x0f!\x0eV\xd2\xd9J\xc2s\xd0H\xc7\xd5&1\x908\x19\xedK\xe9z=\xbe\x97\x0cp\xdaX\x84c c\xbb\xf1\xc8\xd8\xff\x00Q\xd8\xe4\xb7\xe7WM)\xae>\xf7\x14q\xcb\xb5\x07\\\x1e\xb8\xf7\xff\x00\x81@\x198\xdfz\xe9n\xe2\xaa\xd0\x88\xa2\x0b\x0f\x91\x1a\x88},\xb16\xd4\x8cg=\xc5L\x85\xb8\xb8\x06(\xe5\x022=O\xfcy\xef\x81\xc6\x01\xf75/\xab\xdb\xc0\xd3+-\xb0\x96e\'\xca\x89Te[\x1d[\xb2\xfdMV\xd3\xc3\x8du\x13M\xa8\xde\xe60\xc5\x9a\x05m\xb0.\xd3\x9fY\xe0\xbf>\xfcW\n\x90H\x02\xba\x18\x10\t\xda\x96\xb8\xd4\x1e\xe9\x8d\xbe\x99j\xd3\xc6S\x12]\xbbl\xb5]\xa7\x07s\x0fT\xbf\x08\x9c{\x9aU4{(\xa4\x8fQ\xd65\x19/\xee\x9d\x95\x12[\x80\x02!\xed\x1d\xa5\xba\xe4\'\xd4\r\xc7\xde\xa0\xee53\xa9\x15\x8fDX\xd9c"1}*\x13k\x1f\xb8\x81\x07\xfa\xaf\xfd\x05J\r\'O\xd1\x04\x17W7\xd3\\\xde\xb9\xcb<\xc7}\xcc\x99\xea\xa8\xa3\xf0\x8f\xf6\x8e\x05s\'\x078?\xd2\x94\x0e\x0e7\x1f\x1d\xeaU-\xf5+\xc5\x05\xd1\xa0\x88\x86)\x11|\xbf-\xfc`\x1f\xc4GE\xe8;\xf3L|\xe95\x16\x96\xd2\x18\x12\xfc\x16\xd9<n\xe3\xeeq2\xf3\x86`3#\x0e\xe0d|\xd3\x95\xb1\xbd\xd4\xadYn\xdaM>\xda@3n\x8d\x89\xd9\x07P\xee?\x0eG\xb74\xfe\xde\x0f&\xd4\xdb\xc0\x8bi\x11\x1ba\xd8\x06@\x1d\xc0\x1d\xe8\xc6}\xf1\\\xd5\x8aA\xadc(\x90\xdd\xce\xd7RF\xc9#\x92\x8a\x15\x18\x0e\x02F3\xb4\x0e\xdd\xeb\x98\xd6?9\xe7\x91\xcc\xb7.\\+\xb2\x9c\xc6\xacxE\xee\xaa=\x87$\xf5\xa4\xa6\xb5\xd2t\xabY&\xb9\x98\xc7\xfb\xcc\xb7\xad\x9aG~\x99\xf7f>\xd5\x18\xe2\xf3V!\xe4\x8a]:\xc0\xa8\x1b7\x7f\xd4J\x07\xb9\x1f\xe9\x8f\x8e\xb4\x93\x9a\xe89\xfaS\xdb\xbb\xbba<\xc9g\x10\xb9\xbf\x8a\x0f\xe2}\xb1DO\xa4\x16a\xf8~\x83&\x9a\xda\xc3,~\x99e{\xbb\x98\xe1m\xf3\xa9\xd8\xbb\xdf\xa2\xc41\x85\xc7\xb8\x19\xc7SR\x86;M>\x0f&\xde$\x8a\x01\x19\xe4\x10\x02\xe7\xfb\x9a\x8c\xb6\x93z\xc9o\x02yQ\xec*\xb2\x13\xf8\xcbw\xcfR}\xcd!\xb9\xe0R\x94\xe4m\xfa\x9aaos\xfb!#\xb0\xb7\xb2\x8ek\xa9\xd9\x9c\xdbB\nF3\xd5\xe5v\xc9\xc6\x7f\x89\x89bzWP\xe9\xce\xf7\x9f}\xd4%[\xbb\xa8\x81\x10\xa8M\xb0[o\xe7(\x84\x9fW\xbb\x9fQ\xedR)\x1d\xc4J\x89n\x01\x8e\x14e\x0b\xfc#\x03\x96n\xe4\xfb\n\xf2\x16xl\xc9,\x15\x8b\x13$\x8e\x06I=\xc8\x14\xd194\xe8#\xefJ,\xb2}\xe9\x14\xc0\x85\x97\x7f\x05\xb2\x14\xf5\xdcs\xce[\xda\xa1\xccLg\xf2\x95Y"V-p\xc8\x08\x123\x1c\xb2\x8e\xe74\xba\x86\x82\xd4\xcb\xb9`\xb7\xc9\x92I\x1c\xe2I\x08\xef\xcfJB9\xa5\xd4\'\xb3\x9e$)\x17\xe2PN\xd0\xc7\xdc\xfb\x8f\xad7\xed\x9eM86\xe3\xf5\xaeeCz\x11U\xde$\x8d\xc8\x92A\xf8\x8a\xe7>Z\x1e\xdf\'\xb50\x9e\xe2,\xb4PA\t1\x9f\xdd\xa7!c\xdc:\xb6z\xfe\\\xd4\xfd\xed\xca\xc7"\xaa:,lp_\x8c\xf1\xd8Td\xb6\xf6\xea\xccS\x900\xdd\x81\'\xd8\xd2\x08\xc7jP;w\xa87xl\xe2\x99\x82\x87\xf3\x1c?\xab\x92OO\xd3\xe3\xa5#\'\x88\xad\xac\xad^[\x88\xc0\xc0\x05\x19\xc6\x01\xfa\xfc\x8fj\xe7Y\xd4\x16\xce(\x81D3;\x9f. 2\xcd\xf1\xf4\xaam\xed\x8d\xd5\xd4\xc9uz\xa4\xb9\x00\xac\x19\xca!\x1d\xc7\xb9\xae\x0c\x0cg\xbd+4\xdfU\xf1\x06\xa3\xaeJ\x85\xe3h,\xd1\xc3")e\x92]\xbc\x00\xe7<\'\xc0\xa8\xf9o\xe5\x8d\x14\x1c\xe3w\xa5\x14\x90\xa3=@\x14\xee\xe3\x11G\xear\x08\xc9=\xf3\xf0*>\x08E\xc1I\x1f1\x828\x07\x96\'\xdc\xd3\xb9\\n+\xa0\xfbR\xf0\x88n]L\xd2\xb7\x9a\xc3(\x02\x8c/\xe7\xde\xac\'J\xb5\x9e\xee\xdbM\x01\xa3\x86T\x12;\xa8>\xb0Ny=q\xf1Ml\xed,\x90\xacr\x03\x90\x7f\x17J\xbe\xe9\x10[\xa4\xc6\xe0G\xfb\xb4_.=\xe3\x9cS.\xda\x98c;~\x94\xb0p\x1a\xae\x1ad:n\x99m\x04\x11F\x88\xa8\x00P\x00\x00b\xa4n.\xe0\x9d\x90\tr\xe5\x8e\xcfY\x1c\xf7\xc95\x0e\x03n\x8f\x11\x897\x03\x96\xec)k;\x14@\xcd/R\xc5\x8e~{\xd2A\'l\nA\xc6s\x9ay"\xc3\x1b,\xaf$L\xd1\xf3\xc1\x1dH\xc7ZAn\x16Q\x1e\xe7\xc6\t%H$(\xf79\xeb\x9fsB\xdb\xc4\xf2\x12\x8a\xa5S<\x91\xc6\x7f\xe6\x9b\xb3fg\xdc\xa43\xae\xd1\x81\xe9\x00w\xfa\xd2O\xe9KR6\xf7\xa7R\\0\x94y\x0cA\x95\xc1r\t\xfc#\xbf\xbf\xd0S\xf8\xaf\'2m\x0f\x95\x18\xfc\\\xf1\xed\xcdDB\xf3\x82\xfc\r\xcb\xe9S\x8e\xde\xf5`\xb2\x81#\x1fx\x9a0\xa9\xd4\xf1\xd4\xd3RI\xe5&A\xdc\x9d\xa9j5\xb0\x18\xe3\x9aZ\xe2v\xb7\xb0y\x01`@\xc9\xc7\x19?\x1f\xf3Tcm&\xabpn$\x85\xe5\xdb\xc2\x0eJ\xb3\xe7\xfa\x81\xde\x9e\xea\xba\xad\xdd\xf4\xad\x05\xb4d\xf0G\x1c\x00>jcJ\x8e\xee\xda\x18Q\x13n\xc1\x96\xfa\x9e\xb5\x1a\xd6\xdd\x892HNN\xf5"YB.\x84\x02\x9f\xdb\xdb\xc9\x18\x12K\x1b\x05D\x01\x81\xe7\xa7`(\x1f}\xbe\x9fo\x97\xb1I\xcf9\xfc\x89\xa7\x92\xbc\xf3*)\xc0\x19\xcf#\xad<\xfb\xd5\xa6\x9b\x13I,\xbb\xa5a\xefR.\\,l\x88\xd8f\x1b|\xd3\x11e\x9b%s\x8a\x88\xf1\x14\xa6\xc2\xc8\xa5\xbc\x8a\x93H=l\xe7-\xb7\xbfNj\xb3\xa0\xe9\xc4G%\xdc\xc4ob3\xc7\xf0\x0fj|m\xdb\\\xbai\x9c\x91\x18l\xb1?\xc4\x07@>*\xc8\x96\xc9\x1a\xf0\x00@?#MY\xdayQ\xe7\x1c\xeeM9<\xf9\xc2\xe7\xebPR\xdc\xb4v\xf2\xce\x8b!\x92G\xd8\x83\xa7|\x01\xf4\x14\xb46\x12\xc3\x08\x9eI\\\xc9\xb4\x92\xc4dn\xf7\xa7P\x815\xcb;C\xb5:\x01\xf0)}O_\xb4\xb7O&8\xc1f\xea:\xd7e\xf2\xe4\xd8\xb6\xe3\x8a\xe2\x97\x18\xc2\xf3\xcdg\x93Cw\xab\xea\xa24\x89\x84+\x80\xed\x8czA\xe4\x8c\xfb\xd6\x89ka\r\xb4q\xacQ\xed\x18\xce)\r*\x19\x1dd\x9aT\nd\xfc v\x150fE$\x14\xce\x06\x07\xbdH\xb7\xb7\t\x18\xd8qM\xcb1f v\xa8\xf9L\x8cU\x96%\xe0\x10\x14\x8e\xa2\xa8\x9a\x8d\xac\xb7S\xc8\\))\xf8A8\xfe\xd5o\xd45\x03e\x0b\x90\x8a\xcc\xc4\xe0f\xab\xba~u\x0b\xc5\x06 \xa39jjP\xa4\xaa\x0eI\xde\x9c\x88\x90\x19\xc8\x18\x03j\xb1iZZ\xd9\xdb\xc5\x1cm\xebp\x19\x8f\xc9\xa9\x99m\x91bf\xf3\t|c\x1e\xf9\xa5cB\xaa\n\xa0$\x0c\x03I\xbe\xe4E.\x00\xeaMJ\x11*\xae4\xff\x00\xc5G2\x12s\x9e\xf5^\xbc?sIdPCm\xea8\xed\xd2\xaa\x9a=\x9d\xcd\xd5\xecfX\xc0Gm\xe4c\x8e:T\xc6\xb3xg\x05P\xe4\x13\x82\x05Ox~\xc6\xe24\xf3$~\x08\xe0c\xa5FP%\x93\n2\x01\xdf\xedR\t\xf2\xe3\xcblH\xa9\xa4\xb6\x02"NG`\x053\xbd\x86\x18b,\xf2\x90\xaa3\xb7\xe4T\xc4\x85v\x05/\x82{\xfbUWY\x99Qv\x19\x87\xcd?:\xaa!:A\xda\x9a\x89\x8b0\x19<\xd5\x13T\x96;\x97\xc0\r\xean\x80v\xa9\xaf\x0f\xe9\xb6fg\x97\xcar\x14`\x13\xef\xde\xa2b\x9e)n[\x9e\x9c\x03\x8a\xd2\xb4TX\xed\x81*\x06j\x15\xb4A\xe4\xdf\xf9G\xefR\xe6\x90\xa4{\x0ei\xccq\xc7\x1cY\xc3\x1e84\xceWB\xfb\xf6\x9c(\xe4\x8fz\xb0\x95\x8fh\x00\x0c\x1a\x8f\x95\x14o\x1b\x06\xdcU\x9bE\x808\xa8\x0b&N\xf5\x9e\xdd\x88\xee\'%\x14\xb7=\xfa\xd4\x95\x920\x9e!\x91\xfe\x91\xfa\xd4}\xf7\x96oZ\x148=I\x155in\x89q\x11\xdd\x81\xe5\xe0\x8a\x80\xa8L\xe9\x8e3\xbdL.\x04M\xf4\xa9/\'x\x00\xf7\xc6*\x1fQ\x88\x97U\xdd\xb4\xa8\xe4\xd5\x90\xac^Y\x01\x88\xf6\xa8\xbb\xdd\x9bTl\xdc\xde\xf55\x90c\x8a\x8c\xaf\xbf5\x00\xb3y\x1e\x82A\xf6>\xf5m\xb21\xa4J{\xb0\x19\xaad\xcf\x18\x91A\x8f85l\xb2Y\x1a\x18\xb8\x0b\xc0\xa4[\xa8\x0c\xfe\xf9\xa7&l\xaa|T\x8c\x93\xa9|l\xe9\xfaTrK,\xb7\x0e6\x00\xb8\xebJ\xce\xad\x1b\x13\x92x\xe9M\xf4\xd4\x12\xdc9r~\x05<\xc0w\xcf4\x98\xf2x\xf6\xae`*n\'![\xd5\xc0\x07\xa7\x14\xb6\x8fg\xe4\xda\xc9\xbc\x05-+\xb6\xdf\xa9\xa9[\x9b(\xa2P\xeb\x90\xd4\x85\xad\xbb"6\xf2y9\xa5E\x86\x00\x80v\'\x1bRe\xca\x93\x927\x03\xe6\x93\x92\xdd\x0eK\xf4\x03\x8a\xab[\xcf\x04W7\x1b\xa5fe\x97\x1bOaV\xcb\x8c\xf9m\xd6\xaaRZ7\xde\x06\xd4\xe5\xdc\x12k\x92zJ\x9cWb9\x0c\t\xedV\x89\xa2\x8ehw\xa09\xc6j\x06\xe6\x04x\xe4\x0e\xc4\x021V\x85\x82D\x85T\x7f-V\xf5Ky\x15\x1b\x93\x83\xda\x97*eI+\xb67\x14\x88\xa4\xc3\x00\x0f}\xa9K)U\xadR1\x9fH\xc0?J\xaf\xf8\x80\xdc\x18a\x98\xaeV7\x01\x86:\x8a\xb0\xe8\xb1\x11m\xc9\xc9\x06\x99\xeb{\x9a\xd9\xe2\xdb\xc1\xae\xe9\xfe\x189\xec+\xa1\xf1!\x00w\xaa\x9e\xbf\xa4Z\xeb:E\xd4n\xb9I\xa1d*zma\x83\x8a\xfc\xdd\xd64\xf9t\xadN\xfa\xcaT*\xf6\xf3:\x10z\xe0\x1e?\xa5~\x9c\xc1\x1f\x99\xa6\xec9!{W\xc5\xdfn^\x16M;ZM^\x02\x04w\x98\x12/p\xe3\xbf\xe7Sl_L\x8c\xa7\x86\x19\xfb\xd4K\xe4\xd5\x18`7S\xfbU7\xc3\xb7%\xadc\x8c:\xab7\xa4\xe4\x9c\xf1\xd3\xaf\x1c\xd7\xd5~\rW\xd6\xad,\xe7*\xb8\x81v\xb3\x13\x92\x00\xaf\x8d\xf4[\x9d\xae\xa8\xc4\r\xe7 \x9e\x99\x15\xf5/\xd9\xb6\xac\x92B,\xe2g\r\xbf\xd5\xcfR\xc2\xa2\xf5\x14#$\x0eN\xff\x00z~\xc1\xf8\x04\xf6\xad\xdfK\xf1*\xa3\\@\x96j\xdfw|n\xeb\xc0\xefW\x0b{\xa4\xd4#g\x11\xfaXTF\x8b\xa3\xda\xe8)s-\xdf\x96\xe2\xe12\xc4\xf3\xcd=\xd2u\x1b\t\x9eH\xa2+\x8c\xfa@\xf6\xa8\xb00$\xa98\x19\xc6\rI\x98m\xa8\r\xfd\xc1\xa6\x96\xed%\x9d\xd1\x85"\x00;\xe5G\xd7\xadO]\xd8,\xb1\x9cX\xaf"\x90\xd4#8\x0e\xa9\x86S\x90jv\xd6\xedg\xb7L\xe78\xe6\x9f\x8e%\x0c\xc8x\xe4f\xa3\xc9#\x15G\x03~\rR\xa0\x86k[\xad\xad\x16\x14\x9e=\x85[\xc5\xbc\x12D\x01\x8f=\x0e:T.\xa0\xcd\x1c\xbb\x82\x12\x01\xa9[;\x95\x9a0B\x9c\xd2 \x8dc\x96H\xf1\xb1\xf5/\xf8\xa5L\xe5\xe3\x8d\xc7 `\xd5\x7fV\xb2\xb2\'r\xc4\xc2P?*4X|\xc8\xe5\x8d\x89\x1e\xc0\xd4\xc5\xe0\xde\x1bl|\xfb\xd5n\xdeY\xad\xae\x9b\n\xc4\x1e\xb5\xc9\x10E2\xc9\xc0\xe1\xbeEu\x1c\xbce{\x8d\xc5O\xddYE\xc0\x94nF\x18\xe3\xa8\xaa\x8bX[Y^\xac\x913`6z\xf1\x8a\xb9K4\xd2B\xbba\xc9\xa8\xab\xc4W\x81\xd9\xa0*\xff\x00\x14\xe4\xb1+.\xc3~A\xa4G#\x03\xbe\xe0\xed\x8a\x90\xb5\x102(Q\xe9v\xc9\xef\xc9\xaeot\xa8.-\xdc.\xe1\xb0\xe4\x0c\xf4?\x14\xcfJGU\x1b\x94\xe2\xacHw\x02\x85M)\x15]\x06\xa1\x9fzC\xb1G\xf4\xb7\x15[\xb6\x964EG\x90\xe47L\xf5\xa6\xd7\x9at\x97\x16\xd7H\xa7\x0b\xd6<t\xa9-GI;\x8c\xf1\xa7\xa9y\xc7\xbd8\xd3\xe62\x80\x84m\xecA\xf7\xa4\'\xa5\xfc\xb7\xf6\xf4\x9fzQ>\x90\xe9\xf7\x15]\xd1e\x05DR7+\xc1\x06\xae\x91\x08\xe6R\x9bG\xe1\xc05U\xd4\xf4\xbb\xdbk\xa3sn\xa0\x8e\xac\x05X4\xab\xad\xf1r\xbc\xfb\x1a\\\x00\xa34l;\xed\xf4\xa4LC\x00\xea{o\xf1Q:\xbe\x8bo4\xb6\xf7\x01\x1b1\x8c1^\xa6\xbc\xb0\x85\xed\x9f\xce\x83\'i\xfd\xe2\x1f\xe2_\xf9\x15pdfP\xc0\x001\xc8\xa8S\x14\x96\xf3\x93\x81\xb5\x8f\x14\xfbD\x03\x07\x1b{\xd3BB\xcaW<T\xd41Z\xdcF\xb3F7\x0c~\x9f\x15S\xd6\xf4h\x9eE\x91b\nFr\xc0u\x06\xacv\xc2K)F\xd2\x0c2\x9c\xfd\rI\\\xc6%B\xa7\x18a\xc1\xa7\xca+\xa9\x1c\x1ad9F\x04\x1c\x8a\xcc\xa3\xb2\x8f\xccB\xb8\xca\x8a\xb4\xdb\xc4B\xab\xaa\xef!6\xed5\x07siwm<\x8069\xc8\xa9M2\xe2WV\x8d\x98\x06\xedQ\xa3\xd9\xf0\xc3zu\xf7\x19\x07j\x99*\x92!\x8d\x81\n\xc0d{\x1aJt\x9e\xc8\xac\xaa\xdeu\xbe\xdc2w_\x91B\x99\x91\xe4\xdd\x1fU\xe0\xd2w\x17w\x11\xc5\xfe\x81e\x15+`7\xd8\xfb\xd3;\xed\xc1\x15\tua\x15\xf9\x17\x08\x03.s\x9c\xf3\xf9\xd4tZL\x9a}\xd1\xbd\xd2\xc0I\t\x1et=\x16L\x7fcK<\xb3\xda\xc9$\xf6\xf1\xb1\x85\xf9\x92?c\xef]\xd9j\x02v%r0z\x1e\xb9\xa8\xee\xa0\x9c\xe7\x07\xdcS\x87 q\x91W\xbd\x1fW\x83T\x8c\xa6<\xb9\x93\x87\x89\xbf\x1051\x8c\x82\xa3\x8ct\xaa\x13"\xb4\xf1^\xdb\xfe\xee\xe5F\t\x1d\x18{\x1a\xb7\xd9\xeaQ\xca\x88d]\xb2\x11\xcdK\x8d\xf20y\xf7\xa8\xae\xa0\x1c\xa8\xdb\xdb\xda\x97\xba\xb6iW\x0b\x8c\xe3\x93\x8a\xa5Igqg\xa8\x19\xa1>[7\xe3\x1d\x11\xea\xf4\xb7J\x1fnx\xa4\xee\x1e\xdaU\xda\xea\r-\x90>7\xdcW\x15\x8a\xf6\xc84\xc5\x16\x1b\xe8\x83\xc50Y\xc2\xe1\x90\xf45\xec\x16\x8d\x10\xe2b\x03~8\xdb\x91\x9a\xafjH,\xdf\xce\x89\xd9q\xdc\x7f\x9a\x92\xd35\x98u\x04\xf2\xe4\x1e\xb5\xef\xefI\xce\x0e\xfb\x1f\xebJ\xc1\xd3\x91\xb8\xa67:$\xb6\xd2Ku\xa4\xcc!\x9b\x92\xf1\x7f\xf4\xe4?#\xb1\xf9\xa4\xed\xa5\x83Q\n\xed\xba\xd2\xfa3\xea^\x87#\xdb\xdcU\xa4\x18\xd8\xfa\x10\xfc\xd3;\xd5\xb3,\xab-\xbe\x1b\xf8d\x03\x91J\xd3\x8e1\xf4\xae\xea\xce\xc79\xf7\xefJ%\xc4\x91\xa8\x17K\xb8\x8f\xe3\x03\xfb\xd3\xc8\xa4B}\x0e\x0ey\x15\tk,\xd1L\xd1L<\xc4?\x81\xc7\xb5>T\x88\xc8J\x02\x8c:R\xd4\xe6\x90\xc3\x14\xdbU\xd2c\xd4\xc2\xca\xac\xd6\xf71\xff\x00\xa7:p\xca\x7f\xc8\xa8\x8b-z\xea\xca\xe9l5\x88\xb0\xe4\xe2;\xa5\x1e\x87\xfa\xfb\x1a\x9e\x97P{q\x89\xe3%\x7f\x9c\n^KM?R\xb7\x00\x94\x91Xq\xf1A\x07;\x1d\xe8\x07l0\xdb\xfaR\xa25\x91}8e<\x86\x14\xd2\xea\r\xea\x12S\xb9s\xe9q\xd4\x1a\x81\x9a\xc3Z\xd1\xb2\xf6\x13\xf9\xf0g-\x13\xf2@\xf853\xa6j0j\nA;$\x1f\x8a3\xd4\x1a\xe8a\xc7\x06\x92W\xb89\x14\xea\x0b\x89\xa2\x1e]\xcb\x87Q\xf8d_o\x9a\x7f\xbe-\xbb\x90\xe4v\xa6\xf2\xc0\xa38^\xa3\x91M\x13t$\xf9K\xc6yZVqI\xe6\x95\xb9\xb9\xc9Uhr?\x98v\xae\r\xcb*e\x89e\xf8\xa7Q\xcf\x1d\xc0\xc1\x01H\xeck\x86\x81\x91\x8b&\x08\xee(\xfaQ\xf1M\x9a\x1bK\xd4!\x908\xf6#\xa5\x15\xdb\xc2A\xf3"\xc2\xb0\xea\xb4RJ!;\xa8&\xba\x19\x87\r\x8a\xc4\xaf5\x0b?:T\xd3\xee\x1a\xf2\xfb\x02?-\x00)\x18\xff\x00st\x15!a\xe1\xe5G[\xbdB\xed\xeeg\x07p,\x7fw\x1e{(\xa7\x9av\x97c\xa6\xda\xc7\r\xad\xba\xc6\xb8\x04\xe3\xa9\'\xb9=\xe9;\xa63H\xb11\xf4dp8\xcd@\x1b\x9c\xfe\x82\xa4\x1c\x01\x81\xfa\xf7\xa2}B\x15,\x14\x16\x0b\xc0=\x05)k4w[Zf1[G\xd3\x1c3\x11\xfe*\x16\xe0\xa8\xbf\xb7\x8c"\x85\xdd\xda\xa4o.]\x1bb\xaa\x85\x03\xa6(\x04\x96\xae\x10\x00\x1f4\xcbU\xf1\x0c\xaa\xdeN\x9fj\xeb\x12g\xd4N\x00\xf99\xaa\r\xef\x88\xf5K\xbb\xc1k\xa7\xdb\xef\x93#u\xc1$D\x98\xf7\xf7\xa6\xba\xa5\xf5\xd5\xed\xff\x00\xdd\xa4\x94\xac[\x8f\xa5=9\xc7\xbdMZ\xc1\x12\x84\x8dWj\x0e\xc2\x96K{\xd2\x00Q\xdbz\xf2\xce\xce\x7f6)\xae\xae\xfc\xeb\x95$\xa3Hr\x17\xdfh\xe8*\xda%\xf2\xa3;\xee\xa3$\x8f\xe1\x18\xebP\xcd\x14q\x81\xb5G\\g\xbdK\xe9\xf0E<\xcad@p2)\xb2w\xa5g;\xd3\xcd\xef\xb0\x0f5\xd8\x15]\xcc\xbdH\xf6\xfaS\xb67\xa6D\xd8M\xb4\x03\x19*@b\x07\xcfjQQRD\xda1\x93\x8cU/\xc5w\xb7W\x13\xdb\xe9\xfesG\x038\xdd\xe5\xf0\xc7\x9e\xe6\xb8r\x07&\x94\xbb\x9d\xb1W)u\xf8\xe2k\x8bk+_\xbc\xc8\xa8I\t\xd0\xb7\xfb\x9a\xa1\x9bM\xd45x\x12]n\xe0Gh\x99o\xb8\xc6v\xc4\x7f\xfd\xe1\xea\xdfJ\x9a\xb7\xb7\x87M\xd3\xc2\xdb\xc6\x14"\xe7\x9eI8\xea}\xea6\xc1\xdfXro\x18\xba\xa1\xf4\xa0\xe1\x7fJ\t8\xdc\xf3B\x803\x8e\xdd\xfb\xd3\xdbY\xe4\xb8\x89a\xd2\xad\xa2\xb7\x82!\xb5ge\xc2\'\xff\x00\xbbZu\xa6\xd9Z\xda\xdc<\xc1\x9ak\x93\xfe\xa5\xd4\xbe\xa6o\x81\xec>\x05t\x8d\xbag\xb7\xc0\x11*\xf0\xa3\x81J\xc4\x83{I\x93\x948Q\xd8\x0f\xa5s\x8c}h\xe4\x1f\xa5I3\x96\x02B:\xe7$\xf6\x15\x1d&\xa1\x14\xee\xf0X\x8f9\x97\x93 \xfc\n}\xf7T\x06\xa1uqs}\x05\x93J\xcb\x037\xa9S\x8c\xfdMMlKKx\xe1\x81\x04i\xb8\x0c\n\xeeKg\x1b|\xd7B\x81\x8c\x8c\xe7\x8ae\x1d\x81\x86w\xb8\xb8\xb93\xcc\xdf\xe9\x92\xa0\xacc\xe3\xe7\xe6\xba\x9e\xe2H\xc2\xf0eg`\x10\x0f\x7fs\xf1^\xeb.\xdb,aS\xb5d\x90\x06\xc7\x04\xd2\x93HRx\xe1P\xa1Tq\xc74\xd9\xe0\xfcWF\xf84\x8a@\xfe\\\xa6\xeaS!>\xa6=\x81\xf6\x02\x9a\xc5,\xd7WY\nc\x89>=O\xdb\x9fj\x90\x0c|\xa7\xe7\xaf\x06\x92\xb6\xf4\x89q\xd8\x1aG$R\x81\xd8\x9f\xb5/\x12N\xe1\xb6:\xc7\x1atQ\xc9?SQ\x93\x94\x8dHi\x04\xb3o\xdc\xb1\'$\x9e\xd9\xa6:\xb5\xfd\xcd\xab[\xc5\x13\xed\x12\x9c1\xefK\xdb\xc1\x1d\xa2\xcb4C\x128\x05\x98\xf2i\xa7$\xb0Q\xde\x9eU\xc2\xea\'\xe8+\xa946\xd4<\xa9\xb56$dm\xb7\x07\xd0\x0f\xcf\xbd;\x9e\xd5Re\x8dd\x01Tu\xec\xb4\xb8\x9aI-\x0e\xe6\'\xa9\xaa\xcd\xcc\xf3J\xc9\x11\x90\x85g\xe7\x1c\x13\xcd%\xb0\xa3\x1b\x9f\x93]\\\xb1\xdf\x1e\xd8\xa7b\x1f>\xed\xc4@6\xd1\x8d\xc7\xa2\x8f\x8f\x9a\xe6X&\x8d\xbc\xb8\x10\x19\x0fWc\x9cR\xf29\xb7\x88\xac~\x90\x06*9\xee\xe6T$74\x9cg\x1b\xd2\xb2=\xa9C\xa5\xdb[fi\xd9^\xe1\xba\xc8\xdc\x90=\x87\xb5V\xf5gDGX\x93s\x9f\xc3\x81M\xb5]F\xefc?\x99\xc8\xe0T\x10\xbe\xb9\x16\xf9\xf39brq\xcd\x05riC\x8c\xd3f\xb6\x0f)\x96d\xdd \x18\xdb\xd9iD\x08\x8c\x18\xa7#\x901\xc0\xa4\x04\x8f\x9c\x96$\x9e\xa6\xad\xda-\xb47\x01\xc4\x8b\xb8c\xbd5)\x11\xa9\'$S\xd1\xa7\x98\xc0\x03\x8a\x83K\x81,\xb1\xac`I\'p\x07\x15\xa0i6w\x13\xc6\xa2T\xda\xbb\xb3\xb6\xa1\xed\xecmm\xee\xdb\xca\x85W\x07\xb5_\xec\x944\'5\xc5\x1f\xcd\x9eG\x15\xd7 \r pw4\xb2Y\xecM\xe3 \x0eq\xda\xba\xb7\x8e[\x89\x18\xbe\x04K\xd0\x01\xd7\x14\xbb3\x00\xa9\x9fNqRp\x00"\xc0\x03\x18\xa1\x13S\x02\x0e\x07\xb54\xcd\x81\xc6\xe7\xbdG\xbc`0\n@\xe3\xa5G<j\xf3\x86\x00\xfaF1\xdb\xebRd\x02\xd94\x89>\x96\xe0u\xc5+c\x9d\xb1@\xf4\xff\x00JF\xdd\nH\xa7\x01\x86rk\xcdkT\xe2;x\x8f\xab\x1c(\xa6ws<p\xe5N\r0\xd3cY\x8b\xcb&Y\xc1\xe0\x9a\x83\x16g\x90\xb18Pp\x05L+\xe5\xa0\xeej[H\xb1xU\x9d\x86d\x90\xe5\xbe*\xc0e\x080\xa7\x93\xd4\x9akn\xc4FO|P\xecv\x1e\x05N G\x19\xf8\xa8\x9b\xbb\x8f\x9aW\xef\x02\xd84\x97R\x82\x8b\xd2\xaa\xb2]\x8dV\xf9\xb6\xe7i\xe3\xe0\n\xe3S\xb8\x96P\xc8\xc7\x81\xd8S\xbd\x12\x18\xc4E\x82\xf3P!\x87\xcf\x94\xca\xe79\xd8\x0faR\x99\xbc\xb5\xd2\xa3\x8eO\xcdX`\xb7\x86(\xd5F\xe0\x00\xedNwDU@9^\x985\xcfD8\xf6\xa6\xdbG\x93)\xee\x07\x15:V\xf2\xa3$\x0f\x8a\x8c\x83[n{\xd4~\xadx\xd1#\xa4\x0c\x01\xc7j\x82\xd1\xac\xe4\xbe\xb9\xf3&m\xc1O~\xf4\xa0A\'-\xc9,A\xab]\x85\xac0\xc6\xa5\x17\x19\x195\x0e\xd6%\x92Vc\xef\x9a\x953\x98\xe3\n;\xec*Q#H\xd5\x818\x00qQ\xd7\x12E\x1a\x99\x0bt\xefN\'$\x9cd\xe3\x15T\xd7\x19\xa3\x87b\x92\x06j\xc2C\xa0}*\x1a\rDo\xcdE]<\x97\xf7\x18\x079<U\xd3J\xd2\x92\x18\x95\xb8\r\xc1\'\xbdT\xb45\r2\x13\xcdhA\x8a\x81\x8ab\xde0\xc4\xb3nsON\xc4\x05Q\xb5)\xb0\xa88|\x9c\xd4.\xb4\xe5a\xd8f\xc1"\xa5$\x95\xf0y\xe9\x9a\xa3j2\xc95\xd6\xd6c\x8c\xd3\xb3aQ\xb1\xedL\xc5\xeaqM\xecm\x96\xe2\xfa4\x19!NX\xfc\xd6\x93\x12,Q\x90\x1a\xabZ\x1d\xbcHY\x80\xe4\xf75j\x11\xae:Rmc\xd3\x1es\xb9\xefN\\6_\x1d\x86\xd5\x17p\\\x02\xc1\xb3\xc7J\xcd\xf5\x89n]\xa4$\xe0f\xb4)\x8e\x1eA\xdb\x06\xa8\x9a\xa1\xde]H\x18\xa6\xe6\x1b\xaf\xeaiqgsP:V\xd9.\x11L\x99\xf5V\xcfe\x12\xf9(\xa0\xf6\x15\x95h\xf6V\xff\x00{C\xb4\xe4\x11Z\xe5\xa2*\x85\x00v\xa5\xda\xaa\x92\xe4\nM\xc3\x1c(\xcd: *b\x98]\xc8DLA\xe8*E\x80\xc1\xa8\xab\xfe#8\x151\xc7\xa4\xfd*2\xfea\xf5\xaaa\x01\xe6/\xb3,MMX.\xe9\x19\x98\x1e\x9cS\x18\xff\x00\x13\x9fj\x98\xb1\xe8\xc7\xe7\x15\n\x14\xf5\xe7\xda\xa6J\xc7A\xa9D\x8dr\xb9\x1cS+\xd4\x89rF3OW\x9c\xd4n\xa00\xa4\xe4\xd4\xc7 \x0e**\x8c\x9a\x83\x86\xde9\xe7\xf5\x1c\x1c\xe6\xaf6\xf6\xb0\xaa\xa0\xcfj\xa7[\xa0\xf3\x14\xf3\x9c\xd5\xa2\x12}<\x9e\x94\x88t\x82v\xefK\x97\'\x1b\xd3\xb9\xa1\x83=A\xa8\xa3$V\xd3\x12\x80qO%\xeb\xd6\xab\xcc\x81\xee\x1f9\xefK\x91\x88\xe0\x0ek\x91\xfdO\x15%>\xa4\xd7n\x89\xd0\x02*r\xddA\x88n\xc1\xaa|p\xa0\x9dz\xf5\xabt#\x11\xa8\xc9\xa5\xc0]\x86X\xefH\x9bH \x01\x8aQ\xa2\x88\xc6w\x10*\x11\xa3\x88\xdc.\xd2:\xd4\x8d\xe7\xa58\xa8H9\xb9Rk\xb2(%\x07\xcd\x11\xb1\x00\x9c\xf6\xab\x80\xb7_)InqQ\xf7\xb6\xd6\xa6\x12\x1d\x86M8fm\x83\x9e\xd5\x13y\x92\xbdO\x14\xec\x98\xc1\x18\xedM\xc7\x9c\x83\x9e\xf5#a\xa5\xc1\x1c\x1c\x1ak\x7f\xa6[\xcb\x13\x03\x83Nm\x1d\xbc\x81\xc9\xaef\'\xcbnh!D`\x05\xedB\xb3\x19\t-\xde\xabia\x14q2\xa8\xf7\xaf\x9c\xbe\xda\xbc.\xda\xb7\x87\xee&H\x98\xcbk\x97\x8f\x03\xba\xf3\x8a\xfaf\xd9\x8e\xe6\x1fZ\xae\xf8\x9a\xde\x19l.U\xe3\x04\x149\xa4\xc5\x80Q\x87cN9\xce\xb5;\xe6\xbf--\x1d\xa2\x97+\x80A\xc8\xcf\xb5m~\x01\xd5\x1a\rN\xc4,\xbbw\xca\xb9\xc1\xf9\xac\xb3\xc5\x90\xc7k\xe2=N8T*\xa5\xc3\x00\x07\xd6\xa7\xbc/4\x88\xf0\xb0>\xa0\xe0\x03SnP<d\xfb\x8a\x8dn\xc5$\xc5~\x82\xeb\xba\x98m"+hq$\x92 \xf5g\xa5@\xe8\xb0\xdci\xd3C3\xb0\xc9\xe0\xe2\xa9z-\xd4\xf3XB\xf2HY\xb6\x8eM[-\xee\xa6x9n\x87\x8a\xa3Pu\x11\x91\xb1\xabs\xc6\xdd\xeb[\xf3>\xf5k\xb9y%zR:d\xcc\x92<O\xd0\x1e*/\xc3\xd3H\xf0\x90\xc7"\x9fJ\xa0\\\x86\x1c\x1f\x8a\x9b\xf9\x969;\x8a\x86}-"v#57qn$Bv\x8ei\x0b%\x11\x92\xa4\x01\xcdJ\'0\x02}\xaa\x16RD\xfc\x1avE\x0b\xa5\xbb\x83L#\x12\x19j^X\xb7\xa6T\xe2\xabW\x11\x08$\xdd\xc1\xe7\xadO\xc2\xecF\t\xe2\x9b\xdf\xc6\x86\x16\xe3\xa5\x12\xa2\xbag\x1d\xab\x91\xb1F\xc7j\xf6\xd6dx\x97\xa1\xa7r\xa4L\x84\x88\xc7J\x82\xd2y\x0c\x0f<\xe2\xadp\xa2\x95 \x8a\xeccR\x0c\x8f\x8a\xe4\x87K\x1c{\xd5QnV\xdeb\xbbp3\xedV\x08n \x90\x03\xb7\x9aF\xee\xd2\r\xc0\xec\xe74\xee\x08"\xf2\xc7\xa0{WQp\xc4\x0cb\xb9#\x02\x01\xefN\x04\xb0>A\x03\x15Y\xbfxl\xee\x96E\xe0\x13\xda\xac\x8b\x04`\x9fOJ\x85\xd5\xedau\x19Z\xec\xaa\x198\xdc\x1c\x83DM\x86\xef\x83\xb1\xa7\xab43E\xb8\x9c\xee\x15R\xb8\xbc\xfd\x99xF\xd2c\x90\xfe\x95=\xa7"\xf98\xea\x00\xa8\xcdZ\x18\xde6\xca\xf4\xe6\xb8\xde\xb8\xd4\xf0y\xae\xa7\xa5\xca\xf65b\xb2\xbfK\x88\xd4{\xd2\xb7P\xabF\xc0\x0e{U[Ef\x0c\x06x\xc5]\x95APH\xa7c>boM?\xa1\xf0*\xb7\r\xcc\x81L3\xf1\xecjJ\xd2\xeb\x07\xca\x93\x90:\x1a\x8e\xd5\xe1@U\xc0\xc1\xcdqhK\xa2\x13\xd4\x0e\xb5\xd1\x958\xf6\xa0\x80F}\xe9\xe6\xa5i\xe6\x92\xd9\xc6*\x9fu\x88X<m\x89\x14\xfe\xb8\xab\xe3z\xd3\x07\xda\xaaZ\xcd\xbci\x96PA\xa4J\x80\xe4\xf7\xa5Fx\x06\xacz\x16\xab\x05\xfc;d\xc6\xf00sS2$;YH\x1c\xd69o<\xb6\xd7\x91\x18\x9bn\xf3\xea\xadB\xd2W\x9e\xd9Y\xceN)P\xc9\xadpF\xe2\x93,z\x08 \xeci\xac\xe9\x15\xa4\xa8B\x83\x1bg#\xdb=\xaa:\xf2\xce\xc9O\x9fn@\xee@\xa9\x89Q]YXdf\xab\xcd\x12\xab\xb8\x04\xe2\x87\x00\x0c`WWs\xc9\xa4\xc6\xb1m\x18\x08\xc0\x06\xe9R\x1f|2\xc6\xb2FFz\xd5GU\x86=\xa5\xc0\xc1\x07\xb5w\xa4\\JJ\xa9l\x83H\x0cx\xa5\x14\\dV\x83os\xfb\xa5\'\x96\xc6\rHE"\xc8\xbd9\xf6\xa8X\x14\x05C\xef\xd6\xa4\xa2\xf4\xcb\x81\xed\x9a\x90\x87\x8a\x8e\xc3\x9aFg\x8d\xd8\xc7"pzg\xa5R\xb5\x08.\xb4\x9b\xb1sn\xa7\xcb\xceY?\xe2\xb4\x0b\xd8\xd1\xa3\x0eG9\xa8;\x95\x12\xc6U\xf9\x02\xba\xcb\x91\xfd+\xaa\xd8\xc7\xefN\xf4mz\xde\xee59\xc3\xf7\x07\xde\xac\x0f$2\xa9\x12 5\x99\xc9\x04v\xf2+\xc66\xb1l\x1cw\xab\x9e\x91+\xce\x98\x90\xe7\x1d)*\xed\xc1\xae0^FqIL%\xb6\x95\x9e!\x94\xceq\xdb\xf3\xa76s\xad\xf2\xb6\xdfK\xafQR\xa24\xf5\r\xa0\x8a\xae\xce\xa2\xd6\xf1\x9a/I<\xd2\xf0F\x0ev\xf6\xaed\x1e\xdb\x8e\xf5/"3\xc6\xc8\xeb\x9a\xadOmqjY\xed\x89\\\x1e\x9d\xaa\xdd\x1b\x99aVld\x8aGh \xe4R\xc8\xfdi \x91\x9a\x86\xb1\xf1\x02\xb6 \xba]\x8f\xd3\x9e\x86\x8b\xcd2\x07\x94\\[>\xc9\x0fq\xde\x92\xd5m t\xdcS\x9cu\x14\xc3M\x9aU`\xbb\xc9\x03\xde\x93\x9c\xecE+\x1d\xd7oqS\xf6\xba\x84\xf1\x11\x15\xd2\x12\x7f\x9b\x14\xf2\xe6EP\xb2\xa7JU"\x8ex\xc6\xf5\xc9\x03\x83KG\x12\x14\xdaW#\x14\xb5\xce9\xa4m\xce>\xb5\x1c\x16;\xb5\xccO\xb5\xfd\xa9\xe5\xb9\x9e1\xb6Nx\xa8\xcb\xb8R\xde@c\xca\xd4\x95\xb4\xcf,xc\x9e:\xd0+\xa7\x8f\x8a\xe9\xb7>J\xfb\xd1\\n!\x8e\r\x15\xdd\xe98\x15\xff\xd9')}]
2023-09-20T19:56:13,568 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T19:56:13,568 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:56:13,569 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T19:56:13,570 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T19:56:13,571 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 358, in handle
2023-09-20T19:56:13,572 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.inference(data_preprocess)
2023-09-20T19:56:13,572 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T19:56:13,573 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T19:56:13,574 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 300, in inference
2023-09-20T19:56:13,575 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     marshalled_data = data.to(self.device)
2023-09-20T19:56:13,576 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'NoneType' object has no attribute 'to'
2023-09-20T19:57:16,600 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:57:16,600 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:57:16,604 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:57:16,604 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:57:16,695 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:57:16,695 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:57:16,793 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:57:16,793 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:57:16,801 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:57:16,801 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:57:16,835 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:57:16,835 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:57:18,665 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:57:18,665 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:57:18,666 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:57:18,666 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:57:18,666 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:57:18,666 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:57:18,666 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:57:18,666 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:57:18,679 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:57:18,679 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:57:18,681 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:57:18,681 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:57:18,792 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:57:18,792 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:57:18,793 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:57:18,793 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:57:18,795 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:57:18,795 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:57:18,796 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:57:18,796 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:57:18,797 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:57:18,797 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:57:19,103 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:57:19,103 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:57:19,733 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=15440
2023-09-20T19:57:19,735 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:57:19,747 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:57:19,748 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]15440
2023-09-20T19:57:19,748 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:57:19,749 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:57:19,749 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:57:19,749 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:57:19,756 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:57:19,756 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:57:19,774 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:57:19,781 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695239839781
2023-09-20T19:57:19,781 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695239839781
2023-09-20T19:57:19,813 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:57:19,813 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:57:19,823 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:57:19,899 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:57:19,899 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:57:19,900 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:57:20,122 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:57:20,123 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:57:20,123 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/6bd7f1bc92de4845bea3055eae2c04d7/model.pth
2023-09-20T19:57:20,123 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T19:57:23,149 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T19:57:23,158 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:57:23,158 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:57:23,159 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3335
2023-09-20T19:57:23,159 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3335
2023-09-20T19:57:23,159 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:57:23,159 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:57:23,162 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4485.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695239843
2023-09-20T19:57:23,163 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:47.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695239843
2023-09-20T19:57:27,652 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695239847
2023-09-20T19:57:27,655 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695239847655
2023-09-20T19:57:27,655 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695239847655
2023-09-20T19:57:27,658 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695239847
2023-09-20T19:57:27,658 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - <class 'dict'>
2023-09-20T19:57:27,659 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T19:57:27,659 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:57:27,659 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/PIL/Image.py", line 3222, in open
2023-09-20T19:57:27,660 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     fp.seek(0)
2023-09-20T19:57:27,660 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'dict' object has no attribute 'seek'
2023-09-20T19:57:27,660 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T19:57:27,660 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - During handling of the above exception, another exception occurred:
2023-09-20T19:57:27,660 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T19:57:27,660 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:57:27,661 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T19:57:27,661 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T19:57:27,661 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 355, in handle
2023-09-20T19:57:27,661 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     data_preprocess = self.preprocess(data)
2023-09-20T19:57:27,661 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/6bd7f1bc92de4845bea3055eae2c04d7/handler.py", line 52, in preprocess
2023-09-20T19:57:27,661 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     img = PIL.Image.open(data[0])
2023-09-20T19:57:27,662 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/PIL/Image.py", line 3224, in open
2023-09-20T19:57:27,662 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     fp = io.BytesIO(fp.read())
2023-09-20T19:57:27,662 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'dict' object has no attribute 'read'
2023-09-20T19:57:27,665 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:58464 "POST /predictions/test_model HTTP/1.1" 503 17
2023-09-20T19:57:27,666 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695239847
2023-09-20T19:57:27,667 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 225270, Inference time ns: 11607693
2023-09-20T19:57:27,667 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 225270, Inference time ns: 11607693
2023-09-20T19:57:27,667 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:57:27,667 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:57:27,667 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3
2023-09-20T19:57:27,667 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3
2023-09-20T19:57:27,670 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:9.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695239847
2023-09-20T19:57:51,278 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:57:51,278 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T19:57:51,282 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:57:51,282 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T19:57:51,366 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:57:51,366 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T19:57:51,466 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:57:51,466 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T19:57:51,476 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:57:51,476 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T19:57:51,504 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:57:51,504 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T19:57:53,370 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:57:53,370 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T19:57:53,370 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:57:53,370 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T19:57:53,370 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:57:53,370 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T19:57:53,371 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:57:53,371 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T19:57:53,384 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:57:53,384 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T19:57:53,386 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:57:53,386 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T19:57:53,490 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:57:53,490 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T19:57:53,490 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:57:53,490 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T19:57:53,493 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:57:53,493 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T19:57:53,493 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:57:53,493 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T19:57:53,495 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:57:53,495 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T19:57:53,833 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:57:53,833 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T19:57:54,371 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=15656
2023-09-20T19:57:54,373 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T19:57:54,393 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T19:57:54,393 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]15656
2023-09-20T19:57:54,394 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T19:57:54,394 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T19:57:54,394 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:57:54,394 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T19:57:54,399 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:57:54,399 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T19:57:54,411 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T19:57:54,425 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695239874425
2023-09-20T19:57:54,425 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695239874425
2023-09-20T19:57:54,470 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T19:57:54,486 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695239874
2023-09-20T19:57:54,567 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T19:57:54,568 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T19:57:54,568 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T19:57:54,592 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:57:54,592 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:57:54,835 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T19:57:54,836 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T19:57:54,836 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/b169e42298b94127ae9196084e256b8d/model.pth
2023-09-20T19:57:54,836 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T19:57:57,907 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T19:57:57,910 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:57:57,910 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:57:57,910 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3449
2023-09-20T19:57:57,910 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3449
2023-09-20T19:57:57,911 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:57:57,911 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T19:57:57,911 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4532.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695239877
2023-09-20T19:57:57,912 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:38.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695239877
2023-09-20T19:57:57,912 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695239877912
2023-09-20T19:57:57,912 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695239877912
2023-09-20T19:57:57,915 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695239877
2023-09-20T19:57:57,915 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T19:57:57,916 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:57:57,916 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T19:57:57,917 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T19:57:57,917 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 355, in handle
2023-09-20T19:57:57,918 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     data_preprocess = self.preprocess(data)
2023-09-20T19:57:57,918 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/b169e42298b94127ae9196084e256b8d/handler.py", line 51, in preprocess
2023-09-20T19:57:57,919 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     logger.info(type(data[0][0]))
2023-09-20T19:57:57,919 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - KeyError: 0
2023-09-20T19:57:57,924 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:38014 "POST /predictions/test_model HTTP/1.1" 503 3442
2023-09-20T19:57:57,925 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695239877
2023-09-20T19:57:57,925 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 3423788647, Inference time ns: 3436599843
2023-09-20T19:57:57,925 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 3423788647, Inference time ns: 3436599843
2023-09-20T19:57:57,925 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:57:57,925 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:57:57,926 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2
2023-09-20T19:57:57,926 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2
2023-09-20T19:57:57,926 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:12.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695239877
2023-09-20T19:58:12,462 [INFO ] epollEventLoopGroup-3-2 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695239892
2023-09-20T19:58:12,465 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695239892464
2023-09-20T19:58:12,465 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695239892464
2023-09-20T19:58:12,466 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695239892
2023-09-20T19:58:12,467 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T19:58:12,467 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T19:58:12,467 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T19:58:12,467 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T19:58:12,468 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 355, in handle
2023-09-20T19:58:12,468 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     data_preprocess = self.preprocess(data)
2023-09-20T19:58:12,468 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/b169e42298b94127ae9196084e256b8d/handler.py", line 51, in preprocess
2023-09-20T19:58:12,468 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     logger.info(type(data[0][0]))
2023-09-20T19:58:12,468 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - KeyError: 0
2023-09-20T19:58:12,469 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:52864 "POST /predictions/test_model HTTP/1.1" 503 7
2023-09-20T19:58:12,469 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695239892
2023-09-20T19:58:12,469 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 171994, Inference time ns: 5123753
2023-09-20T19:58:12,469 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 171994, Inference time ns: 5123753
2023-09-20T19:58:12,470 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:58:12,470 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T19:58:12,470 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2
2023-09-20T19:58:12,470 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2
2023-09-20T19:58:12,470 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:4.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695239892
2023-09-20T19:58:54,432 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T19:58:54,432 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:02:14,954 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:02:14,954 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:02:14,958 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:02:14,958 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:02:15,049 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:02:15,049 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:02:15,148 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:02:15,148 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:02:15,156 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:02:15,156 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:02:15,187 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:02:15,187 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:02:17,021 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:02:17,021 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:02:17,021 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:02:17,021 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:02:17,022 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:02:17,022 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:02:17,022 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:02:17,022 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:02:17,033 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:02:17,033 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:02:17,033 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:02:17,033 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:02:17,125 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:02:17,125 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:02:17,126 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:02:17,126 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:02:17,128 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:02:17,128 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:02:17,129 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:02:17,129 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:02:17,130 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:02:17,130 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:02:17,441 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:02:17,441 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:02:18,035 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=16004
2023-09-20T20:02:18,037 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:02:18,048 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:02:18,048 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]16004
2023-09-20T20:02:18,049 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:02:18,049 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:02:18,050 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:02:18,050 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:02:18,056 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:02:18,056 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:02:18,068 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:02:18,072 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240138072
2023-09-20T20:02:18,072 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240138072
2023-09-20T20:02:18,115 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:02:18,143 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:02:18,143 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:02:18,187 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:02:18,188 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:02:18,188 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:02:18,404 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:02:18,404 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:02:18,404 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/667f096130174927b2f8593b8c84a199/model.pth
2023-09-20T20:02:18,404 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T20:02:19,337 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695240139
2023-09-20T20:02:21,127 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:02:21,129 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:02:21,129 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:02:21,129 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3014
2023-09-20T20:02:21,129 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3014
2023-09-20T20:02:21,130 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:02:21,130 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:02:21,130 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4102.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695240141
2023-09-20T20:02:21,131 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:45.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240141
2023-09-20T20:02:21,132 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240141132
2023-09-20T20:02:21,132 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240141132
2023-09-20T20:02:21,133 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695240141
2023-09-20T20:02:21,232 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:33314 "POST /predictions/test_model HTTP/1.1" 503 1903
2023-09-20T20:02:21,232 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240141
2023-09-20T20:02:21,233 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 1791651846, Inference time ns: 1892747978
2023-09-20T20:02:21,233 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 1791651846, Inference time ns: 1892747978
2023-09-20T20:02:21,233 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:02:21,233 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:02:21,233 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 94
2023-09-20T20:02:21,233 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 94
2023-09-20T20:02:21,234 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:8.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240141
2023-09-20T20:02:21,275 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - bytearray(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x00\x00\x01\x00\x01\x00\x00\xff\xe2\x02\x1cICC_PROFILE\x00\x01\x01\x00\x00\x02\x0clcms\x02\x10\x00\x00mntrRGB XYZ \x07\xdc\x00\x01\x00\x19\x00\x03\x00)\x009acspAPPL\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf6\xd6\x00\x01\x00\x00\x00\x00\xd3-lcms\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\ndesc\x00\x00\x00\xfc\x00\x00\x00^cprt\x00\x00\x01\\\x00\x00\x00\x0bwtpt\x00\x00\x01h\x00\x00\x00\x14bkpt\x00\x00\x01|\x00\x00\x00\x14rXYZ\x00\x00\x01\x90\x00\x00\x00\x14gXYZ\x00\x00\x01\xa4\x00\x00\x00\x14bXYZ\x00\x00\x01\xb8\x00\x00\x00\x14rTRC\x00\x00\x01\xcc\x00\x00\x00@gTRC\x00\x00\x01\xcc\x00\x00\x00@bTRC\x00\x00\x01\xcc\x00\x00\x00@desc\x00\x00\x00\x00\x00\x00\x00\x03c2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00text\x00\x00\x00\x00FB\x00\x00XYZ \x00\x00\x00\x00\x00\x00\xf6\xd6\x00\x01\x00\x00\x00\x00\xd3-XYZ \x00\x00\x00\x00\x00\x00\x03\x16\x00\x00\x033\x00\x00\x02\xa4XYZ \x00\x00\x00\x00\x00\x00o\xa2\x00\x008\xf5\x00\x00\x03\x90XYZ \x00\x00\x00\x00\x00\x00b\x99\x00\x00\xb7\x85\x00\x00\x18\xdaXYZ \x00\x00\x00\x00\x00\x00$\xa0\x00\x00\x0f\x84\x00\x00\xb6\xcfcurv\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\xcb\x01\xc9\x03c\x05\x92\x08k\x0b\xf6\x10?\x15Q\x1b4!\xf1)\x902\x18;\x92F\x05Qw]\xedkpz\x05\x89\xb1\x9a|\xaci\xbf}\xd3\xc3\xe90\xff\xff\xff\xdb\x00C\x00\x04\x04\x04\x04\x04\x04\x04\x05\x05\x04\x06\x06\x06\x06\x06\t\x08\x07\x07\x08\t\r\n\n\n\n\n\r\x14\r\x0f\r\r\x0f\r\x14\x12\x16\x12\x11\x12\x16\x12 \x19\x17\x17\x19 %\x1f\x1e\x1f%-))-969KKd\xff\xdb\x00C\x01\x04\x04\x04\x04\x04\x04\x04\x05\x05\x04\x06\x06\x06\x06\x06\t\x08\x07\x07\x08\t\r\n\n\n\n\n\r\x14\r\x0f\r\r\x0f\r\x14\x12\x16\x12\x11\x12\x16\x12 \x19\x17\x17\x19 %\x1f\x1e\x1f%-))-969KKd\xff\xc0\x00\x11\x08\x02\xac\x03\xe8\x03\x01"\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1d\x00\x00\x01\x05\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x04\x05\x06\x07\x02\x01\x08\t\xff\xc4\x00G\x10\x00\x02\x01\x03\x03\x02\x05\x01\x05\x07\x03\x03\x03\x02\x03\t\x01\x02\x03\x00\x04\x11\x05\x12!1A\x06\x13"Qaq\x07\x142\x81\x91\x15#BR\xa1\xb1\xc13b\xd1$\xe1\xf0\x16r\xf1C\x82\x17%4Ss\x92\x08\xb2\xc2c\x83\xa2\xff\xc4\x00\x1c\x01\x00\x01\x05\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x03\x04\x05\x06\x01\x07\x08\xff\xc4\x00B\x11\x00\x02\x01\x03\x03\x02\x05\x02\x04\x05\x03\x03\x03\x04\x00\x07\x01\x02\x03\x00\x04\x11\x12!1\x05A\x06\x13"Qaq\x81\x142\x91\xa1#B\xb1\xc1\xd1\x15R\xe1\x07b\xf0$3\xf1\x16Cr\x82\x924DSc\xa2\x83\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xfb\xfa\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xbc\xcd\x14W\xb4W\x99\xaf3E\x15\xd5\x15\xceh\xcd\x14WU\xe6k\x9c\xd1\x9a(\xae\xb3Fk\x9c\xd1\x9a(\xae\xb3Fk\x9c\xd1\x9a(\xae\xb3Fk\x9c\xd1E\x15\xed\x15\xe6k\xcc\xd1Eu\x9a+\x9a(\xa2\xba\xa35\xcd\x14Q]f\xbd\xcds\x9a3E\x15\xd6h\xcds\x9a3E\x15\xd6h\xcdyGJ(\xae\xa8\xaa\xd5\xc7\x8at\xbb{\x83\twr\x0e\x19\x94d\n\x9e\x86x\xae"Ibp\xe8\xc3 \x8am%\x8aB\xe1$V*p\xc0\x10p~iL\x8e\xa1K#\x00\xc3 \x91\x8c\xd2\xf4S\x1dB\xfe\xdfL\xb4\x96\xea\xe1\xca\xc7\x18\xc9\xc0\xc9\xfa\n^\xde\xe2;\x98"\x9e#\x94\x91C)\xf84\xbc\x8c\xe3#<\xe3\xbds\x07\x19\xc1\xc6q\x9a^\x8a\xf34f\xbb\\\xafh\xaf3U\xaf\x12k\xf3h0\xdb\xce\xb6-<l\xf8\x91\x87\xf0}i.\xe9\x1a;\xbb\x05U\x04\xb1=\x80\xa5"<\x8e\xa8\x8b\xa9\x98\xe0\x0fsVj*\x13E\xd7l\xf5\xb8<\xc8r\xac?\x12\x1e\xa2\xa6\xe8GI\x11]\x182\xb0\xc8`r\x08\xa1\x91\x91\x99YJ\xb2\x9c\x10v"\x8a+\x96e@K0\x03\xdc\x9cW1\xcb\x1c\xa3(\xea\xc3\xdc\x1c\xd2\xa94\xa5\x15\xcb2\xa2\x96b\x00\x03$\xfbSK-B\xd3PY\x1a\xdaQ F\xda\xd8\xech\xa2\x9e\xd1E\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14W\x84\xd7\x84\xd7\x99\xa2\x8a\xf6\xbc\xcdy\x9a\xf34Q]f\xbc\xaf3^QEu\x9a\xf35\xe5\x14Q]W\x99\xaf(\xa2\x8a\xf75\xedsE\x14WTW\x94QE{E\x14QE\x14W\x84\x81\xd4\x81\xf5\xa3#\x19\xc8\xc7\xbd\x14W\xb4T]\xc6\xb5\xa6Z\x96\x12]\xa6W\xa8\x078\xfd)\x18\xfcC\xa4Jp\x97A\x8e2@S\xc7\xd6\x90d\x8dX)\x91C\x1e\x01#4\xa0\x8eFB1\x1e\xf88\xa9\xaa*\x03\xff\x00Q\xe9\xf9#l\xd8\x1d\xf6\xf1H\\x\x8b\x11;\xda\xda\x89\xb6\x82H/\x8e\x05u\x1d%\xfc\x92+}\x084\x14u\xc6Q\x86}\xc6*\xcdM\xeen\xed\xed\x13|\xd2\x04\x1d\xbd\xcf\xd0Veq\xe3\xadC/\xe5C\x00\x01I\xc09?Nk:\xd6\xfce\xac\xdd\xb9\x7f\xbb6\xecc\xd4p\x07\xc0\x02\xaa\xba\xa7X\x87\xa6\xc6\xac \x96\xe1\xdb8X\xd4\x91\xb7\xb9\xedV\xf6]\x0e\xf6\xf5\xb1\x85\x8dG%\x88\xfe\x95\xbc\x8f\x12X\x96#k\x85\x07\xf1q\xfd\xab\xdf\xfdK\xa6\x02Ai\x00\xf7\xdb\xc5|\xcde\xae\xeb\x92N\xa6DO/ \xb0\x19\x1c}j\xf05h\xbc\xa5bT9\xe7\x07\xe2\x98\xe9\x9di\xef\xe2w\x96\xdb\xf0\xc5N\xca\xd99\x1e\xf5.\xeb\xc3\xb2\xdb2\x01!\x93W\xfbq\xb5n\x16\xda\xbe\x9btq\x15\xda\x13\x8c\xe0\xf1\xc7\xe7P\x1a\xcf\x89m\xe3\x86xm\xf2\xcd\xb4\x82\xfd\x86}\xab(:\xe4\x11\xab\x9e\x18\x9c\xe3g\xb51_\x15 \x90\xee\xb1vS\xd1\x81\xed\xf9T\xd9z\x85\xb8M>xFm\xb5\x01\x9c})\xa8\xfa\r\xd9b\xdeS2\x8f\xe5\xd8g\xf5\xa7\xc6\xe9\x81b\x11\x89\xeap\t5#\xa6x\x96\xf6\xcd\xbc\xa8\x92\xe9cc\xea\xf4\x12\x07\xd2\xa1\x1b\\\x8f- \xb7(\xc1r\x14\xf0\x0ezsVO\r\xf8\x96\rjg\xb6X^\x19!\x8b|\x8a9\x04\x0e2\x0f|\xd5\x05\x9d\x8d\xad\xb5\xd4\x05:\xac\xca\xec\xf8P\x00\xf5|\x1a\xb3\xbd\x8ee\xb6\x91\x9f\xa6\x87E_Q-\xf9~j^\xf7\xc4\x11j6q\xdb\xdcI\x81\x9fW\x986\xe4\xfeu\xcax\xe5,mm\xac\xed\xad\xcb<+\xb1\xd9\x81\xda}\xb1Nue\x86\xde\xd2i\x9a\x0f>%]\xcd\xe9\x04\x85\xeeqY\xdd\x95\xf4\xba\x84\x9b\xed-\xb7\xdbg\x07\x8c\x04\x04\xe0\x13V\x97\xb7\x0e.Z\x18\xee\xccS4Y\r\xe5g\xd2\x08\xdf\'cU\xf6\x16P\xdc[\x19\x1a\xdc\x98\xd1\xf7\x06L\rDqW\xff\x00\xfdo<\x9c\xbd\xccp\x83\xec\x05y/\x8c<\xb5g\x1a\x93:\x8cr\xb8\xceOl\n\x81}"\xc6H\xc9\x8d\xa3g\x1dK\xa1\xdb\xf9w\x15\x17(\xba\xd3F[L\x87gE|\xe5O\xd0\x8a\x8foyr\xe1\x82\xf5h&\xc7,\x88\t\x1fe8\xa7\x87N\xb1\x90\x8d6\xf2)\xcf\xe5f\xd3\x9f\xff\x00\x8a\xaf\x9ag\x8e\xe2i\x929\xc4\x92\xa3\x0f\xc5\xb7\x05O\xd6\xa6\xef\xbcS\xa5\xc9o$F#\'\x98\xa4m|\x00k+\x8fP\xbc\x93f\xdbX\x15s\xc9\xddO\xdde\x9d\x14\xbcq\x1e\xfb\x82\x92\x7f\xa5[A;\xf9xg\xf3[\xfd\xc5t\xff\x00J\x8d7L\x89d\\)\x8cwP\xe1\x8ejCE\x8bQ\xb4\xba\xf3\xad\x86\xc4,J\x03\x9c`\xf6\xcd^\xa4\xd5\xb5\x17\x88\xaf\xee\x91\x8f\x1b\x97\x92>\x95\x8e\x1f\x10kv\xceR[\x18\xe5E\xe1J\xb1\x1c\x0f\x83S\xba]\xfe\xa5\xac\xa9h\xacc\x81\x01\xdad\x91\xf1\xc8\xec\x00\xe4\xd4\x1b+\xdbkt6\xf1Y\xdc\xae\x18\xe1H\xcf\'\xb1\xec)W\xfd2\xed\xdb\xf1\x12In\x14\x01\x96\x0c?\x7fsR\xfa\x9e\xa15\x81\x92I\xe47\t#\x05Ug\xe4\x13\xed\\\xc3w"\x05x\xa7d\xcf\xb3TU\xf6\x97q\x935\xcd\xd5\xbc\xf1C\x96(3\xc1\xf7\xe6\x99\xa5\xd5\x8ck\x8f%\x8fp#Rj\\2JY\x9aFh\xc1\'B3\x02F\xfe\xe3?\xd6\x99\xfc\x1c2D\xbeX\xf3\x1b\xf9\xd9A\xc7\xd3\x07\x15v\x93\xc4\x93\xdcZKbU\x9eF\x1b|\xccc\x8f\x9a_\xc37V\xbah\xb9\x8eK\x85o5\x83\r\xbd\x88\xebT\xdbX\xde\xf1$kV\x95s\x80Y\xc6\x00\xf8\xe6\x97]3S\x8e\x19U\x1a9\t\xe7\x8cd})\x0f%\xd0\xb9\x8eE\xb6i\xd0#a\xd4\x81\x8c\xf6\xc6FO\xcd \xdb[\x88\xa4\x8b\xf1+\x13\x16\x19V\xe7#\xfaV\xa8\xba\xf6\x9a\xd2<fVB\xab\xb8\xeeR8\xa6\xa3\xc5\x1aq|l\x9bnq\xbfo\x15\x8d\xc9}{b\x88\xdfz[\x90\xde\x97Bq\xb4{\x0c\xd2\x1a|\xb2]\xa1\x91\x83\x062\x16\'q\xeb\xed\xf4\xaa>\xb1\xe2\x83\xd2\xe5\xb4G\xb6#\xce\x04\xee5n\x06q\x95&\xa7\xdbx{\xce\x8eY\x1a}\x97`Gs\xf7\x02\xbe\x80:\xa5\x82\xaa\xb1\xba@\x18d{\xd4,\xbe-\xd3 \xb9\x11J$Dn\x16R=$\xfbU\x0e\x1b\x89\x18\xc6\x92\xb6W\xa6{\x8a\x90\x10%\xc2\x10\x80Hs\x9d\xa4`\xf1\xedWV=Q:\x9a\x06\xb6\x01w\x19\xd7\xcf\xcf\xa7"\xaa\'\xb1\xfc#\xe2bH\xecWa\xfa\xd6\xa4\xb2\xc6\xe1Hq\x86\x19\x1c\xf65\xd6\xe5\xf7\x1f\xadd>]\xc5\xc3\x87{\xa9c*6\x85\xcf#\x14\xfa\xde\x19\x93yy\x1a_a\x92*\xc4JL\xcc\x850\xa0\xec\xda\x81\xcf\xda\xa34\x1aP7\x98\t\xc6\xeb\x83\xfdkQ\xcdx\xcc\xaa2\xcc\x00\xf7\'\x15\x9b[\xeb\x17\x16;\xd44\x90\xa9<\xef\x1b\xd7\xf25\xc5\xe6\xb4\xda\x90X\xa5eq\x13\x1c\xb2d\x0c\xfc\xe2\x83<\x1d\xa6Bs\x8c\x13\x83\x9aH\x82c\xccM\x8cg db\xb4\xdc\xe7\xbd{YP\xd5\xae"\xb70\xc5z\xe8\xb8\xf4\x10s\x8f\x8ek\x8d\x1f\xc6\x02\xc0\xcc\xb7\xb3\xc9:\x9eT\x9e\xa0\xd2\x1e\xee\xdd\x1e52\x0c8>\xbc\x8d \x8e\xc4\xd3\x89ip\xe8\xec#\'I\x19\\\x1dG=\xc5k\x14UF\x0f\x17\xd9\\`\xc7o+\x0fqS\xf6\xba\x85\xad\xe0\xccRs\xfc\xac0\x7f\xad>\xa48\xd4\xa40\xf7\x075\x1d\x95\x90\xe1\x94\xa9\xf6#\x14\xfe\x8a\xe6\x8a\xedr\xba\xa2\xb9\xcd{\x9a(\xafh\xaf3Fh\xa2\xbd\xa2\xbc\xcd{E\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QEy\x9a\rsE\x14\x13\\\x93A5\xe5\x14QE\x14QE\x14QE\x14QE\x14QE\x14Q^\xe2\x8a+\xca\xf6\x99\xdcj6v\xb9\xf3gPG\xf0\xe7&\xaa:\xc7\x8c\xbfg\xc7\xe6\xa5\xa9\x10\x82\x01\x90\x8d\xdd~\x17\xa5&GX\x90\xbb\x9c(\xe4\xe0\x9f\xe9J\x8d\x1aWTA\xa9\x89\xc0\x02\xafu\xcb\xbaF\xa5\x9d\xc2\xa8\xeeN+=\x8b\xc7h\xf0\xb3}\xcc\xb1\x18\xc1\x19\x00\xe7\xe3\xadW\xf5\x8dn\xea\xfc,\xb39\x865\xe8\xa0\x1csIiUP\xb2\xfa\xb6\xe0\x1c\x7fZ\x90\x96s\xbc\x81\n\x14\xc9\xc6O\xfcV\x99q\xaf\xe96\xdf\xea]\xaf\xe5\xcdW\xb5\x0f\x18[\x98\xd9m\x0b\x06\xee\xc4s\xf9\n\xc8.5}0\x96cu\x97\x07\x08\x8c\xd9c\xf9\nm\x16\xb5\xc1X\xedq\xbf\xaa\xee\x03?\x9fZ\xa9n\xa6\xc2B\x1aHQ{\x05\xcb\xb7\xdf\x81W\x91x}\x99\x03\x15\x95\x88\xe78AW\xb7\xbf\xbd\xb9,^b\xbf\xeec\x92iO\xbd\x01\x0e\xc9._\xe7\xd7\xb4Vq{}w<h\xbex\x87\xd4pT\xfa\xbf:\x8a\xdb\x1a\x9c\xcf\xe7\xdcg\x07,\xe4\x0e~*\x9e\xeb\xa9\xf5\x18\xee\x19`t\xf2J\x8c\xbc\xa4\x96\xcf}\x85Z\xc3\xe1\xe8^5.\x02\xb0;*\x0f\xefZ5\xc6\xab\xa6\xdb+\x07\x96\x17\xe3\xfd$\x1b\x89\xaa\xee\x99\xa8^i\xb7s\xdc\xce\xed\xf7Y\xc1P\x85rQs\x91\x9c{T\x1cr\x95|A\x04q\x0e\xaaO^+\x9b\x89e\x95\x1c\xbc\xb8$rs\x85\xe6\xa0I/\x99\xa6Y_\\\x91\xe7\xcbe\x1aB\x93\xecNO\xf6\xabHzTq\xab\xc6\x07\xa6Lk\xd5\xb9\xc7\xc68\xad\x10x\xafGXY\xcd\xcc\x7f\xaf5^\xd4<gl\xd6\xcd\x15\x89vyX\x868\xc2\xa8\xe9\x9a\xcfd\xb4\x85\x1c\xe6B\xe7\xfd\xbd)\xdc0\x1e\x89\x08\xe3\xa9b?Z\xad\xfcoW\x90\x84\x92\xe5B\x81\x83\xe5\xa6\x1b\xf5\xedR\xa3\xe8}:&\xd7\xa1\x9b|\xe1\x8e\xd5b\x82K\xcb\x94X\xe1\x88;\xe0\x1fB\x92\xdf\xa0\xa9\xa8<1\xadL\xa1\xde\x14L\x8eL\xc4)?\x97Z\x88\xd3<J\xfa$7K$"Gy\x03\x02\x8d\xc6\xdccm9\x7f\xb4\t\x9b\xf0\xe9\xa8\xbfRI\xa9\x8f\xd6\xba|Y[\x8f\xc43\xae\xd8\x00\x81\xfa\x80sL\xcbk\xd4\xf5\xb0\xb5\xb7\x85S?\x9d\x8eI\xfd\xc5K\xc7\xe0\xbb\xc2$f\xbc\xb6P\x17\x80\xbb\x9b\xf5\xe2\xa9\xc6\xe5c\x91\xd1\x9d\x9c\x8e0\xa7\x03#\xads{\xe3Mr\xed|\xa4\xc4(A\xe1x\'\xf3=*,\x04\x08\xbe\xb5By=s\x9f\x9ao\xfdZ+\x82\xbf\x87\xb6h\x94r\xcewl\xfc\x1a\x95kgx\x81\xcd\xe4\xc8\xe4\xe3J\xa0\xc61\xf2*b;\xa0\x99"\xddq\x8e\x83\xfb\x12k\xc1v\xce\x1b$FO\x07\x1cc\xf3\xa8f\x92W\x00\x82\x1b=\xfdC\x15\xc1y\xb6\x90ww#h\xe3\x8aS_8\xdb;|\x7f\xc5K\x16\xc9\xce7\xf9\xa9\x99n\x1d\x81B\xe0\x91\x8cg\xbd)\xa2j\xdf\xb0\xf5\xc8\xeed%\xa0h\xccr\x10?\n\xb7\x7f\xc8\xd4\x10{\x82\xc0\xe3 c\xeb\\\xca\xd3\xc8v\xb3\x1e\xb9\xed\xfaTw\xea\x12\xa0-\x1b\x1djABG\x06\xb9%\x94R\xa3\xc6\xe0hu!\x86}\xebW\xd4<y\xa6\xd9\xda\xb2\xc58\x9eR\x1bj\x8ez\x8f\xed\xf5\xaa7\x86\xbcO\xfb:Y\xa0\x8e\xd6{\x85\x94\x87h\xa1\x8c\xc8\xfe\x9e\xe0\x01\xd3\x9a\x95\xf0\x87\x86,\xf5\x84\x9e\xea\xe9\xc0\x86)\x04a\x17\x01\x9d\xb1\x93\x93\xd8\n\xd5\xb4\xbf\x0e\xe9Z8\xb86\x16\xe6#0P\xe7ybB\xf4\xebW\x1d2\xdf\xac\xdf\xdb\xc3%\xd5\xd2.\xc4#\x0f\xcc\xab\xc6\xc3\xe7\x1d\xcdd\xef\xa7\xe8\xfd/\xf16\xd1@\xf2;\x15\xf3\x07\nH\xdfs\xf1\x9e\xd4\xdaK\xfbk\xcb\x14\x96;9\xa3r\xb9\xda\xf1\x98\xd8|\x10\x7f\xcdQd\xbd\xd5\xb5xg\xb0\x9bH\xbb\xb7\x18m\xb28\x1bp\x0f\x04\x10O5e\xd6u\xc6\xd2/\x92\xcd\xb4\xc7\x99\xe4]\xd1\x14\xe7x\xfas\xd3\xbdEO\xe2\x1f\x12yN\xf1\xf8re\x88\xa9\xfa\x8f\xa8\x02\xa1\xdf\x8b9/\x96Y\xae.L\xd6\xe7L\xa9\x04\x04k\xc1\xce\x1b\x03\x15\xcb\x08\xae#\x85Z+xtHu\xc4\xf2\xcc6\xcf\xb5Q\xdfI\xbf]\xab\x0c\xc4\x81\xdf~\x7f\xaei\xc5\xa6\x93\xe2\x19\x19\x96\t\xe4-\x8e\x8a\xc4\xd4|\xf7N\xee\xee\xca\xe0\xc8\xd9!zd\xf5\xc5[<)\xe2\x1bk\x11,wM\xe5\x9f3#\xcd\xe3x\xc6:\xfc{W\x05\xfd\x92\x84\x92a,q\xe4\x06*\xff\x00\x94\x1e\xe6\xaf\xeeV\xf28\x1c\xc6\x91\xcb \x1b)Ni\xcc~\x18\xf1lcs\x18\xdc\x90=%\xd4\x9f\xefP\xf7I\xaf\xe9\x13\x96\xcc\xb6\xa0\x8c0u%I\xeeFx\xad!\xbc]\xa3\x84bg\x8b\xeb\xbf\x8f\xe9U=c\xc6v\x97v\xf3\xda[Fd\x12\xa9F\xc8\xda\x80\x1e\xfc\xf7\xa9\xb7w\xde\x1d\x9a\xddQz\x91|\x90Tj\xd4u\x03\xb7\xb1\xe6\xa9l\xdf\xad\xc9>&\xe9q\x14;1\xd3\xa7\x03\xf7\x15^\xfb\xde\xa3s\xb4\xcf\xa99\x0b\xce\xd0\x00\x19\xf9\xc5h\x9a\x1d\x8d\xfc\x16?\xbc\t\x1b\xb3n\x0f\xbb\x0c\xc8G\x19\x1d\x80\xf6\xac\x82H\xb6)*\xc503\x9d\xc7\xad]\xf4\xaf\x1f%\xbd\xbaE\xa8\xdb\x97\x91\x14/\x98\xbc\x86\xc7\xc5r\xc7\xa8\xd8Z\xb1\x8e\xe6I!V\x1b:\x92w\xf9;\x9a\x93\xd5\xfau\xe4\xd0\'\xe0\xe0\x8eL7\xa90\x01\xfb\r\xaa\xed%\xf7\xdd%\x11\\\xcd\x118\xdd\xb6N\x0e=\xc1\x15_\xd4\x9b\xc4\xb72Ll\xb4\xc6\x16\xe0\r\x93\x81\x82A\x1dB\xf0N*\x99\xe2o\x11\xc1\xad]\xe9\x93\xdb@Q,$\xf3\x1862\xfc\x82F=\xb8\xad\r\xfc_\xa4y\tr\xd7\x89\x83\xd5T\x92\xe0\x91\xed\xefN\x1e\xa3cs-\xcc\x17\x1d]\x92\xd8\x10\xd0\x9c\x94w\x1d\xf2O \x1e\xd5W\xfe\x9dye\x1d\xac\xc9\xd2\xd6I\xa4\x04H\x84jT \xed\x80\xbd\xc8\xaa\x0c\xf6\x868Lm}\xb2@\x0e\xf1*\x9c\xee\xf6\xc7\x14\xd7M\xf1,6\nm\xee\x99Y\x91\xb0\xb2F2\xa4\x7f\x8aW\xc4Z\xcc:\xed\xd7\x9b\x13\x90\x91\xc7\xb3\x91\x82\xfc\xe7\'?\xa5T%\xb4\xb7v%\\\x92\x0f \n\xa7\xeb\x13-\xd7\x96\x96\xe66H\xdb(\xe7\x92\x07\xc6kOejZ\x00nQ\x91\xdce\xa3\xff\x00i\xfa\xe2\xb5\x0b\rZ\xdfY\x92[k{\x80\x92\x18\xcbd\x8e\x83\xa6@=M[c\x82(bQ\xe7\xcb\x91\xd1\x98\x0e\xbe\xfcb\xb0\x88\xa2X\x8a\xbaL\xc8\xe3\x95*y\x15.|A\xae\xc5\x19X\xef\x04\xaa?\x99s\xcd*\xca\xf5,\xe1o;\xa7\x19\xe4\xc6\xce\x8f\x8f\xdbj\x83}\xd1f\x9eE\xfc=\xd0\x8d;\xab.\x7fz\xb3j\xfa\xde\xb5\xa2_\x16\x9e\x04x%c\xb2Db\xdb\xb1\xef\x9e\x87\xe2\x9d\xdbx\xf2\xc9\xd7\x12,\x88\xe0v\x19\xfe\xd5G\xb9\xd5u\r]c\xfb\xf1\x1e\x8eT\x81\x80>\xb4\xd0F\x15\xb2\x18\x1cg<v\xa4G=\xcf\x98\xd3\xdb\xdd\\F\xaes\xe5\xc8C\x11\xfa\xd4\x81\xd2-\x9e\x18\xd2\xe2\x08\xcc\x8a0Z=\x81\xadN_\x17i\x97\xb6\xed\x08\xcb\xbc\x9e\x9c\x05<\x93\xefIX\xdcX\xdaN\x12\xe1\xb6,\xc8<\xb4,\xc1ww9\xe3\xadPlc\x96\xe2H\x85\xbc\x06Y\x1b8\t\xcb~\x82\xa4/\xbc\xd5\x90Ayn\xf1\xb8_\xc1  \xe3\xe3=\xbe\x95u\x15\xc4\xef\x13\xcb4\x8b$\x83HGt\xc2\x8co\x8d\xb9\xcdA~\x95k\x1by\x11\x16E`K(oW\xd4\n\xd4\x0cz|\xc9\xb4e3\xd1\xd4\xee\x00\xfeu\x19qek rB\xb6\x0f\xf0\xf0Mf\xd1\x02\x88\x04w\x12\x85\xdc\x0e\xc8\xdc\xed\xe2\xac)\xac\xaa\xc4\x91\xaeA^\x06\xf1\xbb\x8f\x93\xef\x9a\x9fc\xd4\xa4&As\x0c\n\xb8\x1aJ\x93\xbf\xd4`\x01Pf\xe8\xb2DT\xc3q#\x1c\xf0{\x7fz\xd0m\r\xa5\xad\x8c~T\x83/\xcb\x10r\xd9\xf6\xfc\xa9#\x7f,\x0e\xe29K\xe4\x0e\x87\xa75\x95\\\xc4\xdecKkx\xf1\xbb\xf2\xea\xa7\x0b\x9fl\x1a\xb9\xf8j\xd3\xefv\xb2M5\xef\x9b6\xf2\xad\x802\x98\xed\xc5=k\xd4.\xe4\xba\xfc0\xb7\x8a\x18U}\x12$\x9c\xfc`\xd4\x0b\xce\x8f\x05\xbc-u%\xc3HKn\xac\x8795p\xb2\xf1U\xd5\xbc\xcc$C"\x81\xc8-\xc5L7\x8d-\x8a\x15[r\xb2\x9f\xc2\x18\xf1U\x1b\x9d6d]\xd0\xcb\xb8\x0e\xaaG\xf85\x07\xf7\xa8\xa4%A\x8c\xb0\xc8\xda}9\xe7\xaf5r&1ad:\x8ev-\x8d\xff\x00J\xad[\x18n\x01h\x81\x00\r\xc2\x93\xb7\xd75|\xff\x00\xd62\xc5"\x89%\x80\xf7+\x8c\x10*\xf3c\x7fm\xa8\xdb\xa4\xd0J\xae\x08\xe4\x03\xc8>\xc6\xb0\xb9a\xb5\xb8\x01A\x19n0p\x08\xa5,^M(\x10\x92I\x1fr\xeaN\xda\xea\xcc\xc6B\x18F#\xc6\xcc9\x1fZnN\x9c\xa2<\xc6\xef\xe6\x7f\xb1\x86\xc7\xe9[\xd9 u5\xeeA\xac[\xf6\x96\xa9zx\xbfFU\xe8\x19\x8dI\xe9\xb7\xf7\x96w\x11\xcb2\xbf\xa4\xf2\x15\x89V\x15\xd8\xa7\x8af*\x9a\x88\xdf\x0f\x8c\xa1\xfb\x82j\x0c\xb6\xf2\xc22\xdar9\\\xfa\x87\xd8\xd6\xadED\xda\xebV\x17J\x08\x98!\xee\xad\xc1\x15&\xb2#\x80U\xd5\x81\xf69\xa7\x8a\xb0\xe4\x1a`\x10{\xd7u\xeek\x9c\xd1\x9a\xe5v\xba\xcd\x19\xaes^\xe6\x8a+\xaa+\x9a\xf74Q^\xd1^f\xbd\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(4W9\xa2\x8a\xf0\x9a\xe4\xd7\xb5\xc9\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x99^\xeaV:|e\xee\xae\xa3\x8cc\xa1<\x9f\xa0\xa2\x8e\xe0{\xd3\xdaNY\xa1\xb7M\xf2\xca\xb1\xa8\xee\xc7\x02\xb3\xadW\xc7\xf1\xc6\x8f\xf7\x18F\x07\x06Y;}\x16\xb2\xddW\xc4\xb7\x97\xb2\xb6\xfb\xa7\xb8\x91\xdb\xd2\xb9\xe0|\x00:TY\xaf-\xe0\xfc\xcf\x93\xec\xb5ii\xd1\xefn\xf7\t\xe5\xaf\xfb\x9b\xfcV\xe57\x8ct\x98\xee\x92\xde"\xf3\xb3\x1ce:g\xf3\xa8]S\xc5W\xf6\xf724*\xab\x0chI\x04\x03\xce;\xd6K\xe1\xd1\x7f>\xb3\x14\xaer\xc06\xc8\xc0\xe9\xdb-\xed\x8a\xd1n\xf4\xbbk\x88d\x8em\xef\xbb\xf1mm\xa3\x9f\x9a\xae\x9e\xfa\xeax\x98[\'\x92\xca\xc0\xeb~1\xfa\x1c\xfc\xd4\xb9:m\xad\x95\xc4k4\x86PSu\x1c\xe7\xf6\xaaM\xa7\x885]v\xf9\xa2K\x16\x12\x01\xbaF8\xd8\x83\xf9\x89\xab\xbd\xb6\x95\x04\x90\xb2\xccZm\xdc7$\x03\xfaVM=\xf5\xc6\x83\xaa\xea)\xa7^#Y\xe0+F\xc7sn\xc7M\xdd\xf0k\xdd/\xc6\x9a\x9d\x9d\xd4\x86H\x96He\x04\x85\xdf\x86\r\xefY\xaf\xf5\x8b;\x0b\xcdW\x06{\x97rIr\xda\xd17\xfeQW\xb2\xf4[\xab\x98\x81\xb3T\x820\xaaU@\xd2\xc7\xbe\xe7\xb5m\x90\xd8\xda\xd9F\x00D\x89@\xe0\x0e\xb5\x13\xaa\xdfi\xcf\x04\x91L\x03!\x18+\xd7\x8f\x9a\xc9\xf5_\x19j\xb7\xa5\x92\x1c@\x0fpr\xd5M\x9a{\xe5\x00\xcbu<\xcb\xe6\x06d\xdf\x8c\xf7#=y\xa8\xbdO\xc5sO\x0c\xd0\xd9\xc1\xe5\xa3)_2M\xce\xfd\xc0\x14\xe5\x97\x85\xa4GI\xae&\xcc\x80\x82\x00\xff\x005\xb4\xfd\xc2\xc7T\xb31G\x0cK\x11>\x99\x165\x0f\x9fpqP\x1a\xd6\x83w\xa4\xdbIu\x11\xf3\xedc\x03y\x03\x0c\xa0\xf1\x96_\xafqW=?\xc4~\x19[t\x9dg\x8a(|\xa0V<\xe0\x8c\x0f\xc3\x83\xedU\xdf\x17\xf8\xc7F\xbb\xb1{[\x07\x91\xcc\xe9\xb6BA\xda\x14\xf5\xfc\xeaL\'\xa7\xda\xf4\xb6\x12\xf5h\xae.\x04^\x92\xad\x96$l0\t\xe3\xe2\xb9l\xfdY\xaf\xe3H\xeceH\x0c\x9e\xbdk\xb0\x1d\xc9>\xf5\x9d\xa5\xcc\xa4\x92\x9b\x11O8\xf7\xae\x05\xdc\xa2B\xc1\x98\xb0\x19\xeb\x8e\xb5\'\xa1\xe8\xd7z\xec\xc1-b]\xa0z\xa5l\x85A\xf3\xf3\xf1Z}\x87\xd9\xee\x8d\x00\x06\xe5\xe4\xbb\x93\xa9/\xe9_\xd1q\xc5B\xb4\xb2\xeaW\xea\xaf\x11\xc4y\xc0f:F~=\xea\xfa\xfb\xaa\xf4\xde\x9c\xc5&|\xc9\x8f\xc8\x83Q\xc7\xcf\xb5co4\xce\xe5\xdeB\x0f@>+\xb4\xdcy\x1b\x8f\xd4\xf4\x1f\x9di^4\xd04m?MY-\xad\xe1\x86\xe4:\xecX\xc9\xf5\xa9\xe0\xf0z\xe3\xaek7DfU\xc4\x80\xb6=X\xe7\x1f\x95V\xdf\xa4\xd67O\x04\x85]\x80\x04\x90\xde\xfd\x8e{\xd4\xde\x9fy\x0fP\xb6Y\xe2FE$\x80\x18c\x8f\xa7jJq\xed\xb4{\x9c\xe7\x9a\xf6$,\xc8\xa6q\x97`\xb8\xe82x\xeb]2yCia\xd78\x199\xfdk\x99-\xb7.\xeeG\x02\xa2\xa4\xcaH\xce\x0e\xfb\xe0\x9d\xaaa\x07\x1bV\xb5\x0f\xd9\xd5\x90EK\x8dJS(\x19o-\x17nH\xed\x9e\xd5\x07\xafx\x01\xf4\xbb9o\xad\xae\xcc\xe9\x12\xe6Du\xd8\xc1{\xb2\x91\x90q\xedIi^;\xd4\xac-\xe3\x82\xe2\x08\xee\x0c(\x14I\xb8\xa9*\xa3\x039\xefH\xeb^>\xd4\xf5;v\xb6H\x12\x18\x9d\nH\xa0\xee$\x1e\xdc\xd5\xf4\xfdc\xc2\xadk"\xf9\x0e\xb3i!\x15U\x8b\x06\xfa\xe7\x06\xb2\xb0Zx\xa9/#-r\x8f\x0e\xbc\xb9m:J\xfc\x002*\x9e\x96\xe1\xf9g\xf9\x00\x0c\xd7la\x18\xca\xf4=\xc1\xc9\xfc\xa9\xa2N}F4\xc7\xb1\xceEzdy0\x1bp\xdc\x7f>?\xc5f\xbf\xd4a\x19\x08\xd99\xf6\xadg\x94\xc4\xefN\x95\xc1\xc1\x0c\xc8Gq\xdb\xf4\xa9\xaf\x0eY[j\xda\xb46\xae\xac\xc8\xaa\xce\xe0d\r\x8b\xf3\xf2j\t<\xc1\x0b\x1d\x8eT\x103\x8f~\x99\xa9\x7f\x0bA\xac\x1dn\x1b\xbd.&\x95\xa2FY\xd0\x90\xa8c~\xa0\xb1\xe0s\xd2\xa4X^\x89\xafm\xa2h\x9d\xf2\xe3(\xa0\x96#;\xe0w\xa8\xb7\xea\xd1\xd9\xdd:J\x91\xb0\x8c\xe1\xd9\xb0\x01\xc6\xd9=\xab[\xbc\xf0\x96\x95}\x08H\xe1\x16\xb2(\xf4\xc8\x80\x0f\xc9\x87qX\xee\xab\xa6\xcda}qes\xb4\xb4o\x8fO \x8e\xa1\x81\xf65\xf45\xbc\xd3\xac+\xe6E\x12\xc8G+\xbbw\xf5\x15\x8f\xf8\xb7J\xd5\xe5\xbe\xba\xd4$\xb7\x02\x00\xaa\xa1\xe3`\xca\xa0p7t95\xb2\xf1\x05\xa4"\xd2\x19\xad\xad%\x12)\xf5\x90\xa4\x00\x98\xfeo\xa5c\xbc7\x7fpn\xe5\x82\xe6\xee6\x8c\x8f@f\x04\xeb\xcf\xf2\x9e\xf9\xaa\xbe\x9d{s\xa24\xcfi \xd9+\x02\xf1\xbf+\x91\xdcc\xa1\xabBx\xe7P\x85rmP\xfb\xe1\x98\x7fqT\x8d\x81zO\xbd\xf3\xc8\xc7\x14\x8f\x93\x14\x84\t\x19\x8f\'\x80\x7f\xe6\xbc\xfd\xaf/#v0^2g\xb0j\xd9K\xd3\xec\xee\x0e\xa9m\xd5\xcfrF\xf5\xadxo\xc4\xf0\xebR\xdd}\xf0\xa4\x17H\xd8\x8d\t\xeb\x16;\x13\xd7\x9e\xb5ul\xa23\xa8\xc0\x03\xa8\xaf\x9b\x9d\x15\x18\xfa\x9b*F*b?\x11\xea\xcd\x0bD/\xa4\xda\xb1\xec\xed\x9c}~\x95eg\xe2\x99\xedb\x10\xcdne;\xe2P\xfe\xa2I\xce[5Ky\xe1\x94\x9a_2\tB&\xd9\x8c\x8d\x80\x1e\xd8\xa7\xda\xdd\xdc2\xeb7\xf2B\xe9\xb0\xb8\x00\xafB@\x00\x91\x8f\x9a\x81\x9eY\x9c\x05\xc9\t\xca\xf5\x1c\xd7k,j\x02\xaa\x83\x85\x1d\x8d3\x96}\xa5\x9c\xc6B\x91\x9c\xd4Y\'\x17\xb1\xb7\x9aS\\\x84\x96\x0b\xeew\xab\xf8`\x10""\xe7\x08\xa1A<\xec1K\x00\xe16\xe4\xe0rF\xeaR5\xd8\xeaXc\xfe+d\xd1<9\xa1\xfe\xcb\xd3\xeea\xb5K\xb6\xb8\x85di\xa4\xf5\xf2G \x0e\x80\x03V5\xd2\xad\x15}V6\xca>cO\xed\x8a\xbd\xb2\xf0\xb9@\x8e]I*\xac\n\xa9a\x823\xce\xd5\x9d\xb8\xf1=\xba;\xa2\xc0\xe7\x0cT\xea!NA\xc7\x1b\xd6\x04\xd2\xab\x12\n\xb7\xd7\xff\x001H\x95\x1c\x80\xb9<\xd6\x95\xe2\xf8\xb4H\xac\xa5X\xe3\x85/\x17\x065@\x15\x89\xcfL\x0e\xd5\x98\x84\x97\x02G]\xb9\x19\xc6~j5\xdb\xa4\x13\x98C$\xbay+\xc0>\xc7\xe6\xad\xecg\xfc\\\x02o)\xe2\xc9\xc6\x1b\xbf\xc8\xf8\xae\xd4\xa0\n\xac\xa0g\xafs\\\xfd\xda\x0c\xeeV\x19\xe9\xd0\xf5\xf6\xae\xd4\x11\xb1\xf1\xb8+)d\xeeFy\x00\xd6\x9f\xa2\xf8\x8f\xc3p\x04E\x89-H\xfeh\xc0$\xfdpi\xb8d\xb2\x9ae\x8a\xea\xea8\x03`\xa9q\x91\xfd\x85r\xfak\x8bX\xf5\xc1i$\xe7|\x858\xfdy\xac\xc7\xcah\xc0\xc2`\x1e@ \xff\x00\x9a\xe5bWB\x1b\x82NH\x03\x1f\xd0\xd6\xf3s\xac\xe8\x976\xb2\xb3\xea\x16\xd2&\xdc\xb2\xbe\xd6\x1f\xd6\xb0k\x97cu+A&\xd8\x8b\xbe\xc59\xe1s\xc7_\x8a\x9f|\xb6vm\n\xc3}\x1c\xe2@O\xa7\x1b\x0f\x9c\x13Qze\xed\xc5\xf8\x9b\xcd\xb2{s\x19\x1f\x98\x92\x0f\xea\x05u\x1d\xb0S\xd4\xf5\xebRV\x16F\xee\xfa\xd6\xc8\x05V\x9aP\x81\x8f\x18\xcf9"\xa2\xd6\xe9\xd0\xb0\xc9 \x8e\xbdq]Iv\xeaa\x92)1,l\x1d\x1c\x0c\x10G|\xd4U\xb9\x81\x00c\xea\x0b\xb9Q\xc9\x1e\xd5c$R\xba\xb8V\n\xc4\x1d,w\x00\xf65\xaf\xc5\xe0\x9d"$\x0b%\xd5\xd3\xbf\xf3\r\xaa3\xf00j\xaf\xe2_\x0f[iP\xc3<\x17M*\xbc\x9b\x1a7P\x08\xe3=GQQP}\xa0j\xf1\xaa@\xe26 \x11\xea^O\xf5\xa67\x1a\xe5\xe6\xa8\xdf\xf5/\xb7\x07\xd2\xaa03\xef\xcf9\xab\x0b\x9e\xb7\xd2\xa7\xb7\x11[\xd8:H\xc0z\xc8\xc6\x8f\xdfz\xa1\xb2\xe9\xbdr+\xa1%\xcd\xf0x\x819]\x8e\xa1\xfamS\xbe\x0f\xbb\xb2\xb1\xd4n\x12V\x11\xcf,aa\x90\x8c\r\xb9\xe5G\xcdjWvq\xdf[\x11{m\x15\xd4J?\x8b\x1b\x80?\xca\xc3\x91_=\xcd+9\x07q\'\xb7\x1c\xe6\x9f\xae\xb7\xac\xc3\x0f\x96\x97\xb3*\xed \xf3\xdb\xe34\xc5\x9f\x88$\xb3\xf3 \x92\x034y:4\xb0^\x7f\xdc\x08 \xd2\xfa\x8f@k\xc9\xd2\xe2+\x81\x14\x9bg \x9cc\xfd\xa4`\x8a\xf7Q\xb6\x86\xd6\xfa\xfe\x1byO\x95\x1c\xcc\xab\x9e\xb8\xf68\xa6\xfek\x15\x04\x1c\xe0\xe7\x81\xc0\xc5\x02H\x99ze\xb3\x93\xces\xf5\xf7\xa4q\x1a(\xf2\xd8\xe7w8=\x8f\xc57\xf8\xbc\xb1 \xaaj\xdfH;\x0c\xf6\x15p\x90\x90\x88\xacK\x95\x00j#\x9cw4\xa9\x98\x8c\x82\xcaGPOo\xce\x92\xfb\xc4\xc9 \x92\t\x9a#\xc7\xae"A\xcd(J\x91\xc3\xe7\x8ct\xc8\xaeB\xc2\xa7j\xb0\xcbv\x18\xc5:e,\x008=\xc5\x065\xdf+\xb7\xb6*b\xcb\xc5\x9a\xf5\xa3\x8d\xf2\x8b\x98\xc7\x04I\xc1\xfdEH\x17\xbc\xd6\'\x06(G\x99.IA\x8d\xa3\x1e\xe4\xd5a\xad\xe2!B\xbe\x08\xeb\xda\x96\xd3\xf5\x99\xb4\x9b\xd8dL<c\x89\x10\xf5#=\xbei\xe8\xfa\x8b[(\xfcL\xb34@\x8c\x8dZ\xb1\x9eq\x9a\x815\x84X\x92K[x\x96m\'\x1e\x9c\x03\xf5\xc5Y/t}r\x15\xf32\x883\xf8Nv\x9c\xfb\xb0\xc8\x06\x9a\xdbj\x1a\xa4\x1b\xe1\x9a/-H\'q\x1b\x95\x8f\xb6Ek\x1am\xf5\xa6\xa9l\xb2\xc1"\xb0a\xc8\xff\x00\x91\xfe*\x8f\xe2\x9d.}-\xe3\xb8\xb0R\x04\xad\xb1\xa1\x1c\x80O \xa8\xf6>\xd5\xa6\x96\x04[u\xbe\xb3\xb9\x92H\x88\x04\xe1\xb3\xb1\xf8\xac\xd5\x9fQk\x8b\x83e{k\x1cr\xe4\x85$`dv\xf8\xaa\xd9\xbb\xbc\xb5o2\x171\xe4\xe5\xb8\xca|pkE\xd2\r\xc9\xb6\xf3\'di6\xe4\x84>\x81Y\xd6\x9e\xd7\xfa\xa5\xc9\xb2(m\xdd\x91\x98\xc8\xea@\n;\x8e\x99?\x15)6\x9d\xe2]\t<\xd8X_\xdb\xaf-\xb3;\xc7\xc9^\xbf\xa5T~"\xee\xd0\xad\xd5\xa5\x94\xd3\xc5\x96\x12\xf9m\xa4\xa9\xc7:{\xfc\xedR\xef\xed\xadn\n\xdb\xc9<\x11L@*\x1b\xf9\x87\xb6\xaa\xd0%\x89\xfd3$\xa0\x9fb\x83\x14\xd5\'\x90\xb3bF\xb7\x95NC!;O\xe5T\xeb\x7f\x1c\xdb\xf9ae\x85\xd4\x8e\xd8\xcf4\xdbP\xd5\xe6\xd5`\x8f\xee,\xd1~\xf4\x02\xc7\x83\x9fj\xb2\x8b\xc4\x11\xb6\x96\xb6\x9d\xd9\xf4\xeax\x9b88\x1b\xee\xdcU1\xf0\xfd\xc6\xad3B\xa8\xb9\xc0\x90\x01\xb7\xe9\xcdip\xf8\x9bX\xb1?\xbf\xd9s\x10\xfe,`\xd5\xbbN\xf1%\x85\xfa)f\xf2\\\x8e\x8f\xc0?CY=\xb6\x93\xe2&\xb6Uk\xfbS\x90\x0f\xa86G\xd6\xa3\xf5\x08u\x8d>Eib\xda\x87\xa3)\xca\x1f\xa7\xb5]\xa5\xfc\xefne\x93\xa7H\xa4c`W\x7f\x90A?\xbdV7M\x85\xe5\xf2\xa2\xbc\x88\xb6\xfe\xfb\xe3\xe0\xff\x00j\xfa\x19d\x8d\xc7\xa5\xd5\xbe\x875\xdd|\xfba\xad^\xa9T"L\xf6\x91r1\xf9\x8e\xb5o\xb2\xf1n\xa1\tU\x94\x89\xc0\xeb\x91\x83R\xadf\x8e\xf2=q\x87R\x0e\n\xc8\xbaH?\xde\xa1\\Y\\\xdb1WUn\xf9S\x9d\xabS\xafsQ\xd6:\x9d\x9e\xa1\nI\x0c\xc8I\x1c\xaey\x07\xd8\x8ax&\x89\x98\xa8\x91K\x0e\xa0\x11\x9at\xa9\x19\xc85\x13#\xde\x95\xcd{\x9a\xe6\x8c\xd7+\xb5\xdek\xda\xe35\xed\x14WTQE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14Q^\x1a(\xa0\xd7&\x83^QExk\xca(\xa2\x8a(\xae$\x928P\xbc\x92*(\xeaI\xc0\xaa>\xb5\xe3\xcd7LIDX\x95\xd7\x8ex\x19\xf8\x1d\xeb\x8c\xca\x8aY\x98*\x8eI8\x14\xb8\xe3\x92g\t\x1cl\xecx\n2j\xf4\xc4(%\x88\x00w<UCY\xf1\xa6\x95\xa4\xb1\x8cH\xb3\xcb\x8c\xedS\x93\xf4\xe2\xb1\xedS\xc5\xba\xc6\xb6\xecL\xed\x15\xbe8U\xe3\xfaU\x7f\xef\x11Z\xb4\x8e\xb9\xdc\xc3\xab\xf2\xd9\xaa\xd9\xba\xa4)\xff\x00\xb7\x83\xff\x00sl>\xc3\xbdhm|;<\x987\r\xa7\xff\x00\xf1\xa7?s\xda\xb4mO\xc7\x1a\xad\xee\x16\x15\x16q\xb7O\xe65C\xbe\xd5\xc9vVg\x96l\x90\xcc\xe7\'5\x10\xd7\x92\xcc\xc4\x8c\xef$m-\xd4})T\x86\x187=\xcb\r\xdc\x80:\xb9=j\x9e\xe3\xa9\xcd>B\xc9\x85\xeeN\xc0\x7f\xcdim:=\xad\xa6\x93\xe5\r_\x1b\xb1?ZMb\xba\xbcwi\x17\xc9\x07\x1b\x8e{S\x94\xf2\xa2\xca\xda\xc3\xb9\xd4a\xa58\xeb\xf1M\xa6\xb9gP$fE^Bu5\x1a\xd7L0\x08)\x91\xc2\xaf_\xce\xaa%\xba\x8e\x13\x9dD\xb1\xe4\xf7\xff\x00\x8a\xb8Kv\x90\x00@\x00p\xa3\x8f\xf9\xab\x1e\x99\xaa_\xe8\xda\x84\x972&\xe0\xd1\x14\x93\'\x92\xbdx\xfaW\xba\xb7\x8d\xafu a\xb6\xff\x00\xa7\x8f\x18f\x07\xd4~>*\xb5,\x85\xb0e\x90\x82\x00\x18\xef\x83Q\x92D$\x0c\x91\xee,3\xf1\x81\xefT\xf77s\xcc\xdaE\xcc\x89\x1e0c\xd5\xb1\xef\xbd8\xbd:\xd4\xc8&x\x15\xa4\x00\x00\xd8\xf6\xad\xf3\xc2\xfa\x05\x8d\x86\x8dkt\xd0E-\xcd\xd4BGwP\xd8\x0f\xce\xd0\x0fN:\xd6?\xac\xa5\xac:\xbe\xa4\x90\xa7\xee\xd2V\xc0\x07\x0b\xcf$\x0f\x80j\xc9\'\x8e/\xff\x00b\xdbX\xad\xb7\x97:B\xb1\x99A\x04\x00\x06\xdc\x8cw\xc5gr\xbc\xb3\xbb\xe4\x1c\x06\xfe\xa4\xff\x00Zk\xab\xf5{k\x83gkc\t\x11\xc2\x98bW\x1b\xf0\x7f\xf9\xa8\xbd#\xa7^A=\xed\xcd\xdc\xb9i\\\xe9Ps\xe9\xce\xdfa\xda\x9d\xa4\x83\xcc\x18P\x7f\xc6i\xcb\xb1\nv\xa6H\x1f\x9f4\xd6(J\x00\xa4\xf0\x0ex\xeb\xf5\xa7;\x1c\r\xfb\x861\xd3>\xf5\x00\xb4h\x9e\xacdnj\xf3\x93\xb5%\x97\x93h\xdd\xdb\x9a\xf28\xce\xd0\xb8%O \x9e\xf5\xc2<\xa2B<\xbc\x0c\xe0\xe7\xde\xa5 \x89\xdb>\x9c\xb6\xee\x14u\xfc\xaa\xbf\xf1Q\xabzc,s\xc0\x14\xe1R\x07 \n\x9a\xf0\x87\x8a\xff\x00`\xea\x1fp\xbaQ\xf79\xd8\xee\x97\xa6\xc7 c?\x19\x15\xb9E\xa8Z\xb0B\xb2\xa9\x0f\xd0\x82\x0e~\x95\x8cY\xf87Y\xbdb\xff\x00qXU\xbf\x8ar\x10}q\xd4\xd4\xed\xe7\x80\xa6\xd3\xb4\xeb\x8b\xb1r\x8c\xf0!\x93j+.@\xe4\xe0\x93\xd7\xf2\xadwK\xbd\xf1\x1d\xad\xac\xbe_Lg\x86<\xb8\x12\x1d\x05W\x92\x06w"\xb1\x9dZ\xd3\xa1]\xdd\xa1n\xa0\x91\xcd!\x08\xc1=a\x9b\x81\x9cpi\xb7\xda!\x8emGL0J\xac\xc2\x17W\x03\x86\x039\x07\xe9\xcdS\x15B\x8e\x17\x1c\x8c\xed\xc0\'\xf3\xa6\xe1&\xb8%\xd8\x95$\x0c\x12rq\xf3\x9a\xe8\xdb\xc8\xa5Sf\xf2\xbcg9\x04\xf7\xacu\xdfUk\xcb\xc9\xee\xe4\x85\x87\x9c\xe0\x94C\xb0\xc0\xc0\xfe\x95\xaa\xb2\xb2[+H-\x96M^R\x91\xa8\xf2w\xcdu)H\xf2\x15w\x13\xcf=?\xa562M0\\2\xb8\xe8\xa4t#\xe2\x9d\x88\x99\xb6\x03\x959\xeax\x00\xf4\xa4V\'\'\x1b\xb0\xab\xd8~\x99\xc0\xa8\x13^\xc91\xd2\xb9T\xe0\x00qS\x91\x14\x0c\x9ek\xcd\xb2\x8cnE9\xe8\x07\xfd\xe9\xbc\x8c2T\x020}_\x1f\x194\xecG"?_G8=\xe9?!\x96R~A\xc7|{}j8W \x9f\x9fzVFy\xedH\xc7\x1b(m\x8b\xd1\xbfCO\xed\xad\xfda\xb7\x1ey\xc7\xb6\rx\x1b\xc8\xc2\xee\xc8c\xd3\x1f\xa7J\xf0\xc8D\xdc\xbb\x0e\xa00\xeb\x81\xdb\xe2\xb9\x95\x1aA$\xf1\x90v\xfd+\x87$\x1cm\xf3E\xe5\xbd\xf2j\x11H\x9715\x99 \xb2\xe4g\x07\xa8\xdb\xefR\x9a>\xafs\xa2^\x97\xb5\xcb@\xe7\xd7\x1eF\xee\xe3\x8f\xd6\xa2\xd9\x98\xa9c\x9c\xe7\x18?\x14\x93\xba\x96Q\x8eq\x9f\xfc\x15-.\xda\xdaA$\x04\xc7"\x90U\x97l\x1f\xad3%\xba\xdcF\xd1J\xa1\xd1\x86\x18\x1e\rk\t\xe3k)S\x98\xa4\x8d\x80\xe4\x14\xe7\xfa\x13U\xaf\x12x\xb1u[Ad\x8b\xe5E&\x15\xdc\x902\x01\xce\x00\x1d\xce9\xcdS|\xc4\x0c2\xcd\x92\x0eH\xff\x00\xbdv\xb0\xa4\x812\x80\x9c\xe1A\x19\xe7\xdc\x83S\'\xf17Z\xb9\x8d\xe1\x96\xf3Tn4\xb0Q\x8c\x8a\xae\x83\xa0t\xcbi\x92d\xb7\xf5!\xca\x92x4\xdc*FK\x80\xdf\x8b\x04\x9c\xe3\x0b\xdf\x8a\xe6m\xb7\x11\x01\x91\x83\xc1\x1f\xf6\xf7\xa7\xad\x0c\xb28\x8dcl\xee\x00\x003\xb8\xfd\x05X\xad\xfc\x0b\xae^*\xc9\xf7D\x84\x1c\x1f\xde\xb6\xc6\xc7\xd3\xad&\x08o\xfa\x89)ki<\xc4~m\x03 }q\xc5N\x9e\xea\xd2\xcc\x07\xb8\xb9\x8a x,\xc0g\xe9\x9a\xa4\x98\xc2\x9d\xa4\xe0\x9c\x8c\xe7$\x9at\xb0+\xae\x06\x00\xdb\xd4\xf6\xab\xcb\xf8\x03[E\xc8\x16\xcf\x83\xd3\xcc\xc1\xe7\xe7\x15]\xbd\xd2\xee,&kk\x80\xb1\xca\xbc\x91\xc1\xe0\xf49\xefE\xefN\xeav\x08\xafs\xd3\xe4\x8d\t\xc6\xa6R\x06}\xb3\xc5"\xdb\xa8\xd8^1[{\xd8\xa4`2UX\x13\x8f|T\x1f\x97\xb1\x8a~,\x1fO\xb5&\xf19`\xe0)\xe7\n\x18\xf4\xfdj\\\xdb##D\x8e\xcc\xc0\x9e\xf8\x1c\xd2-n\xc9\xe9(G\x1e\x92\x7f\xefU\x9et\x88\x01\x03c\xb0+\xfejp\xd2O?\xad8\xd3\xb5K\xfd1@\x82\xe2X\x13\x1c*\xb1\xdb\x93\xdc\x03\xc5MI\xe2\xcdV\\\xc6\xd7Rg\x18\xf4\x90\t\xe3\x9a\xab?\x98$\xda\x10\x92\x004\xbf*7,K\x9cd\xf1\xc95\xd8\xfa\x85\xe4jQn\xa5U\xff\x00b\xb9\xc51%\x9d\xb4\x8c\x1d\xad\xe2f\xff\x00qQ\x9aM\xe6\xf3\xa4gc\xeb\xcf%\x9b$\xd0HL\x11\xbf\x1f\xa8\xc5*\x8a\x19B\x95\xe5\xb2I=\xab\xa1\x1eU\x95X)\x00\x1f\xa9\xa4\xc5p\xe9\xc1\'<\xef\xb9\xa7\x8a\x8e1\x8aJ]\xc1\x81\xdazd\x1f\xad7M\xea\xd9\x00`s\x93\xf5\xa9\x03l\x1fnd$\xe3\xa0\xe8\x7f\xedC\xdb\xa4A\x08^I9\x1d\xb8\xf6\xa7\x9ag\x99\x0b8\x00/~Mp\x000\x07&\x99\x80\xce\xde\xd8\x19\x1cP\xf1\x87f\xc89nO\xb0\xf8\xc7\xb58TI\x03.\xec\xe0\xe7\xfe\xf5\xc2y\x8a\xe4\xe1\x88,x\xc6z\xd7b\xb9X\xff\x00/\xf3c?4h\'?\x14\xd1\xed\x1e&\x0c2Tv\x1e\xd4\xea\xd6\xcd\xae\xee\xe0\xb7\x8e\'2\xdc:\xacjN\x01\'\xdb\xe2\x9d\xf1**\x15 \xee\xcerpW\xdb\x1d\xa9k\x0b\x9f\xd9z\x8e\x9f}\xe4\x99>\xeb)b\xa0\xf5\x04\x15$|\xe0\xd5\x8cW6\x92K\x19y\n\xc6Y|\xc2\xbb\xe0g}\x88\xe4S\x12\xf9\xcb\x14\xba\x14\x19\x026\x80x\'\x1b~\xa6\xad7_g71\xd9\xbc\xb1_\xa4\xf3*\x12\xd1\x85+\x9c\x0eB1\xef\xf5\xaa\n+0fL\x10\x08\xc0\xcf\xbf\xf5\xad\xf6?\x11\xe9\xcd\xa7\xc7}\xe6\xa8\x80\xa8l\xf7\x1d\xb0G\xbflV\x11p@\xba\x9eh\x86\xd8\xe4\x99\x8a+\x0e\x80\x9c\x8a\xd2\xf5\xd5\xe8\xf6\xcbf\xf6\x12\xa3\t\x14\x97Ur\xdbvm\xf3\x8a\xcf\xf4\x0b\x9e\xabu\xf8\xc4\xbeC\x98\xd8\x04b\xa1w\xee\xbb{R\x1c\x90G\xe2\xcf\\\xff\x00j\xe9\xdd\x94\xede\xcfL\x0eI\xcd;P^F>X\x04\xaf8\x1dry\xa4\x84\x11\xab.\xd2\xd9l\xf2y\xac\xf3\\c`A\xdf\x9f\xedZ \xbe\xe2\x92U.A \xe78\xc7J\xef\xc8X\x0e\xecd\xb1\xf7\xe7\xebJ0b\xa5\x147<\x80F\x06zQ\x1d\xbbK=\xb4=\x1eWX\xd7=2\xc7\x194\xb5\xb9v:Td\x9d\x85$\x80\x01$\xe0\x0c\xe7\xe9L\xe4(B\xed\xc8\x19\xea\x0f\xf7\xaev( \xed\xe1\x86A\x1dO\xe7Z\x99\xf0\x1d\x91\xb6e[\xd9\x96R9r\x06\xc2~Tv\xfc\xeb;\xbc\xd3\xe5\xd3n\xe6\xb7\x95W\xcd\x89\xb0\xc39\xfa\x11\xf0G"\xad.\xedo,#G\xb8\\+l\x19H`\x0f\xb1\xa8\x16}F\xce\xf9\x9d \x90\x96]\xc8 \x82G\xbe\xf4\xc9\x9c\x9c\x1c\xf4\xc0\xf9\xc56\x9b\xf7\x85w1\xc79\x18\xe7?ZrUr\x01\xeaz\x13\xdf5\xde\xc6\\zx\x03\x1f<TAx\xcc0NGqS\xf4\x01\x8d\xab\x9bk\xfb\xeb2\x1a\xdew\x8f\x8e\xa1\x88\xe9Z\x97\x87u\xdb}J\xca\x16\x9a\xe9\xde\xe1\x13\x0e\\\xfa\xb2;\x1c\x7fJ\xcb\x02\x86a\x1e:\xf22\x7f:L\xac\xc8\xc0F\x9c\x03\x96\xfc\xbei\xdbn\xa1we"\xc9hAPN\xb8\x9b:O\xd3\xd8\xfc\xd5}\xf7M\xb7\xbe\x8fD\x83Kvp\x06kwgM\x9b\x83\xa9\x1d@\'$\x7f\xc5AI\xe2\xfbk;\xb9m\xee\xa2 \xc6F$_b2:Vj\xb77\x9b\x19|\xf9c\x19\xc6\x15\x89\xfd*>H\x04\x84\xbf\x9c\xc5\x9b\x92\xc4\x92\x7f<\xd5\xa3\xf8\x96\xfeDF\xb7\x8b\xc8\x95H\xd4ujV\xf8\xc1\x15Q\x0f\x86\xad\x81q;\xf9\xa8G\xa4c\x04\x1f\xad_\xf5\xcdC\xc3:\x9c3M\x1a\xa9\xba\t\xfb\xb2\xa3k\x13\xfe\xecc?\x9dR\xe3\xb8\x94~\xedw*g-\x8e9\x15\x1b\x1c~\\\x99\x0cs\x8e\t\xa7B\xe3\x18\xc8.s\x9ex\xfd\r".\xa95\xd34\x97^X\x91\xb6:\x14(#\xe7\xdf5g\x0fO\x8e\xd2/*&vA\xb8\x0e\xda\xb1\xf4\xab]\x87\x8b\xef\xb4\xf6\x1eb\xfd\xe21\xc1n\x8d\xff\x00z\xb7/\x8e4k\x88\n\xbb\x85\xdc0\xd1\xc885\x96eH\xe4mV9\xfaW\x1eBgp\x02\xad\xedo\xefl\x94\xfe\x16q\xe5\x9f\xfe\xdb\xfa\x80\xfaUe\xe7E\xe9\xf7\x8d\xaaH\x8a\xb8\xfed85\xb4Y\xebZe\xc2\xa8\x86x\xc2\xe0a}8\xc1\xedMu\x10\x1d\x1ak[r\xe5O\xad#=A\xee\xbf\xf1Y!\xb1\xba\x9a2c\xb1\x96E<\xf9\x91\xa98\xfd*\xc9\xa3x\x96M;l7\x90\x99#A\x8e\x98q\x8fpj\xe2\x0e\xbfx\x1a8\xeeb_-\xb9\x95A\x05}\xb6=\xbe\x95I?\x87c\x88\xb4\xb6\xb2\xb4\x8e\xbc\xc4O5?op$b\x8a\xcf\x14\x84g\x0cv\xb0\xa7\xf1\xea\x17V\xcc\xa5\xd9\x98\x83\xf8\xc1\xc1\x14\xc2}kG\xd4\xa3!\xdc\x16\xc6c\xe3\x12)\xea>\xb5\x01o\xa8\xfd\xe9d@\xc1\xd0\x026\xb1\xc1\x07\xeb\xefV\x82\xfa\x17*c\xb9\x04\x9d\x83)\xc7\x1e\xe2\xa1\xff\x00\xa7<\xca\xfee\xa9M\'\xd4\xac=\xfd\x8dl:_\x8b\xa5\x8b\tz\xa6D\xec\xe0z\x87\xd6\xafV:\x85\xa6\xa5\x11\x96\xdaP\xea\x0e\x0f\xb8?"\xb0m?V\xb3d\x8a\tB\xac\x9d\x0e\xf1\xd7\xf3\xf7\xab\xf7\x87\xb5\x1b}/\xceA\x19h\xe5`\xc4\x83\xea\x1f\xf2*\xce\t\xe2\xb8\x18G\x05\xc0\xdcpk?yg%\xa3\x1dQ\xb2\xaev\xce\xe3\x15\xa4QP\xf3\xeb\xdaU\xbaB\xd2]\xa8\x12\x9c.9?\x9f\xb5JE4S\xa2\xbcR+\xa9\xe8A\xc8\xa7H#\x91P\xb2)`k\xd0k\x8a\xf75\xca\xedwEy\x9a\xf6\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xaeMzk\x93E\x15\xe5\x14R\x1770ZD\xf2\xcd"\xa2(\xe4\x9a\x00\xce\xc2\x8e)lU_T\xf1=\x9d\x90\x91"ey\x17 \xb18U?\xe6\xa2\xf5\rr\xe6\xf8\x98\xedQ\xa3\x8b\x1c\x93\xc1o\xaf\xb0\xaco\xc5Ww\xd6\xd7pF\xd1\x10\x92d&\xdfV\xe2~\x9d1P\xfa\x85\xeat\xf8\x0c\xac\xac\xde\xa0\t\x00\x90\t\xf7\xc5N\xe9\xd6-\xd4.\x04A\xc2\x0cgr2q\xedS>!\xf1|\xf7\xab$1\xc8\xd21?\x8f<\x0f\xa0\xaa\\V\xe0\xe6\xe2\xe6R\xecNqI\xe1m\xf7I!\x06C\xd0\x0f\xe1\xa6\xa8\xb7\x17G$as\xd4\xd6J\xe6\xfaI\x9dY\xc9y?\x95;\x01\xf3^\x87c\xd3\xa0\xb4\x88\xa4K\xa1\x7f\x99\xfb\x93N\xe5\xb9S!d\x19#\x80\x07Jf\x96\xf7\x92\xca\xed \x013\xd3\xda\x9f\xc7n\x96\xe8:\x1c\x9eM\'+0S\x96\xc9<\x85\xfa\xfb\xe2\xa1I#\x1fT\xad\x93\xce\x90v\xab(\xd4\r\x90\x0cq\x93\xcdxZ8Wdc\r\xdd\x81\xfe\xd4\xc9\xe6p\xc4\'\xa9\x8fV<\xfeU\xd6\xc2\x81\x9bv\xf2}\x8fAM\x03\x93!1\xa9\xc8\xeeG\x1fJ\x815\xd9\x04d\xe3\x1d\xbf\xc5J\x8e\x11\xbe\xd9\xf94\xa7\xef7\x86#\x04\x8ers^\x11\x14{A}\xce\xc4\xf5\xed\xff\x00j\xe3\xab\x97f\xc1#\xa7L\xd7\x1bw1fA\xb7\xdf\xa6G\xbej\xaek\x93\x9d\x86\xe4\xf7\xf6\xa9*\x9fj?\x0b\xb0\x1c\x920\xdc{\xff\x00\xc5x#d8\xcf\x04\xf3\xc7\xe7J\x96\xdaLh\x0e\x0e=dq\x8f\x83\xf3J\xc3\xbb;[\x03\x8e_<\x01P\x16Gs\x85\x19?\xee?\xda\x96v\x19\xae\xed4\xdb\xfdB\xe5"\xb4\xb52\xc8y*\xa38_\x93\xd0\x0f\x93W\x9b_\xb3\x9dZU\x06{\x8bh3\xc9\x0b\x97a\xfd\x85]|\x10\x96\x1f\xb0\xad\xe4\xb5Q\xb9\xcb}\xe1\xf1\xcbJ\t\x04\x1f\xa0\xe9VMF{\xc8\xed&\x16Q#\xccW\xd3\xbd\xb0+\x7f\xd3|3`\x96+ur\xd2\\<\x91\t\n!\xdbq\x9c\x007&\xb0]K\xc4\xd7\xe6\xfd\xedm\x968\x15$1\xeb\x90o\x90q\x93\x9d\x80\xaf\x9f5\xdd&M\x16\xef\xee,\xfes\x15\xdcY8\x18=8\xab\x17\x85\xbc#\xfbZ6\xb8\xbc2\xc5k\xf8b\x0b\xe9i\x08\xe0\x90N}#\xdf\xb9\xaa\xa6\xb1u/\xden\xe5\xb8W\x92\xe7q\x12\x168#\x07\x04\x11\xd8\x0e\xc2\xbe\x88\xd3D\rmh\xb0\x11\xe4\x88#\x11\x91\xd3n\xd1\x8a\xcfxr\xc6\xd3\xacu+\xc9&\x8f\xf8P7\xf0\xed\xdb\xbe\xa2@\xd5\xef\x8co\xf3V\xfd{\xa8\xdet\xee\x9dj\x91\xbf\xf1\xa6\x18y\x94q\x80\t\xd3\xf5\xce\xd5\x97\xf8\x87\xc1\xa9\xa5\xdaMwgp\xed\x02.dI1\xbdG\xb8`9\x15#\xe1kM*\xce\xc6\xdbQ\x94\xa4\xb3\xca\x9b\x84\xaer#\xe4\xf0\xa3\xa0?5?\xe3\x9b\xd8-\xb4y\xac\xcc\x83\xcd\xbc]\x80{&y5K\xd2|\x06\x97\x960\xc95\xe5\xc0\xb5\x94o\x10\xa3\x9c\x10{\x9ep*GP\xb5\x8a\xcf\xaf\xb4}*\xca9$\x8e\xddY\xd0\x9c\xacL\xc7\x91\x9e6\xfd*\x1d\xad\xd4\xd7\x9d\x11[\xa8^<j\xf3\x15W\x03\xd5"\x01\xc6\xdc\xef[\x14rF@\xda\xcb\xd3\xf1{\xd7\xb2$\x13#\xa4\xc7z\xba\x95e=\x08=\x88\xa8\xbbK\x08m\xe1\x8a$w!\x14(,\xe4\x9c\x0e95\x15\xe2\x0f\xdazl\tqjU\xe3f\n\xe2L\x82\xb9\xe8F:\x8a\xd9\xbfS6\xd6rO%\x8eQ\x132\x05:\xb0;\xed\xde\xb2\x91\xf4\xf1=\xd2E\x1d\xde\x19\x9b\x08[\xd3\x93Hj\xbe\x0c\xd2\xa4\x82W\xb2\xff\x00\xa7`\x0b*\x83\x94\'\xdb\x07\xa6~+\x9d7\xc2\xbaRY\xc2e\x87\xef\x12:\x06y\x19\x88\xc1#\xf8v\x91\x81T\xfb\xedgSu1\x9dI\xb6:\xeda\nm \x9e\xd9\xe4\xd4\x9e\x81\xe2\xbf\xb8\xd9\xa5\xad\xec\x12?\x93\x1e\xd4\x919\xdc\x07\x03w\xb1\xf9\xac<]k\xc2\x92\xf5S+t\xc8\xed\xd1\xa2!\x9d\x902\x96\x1b\xfeU\xc8\x1bw\xadd\x9d;\xc4Q\xf4\xed\x0b~\xf30\x90\x10\x15\x88m8\xf78&\xab\x9e!\xd2\xce\x9d\xa8I\nJLl\x15\xe3\xcfP\xa4\xe3\x07\xe9\xefP)\t\xe4n\xdcq\xc8\x1c`f\xa65}E\xb5;\xd9n\tlp\xb1/\xf2\xa8\xe9\xd3\xaf\xcd9\xf0\xee\x8a\xba\xdd\xdc\xca\xccD\x10\x10fn\xa7\'\xa2\xaf\xc9\xf7\xf6\xacI\x86.\xa5\xd5\xe4\x87\xa7A\x95\x9aV\xf2\x97\xfe\xde~\xc3\xbf\xd2\xb5I3Yt\xe4\x96\xf6L\x18\xe2S#c\xbf\x1f\xad@\x95M\xc4\x90H\xed\x8e9\xc7Q\xf3^ml\xc9\xe6\x02\x06}X\xc7Q[\xabhzTvO\t\xb1\x87\xc9H\xceN\xc1\x90\x00\xeb\x9e\xb9\xf9\xacN4R\xa0\xe7v\xf6*\xc3\x8e\x83\xa1\xfaU\x8fZ\xe8\x12\xf4?\xc3\x89\xae\xa3\x91\xa6Vm+\x90\x01\\\x03\xb7q\xbe\xd5\x13\xa5u\x98\xba\xb0\xb81\xc2\xe8"`2\xdd\xc1\xdcq\xf4\xa6\x8c\x01\x8c\x00\xb9^\x83\xf3\xa4<\xa0\xbc\x91\xc1\xf6\xe4T\xe1\xb6a\x06\xf6\xb6\x90.\xf2A\x0b\xfd\x89\xa8\xfc\xab\xb1\xdb\xc8\xe7\x8e\xc7\xbe+;22y`\xb1\xcb(8#\x15r\x8c\x1868\x07}\xe9\x93)b\x0b\x00\x01\xc7\xe4)\x7f\xbb5\xc3\xa9\x85Y\xb6\xff\x00*\x16\xfdqC\xb1\x8c\xe5\xa2\xe4\x1e\x84t\xcdk\xbe\x00\xbc\x8a\xe7FP!X\x9e)\x9d\x1d@\xc1$\xf2\x18\xfeF\xad\xba\x07K\x1df\xfb\xf0\xd2\xdd\x18},\xc1\xb4\xea\xc9\x1d\xb1\x91U\xfd_\xa8\xbfK\xb37\to\xe6\xe1\x82\xe3V\x00\xcf~\reF\xcekv\x8cOm$D\xe7\x1b\xe3+\xf3\xc6k\xd5\x91\xa3!O\'\x9c\x83\xfc<v\xaf\xa2\xee\xac-5\x18^\xde\xe1\x03\xa4\x83\x1c\xf6>\xe3\xd8\x8a\xf9\xea\xee\xdd\xec\xee\xae\xad\xd9\xf7\x18\xa6h\xf3\xf0\x0e?\xadXx\x8b\xc3\xd2xw\xf0\xf2G?\x9d\x0c\xe5\x941\x18`F\xf8#5\x07\xa1\xf5\xc4\xebBeh<\xa9b\x00\x95\xceA\x07\xb84\xae\x93\xab\\\xe9z\x9a\xdc\x0bT\x95v\x15\xc6@`I\xceFkK\x8b\xc7v\x81G\x9f\x04\xb19\xed\xb3v~\x85sYh\x8c\x16\x0c\x06\xe5\xf8=\xe9\xc8\x04\x00v\x9e:\x8e\xa4\n\x85\xd3<E\xd5\xfaR46\xd3\x81\x19mZJ\xe4d\xf7\xde\xa4u\x0e\x8d\xd3\xba\x8b\xac\x93\xc2K\x81\x8d@\xe0\xe0v\xad&o\x1d\xa0\x8d\x8d\xb5\xa4\xd2\x1c\x7f\x10\x11\x8f\xeb\xff\x00\x15\x99jWW\x1a\x9e\xa1-\xdd\xd3+<\x83\xf0/EQ\xd0\x0c\xff\x00z^Ic\x8a5\xf5\xf5=Orzb\x9byy}\xef\xb5H\xeb\x8ex\xa5un\xb9\xd5z\xa4QEurYU\x83h\\\x05\x07\x1c\xed]\xe9\xbd&\xc3\xa6\xb3\xbd\xbd\xb8Va\xa7Y\xc9b=\xa9\xb6\xd0\x81\xd9y\x1d\x8d*\x8f+\xaa\x8d\xc5\x80\xcer2\x07\xc6i\xc2\xaa3\x85\xc1<\x02\xa7\xb7\xff\x00\x15\xe8\xf4\xef\xc2m\'\xa9\x1d1\xdb\xf35L\xa3Il?9]\x89\xe4o\xda\xad\x0b\x0f\xf6\xef\xce\xf4\xd6(\x96G;\x8fS\x9c\xff\x00\x8a\xeaKdR\xce\xa4\xe0g\xe4\xe3\x14\xb6\xdc\xe3+\x83\xd4}k\xd4\x8dx\'\x9er\x08\xf9\xa4\xaczTjPI9\xd5\xdcWK\xef\x9dD|S\x1f+\x968\\\x1e\xa4\xf6\xff\x00\xe6\x9e"\xab\xaer9\x1d}\xf3\xff\x00\x14\xaf\x92\xc5\x98.\x0ex\xc6:\xfbR\xdbDd.\xcc\x95\x03\x8c\xf4\xfc\xa9\xd8\x83\'\xab\x00`\xef\x9d\xf3\xf4\xe6\x90\xd2\x03\x80\x0e\xf4\xd5\x10m\x1bP\x1e0\x061\xd3\x9e\xb4\x18@b\x19=<\x83\xee{\xd3\xe8`\x96f\t\x14L\xcd! "\x83\xbb\xfaS\x99\xf4\xeb\xcb\x7fL\x96\xf2\xc4\x1b\x07,\xb9\xc9\x1d\xb2jZ\xda\xcd,z\xc4LQH\x05\x82\xe4\x0f\x83L\xb5\xc4j\xfaL\x8a\x18\x8d\x81;\xd4u\xbe\x8bss\x1f\x9bmn\xa4\x10@\xdd\xf1\xce8\xefH5\x8c\xd1J\x12x\xde6>\x93\x91\x8c}3W\xcf\x07\xddC\t\xb8\xb2\x97\xd0\xd2?\x9b\x12\xb6\x0fQ\x86\x00\xfb\xf1\x9a\xbc\\i\xd6\xd7\xa8cx\x83\x83\xef\x8a\xd4\xf4\xdf\n\xc1\xd4\xec"\xb8\x82\xf0\xac\xa0\x90\xd1\x9c\x10\x18\x1c`\xe3q\x9e\xd5A{\xe2)z}\xec\x90\xcdo\x98\xf6*\xe0\xe0\xe0\xf7\xdf\x9a\xc2\x9dDE\x88C\x85^O\xf7\xad\x0bC\xf0\xd6\x95{cmup\xed,\x92\xa6\xe0\xaa\xdb@\x07\xa7Jc\xa8xq\x86\xb1\x05\x85\xb4\xaa\xe6d2\x10I;\x1789\xf8\xabv\x95\xe1\x18t\xa5]\x97\xd7M\x83\x90\x9b\xf0\x83\xff\x00j\xfb~u\'\xa0xv\xf5:\x85\xc1\x97\xa6\xc3q\x14M\xe5\xbf\x9a\xc3@m\x8eW\x9c\x9cT~\xb5\xd6\xedM\x94\x1eU\xfc\x90I(\x0e\xba\x14\xea+\xb8\xdf\xdbzG\xff\x00H\xe8R\x06\x1f\xb3H\xcf9I\x18s\xef\xd6\xaa\x1e!\xf0\x95\xa6\x97k5\xfd\xb3\xbf\x97\x19\x1edo\xce\x018\xc8?\x15v\xf1\x16\xa1q\xa4[\xc5%\xb9V\x91\xe4\x0b\xb6C\x81\x8cd\x9e+;\xd4\xf5mgTC\x1d\xc3\xc4\x90\x9ce#$\xe7\xeaO\xf6\xab_\x107@\xb5K\x8b&\xe9h.BeZ(\xd5B\xb3\r\x89#\x1f\xa5@\xe8C\xad\\I\x05\xd0\xea\x0cm\x8b\xe1\xd6W-\x90\x0e\xe0\x03\x9f\xd6\xab\x11\xa1\x93\x0c0\xaa\xc4\xf2:\x9f\x9a\xe8[~%g#\x07 \xe3\x19\xa5<\x89"*\x0bdq\x83\xde\x9c,-\xb0\xfa\xb2J\xe7\xa7\xe8k\xce1\x97\xd2c;rs\xef[\xc6ln\x18`\xd2V\xdau\xd5\xdd\xc2C\x04m3\x9e}\xff\x00Z\x7f\xa8\xf8sU\xb0\x8a9f\x8aE\xda\xcaVU\xc3\x05`r:t\xab_\x80\xcc{\xb5b\xc72\tUzr\x10/\xfc\xd6\x83/\x934R!\xc3+)VS\xdc\x1e\xa0\xd6\xef\xa3xZ\xcb\xa9t\xaf\xc4\x1b\xb7Y\xa5\xd6\x13\x04at\x9cn;\xf1X\xee\xab\xe2K\xab\x0e\xa4`[Txc\xd3\xac\x9c\xe5\xb5\x0c\xecx\x15\x97\xd8x\xc8\xc7i$z\x85\xbc\xbfxP@d\x19W\xc7q\xed\xf3T\x9b\xfb\xc9u+\xb9\xae\xde \x0c\xa4`\x0e@\x00`\x01\xfaT\x9d\xd5\xba\xdb\xdd]C\x9fLr2g\xaepi\x16\xb7M\xdb\x95\xc7\x18\xe35\x94\x9a\xef\xa9H\x05\xbd\xcd\xc7\x98\xb0\xb9\x188\xed\xb6\xe7\x198\xad\x15\xad\x9d\x8c\x0e\xd3\xc1\x16\x932\x83\x9e\xd8;\xe0\x0e\xd4\xe7@\xf0\xfa\xeb\x92\\\x06\x94\xc4\xb1\x15\x18\x0b\x92I\xf6\xcfj\x92\xbb\xf0u\xfd\xbb\x16\x88,\xf1\xaf \x03\x86\xfd\r<\xf0\xa5\xe4\x16\xd7\xb2[\xc8vI>\n\x13\xc6\xe2\xb9\xc8\xfa\x9c\xe4V\xb0\x90\xa3\xa6K\xae\xdcrke\xd1:7L\xea\xbd9\x1b\x07\xceVml\xad\x827\xdb \xed\xc5fz\xc7Z\xea=3\xa80\x04\x18J\xae\x85e\xd8\xed\xbe\x08\xde\xben{%2bT\x01\x91\x8e\xde9\x04qC@U[\xae\xe6^\xa0\xe3\x81V\x7f\x15I\x0cZ\xe5\xech\x07\x01\x0b\x11\xc7\xa8\x8ej\xb8$\x0f\x88\xcb\x00\xdc0\x07\xfek%u\x1f\xe1.\xae \x12k\xf2ed\r\xef\xa4\xe2\xb5V\xd3\x1b\xabh&+\xa7\xcd\x8d_O\xb6\xa1\x9aN\x15iF\xd1"\x01\xc0\xf5\x8e\xe3\xbd$\xf6\x8f\xeb\r\xb4\x9c\xe1\x88#\x03?J\xecC"\xc9\xb4\xb6I$\xf4\xcf\x1f\x95L\xe8:}\xae\xa3\xa94\x13\xb3\x80\xb1\xee\xf4\xf0O8\x1e\xf4\xab(\xday\xa1\x8a5*\xf28U\x0c\xd8\x00\x9a.e[h\xa5\x95\xcf\xa1\x17Q\xc0\xc9\xc0\xaa\xf4\x96\x92E\x1ce\xa21\xab\xae\xe4$p\xca\x0e8\xa6\xc56\xb7\xa4\xe4w\x157\xa9\xd95\x85\xdc\xf6\xd2\x87\x012Sw\xf2\xe7\xa8\xf85\x1e\xd16\xec\xf2A\xc6H\xa5\xdcf)\x19\x19\x182\x9c2\xb7 \x8e}\xa9p\xb8\x965p\xc1\x83\x8c\xa9\x1c\x10x\xa6\x8cdv\x1b\n\xf3\xd0|\xd4\x83\xd9j\xf6q;\xdc\xe9\xee\xa8A\xda\xdb\t\xc6}\xc8\xa8\xcb\xc9&\xd3\x9e\x0b\x80\xa6U\x8aegOu\x15\xa8\xe8>\'\xb5\xbeRb\x9bx+\xf8{\xa9\x1f\x1e\xff\x00\x152\xce\xee\x00\xfa&\xb8\x96<\xe0)P\x08\x07\xe4\x1ej\x07P\x96{uG\x8a\xdd$_\xe6\xc9#\xf4#\x8aC\xc3\xbe)\xb2\x92\xde\xda\xd9\x9c\xdb\xca0\xa4\x11\x85?J\xb3\xea\x9a~\x9d\xacB\xc9r\xa8\xcd\x8fD\xeb\x8d\xea{\x1c\xf7\x1f\x06\xb2\xcf\x11\xc5h\xba\x9b5\xba\x042\r\xee\x80`+\x1fo\xafZa\x1d\xd5\xd2\xe1R\xe9\xc0\x1c\x15\xdc@\xfaV\x82\xc7\xae\xcff\x86\xcatK\xd8p\x15[8:q\xdf9\xcf\xf5\xaa9\xfa\x14wo\x15\xed\xac\xcfk+z\x88\xc6pM \x92\x8bi\xddC\xa91HW\xe3\x83\x8e>\xb5\'\x14\xb1L\x0f\x99\x18\x04\xf4u\xe0\xe7\xdc\xe3\xadE\xb5\xaa\xbb\xb3\x05\x01\xb98\xa1.\x11T\x07\x8f\xe8\x7f\xf8\xa6\xed\xef\x19\x1b\x04\x80\t8\x07\x8a\xbb\x92\x00\xc3\xb9lnG5c\xb2\xb2[\x8dE`\x92\xe8\xec(J:\x8fS\x11\xdb\x9a\x9a\xbd\xb5\xd5\xf4\xd8L\xb6\xd2\xf9\xf0\xa7%O\x04\x0f\x9a\xa3Ct\xea\x00r\xdbI\xf47FS\xefVkO\x10_@\x9eT\xd8\xba\x8f\x1bD\xa3\xf1\x81\xec}\xea\xc5."d\x93Z\xbe\x0e\xe1\x90\x9dk\xb7loU\x17v\x97\x05\xd1\x93C\xa8\xc0h\xdc\x0c\x1f\x9f\xad:\xb1\xf1\x0c\x97\x13\x01sj\xb1\xaf\n\x19\xf9\x19\xf7\xad\x06\xcfV\x97N\x10\xc9\x0c\x89\x87\xe7j\x9c\xa3\x01\xfd\x8dc\xadqn\xb2\x98\x96@af\'g\xf2\xfcT\x96\x9fz\xb1j\x16\xd6\xa6vh\x89$F\xdc`\xf6\x00\xd5\xa7J\xeb\t\x0c <\xc6Tb\x06\xb7#P$\xf1\xf4\xaa^\xab\xd0\x96a\xe6\xc2\x9eYU-\xa0\x03\x82\x07\xf45\xf4\xf6\x9fx\x9a\x85\x9c7(\xa4\t\x06p{\x1ayY\xa6\x91\xe2\x03\xa54v\xd7\x11\xe2\xd9\xb9B:\xa9=\xabE\x82\xe2\x1b\xa8\x96XdWF\x1c\x10kQ\xb1\xddNEc\n\xb2\x9c0\xff\x00\x9a_5\xedsEr\xb9]\xe6\xbd\xaes^\x83E\x15\xed\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QExk\xda\xe6\x8a+\xc3^QP:\xf6\xbfi\xa1\xdb4\x92\x1d\xd2\x11\xe8A\xd7\xeah\xf79\xc0\x03$\xfbW@,B\x80I\'\x00\x0eI\xa7Z\xb6\xafg\xa3\xdb4\xf7\x0e\x06\x07\xa5GRk!>(]wR\x91\xae&TH\x88\x10Bx\\\x93\xd4\xfd*\xa1\xadkW\xda\xf5\xe3e\xcb\x03\xf8\x8fe\x1e\xc2\xa2\xa5\xb7H\x97\x02B\x8a:\xfb\x9a\xa7\xba\xea\x8c\x85\x85\xb8\x05W\x96?\xcc~>+Og\xd0U\xa2\xcd\xc3\x11+\x8d\x94o\xa4\x7f\x9a\xd4/uk+D\xf56F\xec*\xaf,\xed\xf1\xf5\xae\xc5\xac\x8a\x8d,\xd1\x0f>@\x0e\xdc\x7f\xa6\xbe\xd9\xf7\xf7\xac\xc7L\xd5\xe2\xb1\xd5\x92\xe2\xe2\x17\x9fb\x91\x1f}\xa7\x1dqS\x9a\xc7\x8b.\xf5\x1bf\xb5\xb7O!\x1cbIz6=\x85P\xb7Uy!\x94]\xbef|\xf9QF\xa4\xa2\x81\xb6K\x1e\xe7\xf6\xa9\xcb\xd1%\x8ah\x92\xde?F\xc6I\x98\xf3\xf0\x05U\xae\xf3{\xabj\x06\x04\xcd\xbf\x99\x81\xed\x909\xc7\xe7J"\x8bp\x00\xfe\x13\xf5\x03?\xe6\x99\xc4\xdeR\x05\x8eL(\xfcc\x9c\xe3\xe2\x9726\x00\n2:\x0c\xf3T\xe90\x8a-LK9\xdc\xb7\xd7\xdb\xe2\xb5\xcb\x11\x01S\xf9T\x00>\xde\xf4K2\xa8\xc7G\xe0\xf3\xd8SW\x90*\x82H\xdc{\xd2l$\x96B\xdc\xe5\xba\x83\xc7\xc7\xe9\\\xce\xa7\xc9\x1cn\xc6F{\x0f\x80j\xbay\xdd\x8eT\xe7\xd8{T\xb4@0?Zl\xaeK\xec\xceA\xc9\x1c\xff\x00zy\x9c*\x94^\xa2\x92\xb5\x8f\xcb\x04\x91\x96#?\x00R\x8c7:\xe1py \x1e\x87\x1d\xea\xb1\xa4T\xdc\xbe\xa7?\xb5H\xc6O\x1b\n\xe1\xe0PU\xa4 \xf3\xcfl\x0c\xfb\xf6\xa5\xe4\x829T\x85r\x13\x1cg\xb8\xf8\xa4.\x00\x8cF\xf2+7\x98:u\xc5u\xe60)\xe4\x8c\x93\xc7<\x11\x9a\xaf\xb9\xb8*\xc5\n\xf7\x19\x1d\xf0\x7f\xad-T\x90\x08o\xf1^m m\x11`tc\x81\xc0\x15x\xf0v\x83\xa6\xeb\x13]\x1b\xcf\xde\xc7o\n\x9f$\x12\x03\x168\x04\x91\xcf\xe9T\xa9\x19\xd4\x82\xd8V\'\xf0\xfb\x1a\xd3~\xce\xe4\xb6\xb7\xd3\xb5\x19\xb3\xbaY.\x826\x7f\x95\x17\x81\xfa\x92j\xe7\xc3\x8b\x0b\xf5\x08\xff\x00\x11\xa4\xc6\x81\xd9\x83\xf1\xb0\xdbo\xadS\xf5\xd9\xa6\x8b\xa6\xccaf\x121UR\x9c\xeeFw\xfaU\xc2\xc4\xd8i1\xdb\xe9\xb1\x04\x85R2\xc9\x1ey\xc1bI9\xe4\xf3\xde\x9c\xea\x1a\x95\x8d\x94k\xe6\xddG\x19n\xec\xd5I\xd4<9w\xe2}~k\xf7\x93\xc9\xb5\x89Dp\xb9\x1c\xb6:\x95\x1cq\x93\xd6\xbd\xd7\xbc\x1d\x16\x9d\xa5\xbd\xec7\xd23A\x83 \x93\x03*N8>\xe2\xb5m\xd5<B\xb6\x17\xb2Z\xf4\xa4kx\x03yS;\x04&4\xfe`\x9d\xc68\xac\x8aXty.\xed\x12\xe3\xa8\xb7\xe2& \xc9\x18R\xdf\xc4~\xc5\xbd\xf3T\xdf\x12\\\xda\xeaW\xc5\xad\x97(\xcb\xb5\x9c\x0f\xc6\xde\xf4\x86\x99\xaakz}\xb9\x82\rM\x92\x14RV6\x01\xc2\xaf\xb0\'\xa0\xa6\xe0+\xb1a\x1f\x05\x86\xd0\t9\xcf\xb7\xcd8\x9a\x13n\xac\xa67By\xc1R\t?C\xf1^^o\xefL\xf7\x17^{#\xb1b\xcd\x19)\xbbv\xda\xbd\x04Z\xdb,0\xdb\xb4J\xea\xa0\x05\x0e\x03q\xf5\xa6\x97O{\xa8HI\x9d\xa4b\xc3/!\xec=\xbe\x9d\xaa\x7fA\xd75\xcd\x10%\xbc\x98\xb9\xb5Pp\xb9\xc3\xa8\xcf@{\x8f\x8ak\x0ch6n\'\xd4rG\xc7\xc5K\x05\x82\x1c\xb7\x00\xa8\xcf?O\xee)\xcb\t.\x96o:+\x93\x1c\x8a\xde\xa9\x03z\xb7\xdf|\xf3\xf7\xa6\xee\x92\xdeX\xbc\x99-\xd5\xd0\x8d\x97\x1bm\xb6\xde\xd5l\x8f\xc6\xfan\x06\xf5\xb8\x8d\x8fc\x17\xf9\xe9P\xfa\xef\x8a\x1bP\x89-b\x89\xa3\x8fpf/\xf8\xdb\x1f\x1d1T\xc7\x95\xae\xa7\x91\xb0v\xa9\xc2\x00?\xbf\xcdZ\xb4\xdf\x06\xea\x9a\x80Y\x1b\xfe\x95\x18d\x99\x07\xab\x1f\x0b\xdb\xf3\xabO\xf5\x7f\x12\xf5\x95\x9a\xc6\xd7\\\xca\xe3\r\xe5\xae\tS\xeeN\xc3?j\xacn\x9b\xd0\xfa[Gu9X\x8a\xee\xba\xdb8?\x00sU\xd5\xda\xd9?\xc2?\x8a\xb9h\xa4\xe4d\x8d\xdd[\xb0\x03\xdf\x15m\xd6\xbc*tk1p/L\xcb\x1b(p\xc0\x0e\x0f\x1c\x1f\xefU\xb32\xb88\xfc#\x00\xf5#\xebT\x97\xdd:n\x95!\xb7\xbd\x80E(@\xc1r\x0eCg}\xb6\xc7j\xb3\xb5\xbd\x82\xfa!5\xb4\x9ede\x8a\xea\xc1\x1b\x8f\xad2*\xe4\x8fR\xe3\x92X\x8fz\xb8x\n\xf6\x08\x93R\x8eK\x94BgV\xda\xdf\x8b\x01q\x9c\xf7\x15\\\x92(\xe4\x85\x9b \xb1\x039\x078\xf6\xa8\xdf\xb9\xda+\x9c\xa8-\xdc\x13\x9aWO\xea\x13t\xbb\xab{\x88t\xb1\x1b\x80X\xe0\xe7lm\\\xbc\xb5\x8f\xa8Z\xcbn\xecT67\x038\xc1\xcfz\xd3\xef\xb5\xb9\xf5\xc9\xa5\xd2\xf4\xceb \xf9\xf3\x83\xe9 u\x00\xfbv\'\xf4\xaec\xf0\x9d\x84\x11\x1f1\xa4w+\xc9\x07h\x19\xf6\x14\xff\x00\xc16\xd1\xae\x94\xd7\x05\x02\x99\xa5lg\x9fBzG\xf65h\x94\xda\xabd\xb8f=\x17\xdc\xd7\xaaY\xf4\x98\xba\x95\x9c\x1dK\xaa\xb4s\xdcO\x1e\xa4\x0f\xf9"F\xe1T\x1a\xc0\xddu\t,n\xa5\xb1\xb0V\x8a(_\x0eW\xf3;\x8eK\x1a\xaf\xa6\xb7\xa7[I\x16\x9b5\xe4p\xca\xb1&\xd8\x9c\x81\x95\xe81\x9e\x0fJz\xf6\x1a=\xcf\xaek\x1by3\xd4\xed\x00\x9f\xd2\xa0o<\x01\xa7k7\xd3\xdf\xdf4\xd2\xcb.\x02\x80\xdbU\x14t\x00\n\xadk\x1e\n\xd4\xb4\xc8\xa4\x97M\xd7/V\x08\xc7\xaa\x16\x94\x92\xa0\x7f)\xa8ww\x1dj\xca\x19^\xe3\xa5\xc7sl\x84\x94\r\x82B\x0e\t\x1b\xf6\xa7\xa0\xb7\xe9w2\xc6\xb0uG\x82v\x03Y\xc1\x0b\xa8\xf3\x820y\xa7\xde(\xd24kKT\x9a\xd7\xf7\x0edU\xd9\xbbpa\xf4>\xd5P\xd1\xf5;\xcd\x1a\xe6G\x81\x04\xb1JG\x9b\x11l\x1d\xc3\xf8\x94\xd3hl\x99\x97}\xcd\xdc\xd2\x16\xe0\xbb9\'\x06\xa4b\xb3X}`\x80\x87\xf8\x98\xf5\xc0\xf9\xaf=\x92\xfe[\xbe\xa1\xf8\xab+x\xad6\x18\x11v#\xf9\xb1\xb0\xde\xb6\xb0\xda\xc7\x05\x91\xb5\xb9\xb8k\xac\xe7%\xf3\xbf\xc6y\xabsx\xd2\xe9\x91\xa3\x87N*\xed\xc7\x99#\x83\xb3\xf2^\xb5N1\xa1%\x8e\xf7f%\xa4c\xd4\xe4\xff\x00\x9a\x9c\xd1\xec\xed\xafu\x08\xad\xe4\x9b\xd2\xead\xc8\xe0\x95\x1f\xc2?^\xb5\xa6\xa6\x89`\x8a\x11maP\x06\x07\x00\xf1\xf5\xadU\xa7G\xeb\x1e(\x87\xcd\xb8\xea\x11\xe9\x85\x8a) \x12\t\xc18\x03\x1f\xadP\xdc\xf5\x1e\x9b\xe1\xf9<\xa8\xad\x1c<\xa03i\'\x8e\x06I\xfe\x95\x88\xca\x91\xa9\x80*\x9d\xa0\x1e@\xf6\xf7\xad\x0f\xc3v\x1aU\xd6\x93\x1c\xfeDW\x13\xc8\xcd\xbc7>^\t\x18\xc7j\x97\xd4\xbc?\xa1D\x86k\xb2\xb0\xae?\x85\xb6\n\xccV\xd5#\x99\xe4\xb3\xb9\x96\x00d8h\xd8\xa9`\x0fR>\x95\x17\xf0G\xc2\xbdL=\xd4V\xd7\x86H\xd9Da\x86\xa5\x1bz\xb0A\xc7\xde\xa4~-:\xfd\x89X&\x9e\xd8\xa3\x82\\\xa9\xc1\xe7\xd3\x90w\xad)\xb4m4\xa9\xdfcn\x14\x0f\xe5\xc6\x05Qu\xdb]"\xdcDlg\x124\x8eVD\r\xb8.;\x8e\xb4\xca\xe2\x1b\xab\xd5T\x9fS\xba\x91\t\xe5\x19\xf8?8\x14\x9cV\x11&\xd4\x8dq\xb4\xf3\xcf\xfeu\xa8]c\xab\xa5\xf8\x11A\xd2b\x8b\xb7\x98p\\g\xfd\xbaG\xb5?ae%\xa3\x07\x97\xa9I!\x07t\x19\xd2~\xba\xa98\xd6B\xa4\x93\xee\x00\xf8\xae\x8cb@0\x9b\x97\'\x18\x1e\xdd\xf3Nd1\xa4d\x12@\xe8G\xc7\xc5u\xb0\xaa\x1cc\xa6F;\xfe\x95N\x11\x08 e\x80\\\xb6\xf9?\xf8j\xcf\xcc<\xe3\x19;S?+&1\xb8\x86\xc9%H9\n>Mx\xc8\xcc\xaa1\x92\xc7\x19\x1d\x00\xa7\xdb\x03:\xabq\xecs^\x95\\\xb2\xe0\x928\xc0\xfaR\xda\x00\xca\x06p3\x83\xfa\x0f|\xd1\xe7\x10G\xd34\x98\x88\x0c\x1d\xfd\x14\x1c\x0e\xa7\x8a\xe2H\xfdYe\x07o \xfb\xe7\xe9J\xa4d(8\xeb\x9c\x12=\xab\xb0\x1b\x7f\xa9q\x83\xd4\x7f\xc5\x18V\xc6P\x8c\x90Oq\xbf\x19\xa6\xf5\x90I\xd5\x9cU\xaf\xc0\xe29\x97P\x9c.$I\x84c\xdc.\xdc\xff\x00SW\xd9`Yctt\x0e\x8c=@\xf3\x91Y\x1e\x9b|\xfa&\xa1\xe7\xc6\x0f\x91)U\xb8\x1d\xb1\xd9\xb8\xee3Z&\xa7\xafAide\x89\xd1\xe4a\xb65\r\xc3\x13\xd3\xf2\x1d\xeb\xd2\xbc9\xd5\xec \xe8\xf2Cu"\xa3\xdb\x062l=a\x89!\x94w\xcf\x15\x88\xeb\xbd>\xf2^\xa9\x1c\xb0\xa9e\x9c\xaf\x96s\xf9H\x00`\xfbb\xb3K\xbbt\x82\xf6\xea\x11\x9f\xdd\xca\xc0\x1c\xf3\xe9<\x1c\xfb\x8ay\x16\xad\xabG\x1e\x13P\x90\xa8\x18\xf5\x05f\xfdq\x9ag\x1d\xa5\xd5\xdc\xdbc\xcc\xb3\xc9\xb9\x98\x8e\xe4\x9c\x96\'\xb0\xab\xbe\x99\xe1\x95\x8c\x03vD\xae\xdd\x00\xc8\x03?^\xa6\xb2\xdd?\xa7\xf5+\xeb\x89\x1a\xcdd\x81\x0b~p\xc5@\x07p\xa4\x8eH\xcf\x15\xa2\xbf\xbc\xb2\xb4\x861t\xc9+\x05\x18R\xa1\x89\xc7$\x03\xc5U|?\xaa&\x9d\xe2\x07\x9a\xfeB\x12\xe6\x0f,\xca\xc7;[p#\'\xb0=+]{\x98\x12?1\xa6@\x98\xfcY\x18\xacgQ\x10\xc5ys\x14xh\xc4\x8c\xab\xbb\x9e\xf8\xc510\xa3\x80<\xa0P\x95\xca\x9e\x98\x1f\x15g\xd2<Es\xd0\xe3\xb9\xb30$\xea\xb2\xb9S\xab\x041\xe7\x80r3P\xba\x8fC\xb7\xea\xd2Au\xe74\x04\xc6\xa1\x80PA\x03\x8c\x0c\x8c\x1a\xb0x\x9fU\x8bU\xb9\x8a(\x01h\xe1\xcf\xef;1oo|b\xab[\x82\x01\x91\xc8\xc8\x07\xfei\xd4\x8a\xdb\x00$\x00\x06\x07\xfd\xa9\x16\xd8\xa0\x12I\xdb\x9c\xd6{\xa8\\\xdc_\xdd\xcdw1]nFp8\xc7\x00\x0f\x8csWvpCim\x15\xbc@\xe8\x8c`o\x92s\xb9\'\xebM$R\xfeYV*88\x00d\x93\xda\x82\xad\xb8\xa8$\xed\xe3\xa7Z]T\x8eHm\xa0\xfe\xb5\xcb\xee\x8d\x8b\x0c\x16=\x8f\x18\xf9\xaa\xf2\xa5\xc0b8;\xe2\xa7\x06\xec1\xf1Dw\x17Ze\xccw\x96\xca\xcc\xc3\x89P\x1f\xf5\x13\xfeGj\xb3\xcd\xe3\x1bY\xad\xf6\xdbF\xc9p\xdc\x02\xc0\xf0O\xf3\x03\xedU\x9d\xcd\x96\x0c\t\xe0d\xfd}\xb1\\\xc7\x1b\x92\xcb\x9cq\x9c\xe3\xfa\xd4\x9b{\xeb\xfbbR\xce\xe1\xa3G8u\xc0;\xf1\x91\x9e\x0f\xc8\xa8\x97\x16V\x97L\x92O\x10fL`\x83\x8c\x8fc\xee+\xc4\x87\xcc\x96w\x90\xe4\x93\xb8\x93\xdf\xe6\xb8\xda\x10\xf6\xf4\x9c\x83\xdf\x14\xa8VVd\x94n\x00\x00\xa4\xf5=\xbf#^\x94\xc9]\xd8\x19\xe9\x8e\x07\xd3\x1e\xf4\x9d$\x004\xe1\x83\x1c\xe7s\xcfsR\xb5o\xce\xd8\x18\xc7\x1fj\xe3\xf7S\xb6\xd9\x01\xf4\xe0\x82\x0e9\x1e\xc7\xdf\xe6\xa5\r\xd6\xab\x14F4\xd6n\x0cDp\x0e\xd2\xc0{n \x91\x8a\xe3N\xd2.\xb5Gq\x1ck\xe5\x83\x87v\xe0r:|\xd4\x95\xfe\x89u\xa7\xc6\x8e\xe8\xb2)`2\xbc\x8f\xcf=*\xd6\xd2\xcf\xa8\x9bI.\xa3\xb7\x95c \x83*\x96\\\x81\xb7nEW\xdc\\\xd8\x1b\x88\xed\xa4\x9a&\x93 \x88\xdb\r\x83\xf1\x9e\rR\xee\xa0w&C+1\x04\xe4\x9fQ?S\xefM\xb2\xa5B\xb0\xc9\x1dH\xeb\xc5L\\\r\xd2zT\x80O\'\xe6\x99}\xd5\x15\x97\x8cd\xe4U$\x9a\xf2@\xc1\xc9\xc3\x1fz\xb6F\x1aFv\xdbj\xe2\x04\x8f\x1bH$\x0f\xc2y\x1c\xd4\x96\x95\xa7j\x13\xde\xc3saq\x1a\xbd\xb3\x00\xc1\xc9\x00\xa9\xe4\xa1\xc6z\xd3\x18\x91\x83\xbe\x13!OQ\xef\xda\xae>\x0b\xf2\x12\xfe\xfa7\xf4\xc8\xc1\x1b\x04\xf5\x00`\xfe\x86\xac\xba4\x0bw\x7fa\x04\x87\xcbG\x97\x1a\x94\x95#\x1b\x8d\xfd\xf26\xaa\xee\xad3\xdb\xd8^J\x8a\x1d\x96?\xcaF\xa0s\xb1\xc8\xfb\xd5\xb7Y\xd2l\xb5{\x14\xf3\xa2\xdb \x07\x0c?\x12\x13\xd7\x15\x8aK\x08\xb6\x9ah\xc9\xdcbvL\x81\xc7\xa6\xb7\xdb\xc1\xe6#\xa6\xd2\x14\xa9\xcb\x0e\xa3>\xdf5\x85\xcbf\xcb,\xd1\xf9\xb9\xd9+\x82s\xc9\xc1\xefZ\xbf\x1bG\x1a=\x9c\x89\x082\x10\xca\xd2p[\x00c#\xbf\xd6\xb3\xbe\x11\x96F\x8e\xea6\x94\xe8R\xa5c\xe4.s\x9c\x1aV\xd3O\xba\xd4U\x96\x0b\x7f5B\xfa\xfb\x0ezu\xe9Pw~\x17\xb8\xb1\xb9i\x8c2\xda\x12\xde\x96\xe5A\xfc\xc1\xad\x1f\xc2\xfa\xbd\xb6\x9b\xe7Z\xde\x00\x894\xbb\xa3\x94\x9e\t#\x18$\xf7\xf6\xab\xc5\xccv\x97PH\x85\xa3\x96\'\\2\x9e\x84T>\x97\xe1\xae\x9d\xd5\xbazM\x1fPd\xba\xdfZ\x1c`\x10v\x04s\x8f\x9a\x91\xd4z\xf5\xefN\xbeh\xa4\xb0\rlH\xd2\xe39#\xb9\xcf\x1fj\xa2xcI\xd35\x1d#\xef\x13\xda\xa4\xd2\xf9\xae\xae[%\x86\xd3\x81\xde\xa2\xfcC\xe1\x84\xb5\x8eK\xcb"Li\xcb\xc4NY\x7f\xdc\x0fq\xef\xdcS\x98\xaeG\x86\xf5I\x8d\xb1-l\xe4y\x91\x03\x92>G\xc8\xfe\xb5y\x8a[\rf\xd9\xda\t\x91\x83\xa1\x05G|\x8c\x1e\x0fC\xf1S,#\xb4\xba\x81\xbat\xeb\n^\xdb\xe5\x0e0\x0b\x15\xe1\xd0\xf7\xf9\x15\x1a\xe6\xe2\xf2\xce\xe5ocy^\xd2l0\x07$\x00\x7f\x94\x8e\xc7\xd8\xd6\x18\xb2\x89\x01\x12{\xe3\x9aBh\xcaG\xbfr\x95\xce0\x7f\x15:\x96\xd9\xe0\x9ex\xdd@\xd8\xec\xa7\x1f\x07\x14\x83*\x80#9 \x9c\x8c\xf4\xc5g\xd2\xeb\xd4\xc9(\xc3\x8c\x8c\xfc\xf1\xbdkt\x82\x01S\x9584\xdc\xb32\xa9\x1f\x96G\x14\xbc\x13I\x03\x0c\x1e\xbd\x8fC\xff\x00zIc`X\tIC\xf8W\xda\xbdB\xea\xa67PA\x1c\xb5M\x82\xf1\xd7\x00\x9d\xc7\x04So\x189\xdboj\x9b\x89b\xb8\x8d\x83\xb2\xb79!\x86\x1b\xf2#\xbdG\xcc\xb1G*H\xbb\x89\x89\x81\x00\xf0x\xa4b\x94DB`\xe0\x1e\xb9\xa5\xf7<\xdb\xd00c\x80pO\xf4\xcdNk\x98\xaec(T\t1\x8f}\xea7\x94Q\x89\xcf\xa4\xd6\x95k{i\xae\xd8\r\xac\xa1\x94\x0e\xbc\x15#\xdf\x1f\xde\x9c\xe9\xba\xa6\xa7\xa0O\xfb\xa6i-\xba\xbcG\x9c}=\xc5e67W:U\xcf\x9d\x13a\x7f\x89{\x11\xedV\xf95\xd8%\x826\x89\xc0~\xb8=\xbd\xea\xeb\xa7x\x84\r\x11]\xe5&\x07N\xb06\x7fo\xfe+-y\xd0\xca;\xacJ$\x82C\x9d\'\x95&\xbe\x85\xd2u\x9b-b\xdde\xb7\x90\x13\x8fRg\x955-_8[\xdf\xcfo$w\xdal\xdeL\xc8r\xe9\xfc\x0e;\xf1Z^\x9f\xf6\x85\xa7\xdc\xc6\x9et\x0c\x92\x00\x04\x98#\x01\xab[\x15\xd4R\x95\x1a\x95Y\xb8\x04\xe07\xd3?\xd2\xb2w}:{\\\xb0Vd\x1c\xed\xba\xfd\x7f\xcdh\x95\xe85\x1f\xa7\xeaV\xba\x94>d\x12\x03\x8f\xc4\xbd\xc1\xf9\xa7\xf5$\x82\x0e\x08\xaa\xe0A\xe2\xba\xae\xab\x81^\xd7+\xb5\xd5\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x15\xe1\xaeM{QZ\xb6\xa9o\xa4\xdaI<\xcc2\x07\xa5{\x93G4}\xb3M5\xedv\xdbC\xb4id`d#\xd0\x9e\xe6\xbeu\xd5\xb5;\xedn\xf5\xd9\xa6oY\xfc]\x80\xa7:\xe6\xaf{\xae_3\xbbeY\xba\x7f(\xa9=\x1f\xc3\xb3\xeaN\xab\x19\xf2\xad\xd0\xfe\xf6C\xd4\xfc\x0f\x9a\xa7\xbb\x9aK\xc70@\t@pH\xd8\xb1\xff\x00\x15\xaa\xb0\xb4\x87\xa6\xc5\xf8\x9b\x92\xa2B23\xb8A\xfej\x06!m\x02\x18\xa2\xdc\xc5[\xd4\xc7\xdf\xde\x91\x94y\xacI \x85\xc1\xeb\x8c|\xd6\x81\xad\xe9:>\x97\xa4\xdd\xcb\xb1\x03F\xb9W\xc9\xce\xe1\xdb\xe75\x9a-\xc8\xb8\x85H@\xaa\x06H\xce2j\x8e\xff\x00\xff\x00J\xe2\x17t-\xa0\x10\xabW\xfd2t\xbd\x8d\xa6\x8d$\n\x1b\x05\x9f\xbdx\xcc\x031\x8dr3\xd4S\x7f[\xe0\x12\xdb1\x92;\x9a\xe5\xa4\x92V(=9\x19\xdc\x07\x03\xe3\xe6\x95\x8c<k\xb5X\x93\xdb<\xd5\x0b\xcb\xa8\x92s\x8c\xfe\xf5~\xa9\xa4\x0e3K\x08\xd2\x14,Pn\xea~\x0fQK\xdai:\xbe\xa3\x0c\x93\xc7nY\x07\x00\xee\x00\x13\xdc\x00z\xd26\xf6\xf2\xcfq\x04\x01\xbf\xd4eB:\xe3\'\x93W\xadcX\xb4\xd1\xad>\xedm\xfe\xb9\x8fd\x08\xbdTt\xdc\xdf\xf9\xc9\xa6KBU\xdege\x89N\x00\x04\x02MG\x9ei\xa3h\xa2\x81\x15\xe5\x90\xe7\'$\x00+?U\x80\xb2\x80\xa3\x7f;\x89\xed\x83\xd2\x91\x95\x83~\xe5q\x8d\xbc\x8c\x1cW6\xf1\x88\xd5Y\xb0N\t\xe7\xe6\xbdU&Gg~z\xe7\xb1\x15K-\xc9\xf2\xff\x00(RF\xf8\xec1V\x8a\xa0\x13\xb98\xa4\xca\x05\xe0\x82}=3\xd7\xb58\xf2\x1eE\x04\x05\x03\xa1\xf8\x1d\xff\x00*Llvo\xc5\xc2d\x9c\x1c\n\xf4>\xc4,Wv\x07\\\xf1\xf1UH\xe1\xa4l\xfeP\t\xcf\xd3\x9a{\x07\x03\x1c\xd2\x8f\tm\xa1\xd5p\x9c\x0c\x1c\x0f\xca\xbd\x10.\xec\x13\x18\xe4\xe1{\xd2\x96\xee[\xcc\xdc\x03`\x06\x1bM\x12\xc2\xa1\xc3\xa1l\x92r:\x91\xf2*\x1c\xd2\t\xa4f\x03V[|\xf3\xce)@\x15\x18\xe3ji*\x92\xe06\x1c\x1e\xf8\xe8j\xf3\xe0\x8f\x0f}\xe1\xe4\xbay\xc8\xb7\x8eO\\A\x8a\xf9\x92\x01\x91\xbb\x1f\xc3\xcf>\xf5N\\r6\x93\xc7\x04S\x9d:MJ\xd2YM\xb5\xeb\xc2$>\xa5\xe0\x82}\xc05u\xd3\xef\xedl$\x8a[\x9bar\x81\x8eP\x9eOny\xde\xab\xef\xed\xae.\xad\xa5\x8a\t\xc4.\xc3\x1a\xc8\xe0w\xe3\x8a\xfa\t\xee\xac\xec\xe2g\x96h\xd1Tr\xcc@\x00~u\x98\xf8\xa7\xc4\x9f\xb6\xa3\x16\xb6\xc5\xbe\xe8\x8e\xa5\x9cp%=\x87\xfe\xd1\xfdMU\x9d\xa4,\xcd3\xbd\xc4\x84\x9c4\x8c\\\xe7\xe0\x1e)\xa5\xd4\xf9C\xb0\x1c\xb2\x8d\xc3\xe4qS\xfa\xc7\x8d.\xfa\xad\xbb\xda\xc3\x10\xb6\x85\xc1WQ\xbb0\xf6\xce\xdfqU\x1d+\xc36\xdd>u\xb8\x92C4\xaar\xa4\x8c*\x9f|{\xd6\x93\xe1\x1f\x0f\x80\xa9\xa9\\(%\xf9\xb7B?\x08\xe9\xbf\xea{W^:\xb1\xdd\x1e\x9ft\t\x1e[\x18\xca\x8e\xe1\xb9\xcf\xe5\x8a\xbc\xe9\xe3\xfe\x8a\xd4\xace\x07\x92\x98R1\x8fH\xe3\x14\xad\xc5\x95\xb5\xea\x84\xb9\x89e\xc7@FB\xf6\xad\xd4\x9d\x02\xd3\xff\x00\xa7\x1f\xa6[i\xd5"+y\x8d\x9c\x192\x1bQ\xef\xda\xb2k\xd6n\x7f\xd6\xc5\xf4\xe5\x8a\xc6\xcc\xa1\x07d\xdci\x15\x84\xf0Ux \x81\x8d\xb8\xc7\x19\xeb\xf5\xaf5\x13\xe5XI\x83\x89y\x1c\xf3\x90j~\xfa\xd2\xdd5\x8b\xcb;u\xccQ2\xf2;\x1cd\x8c\xfcU[R\xba\x8eiQw\x05\t.\xc4@F\t\x1f=\xeb\xc8\xa5\xb6k_\xc4\t\x19Y\xcb48\x03l\xa1\xc1 \xfcb\xbd"\tD\xfeK\xa8!J\xac\x98<\xe1\x86FE^\xfc\'\xa4Yi\xb6p^LVI\xda0GuL\xfb{\x9f\x9a\x96\xd4\xfcYi`\xa4\xbc\xa1}\x94rO\xd0\n\xcaA\xd6\xa4\xb7H \xb8hc=\x02\xe0\x10\t\xf7\xebJ[h\xcbnD\xb3L\xd28\xea\xccwd|\x9a\xb6_\x11\xdd[Y\xc7mel\xb6\xe8\xab\xb9\x1f\xcc{\xb1\'\x15U\'E\x86\xe2\xeeK\x9b\xdb\x9f5\x99\x8e\x95\xf6\x1d\x80\xf6\xa9\x8dC^\xbf\xf1\x04~_\x96\xc9m\x9c\x84\xe3s\x11\xc8\xcf\xd3\xda\x9b\xad\xbb\xc4\x98P1\xdf\'\xfaS\xb5TDa\x80\xbc\xe1v\xfb\x9f\xadp\xc1\xb9\x0c\xd8\x1b=\xea\x86i\xa6\xb9\x91\xae.ey\xa4a\x8dD\xfeQ\xed\xbf\x02\xac\xa3\x11B\x82("X\xe3\x07!G\x7f\x9f\xad3x\xb1\xbdC\x9fW\x18\xeck\x8f\xba\xef\x04\x05\x0b\xd4\xb6:\xe4\xf7\xc7\xcd?\x883\x1c\x90\x08\xceA\x1d:\xf4\xa7\x89\x1a\xb0\x90m \x93\x93\xeeq\xed\x8e\xb4\x9bkq+dq\x83\x859\x03m\xe9m9O\xaf\xbd5\xd3\xb5MgM\x80\xda\xc6\x90\xb4\x01HWb\xdb\xb9>\xc3\x8aR\x0b\xcb\xdb-B+\xd7\x91\xeeX\xa9I76H\x0cA\xf4\xf6\x18\xc7JVa\x14\xca\x06\n\xe7\x93\xcf\'\xb78\xaep\xaa\xc1\xc9c\xb7\x00\x01\xd3\xff\x00\x9a\xb03\\G\xe5\xaa\xddHV"\xa6/Q*\xb8\xdf \x1fj\x8b\xa6\x0627\xe1\x904\xa0\x896\xdd\xb3\xf3V\xa5\xf1s<k\x8bY\xc6x\x19\xe2\xa1u-v\xfa\xe67D\x88F\xa7 \x92\xdb\x98\x83\xc7\x18\xe9L\xe4\x9bjc\xf0\x92;\xf5\xc7Jh\x0bHT\xb1\xc6s\xc8\x00\x7f\xe1\xa97\xdd_\xa8]D \x92\xf2F,\xb8$\x006\xe2\xa3[\xf4\xeb(_\xcc[U\\\x1d\xb2I\xa6\xf0\x81\x95\x04\x1e\x01\x19\xcf\x1fZ|\xb3aB\x14\xc0\x1dry?#\xfe)\xa8\x1bX\r\xf9RN\x01\xc6rk\xb4r]\xd4)\'\x8eH\xef\xf3T\xf6\xce\xd0iU|d\xe3\x8d\xce\xdcU\x84\x809\xc9\xdf\x1b\xf3]\x18\xe5Y\xe1\xb9\x82S\x14\xc9\xddH8\xc8\xe7\x83R\xc3\\\xd76\x8f\xfa\xd8\xc0\xc7Q\x12\x83\x9f\xce\x98\xb0b\xbc\x8cc\x9a\xf0FN\xd0J\xfaW\x18?<\xd5\xacw7P\x19\x04\x17\x13E\xaf\x04\x88\xe4d\x04\x9d\xb3\xb6=\xaa4\x91\xc30_:\x18\xa4\xd3\xb0,\xa1\x88\x1e\xdb\xd7\x93\xc9=\xd4\xad%\xcc\xcdp\xd9\x1b\x0c\x9d\x87\xc0\xe8?*\xe0\xc6\xac\x00P\xdf\x078\xa5\xb7a\x86\xe4\x05\xb1\x81N\x13j\x84$\x92\xbdI\xf9\xa6\xc2\t\xa4b\xed\xa8\x96\xcb3\x0c\x9c\x93\xdc\x9a\xee\xbf-T*\xe0\x0e\x00\xd8}\x80\xa6Q+\x80\x18\x9c\x8cdc\xfe\xf4\xb9B\xea\xac\x15T\x9c\x06o\xa5.\xd1$AX\x12\xaa\xde\xc3\xfaW%\xc2\x93\x81\xc7a\xfd\xff\x00ZxF#\x05\\\xe3\xdcs\xf7\xf7\xc5$\xc8\\\xe5G\xf6\xa6\x12\x02\x031A\x8f\x83\xd7\xb7\x14\xae\xc0\x02\xb0\x1b\x81\x07q\x1c\x10GN=\xa9fR\xe4\xf2\xa78;O\xc58\x85\x93\xa3\x0e\xdc\x13H\x8e(\xcb\xe0\x10\xa1\xb8f\xf7\xcdu\xa4!A\xc6q\xc8\x14\x8d\x9e\x9fu{#\x04\x8c:\x8f\xe3\xc8\x00}I\xab\n\xf8b\xe9\x90\xe6XCg\x8eI\xfe\xb8\xa8\xfb\x0b\xdb\x9d\n\xe1\xe4\x8dE\xc5\xb4\x87/\x18\xe1\x80\xf7_\xf8\xad\x02\xd7X\xd2/#W\x8e\xfe\x1c\x11\x9d\xac\xc1X|\x10pEj\xba\x0fN\xe8\xf7\x11\xc9\x15\xe4\xa5nA:\x92G\n\n\xf6d=\xc7\xf4\xaa\x1e\xad}\xd4\xa0uh"\r\t\xc6\x97U-\xbfp\xc3\xb5g\x9a\x86\x99yd\xd1+\xfa=\\\x1e\x180\xee2\x7f\xf9\xa6L\x17\x078\x1b\x98\x1c\xe7\x8a\xb8\xf8\x9bV\xb0\xb8\xb7\x8a\xde\xded\x96E\x983\x15\xf5\x05\x00\x1e\xe3\xbdSe\xda\xf27\x1b\xb0r\x07o\xd6\xab\xba\xd5\xbd\x95\xa5\xdc\xa9i:\xcb\x1f\xa4\x03\xa8\x1d\xc8\xdcd{T\xde\x9b=\xcd\xc5\xacR\\Bcs\x9c\x8cc#<\xef\xef]\xed\x1eQ\xd8F\xe3\xee:\xe2\x9a\xac1"\x82\xb1(\x93\xaf\x03\xdc\xf3\xc9\xa5\xc6$PpJ\xe7\xd4z~\xb4\xab\xc1#\xac\x9e[lb\xb8R\xdd\xb1\xd3\xf4\xaa\xf3\x1a\xcc#eP\xd8]\x80\xdf\x1f#\xe6\xa7\x07\xd1\xb1ld\xef\xff\x005d\xf0c\xc5"_\xab\xb2\x9b\x85\x98eI\xf5\x14\xc7\x18\xf8\xcej\xc3\xac\xebv\xbaL,\xce\xcagpD0\x83\x92O\xb9\xf6\x02\xb3\x17\xb4q$s4\x8d\xe7\xa0\x1f\xbdS\xb1\xb7w\xe4v\xa7\x1ftDfw\x91\xd9\xdc\x8d\xce\xe7s}sZk~\xbf{g\xd3\x8d\x94\x16\xea\x1e<\x81p\xed\xc0bH%q\xf9\xbe\xf8\xaa[\xae\x8dku\xd4\r\xd4\xb7\x0c\xc8\xd8& ;\x80\x063\xed\xf6\xa8\xf9\xadWPI\x8c\x84\x9f;\x92\x01+\x8c\x9c\x93\x91\xd2\x9eG\x19U\x1eP\\\x1e9=\xc7\xcd(\xe5p~\xa1\x08\xed\x9fsK\x18\xc4\xc3o\x19\x03\xd4>:U\nF\xa5\xb6:\x9f\x9c\x83\x82I\xfa\xd5\xcbJt\x80v_n\xc2\x98\x95ee*\x99\xe0\x8c\xfc\xf5\xfc\xeb\x82\xbc\x80\x17o#\x808\xfa\xfd*F8\x8ce\x88S\xeb\xeb\xf9\xf5?Z\xf7\x04\x9c\xb0 \xb1=>\x0fZ\xe8\xb6\x04rFNq\x8e\x00\xdb\x9f\x9a\xe7\x9d\x83\xb0\xce\xdc\xe6\x99\x88B\x16P\xa3\xdf$\xf0i\xa3\xc3"\x89\x98\xc5\xbbkr\xc0\x92jY!\xf57\x1d\xf9^\x80\xfc\xfc\xd3\x9d2\xdf\xef\xfa\x82\xc3\xb8\x81\xb0\x92F8U\xe0\x90}\xcfJr+A;\xc7\x00\x04<\x8eU1\xeev\x15\xc6\xba\x10\xa4\x921\xca\xa2\xeac\xf07\xaa\xee\x19G\xe0\xf5v\xcf\xf7\xc5/\xb1Z2v\x8d\xe3\xa7\xfe|\xd6\xbe\xba>\x9e\xe8U\xad"<pJ\xf3\xfa\xd6}\xabi\xd1\xd9\\\xbcj8+\xb9z\x92\x07\xc7\xd2\xado|/?L\x84L\xd3$\xa8}$\r\xb0{Uu\x8f_\xb7\xea34K\x1b\xc6\xea23\xbeEU\\0b\x08\xc9\x04dv\xf6\xa5z\xa3\x03\xc7 \x8c\x9e\x86\xa7`\xd0\xef\xae \x13y!\xb7\x9c\x8epH#\xe6\xa3&\xb5xd\x91$@\x8c\x01\xeb\x9e\x0f\xb1\x15F\xf6\x17PF\xb24.\xa9 \xf4\x97\x04\x0c\x1f\x9a\xb8K\xbby\x99\x91%Fd\xfc\xc0\x10H?J\xbc\xf8VH\xa3\xd2\xad\xd4\xa6\x18\x16W#\x9fVy5)\xae\x08\xc6\x9bvX\x8cy,s\xf4\x19\xac\xc6\xcfP\xd54\xcf>\x08|\xb7\x85\xd8\xb8W\xceQ\x8fR1\xd4\x1fjV}GS\xbd\x80Cq(h\xf2w\x18\xf8\x04v\x1e\xfcV\xa2\xcb\xc5\x11A\xd2\x85\x83Y\xcae\x8e\xdf\xca\x04\x80\x17 i\xfd+7q\xe1\xe9\xa5\xea\x86\xec\\ \x8d\xa7\xf39\xc9\xc6s\xb7\xcdE\x0c\xc8\x18\x81\x97\xc78$W^Z\xed\x07vs\xc6\x0f\x1fCK\xb49\x8c\x15\x03\x8f\xc4q\xef\xd2\x9a\xf9~Xb\x10\x92\xc3\x83\x9e8\xf8\xacQW@5(9\x04\xe7\x7f\xd8\x0f\xd2\xb5\xc1\x83g\x07\x1b\xf1]I\x96P\xaa3\x8e\x0f\xc7\xcd7\xc4\xab*I\x13\x98\xd9\x0eRd<\xa9\xff\x00\x8fq\xde\x9e\xa4\\g\x18\xe7$\xe7\x93\x91@\x8c\xa8$\x0e;\x83\xd2\x9c\xc3\xb1\r\x821\xc1\xfaP\x1d@+\xb1\x1e\xc7\xe6\x9e6\xbf\xae\xa5\xb8\x8c\xc9j\xfe\xd2\x84`\xdf$.q\x9a\xaf\xa4l\xa5\xcb\xee`A\'\x9eC\x1e\xff\x00?5(#\x05v\xe7\'\xa8\x1f\x1e\xc2\x98I\x1b!|\x1e\x9d\xb9\xe2\x9c\xb8\xb9\xba\x94\xc2ev\x91W`\x19\xb3\x8f\xd6\x9b\x82\x0bx|\xc1\x14I\x19c\x93\xa4c4\xd8\x19\x02\x9d\xc8\xb2\xa6\xe0v\x9aU\xae\x9cF\x16\x19\x1e"r\n\x86 \x01\xdb\xbd*\xaa\xa5H=\x18p@\xc1\xa7_\xb0\xf5?(H,\xe4e\'%\xb1\xc9\x1e\xf85\x1a+{\x99\xf5\x1bh\xa5\x93B\xee\x11K\x15\xf9\xdb\x8avIm\xe3\xd3\xe7H\x89\x93\x81\xac\x80\t\xfb\xd4\x0b\xc0\x15\x9cow\xce\x0b1\xc9;\xbb\xf5\xcfC^\xc1y{`\xe5\xadf1\xb1\xe0\x9e\xbd\xa9\xf6\xcf\xdd\x100@\xdd\xf5\xcd4\n\xb99\x1c\x7f\x9fzm\xce\x1a2\x17I\xce\xa0T\xe0\xa9\xf8<\xd3\x9aU\xd5\x95\x80a\x8c\x10FA\xfbR$\x99\x83H[,\xcd\x969\xc9$\xf5\xcd2\x9a2\xa4\x1c\x121\x9cg\xb59 Gp\xc7$\x0fa\xc0\xe6\xa5\x06\x9f=\xd5\xb3\xdc%\xab\x18\xd0r\xd88\xf6\xfe\x94\xf2$\xb7%\xc2.\xb2\x01>\x9d\xce\x06\xe4\xd7Y\xd2 \xa5\x98(8\x03;nx\x15X\x03y\xc6pEz\x07%[\xd8\x8c\xfb\xd3\xb1\x08F\xcb\xc7\xf8{\n\xf2H\x8bgiRp8\xf9?\x1dk\x91M$`d\x82G\xf4\xa5\x10\x0f\x14\xcf\r\xb8\x9e=<c\xdc|R\xdb\xe3I\x04\x81y?\xa8\xf8\xae\xdd\x15\x19A\xc3q\x90~GQMJ\xa9f\x0c\xb8\xf9\x15c\xe6\xba\x90\xc8\xc3#\x91\xfe)\x92\xa0\x8d\xc5H:+\x02y9\xe7?_zJ\x17{69U\x90\x13\xdcpEwn\xca0$rSp\xdd\xd8\xe3<\xd6\xbb.\x85\xa3j:\\\x07\xcbEB\x83d\xf1\x0c:\x1fs\xfc\xc3\xebZ\x0e\x97\x13\xf57\x7f&TI\xa2MX=\xfboT\xddJ\xfa.\x9a"\xf3\xa3v\x8eF\xd2YFqY\xc5\xa4\xe8X4NG9\xf2\xcfa\xf1J\xdc\xdb\xe0\xfd\xe6\xd7*\x7f\x8dO\xc5Fj\xdau\xc6\x89zb\x9c\xe4\x0c4r/\xe1e=\x18\x1a^\xdbP\xf2\x88u9\xe0\x86\xcf \xe6\xac\xe1\xb9\x04\xbd\xb5\xc4e\x1d\x1b\xd4\x0f \xfb\x8abHVTI\xa0`\xe8\xeb\x91\xec\xc0\xf6\xad;\xc0\xf6\xfa\xc5\xd5\xd4\x171:\xc5\x0cG\x13\x02s\xb9O`+i\xaf\x9e\xb4\x1dj]\x06X\xe7\x89\x83\xdb\xcb\xc9Pzg\xb1\xad\x87B\xf1-\xae\xb9\xe6*\'\x96\xcb\xc8\x04\xe7"\xb66r\xa3\xc2\x8b\xe6\x12\xe0z\x83\x1c\x9f\xa8\xf8\xaf>\xeaV\x92Aq#\x88\xf1\x11>\x96\x03o\xa1\xf9\xab%z+\xca*]WWb\xbd\xaek\xaa(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a+\xc3^\xd74QI\xcb,pF\xd2H\xe1UFI\'\x15\xf3\xcf\x8b\xf5\xf9\xb5;\xc9v\xb11#m\x89A\xebV\xbf\x1d\xebm,\xe2\xce\x19\x08H\xf3\xbf\x07\xa9\xac\xa6/\xdfN$a\xe9\x8b\x80=\xcdV\xf5\x0b\x9d\x0b\xe4!\xc37\xe6>\xc2\xaf\xfa-\x96\xb6\xfcT\x80\x15_\xc8>}\xe9h\xf3k\x1a\x87\xe5\xd8\xe5\xbe\xbf\xf6\xa9\xfb?\x14\xdcYi\xd2@\xb6\xac\xc9\x1bev\xe0\x16\xcfj\x89i#\x9b\x0b\xe5\xf2G\x19\xe9I$m\xb4\x95O\xc2\xd9\x00\xf5\xcdQI<\x91j\x11J\xcb\xa9J\x82\xbc\xe3\xefZV\xb6\x86\xe9@\x9e-X`\xc7\'\x1b\xd4]\xf5\xfe\xab\xafL\x8dy\x98`S\x94\x80{\xfb\x9f\x9a\xe9`DT!\xc1\xe3\xbf\x7f\x9a\x9a{+\x98YZ{g\x886J\x96\x18\xcdD\xdd\xb7\x9b\x80\x8b\xb7\x93\xb7=\xf3\xefY\xe9\xc7\xe1\xf5\xb4\xae\xcd!<\xbeu\x1f\x9a\xb9\xb5\xf2\xf4"B\x15c\x03m8\xc56R\xccv\x93\xe9\x1f\x88\x81\xd6\xbbU!\x81U$s\xcf\xb0\xf8\xcfzZ\x18v\x85\x0e\xb9\xcfq\xd34\xe1\x960\xcc6\xf0\xbf\xe3\xfe*\xbbVF\xa6\xf7\xdbz\x9aH\xce\x0533\xcf\x1c\x91\xfd\xdeS\x1b(\xe1\x88\xce3\xedH\x08\xa5\x92V2\xca\xd236\xe6\x91\x87$\xfd)y#$\xa9.q\x9c\xe0\x1aV8v\x12\xe0\x8d\xc7\x18\xdcp\x05UL\xded\xa0\x90N?\xf3\x8ayp\xa3#\x19=\xf1\xbf\xebMf\x0e\xaf\xc2\x9c\x1e\x00\xef\xc7\xbdx\xcc\xa3n@oH\xc8\xa9\x19\x02;z\xb0Nx#\xa55\x11\xc7\x93\xd01<U}\xcc\xa4\x12\xa1\x81\xc9\xc8\xcd=\x19\x18\x19\x07aH\xa7\x98\xc1p\xbbs\x9c\xaf\xbf\xc5u\xbb$D\xa87\x9d\xa3\x93\xd3\x9e\xa7\xd8WJ%\xdcB\xb3w\x03\xde\x9c,.\x8b\xbd\x88g\x1c\x13\xf8\x8fj`;-\xbb\x1f_\xa8a\xb3\x8f\xca=\xa9{j\x1c|W\x92\x16\x8dv\xa6\x17\x80\x18\xe3\xff\x00?ZA\x0e\xe0T l\x0c\x9e\xbf\\R\xd2\x06\x9430nNpF0;Rq\xc6\xa3q\xda\x0fL\x9c\xe7\x15\x05[T\xdf\xf6\x8c\xfe\x9fJs\x85\xf9\xae\xd4a# m,\x7f\x0f\xcf\xc5<\xb6U@\xa1\x17h\x03\x07\xdf\x1e\xf4\x92/\x98\xa8\x15x\xe3\'9\xc68\xa7\x8aZ,\x8fS\x12F9\x19\x1f\xf6\xa5\xbb\x19$\x0f\xc2.4\xe1y\xa6\xd8\xe1H\xee~k\x92\x8a\x85\x89\x07\x03\x90~\xb5-\xe1;{K\x9dz\xd0J\x14\xa8\xdf"\x83\xd0\xba\x8c\x8f\xf9\xa8{\x95|\x01\xe6\x1c\xfb\xfb\xe3\xb1\xa8\x96\xb9\x9e\xd6\xe5&\xb7,\xb2#oV\x1d\x9a\xa5\xd8\xcc\x96wv\xd3<\x01\xd6\x19U\x8a\x1co\x83\x9cT{\x98\x9e\xe6\xd6x\x96R\xad$l\xa1\x87bF3_N\xb3\x05\xe0\xd4V\xa7\xa9\xdb\xe96\xd2\\\xce\xc1x"4\xcf\xa9\xdb\xb0\x15\x9b\xc3\xe3_\x11\xcf\n\xc5\r\x84\r \x00y\xb9\'$\xf7\xdbP:\xb4\xd7\x92B\xf7w\xd7-,\xe4\x15\\\xf4_\xf6\xa8\xed^\x8f{\xe38\x1a\xdeF\xb2\x82S&\x82|\xc9\x17J\'\xf9#\xda\xb1\x16>\x16\x9f\xcfE\xbb\x965MX\xd2\x8d\xa9\x9b\xf4\xe0R1^\xa5\xe3\xdd\x01\x99\x0c\xa4\x99\x19X\x82\\\xb6q\xf9W\x06\xce"\x88\xa6\x01\x95l\x85a\xca\x9c\xf0Fz\xd2\x1a<\x01a\x19=r\xcd\xef\x93\xda\xa5Y\x1c\x9c\xb2\x8f@\xc8\xc0\xe9^b\x0b\xcb\x1a\xbb\xe5\xb6\xc0 \x0e3\x93[\xa7+\x14\x8c\x88p\x01\xf7\xfbWi\x1cq"\xaa\x81\x80rO\xc5:\x08H\\\xb0\nz.1\xce\x7f\xad7!Y\x93\xd5\x8c\x1c\x10:\x1c\x8ay\x94T8Q\x80\x08\xe3\xaf5*8\xce\xa3\xac*\xa8\x03N\t\xdf\xf4\xfe\xf5\nF;\x1d\xc9\'zdv\xac\x921\xe4\x01\xc1\x1c\xe0\xfeu\xce\x00C\x90\xac\xcc\xd8\x07\x188=i\xc8\x84;#\r\xc4\x0f\xa7~\xb4\x10 \x0e\xc5:\x0c\x06\xeb\x9ak\xca;\x97\xd9}[\xe3l\x1d\xe9Z\xc6\xc0nv\xda\xa3\xb7\x95;@;p\xd9\xff\x00\x8a\x7f\x1b0\\3o<m#\x9cv\xf8\xe9IJ\x04`&6\xe4\xe0`\x8c\xfe\x95b\xf0\xd6\x9b\x16\xa5u(\x98\x1d\x90(\xdc\xa3\x82Y\xbb}8\xa9\x1d2\xc2{\xab\xe8m" \xc9!\xc0\x07!F\xd9?\xa0\x19\xa6\xaf.b\xb7\xb6\x92\xe2A\x84A\x93\x8d\xc9\xa8I\xe6\x8e1\xc2\x03!8\xc9\xcf$\xf3\xedMU\x1d\xc8 \x8fW_l|V\xafy\xe1}2\xe6"\xa9\x08\x89\xc6J\xba\x93\xc1\xf7\xc1\xebY\xdd\xdd\x94\xda|\xd2[\xc9\x8f1\x08\xe9\xd0\x8e\xc4|\x1a\xb8\xeb\xbe\x1f\xbe\xe9\xad\x1b\xdc\x84hX\xe1^,\xe078<\x1c\x9a\x81\xd3:\xc5\x9d\xfa\xb2\xc3\xa9d]\xd9_\x9c{\x8ev\xa6Rgn@\xdc=\xfd\xb1\\\x01\xb5\x8b\xf1\xc8\xe8\x07s\xfd\xe9uU*X\xa1+\xd3\x07\xfe)wOFBs\x8e\x9c\x0e\x95E\xe53\x82\xe1\xb1\xe9\xd4\xa3s\x8f\x9a\xb2.\x17\x0b\x8e\xf8\xa6+\x1aeX\xaa\xfaOq\x83J\xa8U\x04\x94=3\x8f\xfc\xefN\x04rD\x81\x97\x04\x94\x05\xbf\xf3\xbdz\xc5\x80V+\xd0\xf4<\xff\x00zq"\xf2\x7f2\x95`3\xba\xe4o\xb6sI2j\xe0\xe4q\xcd&\x19\x91B\xe7p8%\xbf\xb8\xae\xd8\xb9\xd8\x08,Fp=\xa9\x7f\xde\xb0\x07nq\xc7\xe5\xde\x96\x11\x84\xf2\xdd\x95[\xb7\xd3\x15-"g-\x86`\x98\x1c\x8d\x80\xcf\xdf4\xc9\x91Ga\x93\x9e)\x82\x02\x8b\x99\x17\xd5\x8c`u\xfaR\xf1\x95\xcbc\x1e\xff\x00#\x14\x16\x1b\x80\xc0\x0cs\x9fzT.Q\xc9N{`\xe39\xe75\xd8\xd4\r!_V\x90y\x1b\xec;\x9fz\xe3\xb6FH\xc6k\x87bP\x96\xe5Opz\x0f\xa5!\x1cq\xb0RS\xafl\xfb}i\xee\xdd\xc7\x00`\xf4<g\x8a\xec\x85>X\xdb\xc8\x18Rx\xe9N\x18\xc3\xbe\xb2\xca@\x00n3\xb94\x81&\x91\x80\x08\xfa\x1aA\xe3\x04(\xdf\x92s\xc0\x1c\xae>{\x83H\xf9g\xbfn1\xfc\xd4\xf7\xcb\x120\xc3\x801\xdf\xa0\xf8\xa5\x1e%\x8c\xa2\xa6\x08\xcf\xe1\xf7>\xff\x00\x14\xf7\x92\xb2\x92\xec\xa3H ls\x9f\xb7\xefI\x12\xe9\xc0\xce\xe6\x84S\xb5\t\xdd\x85\x1c\x0cq\xed\\\xcf\x1d\xbb\x8d\xaf\x0cn\xdd\x89Q\x93\xb7\xf2\xa7?\x84\x85\x00\x96\xdb\xea\xe3\x81\xef]L\x9b\x99H\x8dJ\xfb\x83\x81\x9a\x9c\xe9\x98\xd9\x06\x08\xd8\x1c\x8d\\\xedQ\xfc\xcc8;\x8e\xe3\x07\x15\x1ecU\xdb\x88\xc0\x07\xa7A\x8c\xf6\x15\xd2E\x08\xdb\x9c\xe0\x8c\x901\x91\x9f\x8as\xe5\x9f\xdd\xf0\x06O$u t\xaf3\xb7;\x86F\x08\x03\x18\xc52"T*Xm\xb6\xc4}\x0e\xff\x00\x14\xbf0\x9e\r2\xf4\xa3\x1d\xa3 \xf5\x03\xbf\xe5J\x14%\xd93\xd4\xe5ry\xfa\x0fjT\x05\x04\xfa\x98\xb0\x18\xcfn\x7f\xe2\xbb\xf2\xf7"\xeeR\xb9$7\x1d\xfbWQ\x01\'\x18\xeep;v\xc6iE\xc0\xc7\xf5\xa4\xd7c\x8e\xa4\x93\x80\xc4s\x83\xeci#\x11\x00/PNw\x1eG^\xd4\xbe\xdc1!GQ\x93\xfc<{\xd7x]\x9b\x99\xbb\x13\x9e\x0e3\xd8\xe6\x9d\xc6\xb05\x00\x08\x07\x7f\x8c\xd2u\xe9;\x1d\xb6\xda\x90\xf2P\xb1\x0b\x86^\xaa29\xc7\\\xfd(\nD\xa0\xe1\xb2y\x18\x1d\x8f\xb58H\x8b7\xa7\x1dF\xd3\xd8\x0f\xfc\x14\xe1"\xd8\xbe\xa6df<\x021\x93\xf5\x1d\xbe)k\x00r\x08]89\xd48\xdb\xb7\xf8\xa4\xb4\xb8\xceNv\xc6;\xd3B\xab3m\x03\x0c\xbc\x13\xb4\x83\xd7\xbdw\x1ch\xe9) \x1d\xad\xe9\xcey\x00\xf1\xc9\xa5&\x90!\x122n\n\x0e\xe5\x03\x07\x03\xfc\xd4\xc6\x95\r\x96\xa1j\x92\xab\xee\xder@\xe3\x03\xa61R\xad\xa2In\x84\x1a\xd0\xca\xea\xc4\x021\xa8\x01\xcf\xefQ\xe7\x9f\xc8\x87\xcc*\xda\x01\x03#|\x1a\x852\xa9\xfc\x08C\x00\x01by\xfc\xab\xdd\x0ee\x83^\x8dd\xe3\xcf\xb7x\xd4\xf6\xdc\x08o\xd4\xe2\xaeR\xe8\x96\xb2(19R\xa3\x8c\xf3T=~\x19\xecL.\xb0\xb9x$WG\x18\xe3o\xf5\xe6\xa6_X_t\xaf.\xf6L:\xdb\xc8\xb2zG\xa5\x82\x9c\x91\xb7\x04\x8ab\xd2\xee\xd7\xa9\xac\xb6\xa8\xc5ZX\xd9p\xdb\x10H\xd8\xef\xf3Z\xba\xb0\xc0\xe7\xb5g^,q,\xb1\x81!Q\xe9V\xff\x00\xeels\xf9T\xd4\x9e#\xb1\x9e\xd1^\xdeU\x92F\x00\x84\x1c\xb6H\xe8Gj\xa7K\x04\xb7v\xd3\xbc\x92\xfa\xe4r\xc5\xcf\xbfl}*\xd3\xae\xf5{k\xfb6\xb6\xb4u\x9f\xcc\x8c\xb1u>\x91\x81\xb0\xcdWt.\x9b5\xad\xd7\xe2.\x14\xc7\xa0\xe9\n\xc3rMh\xe6\x00\xb1\xa7\x96\xdf\x85\xb0>1\xd2\xa9\xbe P\xf3\xc2\xf9\xf5\xc8\n\xb0\xf7\xc7z\x9d\xd2\xb5\x1f\xbci\xf1\xcc\xfc1\x8f\xd43\xfci\xc1\xc7\xe9U\xfb\xc6]B\xe31\xb6\x0cY\xc0\'\x1fSNuY\xe0\xbb\xe9py\x03&p\x8e\x89\xf00x\xfaQ\xd2\xa1\x9a\xdf\xa8M\xe6q\tef\xfa\xf6\xfdj\xbd$@\x80v\xf2:\xf6\xcd1\r\xe5\x02\x02\xb2\x82\xc0\x92s\xdf\x8c\xd5\x87\x0e\xa4\xee\\\xe0p8\xcf5\x1e\xe8\t\xc1L\x93\x8cg\xb7\xd6\xb0w6\xa0\x95tb\xad\xb8\xfc\xbf\xde\xb60\xcf\xc8a\x91\xb7\x06\xbc\n\xccp\x07Pq\x8e\xff\x00Jeq\x17\x90\xdb\xceOl\x0f\x8a\x93\x81w&Cg\x03\x93\xf3\xd3\x15\xc5\xcd\xb4\x8d\x11*9\xe3\x83\xd6\x93$\x06H\x19\x82\x12t\xeaR7\xe2\x84\x94$\x80\x12\x00\xce\x08\xa4\x11\x13\xca.?\x11\x19\xcfz\xe8"\xb0\xc8\x8c\x9e\xff\x00\x9fz\xf6\xc5=%_9\r\x83\xf4\xa7\xb1\xacjO\xa0\xfa\xf8V\xf6\x07\xe9K\xb7\x8f\xcd\x8a& !+\x82=\x8drI43\x8c\x93\x83\xb7\xd2\x99\x94,\x14\xed\x18\x18#\xdc\xe3\xde\xbd\xbd\xb4Te\xde\x83\xf7\xaa\x1b+\xd3\x9e@\xf8\xa7;IB\x02\r\xc4p;\xe3\xebR\xb6\xfal\xb7\x1ar\xdd\xbb\x9e\x06\x122I\xca\x8fl\xfb\xd4\xd8m\x8d\xcaK\x12DY\xc4Z\xf5\x0e\x00S\xb99\xc7\xbdF\x96\xe9m\xccn\xf2\x05R\xfa>In*\xa3\xe5$\x0f\x0c\xb2\x01\xb2)\x11\x8bv \x10O\xf4\xad\x88\x04x\xd5\xd4\x82\xac\x01\x04{\x1a\xccf\xb6Y\xa3\xd82T\xf3\xf4\x1d\xeaW\xc2\x17\xf7\xd2Esa$\x06E\xb5 G#\x1e\x8az+\x7f\x8a\xb1\xf0\xdfR\x1d.\xf5\xad\x9a\x12\xcbv\xa3C ,u\xc6\t\xc1\xc0\xe0\x83U~!\xb3k\xfbD\xb8Y\x006\xe4\xea\x0cp4\xb9\x03;\xf7\xcdE\xf8\x9a\xc9-u\x04h\xe3\x01.\x14\xb3\x01\xc0\xdc\x0e\x0f\xebU\x99 \xc6\x0eU\x89\xed\x8ekN\xd7\xb4I/"Y\xc4\xa7\xcc\x85\x0e\xd8\xc8\xe3\x1dN\x0f\xbdg\xa2<\xef+&F0>\x0f\xcdVx\x93\xa7<\x1dJ\xe2Clc\x8a\xe0\xeb\x8c\x029\xc7\xab\x8f\x9e\xd5e\xd0/V~\x9f\x02\xf9\xfed\x90\x8d\x12\x1d\xfd\xf6\xfd\xbb\xd4y\x83$\xf1\x85\x1c\x0c\xf3Z\x97\x87\xad\xd7\xf6D\n@%\x10\xab\x83\xd0\xe6\xb3\xd8\x127\x93\xf0\x90y\x19\xec>j\xd3\xa5\xea\x7f\xb2\xdfd\x830\x90\x01\x03\x9e=\xc59\xe1\x89\xed\xfa}\xfa\xdcJ\xc3\xcbd1\x13\xfe\xdc\x90s\xf4\xda\xb9\xe2\x18&\xbd\xb11E\x9f1\x188\x1e\xf8\xdb\x15O\xf1\x16\x95\xfb3PdE\xccS\r\xd1\x9e\xf8\xce\n\xfdE@y\xa3\'r\xe0\x81\x82{\xd5\xf3\xc4\x9a\xae\x9d\xa9%\xbf\xdd\xa5Y|\xb7m\xddr\xb9\x1cU-\xe2b\xe5\xb0\xb8Q\xc9\xcd@\xeb\x90\xda\xc1\xd4.\x7f\x05*\xbc.C\xa6\x93\x95\x19\x19 \x11\xd8\x1a\x9f\xd2&\xb9\x96\xc2\xdd\xae\xa3e\x98)W\xd40N\x0e\x01\xfb\xd2/\x1a\xb2\xa9\x08H\'4\xdd\x83:\xa9\xc0 p\xb9\xeb\x8a\x90I9un\xe4c\xfe\xd4\x8c\xc8\x19\xb8\xc6\xe1\xd0v\xfc\x8dUG2\xaa\x1c>G\x18\xe3\x8a\xb0 \xe7\x8aA\x11K\x82\xa7\x95\xe0\x8f|\xd5\x97E\xf1\x0c\x9aR\x18d\x05\xadI\xfa\xf9y\xff\x00\x1f\xda\xab{\t,s\x82F\x0f\xcek\x88D\x92L\x10\x02p\xd8+\xef\x9e\x06*M\xb5\xdc\xf6\xb3\xc74\x0e\xd1\xc8\x0e\x01\x1d\xc1\xed\x8f\xebQnm\xe1\xbb\x85\xe2\x99\x03\xa1\x1b\x83\xdb\xe6\xb4mm-\xb5\x8d8\x84a\xba0^\x06\xea\x06z\xaf\xd0\xd6^\x88\xe9#c\x1b\x0f\x07\x1dA\xab\x83hz\xde\x9dn\xf2nT\x88\x8c\xbad\x1d\x9f?\x15W!\xf7\x15\x19\x19\xceMi\xba\x85\xdd\xdc\x92[Msf\xd6\xf3\x85\xc1\xdb\x1a\xc0\xe0\xe2\xaa:\\\x11C\x14\xd1Ct\xb3B\x1f+\x83\x9d9\xe4T\x95\xac\xb1@\xe06YX`\x8e\xd5f\xd1\xb5C\xa6^\xc5\xfb\xe0\x8b\xf8\xa2\x7fq\xecj\xa1o\xf8|\xa6\xe0\xf68\xa5\x12O5\x1a\xde\\\x07BJ\x1e\x86\xaezwQ("u\xc6s\xe9\x1d\xbeA\xa6/\xecR\xe1$\x8d\xb3\x820}\xc7\xc8\xaf\xa8\xb4\xcdn\xc7R\x08\xb1\xca<\xd2\xb9(\x7f\xc5L\xd7\xce^\x1b\xd6\xfc\xa9!\xdd\x95\x9a\t\x07>\xe2\xbe\x8a\x8d\xc4\x91\xa3\x8e\x8c\xa0\x8f\xce\xb6\xb6\xf7\x11]@\x92\xc6y\xd9\x97\xfd\xa7\xda\xbc\xe6\xea\xda[;\x89 \x90~]\xd4\xfb\x8fzPWB\xb9\x15\xd0\xa7\xa9\x8a\xf6\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a\xf0\xd3K\xd9\xbe\xedis6?\x04l\x7fAN\xcdT|c\xaa~\xcf\xd2\xda5?\xbc\x9c\xec\x1fN\xf4d/\xa8\xf07?j\xe8Vr\x11\x7f3\x1c\x0f\xa9\xac\x13V\xbdi\x9ak\x82\xc4\xb31\xe3\xdc\x9a\xefO\xb2\x9atKx\xe3\x0c\xec2\x7f\xc9\xcd4\xb9\x02k\xdbhq\x90[\xccq\xf4\xa9\xdd\x1e\xe9-u8\xd9\xcf\xa4\x86S\x8e\xb5\x95\x0e%\xbavw\xd8\xbe\x82~\xbb\x93[\xad&\xde\xcc,I\xeaH\xf5(\xfaqHjZd\xbaCA\xe7:\xb0\x97\xba\x83\x95s\xd0\x1a\xb2\xf8OO\xfb\xc5\xec\xd7R\x00\xd0\xdbF\x0f=\xe4\xed\xfaUo]\xd6F\xa7t\x88\x98\xf2\xa0\x93s\xf7\xcb\x0e\x02\xd5\xef\xc2\xe5a\xd0\xcb)\x19\x96\xe5\xf7\x7f\xf6\xf6\xae\xf4\xe3os\xd4e\xf2\xc90\xc6K&{\xe9\xdb\xf4\xcdG\xea\x13]C\xd2\x15\xa5\xdaip\x87\x1e\xcc\x7f\xc5W\xfe\xd0\xee\x9e\x1d2\xd4o\n\xd2\xdc\x82\x07r\x14d\xd5w\xc3ZA\xd7\'a#\x15\x82\x10\x1aW\x1f\x8b\x07\xa2\x8f\x93Hx\xebU\x8e\xff\x00S\x8a\x08\xc8e\xb4]\xa7\xbe\x1c\x9c\xb5!\xa1x\x8am*\xd6\xe6\xce\x1b\x12\xcd,\xa6M\xea\xdc\x93\x8c\x059\xac\xc5\xdd\xed\x9c\xde"\xbc\x92r\xd2[FB\xe9\x00\x92\xe5\x17\x81\x8fsV\xf6V\xf7\x96\xfd\x02\x18\xed\xd4-\xc3\x8d@\x9c\r!\xcf;\xfb\n\xd0\xf5{M\x12\xce\xc0\xa1\x81"HW\x86\xfe >\t\xeak*\x8ac8,\xe7\x18\xe0\x7f\x8a\xea\xfe\xea\xff\x00R\x99\x1e\xf4\x00\xa0\xfabRH_\x9f\x93I\x12\x11\x94!\xdc\xbd\x0fn\xbf\x15A\xd5:\xb1\xea7\x86U\x81`\x861\xa1S\x18\'\xe4\x81V\xbd.\xc9\xec\xad\xb4I;K#\x1dL\xc4\xe7\x1fL\xd3\xf9V \xaa2O9\xe7\x8aZ7\n\x0ey\xcey\xef\xcf\x1f\xa5$#fV\x01w\x1ceq\xc985\xe1\x1eF\xd6\x07q\xe9\xed\xd7\xf5\xe9U\xa5\xd9Y\x9c\x80\xaax?\xb5X\x00\x08\xd3\x9c\x9aM\xdeD1.\xd4 7\xac\x93\x83\x8cv\xfc\xe8\x80\xc7"\xeeR\x0f<{f\x96\xf2\x96U,@9\xe7\xb7\x1f\x06\xbd\x8b*cP\x08\nyS\xc63\xde\xa1\x0c\xbc\xcb\x900\x07\xa0\xe2\x9e\xd8)\xc7=\xeb\xc8"1\x87m\xec\xd9`NOJ\xec":\xb9n\x00\x18?Q\xde\xbdd$m8\x01\x94\xfa\x89#\xf2\xa5\xa2\x18E;3\xc8\x07=\x08\xfe\xf4\xdc\xad\xa8\x05\xd8(\x1c6{\xd7A\xef\xdc\x9aE\xd9\x84h\x88\xc7\x07\x19\xcf\'\x8an ,\xa0\x17\xc1\xcf\x00r3O[(\x87\xd29?\xfd\xa0\x1e\xe2\xbaEB\x8cB\x02:q\xefQ\xc2\x89I$\xe4\x85\xce\x93\x91\x81\xf6\xa5\xeb\xd26\x1d\xf9\xa4\xe3\xde\x81L\x89\x8c`6\x0fC\xf1N" \x83\x95\'\x03\x03\xe0\xfc\xd7\x90mX\xd8\xbc``\xe3\x04d\xe6\x95\xdc\x18\x84\x86@\x0ep@\x19l\x8aq\x19\x81\x0eOo\xca\x06[}\xbe)\xb69\xc8\xc7\xdf\xb54\xb8/\x93\xd7\x81\xc9\xcfojJ\x182W\x0b\x9d\xc0u\xe2\xa4\xbe\xef\xbd\x90\xc8\xa0\x11\x90\xdcrM\x024\x8d\x81L\xe4\x1d\xa7\xbf\xc5!\xc4\xa1\xf5\x92B\x96\xe7\x82\x05s\xcc]8\x1c\xe3\xedR\x96\xd0\xc7\x18P\x14\xee\x03\x9cc\xbdCk\xec\xe0\xdbA\x9c\xab6NGj\x99\xb7\x90\t"\xda\x17\x86\xf5\xef\x1d\xbf\xdb\xd6\xa1|BdMN\xd9\xd8d2\x12\xa3\xa7\xe9Vwd\x7f\xa6;#\x7f:\x86\xd2v\xc1\xf7\xc7\xd2\xa2\xda\xea7\xab\xab\x7fC\x11\x9fqE\xaa\x14\x8b\x11\xb1.\x1b\x93\xd3\xfaT\xde\x95\x04Wz\x9d\xad\xac\xc4\xb4o\xc9_p\xa3$\x0e\xf5\x15n$1\x80\xab\xb0\x93\xce}\xeb\xa8\xe6\x9a\xc2\xfa\xda\xf5\tf\x81\xf7c\xdc\x1e\x08\x1f\x955`a\x8ak)eB\xf1,\x91\xf9\x89\x8fI@}C\x1d\xf6\xfdiW+$\xb1\xdc\xa4l\x16F\x8d\xc2\x1e\xe1\x88\xdb\x7f\xadm\xa2\xd2\xd1\xe1\x11}\xd6/,\x0c\x04\xd86\xe3\xe9Y\xf6\xbd\xa5\x8d:\xed\x96\x10|\xa9\x80\x921\xd4\x8cpW\xf2\xab\xbe\x9d\xa9Z\xde\xc2\x8f\x0c\xa1\x81\xea3\xeaS\xecGcP\x1e0\x93c\xe9M\x9fNd\x07?\x91\xafR\xf1*\xf4\xfb\x9e\x86\xd7i\xa0\x98Lz$Ll\x19\x82\x11\xb7l\x1a\xc0tg\xbb\xb7\xea\x82\xdd\xcb\x80\xfa\xf5#g\x95\x1a\xb3\xbf}\xaa\xa2QT\x16l/Q\xf3\xc7\xd2\xb8x\x83\xa6\xdc\x96P8n\x9b\xbf:X\xc4\xd3\x06$\x10\xa0t\x1d\xf8\xcf?\x14\xd9\x98\x95+\xb8\x95_\xe5\x07$W\x9b\xb8P\x18\x98\xbd,\xa7\x1d\xb5\x1f\x9c\xf6\xad\x9a\x92H\xc3n\x0f\xe9I\xf9!z\xe3\xaf~)}\x17]]\x13S\x91\xe4\x04\xc3(\x0b"\x8eH\x03\xa3\x0f\xa5&\x17p\xf2\xdb<\x0fI9\xa63\xd9oV\x91"\x0f\xb9\xb6\x11\x9c`SQ\\\\\xdaI\x05\xc5\xa0\x0b,M\xaf8$\x8c\x0c\x11\x81O4p\\G,\x17\x03Tr.\x928\xe6\xb7\x0b-WO\xd4c\x0fku\x1c\x99\x19\xc2\x91\x91\xf5\x1dEP|X\xca\xfa\xc4 J0mF\xe01\xd41\xebT\x88t\xb9\xe1\x90\xb4fX\x9d\x06w)\xc3{\xf5\x15-\x15\xa1]\xaf$\x8d$\x92\x92\xac[\xd4\xccs\xd0\xe7\xbdhz\x97\x89z\x8f[\xb1[I\xfar\xc4VUg\x909\x00\xe9\xdb\x00\x1d\xf2I\xaaKN\x87i\xd2\xee\xcc\xf0\xde\x19\x14\xa1UB\xa3;\xfc\xd7[\x89\x1f\x84pz\x9e\xf9\xed\x9aq\x1ae\xf2\x10du\xcd*cW\xc6\xc9\x17\x03\xf1\x02\x07c\xf3NB\xaf\x98\x98\xc6\xec\x13\xc9\xf6\xf6\xaa\xc8\xe0r\xf9f\x04epv\xdf>\xd59\xe5\x18\xd8cc\xf6\xfa\xd4{+\x06!J\x82H\x1d\t\xf98\xf6\xebN\x08\x0eNFC\x80N}\x87Zp\x15\x98DH\xdc[\xa9\x03\xb5\n6bA\xc1\x07\xa1\xe4u\xe3 \xfc\xd3\xcb\x11\xd5\xa4\xfeNx\xed\x8c\xfd84\xd9\x93?_\xfc\xff\x00\x14\x91\x8dUNO\x18\xfc\\\xe3\xd8u\xafCa\xb6\x85\n\x01\xce\x0eN{S\x9f)Y\x1dT\x83\x83\x83\x8e\x8as\xfd\xab\xdf\xbb)C\xe6\x1d\xacz\x90s\xd3\xdb\xe2\xa5\x08%\xd8\xa0\x19\xc09\xed\xb7l\xfdi\xbf1w\xd4O?\xf9\xb51x\x81p\xc7\x1b[\xaf?\xf3J\x0e\xc0\xc46\xf3\xb8\xf4\xf9\x04PJ\xa6\xc0\x83 \x8c\x06<\xe3\xe75\x1e\xd7b\x16$6rq\x8fl\xfb\n\x834\xb0\xdb\x9dn\xc0j>\xa3\xb1\xff\x00\xe6\x9eUy\x06\x00\xce8\xa7\xb1\xab4\x99^\x17\xa6\x7f\xf9\xefNR2Y\x95\x90\x10\xa7<\xf0?Jog#\xcc\xa1\x06\x00-\x9c\x11\xd7\xdb\x15.U\xc2a\x08\xdd\x822G \xe3\xe7\xb5L\xb2D\x9a!*\xea#9;\r\xfe\x00\xa6&r\x8eT\xe3?\xf9\xbd \x89 \x8f/\x1ad.T|\x1fs^E\x0bF\x85\xd8.X\x9e\x9c`|{\xd2\xb1\xb1\x8c\x81\xb9\x89\x00\x83\x91\xcf\xd2\x95\x086\xee\xda\x0eO\xbe\x7f\xa1\xa9\xea\x88\xc5H\xc9eR7\xc6\xdf\xa0\xa8\xe5\xc8\xc8\xdb\x04\xf6\xefH6V-\xa8\x00\xc09\xed\xf9\xfc\xd7\x84\x92\x13\x086\x8fnr~i\xc0\x8d\x95\n\xb6\xf2Xv9\x03\xff\x003H?\x04\xa8\x0c6\x802{\x8f\xcb\xadrL\xa8\xf5\x12\xbb\x01\x8flv\xde\x85`x\xdf~k\x82\xdb\xd0\xb4g*O\xa8\x10z\x0e)4PW\x95;\xb7`1\x18\xc0\xed\x8ar\xb9\xc0m\x98\x1c\x80\xa4\xf4\xa4\x99p\xc5\x94\x1c\xf0\x0eO\x18\xc7O\xa56\xc3!\x1fQ<gc\xdf\xb8\x06\x94\xad\xc8\x1fo\xf9\xa4\xa4\n\xb2:\xa9\xcbq\xb8\xb7\x1c\xfb\xfcW\xab\x95\x1f\x85\xb6\x82T\x12z\xf7\xf6\xa7\x06\xd9ZM\xdb\x860zs\x8f\xa95\xecv\xe2S\x9d\xc3\x19!\xb6\x90\x7f#\xdb4\xb1\x0c\xc2V\xc2\x0c\x92t\x80\x7f\xf3\xef]\xf3\x13H\xc9\xe0\x0c\xd3I\x19\xf6\xb7\x1c\x1ew\x0ex\xf8\xae\xd1QS\xf1\xe0\x11\x92=\xcd*\xd0<}\x19\x98\xe4\x96<\x1d\xa0\xff\x00\xe7J\xe1\x12\'\xc8\x1e\xa2\t\xe0\x8e3\\\n\xeb/\xa8z\x88\xfec\x8f\xd3\x1c\xd7u)]\x8e\xd9\xe4\n\xec (\x1b\xcc\x04\x01\xc0\xed\x8e\x9f\x9d&\x01o0:\xaf$zs\xea#\xe2\x94X\xd1S\x04\xe0n<\x03\xfe>)@I\x03\x0c\xb9\xea@\x1e\xdd\x7fZ\x90\x06\xac\x12\x00!w\x1c\xe7#\x1d\xe9\x19\xc6ps\xbe\xc7\x8f\xe9II\x17\x9a\x10\xb2n \x91\x823\xd7\xb7\x1f\xd0\xd4e\xa4\xd7Z\x06\xa3<\x90\xdb\x99m\\\x03")\xe5O\xb8\xf9\xa9\xb5\xd8z\x0cpz\x1e\x84\xf3\x8c\xd2\x85\x14\x94\xf4g\xd1\x90q\xc7\x1d\xab\x92Z\t\x9a)\xa3\x94\xc5<R\x07I\x97v\x07\x18\xee7\x07\xb8\xa1f\n\xb2G$a\xe3u*\xc8x\xc75a\xb1\xd6\xb4\xab\xd8\x96H\xae\x97\x9e\xa38#\xe0\x83P\xba\xad\xed\xad\xe5\xd4pDC\x95\xfcEH\xc0\xf6\xc9\xf7\xa8\xd94\xcd=\xa4\x0c\xd1\xa6\x00\xe9\xb7\xa7\xd2\x9cGo\ne<\xb8\xd62\xa0\xa2\xa2\xf5?_\xf9\xab\xb9:\x8fR\xb8\x81m\xe7[`\xba\x86\xb7L\xe5\xb1\xbf\x07\xf2\xe4\xfdj\xba\x1b\x0b+y\xcc\xf1<\xe4\xe0\xe9V\xc6\xd9\xf9\x1c\xd2p\xd9Yl\xdf\xe5\x00X\xe3\xcc\x07\x07\x1d9\xc7\xf7\xa7\x05RH\x8e\xdd\x9e\x86\xc0b:\x83\xef\xee~\x94\xa6=o\xb7*\xa7\xf8z\x10>i4))e!\x98\xa62>\r2\xa28\xf0\x81\x11u\x02\xa7\x03\x1a\x8f9\xdb\xf5\xf7\xa9%\xd9\xb2\xc5\x98\xe0\x83\xb9\xce*$Z\xcf\x0c\xc5\x96\xf7m\xbb\xb9f\x8bh8\xcf$\x83\xc6\x05/\x1c\x11\xc8\xd1\xc6\xacO\x98\xea\x01\xfa\x9f\xf0)\xc1H\xc0m\xab\xb1\xca\x9c\x01\x92y\xf6\xcfz\x8f\xf3\x9a\t\xad\xdf\'\x11J\x18\xe4s\x8c\xff\x00j\xae&\x1bbr\x80\xa3\x1c\xb7\xa8\xb63\xce3\xc5K\x05\xe5\r\x83\x86\xc6\xdb\x01\x9cq\x9csV\xc6\xd1\xed7K\x18\xdc\x19\xbf\x8f\xbe@\xc5S/b\xf2ex\x98\x1c\xa9 \xf6<U\xfc\\\xac\xa5eV\x18\xe3q\xf6\xaa\xa6\xa1$\x177\xb2\xba\xb6\xf5l\x0fO8\xed\x9a\xbb\xebv\xd6b\xda7\x83\xcbF2\xe0c\x03*\xc3?z\xa9\xe9\x177~{\xac\xc5\xd9Dy9\xec\xc3j\x81\x01\xa2@q\xc1oony\xa7\x06\xe5\x00\x1c\x9c\x0e\xb8\xe4\xe3\x1e\xf5\xe9\x81\x03\x85P\xd8\x04\x9c1\'4\x84\xb6\xe1\x18\x14\x01s\x80\xd9\xe7\xe2\xb1\xf9\x9e\xdc\x16\x8fI\x0b\x80Fs\xc7qZL\xc7!\xdf9;\xd3\xcb+0b\x0cIc\xd4\x9e\x87\x9f\xfei\xc1\x89\x031e \x81\x91\xef\x83\xc6k\xdbs3\xb2F\x18>[b\x81\xdc\x9f\xafj\xbaA\xa3[\x94\xcc\xa0\xbb\x15\xc6I\xe9\xf4\xad\x1fK\xe9My\x18X#\n#\x03S?\x19\xfd\xea\x9a\xff\x00\xa9%\x9bfg$\xbep\xab\xce?j\xcd.2\xbe\x98\xdfq\xc8\x0c\xd9\xe9\x93Z|\xb6\xe8\x96\xf1"\x8c*p\x00\xe9\x8cUK]\xd2\xe3\x80b6\xc0q\xb4q\x92\x1b\xb7\xe5N\xed<GfmUn\xe6\xf2\xa7\n\x04\x88\xc0\xfe%\xe3#\x8e\x86\x9e\xe9~WG\xbf\xea6\xd7\xf2G\x1f\x99\x1ayn\xcc\x02zI\xc8\xc9\xeer>\xb5\x17\xa8\xf9\x9dJ\xd2\xc6\xe2\xd1^@\xae\xda\x94\x02[|o\x81\xed\x83P\x17\xb6\xdeE\xd4\xa5X\x05\x07p_\x9a\xb0xM\x12(5&<\x96\xb9\xe4\xf5\xe0(\xff\x00\x9a\xad^\xdd\x0b\xab\xc9\x19P\xec)\x84\x04c\xf35\xed\xac\x9a\x9e\x9e\xcf\xf7gI"\x90\x92VL\xfa[\x18\'\x8e\xb5Wew\r\x8fX\x17\x11\xc0\xd2\xc2\x92\xb8:7#X# \x1cm\xbdY^Z\xcdw\xd3<\x83"\xa4\x8e\x88}[~\\\x1c\x1f\x9a\xbf\xdfO\x0cP\xc8\xec\xc0(\x19$\xd6B\xd9\xf3d+\x8c\x8c\xb6\t\xf7\xa9\xc9\xbe\xfd1\x8c\xde\xde\x19\x86\xec\x85P\x15G\xc6\xdaf\xd6\xeb\x12\x00\xb1\x009\xe4\xf7\x1d\xfa\xd3\x9e"\xbfn\xaa\xd0\x15\x85\xa2Hu\x1c65d\xe0\xf6\xc8\xfd\xeb\xbd\x0e\xc0t\xc8\xe6\r(\x91\xe5#:\x7f(\xc6}\xf1Q\x16\x8f,W2r67\xe2C\xd3\xf4\xa9\x0b\x95*\x8cU\xf0\x14ey\xc7\xc74\x8a\xdb1\x95\x8aw\x1c\xd3\xb9\x17\x82\xaeI#\x82\xc3\x83\x9e\xdf\xadfm\x96A\x0c\xa8\xe1\xb1\xac\xe9\'\x8d\xcf\xfe\x1a\xbe\x91\x94\xc8\x85q\xc0\xc8\xa8\x01\x1f\x9aN\x14e\x86@\xcf\x19\x15\xe4hq +\x903\xbb#\x1f\x95?0\x84i\x18\xf0J\xf789\xf6\xaf\x15\x95%x\xff\x00\x89\x97\xa9\x1c\x12j6\x8ch.\xd8\xdc\x8e}\xf8\xda\x9f/\xce7\xda\xa2\n\x04\x93\x19\xc8\xed\xf4\xa5\xc4>r+2c\x07\x06\x9fI\x11*\x8aW\x05[\x18#\x18\xae\xe2\x95m\xd6M\xe5\xb6\xaa\x92\x01\x18\xe7\x14\xdaF\x89!Y\x1bLm\xef\xc0>\xc7>\xd5\xd6rW*2EB\xbc\r\x0b\x16\xe1\x97\'\x90:\xd2V\xb2\xac7PNT\xe29U\x8fl\x80}\xabJ\xbb\xf0\xdc\r\xa4}\xe6\xdd\x98\xc8\xb1\x86\xc6x`FH\xac\xee\xe8\x10\xa8B\xe78-\xcf@j\xd2\xff\x00\xa6\\\xf4\xbf!\xe5P\x16H\xc4\xb1\x90u\x03\xff\x00"\xab\xed:\x85\xbfPY\x84d\x92\x8ecpF\x08\xff\x00\xe6\xb6]A \xb9\xb5Y\x17\r\x1c\xd1\x0c\x11\xd0\xab\n\xcd\xad\xf4(\xee\xec\xee$\xf3\nH\xb2\x11\x1f<\x00\xbcr)\xee\x91\xaf%\xbe\x9f-\x95\xca9e\xf5@G\xa8}8\xf6\xa66\x1a\xa7\xdc]\x96GS\x1b\xb3\x00\xed\xc6\x0bu\x07\xfcV\xa6\xef\xac\xf4\xdb\xf9:t\xd3 \xd2\xc8\xe9:\x90F\x878\x1b\xf1\xf5\x15\x9e\xb5\xe9\xf7\xd6\x11_\xc7\x13\x1c\xac\x8a\xd17\xfb\x94o\xff\x00\xcdW\x1a\xdd\xe1wV\xc8tb\xac\x0f\xf8\xae\xcc^z\xac\xa1C:\x0e\x9d\rKj\xf2\xc1q4\r\x13\t\x13\x19f\x18\xfd*\x15\x0b+\xb8\\n\xcf\x18=\xbd\xaa\xadt[O,*\xe1\xd7>\x82\x0f;dU\xd2H\xd3C\x1c\xa5t\xb1\x1b\x83\xda\xa4\xf4\x94\r\xa8[\x80\xaa\x8d!\x08Y\xfaz\xbb\xfeU\xf4\xfd\xa4M\x05\xad\xbcL\xfb\xcaF\xaa[\xdf\x03\xad|\xb2\xec\xc5\x84\xa9\x19R\x9c\x9cW\xd2\x1e\x19\xd4\x86\xa9\xa2\xd9O\x9fX@\x8e?\xdc\xbcV\xef\xa0\\\t-\xe4\x8f\xba\xb0o\xafj\xc5x\x8e\x02\xb3A66 \xa1\xf8<\xd4\xf8\xae\x85p+\xb1W\xd5\x9b\xafh\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xaf\ra\x9e9\xd5\r\xe6\xba-\x11\xb2\xb6\xe9\xcf\xc15\xb6\\\xca!\x82i\x0f\xf0!?\xa5|\xc3<\xd2]j\xda\x95\xcb\xf2ds\xf9\n\xad\xea\x93\x18\xa0\x8dA\xc7\x99&\x0f\xd0\x0c\x9a\xb7\xe8\xd0\tn\x9d\xcf\x11!#\xff\x00\xc8\xec)\xa5\xa9\x12\xde]\xc88\xd8\xa1A\xae\xe1@\x92\xc8\xe7$\xb6zt\xe6\x84\x88A\x1c\xa3i\xfd\xe3\x92O\xf9\xafd\xde\x8aYH\x03\x03\x8f\x9fz\xc9\xf9\x98\x8cg\xf3\x02\xcc\xd8\xf7\'5\xb3Q\x968;\x10\x00\xfa\neu4a\xa1E@\x8a\x1f\x80\xa3\xaf\xc9\xa7\xf6\xd7w\xebj\xf0\xdb_\xb4J}LGbz\xe0\x1e\xf5X\x96\xe3t\xd1\x97|e\xf0\x05\\\xed,&}9\xee\x15J\xc4\x8b\xbc\xe0`\xf5\xc6*\x04\x12\xbd\xc1\xb91\x16\xd9N\xad$\x83\xa4\x0f\x83\xb0\xa9\x13\x08UbYB\x90XcV\xe39\xdb\x9e\xf5S\x8e\xc1\x91\x9bsorrY\xf9\'>\xe7\xde\xa5\xac\xed\x95\x07\x9b\x8c\x91\xc0\xe3#"\xbae}\xe5\x88\r\x95\xcfZR;\xad\xd1\xa8V\xc8\x07\x07\x1d?*\xcf\xe28\x18\x8c\x10N\xeb\xfa\xf3V%\x99\xc0\xc6>i;\x85\xf3\t!\xf0q\x81\x8eF}\xe9\xa1\x8c\xee\x1c\x1c\x03\xdb\xa7\x14\xeaK\x92\x99l\x06\x03\xa8\xc7?\x15\xdc\x08$`H8_Q\x1d\x8dW>\x89\xa5(\xad\x82NN\xdf4\xfa\xb1U\xc9\x1b\x01\\\xa6\xe5`FKm$\xd7\xa1\x99\x9b\x87\xc1\x03\x82y\xfc\xa9]\xca]\xc2p@\xc8\xda8\x1e\xc2\x9a\xc2\x04N\xea\xe3s\xb3\x02\xc0\xf1\x82;\xd49\\\x02\x00\xdd2w\xce\xdf\xe74\xea\x9c\x82{\xe2\xa7\xf4\xcd\x12\xf3RlC\x1a8\x0b\xb9\x898\x03w\x03\x07\xe6\xa5O\x84uh\x80\xc4\x11\x9c~ \x1c\x12q\xd3\x19\xa6\xda\x07\x88\xd7F\xb8c0\xfd\xcc\x80\x07\xc0\'i\xe4\x06\x1e\xf5\xa7[x\x83G\xb8\x8c:_\xdb2\xfb\xf9\x83\x8f\xaezV\xbf\xa0\xf4\xbf\x0e\xf5\x0b@g\xbdx\xaerK\xa3:\xa9\x00\x9d\x88\xc8\xe3\x15\x97\xeb\x1dS\xac\xd8\xdc\xe2+Tx\x08\x1a[I9\xf7\x07\x07\x9a\xc7\xefl\xae,\xf7G,R,\xe3\xd5\xb5\x86\x01\x1d\xb1M\x04\x0c\xcf\x14\x8c\xec\x14\x0c\x05\xec>qW\xcf\x18\xeb\xfa5\xe46\xd6\xd6\x8f\x14\xf7\x0b0,\xe9\xea\x11\xafq\xbb\xa7>\xd5Y\x10H\xf8\x91[\x05W=8\x07\xdf\xf3\xac\xcfW\xb0\xb6\xb7\xeaw\x16\xf6\x97"\xe9#\x08C&\xe3}\xf0H;\x91\xde\xae\xfau\xf4\xf7\x16P\xcd<\x06\x07r\xc0\xab\x7fQ\xf0i\xbe\x04i\xeb`\xc0\xf3\x8e\x99?\x9f\xf5\xa4\xa3\xc2\x92\xb2\x1c+d\xe1GA\xdc\xd3\xb7\xb5\xdeA;\xb8\xf6#\xf5\xa4cA\xe6\xb3\x148Q\xe9os\xdcb\xa22J\x1d=!p1\xb9\xed\xdf=\xcdK\x0e\xa5[|\xe6\x93B\xd2K\xe5\xaf\xf0\x8c\x1f\xe2\xcf\xcdz\x96\xcb\x1b\xb4\x91\xb0F\'\r\xdcg\xa7\x14\xf2\x1fW\xf0\x14\xe0\x12\x17\xa7\xeb]\xc8UyT\x07<d\xf0@\x1d\xb8\xef\\\x11)B\xef ;\x92\x1c\x0cc\xe9\x8d\xe9&V\x0cT\x0cdn?\xcd6y@\\n%\xb3\x8f\x8f\xd6\x88\xd5\x899F\x07\xf1\x100:\xf3\xda\x91F\xd8\xa4\xba\x8f\x81\xedN`\xe5\xf7\r\xa0{\xe6\xa2\xac\xfed\x88Ks\xc2\xf7\x03\xdc\xd7XhV\xc0\xfb\xd3\xf8# \x06tPO8\xeaqP^#\x9e3\xf7,\x8c\xb7\x9b\x9fWP;\xd5\x80\x1f6>Q\xb3\x91\x86S\x8fO\xc5S\xfcE\xb4\x1beEm\xef6\xd4P\x0eN\x06\x7fZ\xb3\x9d\xb1g$q\xe0\x89\x15w\xeeN}\xa9\xab0\x1a\xe5Y\xb6#?\xd2\xa5\xac\xdb\xcf\x18O\xe1\x0b\x9e\x0f9\xf6\xf9\xa9v\xb1Vd\x0e\xca~\xbd\x0f\xc5E\xda\xe9\xda\xc6\x95\xf7Y\xee\xadv[\xcf\xb47BF\xee\x99\x1d\xaa\xcac\x0c\xa5\xcbd\x8cs\x8eG\xfc\xd3\x96V\xf2"\xb2\\[:J\x85II\x01\\/ \xe0\xf6"\x99\xb8\x9du\x86\x8aUdl\x80\xc8Co\xc1\x19\x15\x08\xd6\xf7\x16w1\xcbk!\x89\xd4pW\xdb\xdb\xe4}jD\xc9{}!\x96\xeas+\xc7\xc0\x18\n\xa0\x1e\xb8\x1e\xf5\xc3m\x0e\xca\xa7,N\x17\xb3`\x1e\xff\x00\xda\x9d\xc7\xb9Q\\)\xdf\xce\xee\xe3\xebK\x89"/2\x89$\t\xac\xbbF\x1c\x94\xc8\xd8\x1c\r\x89\x1c\xd3R\xc8HF(\xa5\xc0\xd2\x1c\x81\xab\x07\xe7\x9cR;\xc8\x86T8\xf5\x0cc\xb7\xe7Lf\x99"\x8b-\x90\x14\xf5\x1c\xe7\xe9O\xe4\xc3"\x93\x13c\x9d\xdc`\x9fo\xca\x98\xbcm\xe9\x0e\xf8\xc0\xe9\xf1L\xdc\xb4\xa1Qc\xf5a\x02\x86\xc6\xd8;\xef\x9c{\xd7a\xd3\x9c\x91\xdf$W\xb1\x9c\xaeL\xa0\xe5y\xe3\x91\x9eE/\x14G\x1c\x1c\x1c\xe4\x83\x81\xc9\xfe\xf4\x9d\xa0\xc0 )\xc8\x1d\xc6s\x8a]@q\xb5\xbd#\xf9\x8f\x07\xf2\xcfj \x01\xe3\x89\xce\xecA\xc6\xe4~\xf4H\xc43\x01\xc6iIP\xf0H\xeb\xc9\xc8\xc7JF5\xc6\n\x85,\x0es\x9c\xfe\xb4\xee,:\x8d\xd9\xe9\xd7\xe4\x9e\xbfJ\xf5#}\xa5\x08\xce\xd6\xc1>\xc7\xda\xa6<:\xde7S\x90\xc3l\x0c\xee1Lk\xd2\n\x9e\xdc\xd7\x88\x04\xa4erH\x05F:\x91]\x92\x12F.\x99l\xed\xe0\x1e\xfcW*\x8c\xa7rL2\t\nG\xeb\xc0\xaf\x0c\xac\x98V$\x929\xeb\xc8\xcf\xf6\xa7u\x05@\\\xe9l\xe7V\xc4\x1f\xf9\xa6\xf1\x93\xe9\xdc{w\xa7!\x8c{\xb6\xe5[\xa9Q\xf3\xda\x80\x0b\xa1W\nN8$\xf4\xef\x83\xf4\xa2\x06\x8e@\xdbH\x00u\xdd\x9e\x0f||S\x90\x9b]\xb8\xc6A\x1b\x863R\xe3O1U\x96L\xc6A\x18\x1b\x8d\xe9\x86m$\x82=_<\xd71\xa4d0\xe3\x8e;~\xa0{sI\xcd\x12\x8c;\xf0N\x179\xc6p}\xa9\xca\xeeG!p\x07C\xc79>\xdd+\xc9\xedd\x91\xe0M\x9f\xbd\x90\xed\xc3\x02\x13? \xfbu\xa9M\x17\x99\x1e\xd1j+\xb61\x8c\x9c\xe0c\xe6\x9b\x12\x00\xe3/\x80FsQ\xdb\x1a\xf0y6\x99f9\xda\xaa9\\\x1cu\xec*DxB\xeaU/%\xcaF\xc7\xb6\x0b\x0f\xa1\xab\xa6\x9fe\x06\x9dn\xb1\xae\t\xc7\xad\xfb\xb1\xf75\xed\xe6\xa5kg\x11\x92i\x15W\xb6OS\xec\x07z\xd0G\xe1^\x9c\xb6\xc6~\xb1(-\xa0\x17P\xc5#M\xbd\xf3\xda\xa9d\xeb\xb7o7\x95a\x1f\xa7V\x03\x11\xa9\x9a\xb2\xfbh^\xca\xfe[IG\xae\'\xc6q\x9f\x9c\xfd\rY\x19\xd3b\xb1\\\x8c\xe3\x1e\xff\x00\x14\xceb\xf7\xf7\xb3^\x95 :\x85Q\xc6B\xa8\xeai\xda\xae\xe4\xda\xd20\xc66\x81\xdf\xe4Vg\xa6[\xfe\x19n\xa1\x8bx|\xd7\xf2\x19\x86\t\x8c\x1fNs\xf1WW\x12\x19|\x97p\x03\xe8_0\x03\xc3czFEM\xfb\xc9`\xdc\x021\x95\\\x0c\xfc\x0f\xce\xbb\x81T\xb3\x0f=\x88\xf5z\xb8\xe0\xe2\x9b\xc2.Hd\x9d\xc8q\x8d\xc3\x82?\xadH\xa9\x11\xa7Py\xe9\x9c\x13\xf4\xff\x005.\x02&q.\x86\x8cnH`A\xe7p@<\xd3R\x12\xa3NCv\x18\xdcW\xb1D\x80\xe1\xc8`\xcb\x86\xcf\xf7\x06\xbbt\x05r\x08#\x19\x0cNs\xcf\xb7\xc8\xa4?\xd5rXm9\xc1?\xf1N\xa3|\xfazo\x1cn\xf7\x1d\xb3\xf3S\xa1h\xdf)\xa7\nr\x03\x1eO\xebQ\xdfP\xc1\xce\xfd\xc5G\x8f/+\xb4\x8d\xacs\xe9\x04g\xe6\xbd\x11\x07?\xe9g\x9d\xc0\x11\xdf9\xe6\x9c\xec(\x1fw\x188\xc0\xe9\xefG\x94T\x10\x01\r\xbb \xe7,;\xe4\x1e\xf4\xcaDv\xd4\xa0\x01\xca\x81\x8c|o\x9as\xcc\xf6\'\xe0\xe6\xbd\x91U\xdb\xa9\x19\xc1\x00p8\xf7\xcd \xf1,e\x8a\xfaCz\x89Q\xc1>\xd8\xf9\xae\\H\x81\x9aIK\x8e\xbc\x0ey\xed^\x06\xcblh\xb8\x1d9\xc1=\x81\xc8\xa5<\xa8\xccu\xa6\x87\'b{~\x99\xc0\xa1U\x80\x18l\x8f\x8f\xf9\xaf\x0b\xe0n\xf3\t\x0c\xa7\x8c\r\xa7?=i\xab\x9c\xe78\xc0\xe3\xb7\x19\xa7\xa3j)\x1e\x96uB\x00#;y\xc6~i\xbc\x85A\x0b\xb8\xf2\xa4\xf4\xee>\x95\x1el\x98\xf2\\\x01\xdcg\xdf\xb6\xe7\xde\x9dB3\xb2\xfd\xe8\x0c\x81W\xd0\x03\x1c`\x0e\x08\x1d\xc0\xa3p-\x93#\xff\x00o\xd7\xdcW\x1eP\x81c"=\xcc\xf8\xc1&\xbbX\xdd\xb9\xc3g\xa7L\x8f\xcb\xda\x93\xaeR\xca\xa5p\xc3\x19P\x0f\x1f]\xb7\xa5\x9d;\x90v\xf75\xc8v9\xc8!\x1c``t\xfc\xab\xb2\n7\xb7\xa7\x19<\x86\xe2\x93\x91\xc3p\x8d\x90I\xe3\xd8\xaf\x07\xeb\xf5\xa5\x93\'\x87$\x92} s\x8f\xca\x9c\x8d\x839@\xc5\xb1\x8c7o\xfc\xf6\xae\x1d\x808\xc7;W1\xbf\x967\xe3v:\xa8=q\xeci\xdcr.\xd3\xb7;q\x9d\xa7\xb7\xc1\xa6O!\x88\x12\xe9\x96$\x85X\xf9\xc8\x1d3\xf3^4\xad\xb9\x08gP\x00>\x9e\xfe\xe0\xd3\xb1\xce!$j\xe0gN0w\xef\xbd%\xa3\xd7\xbe9\xef\x9d\xb6\xa7\xcd\x19\x91N$\xc7\xab8\xcf@;\x13I\xb0X\xe3#\x0b\x82rp\t\xf8\xcek\xa4\x90\xb9\xcey\x1d0:\xfdi\x9c\xf3I\xe6/\xef:g$\x0c\x7fCOM4Q\xa7\x98\x14\x92} \xed\xdf\xef\xfbSh\xae\xcd\xa7<oK\x10p\xa9\xbb\x1b\xf9T\x03$\x81\xd6\x92\xb9\xb4\x88bY\x17\xd2G\xab\xb9?\x974\xfa\xde1(\r\xb5\x1b#\xf1\x11\x9e\xb5 \xb1\xc2\x8a\xcd\x90[9$\x0c\xe2\xa4Eg\xf8\x98\xcb0]$\r%\xb7\x03\x1f\x07\x9f\xb54\xf7^K\x80\t\xcfp*\x9b\xf7;\xf8\xe6x\xd2P-\xa4\x19$\xe42\xe7\x8c|\xd3\xf5\x8b\xee\xf1,d\xa30`\xa0\x0e\x0e\xde\xd9\xcf\xf7\xa9\xa7\x8e0\xcf\xb9\x99\x8bc\x81\xce\x07\xbf\x1d\xf9\xa63\xc3\x1c\xf0\xecG\xc3\x15 1\x1c\x93\xd3&\x99n\x9d\x15\xa8\x95\xa19\x90\x86\xc2\xb3\xee>\x00;\n|^4\xdaC\x8c.FH]\x8f\xc9\xa5\xectg\xbae\x96\xe1\xb6\xa6r\x14g<\xf4\xcdKI\xa3\xd863\x16H\x1c\x1c\x9c\xd4\\:\xb9\x85\x92+\x95)\x95\x18q\xf8\x0f\xe7\xd8\xfc\x1a\x98\xfb\xece7\x16\x18\xc7Z\xd3\xf4\xabn\x88\xd6\xcc\xaa\x89+\x8d\xe5\xf3@.\x1b\xe4\x1e+9\xd4.:\xb2\xce\tw\x8dN\xc9\xe5\x9c.>\x08\xe6\xa3\xf4\xfd\x1a;=I\xe6\x07ryd\xaez\xee<\x7fAVf\x99cRX\xf4\x15I\xbf\xd6n-n\x15\x965\xf2Dy\xdcI\x04\xb18\x18\xc6\x7f\xadF\xcf\xa9\xeb7N\x11a\x8a\x14n\x8eX\xb1\xc63\x91\xd0S1\xf5n\x97\xd2\xbf\x11mmo)a)`\x88\x84\x82[\xbe{\nvN\x9b\xd4z\x89\x82i\xe5@<\xb0\x0b3\x01\x80>=\xea[V\xb9\x13\xc8\x14\x11\xc1\xc99\xc6\xdc\xd4k$awK\x96-\xc2\x9fn=\xfb\xd3bF\xec\xc97+\xd0\x0e\xe7\xde\xb8i\x96e\xc8\x18\xc6\x06\x18\x7fQ\xf3Y\x9b\xdb\xf1<\xf2K&\x92\xec}(H\xed\xb6\x08\xad\x1d\xad\xb0\xb7\x86(\x90\x9d*7a\xf3I\xcb\x08%\x0fD$\xf5\x00\x03\xfaS\xd9\x11\x9e2\xb8+\x83\x9cu4\xd9\x15\xd5v2\x8c\xe4\xe1@\xeb\xf1\xdcqRI\x1c\x803\x17\'\xd3\x85\'\x07<|THc\x0e_\x08\xe0\xb8\x01\x87\xb6\xdcg\xb5H\x92Lh\xf5\x03\xa4\x9c|\xd4s\xa2\x86\xf5\x0e\x83\x04\x81\x9ei\xbf\xdem}6\xee\x01,\t]\xdd\x8f\xb84\xf9\x19J(\xfcY\x19t<\x9e=\xb1I\x8bH<\xdd\xd23\x1fd\x1dq\xf3\xedL2L\xdaL\x06,\xb1\x01\xb5\xe3\x188\xce~\xd4\xe2\xba\x00u\xea\xdb\x8cs\x91Q\xe9m:\xce\xac\x15\x86\xe5 e\xba\x0f\x7f\x9a\xeac wVoP9\x00s\xf1\xc7\xbe*BA\x04l\x0f\x96\x06\t\x01\xa4<\x8f\x9cTu\xda6\xc9\x8a\xca\xd1d\xe3r\x83\xd7\xe3\xf2\xa6eT\xb7I\x0298b\xcc\x03\r\xb6\xf9\x0bOG!\x95\x94\x91\x8d\xb0\x0e>~\xf4\x92\xc2\xae\x8f!\x8c\xee-\xb9\x81\xc8\x18\xc7\\\xf6>\xf4\xce\xe0F\x84K+0\x1f\xc5\x85\xc9\xc1\xe0\x10\x05Kg\xf7\t\xb1\x94\xbf<\xb7p?\xcf\xbd5\x98FY\x15\x80\xf4\xfc\xd3s*\x98\xd7t9\n\xc7\xd8\x93\xbe\xf8\xefOF\xe7Q\xcey#\xe7\x03\xebQ\xb3oI]\x06q\xb7*z\x92)4B\xc2o0n\xc2\x1f\x8c\xf1\xdc\x9f\xf1OgP\xbc*\x0c\x85\xc7\r\x82y\xa6))\x13\x94\xc1\xcb\x03\x91\xd4~UE9H\xee\x00v%L\x83\x0b\xc8\x19\xe0|\xefR\xd5\x89L\x8d\x8e7\xad7G}\xfa-\x92\xee\xc80\'\xf6\xaa\r\xde\x93,\xfa\xbc\xf6\xb0D\x1c\x93\xb9\x14`aO\xb9\xf6\xa9m\x17W\xb7\xb2F\xb3\xb8\x94&\xc2v3\x1c\x02\x87\x91\xd7\xdb\xa5-a\xaaE.\xbf4\x90\xb0h\xfe\xee\xa1_\xb3\x10\xdc\xe3\xe3\x9a\xf4\xc9&\xe9\xbd[\xa4\xf4\x18\xa4\x9d\x15\xd6x\xa3e\x04\x16_I\x0c?j\xc3\xc4\xb7\xbd3\xa8\xf5\x89\x12"T\xc4\xee\t\x07I:\x81\x07\xf7\xaat\xf6s\xe9s\xaa\xcf\x1a\xefL\xe7\x9c\x86\x07\xb0?\x14\xc9\xb6\x16\x8dI\xdc\x1c\x1c\xabs\x8c\xd5\xbb\xc5q\xa9\xb7[\x82yIGn\xa1\xb8\xc5V \x8f\xce\x9dv\xe00F\xca\x9f\xe9\xcdf\xba\xcd\x98\xe9\xbdE\xed!`\xc9\x85\x91\x03~b\xacq\x9d\xb9\xe3\x15\x7f\xd3/\x8d\xfd\x92N\xe3\x0f\x92\xaf\x8e2\xbf\xfc\xd3`\xab\x02\xc9\x1a\x81\xb7<\x0e\x9c\x9aU\xb4k\xf4\xb77\xb1\xb2\x15\x03!\x01\xc3\xe3\xdc\n\xe2B\x03\xed\x9b\x81\xbdrG\xd7\x07\xebW\xb6\x96%\x89\x15YJ\xec\x18?\x14\xff\x00F\x82\xdb\xa9]\\G,\x8c\x86(\xc6\x8c\x1c\x10\xcd\x9d\xf1\xf1\x8ak\xa9\xdeMe\x14-\x1a\x06\xd6\xfe\xac\x8c\x82\x07o\xbdS\xb4\xe5\x97R\x93law\x15;\xb9\xc7\xebZ\x7f\xd9\xe5\xc4\x96\xf2\xdf\xe9\x92\xb6Y@\x90\x7fcY\xd7\x87\x00Mf\xedG\xe1\x05\xb6\xfc\x8c\xd5\xd7E\x94\xda\xf8\x9a\xcd\xb7`L\n\xe3\xdf<V\xc7\xc3q\xb3[<\xcc\xc4\xb8\x9d\xa3ob=\xff\x00Z\xcd\xf5\xe9\xb3+A\xa4\x04\xf2VE\xf7\x04\x7f\xc5l\x82\xbd\xaf+\xda\xd3Vb\xba\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xab\xbe(\xb86\xda-\xeb\x83\x82Wh\xfc\xeb\xe7X\x14\xac\x92\x92x\'&\xb7\xdf\x1a\xe7\xf6\x1c\xf8\xfea\x9a\xf9\xf9I\x17,\xa4p\xce+?\xd7d\xd0\xf6j{\xea#\xeb\xff\x00\x82\xb4}\x01r\x97g\xbeT}\x80\xff\x00\x9au+\x96v \x10\x00\x02\x9bL\x1cFI$\x0ct\xa9\x00#gn\x0e\xdc\x9e>\x95\xdb\xda<\xb1\xc8Y\xb6\xaa\xaf\x03\xb9\xcfAY\x89\x91\xa5\xd4\x14j\'<\x7fz\xd1\xa4\xaa\x9as\xb0\x18\xe6\xab\xfe\x11\xd1\xadu_\x10\xea\x13_/\x9d\x05\xa4bA\x1fb\xc4\x80\xabZ\xa6\xa4\xd1Zhw\xa9\x1a\xa8\x12\\2\xa8\x1d\x147?\xa5d\x1e\x19\xd5g\xb0\xd4\xef\x028T\x9e@\xb2\x923\xf8\x0e@\xf8\xfa\xd5\x9eMB{\xfdB{tGh\xa4\x8c\xb9#\x95\x0c\x9d9\xa6:gV\xb2\xb3\xf0\xfb,q\xe6\xeaW\x9678\xf5e\xb3\x8d\xfb\x801Pn\xed\xeeg\xea\xd1\xb3\xc8\x7f\x0e\x8a\x8e\xa3;zy\xfb\xe6\xa2\x04\x8c\t\xdd\x91\xce3\xefH\xc5\x1a\xe1\x82\x8criic$gn\x181\x04}:S@|\xb2U\x98\xf5\xecO\xd6\xb1\xcd8}%\x88+\xa7\x9c\xfb\xd6\xa1\x1bm\xa9p\x08c\xb3\xf1S\xc2\xa5aoP\x0cN\t\x07\x04Tp\x95X\x81\x8fW\xd38\xed^\xb4\x8e\xb9R\xcc\xc7h\xc9\xeb\x8c\x1a\x88\xb71\xa2\xbe7\xc8 `\xed\xb8\xfe\xb4\xf9$\xe2\x9f4\xa5`\x19s\xbc\x13\xf9\x0fs\xf4\xa4\xad\xa5\x17\x11\xac\x9eb\x91\xd0\x826\x93H\xc7$3\x07F\x8d\xb6\x10r?\xe7\xebN U\xf2_+\xe8\x04\x01\x9e\xd8\x14\xc0\x94\xb0bX6\x10\xed\x93\xdb\xb9\xa5k\x00|\xe7\xfa\xd39\xb14\x80\x8c\x95\x1d;\x93\x8f\x8a\xe8Y\xc3:\xf1\x12\xa9\x18\x03<\xe7\xdf#\xde\x9eI\x02\x85\x05O5\xd5\xac\x8c\x8e\xa0\r\xb9l\xf1\xd3\x1f5\x1c>\x8f\xfd\xd0?\x88}X\x19?\x18\xfaS\x9a\xb2=$\xed\xc59\xb0\xd3\xe2\x88\xf0A\xe3\x00\x1cq\xcfJ\x9d\xb6\xb6\x92\xeeo*$\xcb\x13\xb9\x8fl{\x93\xd8Td1\x82\xd26\xec\x928\x03\xa0\xc7\xcd^\xfc7\x1cb\xceI\x10\xaeZL>\x0f#\x03\x80\x7fZ\xd0t^\x9e\xbdB\xee8\x99|\xb4\xdd\x9c\x83\x92B\xfb{\x13\xfd*\xb3\xa9^\x9bKw\x94\x1dM\xb2\xa8<d\xd3\x8b/\x0c\xda\x8f]\xcc\x8d!\xea@\x1bG\xd3\x8ej\xa9\xadZ\xc3o\xaaM\x05\xa3\x92\xa8\xaa\xdbI\xfc$\xf3\x8a\xd0\xee/b\xb4\xb7\x92gm\xa9\x1a\xe4\x9f\x7fa\xf55\x96\xae\xf9\xe6\x92GoT\x8c]\x89\xea\t$\xe3\xe9V\xde)\x83\xa6Z\xc3aein\x8b#I\xe6;\xab\x7f\x13H\x18\xe4\xfb\x93\xdf\xda\xaa\xfa\x1c\xd7\xb72\xdc\xdcO;\x14U\xd2\xaaG\xa7\'~>)rAQ(\xdc\xc7\x1f\x1f\xa56\x12\xe3\x01"$\x03\xed\x93\x93\xf3N\x04\xc8d\x03\xaeA\xed\xc7\xd3\xf3\xaf\x0cl\x8e\xc5\x03z\xb9\x00.q\xfaw\xac\xb4\x85\x9c+\xa3\x8c\x06\xc30\x00\x90~\xe7\xb9\xab\xf5!r\x18v\xdb4\x98\x861o\x92\t\r\xdd\x8fS\xedJ\xdb\x84Y\x02\x15\x03\x1c\xf2;u\xe2\xbb(\xdbWj2\xb6\xe0\x1f\'88\xe6\x9b\x85\x90\x15bv\xa8ln\x03\x83\x8f\x9fj\x8d/\xf0\xda6H\x8f\xa7\x19\xc2\xec@\xf98\xa3:\xd5\x81ns\x8d\xea\xcf\x04\x11\xa4\x0e\xfep$\xa9![\xe7\xb6im\'IB\xc6\xeeh\xc0bO\x94\x08\xe5\x14\xf5\xe7\xe6\x9b\xd9\xceZ\x19\x10\x08\xc9)\xe8b\x0e~\x06E(<Ak\x04g\xef3\xac.\xab\x92\xad\x9e\xde\xde\xf5\xb8\xe8\xf2\xf4\x94\x96\xd2{\x97TH\xe2&5?\x97X8$\x93\xdcv\x15\x9d\xbd\x17\xc69\xd2\x00\xc5\x9d\x80b9\xd3\xf0\x05/\xe2k\x9f.\xc9`\xde\x0bN\xea\x8a\x0f\xb95\x15mp\xf0lfb6\x81\x81\xf2\x0e2A\xa8\x1b\x9b\xb9\xb5\xab\xf8\xae6\xb7\xdda\'\xcb\x07\xf8\xc9\xe0\x9f\xca\xa7\x14\xb3)`\xa3 \x8eO\xeb\xcdW_\xf5C\x7f\xd5nn\xe1fUTT\x84\x9c\xfa\x95rs\x8f\xa9\xda\xa5\xdaZ~\x12\xc6\x18\\\x02\xc4\x96q\xecOj$b$fub\x19\x8f p3\xcej\xca\x9arK\x04`\x06\x0e\x14\x12\xde\xf9\x1c\x8c\x9a\xae\x96\x00\x1f3s\x03\x81\xe9\xfcX\xab\xae\x8b$\x97q\xce^\x15X7\x05\x8b\x9fS\x05\x1c\x96\xa9\xfd\x12\x18o.d\x85\x81f\x95r\x01\x19#\x92rG\x03\x8d\xea/R\x99\xe0\x81d\x07HC\xb9\xcf=\xb6\xaa\xdd\xdc\x08\xc0B\\\xee\xc2\x9cw\x00q\xcd0:z\xaa\xbbg\x07>\xa2{\x8fz\xb9\xeb60\xc1nn\x94\x90\xa8G\x98\xbd}&\xa1\xc3(\xc8Q\xc1\x19\xc0\xff\x00\x14\xefQ\xe9\x8b\r\xe4\x91N\x8b\xac *F\xf9V\xce\x08\xfb\xe6\x91i~e\x81^&:I \xe7\xdcr*\x1e\xda\xd5\x17\x04\x90\xa5\xba2\xe4\xe3\x8f\xf3^\\\xda\xa4\x1eZy\xa0\xa3\x02U\x8f\' \xff\x00\xcdY-\x92\xd4&\xe9\x11IP\x0f\x07\x9aV\xe2\xc9o\x84~B\x85\x11\xee\x1c\xf22@4\xdf\xfa8\x96\xcd\x92!\x139\x00\xaa\x0c\xe4\xe4\x8dY\xe3\x9cR\x8d\xfe\x99\xbdz\x82\xef\x92q\x8e6\xaa\x9a[\x93\x9c\xb8m\xa7\x1b\xba\x1a\\oBc\xdc\xa4\x9erp\x01\x03\x9e\xbd\xe9{\xab9\xadd\x88:\x03\xea$c\x9c\x8aL\x97;\x0b \xdcq\xc0\xe8q\xc8\xcf\xc5W\xacf\xdd\x9d\x1a\'\x89\xd0\xe1\xb9\xdc\x11\xc7\xefR\xbc\xc1 V\x0c\x19H\xdb\x8ao)C\xb4\xbe\x06\x0f\xe2^y\xfa\x0e\xb5\xd1\x8c\x9c\x93\x83\x91\xc7_\xf3J\xb4g\x1c\r\xb9\x19\xce\xdf\xce\x9b\xa1W\'s8$\xe3\x00py\xee;SD.\xbfX\x04\xb7\x1b\x81\xb8\x18\xde\x96\x0eWc\xb0\xa7PD\xb2*\xb0!H\xe0\xb7\x1c\x8cf\x9d\xcd\x1c\xb2\x04\xda\xa3\x81\xb8\x81\xd3\xeb\x8am\xb7c\xe3\x04\x8eq\x9e\xa4\x83\xcd=\x8aq\xea\x0e\xea3\xc1V\xe8EO\xb6\x10\xe3\xca|\xa1b\x03\x10}\xb7\xa8\xd2\x16\xc8a\xbe8\x14\xa7\x87$\x13_\\\xb3\x10L(\xa1G\x07\x05\xb3\xce\x7f*\xb7j\x06W\xb4\x90\xa9\x05\xd0\x16L\xfb\x81U\x1d1`\xb5\xd4e\xf2\x9b1\xdc\xa2\x94=0\xcaz~y\xe2\xad7\xb3\x18\xac\xae_\x1c\x88\xdb\x1fR8\xad\xb7\x87\x8a\xc7\xd0\xae\xa3\x9d\xc6\xa8\xda\x7f5\x94\xe7l\x92\x0eG\xfd\xb8\xc5f\xba\xb0f\xea\x90:\x03\x86\x11\xe8\x07\xf4#\xf5\xac\xc6\x1f\x11\xf8\x8fTv[e\x82%\x1czWq\xfdZ\xa4a\xd1nf\x9a;\x8dJ\xe6Y\x98s\x82q\xb4\xff\x00\xc7\xd2\x9di\xd6\xe9\xa6\xda\xaa1\xcc\xad\xb9\xa4\xda\xa7\x1fJ\x91YY\x87\x12\x0e\xfe\x9e2+\x17kd\xf71\xc0\xddZ\xea\xe6\xeel+\xf9-&cBw\x19\\\xe3#\xbdif\xb8\x8e\'qeo\x0c\x11\xee\xba\xd5p\xcc>\xbc\xd17\x1cmU\x18\xf6\xce\x7fJEeuu\x8cm\xf5\x02Kg\xb8\xfav\xae\x1a\xe903\x18\x03q\xf5n\xe8?:\xe5Z6\x8f*\x14\x8c`s\xc1\x15=\xee\x15\xa5\xd5\x1c\xa3W\'\x9e;\x8d\xc7\xf4\xa8\xca\x84/\xa9\x0e?\xbdt\xc7w\xac\xa0\xcep\t\xeeG\x7f\x9a\x8f\xb9\x9d\xc4\x89\xbd\x95\x93o\x18\x1d\xaab\x08\x94\x906\x90\xc0w\xef^Of\xfei\xfd\xd0n\x07|\x0f\xad3qkq<\x00\xa3\x11\x96R\xd8Rr~@\xe6\xbb\x1c\xd1\xa4\x98ll\x0e3\xb7\xe9L\xadL\xad\x18\t\xe8 p\x0f\x7f\xd6\xa4\xa3\x12\xb4M\x18\xdd\xbd\x0f<\xf4\x07\xfei\x84\x8e\xd1\x10\xa1\xb1\xd8{U\x82\xc6\xc5\xe7\x8bt\xf32o\x1c\x01\xd4\x8cu53\xa5@\xf7\x0f\xf8x\xbc\xc9\x1d\x13\x0cA\x00\x01\xfd\x8dG\xbc\x9e8S\xcdr\xaa\xac\xdbm\x93\x9f\xefQ2\xb3\x91\x87@\x8e\x06==\x0f=i6\x95\xc8Q\xb8r\xa3\xeb\x8a[U\x8eM:D\x06o1\x1c\x10\x18\x8ex\xedQ\xab!\x95\xc2\xf3\x87\xc9\n~\x98\xa8w\x97\x0fmu-\xab3\xac\xc8UY\x0e3\xbf\x07m\xb7\xcd=\x00Y\xa1IT\x82\x84\x12\x18\x7f\xcd;v$.A=\x89=\xbe9\xaf\x15b\xd9\x86-\x8f\x90s\x8f\xa8\xf6\xafc\x97h\xc9V\x07#\x19\xe7\xa5vg#~\xdcu\x07+\xf3\xf5\xe9KI"r\x1d\xa4\r\x91\xf9J\x93\xdb\xdb#\xda\xbaC\r\x80\xc6\xfc\x83\\L\x81I\xcc\x84\xee !\x03\x91IG\x17\x96\xaepK1\xf4\xef9\xef\xd3\x8ehx\xd9\x8e\xf4rq\xc7\xac\xf0\xd8\xff\x00\x8a\xf5$\xc9$\x03\xbc\xe7\'\xfe)\xb2\xf1\x99\xb54x\xdc\xe89\xcf<\x9e\xf9>\xd4\xa1\x90\x98\r\x9f~\xd5\xe4\x86G \xed/\xb8\x9e\x08\xc7\x04q\xc7jN?K\x0e28\xde\x17\xa0\xfa\x83I\xfd\xe0\t\x94y\xca\t\xce0rs\xf3]\xc9.\xe6\x0e\xd2\x11\xdb\x1e\xe7\xbfJJ\xdcE!i\x03\x92\xca\xfb\xee\x0e\x06\x07\';}\xe9x*\x02\x90\x00"\x96\x99\x90\xa6\xd3\t*:a\x86\x0f\xf9\xa8\xf6\xb9X\xd1\x89\xca\x05\xc6\xdf\x81\xf9\xd2\xfb\xa4\x7f3a\x0c\x08\xe0\x1e*1\xadn8-\x19\x00\xe3\x8e\xbc\xd7.\xa6\xba8x!g\xc8+\xabH\xc0\xec7\x1d\x85*&\x85r\x1d\xc0\xdf8\xcf\xf9\xa4N\xa2\x92?\xfa\x8aH\xe9\x9cs\xff\x00zr\xb2\x16\xc6I,\xfd~\xbf5\xd7\xdc\xa0\x99U\xd6\x05FF\xc6\xdcr)\xc4v\x8e\xd8U\xc6G\'5\x15:\x7fX\xd7\x99\x8a\xc8\x1b\x1a\n\xe4g\xecO=\xa9\xd6\xbc\xb3\xc7\xa7\xd3\x8eA\xedK&\xec\x00\xa1\x98\x92\x07\\S\x91h\x93\x8d\xcc\xa7 \xe4g=Gzs\x14\x0b\x12\x80\x07N\xbfO\xf1O\xe1l\x9cm\xf4\xae\x01\x19\xadM\xb7KV\xd2\x97\x04\x1d@z\n\xe4g\x9f\xda\xa9\xe6\xbf#&1\xc7|\xe0\xd3hcp\x008U\x03\xd41NS\xa7\xa5\x88\x1f"\x97\x94!\x0cKq\xd0\xfbS\x07>\xa6\xe8zq\x9a\xb2\xf2\r\xae\xc3-\x80w\xd5\xbe=\x868\x15\x10O\xe7\xfb\x0c\x91\xdb\xfc\xd3\x8fJ\xab*\x01\xea\xe4\xe7\xdf\xd8SW*#r6\x81\xeck\x96\x960\xa4\x90\xc4\x93\xcb\x0e\xdd\xb23L\xa4\xc1\x90\xe4\x9d\x8b\xd5~z\x8a\x8dqt\xa1F\x85C\xc8\n\x0e\xca\x0f\xf4\xf9\xa9\x10\xc6ru\x16\xf7$\xf7\xc5z\x7fx\x02d\xed#\x07\xb0\xcf\xb50\x96(!!\x1f\x0b\xea\xc9C\xc0\xef\x83\xc7ju$\xbb@ \x0c\x1c\xf0\x0fJ\xee\xc6\xc9og\xd8\xc3tQ\x90\xceO\xbfe\xff\x00\x9a\xaegi\xa4\x8a\xde\x14Y.\x1c\xe9]_\x97\x04g\xf4\xa9Z\xd6$\x92Y\x18\xacJ2q\xceG\xf7\xa67\x1a5\xce\xa5lC\\}\xde\'\xe9\xd5\xb3\xces\xd7&\xa3\xf5k\x0b\xdb\x18\xa2&\xed\xe7\x80\x9d\xa0\x1e6\xb68\xfe\xd5{\xb9;\xd8\xe3\x85^\x00\x1f\x15Q\xf15\xda%\xb2Z\xf9\x81^FV\xeb\xc8U\xff\x00\x9aW\x88:gN\xb2\xe9\xb7\xd3\xb4\x92\x89\x960\x04\xc2B5\xb0\xe1t\xe7N\t8\xc5E\xe9\xfdR\xee\xe2\xea\xdd\x00O,\xb9>^\x90t\x83\xc9\xcf9\xaa\xf5\xbc\xb2\x02\x7f\x1a\xe1yP?\xcd?\x8bcd!\xeb\xdf\xdf\xeb\x9a\xafB\xca\xae\xa1\xdd\xb0\x0eG9\xce)\xfcw*\xa5\x98\xa79\xe3p\xe3\x1f\x95y\x95\xafS@\xa8$e\xc0\'\x92r\x07|c\x8a\xd4\xb1$\x9c\x0f\xda\xa7-\x9d\t\x91\xd1\x8e\xd4m\xa7r\x9e\x1b\xaf\x18\xea)t\x91aicI\x1b{\xc6\tb88\xe3<T|w\xc2D\x04\x1c\x86\x00\xe0dd\x0fjY\xa4\x86+b\xe20|\xc7\x00{\xe0rNkE\x1d\xf4F0c\x9d\x07\x96\xac\xe5\xf2F9\x1b\x00O5\x1c\xa9$\xeaS\xea!q\xb7\xefKd(\xc7\xf2\xe0\x1f\x91\xff\x00\x15\xda\xa6\xf6w]\xc5\xb2\x06\xdct\x19\xebM\xa2g~J\x1c\x11\xd7\x90\xb9>\xf8\xedO\xe3\x06=\xa4\xb6\x01\\\x80s\x91\x9e\xb5"\xd5\xc4\xf88\xf4~\x98\xec\x0foz\xe3\xb6\x8e\xfb\xfe\xb9\xa4\xa4R\xa9\x80H \xf2OB}\xa99-\xbd\'l\xb9\xea}\x86>=\xf1K\xab\x80@Y6\x8c\xe4\x91\xd0\xfe\xb5\xe4\xa67\x7f.1\xdb$)\xfc9\xed\x8fj[\xf9,\x84\xe41\x18P5\x1c\xe7\xe3\x07\x7f\xd2\xb8\x1d\x83\x01\xc7rq\xfdi\x94\x82X\xc2\xe1\xf7\x15\x07\x85\xe7\xebH\xc8\xd1:\x87\x03\xd3\x8c1\xe9\x8f|\xd5\x82xV\xda\xddUF\xe7nY\xb3\xdb\x1d?\xe2\xa3\x8cq\x82\xf1\x98NG9\x1d\x0e{\xd2nm\xde\xdd\x8a4\xca\x0b*\xe46N\x96# \x03\xef\x81\xbd*+\x95q\xa8)\xd8\x9c\x11\x81\x91\xdc\xd42\xc6\xca\xf26U\xbbm=1\xee;\xd3\x01 \x12\x07\x0e1\'\xe1\xc7\xf7\xc8\xa9\xb9\xa1l\x10#-\xce2\xbc\xe7>\xd8\xaa\xbc\xc6X\xdb1\xc5\xb5W\x8f\xc2z\xfbc\xb5f/\xae\x05\xb6\x81\xbe\xadE\xbd\xfb\xeejrL\x8f\x9fP\xce\x06\xd56\xa8\xb3B\xff\x00x\x8d$\x8c\x8c\xa9#\x9e\xbd\xaa\x1ek\x91\xa5\xa2^\xa8bm\xdfkF:\x98\x9f\x8e>GZsh\xac\xe8\xe5\x95\xb7\xe3\xa7@i\xad\xe4\x1etEX\x82\xae\xc3\xa78\xf8\xfaU\xbc7\x86kXd\xc1\x1a\x10\x95rrr8$\xfc\x1e3P\x9d\xd7\\\x88H!\x8e\n\xf6\xc7qV\x0b\xbb\xfb}[M\x02\x02$2\x00\xcb\xf9s\xcdq\xa4\xe9\x9e\\2]L\x8a$9\n\x84\xf0\x00\x1dO\xd6\x9d\xe9V\xf1\xdaYE\x04`\x01\xc8w\xc0\xc9\xcf`OJ\x99h\xa2[u\x08\x99\xda\x0f\'\xae{\xd6\xbc[\x9e\xa1-\xa5\xf5\xd1\x8eY\xa3\xb6\x0b\xb6\xc3\xdcg\x9c\x91\x93\xf1T\xb1\xca\xb6qKo\x0e\xa5F\x94\xb6O;\xed\xf1\x81\xb5QomVf\x988\'vy\x07\x18?\xf6\xa6\xb6\x0f}\x1cw\x10H\xc2UO\xc3.y9\xab\x1d\xd5\xb3\xb9,\xaa@Pri\x08\xed\x82\xc0\x83g\xe2]\xc4\x9fj\x89oi\xe4\xdc\xc90\x0c$\x00\xe9\x90m\x9d]\xbeF\xfd\xead\xb3\xa4\xb1"0\x0c\xb9\x07I\xed\x8a\x80\xd3\'6\xba\xa8\xde@\xde\xa5A\xf9\xab\xdd\x8c\xad&\xa9\xa4\x00@"\xe7\x07\xdc\x8e\xb5\x98\xeb1\xbc\xec\x1e#\xb0\x86]\xa4pr\r\\\xfc\x08\x977Z\xdd\x97\x98\xe6B\x8cY\x89\xec\x00\xedW>\x19\xbb\x92\x19\x9a\xd7wId,\xad\xf4\xff\x00\xe2\xaa\xfa\xe5\xba\xca\x86\xe7 \x18\xe3 \x8f\x921\xfd\xeb\xe8\x9a+\xc1^\xd6\xe6\xb2\x15\xd5\x15\xe0\xafh\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xaf+\xda\xf0\xd1EV\xbcY\x17\x9b\xa2]\x81\xd8\x03\xfaV\t\x1ch\xf2\xb3\x1e\xaa\xd5\xf4v\xad\x17\x9f\xa7^G\xef\x11\xaf\x9b\xad\xe3\x90\xde]\xe0p\x1b\x1f\x1cVw\xaf\x82\x1a\xc5\xb4\xe7%\xc1\xfb\x0c\xd5\xe7D\x93I\xba]X\xd9O\xeb\xb5+\x10\t\xe7\x97l\x05\'\x9fl\xd2\xcbp\xaa\xe9\x13:\x90\xcb\xbb\x07\xbe;\xd27\x12\xc6\x90\\\xe3n\xed\xa4\x1c\xf4?\xf7\xa8\xb4\xfd\xf4\x10K4XS\x1e\x03\xf7\xe2\xb1\xed,\xc8\xeaa\xc1\x03\x93\xbe1\xc6\xf5y$\x83}Y\xed\x8f\xf8\xa8\xab\x0b\x16\x8fW\x9a\xe5\x10\x95\x13q\xfc\xa7\xde\xb4;\x1by\x96\xf1\x9f\xca\xc0\x11\x90\xb8\xe0d\xff\x00\x93Q:U\x96\xe8n\xb2\xa7\x82\n\xb6x\xfc\xaa\xd4\xae\xf0\xc1\xe5\xe4\x97$2\xe3\xe9\x8cW:oMkx\xd9\x988_\xfd\xc5\xfa\xf1\x8f\xdbj\x85w~$`\x01\x19\xfc\xa7\xe9U\xedV\x06\x8a\xe5&hq\x1c\x84\x06\xe78\'\xe2\xaa\xf7\x96\x92\xc2\xe3\xb8\xdd\xd4\xf1\xd6\xafw\xad\x14\xf1\xad\xbb\x15b\xcb\x8d\xc7\x8c8=*&KQq\x11W_\xdeFN\x08\x1c\x11\xeck5\xd6,\xd5\xee%0\xb19\xf5\x00\x08\xd9\x8e\xec\xa7\x1b|\x8a\xb2\xe9\xfdCB\xaa\xb9\xf8?N\xc6\xaa\x8bo/\x98YA\x0c\x9d\x00\xef\x8e\xe6\x9b\xca\\\x90\t9\xec*dZ\xf9Nr\xe7\x8e\x1b\x07\xa55\x96&\x89\xd5\xf06\xb0\xe3\x8e\xd5\x94\x98\xb0P4\xb2\x80N\xa1\x9c\xfd\xf1W?\x8a^u\x03\xb6\xd4\xc69&\x88\x93\xc6\xd2}\x86s\xf1R\xb6\x19pE\xc7\n\xc3.\xc0\xe7\x1fL\xd3`\x91\xca\xc8\x19\xb6\xa8\xfe!\xd7\xf3\xa0F\xea$T\x9b\xd0G\x19\x1c\nv\t\x9fNK\x07]\xc6\x92F\xe7\xe4\x1e\xd4\xc3^\xa6H\xce\x0f\xbdHr\xe8\xc4\xe3\xaf~\x0f\x1d\x05t\x88\x8b4j\x17\x0cF\xe23\xc9\xed\xc5C\xf9\xa3#ccf:\xf7\xa9\x18f>\x93\x95\x00r[\xae?*\xe8\x9e\'p\x18q\x8d\xfeG\xcdLK\x8c\xaeC\x0c\x1a\x96\xdf\xb5\xb9+\xff\x00\xb3\x92y\xfaR\x96z\x8d\xde\x9d$\xbfwu\x02O\xc4\xae8\xf8\xa8\xdf9\xdc\x9c\xbb\x001\x96\xc0\x1fL\xd2\xa1\xd5\x163#\x07\x00\x9eO\xb9\xefO\xc3\xd4\x0cn\x1e)\x1a6F\xc8n\x0e\xfbv<b\x91#G"\x94\x91U\xd5\x86\xeaw\xf9\xa9)\xaeu;\xd9\x90\xdd\xbcr  \xc6\x8a6\xc7\x9f\x7f\x9f\xce\xba2\x05f\xdaY;\x1298\x1d?Zb.\x02\xf0\x92r{\x8f\xec3I\t\x9f\x0b\x83\xb4\x9e\xa4rH\x14O\xd4\x11\xdb_\x9a\xec\xe4\xeaf\'Q\xf6\xc0n\x7f^\xd4\xa8\x8a*\x85UUP0\x00\xd8~\x94\xf5\xd8\xa0Vr[\'\xd4q\x9c\x1f\x7f\x81B\xdc\xban"B@\x00\x0c\x12:{\xd3]\xe04j\x17wvl\xf4?C\xd8\xd7\x0b#/\xd0\xf5\xe7\x8c{\xd4\x19\xaf$\x8c\'\x97#/\xb9\xc9$\x1f\x9a\x90$C\xce\rL@\xc1\xe3f\xc0$\xf7\xeb\xf9b\x80N0\xcd\x8eq\xb5y\x18?\xf7\xa6\x89w\x1aF\x8a\x0e\x07\xb8\xed\x9f\x7f\xf3I\x8b\x90\xbc\x81\xd4\xe3\x8e\x80\x1au\xaf\xa2X\xe2\x05\xf5\x12\x98|l2w<SZ\xc1-\xdb}\xaan\xd9d\'\x0e\xf9e\xc0 t\xfa\xf1K]\xacmo!\x90#\x10\x84\x02Gj\x8c\x8ex\xc8\x8c\xee]\xca:\x0e1\xf5=\xcd<\x13\xc962\x83n8\x03\x1cc\xdf\xb5[Zu\x08\x966\x8dN\xee\xbbn_9\xdf-\xf4\xa8\xae\xfe\xb0\xd9\xc6\x0f\xd3\xf4\xa8\xdd\x11\xd9\xad \x88\xc6r\xa7\xf1g\x00`\xf7\xa9\x9d\x8b\xc1\x0f\x92\xa4\xe4\x01\x9e{sQ:xG\xf3\n\xfe\x06\x91\xb6\xe3\xa7\x07\x04\xd4\xe2\xbchT*\x8e:\xf1\x823\xef]\xb2\x7f2\x08\xc4\xac\xbe\x9fHbq\x8d\xc60\x07\xfeb\x93<\xca%}9\xdc\xe7\x14\xc6I\x9a=\xeaS*\xdd\xc19\xc7\xc8\xad#F\n\xb6\x16\xa0q\x88\xd7\x8c\xe7\xb5gs\xc5\x95\xf4\xe4\x86\x19\x18\xceA?Z\xb8\xe9\x12\xb0\xb2\xb6\xdc\xde\xa0\xb88\xf85\xad\xf0\x93\xbc\x1dN\xe7\xcd\xdc\x18=\'l\x01\xa8\x1c\x03\xde\xa9:\xeb,\xd6\x91\x058\xc4\x9b\xfc\xedRz\xdc\xc1t\xf9\x97\xae\xf2\xaa\x07\xe7T\xdd\xde\xa97! \x1c\xe3\x18\x1f_\xcb\xda\xa45\x1b\xb5\xbc\xb8\x10\xee\xf4C\xc8\xf6/Q\xadp\x8a\x19d;I\xc6\x00\xea+\x9dv\xf9/\xba\x84\xb3\xa4\xaa"\x89|\xa4c\xc3\x14\xc99\xfb\x9d\xab\xbd2?\xc2\xda"\xb0\xf59\xd6G\xb0lc\xfaT\x8d\xbc\xe2\x14\x9f\x8d\xc8c,X`\x9e9\xe9Qp\xea\x8b%\xcc\xb2$\xac\x91\xb3\x02\x01\'\x8e;\x81\xefJ&\x9bk\xa8Z\xddF\x97\x8e\x1eX\xb6\xa9\r\x8c\x15;\xbb{\xf4\xaan\x9d1Id\x8eb\xea2@ d\xe4{\xd6z\xf6\xfb\xa8[/I`\xb1\xac.]\x81\x0e\x08\xd4\xbd\x89\x18\xc79\xfb\xd5\x8c\x1f\x84\x90\xddz\x89a\x80F1\xb1\xef\xfbV\x90\xd7\x8b=\xb2\xa9\x90.\xfc\x0c\x82I\x1cs\x9a\x8e "\xa98\xf4\xe7\xd4\xbdZ\xa3G\x98\xbb\x0e\xf0\xca\xc3\x86#\x8c|\xd3\xe7\x03\xc9]\xe4\x96\x03\x07\x9e\xbf\xf1V?\xeaS^\xab\xbc\x90\xe9x\xd0\x0c\xb1\xdb\xb1\xcf~y\x14\x80\xb0\xc3\x80\xae0\xcd\xc0\xa5b\x9c\xce\xad\xba0\xa5H@\x07\x1cW1\xc7\x19\x91\x97\x05\xb1\xc9\'\xa7\xd0{\x9af%*\xc7q\xcf<`~\x11\xef\x9aH_&\xe6\n8\x1f\xd7\x1fZ\x8cz\x84*!3\xba\xb9\x04\x8c\x905\x12>\x05t\x95\x1a\xb4\x9c\x02;qR*cI\x03ob\x01\xc6\x08\xee)Yv\xa8\x19\x89Cds\xf1Q#PP\xe1Y\xc7\x1cq\xc1\xf7\xe6\x97k\xa5a\xb4\xe7\x19\xe1\x8f\xf74\xed\xbd\xfd\xb4\x8a\xe1d\x8f\xf3l4\xe7\x07\xef\x9abY\x82\x95;\xf1\xcei\xbd\xcc\xad\x13\xc7"\xe4\x10\xc1\xc68\xc1\x1c\xd4\xfe\xa7\xe2$:Z\x14R\xb2\xc9\xce\x18d\r\x87\x91\xc7\xbfj\x87\x96\tf^\x18\x80x\x1cq\x8aR\xd3E\x8d\x9e9\x1ac*\x8e\xc7\xf9\xaa\xd2\xcf\xfd[\xff\x00Y\r\x9a\x95K\x98\xc21b\x17\x198\xd4;\xec\x0fj\x85<\xb6\x92\xb4\x12\xcc\xc30\xb1#\x199\xf8\xa4\xf4\xdb\xbb\x8b\x98\xdc\xcb\x1e\xd3\x92x\xe4\xe3\xda\xa4\x0b\x05*\xbc\x9e\xe0\xd4\xa2\xe8\xc1\x8f\x1bq\xf1\\I\xa5<h}|\xfcU\x92t>\xa5ml\xaa\xcae)\x9fY#\'\x1b\xfe\xf4\xc9\xeav\xef!*\xfaA\xfe]\xea\x1a\xe41\x88\x9c\x1eW\x8c\x1a\x8e\x86\xfa@\x1br\x15U\xe0\x01\xc0\x18\xfaT\xdc\'\xc9\x05J\xe7\xb3}*\xb7x^\x19\x1f\xcaF\xd8I?J\xccu(\xa5\x80Gr\xb32\x9d\xc4\x91\xa8\xc9\xf7\xc9\xf7\x152\x1b\xc0\xc4\xc6\xcb\x91\xc85r\xd1P\xde~\xfa@\xe1\x11\xb0\x0b`\xee\xf9\x1f\x15lg\xb5d(c\x04\x11\x8c\xf7\xc5Vm\xa5\x16\xb6\x90\'\x1e\x94\x00\xe3\xdf\x15\x01\xab\xf8\x8d-\x90\xc7\x19c#q\x95\x19\xdb\xf3\xf5\xad\xdc\x1dG\xa7\xf8\x7f\xa4#]0yZ0\xd2\xe4d\xb3\x11\xf9@\xfd\xab9p\xf7\x1dB\xf1\xbc\xac\xaa\xaba\x00\xe0\x01\xde\xbd\x92x&\xd6\x12\xd4\x10Qn6\xff\x00\xee\x0b\xcd]\xc4\xd9\xef\x8a\xc5\xed\xafS\xef\xb0J\xb2\x10D\x8as\x83\xef\xde\xb4\xab\x8b\xc5\xb7\x81\xa5\xc9l\x0e\x00\xea~\x05f<#\xd7#T\xebs\xca\xaa\x9f\xc7\xf32;G\x8fH\xfbT\xce\xaa\x1aSh\x99\'\t\xa4g\xdf\xb9\xfb\xd7> \x90<V\xe9\x82[yl\x0f`*"\x08\xfc\xbe^B3\xc8\x07\x93M\x05\xf5\xc5\xdb\x87,\x13\x9cm\xee\x05I\xac\x19\x19.9\x1dz\xd5}\xcd\xc0\xeb]J\xe6\xfe\x08Y\x8bh\x08\x1b\n\x00Q\x80y\xce\xf5"\x0b\x83gm\x1c\x05\x80\xc6s\xdf\x93\x9aX\xc8\xb2\x15e\x0b\xd7\x8e\xdf\xda\x90$\xa9,F:\x91\x8e\xff\x00J\xed}\r\x81J\x02\xd98\xe8{b\x9bc,\xa4\xf9\x8f\xa2@Nt\x8c\x80q\xcd8/\x82\x8c\r\xc66\xc9\xa6\xa6\xed\xf0\xe8N\x03\x0e\x7f\xf0SI&r\xa5\\\xed\\r\x17\x80i\xdb[\x16;B\xe0{\x01IMa+\xae\x06UEV\xcf\x1fX\x95\x1c(\x96P\xa0\x81\xf2=\x8f\xc5,^\xa0=\x97\'5\x15jv\xa4\xac#\x0c\x0b\xe0\x80z\x03\xf1O\x04\x81\x89\xc1\xcf\xb8\xf7\xa4\x05\x95\xc0\x066\xfd\xda\x8eY\xb1\xb5q\x9fzAa@\xca~\xf0\xbc1\xdb\x9c\xfd3Tq\xf5\tzw\x93\x0c\xd0\x15\x18\xc1\x0cBo\x9d\xf06\xdb~\xf5\xd9:\x84Z\xc8i\x80=\xbb\xd4\xcd\x94\xdb\x0fQ\x8e\xc3\x1f\xde\xacp\xca\x8f\x8eA<q\x8e\x05W\xec\xec\x91\xd43K\xbb\'\xf8zU\x82$\x8a\xdfn\xc5\xe4v\x15\xeb\x1e\x1a\xb8\x9c[$\x8ecHp\x08\xcb\xea8>\xd8\xc8\xaa\xcb\xb9\xa2\x98\xfaX\xb3\x1fa\xb7\xebN\x96<.\xe1\x12\x90I=:\xd2d\x8eAU\x00{\x009\xa7r\x88\xd6\r\xfb\x8e\xe1\xd7\xda\xa2\xe5\x95I5\xb3\x96`\x14d`\xe00\x04\x8e\rV\xc6y \xe4q\x9aW\x83\x93\xc3\x0e\xc3\xdf\xdb4\xed\nl;\x80S\xff\x00\x9cT7\x9cw\x05\x03$\x9c\x01\xefR\x91\x9d\x83\x9e[\xb9?\xe2\xa2\xc1?\x99+\xa2\x00t\xfebF\xc0\xff\x00\x9azS\xa1\x14\xb1\xe7\x809\xaef(\x7f\x8b\x1d8\xa6\xcd\x93\x8e\t\xc8=\xa9\xec\xf2\xa4\xb0\xbcr\x00A^\xb8\xe4\x11\xde\xa1-K\xcaR(\xcf\xad\xba\x12qM]\xca \x9e%\xd9\xfc\xdf\xcb\xa4o\xa8\x1cc\x1b\xf3\x9d\xa9v\xef\xe6#\x9f\xcb\xa7\x9c\xf1\x8f|\xd2\xb2#@1\x9e=\xe9\x8c\xcf\x90\xd9`\xa4\xf1\xfaT\xa5\xee\x9fs\x04E\x96O0\x01\x96\x00\xf2*\xb74\x8f\xc6\x19\xb2O>\xdf\x9dg\xfa\xbbIft<2G\x95\xca\xa9\xdc`\xed\xb1\x1c\xd5\x95\xb4\xe9"\x86\x12+`\xeeG\xc7\xbd5\xbay\x04\x0f\xb4\x92q\xc9Q\xc9\xc7\x7f\x8aKB\xf1\n[\xa4\xd1J\xb2r\xe5\x86\xd5\xces\xda\xa5\xa1B\xf1\xb0d\'p\xc1\x1d\xa9{-"\x14\xe5\xe3\xc99=8\xcdf\xed\xec\xba\x8bu\x1b;\xbb;\xb3\x1b*0mK\x95\x00\xed\xbf\xbejT\xb7P\xbc\x12\xc52eI\x07\x00\xeeqOmo\x9e\xf9\xb1\x15\xbb \xee_\xaf\xe8)-G\xc2\x96\xba\x88i\x19\xe4YO&E>\xaf\xeb\xda\xa6V[M2/2vX\xf2zw?J\x89o\x18Y\x0b\xaf/\xc9>^\xd0C\x96\xe4\xb6zc\xda\xb5W7]\n+U\xb7\xeb\xddB\xdeY\x1c\xe7C\x8c\x15\xcf\x07\x0b\xf9~\xb5F\xd7\xbf\x84\x9fU\xaeb\xc0\xdc\x8d\xc9\xfa\xe6\xa9:\x9f\x87\xeft\xb5\x13+\x89b\x18\xdc0r>i\x8a\xba\x96OK.\x179\xc6?\xadk\x90\xdf\xe9\xda\x9cL\xb1\x959\xea\x8d\xc1\xa6w\xde\x1e\xb3\xbb\x10\x95\x85\x15\xa3\x1by\x1f\xc3\xed\xf9VF\xfb\xc1V\xd7\x8a\xd7]\x0e\xf6\'\x81\x95J\xa0m`\x90w\xc3\n\xbf\xb4\xeb\xe9"*\xdc/\xab$k\x1bv\xee*\x83k\x08\x9b.]V5oQ\xff\x00\xbd-,\xa2iA\x89s\x1a\x8e\xa78\x1e\xe4}jm\xfc/\x85o\xdco \xf0\x03\x7fZ\xf2;\x11lv\x95+\xb4t#\xfb\xd5Jtn\xa5h\x91\xc5,K\x12\xb3e\xe4\x19$\x91\xc0\xdc\x00\x07\xc0\xa9\xcd{\x03e\x92Md\r\x96\xa1m\xe4\x9d\x18G\xbd\x94c\x80\x0f_\xce\x9e\\\xcf\x1d\xb8;\xb6\x93\x8e\xa4\xf3\xcf\xd3\xde\xb9\xb9\xdc\x0bp0z}*\x1d\xd8\xcb"\x9cpr\x00=j\xba\xe2\xfd\xacc{u\x91\xe4|\x8d\x0c\xfb\x808\xd8\x1c\x8a\xea\xcd\xad\x83`\x01\x8d\xf1S\x10\xdc\x99\x07,\x0f\xa4\x1fW\xb7N\x95+g\x1c\xa1\xb2H%\x9b\x1d2H=*\x1e\xda(\xed\xd3\xcc\x93h*:u\xab}\x84~\\k4\x8b\x99Xd\x03\xfc \xf6\xfa\xd6\x97\xc3\xf0\xdc\xdf\xcf\n\xc8\xf8\x95\x06\xb6\xc1>\x95\xf7lw<\x01Qoo\xa3\x82\x17ld7\xa4\x0cri\x95\xf4SD\xc8\x9b\x06$#\x04\x9e\x84T)x\xe2b\xa6P\x19\x01\'\x07\x19\xc7P*kU\x95\xca&1\x959\xfaU\x0bX\xd4\xa1\x841F\x1b\xb1\x82@\xce\x7f\xefP|Qv\xd6\xd7\xb2\xac \xe42\x85\x0f\xecFH\\cpi\xab+\x96\x92\x04,F\xe0\xe7O\xb8\xa9\xd8\xaf\xa32M$d\x16\x8b\x00v\xfc]\xe9\xec7\xf04R\t"F\'8%A\xe6\xb3m*\xf1\xcc\x93\xcb\x92T\x809\xeeO&\xa5\xee\xf5\x05\x81Uc\x1cJ7\x0c\xf4\x1c\xf4\xfc\xab\x1f\x07P\xea6\xb3\xc8RPv:\x94\x8c\x82Xnp~\xc2\xb3}^\\\xde\xb1\xf3\x0e\xca\x00\xc1\xe3\xe2\xac\x87Y\x81T\xac\x96\xb1\x95\xf6\xc0\xa60,z\x8a\xce\x90A\xb5RU\xe8rq\x8f\x7f\xadT\x8bK3e[,y\'\xda\xaf~\x14\x02\x14\x91Z<\xc8\xef\x90I\xc0 \x0e\x95m\xd1o\xae\xae\xef\xadm//s\x0c\x81\x90\x8d\x038#\x81\x81\x9ei\x1d>\xf2H.\x10\xf9\x84);\x82\xc7I8\xda\xa4l\xed%P\x8a\xc8X\x1e1\xfejf{ux\xd3zl\x03\x80\x07z\x92Y\x06\x00\n\x03\x13\x8f\x93H\\\xc6v\x02J\xf3\xda\xbd\xaa\xc2\xce\x08\xad\xde(\xcbN\xa1\x00\xc1\x00`\x0e\xc7\xbdX\xcfr\xc6Ev"-\xf9\xcdWo\xe3\x05\x92%\xfe,\xeea\xed\xde\xa2uI\xbc\xb5R\x9c\x00\xb8\x03\x1d\x85I\xcb {\x88\x94\x13\xd7\x1f\x95IOe\x15\xc5\xb1\xdc\xdb0x8\xcf5\x1dak\xf1y\x1d\xbb\x85\x7f\xe5\xfb\x0c\xe3\x91N\xb5\xca\xdby\r&\xea9\xfb\xd6Qx\x8d&\xd5\xdb\x92y\x03\x1c\xd6\x8f\xe0u\x87H\xbe\x88\\)\x0fp\x9bP\x9f\xe1\xcf\xbf\xd6\xab\x96\xfa|\xd2\xeaLLO \x8d\xb9\xda\xa4\xf4\xadOG\xf0\xd8\x91\xe1\xbe\xbf\r\xe6)\r\x14=6\x81\xd0\xb7\xfcS\xbe\x19\xe9\xfag\x9e\xe2eu\xf2G\x97\x18#\x00\x9e\t\xa8\xbd_\xa84\x91\xc7\x04$\x1dd3\x9f`7\xab\xb5{E\x15\xae\xaaj\xf4W\xb5\xcduE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QExk\xda\xf0\xd1E\'"\x07GS\xd1\x94\x8f\xd6\xb0\x1b\x8b&\xb2\xd4\xb5(\xc9\xda\x0b\x9e+\xe8\x1a\xce|_\xe1\x99\xef\x1aK\xcbY0N<\xc5\xff\x005\x12\xf6\xdf\xf1\x10zST\x88u \xce2q\x82)\xd8%\xf2e\x04\xb6\x15\x86\x96>\xc39\xcdc\x976\xf2\xff\x00\xd4!PQ\xfa\x1e\xff\x00Q^%\xcc+i\x1d\xbe\x7f\x08=O\x0c\x7f\xc5^#\xb2\xb6\xb0\xb4\xc3~\xf1\x80\xe4\xb7&\xab\xd0\xe8\xb3^\xcc\xd2\x8d\xb1D\xc7\x80GZ\xc7I\xd2\xae\xad\x0cqD\x9a\xe4\x95\x0e\xb5\x038\x19\xce\xe7\x8a\xb8\x17\xd0\xcd\xa8\xbb\xe1\x10\xe5I\xdb\'\xe2\x9fY\xcboke\xf8\x9b\x0c\xa3w}\xb4\xe1.`\x8e\xdd\xd8\xca$^\xa9\xb4\xe4\x8f\xce\xa6WG\xb11\x85\x95\xbc\xc6\t\x82OL\x0f\x8aeq\xa7\xd8\xdb@\xc9\x0c*\x83\xff\x009\xa97\x16=OK2\xb4\x0b\x1a\xc4TnK\x0f\xb7\x06\xa1\x19\xedI;\xbe\xa2\xd99\xe2\xa9\xb7\xba\x9cl\xc7k\xe4\xa1\xc8\xfa\xd4\xc6\x95-\xd3A\x99a\xdc\x92\x1d\xc0\x8eH>\xfc\xf6\xaa&\xb9qmg#D\x89\xbd\xf3\x9c\xd5\xb3M\xf1^\x9e,-\xe3\xf2]Z4\x01\x81\xe4`{\x1a\xc6\xf4\xbbu\x92\xfe\xeb\xf1}@+$x\xd2\xa3bs\x82>p)\xf9\xae\n"\x14\x8c\x90O5\xed\xeaI\x03\xc8J\xaa\x8d\xdc\x13\xd4\xe7\xda\x99\xa28\xe5\xc0~2\x07\xd6\x9d\xde\xf8\xabL\xbbV\x06/H\xeb\x9a\x89\x1a\xcd\xb8S\xe5G\xb8s\xcfZ\xa9\xea]\x16(\xae\x99\xed\xefK\xc5\x9c\x8d\x88\xc1\xcf\xb7z\x93\x17SvL2\x10@\xfa\xd4\x85\xbd\x94S\x12@\x00\xe7\x90{S\x96\xd3$ G\x18Gf\xc6\x14rG\xd6\xab\xcb\xaa[\x1d\xfelG\r\x8c\xb2\xf1\x8f\x80*\xc1\xa6\xf8\x9bG\xd3\xa3)\x15\xbc\x85\x99\x8b\x12\x0e\xe3\x8f\xce\x9f\xe9\xb6=6B#\xb9\x92\x18\x17\x07T\x9a\x8e\xa3\xf0\x14\x0e\xff\x00Zn[\xc9\x01,\xa1\x98\xe7a\x8d\xa9W\xf0\xc6\xc8\x89\x92C\xe6u;z\x0f\xd6\xab\x97\x10\xdd[\x80@\x05\x03g\x1c\x1d\xde\xd5e\x97\xc6\x96\x8f\xe6\x0f\xbbK\xb5\xd4\x8c\xe0\x1c|\xe2\xa0n<C`\xe5\nZ\xca\xd88\x1c\x00)\xce\xa9\xd3\xfc6\xde_\xe0\xef\x16=*AoVN\xfc\x9d\xb7\xda\x97o\xd4/W:\x91\xb7;\x0e\xd4\xda\x1b\xb6u\xc1@\x08\xea1\xfdi]\xdb\xb1\xe9\xe8r*\xe3c\xe1\xd6\xbf\xb5\x8e{\x88\x8d\xa3H=\x00\xf2\xe0{\xb0\x1d3\xedL\xae|;\xa9\xe9\xce\xac-%\xb9\x8c\x1f\xc7\x08\xdc1\xf2:\xd6f\xe3\xc3\xf7\xa1\x8bE\x99\x90c,\xa0\xe5A\xf7S\xbd>\x9dj2H/\x86\x1d\x89\xfe\xf5_iv\xbbt\xe0\xf4\xeb\xfa\xd7&~G^\x98\xcez})[\x89R\xdeF\x8e\xe2\xd6kv$\x14\x0e0Y{\x91L\x1eKv8\x12\x109\xe0\xf6\xfa\xd5,\xb6\xf2\xc4\xe47 \xef\x8c\xe4\x1f\xda\xa5/S\xd8\x10N1N\xcc\x84\xe7\xd61\xfcY\xa4\xde@p\xd98\x04r)\x15}\x81\xf0\xca\xe3\xa146\x1b\x82\x9bON\xa2\x9a\xd0r2\r8:\x93\xf6"\x9dJ\xed\x1a\xc6\xccT\xac\x83\xd2Q\xbac\xb1\xf9\xae\xe2\x9d$\x1bx\xc0\x1c{\x9f\x9a\xe6\xdfJ\x17\x13F\xac\xc0FF\xec\x86\x04\x1e\xddEXG\x87\xad\xe3\x8c2\xe4g\xa1\xcf\xbdZ\xc1\xd1.\xefb\x92H   \xdc1\xdf\x8f\x9ai\xba\xae\x9c\x06\x97s\xedQ\xd1\xb6\xc29=9\x1d\xb3Jn\xfd\xd9Uc\x82\xdf\x84\x1e?J~<? q\xff\x00\xe6\x08\x83\x8c+d\x93\x9f\xa5<o\n^\xb4d\xad\xc2\xe4t\xc8 b\xba\xbe\x18\xeb\xed\xab\xcb\xb1v\x00\x1c\xe9*H\x1f \x1aP\xeaqm\x99\xd4}sQzM\xe2\xda\xc7-\xb4\x88\xecw\xb61\xc8\xday\xc8\xfaT\x95\xb5\xc1\x9d\xdcd\x14\\\x0c\xfe\x16\xcf\xd3\xe2\x95\xb5\xf0\xc4\xf6\xd2oy\x9fp\xe4\x10x\x1f\x15\xed\xc6\x98#\x1f\xbbfW\xc9$\x1e\x95g\xfe\x99\xd6\xed\xad\xe1y` DN"8RG\xf7\xfaSo{\x13H\xc5$\x04\xb0\x19=\xb3N\x9c&\x0boQ\x8e\x85\xb8\xe2\x9a6\xad5\xa2\x98\xad\xcb8?\xca\xb9\x03=\xf2j*\x7f0\xfe>\x1c\x7f\x17\xc7\xc57\x85d\x82V\xcd\xe3\x90\xde\x97\x18\xe9\xc7\x03\xfa\xd3\'\xaaL\xce|\xb46\xe4\x1c3\xa9\xc3\x0c\xfc\x12)\xb3(+\xea`\xd8\xe1M:\x96\xff\x00P\x99\x9e\x06A\x1c}r\x139\'\xdc\x9ei\x99\x85C$r\xdd\x10\xcc3\x83\x91\x8cT\xb66H\xdecz\x1b\x1bI\xebH\xca!\\\xb4\xb2F\xb98\xc3\x0c\x9e+\xb2[\x19r\xf37\x9a\xca\xc5@\x95\xb0\x15A\xe3\x900{R\x05\xf1\x07\x00\x90\x08\xed\xdc\xd7\x90Y\xc1\xb1\xc7\xde\x18\xae0J\xbe?\xb5#m\xa7li\xd5$\xda\xa0\x8c\x06<\x1c\xd2\xe9}\xa4\xfaUJ\xe0\x1c\x92\xa3\x00\x8f\xce\xbcmOJW\x91\xd7x\xe3\x9e\x98\xff\x00\xc1R\xd6\xdf\xa60\x8bT\xd6\x80! \xaa\xc9\x8c\xe4\x1c\xfe\x94\xdb_N5\x0f^\xfe\xebJ22#\x06\'o\x18\x00\xf7\x1c\xd7q\xdeH\x80\x0f,\xb0\x078\xcfZb5}=\xc8\xf5\x10O\xf0\xb7\x02\xba\xfd\xabh\x88v\xc3\x9e\x7fO\xa54\xd0\xd9\x87\xd7\x15\xe2\xc6\xa1{e\x89\x00\xe7\xda\xb9\xf8\xc9\xf1\x82\x18\xef\xf4\xa7\xadz\xd2gleq\xf3Lv\xce\xdb\xb0\x87\'\x801\xd7\xe9I\x9dhuK]\xd8\xe3\x93\x8e\x9f\x15\xc1\xf1\x14\xc2P\xb1\xaa\x8e\xa3\x18\xc9\x14\xcc\x89\xd3e*\xf3\xf5\t[\x07\x18\x8e29\xdb=\x85\x02\xeaq\x90\x13\xb7v\xa7\xb1Y\xde\xbb\x80\xb6\xd2d\x7f\x11\xc0\x15\xe3\xdb\xde\xc2J\x93\x92\x87\x90\x7f\xedL$\xf1\x06\xa3\x1b!\xf3N\xd2;\x0c`\xfbRR\xea\xfa\x8c\xa0\x13#F\x08\xe4\xe3\xf1|\x9e\xb5$\x7f\xa0E\x01\xf2\xff\x00\x1cX6s\x84\xc6\x0f\xd0\xff\x00Zo\xf1\x13\xb3n#\xe3\xdc\xd5\x9dnnZ4G\x98(\\\x8e*n\xd6\xfb\x80\xa5\x80\xda\xa3\x93\xdc\n\xcb$\xb9\xbfic\xdf<\x98\x1f\xc4\x0e9\x1f\x14\xf0\\\\\x18\xfdW\x12\x13\xd0}*\xc2\xd3\xc4F\xdeBV9\x8e\x90\x07\xa9\x86H\x03`rv\xfbS.\x84\x8f\xcc\xbb\x9e\xd5\xaeG\xac\xda\xa7-8\xc8\xfeS\xd6\x9c\xfe\xda\xd3\xdf\x18\x95G\xfe\xecb\xb1\x13st$*X\x80\xa3\xafA\x8ak6\xa3:J\xa9\x9fP \x93\xd4c\xe2\xad\xc7\x8e\xaf\xa3\x1e\xabe\x0b\xec\xc3zc\xf0\xca\xdc6\xff\x00\x06\xb7W\xbb\xd1d;\xfc\xf83\x8e\xbb\xb09\xa8\xab\xc9t\xf7_\xdd\\\xc5\x8f\x83\x91\xfd+"7n\x14\x15P2z\x03H\x1b\xd9c`K\x94\x19\xe2\x9a\x97\xc7\x9eb:7J\x80\xea\x1b\x95$o]\x16\xcf\x90D\xed\xb7\x00\xd6\xb3\r\xbb\xc8\xfb\x0c\xccP\x0e\t8\xa7r\xd8i\xee\xa5fx\xb0\xa3\xb9\x1cV45K\x96\x90\xaa\xcaH\xc0\xdai\xb4\xba\x9d\xca\xc9\xb2I\x0eX\x02=X\xfe\x95\x16\x1f\x15\xd9\xc7\x1b\xa9\xe8bRI>\xb921\xed\xc5(\xc51;\\i8\xec1Z\xfcZF\x9cg\x1eT\xa8s\xd0#\x0e\x7fJ\x90\xbck;4UoS\x01\xca\x8e\xd5Z\xf0\xce\x9a\x96\xdadz\xb4\x99y\xee\x03\xf9e\xbf\x81\x14\xe3\x8f\xad#\xaa\\\x17\xdc\xdb\xbdD\xd5\x7fV\xf1G\xfa}\xb2Ai\xd2 \xb3\xba\xbaU\x93P\xf5\x85\x8d\xb7\x04drj\x04\xf3\xc8d \xce\xce\x13l\xf1\xbd\x13\xeaQ+\x1f*5S\xeey4\x84Z\xad\xd4lq!\xc1=;Ue\xae\x0e\xf3\xc6y\xa5V\xe60\x0e\xe6\x00\x1fz\xc2\xc8\xf7n\xfekO!s\xfc\xc0\xe3\x19\xf6\xc61Q\xda\xed\x98\xe4\xb1\xfb\xd6\x89\xa7^-\xeb\x08\xe4\xc0s\xf8H\xe3?\x06\xac\x89h\x87\x0b\xbe0@\x1b\xb2\xd9\xc7\xe9Y-\xae\xa0\x90\xb0e\x9dx \xf5\xc1\x15\x1f\xaa\xda\xeb\xb3\xeaP\xdc\xe9\x0c\xa6\xde\xe0nf2\x95\x11\xc8O\xa9x\xceA\xea+]\xe1\xef\x12\x0b(\xa4\x82\xf6\xd3\xf1.\x0eRG\x93A+\xc9\x04\x90rG\xf4\xa9\x10N%:|\xe0\x98\x19\x19\xde\xb7%\xb2\x85O\xff\x00\xaa\x19 \xf1\x80E(,\xc3\xa7\x17#\xaf\xf2\x81\xd2\xb2+m\x1b]$\xb5\xce\xb0\xe8\x1f\xf1\x04\xcb\x10q\xd0g\x15/\x05\xa3\xe9\xd1\x08\xc5\xe4\xd3\xb1\x07\xf7\x92\x1e@=\x80\x1cV\xad<_n\x91\xb9=\t\xd61\xc8\x17\x0e9\xf6\x04R\x9ep8\xb8\x0c{zG\xf5\xa7\x1e+\xd4\xa3\xb7\x9a;X\x18\x15\xdb\xb9\x98\x1c\x82s\x8f\xe9U\x18n\xdfq\x07q=j\x03\xc5\xfa\xd3\xd9jp[\xee\x18KTb\x0f\\\xb9&\x98Z\xeb\xd0\xcaT\x9eH\x15\xe7\x9dQ.:\x95\xcc\xf7\xcfo\xa7\xf1\x07XA\xfc\xa3\x1b/\xd8US\xdd\x7f\x19\x81bpqZ\x8d\x96\xa2\xd1\x10Q\x888\xabF\x9f\xa8[\xca\xe1\xa5\x93k\xf4\x19>\x9f\xfbV@\x9a\x94l\x06\xd7\xe4\x8a\x96\xb5\xbd\x90\x8c\xee\xfc\xaa\'M\xea\x1dK\xa2O\x1c\xb0>\xa4G\xd5\xe4I\x93\x19>\xf8\xf7\xf9\xa9It\x0e@l\x121\x91\xed[<\x8f\xba#\xceA\x15[\x9e|\x023\xb8\xf6\x03\xadEY^\xdc5\xbc\xe1Af\x11\x12\x8b\x9e\xbcg\x1f\x9e*\xb4\xbe<\xb5\x8f\xc9\xf34\xa5y\x01\x1e\xad\xf8\x1f8\x18\xaf\\\xb6\xf1}\x97V\xb2\xb7\x9aw\x16R0dl\xabH=$g\x1aG\xe9R\xedKz\xb0\xa5\xf0F\xc0\x81\xfdj\xe3o|\xf6\x97*\xd3[\xca\x14\xa9\x19\x0b\x9cg\xbd=:\xdd\x91\xc8\xfd\xe8\xf6\xca\x11\x9f\xd6\xa9\x0f\xe3x\'y\x99\xec=$~\xe7k\xe4\xe7\xbe\xef\x83\xf1M\xa0\xf1\x82\x11 {TRA\xda\x00\xdd\x8fn\xb4\xdau\xdb+y\x1a8:\xe2<L\xcc\xde\xb8\x1f;m\xb98\xc6q\xb5Ll\xc8\x01{b\x18\x006a\xff\x005x\xb9\xd4\x19\xd5\x82\xa1\t\x8eO\\\x8f\x9aca\xaa\xc7\x05\xe4\xd2Lp\xbb0\xb8\xfa\xd5L\xf8\x9c#\x18\xfc\xc6\x93 \x9d\xc0\x9cg\xd8\x83\x8c\n\x88\xbc\xd6I\x93\xcc\x8d\x86\xd3\xc9L\x8c\x93\xf2\x05@\xbe\xf1\x1cq\xcdoqop^X\xa4\r\xa0\xa6@;\x8c\x9d\xf0@\xa5"\xfa\x1e6\\+\x8cg5\xb0\x1f\x10\xc1)\n\x8a\xc7<T%\xe5\xe5\x95\xb4\xd1\xbd\xc3\x94F\x7f\xc2?\x10\xee3\x8e\xd5BMjf\x910\xa9\x1a1\x07\xdc\x8f\xcc\xf1^\xeb25\xdc\x16\xe4r\xea\xdbC\x16\xc8\xa7n\xfcQs\xd5,\xa6\xf3\x0cR\xc9\t\x060c\xc2\xe7##\x1c\x91\x8fzf$Ky\x01]J\x1b\xf3oZ\x84\x1e \xd2b\xfd\xda\xae\xdfNKm<\x8e\xb9\xe6\x9d\rh\\\xd9\x99l\xe2`7\x15\xdc\xc0\x00H\xea\x16\xb2;-"K\xd6\x8a)\xa4#s\xed>\xb3\x9c/\\\x8fj\xbe]j\x11\xc1f-m\xd0,q\xa8D\x03\xb0\x02\x99\x97\xc57qY\xc8o$K51\x1f D\x98\x91\x89\xc6\x00\xf6\xfa\xd4[\xa9U\x0e\x94b\xccN\xe4\x9e*\xbb\xaajR\xca\xcc\xd29\'\xdb5Q\x92\xf4\x96\x19\x04\x90z\x0e\xb4\xfe\xf6t-\xb4\x8d\xd9\xee*\x0eX\xdb\xccl\r\xa0\x9e\x1b\xde\xbc\xd2 \xd33\xcb33\xbb\x92\xc5\x98\xe4\x93P\x9eF;\x8a\x9e\xb1\xd6\xa7\xb4\x95\x19\t\xc5i:o\x8a\xdat\x11\xc8@s\x8d\xacx\xfc\xab\x18@S\xd4s\xc1\xc7\xe7O\xe0\x95\x89\x041\x1c\xfb\xf45ec\xd4\xaf\xfaK\x96\xb2\xb9x\xd5\xbf<`\xfa\x1b;n=\xfeh[\x92\x8c\x0fz\xd9\xdf_\x869\x04m;\xc6\xe4\x81\xb4\xaeH\xfc\xff\x00\xcd5\x9e\xe7Ou\x0c\xfa\xd4\xbbq\xeb\x07\x07\x82r@&\xa9\xa2k\x89\xacd\x97%\xa4\x85@N\xc4\x82{\x9f\x8a\xa8\xad\xf5\xa2Ms%\xe7\x98R1\xb9\x8fM\xb8\xeb\xb4w\xad\x14}b\xf7\xa8\xc5\x16\xa4\x8eH\xdc\xb0\x01\xdaE\nG9\xd0\xdb\xd5\xfd\xbd\xe0(\\e[l\xe0)\xfe\xa2\xb5\xfbK\xcd\x02c\xbe\t\xd5\xca\x0ew\x90x\xf7\xedK]\xae\x97{\x16\xd8\x9e\xdcK\xd50@\xcf\xbdc\xa2\xff\x00N\xd4C\xfd\xd1]\xa4P\xa3q\x1bG\'\x8c\xf3RD\xa4q\x19\x96u\x8eH\xe4\xc3\xe1\xc2\xe4c\x04\x01S"\xb9\xb9\x92)m\x9f\xa6\xd9\xcbn\xe8|\xc1\x18\xd3\x9fr\x0e\xfe\xa0\x06iou\xeaV\xf3d\x0e\x0e\xd9<U\xa5\xa4K[\x88\xb7\xddE$b_R\xa4\x81\x88#\xb6:\xe35c\x97[U\xb7I#\x8cm\xdf\xb4\xe4\xfcf\xb1=C\xc4\x9a~\x99\xa9Al\xf1\x18\xb7F3++\x15\x00\xf3\x92\x0f$\x9fqW{\xbb\xa8\xa4\xb2\xb0x\xb0\xb1I\x00\x90u\xe7\xcc\xf5g\xf3\xaa\x8f\xc6_t;K\xf7\xb3\xb8\x10\x89\x99\x151\xebl\xff\x00\xda\xcc8\x1b\xd4n\xa3s\xe6E\x11`s\xd8\xf0*r\xe7Y\xb4\x99\\O\x10e<\x90I\x1fNEVn-\xf4]J6\x8cn\xb6\x7f\xe0\x95\x18\xb0\x07\xe4\x1e\xa2\xaa\xb7\xb7>a\xd8\xa4\xe4\x1f~?:h#t\xda^r\x83\xb1-\xb4\x7fZ\xa3k\x8b\xdb\x86I\xae.\x15\xdf\x7f\xcc\x8aI\xcf\xb9\xe6\xaa\xd2\xf2\xea0\x04r8\x03\xb6\xa3\x8f\xd2\xae\xf6\xda\x15\xcc\x11\xc5\x14{d\x00\x13\xe6/G=\xc8=\xa9C\xa5M*\x98\xa5B}YV\x03\x94c\xd7\x8f\xee*\x1fM\xd6.l$\x01n\xe3\x91\x08\xe5K\x83\x9f\xd2\xaf\xdaf\xa9\x16\xa7j\x1f\xc90\xca\t\r\x13\x10\xc7\x8f\xe2\x18\xea\x0fj\xb2\xe9\x96]2\xf5\x98I,\x91\\\x12N\x9c\x8c6{.{\xfcS\x13<\xce\xc5\xdbrNO\xd6\xaaKa%\x94\x81eS\xcf \xf6?J\xbb\xe90\x0f)2>sT\xfdkSQ\xa9\x08\x15\xb3\xe4\xae\x1b\xd8194\xbd\xae\xb3 \xce\t \xfc\xf7\xa8v\xade\xd2\xfa\xd3K2\xc9$1\x92\x17?\xd4\xe2\xb8\\\xb2i\x04f\xb4f\t\x90T\xb2\xe3\xb88\xa1\xae\x11\xd0\x8c\xf2\xa2\xaa\x11j\xb2H\xa0\xed \x81\xd4\x91H\rT\xac\xa4\x1c\x91[\xb4\xf1\xad\x8d\xab\xa4\xd0\xa0\x08\xed\xeb\\\x11\xdb\xe9\xcd\x08\xd2\xa9\x19$\xe3\xb14\xeb\xef\xb6\xb0\xdf\xb6\xf9pw\xe4(\xe4\xfbs\xedJj\xfe!\x86\xc2\x18c\xc6\xe6~@\xed\x8a\xa2\xeb\x13[A|d\xb7\x0c\xb12\x86b\x7f\n\xb1<\xa85(\xdab\xeb\xda\x7f\x95\xe6\x04\x99\x06\xe8$\xea\x01\xf68\xecj\xa6\xd7\xc4\xbda\xaen\xe0\xb7\x92$k\x82\xde\\\xd1\x8c\xe3\'$\r^\xfc|S\xf7\x17\x92J\x81O+\x8c\n\xb8h\xbe6\xd3\xf4\xef8\xad\xa8\xdd6\x0bs\xd4\x8f\x9a\xbei\x1e/\xb2\xd4v\xac\xc9\xe41\xe8s\x95?\x9fj\xf9>\x03u\x14\xaf\x1c\xd8,\x8eU\x80\xcf\x05N\x0f5\x7f\xd1\xa6\x9aI-\xa2\xe8$e\x18\xef\x82j\xdb\xa4\xf8\xcf\xae\x8b\xd8 \xbax\xee\x10\x90\xa4h\nNN9P7\xa8\xa2g\x03 \xfd\x8d}A\xc1\x19\x1d)\x19.m\xe28y\x91O\xb1"\xab\xbe$\xd4\xdbI\xd3V8\x08Y\x9dB\'\xfb@\x1dk%\xb5\x9eF\x99\xe4\xb9\xbaw$\xe4\x96<\xd7\xac\xde^Cd"\xf3\x01&C\x80\x01\x03\x03\xdc\x9a\\\xb7~[\xe8U\x04\x81\xea\xdf\x8a\xdf\x92X\xa5\x19I\x15\xbe\x874\xb5d\x16\xfa\xa2Z\xed\x96\xde\xe3\x04u\x00\xf5\xadKN\xbb\x17\xd6p\\c\x1b\xd7\'\xebN\xc3q\x0c\xf9\xf2\xdc\x12\x00$\x03\x9cf\x97\x05\xc0\x97 \x8c0\xde\x9e\xd1E\x14\xf5I\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xb3O\xb4\rJ\xf6\xcd\xf4\xb8\xedgx\xf7\t\x19\xf6\x9228\x1c\xe2\xa3^]Gem5\xc4\x80\x95\x8cd\x81\xc9\xdf\x14\xdc\x92\x08\xd4\xb63\xc5iD\x802j2\xe3X\xd2\xed[l\xd7\xd1+\x7f(9?\xa0\xac\x16MoQ\x923\x1c\xd7\x937\xc1c\xd2\xa3\x1eg\x9e[uY\x0e\xf0\xe3?<\xf6\xac\x9c\xbe5\xb4VE\x8e\xd2F\xc9\x1a\xb5\x10\x08\xfa\x01\x9a\x8cn\x98\x8fJ\x01\xf5\xde\xbe\x9e\x04\x10\x08<\x11\x9a\x8a\xd7\x1eH\xf4\xcb\xa6N\xbby\xfaw\xa4\xb4\x1dV=V\xc27\x07\x12\xc7\x84\x95{\x86\x1d\xfe\x87\xb5KO\x10\x9a\x19# \x10\xeaG=9\xad\x9d\xbc\xd1J\xb1K\x1b\x06\x8d\xc0e#\xb85$\x9f23\xa4\xf26\xac:\xf6x\x82\x80\xcc9\xa8\xfb\xbdYb\x81Dl2\xbc`U\x83\xc4\x1e\x1c\xb7\xb2\x8d\x8c\xba\xb2\x07\x1c\x88\xc2\x92s\xf3\x8e\x95\x9e\xbf\x87\xef\xae\'\x88F<\xc5\x91\x80\x12!\xc8\xe7\xdf\x1d*\xa2\xfe\xf4Ev\xf6\xf0\xf9rL\xe0a\x15\xc6\xb0=\xf1\xcd1\x1bl\x03\xb6\x9d<\xd3\x86\xf14\xb1\xa1W\x97\x0cs\x86\x1c\xfe\xb5\x17/\x88o\xa4S\x87\x12\xc6\xad\x8e\x06\r[\x93\xec\xe3Y\x8e\xe4@\xd6\xd1J\xac\xbb\xbc\xd2\xc7\x03\xe3\xebR\xd0}\x9bj\x16\xe8\xc1|\x9c\x96\xce2qL\xff\x00\xa6u\x0b\x90\x82Yt\x000Am\xff\x00\xc1\xa7<\xd5\\\x90\x8c\xdfcX]\xf3\xcdq8Y\x17n\xe3\xd7\xbd*\x96\xcf\x0cl\x18\x02\x17\xdc\xf5\xad?\\\xf0>\xabh\xea~\xe6fRr\x1a1\xbb\x9f\xf1Y\xbe\xa6\xd2!u\x91\ns\x821\x821\xefT\x17=\r\xac\xfc\xc2c8-\xe9ll~\xf5%n\xf5\xe9Q\xb1\x1c\x83\xcd@\xdcN`\x04\x94%\x0bp\xa0\xe3\x04\xd5eu\xa9\xedg\x95VF\x89On\xc7\x15?pa\x9fr/\xa9\xd7\xb9<}*\xa7yh\xed\xbb+\xb4\xf3\x81T\xb3Y\xca\n\xe0j\nj\\.\x87:\xb6$T\xf5\x97\x8a\xede>L\xc1C\xf1\x93\xbb\x8e}\xea\xe3\xe4\xc6\x12\'\x0c\x00\xdb\xc1\x1d\xc7\xc5|\xef=\xbd\xe17\x12\xc4\x84\x10\xc7\xa88?\x15\xa1}\x9d\xe9\xfa\xc5\xff\x00\x89t\xbd/S\x9e\xf6\xd2+\x95`\xaeS\r\x80\x85\x94\r\xe3\x18l`\x1a\x0fI\xf3a2\xb4$\x8d\xbdA{\xfd\xa9\xc9\n %e\x03\x00\x92\xa4\xd6\xbf\xa7h\xda\xce\xac\xe6K+&\x95\x14\xec~@@z\xf2Mj~\x1d\xf0\x85\xbe\x97\x17\x99}\x14W\x17%\x83\x0e2\x91\x11\xd9s\xd4\xfc\xd5\xabH\xb5\xb4\xd2\xada\xb7\x85\x02F\x83\x0b\xef\xcfROr{\x9aZ\xf6\xea\x15\'kt\xae,=2\xca\xd3\xf1\x92\xdc\'\x9a?\x96B\xbbg\xb8\x15W%\xc4\x92eF\xcb\x9e\xdc\x9a\xe4\xb7\x0c\xa4\x0f\x9a\xf6\x0b\xe4@\x15\x8f\x19\x18\xa89/\xc6\xfc\x06\x03\xf5\xa8\xb7\xbf*\xcc3\x81\xdcu\xac\xb4\x9e4\x8a\xd2eh\x1fQ\x05\x94\x9cj\xc8\xa6\xbc\xa6\xabf\xa1i\xa7j\x91\x88\xeem\xd2P9\\\xf5\x07\xdc\x11\xd2\xaa\x13xGA\x13\xab\x83<\x7f\x880\xdf\x90I\x1dzg\x8a\x0f\x88V\'P\xe4\x04=[\xda\xb8}Uf`\x14\x1cd\x9c\xf5\xcdI\xba\xf1WL\xbdA!\x82&\x90\xb8\xfc\xf1\xf3\x8d\xc5p<\xb1\xe4+\x90>\rU\xfcG\xe1\xb4\xb1\xb07z{H\xe6\x1c\x19\xa3s\x90GB\xc3\x1d>k.\xbc\xfb\xd5\xc4\xd1\x84\x98\xc2\xca\xea\xd8\x03\xd8\xf4\xe7\xfb\xd6\x9d\xe2O\x1bi\xfa/\x99e%\xdc)v\xf1d\xac\x84m@\xfcz\x87s\xf1Yy\xd7\xb46\xda?hZ\xa9\x00\x05>b\x9c\xe3\x93\xfd\xea\x1d\xa5\xaf\xe3\x01\xb8\x11\x88\xd4\xb7\xa3\xd3\xb1\x1f\x03\xb5Y[\xcd0OP\'\xd8\xd4\xd8\xbb\x96\x1d\xbb\xe4|\xb0\xc9#\xe3\xdf\xe2\xa74\x96\xd6/g\x02\xd0\xb0\x0b\x82\xe5\xf3\xe5\xa8=\xdb\xfe)\x7f\x0fxf\xf3\xc4\x86\x0b\x96\xb8X\xac\x10\xff\x00\xac\x98\xdf!\xee\x10\x7frzV\xa8\xd66\xbau\xa0\xb4\xb3\x81R1\x9e3\xc9\'\xa9by\'\xe6\x89\xfacZC%\xe7\xa9V?\xc9\x8d\x8b\x11\xed\x8f\x9e\xf5\xc9/\x02\xfa\x06\x0b\x1e}\x85U@kvEk\xa9.0\xde\xbc\xfaT\x8fe\x03\x9c~uf\xb6\xd5\x968\xd5\x02)P:d\xd5n\xe9H*02\xbe\xd4\xd9\xa4\n\x06N\xd3\xd4|\xd62\x1e\xbb\xd5\xe0\x9f\xcf\x82\xf6X\x9c\xed\xa4\x12F=\xb0sL;\x17\x18c\x9cU\xa6Mcw\n\xaa\x06z\n\xea\xebV\x8eH\xb6\x88\xc6\xed\xbc\x9e\xd9\xfaU.I\xf0=.\x01\xcf\xe7MM\xeb\xab2\x93\x9c\n\x92\xbd{\xc4\x04\\c\xa9\xca|\xe5\n\xf9\xdfa\xed\x9e9\xed\\\x05F\x0f\xb7\xcdM\\@\xd7\t\xba\x1b\xa4\x85\x8f\x1b\\\x1d\x84\xfdGO\xd2\xaa:\x9bj:Q\x8d\xae^=\x92\x12Q\xd0\xeeRW\x823R\xe6\xf3r\xed\xe4\x0f\x9aP\xfd\xda\xfa\xce[[\xa8\xfc\xc8%\\:\x9e\xa0\x8e\x85Ob;\x1a\x8f\x15\xdb\xa8Ar\x85\x808\xd6\t\xd5\xbfs\x93\x83O-\xe3+\x00H \xf3TG\xd6\xee\xaeX!\xb8+\x92v\x9d\xd8\x04\xf5\xea:W\x1f\xb4\x1b\xf0\xc9*\xb9\'\xa1l\xe7\xebTm^\xda\xefG\xd5/t\xd1&\xf9a\xf5D@\xc8eq\x95c\xf9\x1f\xd6\xa3\xac.f\x16\xb7\r-\xd0\x05[\xf1\x1f\xc4\x0f\xcf\xfc\xd6\xb3\xfd,H\x81\xc3\x82\x08R=\xce{\xd5\x80\x93*\x08\xc6+E{\xb9#\xde\x81@\xc9\x05\xbe1\\C\xa8\xc8\xc1\xc6\xdd\xca\x01\xe4\xf5\xce8\xfc\xaa\x9e\xda\xb2\xc6\xbec]FY\xf9\x11\xee\x1c\x8e\x9f\xd6\xba\x9bT\xb4\x8e\x17U\xb8\xf5O\xb7b\x8f\xc5\xc9\xc1\x04\xfb\n\xe7\xfac6\xdar;Wu\x9e\xe2\xae\x10\xdc\x98\xda9\x04\x9c\xed;\xa3+\x91\x93JK{3+a\x8e\xdcd\xaex\xe2\xaav7\xf1\xc8\xc57c\xca nc\xe9=\xf3\x9fz{=\xcc\xb2\xb3\xa0xv\x90\x08l\xe0\x8cv\xf9\xcds\xf0\x12j\xc6\x08\x19\xda\x92d\xdfz\x91\x87U\x99\xa6$(P\xa0\xf7\xcej^\xcfPi\x11\xd9\xd4g={{\xd5LM\x04Q,\x8e\xdb\x18\xf4\xff\x00q\x1ct\x14\xc9\xf5\xf4\x81\xe6H\x818`B\xbfC\xee\x0f\xb1\xae\xbfNf\xf4\xaa\x85\xdb\xf4\xa3\xcc\x07;qW\xf9\xafZvP\xbbs\x9e\x00\x1cq\xefK\x9b\xf9\xe2\r\xe60+\x9cq\x9f\xedY\xbak\xb7\x17\x17\x08P\x0bs\t\xfa\x86\'\x8c}*r\rU\xae#u\x1e\x91\xb8\xaes\x9e\xbcd\x03\xed]\xff\x00O\x91\t\x1ea\xc9\xe4\x81Ig\xd8eA\x1fZ\x9b\xba\xd6\xe6p\x02@\xc4\xfb\x9e)T\xd5n\x85\xb9\x059\xe4\xe7\xb0\x02\xa1\x05\xc5\xa5\xbf\xdd\x97\xef`\x97R\xe3y\x1b\x88\x1dO=@\xa4ou=:\x0bG\x9eK\xc5H\x9b8\x00\xf2\xdf\n\x07\'\xf2\xae\xb5\x84\xda\x867f\x188\xceH5\xcf1\x08\x00)\xe7\xda\xac\x0bz\'\x8d\x8be[\'\x18\x1d\xfd\xf1K\xc3\x94\xc4\x98\xdeA\xc7<sT\xbb\x7f\x11\xda3\xdb\xc7er\xb2\x97\xfc+\x82\xa4\xf1\xceO@=\xe9\xc9\xd7\xb2\xff\x00\xea\xb0\x00\xe0\x80\x00\x00\xfcg\xfb\xd2\r\x83\xa9]A\x81\xcfq\xfdsAr\x01\xc7\x15l{\xc8\xd0:\xcb\x13\r\xcd\xfc<\xe0\xf6\xae<\xe8&B\x19H\x1f\x87$\xf5\xf9\xe3\xa5U\x1b\xc4h\xc1\x91\x88\xf4\x9e\xa3\x04\x80>{\xd3i\xf5\x99f\x8d\xe3GT\x04\xf0X\x0c\x9es\xc9\xae\x9b1\x8d\xf7=\x89\\\x01I\x0c\xd9\xc6\x08\xf7\xde\xac\xf7\x0ccP#\x00\x82\x00\x0c\xa7\xa7=**\xea\xe6\xd5\x90\xbbJ\xc5\xb2G\x03w=\x0eMU\x17Z\x96\xd9\x81\x91\xd9\x95I9\xcey=1M%\xd5\xca\xc5\xbbz\xed\xe7*v\x8c\nv>\x9e\xe0\x8fNrv\xa5e\xbd\xeb\xea\xbd\x0e\xf2\t\xbc!\xa1\xa4Ro"\xdf\r\xef\x9d\xc4\x9a\xadkW\x0258\xe0\x9e\xb5\x07\xf6_\xad\xa6\xad\xa2\xdci\xa5\xc1\xb8\xb1\x90\x903\xf8\xa1\x90\xe4\x1f\xc8\xe4W~8w\xb2\xb6\x0eA\n\xeaFzr;~u\x9d\xea\x91\xdd\xdcu\xc8\x85\xc4`z\x12(\xc8\x04)T\x18\x1f|sTW\x99\x8cI\xff\x00\xe4I\xfb\xd5\x1a\xfb\\\x16\xe4\xed$\xb6x\xc1\xc6~\x95Q\xbd\xf15\xd3o+.\xdf\x80O\x19\xa8-[Qq\xb9\xdc\x85\x03\x8e\xbf\xd2\xa9s\xea\x8b#\x11\x92\x00<\xd6\xdf\xa7\xf4X\xd9U\x8cA\xbd\xcf5^\xb1\xc9 \x1d\xea\xd5>\xb3q+\x12\xf3\x12H\xfa\xff\x00z\xb8\xf8;\xc7\xd7\x9e\x18\xb8\t!762\x91\xe6\xdb\xe4e\x7f\xdc\x99\xe8\xdf\x1d\rc\x82\xfa2F2>h\x17\nNrx\xf7\xefW\x0f\xd3"t\xd0\xd1\xe0\r\xc6\xdc\x1f\x8aZ\xc6al\x83\xbf\xed_\xa0zN\xa3\xa6\xeb\x16\xf0\xdfX\xdc\xa4\xb6\xd2\x8e\xa0\xfe\x16\xf6a\xfc\'\xdcT\xad\xc4Q\x08\xdd\xdd\x95\x15FX\xb1\xc0P9\xc9\'\xa0\x1d\xeb\xe1?\x0e\xf8\x93W\xf0\xfc\xe2\xe3O\xbe\x92\x12\xc4oL\xe5\x1c\x0e\xcc\xa7\x82*\xeb\xac\xfd\xa1\xeb\xfe#e\x82iV\xde\xd3\n\x1a\xde\x1e\x14\x91\xdd\xc9\xe5\xbe\x87\x8a\xae\xfc\x19\x81\'\x8f\xca\x8d\x95\xb8n\x0f\xe9C\xce\xab\xb9\xce}\xa9\x7f\x17k\t\xabx\x8a\xfex\t0\x07\x11\xc2\xde\xe9\x1a\xed\x07\xff\x00\xbb\x19\xa6\x16\xd3J\xa0\x15c\x8c\xd3\x08\xa1o1\x81\xe4\xb1\xef\xd0\x9a\xb0Ah\xca\x9c\xafR*\x04\xc6(\xd1P\x01\x80\x00\x15\x01\xa6\x05\x89\xa9[\x0b\xb7,\x17\x07\xf1s\xedW\xad6gVP\xc4\x90{\xd5OO\xb2\x0c\xc0\x007c5q\xb4\xb7p\xbb\x1b\x82\x80c\x9c\x7fz\xca\xf5\x17\x88\xea\x00\x0f\x9a~\x19\x1b \xd5\xe7K\x95\xa3+&F\x01\xe0\xd6\x7f\xe3k\x05\xd3\xf5\x04\xbc\x88(\xb5\xbb,\xe8\x06=2\x7f\x12\xfd\x0er*\xd3\x0c\xcd\x1a\x80\xcd\x80z\x9f\x8a\xcb>\xd7<P\x9an\x97\xa5\xd8?\x96\x1a\xe2\xe1\xa6I\x19\xb9U\x88m\xc0\x1f\xee-\xfd)\xce\x8b4\xb7O\x07LH\x8b+\xb3>y\xc3\x00w\x1fj\xba\xb2v\xf3\xd7I\xdd\xb6\xc7\xc5-\x05\xec\x060\x03\x1c\x80O=\xf1\xfd\xa9\xbd\xd5\xc3<j\xd1\xb1W<\xf5\xe3\xf3\xac:O\x1a\xc7\x12ok\x88\xce\x17\xa1!y\xa8\xb6\xfbAl\x81\tY\x18\xfe \x1c\x9cV\xaa?\x0b\xde\xb3jX\xf8=\xc6\xd5y\xa5\x87-[\xdak)\x03,S\xb8`\x06\x0b\xa8\xcdv\xfa\xcd\x9c\x91\xfa.\x08=y\xe3\x1f\xf7\xaf\x9c\x9b\xc5\xd7\xf3\x04\x1fv\x93\x8e\x08\x04c\x1f\x15\xdc\xda\xfd\xe4\xa5O\xdd\x99\xc0\x18\xc1!@\xa9_\xfd)&Af\n{\xe0\x8cW2\xbf\xee\xdf\xeb[\xe5\xc6\xb7m\x1cA\x85\xea)\xdb\xc8,I\x18\xfaT|^0b\x98K\xb2\x13w;\x97\x1b\x87@Eav\xf7\xda\xa4\xad\xb5\xe2]\xbb\xb3\xc3\x1c\xd4\xc5\xbd\xae\xa5p\xad\x1a#\x03&8\x1c\xf2)\xd3\xe1\xebh\x01\x12J\xa7\xe7#\x8aC:(\xdd\xc5o\xbe\x11\xf1k\xc9\xe2\xbb\x0bY$m\xf7\x02H\x91\x98\x82\x06P\xe3\x8fsZ\xad\xf4\xc5T\x92\xdd\x06I\xf6\xc5|\xc3\xe1o\x06k\x96z\xae\x9f\xa9\xcd\xa9yB\x1b\x98\xe5H\xd5C1\xd8\xd9\xc6s\xc6}\xebs\xfbH\xd6\xc7\x87\xed\xe3H\xff\x00\x1d\xd4\xa4Dz\x8d\xa0d\x93\xf9\x1a\xc8\xf5\xbe\x9f\x0c\xd7\xf6\x10\xd8\xcc&\x07\xd2\xc1s\x80\xe7|\xef\xf0;{UM\xe3+\xc8\x9eY\xc9\xc6\r)\xe7#\x9c\x92>+\xd0Q\x89;\x80?\x15\x92Xx\x82\xf6V\x0c\xd3o\xfa\x9c\x7fJ\xbc\xd9j\xcb*\xa9|g\xa7>\xf5\x1a\xe7\xa6Om\xce\xff\x00J\x8cd\t\xe9\xa9\xf6\x8aNJ\x9d\xc7\xa8\xc5s\x19e\'<\x03\xed]\xad\xc4s\x04\xf2\xdbc\x03\xff\x00\x98>\xf4\xe0\xc4X\x06\x07\x04\x1e\x0f\xfc\xd5qb\xbb0\xc55*\x16\x19RI\xa9I\xf58\xec<9\xac\xdd<\xcb\x1f\x93\x02\xb6\xf6\x19\x00o\x00\xf1_8j\x1fhZV\xa1y\x1bOy\x10}\xec\xbe\xa9\x17\x85S\xec:\x1a\xd8\xfcK\xa3^x\x83\xc1\xfe&\xd2-\x15\xcd\xcd\xdd\xa8TE 3\x15ul\r\xd8\x1c\x81\xde\xbeq\x8b\xec\x9bRHb\xb5\xb8\xf0}\xdb\xba72\x08\xc8g=\x06\xe6S\x8c\n\xda\xf8mz\\\x9d5\xd6\xee\xe9\x90\xc7;\xaa\xc6\xac\x06A\x1a\xb5\x10H\xcf5ea*\xacE\x98\r\\o\xcd^\xe0\xfbF\xf0\xce\x9a\xd3<\x1e \x81C.\xdc)\x0cN9\x04\x83[\x96\x8aZ+(.\xee#\xff\x00\xab\xbbE\x94+\xa8\xdd\n8\xca\xaf\xc3c\x93\xdf\xb5d\xde\x13\xfb\x1d\x83N\x969u\r6\xd2\x08\xdd\xa3-\x06\xd1$\x84#\x06\xf51\xc8^\x9c\xe2\xb5\xc4\x91n\xae^F<\x97\'\x8f\x9e\x95Y\xd7\xafl\x16\x1f\xc3t\xf9\xee\x1dA>c\xb3\x0c}\x06?zM\xcc\xe7 \x00\x01<\x9e\xf8\xa7\xba\x87\x86\xb4\xcf\x10Ejo#c21+"\x9c\x12Xckw"\xa1\xbcK\x7fm\xa1\xe8z{3H\xd1[D\xb6\xad\x85$\xef\x8cm\x00\xfbd\x0c\x8c\xd6\x81\xa43#\xefd\xc9\xe3g\x1d=\xcd6\xd7|94\xdfx\x96(\x16\xea\x0b\x88\xc8\xba\xb7n\x8e\x0fQQ\xbawM\xea\x13\xf4\xb4\x9d\x96[\x88V\\\xb4\n7E\xceu\x03\xc9\xef\xb7\xb5A\x92|\xe9C\x92\xab\xda\xbe\\\xbf\xf1f\xa1t\xc4Z\x7f\xd3G\xf1\xcc\x87\xe4\x9e\xdf\x95F\xc2%\x95\x84\x93\xc8\xf219;\x98\x9f\xefZ\x1d\xf7\xd9\xf5\x94s\x13a\xa9y\'\'0^\xab\x06S\x9e\x00d\x07p\x02\x9a\xc5\xe0\x8dE[\x11\xdeYH\t\xea%#\xfa2\x8a\xbeK\xae\x9b\x1ai\x81\xe3M\xbb\xec\xdf|\xef\\2\xc7\x8fF\xff\x00\x14\xd2\xc4\xc21\x94\x07<\xe6\xadVZ\x8c\xb1\x10"\xb8\x922?\x0e\t\x1f\xfcUe\xf4\xd9\xecn\xe7\xb6\x93\x02H\x9c\xa3`\xe4n^84\xfa\xda\xd6w\xfc$\xb6\x7fJ\xab\xbaH\xd8\x92\xcf\xc7\xbfj\x8a\\\xea\'Q\x15f\x17h\xc7q\x1e\xa3\xd4\xe7\xa9\xf9\xa7\xd1\xde\x15\xda\x018\xa88ld\\\x89%U\x03\xf8@\xcd<\x8e\xde@\xa3\xd5\xc0\xeaGz\xa7\x928N}Y\xa5\x87>\xf5\'-\xfb\xe3j\xe7=\xc04\x97\xde\xeeX\x9d\xccp:b\x91\xf2\x89\x19\xc6s\xdcWd;\x80\xbbz\x7fz`G\x18\xc0\n9\xa7D\x87s\x9aF\xfa\xee\x05\xb5&k\x80\xacd]\xaaz\xb8\x1d@\xf9\x15y\xf0\xcd\xcce! \x8d\xa3\x18\xc7\xb5|\xe5u\xa8\xc9w\xab\xca\xd7\x0f\xb0#\x98\xd5\x0e}88\xfd}\xebm\xf0L\xc2a\x97`V\x04\xc9\xfc\xba\x0f\xce\xafR\xce[9\xbaqL\x172.s\xc0\xd4\x7f\xb5C\x13\xf9\xb31\x1cc\x1f\xa59\xbd\xb3S\xaaj\xcc\x91\xe3m\xcb`\xe7\x83\x93\x9aR\xcaG\xb1\xbd\x86r@1\x9d\xe0\x9fq\xd2\x95\x9a\xe5\xe0y\xd8\xa2\x96\x9efs\x9e\xdfJK\xef3\xac\x84[\xc4\xaf)\x1e\xa6+\x95\\\xfdx\xcdt\xdc\xc3\x1fQ\x13F$\xd4\xb3\x19=+\x92\xbe\xa2F\xdbf\x9e\r\x95#5g\x93\xc4\x9a\x86\xa5 3m\x94\xe3\xa5y,\xc1\xf9\x92\xcf\x06\xa0\xec\xc4\xef8\xf36o\x07\xf8@\x04~\x956\x9a\xfe\x8f\x0c\x86\xde\xeeF.\xbc>\xc5\xdd\x83[\x8e\x9f\xe2;\x9b\xa4qy{\xa3\xd4\x02\xb4\xea\xa1~\xfe\xd4\xd1\x8b|\xf7=\xf3\\\x84g\x07\x10\x81V(|z\xfa,1Y<\n\xec\xab\xe9^\xff\x00\x9dBO\xaaX}\xdeG\xb2t-\xfc,\xc7\x91\xf9U^\xd6\xd5\xaen\x1e\xe2F\xf3dl\x16c\xcdX\xddu\xb9:d*m\'\x82Y\xa5\xc6J\x05e\xc0\xa5&\xa5l\xab\x10x\xda\xb6o\x0cx\x9bT\xd5\xb5"\x97\x11\x8f&X\xcb(\x1cl"\xb4z\xc24\xdb\xc9\xec&\x8aX\\\r\x84d\x0e\xff\x00\x06\xb6\xfbK\x84\xbb\xb6\x86t\xe9"\x06\xadgE\xea\x9f\xeav\x8a\xce\x7f\x8c\x98\x12l\x009\xee1\xda\xac-\x1c\x90\xca\xccI\xceF}\xa9\xc5\x14QW\x152\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a\xc4\xbcix\xf7Z\xdc\x88\xc8T[\xa8\x8dA=A\xe4\x9f\xce\xb6\xda\xc3\xbcq\x87\xd6\xee\x1e \tUP\xc3\xdc\x81Y\xef\x13\xb3/H\x9b\r\x8c\xba\x82=\xc7\xb5E\xbb\xfc\x89\xbf\xf3UU\xd1@9\\\x8f\xedM\x00X\xa4\x8d\xd1\x97*\xc0\x81\xedN\xa3\x98\xc9\x19\x05v\xed\xeej>tF\xc3#\x1d\xc3\xe3\x15\xe2\xb7\xb3\xf9`\xb2\x91\x91\xb8\xce\xc7\xedQ\x06*~\xc7\xc4\x93\xe9\xb7+4k,l\x0e\tR\n\xb0\xf9\x07\xa8\xab\xb4\xff\x00ip\xfd\xd3\x11X\xc9\xe7\x91\x8d\xc4\x80\xa0\xfb\x81Y*\x89Hb\xc0\xf1\xdb\xb7\xe6i\x0fF\x18u\'\xb88\x14\x9b?\x19\xf5\xeb\x0by \x82\xe1\x04g\xf2\x92\x80\x95\xcfu\xf6\xa7Ad\xe1\x88\x07\xb5X\xaf\xb5\xb7\xbd9}\xe4\x9eI\xebL\xado\xe7\x82Uer\x84\x1e\x18\x1cT#8\x00\xfa@>\xfb\xab\x9f\xbc2\x9c\x0e\xbfZ\xa3\x92\xf6\xfei|\xe6\xb9s.s\xaf;\xe7\xdf4\x06\x02\xbe\x9a\xf0\xb6\xaf\xfb[L\x8d\x9eM\xd3G\xe9s\x9eN:\x1a\x9e\x9a\xea\xde\xd9KM2 \xf9 W\xcb\xd6\x1a\xdc\xfan\x1bk2H@*\x0e\x08\x03\xa9SR\xed\xabY\xde\xef\xdb,\xb1\x95\x00\xfa\xf9\xeb\xf4\xce+\xd6:\x7f\xfdC\x85:e\xb8\xb8\xb72]F\x81d\xcb\x84\x0cF\xda\xb2G\x7f\xebO\t\x88\x1av\xcf\xb9\xad#Y\xfbC\x8a\xd1\xc4:v\x97=\xe3\xb3\x84\xf3\x0f\xa2 OrO8\x15\x9f\xf8\xcfH\xfd\xb9c&\xa2\xd76\xc9w\x14[\xa5X\xb8\x88\x80?\x08\xef\xf9\xd4L\xecJ\xb4\x81\x83(\x1f\x89Nq\xf5\xefPW3I,r#\xb1!\xcf~\xe2\xa1\x1f\xfa\x93+\xad\xc2K\xd3\x90\xa4\x83\x11\x85li\xf6$\x9c\xe7zi\xf2YX\xc8r7\xf8\xac\xd9\xed\xae\xe3\x91\x9f\xd3\xb9{(\xcf_\x93P\x9a\x84w.\xc1\x9c\x05\xc0\xc7\xb1\xc5h\xabk\xbd\xa5\x04\xa8\x00\xe0\x1cd\xfc\xd3\x01\xa1^jW\t\r\xb9Vc\xd3\xa8!{\x92{\x01Y\xd8\xfcA};\xe9{\x83\xb9\xe0\x0cs\xf4\xa9"~\x08\x1b\xd5\x06\x0f\x16k\xba&\x99s\xa6X\xdd\xa4P\xcd0\x95\xbft\x8c\xfb\xc7p\xcc2:T\xff\x00\x84\xbcA\xe3\x7f\x16\xf8\x97J\xb5\xba\xd6\xaee\x869\xa2\x9ew;p\x90\xdb0rr\x07\x1d0=\xc9\xad\x01>\xcc\xbc6J\xfd\xeaK\xbb\xa9\x00\xf5\xe2A\x1a\x13\xf0\x00\'\x1f\x9d[t\xad\x13L\xd1|\xc5\xd3t\xe8-U\xd1U\xcags\x80s\x86$\x92@\xeb\xd6\xa4\\\xf8\xfd\xad\xad\x1e\xde\x0b\xeb\x99X!@\x81\x98F;`\xee2(\x10F\xef\xad\xa1B\xc4\xe7Q\x199\xab\xe9\xbf\\3;`d\x95\x15\x15q\xa8\xa9\xc9\x0c\xdf\xda\xa3\xc8v\xf5\x17\xff\x00\xb5G\xde(A\xcbn8\xcf\x06\xbc\xc1\xaf.\xaeB\xa4\xb3\xb3o\xbe3\x93\xf5\xa9\x18E\xdc\n\xf6\xe7QT\x01\x94\x93\xf4\xa8\xe6\xd4\xd2\\\x00\xc0\x1a\x8b\xb8\x95W \xa0?\x9dB\\\xdd[D<\xc7\x05\x06x\xc5L\x82\xc9\x18\x00\x14\xe7\xb1\xa6\xd9\xf3\xc1\x15b\xba\x9f\x7f\x1b\x81\xa9\xad*6\x86\xc9\xef\x0b\x06\xdb\xbfb\x8epTu?>\xc2\xb3\xa8\xbcA\xa6\x86Uk\xc5L\xff\x00\xfbN?\xa9\xe2\xae\x9aM\xfced\x84\xb8h\xae\x17i*~1\x90zdT\x89\xad\xe4\xb7OTl\xbd\xc3\x11\xed\xde\x98*\x0b\xea;\x8a\xf9\x9bX\xd1n5}F\xf3P\xb9\x95\xe4\xb9\xb8\x95\x9d\x86\xff\x00H\xc9\xe0\x0f\x808\xa6\x9a7\xd9\xfd\xef\x895\xcb->\x08J\xf9\xb2\x00\xf2\x7f\n \xfcNq\xec?\xadm\x9a\xe7\x85\'\xb6\x12M\x00Y\xe1\x1c\x96N\x19@\xfee\xeb\xfaqZ\'\xd9f\x83\x1d\x8d\x96\xa1\xabH\x99{\xa6\x10\xc6OQ\x1c|\x9c}[\xfbW\xa3tn\xa8\xd7m\x14qL\xa25N\xdc"\x81\xc6\xdcT\x83t\xea\xa7\x90@\xc0\x1d\xabB\xb2\xd3\xed4K\x0bK\x1b\x18\x846\xf6\xd1,h\xa3\xf9Tc\x9fr{\x9am~\xec\xc9\xb8\xb89\xc1\xc7\xfcT\x8c\xf3n`\x00\x04c\xe9\xd6\xa0/fb\xfe\xac\xe1p8\xe83U~+\xb9\x8cY\\,e\x8a\x93\xa1Td\x0c\x9eO\xb5AF%\xf2N\xfc\xe6\xa2g;\x94\x9c\xfdj2c\xeeq\xc74\xfaFWc\x86%@\xeb\xd0T-\xfc\xc9\xf8\x17\xae:\xf5\xc0\xaf6\xb7BX\x0c\x7f\xc5H\xceO4\xd2I2I\x07\xe9MD\x85\xb3\xc8\xe3\x82M \xf2\x97\xfc+\xb4\x1e\x9c\xe74\xd4\xcaT`.y\xcfsV\xe9\x16\xdf4\xf2\x8cc\x82*aU\x8er8\xc6i\xfd\xbf\xe0\x90g\xaf8\xaa]\xc7\x88\xac4\xf6\xff\x00\xac\xbe\xb6\x84\x8cq$\x80\x1f\xd3\xadHi\x1e-\xd0\xf5\x99E\xbd\xa6\xa1\x0b\xce\xe4\xaa\xa6p\xc4\xfcg\xadv[+\xbf(\xc8-\xe41\x8d\xcb\x85%G\xde\x91*d\x16\x1d\xab\x04\xfba\xf1\xad\xd7\x87\xfcr"\x82\x1f5\x7ff\xda3\xa8b\xa4\x96C\xc7\x15\x967\xda}\xdc\xad/\x9b\xa3\xc6\x03\x1e\x81\xb1\x9f\xaeEi\x9fk\x9e\x0f\xd7e\xf1\x96\xa3{\xf7X\x9e\x0b\xa0\x9fvep\x0b$H\x13\x1e\xacz\x81\x1c\x8a\xc6\xa7\xf0\xbe\xb8\xae?\xfc\x9a\xe7\x9e\x87fG\xea+\xdb:\x1c]\x06n\x95\xd3D\x8b\x03H-\xa3\x0c|\xdcz\x80\xc1\xd8\x11\xb85an\xf8\x8a?X\xd9GaR\x92}\xa4\x82\xe1\xff\x00b!a\xf8s\'\x1f\xda\x99\xa7\xda,\xa2G\x95\xec\\\xc8s\x8cH6\x8c\xf6\xe4t\xa8\xf5\xf0\xc6\xb4\xdb\x8f\xeck\x9cd\xff\x00\xf4\xeaF\xcf\xc0^#\xd4\x0c\x86\xdbC\xb8\x90F2\xe4&v\x8f\x9cg\x15na\xf0\xec*K\x88\x94c\x04\x99\xbf\xc9\xa7\x0c\xc7\xb3\x8f\xda\x9d\xff\x00\xf8\x8biq\x95\x9a\xc6TP\tV\x0c\x18\xee#\x1f\x1cT\xd5\xaf\xda\xa5\xa4PG\x0c\x96\xf2\xb1E\xc2\xca\xcb\xdb\xe4\x03^i\xbfc\x1e\'\xd4e\x89\r\x83\xc6\\\x16\xc9\x89\xf6\xed\x1c\x92Y\x80\x1d?^\xd5\xa1K\xff\x00\xf2\xdd\xa9\xe9\xf7Q\xac3[j\x80\xa6\xef5e\x11\xc6\xa4ve|\x1c\x9e\xd5\x1aH\xbc7,d\xa8i\x02\xb6\x02\xa3\x13\xbf\xc6i\xb6\xbaE\xd9\xa4\\\x9f\x8a\xa0\xaf\xda\x842\xedcg3aq\xb8!8\xf9\xe4\xd2R}\xa5Y\xbe\xfc\xc50#\xa3\x08\xfb\xfb\x9a\xd1n\xfe\xcau{\x11"\xcd\xa3\x00\xa8v\x92\xa08\xc8\x1c\xf0\xa4\xd5j\xeb\xc02\x95d\x93Bm\xb9\xe4\x84\xdaz|\xe0\xd5J\\xm\xdd\xbf\x84\xc3Ka\xbf\x886>\xc7=\xfe+\xa2u\xf7S\xf2*\x997\xdaXW\x1b\x16V\x00\x83\xc0\x18\xff\x00\xc1M\xe7\xf1\xfc2\xa6\xe1\xe6o\xe9\x82O\xf8\xa9\xd3\xe0k;|\xe3H\x97p9\xf5\xab>G\xc7j\xec\xe8\x90DB\xad\x91N\xc0yx?\xa6*\xc1d\xe8#I\x8a\xd5\xce;\xea\x03?\xa6i?\x88\xdf\xb7\xe9UX\xfc]\xa9\\:\x18,\xe4m\x83\n\xf9#\x19\xfa\xf4\xa7\x91\xeaZ\xfc\xcc\n/C\x9d\xacr\x01\xabU\xa6\x859\x0f\x98\x02\xaex\xdd\x80~\x95g\xb7\xf0\xe6\xd5@\x033\x12\x0bm\x1d\x14S\x17\x1dK\xa6\xc2N\x8bh\x87m\xce\xaaK\\\x1f\x81X\xfc\x97^(\xb5\xc1\x8e\xda\\\x02x\x89\xce}\xfapi\x83x\x93]\xb5dv\xb3\xb8FN\xf2+\x11\xfds[\xc4\xba3Fx\x8d@\x1d\xb1\xfd\xeb\xc8\xb4\xb7\x90\xa6\xe5\'#\x91\x8e\x00\xa4/]\xb2+\x97\xb1\x85\xc67\xc1#?\xd6\x93\xf8\x93\xefXu\xbf\xda\x16\xaa.c7\x13Hb\x07\xd4\xa8\x13p\xfadS\x9dG\xed\x1bP\x96y\x05\x92\xec\x87\xa2\xb3\xa8\xde~O\\}+G\xd7<;\xa5\xcadY\xaccn\x17-\x80\x1b\'\xd8\x8ej\x85{\xe0\xdbd\x02[9\x08\x07\x1e\x899\x1f\xadX\xda\xddt\x1b\x92\x925\x88\x8c\xe3\x00\x10\n\xfb\xf6\xefJ[\x80N\xec?J\x8d\x83\xc7\x1a\xfc\xd8W\x96"\x07L\xa0\x03\xfaT\x94~!\xd5\xef\x0e\xc7\x9e-\xa4\xe7\x1e^M1\xb3\xd1\xcd\xbd\xc1Y\xe1\x08~z~\xb5t\xb0\xb1E\xf2\xd9\x13.\xe4\x05\xe3\xa7<qN]\xbfN\x87x\xad"\xe3b\x00\xc5q\xe6#\xbe\xd5`\xf0/\x8a\xb5?\rx\x87N\xd4\xd0\x99"\x85\xf6\xcf\n\r\xbedM\xc3/?\xd3\xe6\xbe\xe0H\xb4\x1f\x1c\xe8l\xc9*M\x15\xc2\x86h\xcf\xa6D=G\x1dU\x87\xbd|\xa1\xe1\xcf\r\xb0\x9a9\x1d#\x0crTI\xc9\xcfs\x81[\x06\x97\x13[\x82\xca\xc5$\xfc\'o\x1bJ\xf1\x81\x8a\xf3\x8e\xbb\xd4\xec\xa4\x93I\xb7\x12\x05\x07\xf2\xb6\x82\x1b\xb3)\x03\x91\xefU\x973+\xb7\x19<\x1f\x91Yo\x8c\xbe\xc7|cm{,\xbax\xfd\xa5i\xd6=\xa5VP;\xa9By\xc7\xb8\xebX\xc6\xa5\xa3j\xdaD\xad\r\xf6\x9duh\xd98Y\xe3d\'\xe9\xb8s\xf9W\xdb"\xe2W>\xa9\x1f8\xc0%\xba\x91]L\xb1\xeaV\xadg}\x02^[I\xe9x&\x1b\xd0\x8fp\x0fC\xf29\xa8v>3\x9e\xd8$w\x16\xcb$k\x81\xa9p\x1f\x1e\xe7\x18\x07\xf6\xa6V\xe3H\xd2\x10\x01_\n\xc7\x1c\x8e\xdbS$\x91\xd0\x0c\xd3\xf8\xa0\x91\x93vx\x07\x05\xbb~\xb5\xf4w\x86~\xcf#\xd0\xfe\xd1/\'\x88\x13aif.\xed\x0b\x9c\xb07\x1b\xa3Tc\xdc\xa1\r\xcf\xc0\xadB\xe6E\xb7P\x91\xaa*\x11\xf86.\xdf\xd3\x18\xab\xce\xa5\xe2\xcb{W\x81a\x87\xce\x12F\xae\x08m;0\xcf\xb1\xedMH\xe4\x83\x9d\xab\xe3{T\xce\xd1\x92FFqW=\x1fO\x132\xbb\xa9+\xb8\x0c{\xd6\xf3\x7f\xe1\xbf\x0c\xeb\xd02\xdc\xd8Cmp\xc3+uj\x8b\x1c\x80\x8f\xe6\x03\x01\x87\xb8?\xadu\xa7\xf8\r-\x95<\x9b\xfb[\x80\x08\x03\x07c\xf3\xfe\xd6\xe9U7>%\xb5\xb8\x81\x8ca\xd1\xf8(\x7f0\xfd9\xa8\x12E+\x91\xa0\x06\x07\xb8\xaaE\xbe\x8f\x1c\x85\x0e\xc6\xe3\x90A=~\x95d\x8fDv\xdb\xc1\xce3\xc0\x03\xff\x00\r_m\xbc/s\x12\x82-\xc1\x1d\x01\x0c\xa4~\xb5%\x0e\x9f\x0c\x04\x1b\x8b\x84Q\x8f\xc2\x9c\x9c\xfdzV^\xe6\xea\xf8\xe9&\'\x8dO\xe5i}\x00\xfd\x0bb\x97\x1d\xa3\x9f\xcd\xde\xa9V:Q\x89\x99\x81`q\x82A\xebR\xebf\xc5\xbd#\x92@\xabR[\xe9r ?{h\xd8\x0ca\x97?\xda\x9eEki\xc7\x974nH\xeax\xe7\xe8j\x17\xe1\xee\xee\x1d\x0f\x99\t\x0e\x01\x18\x95\x0bc\xff\x00\xc4\x1c\xd4\xc4\xb7\n1\xedUck\xe8\n\x0epq\x83\xef_\x11\xfd\xb5j3k\x9e1\xbd\x82)\x0b\xdb\xe9\xea\xb6\x91\xa8\xce7G\xcb\x9f\xcd\x89\xaf\xb5\xfcc\xad\xd8xGL\x97Q\x9c\x92\xc4\x95\xb7\x80~)e# \x0f\x81\xd4\x9e\xc2\xbe\x1e]:k\xa9\xa5\x9eV\r$\xae]\xdd\xb9\xcb1\xc95\xbd\xf0U\x9f\xfal\xf77\xb3\xaf\xa9WDd\xf0s\xb9"\xac\xac\x94+\x97;\x000+0\x83A\xb9\x95\x810\xf1\xeeO\x15j\xb2\xd0\xe5\x85\x00\x12\x04\xc8\xec\xa3\x93W\x84\xd2\x98\xed\n\xe0\x93\xd7\x03\x8a\x99\xb7\xd3\x81\x040\x00\xa9\xc6@\xff\x00\x9a\xdb\xddu\xd7u\xc6\xa1\x8fl\x7f\x9a\xb0i\x94\xd5\x03\xf6}\xf5\xa0\x0f \r\x11\xea\xc0r\x07\xb9\xa9KhP\xe0\x81\x92{\x9fj\xd1\x06\x8e\xf3\xdb\xb4[\x15\xb7\xae>\x83\xde\xaa\xd0i\xeb\xa6\xdc\xc9g37\xe2\xcc\x0cz0\xfe_\xa8\xaa\xd5\xeaKr\xb2\x0c\x8dk\xbe\x17\xb8\xf7\xa8\xef&T\xe98#\xb0\xa9\x1b\r>\'\x8c\x83\x18\x05\x87$\x8e\xdf\x15t\xb5\xb7\xfb\xb3E\x1a\x8d\xfb\x80\'\x18\x18\xc7o\xce\xa0\xed %w$\x84\x10z\x1eEY\x04/\x01\x82B\xc4\xe3 \x93\xdf<\x8e\x95\x9d\xbd\x99\x9d\x88/\xcev>\xf5Q,\xees\xb9\xab\\n\xea`\x1e`\x07a%@\xc63P\xff\x00k\x8en\xb4_\x07\xde\x10\x08\xc4\x90\xcb \xfe\x07\x00\x00\x08\xf6;jB\x162\xbc\x7f\xbb\xc6\x14\xe3\x91\xc0\x1e\xdf4\xb7\x8ctU\xd6\xfc\x03\xac\xda(f\xb8\xb2Cyj\xdd\xc3F9\xc7\xd4dU\x15\x9c\xebk\xd4l\x19\xf0\x14\xce\xaa\xc7\xfd\xba\xb2\xba\xb6\xf6\xcdv\xd1\xc3\xdc\xc4\xac\xd8\x0c\xc0\x13\xed\x9d\xab\x15\xd2\xa5!\xc2n\xef\xd3\xb1\xab\xc5\x9c\xcd\x16\t#\xaf_\xad|\xe7a\xe2\rF\xc5\x93p\x12\xaa\xf4\xcf\x07\x1fZ\xd8\xbc7\xe2\xdd\'P\xd9\x0c\xd2\xf9\x12\xb0\xc0\x12t\xcf\xd7\xa5mz\xcfJ\xb9\x85ZA\x1f\x98\x9d\xcaoW]K\xc3\xfdB\xd83\x88\x8b\xa0\xee\xbb\xe2\xb4\xdb[\xfe6\xb3\x02r\x06*\xc3\x15\xfb\xac\'\r\xf8q\xb7=\xbe*\xb8\xb6\xaa\xca\xac\x17 \xf4\x91\x0f\x18\xa7\x04\xed!wzOP;V\x16h\xa2\x90\xec;\xee*\x85\x0b\xa1 \xe75\xa2\xf8V\xf7\xef:\x88\x85\xc7\xac\xaf\x1f \xd6\x81r\x96\xb6\xeae\xb8\x95"\x8d2w1\n>\x9f5\x82\xda\xdd]\xc0\xe2X\'hd\x88\xed\x0c\xa7\x04\x02:\xe6\x92\x9e\xe2\xfbP\x93}\xcd\xe4\xb2\x9c\xfe\'b\xc6\x95l"\xb7\x8eU\xd0\xacZ@\xd8<\x0c\x01\xfa\xd0\xd7>^\xc4\x12j\xe7\xaf\xf8\x99&\xf3-\xb4\xd8\xa4d9\x12O\xb4\x8c\x8e\xea\x83\xae\x0fsQ\x96bO-$\xf5`\xd4E\xbc \x10\xa5\x9b$n\x1c\xd5\xcfF\x11L\x05\xbc\xa0\x1c\x90\x03\x01\x92\t\xf7\xf7\xa8\xae\x12i#\x8be.\xd8\xcf\xc9\xd8Ts3J\xd9<\xe3\x8a\x95\xd3\xef\x9dcP\x8c\xa4\x8e\x08|\xe4U\x8e\xc3]\xb8\x8cm\x93\x07\xe0\x0f\xf3P\xe7K\x8a3\x91#u\xc7\x03\x19\xfdi\x06I\xe3\x90\xa4G\n8\xc9\xe4\x81\xfej\xf2#\xd4\xfa8\x8fD\xce\x86=\x82\xa3\x03\x91\xf4\xa09\'9\xab6\xaf\xa6\xe9\xfe"\xb2\x91\x93dW[s\x198\x07p\xe9\xf9\x1e\xf5\x91i\xad"O\xb5\xc7\xef\x15\xb0~\x1b5tW\x9a\xdeF\xdf0\xe0c\x1e\xe0\xd5\x02\xde\xe6(\xb5\x8b\x95\x88*\xc7\xe6\xb6\xc0:(\x06\xa0u\x0e\xa4:\x8b\xb4\x9f\x85\x11]F\xa4\xca\xcb\x8c9\x1bd\x81\xc1\xa5\x902\xa7\xdc\xe2\x9bj\xb7\x01\xb5\x9dQ\x99Cm\xb8a\xd38\xe7\x1f\xady\r\xd2\x06<\x01\xc7J\xa8\xf8\xca\xe2\xfb\xc3~"\x92\xe8C#i\xda\xab\x99-\xa5<\xa7\x98\xdc\xbcE\x87GS\xd0\x1e\xa2\xbd\xb3\xbe\x8e\xe6/6\'\'\xf9\x94\xf5_\x83R\'\xb0s\x1csgTr\xa8eq\xc1\xcd?-\x9b\x84Y\x14\xeaV\x19\x15y\x8aQ,\x80\xa9\xe0\x03\xb9OCR\x96\x86!\xc3)\xc7lv\xf8\xe7\xb5S-\xef\x940.\x02\x9e\x99\xecjun\xc9Q\x85\xe7\xa9\xfaUT\xb1\xc9\x13&\x06\xc3\x8a\x8829\xad"\xc3C\xd3\xee\xb0\xd1\xccK\x11\xf8J\xf0\r/w\xe1\xd1n\xe8s\xe99\xfc#\xd2q\xda\xaa\x1a^\xb6\xd0\xca\xbc\x91\xef\xcfZ\xd1\xacu\xc8.\xa3\xf2\xa5\x01\x81\x1d\xf8"\xb4\x9d?\xfd\x07\xa8@\xd0\\@\x96\x97[i|\x9d$\xfe\xa7\x9aX;s_6\xfd\xa1h\xebg\xadA,P\x84\x8e\xe6 \xc5\xb1\x80\xd2)\xc1\xcf\xcdZ~\xceU\x05\xcd\xd3\x19\x0f\xfa\x1bv\x16\xe8s\x9e\x9d\xebX\xd4\xf4m7Z\x89\xa2\x9e%\x9a\x169P\x7f\x10>\xe0\x8e\x84V\x0b\xafYO\xa3j2\xe9\xf6\x86D\x08=r\x81\x82\xc1\xb9\x18=\x86:\xd7\x03L\x8b\x12\x1d#\xca|\x06\x07*Tw\xfb\xd4c\x11IL\x83u<\x8f\x9a\xd4\xb5-CLI\x99Y\x83\xc8\x8a\xdb\x11y\xf5\x9e\x99\xf8\xa4\xf4\xa4\xdf\xea\x91\x8b)\xed\xeck;\xd1\xednV5f\xe4\x83\x81\x9e\xf9\xab\xdd\x95\xf4P\x05R@l\xf7\xf9\xaa\xe0\xcb\x1c\xc4\x927r\xc5\x82\xf3\xf1O+d\xe7\x18\xabrG\x0cE\xca\xf7\x03\x9cv\xac\xf6}\x86\xeaY\x1fq\x0f#\x10\xca\x07sV\xf95\x05H\xf2\x8a\x19\xfd\xbbUm\x19\xa5\xbb`\xf1\xe1X\xe7i\xed\xf4\xa5\xdf\xc8%\x8e00\x06\xb3\x81\x8f\x7fzt\x11M\x85\xbbF\x99[\x9d\xc1\xbaeNA\xaf\x04\xb7V\xec\x1d\x19\x94\xe3\xaa\xe7\x15a[X\xc3\x00\x07\xa4\xf0E8\xfb\x9c\xa3p1\x86\xc7_\x91]\xb6\xb5w\xc1\\\xf6\xe3&\xbb\xb5F\xd9x\x82A\x95\x96#\xbcp\x18\x0e\xbf\x95}\x11\xe0\xb9\xee$\xd1\xa3I\xed\xe6\x89\xd1\x89\x1eb\x95\xca\xb7#\x19\xebY\x07\x84\xf48\xef|Ej\x18\x0f.#\xe6\x15<\xe7\x15\xf4`\xe2\xbd[\xc1\xfd2Kky.\xe4\x95\x89\x94\x14T\xce\xd8\x04z\x8f\xce\xd5&\xd1\x18\xb9|\xe0.\xdfZ\xf6\x8a(\xad\x9dXQE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14Rs3$R2.\xe6U$/\xb9\x03\xa5|\xfd4\xb3\\\\\\\xbc\xeaw\xbc\x8c[>\xf9\xaf\xa1k!\xf1F\x9e\x96:\xa4\xd2m\x029\xc6\xf1\x8fs\xd6\xb3>)\xb7\x96k\x04t|,O\x97\x1d\xb0v\xcf\xda\xa1\xdd\xa9\xf47`q\xfa\xd5D\xdb\r\x8b\xd7\x92I\x18\xf7\xa6SZ\x7f*\x02s\xc5K\t!\x03`?\x9flR/s\x14(\xce\xdf\x88\x8c\'p\x0f\xbdx\xd7P\x8e\x06\r\xad\x80\x1aw9\xe3\x15\x19H\xda\xa0/\x08O\xfau\\*p\xdf\xeeoz\x8eh\xc9\'\x03\xb7Z\x937\x053\xea\xceI\xcey\xe7\xf3\xa6\xd2\xc8\x1eA\xb4\x03\x9e\x8a\x07\xf6\xac\xa3:\x93\x95\xc8\xcf\xf2\xe3`+\xa5\x81\xe4\xd4y@\xbe\xe4\xfb\xf6\xae\x166p\xc5\x14z\x7f\x13\x9e\x14~\x7f\xe2\x9eJ\x91\xdb(\x96\xe8\x91\x91\xe9\x84~6\xcf\xbf\xb0\xa63]\x1b\x85\xdb\xb4F\x8a}\x08\xbd\x05IT e\xf3\xf4\xa4\x17\xc6\xd9\xc7\xc58\x82kI1\x1b\x96s\x1a\xb33(\xc0\xe0\xf4\x04\xd3Iog\xde6\x84D\xcf\xe1^\x9f\x99\xef\\\xdbG\xb2;\x99\t\xe0\x80\x99\xf9\'?\xe2\x91\x90G\x18\xcb\x11\xff\x00jX\xd3\x92\xa1F\x0f\xc5\x19v\x0b\xda\xa6\xed\'hf\x8aTc\x83\xc8\xef\xc7qIjP\xed\x9eU\x07\xd3\x92\xcb\x8e8<\x8ai\xa6]\xa4\xcb NDM\x8e\x9c\x10y\xe2\xa6u8K\xad\x94\x8b\x19!\xa1\xf5\x11\xfe\xd6"\x90\xaa\xc0J\x879B\x1b\x07\xb0;~\xf9\x14\xe1$\xa8\x1e\xd5\n\xb1G\x02\x0fI\xc0\xf6\x19\x1c\xd4\xf7\x83\x81k\xeb\xe4\xc1P\xd6\xc7\xf3\xc3\na\xfb\xa7\x0c\xa4\xe0c\xa5Z|\'\xa7yb\xea\xf00m\xc7\xcaLu\xc7\xe2&\xacl\xd0\xb4\x89\x8c8\xd0\xe4\xe3\x9e\r)3\xa8|T\xa3Zm$\xed t\xcd{\xe4\x14\x00\x9f\xd3\xbdLyD\xb0~x\xc7ZO\xee\xccN\t\x04\x9e~\x95Kq\xd1\xa6\x91\xf3\x14O\xeb>\x9fo\xaf\xfcT\xd1(Q\xb9\xa8\xb6\x8c,r\xb9\x1c*\xe4|\xd5Z\xed\xff\x00\x11\'\xe7?5m\xd5\x08\x8f\xcb\x88\x1f\xe0\xc9\xaaV\xa0Yy\x19\xe9\xd2\xa1\x9b_\xc2\xdd\xbc\x04\xe5\x90\xe1\x8f\xcf\x7f\xd2\x9a\x92c\xa75\x01q0P\xcc\xcd\xc1=*\xa1\xac\x13p\xc5O<\x00\x07\xb0\xab-\xf2\x99\xdc\x81\x90\x07\x18\xfe\xf5\x9f\xf8\x9b^\xb1\xd2\x91\x8bJ\x1aS\x90\xa8\x0eI8\xc5i\xfad/$\xd1,hY\xcf\x00v\xaeAoqu \x8e4-\x93\xdb\xbdV5V\x86\x18\x8b9\n\x88\x0e\xe2j\x83\x07\x8e\xf5\r*\xe6&\xd3.\x1a!\x1c\x81\x99s\xb9\x18\x03\xd0\xa9\xe0\xe6\x98\xea\xf7w\xda\xdc\x8c\xccXG\x9c\x88\xc1\xe2\xab\xcb\xa4\xcc\x0eH \x0e\xc2\xbdB\xc7\xa6Z\xac\x05n\xcaHH\xde3\xb8\x1f_z\xd9\xd8t\x08\xa2L\xdd\x1c\xbe? \xed_z\xc1\xa9\xa5\xe5\x9d\x8d\xf4\'1\xcf\x02L\x9f\xfbdP\x7f\xcdk\xfaT\x11Y\xe8\xd6I\x1cj\x83\xc8\x0c\x14p\x01\x7fW\xf9\xaf\x99\xbe\xce\x1ei\xfc\r\xa2\xac\xad\x96\x88K\x08\'\x93\xb5$!G\xe48\xaf\xa4\xa3\x98K\xe1\xeb)\x01\xc7\xfd2\x02~@\xc7\xf8\xac/\x87\xe3\x8b\xa6]\xf8\x8c\x02\x19\xed \x94&\xfc\xaa6+\x1bt\x86)\xe6\x8b9\t!_\xd0\xe2\xa1\xee\xee\x82<\xc3\x83\x83\x85\xc7\xf7\xa8K\x8b\x97\x95\x15\x0bt\xe4\x8frk\xbb\x87.\xe4\xed\xe0\x0f\xedQroa\xb8\xab\x00O\xb5`\xe6\xba\x96\xeaY\x19\x9c\x85f\'N{\x13\x91\x9f\xa5G\'|W\x17\x13\x88\xe2\xdc[\x00v\x1e\xf5\x95\xf8\xb3\xc7\x9a?\x85\xa3W\xbf\x98\x99\xa5\xcf\x97\x04c2\xb2\x8e\xe0v\x1f&\xb4\x8dA\xa2\x83O\xbb\xb9|\x14\x82\x07\x90\xe4\xf1\x84\x04\xff\x00\x8a\xfc\xfd\xd6>\xfd\xad\xeaWz\x85\xe34\x93\\\xb9vbO\x19\xe8\x00\xf6\x1d\x00\xad\x87\x83z\x15\xb7W\x9a\xe1\xeede\x86\x025\x01\xb1b\xdc\x01\xed\xc6\xf5\xa0\xe8\x9d-\xfa\x8b\xc8A\xf4D\x17?$\xf6\xab\xbe\xab\xf6\xdb\xe2+\x8b\x8c\xe9\xd6\xf6\xf6p\x02p\xac\xbel\x8c>Y\xb8\x1f\x90\xaa\xd5\xdf\x8f\xf5\xedE\x0f\xde\xf5\x9b\x97V\xeb\x18}\x8b\xfa&\x05V\xff\x00b\xc8\x06|\xaf\xd75\xe1\xd1\xc8PJ\x8f\xa6+\xd8 \xe9}\x02\xd8 \x86\xce\x15+\xb0m \xb7\xearkL\xde\x1f$\r1\xaa\xe3\xb8\xcf\xf7\xa7\xab\xabBN\xe6~I\xc9$\xf3\x9f\x9a\xd9>\xc6f\x8bT\xf1\xb6\x9d\xceM\xa43\\g\xdfj`\x7f\xfdU\x85~\xcaf\x1f\xe9\xe3\x9fj\xd2\xbe\xccu\xb8\xfc\r\xe2\x06\xd4\'\xb0\x96\xe2\'\xb5\x92\x17X\x88\x0f\xeb\xc1\xc8\xdd\xc7j\x8d\xd7m\xd2^\x93~\x96\xd9i\xda\x16X\xd7 d\x91\x8coPn\xba\x15\xc2\xc3.\x8fQ\xd3\xb2\x8eI\xaf\xba\xae4\xeb-HG\xf7\xbbd\x95c;\xd0:\x03\xeb#\x19\x19\xfa\xd6+\xa9\xf8\'[\xd1\xe7\xf2\xed!\x96\xfe\xdeW>Q\x8dK:\x7f\xb5\xc0\xe9\xf5\xe9N4\xcf\xb6+\xddb\xf6[m;\xc3\xa9\x04QG\xbf\xcc\xb9\x97{\x92N\x00\n\x80\x0f\xebWq\xe2\x1dJH\xc4\x93\xcc?\x08;\x14mNy\xe0\n\xf1\x94N\xb1\xd1\xc8\x8aX\xd1T\xe5\xbc\x86`\xd9-\xdf\xd2N+#r\r\x8c\xa6\x19\xc3$\x98\x04\xaf\xb05\x8c\xea:V\xafb\xf1\xc3u\xa7Oo$\xcc\x16 \xea@fn\x00\x07\xa1\xad\xb6\xda\xdf\xf6\x15\x9d\xbd\x85\xa2\x08V5\x05\xca\x93\xeb\x97\x03s\x13\xdc\x93R\x1aV\xa1i\xab\\\xda\xc3t\xa9\xb3\xcdV\xc1]\xc00\xe5H\xf6 \xf7\xa9mkNx yOFb\x17\xaeM3}uw}\x04Z\xedB\xa4,L\xa06FN\x02\xb1\x1e\xdb\xedHiT\xc7\x94c\xf5\xac\x0f\xc7\xdfi:\xa6\x89}\x1e\x9d\xa7]\xb9\xba\r\x0e\xf3\xbf\x93$\xa7\xd2\xac[\x80\xbe\xf5\xf4\\6\xae\xd1a\xc2\xef(<\xcc\x1e7c\x9d\xbf\x19\xaf\x89<gm8\xf1\xae\xb6eQ\x87\x99\x1dN8\xd8Pm5\xf7\x9d\xb4Gddd\x80\x8b\xd0\x7f\xb6\xb4\x97=*\xd1-:"\xc5\x12\xea\x96"\xf2\xc8\x06K\x17U;\xfcnj\xcf\xa9Y%\xad\x97K\x95\x1f&x\x8b7\xd7\x00\xff\x00z`\x96\xd1[\x18\x8b$M\xbd\x0e\x14r@<r=\xea3Q\xd2mn\xd8\xc8\xea\xcc]\x80\xc3\x1c\x82q\xc7_\x8a\xb8\xcbi\xbd\x0b\xe0)\xcfLv\xa8\xf9-\xc0\x93,\x9c\x00q\x9e\xe4\xf7\x1fJo\xaa\xf4\xcb\x8bh\xbc\xa8\x87\x97\x1b\x15+\x8d\x86q\x82MS\xc6\xdb\xe4\xd6q?\x86\xe1\xdb \x8a\x0f,\xafr2\x07\xe5Qm\xe1\x87#-\xfb\xe3\xb8\x1c0\x04{p+W\x9e[kE\xdd+\x12O\xe1L\xe1\x8f\xd4\xfbT"j\xd3\x89$0b=\xd8\xe1F0\x07\xb5eew\xb4p\x8fxX\x83\xeb\n\xa1\x98\x0f\xa9#\xf4\xcdK\\\xb7\xbf\xc5f\xab\xa1\xb3\xc2\xc5\xec\x966\x05\xb2\xcb\x1e\x14\x0c\xe3\x9e)\xa1\xf0\xf7\x97\x134\x1bd\xdd\xf8\x8b~,\xfe]\xbd\xabY\x8f^\xbfF\xf5L\xdcv\' \xfeF\x90{\x9b\x0b\x89\x0bKa\x16Xz\x8ae\x0f=\xf8\xe2\x9e\x1dJ \x08Y%\x19<2\r?\\\x82O\xda\x82\x84\xf3\x8a\xc5\xde\xd1\xe3fy"b9\x19\xc7\x19\x1cu\xf8\xaeSN\x8aE/\xb4\xee,Kc\xa6q\x8e\x07\xfef\xb5\xa9\xb4h\xe3\x85\x1a"\x1e,`\x9c~\x12{7\xfc\xd5J\xebJ\x8b\xef3"\xb6\xcd\xaa\xad\x95\x1e\xfcr*d\x17\xe7b\xe8B\x11\x90\xc0\xecE2\xc9\xbe\x03o\x9a\xc8|E`\x89\x1a\x98\xd7,A/\xb7\xb0\x1cd\x8a\xa0\x08N\xc6\x04\xfaz\x80O\\s\x83[\xbd\xf6\x88g\xb9*\xd2\xb0\xdf\x19Rvs\xe9\xe4\x1a\xab\xdexYt\xf4yX\x99\x80=\x15}G=\x075\xa5\xb0\xea\xd0$k\x11rX\x91\xa7 \xd3\xf1.\x0e\xe75\x9bZi\x13js\xc5o\x1c\x0c\xd2LUQ@\xc9f<\x00+z\xd1~\xc7\xc5\x96\xd9.u\xebE`\xb8*\x91;0\xf7\xe4\xe0f\xaf\x9e\x13\xf0E\xaf\x86m~\xfdy\x0cgS\xb8\xc1\n\xde\xaf\xbb\xa9\x18\xc0?\xceG\xe2\xf6\xe9O\xef\xa5(\xc7a\nr2~*\x07[\xf1\r\xc5\xbd\xc0\xb5\x89cl\xa7\xf1\x15\xb2t\x93\xc0\xd8\x8d\xf1I\x9a@A\x03\x81\xdf\xde\x98Yx_@\xb3\xd8\x01\xb9wN\x0b\x99\x00\xcf\xe4\x06\x05:m\x1b\x19k[\x84s\x9c\xf9o\xe98\xf8=\rG%\xdb\x07\xf5p\x0f\x7f\xadC\xeb\xde2\xd3|7m\xe6\xde\\a\x9b\xfd(\x94n\x91\xcf\xfbW\xdb\xe4\xf1Y(\xc7P\xba\xb8\x0b\xa4\xdc<\x9b\x04\xc7\xf4\xc57\x04\x0fr\xc1#\x88\x92N\xc1FI\xab\x01\xd3\xefwl{i2{\x058\xc7\xd6\x92\xd4\xf5-\x07\xc2\xb6\xebq\xae\xeb1Y\x82\tTc\x99\x1f\xff\x00j\x00X\xfdk\xe5\x7f\x13\xfd\xa3\xf8\x9f^\xb8So\xa9\\\xd8[+\x13\x1c\x16\xf2\x14\xe3\xdd\xd9pI\xfe\x95\xa6x\'\xec\xcf\xc9\xf2u\xcf\x12\xee\xbd\xd4$\xc4\xb1[\xce\xdebE\x9eU\xa4\';\xdf\xb8\x1d\x05i\xe4\xe8\x16\xdd.\xd9.z\xad\xc8M\x7f\x96\xde3\xa9\xc9\xf6\xce\xc3\xea{U\x9d\xd7D\xff\x00N\x85&\xbc\x97F\xaf\xcb\x1a\x8c\xb1>\xd5\xaeY\xeb\x91jv\x87Q\x86\xcakxnQE\xb8\xb8\x01fx\x13%de\x1f\x841bTu\xc75P\xd7\xbcM\xa6\xe9i\xba\xea\xebh+\x81\x1a\xe5\xe4\'\xe1G4\xaf\x8bu9\xf4\xdd:\xea\xe39nA$\xf2\xc7\x1c~U\xf3u\xd5\xc4\xd7\xb7f\xe2\xe6F\x96f>\xb6n\x98\x1d\x00\x1e\xc2\x8e\x97\xd2\x93\xab\xcd%\xd4\x9f\xc3\x80\x1c*)\xc9\xc0\xed\x93\xfdj\x82(\r\xd3\xbeIX\xd4\xfd\xcf\xc5h\x97\x9fj\xa261XiR+7\xe0\x92\xe3\x80q\xec\xa8\x7f\xb9\xad/\xec\xfa\xe7\xc4:\xcd\xa4\xba\xbe\xafq\x1f\xdd\xdd\x8aZ[\xa4J\x81\x8a\x9fT\x84\xf5 \x1e\x00\xf7\xac/G\xd2\xdfQ\xd4,\x95\x97i\x9aD\x861\x8c\x92$`7\x7f\xc5}\x8b5\xa5\xad\x92Eik\x0f\x97\x05\xb4k\x0ck\xec\xa81K\xf1\x1c};\xa7\xd8\x04\xb6\xb6\x8de\x91\xc2\x97o[c\x93\xa79\xc7\x15*H \x84*\xc7\x1e\xfd\xc9\xde\xa3o5;\xb1\xb5L\xa7\x00q\xec\x05Wn\xb59\x06\x03HGqR\x9a\x86\x19H\xc6\x0f\xc7Z\xce\xb5]wC\xd3\xa41\xddjq\xab\xa9\xe65\xf57\xe6\x06qY{(\x1e\xed\x81\xf2\xdeW\xf6\x00\xb1\xfe\xf4\xc0\xb7\x9ef\xd3\x12\xbb\x93\xd9Fj\xdb\x06\xa5$\x8e\xa8\xcf\x8c\xf4\xa9xg\x9c\xe0d\x81\x9c\xe75\x97\xd9x\xe7\xc3\x1eh\xff\x00\xadU\x00\x8f\xc6\xac\xbf\xdcV\x89\xa6j\xbaF\xab\x16\xfb\x0b\xe8&\xeeU\x1c\x12>\xa3\xa8\xa7/\xecn-\x86\xa9,\xa5\x8d\x7f\xdc\xc8@\xa7\xda\xc2\xf6\x05-$.\xa3\xe4\x11U\xbf\xb4\x8d\x16mV\xcfB\xd4<\xd9\x19 \x12Z\xb2g\xd2\xa4\xfa\xc3\x0f\x93\xd0\xfd+(]\x06P\xc1\xb7\x05\\`\x13\x83_I\xea\x08\'\xd0^\xdf\xcbV?{\x8c\xe0\x9ctSU\xeb-\x16\x1b\xa8\xb7\x1be\\\x9f\xc2\xfc\xf4\xfaU\xe5\xa7X\x99--"V\xd6DAq\x91\xb6\t\x00o\xf0+\xa8\xe5Tf\xb1\x88\xb4\x99b\xc6\xd8\x8b\x0c{c\x9f\xad:\x86\xc1\xe2\xb9Q$2\x1f0\xe5T\x0e8\x1c\xfeU\xb8\x1f\x0e4)\x1b\xec@\xa7\x04\x83\xd5W\xfe)\tt\x1d\x97\x0f3D\xb20\x18R\xa3\xf0\xaf\xd3\xe7\xbd9q\xd4n\xa1\xd5\xe7\xdb2ex\'}\xf8\xda\x96&\r\xf3Yz\xdb\xc9\x14\x92\x16R7\xe3wa\x81\xd0\n\x8b\xd54t\xd4\x10\xa3\xc5\xc7U8\xe4c\xbeEk?\xb3!%\x89\xfc$\x9e\x83\xa7\xd2\x9b\xc9a\x0cm\x807)\xcf?\xf6\xa8Qu}\x0e\x1d2\x18px\xe2\x92]\x81\x04s\xd8\xd6-gcyo \xb6\x98\x82\xd9\xc4R\x01\xf8\xf9\xe8\x7f\xdd\xfd\xebK\x83\xc1\xbe\'\x96\xc1&k\x1f-\x0f\xadVGTv\xfa+\x1c\xfd+F\xf0\xde\x95\xa7\xc1\x04\xba\x9c\x96\xa9$\xc2]\x96\xfb\x86B\x15\x1c\xb8\xf9\xe7\x8au\x7f\xa9\xacD\xb3\xb3\x1cw\xeb]\xbd\xeb\x80\xb2\xaa\xc0$\x95\x978\x07\x01O\xce\xdd\xfd\xaa4\x91\xab\x92\xect\xe7\x9cqX\xfcv\xf7\x96\xf3\x88\xe6\xb6\x966F\xf5\xef]\xa4\x0f\xce\xae\x16L\x92\xdb_\xa0 \xabYO\x95\xcfm\x84\xd5\x99\xaet\xcdV\x15\x86\xf2\xdc8<$\x80\xed\x91>A\xff\x00\x06\xab\x96\x16\xef\xa6\xf8\x85\xecd`\xc5\xa1\x91\xa2`8t#\x86\xff\x00\x91\xefP\xe6\x94\\\xdb4\x83\x02H\xd3S\xa0\xc8+\x8f\xaf\xf6\xa8\xc8\xbeT\xd1\xb2\x9dK\xacgz\xf8\x9e\xe2\xc6\xd5@\xc4\'vA#\x90\x00\xfc\xbd\xeb\xb4O,\xa8XT`t\xdb\x92\x0fj\xd4~\xd0\xfc+\'\x87\xf5{\xb3\x1c\x05m.\x98\xc9\x01\xfe\x1c\xb1\xc9O\x8d\xbf\xda\xb3`\xb2(\xce6\xfayq\xc7\xe4\t\xafa\xb2\xbfK\xfbHg\x8eMH\xea\x08\xc9\xcf=\xbe\xd5\xf4-\xa0\x87\xa9\xd9\xdb\xdc\xc2\xc1\xa3\x95\x01\x1f\x07\xb8?"\xa5t\xbd{W\xd2\x0f\x99m\xa8I\x10,\x03G\x9c\xa1\xfa\xa9\xe2\xb4\x8d+\xed\x0fN\xb8\x1bu[\x7f\xbb8\xc7\xef\xa3R\xd16x\xc9\x1dV\xb1\x99\xca4\\\x16m\xccH\x18\xfe\xb9\xebM\x80\x0f\x1b ,}Ch\xc7Q\xdf\x8aj\xeb\xa3\xd9_\x02\xd2\xc5\xa5\xc9\xfc\xe9\xe9a\xf7\xef\xf7\xa8\xf7~\x17\xb0\xea+\xfc[p\x1b\xb3\xa6\xcc>\xff\x00\xe6\xbe\xaa\xb6\xba\xb2\xba\x85\xa5\xb4\xb9\x8ah\x9b\xf1\x18\xdc6\x01\xe8N)\xcb\xc4\xd1\xed\n@\x04\xf5\xaf\x94\xac./l.\x04\xd6W2\xc3\'f\x8c\x90H\xf6>\xf5\xbcx;\xc5\xd2\xeb\x16\x82\xcbP\x00\\#\x13\x1b\x81\xb4H\x83\xaf\xe6\xb5\x91\xea\xbd\x02{\x043E0\x9a }@\x8c0\x1e\xf8\xefX\x0f\x12x\x0e\xef\xa6\xd9\xcb}o!\x9a\x18\x86\\i\xc3\xaa\xfb\xe0r\x05]S\xce\xf3\xa3V\x04)9\x04g\x93W\xaf\x0eD\xc6f\xf5r\x08\xdb\x91\xfa\xe6\xabvC\xcc\x93c\xfe\x01\xf8y\xcfZ\xbeh&8d\x8e@\xa9\x8d\xdc\x0098<\x8a\xcc\t\xe3[\xaba&\x15D\x8b\xa9\xbd\x86y\xfa\xd7\x9bB56sV\x99t\xab\x92\xc1\xd6x\xceq\x90Y\xbf\xcdF\xdd[\xb5\xba\xb8,\xa5\x88\xe0+q\xcf\xcd[g\xba\x8d\x97t~\x96\xe3\x01\xb8\xc6zUV\xec\xb08!\xba\x9c`pMn\xfcM\x15\x85\x9d\xb3=\xb9ff]\xd81 go\xd6\xa4(\x05\xb0*\x9d\xab<\xb0\xda\xc8\xe0m\x92C\xb5X\xf6\xaaM\xae\x9f+\xcb\xe6\x00\xd9\'\xfa\x9a\xd3\xb5\x1bcso\x1a\xe0\x12e\x1c\x9f\xa1\xa7v\xbaP\xb7H\xcb\x1e\x8a3\xbb\x91\xc7\xb7\xc5`zZ4\x9eb\xef\x8c\xe5\xd8\xfb|\xd4\x93\x18\xd8\xd5V+k\xe3k-\xbc\xb6\xe9=\xb4\xbcKo(\x0e\x8e:r\xa7\xbf\xf5\xac\xa7\xc5\x1a\x12\xf8Z\xf2\xce\xfe\xca9\xa1\x82\xe1\x985\xbc\xa7!q\x8c\xaa\xb1\xe5\x97\x9e\xfc\x8a\xd5\xfcg\xe3\xbd\x1b\xc1\xb6\xcc\x19\x96{\xe9#\xdd\x05\xa2\x9eH\xe8\x19\xc8\xfc)\xfdOj\xf9JO\x15\xea\xfe#\xf1\x1b\xddj\xb7\x9eq\xb9S\x1a\xa8\xe1#\x03\x95X\xd7\xf8@\xfe\xbd\xeba\xd3\xbaT\x9a%\x95$\x93\xc8T9F\xfc\xaf\xef\x81\xfe*\xe6\xcf\xa4\xde\xcbk5\xd0R\x91"\x96\x19\xfel{V\xc9\x0b\xc3(\x8eUPw(e8\xe3\x9f\x8a\x91I]\xfa\x05\x1e\xf8\x15^\xd2fY\xad \x8dO\xae5\x03nz\x8a\xb1C\x13\xba\xf0ps\xd0U\r\xca\x08\xdd\x94\xff\x00)\xc0\xcf\xb5P\xceT1\xc1\xd8\x9c\xd2\xe6YT\x10?Zo\xfbr\xfe\xc5\x94\xac\xb9\xdb\xee2*Aba\x1b\x19[\x8f\xe1?\xe2\xab\xd7pI3\x80\xb9\xeb\x83\x9af\xddb\x91\xf0\xca\xa4g\x9a`\x93\xb6\r]\xf4\x8f\x16j2\xe0\xad\x91a\xbb\xa8<T\x95\xdd\x95\xd6\xb9\xa8\x8b\xe9\xed\x84A\x91W\x03\xa1\xdb\xc7z\x95\xf0\xde\x91\xe5X[.\xc5\'ha\xbb\xdc\xfb\xd5\xfdm\x16X@1\x001\xd3\xe9[\x8e\x8d\xe1\xb4\xb8\x85\xdf\xf1\x12\x08\xdb\x04E\xb9RG\xc9\xce)Yf\x18\xe7\xe6\xb1\xedj\xc6}*%1\x80\x01\xee\x07\xf5\xa8M#u\xee\xa7\x10v;cR\xc4{\x9a\xd45\xdbG\x96\'BG\xa40\x19\xfe\xd5\x94):U\xc2L\xf9Bd\xf2\xc7\xe6*\xa3\xad\xda\x0b+\xd1\xa23\xa0cJ\xf3\xc6\xe4W\x02\xf3\xcdk\x02\xd6$\xb0iY@\xd8\x87&\xa04\x80\xb7N\x89r\xbbe\'\xd0\xc3\xb8\xed\x9aqy\xaa*\xf8vI\x0b\x94\xc8\xda\x8a\x06K56\xd2\xe47/ip\x06\xce\x17\x8f\x9a\x85\xd4ncs\xd2\xdd"\x1a\n\xa6\xa5?\xcd\x93\xbf\xd3\x8aR\xecqV\'\xb2X\x9c\x8d\xacOl\xfb\xd7\x08\x9bFZ\xa5\xe6&Y\x08^B\x9ek\xc8\xed\x9a\xed\xd2\x14\x88\xb3\xb7\x03\x1f\xde\xb41\xdaFn\n\xda\x83\xbba\x063\x93\xed\xb5,g\xbdZ|\x03\xa6\xe6K\xab\xf6\x07\x8f\xdd\xa7\xf9\xadB\xa2\xb4k\x04\xd3t\xeb{a\x82\xca2\xe4wc\xd6\xa5k\xd5\xecm\xbf\tgo\x07t@\x1b\xff\x00\xc8\xee\x7fz\xb5\xb7M\x11(\xeew4QE\x15.\x9e\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xa9\xfe4\xd3M\xf6\x97\xe6\xa2\x93$\x07w\x1dv\xf7\xab\x85x@ \x822;\x8af\xe2\x08\xee`\x96\x19\x06RE*~\xf4\x89\x10H\x8c\xa7\xb8\xaf\x97\xa4{\x98\xb26\x1c\x7fZg1\x96L\x00\xac\xb8\x1cn\xe6\xbe\x8d\x9f\xc2\xfa%\xc5\xc1\x9eK1\xb8\x9c\x90\t\x0b\xfa\nqq\xa7hqD<\xfb;UE\x18\xf5(\xaf/\xb9\xff\x00\xa6\xb2\xdcI)^\xa8\x15s\x98\xc1B\xdf\xae\xe3\x15\x03\xf0\xb2\x00u:\x81\xef_-\xca\xec\x07\xaf\x1e\xd9\x14\x9a]\x94\x7f\xdd(\xdd\xd9\xcfQ\xf4\xf6\xad#\xc5\x9aN\x89p^M!\xc2\xba\x8f\xdeF?\x0f\xd4Vc\x042\x99\x8c>\x95b\xc0z\xb8\x19\xaf9\xea}\x1a\xe3\xa4\xdf\xbd\x8c\xa5$\x90`\xa3Fr\xae\x1b`G\xdflT6WW\x189\x19\xfc\xc3z\xecb_S\xe7\'\x96$\xe7\x9f\xce\xbc1\xa0$\xe1Xg9>\xf5\xe9\x8d\x8b\x9fX`\xa7i\x0b\xc8\xe3\xda\xbb\xb8\x95U}[Tc\x18\x1dj\xb7\x1f\x98j:\xb3\x8d"\xa4G\x1e@$f\x9b\xcbv"\x83\xcb\xc8\xdaX\xb6>O\x14\xc0A-\xdf\xefY\n\xc5\xd8\x1f\xe2\xfc\xbd\xa9\xfd\x86\x9c\xf7k\xf7\xab\x81\x98\xf7a\x17\xdf\xe3\xe9V\x98l\x1eR\x0b\xa6\x13\xb2\xd7$\x9d``\xaa5?s\xfd\x85I\xd1\x81\x93\xf6\x15\x13\xa4\xd9\xf9j\xccT\x03\'?\x90\xe9R*\x19\x9el\xb3mE(;\xf3\xd6\xa5s\x14E\xe1\x8f\r9\x00"\xe3\xf0\x83\xd5\xbf.\xd5\x13z\xdfrC\x08s\x9crGS\x9a\x9bcm&\r\xfc\xaaB!9\xdfm\\*\x9f\x9d\xa9\x87;\xe9\x07s\xcd3dU-\xbc\xa9$g8\xc1?Z\xb8\xf8y\xd9-\x02\xa9\xc0fb@\xfa\xd6~\xb2\x17\xef\x9ep@\xabg\x86oB\x85\xb6s\x82\x18\xed\xc7R3\x9cSq?\xfe\xa9H>X-\x8d\x8e\xf8\'<\xd3\xf1\xf1\xf6\xab\xd2\xc4\xe4\x8c\x82>:\x9ar\xb1m`\x0e3\xd7\x15\xda\xb0\x01v\x9f\xaf\x15\xcc\xb2yY<\x9fs[\xc8-\xecm\xd4H\xe7e \x968\xc7\xedM1j\xa8\xebNV\xee]\xc7\xbf\x1fLqU;\xb9c\xc3\xe4\xf20F{|\xd5\xb7Zx\xeeF\xf5R\xac\x063\x8e\xb5\xf3?\xda\x17\x8c.\xfe\xf1u\xa2\xd9?\x93\x1a\x90.e\x1f\x89\x8e?\x00=\x87<\xd6\x06\x0e\x9d\xfe\xa7\xd6n\xe3\xb5\x98H\x8d3\xc8e\xec\x14\xb6r~w\xc5Y\xf4\xae\x9dq\xd5/\x16\x08\xd7\x1e\x9dLO\x00q\x9a{\xe2_\x1a\xdb[G<\x16\x0c\xb2\xcd\xca\xf9\x80\xfa\x14\xfb\xfc\xd6\ru\x1c\x97W\x12Mss\xb9\x8brs\xcd/\x85\x04\x82y\xce3\xda\xb9}\x9bTm\x1cu\xc7\xb7\xfc\xd7\xa8t\xce\x9d\x07KB\xb0\xe4\xb3~g?\x98\xd7\xadt\xbe\x85\x0fMB\x10e\xc8\xdd\x88\xde\x96HT\'\xa6U\x1f\xdf\x9a\xf1\xad\'\x90\xe1dRz`\x1c\x7fz\xf2"\xbc\x8c\x00O\x157\xa4i\xb7:\xbe\xa1oem\x1e\xe9\xa7p\x8b\xce0X\xe0\x93\xf0:\x9a\x95,\xbeJ\xbc\x8c\xe0*\x82\xc5\x9b\x80\x07z\xb4k\x08Q\x1eY\x0e\x15Af$\xec\x00\xe6\xbe\x91\xfb=\xd2\x9e\xcb\xc2Z4R\xfe\'W\x9d\xbf\xff\x00k\x96\x1f\xd2\xb5\x8d>\xf0\xb5\xb2i\x88\x03\x9d\xae\xeas\xc0\x00\xf2>\xbd\xea\xa8\xb2\xa5\x8d\xb4Vv\xa8\xa5a\x89#\x0e?\x95F0\xa3\xf2\xa6\xb0]Oi:O\x1bmul\x829\xe6\xbc\x81/\xdd\xae\xae\xe7%\x80\xbb2\tq\xb1\xf2\xe49 f\xbc6\xe1\xbc\xfb\x9b\x89@\xff\x00\xdc\x95\x98}\xcej\xd1p\x85\x0bg9=sL&$\x85\xcf$\x1f\xf1R\xe2\xee\xdbS\x8b\xce\x88m\x93\x03\xcc\x8c\xf6\'\xdb\xe2\xa2n\x19cFi}*\x80\x96>\xc0\x0c\x93T\x0f\x18\x86w\x8c8p\xad\xe9a\xdcv\xa8\xc6&i\x15p}G\x8a\xc9~\xd4\xf5ymtx\xb4\xabf\x02k\xef\xf5y\xe9\x02\x9e\x7f\xfe#\xc7\xeb_4Ka\xa93\x8f.\xd9H\xc7\xe2,\x00\xab\xef\x885k\x8d{V\x9a\xfe\xe0\x10\x18\xe1P\x1fJ\xc4\xa7\xd2\xa0\xfd?\xadC\xa2\x83(\x0c\xfbPw\xafd\xe8V\xed\xd2,#\x8bJ\x19\x0e^S\x8c\xfa\x8fm\xbd\xb8\xaf\xa1|7\xe1\xb3\xd2\xfad12\x8f5\xc6\xb9H\xff\x00q\xed\xf6\xe2\xa1#\xd2\xf57Rd\xd8\xb8\xeb\x8eE!&\x9dr\x99\xf4\x16$q\x81V\xa0\xaf\x90\x0c\x98\x05w\x8cr0:f\x85V\x1b\x8bnU\x00\xfc\x1f\xca\xad\x05\xec\x80\x93\xe8\xc7\xb0\x15p\xfd9A\xc9L\xd5-\xadnT\x12a \x0fq\xd2\x90\xd96q\x82?*\xd0"W`\t\xe4~.NF\x05I\xc2mB;Im\x1b\xe4\xfay\xee=\xf9\xefK\x1dD\x83\x86\x8d~\xb9\xa6\x1a\xc57\xf4\xd7_f\x1a%\xc5\xdd\xcd\xfd\xec\x85\x964)\x08_\xe6\'\xd4k\xe8)4\xf3,@*\xfaG\x00{\xd6e\xe1=f\xc2\xd6\xf0Z\xc7\x18\x8d.\xd9U\x86\xdc\x05\x90p\xa7\xf3\xe9[\xda\xc1\xe4YE Efa\xc0f\n>\xa75\xe7^%k\xf9\xba\xc2\xacq\xf9\x86@\x0cA7\x1a@\xc1\xcf\xb61\xbek\xc3\xbce\xd3.!\xeb\x934\xd8\xd3*\xabFx\x1a@\xc7\xf5\xaa*\xdb~\xce-!!_\xff\x00\xa6=\xdb\xb5k\xd7\xaf\x1e\xb1\xa3X^G\xf8%\x846=\x9f\x18#\xf25\x82\xeb77\x13^H\xc5\xce\xe0pT\xf1\xb4\x0e\x98\x1e\xde\xd5}\xfb>\xd7R\xea\xda\xe7D\x95\xf0\xea\xe6km\xc7\x96\x07\xf1\xa8\xf9\x1dh\x89\x0f\xfaWP\xb7 \xb4\xd7\t\xc8\xe3Rn\xa3\xf5\xaa\x01k\xe5\xa61\xb0\xe6\xb2O\x1exh\xdc\xeazu\xe41nq46\xf3\xaf\x1c\xa3\xbe\x01\xff\x00\xed\'\x1fJ\xfa\xd6\x0bdV#\xa0\x07\x07\xf2\xe2\xb2M\x7fLI\xcc\xf1\xc8\x81\x95\x81V\x04p\xc1\xba\x83P\x9a/\x8do|\x12\x8b\xa7\xeb\xc2\xe2\xe3K\x07m\xa6\xa0\xa0\xc8\xf0\xafh\xa7\x1dH\x1f\xc2\xddj_\x87\xba\xc2\x14\xb6\x8ed\xf3\x1a\x10B/\xf3\x11\xce\x07\xb9\xa9q\xfe"\xfe\xda\x0b\x1c\x83%\xb1\x7f%;\xba\xb9\x19\x03\xdc\x8cl+w\x9f\x08\x18\t7\x0cUwQ\xbd[{q!a\x90\t\\\x9c\x01\xc7$\x93\xedY\xce\xb5\xf6\xc5\xe1kh\x19\xec\xa7\x96\xf6\\glq\xb2\x80\x7f\xdc\\\x0c\x7fZ\xf9\xef\xc5\x1e3\xbe\xf1<\x93\x1b\xab\xa9!\x89\xa4R\xb6\xa8\xe4F\x061\x96\x1f\xc4\xd5sy%\xefVvH\xa3\x92\xde<c[\xa9 n\x0e\xc1\xb0N?J\xb9\xe9^\x0f\xea\x97\xce\x0c\xb0\xb5\xb4@\xee\xce\xa4\x1f\xb0\xad[\xc4\x7fj:\x0e\x91p\xf1\x06\x97S\x9f\xaby\x0c\xa5\x17=\x8b\x9e?L\xd6\x7f\'\xdbU\xfe\xfc[\xf8v\xd8\x0c\x8f\xc7;\x9e? +7\xf2\xed\x04{\xbc\xa2\xc0\x01\xceq\x83]*Y0#b\x82\x07RI\xe4\xf4\xe9\x8a-\xbc7\xd1`@%\xb4\x92\xe1\xff\x00\x99\xdd\xc8\xc9\xfa)\x15\xbd\x83\xc1\xdd6\x04P\xf1\xb4\xad\x8f\xcc\xc4\xef\xf6\x15\xf47\x85\xbe\xd24_\x11:[^@t\xdb\xb6\xe1\x16G\r\x14\x87\xd9\\\xe3\x07\xe0\xd6\x8cadl\x80k\xe31\xf76P\xb8\xcb\x0c\x0c\x13\xc5k^\x10\xfbC\x9fK6\xf6:\xc4\x8d=\x9e\x02\xa5\xc1$\xc9\x17\xb6I\xfcK\xfdEg\xfa\xd7\x86<\xb0\xf3\xf4\xe4|nZ\xdd\x8eO\xff\x00\xa1;\x9f\xa1\xaa\x0e\xb1\xe1&Ei\xac\x830\x1b\x98\xcf#\xff\x00\xc7\xdf\xe9_@\xd9\xdd\xfd\xdd\x98\x11\xb9\x18a\xd0\xf2\x08\xf65\xc6\xa1\xa6[\xb7\x97uk\x13c\x91\xb0\xf7\x07\xaa\xff\x00\xc5pUYC\xa6\x08 \x15#\x90A\xe4\x11\xf5\xa7\xd6S\xa3\x89-\xe7,\xb1H0J\xf0\xca{\x11\xf2++aw\xe5H\xb1\xc8G\x94O\xf3\x7f#\x1e\x08=\x87\xbd`]\x08?=\xaa\xa5=\x97\x9a\xe8\xca\x8cps\xbb\xeb\xd8T\xee\x91\xa4Ej\xa2\xfe\xea%\x92@sn\x84p\xa5\x7f\x8c\x8e\xe4\x1e\x9f\xad>\x9e\xc9t\xe8\xbc\xb5B\xca\xd8\xf2\xa4\x07\xd2A\xff\x00\xcei\xa2y\xc8\xa3s\xe4v\x02\xac\xba\x85\xc7\xe0\x99B8\xf3\xda0\xc0\x8e\x10\x9e\xfcnq\xb8\xc7\xd6\x9a\r\xc8\xc5<\xbb\xbbg\x198,\xdd\xea\xb1vw\x92Y\xeabYZPWg\x07\xaf\xc5Wn\xd0\xc7\xbbq\x00\x03\xfd=\xea\x96\xdb,\xf9f\xcb\x1d\xc9;\x93\x9am\x88b\x00\xde\xab\x9a\xee\xaa\xbaN\x9f5\xc6\xdd\xee\x06\xd8\xa3\'\x1b\xdc\x8e\x07\xd3\xb9\xf8\xaf\x9d\x9f@\xd7\xb5\xedFI\xe6g\xb8\xba\x9d\xb7t-\x90z\x00\x06p;\x01\xd2\xaf\x1a\xdf\x89\x1fP\xd4\xa4(\x07\xddc\x05m\xc3\x02\x0bs\x82\xe3\xa7R?*\xe6?\x10\xeaV\xce\x9fw\xb8\xf2\xd5\x90y\x8bo\x88\xf7\x0ct$\x0e\xbc\xf3^\xab\xe1\xfbX\xfadA\xe6,\xb2J2\xfaP\x16\x03\xfd\xa0\x92\x00\xf9\xafe\xf0\xe7\x86\xdb\xa7\xd8\xac\xb2F\xa6\xe6U\x0cCg\xd2;/\xf9\xa8\xb8\xbe\xc9<@Hk\xa3\x05\xb0$\x03\xe66H\xcfl.k\xeaO\x0c[\x17\xf0\xee\x8b\x1c\xf2\xa4\x92\xc1j-\xd9\x97\xa1x}\x1d\xf9\xe4\x00k\xe5K\xddV\xfa\x7f5\xe4\xd4\'9\x1c\x06\x91\x89#\xbf\x19\xadC\xecg\xc41\xc5s{\xa2\xca\xc7\xfe\xad\x8d\xcc\x19<+\xc60\xe83\xdd\x97\x9f\xca\xa6x\x97\xf07\xdd84P\xcc\x1a\x17\r\xaaV\x0c4\xf7\x04(\x15\x0b\xc6\x1d\x1a\xea~\x94\xf3\x92\x8c\xd6\xcd\xafJ&=<6\xe4\x9e9\xab\x8f\xda\x0e\x9b\xf7\x9d!\xa3\xda2\xacs\x8f\x9e\xf5\xf3\x9c\xb6\r\x1f\x9b\x1b\xaf\xac\x02\x06\x07\xbd}\x99\xafXCwnAM\xcd\xf4\xcf\x18\xff\x00\x15\x88j\xda\x17\x93\xe7H\x00<d\x81\xdc\x03\xd7\xf2\xac\x97J\xbe\xff\x00Mi-\x18\xe4k\xd4\xbfz\xf1\xddo\x13\x128;\xfd\xc5Ax\x0e\xd9\xee|S\xa1C.]E\xdaI\xc0\x1e\x95\x88o#\xe9\xc5}\x11{0\xdf+\xe7\x81\xb9\x89\xac\x9b\xc06"\xdb\xc4\x96\xd2\x95<C6\xdc\xf072\x11\x8c\xd3\xff\x00\xb5\x9dj}#\xc3\xc6\x0bw\xdb5\xf4\xbeNq\xf8b\x03s\x9f\xec*\x1fW\x1f\xea\xbdG\xa6YB@29\xc9\xc6\xc0\x1co\xf6\x19\xa9\xfd6\xdan\xa9uoo\x19\xcbM @}\x87$\xfd\xab%\xf1\xdf\xda\x15\xdd\xf5\xd4\xf6\x1aM\xc3El\x84\xac\x93\xa1\xc3H{\x85=\x94{\x8e\xb5\x91\xb2\xeeff|\xee\x198\xces]9X\x99\x90\xcb\x91\xb79\xc1\x1d}\xb3^\xc7\x87R\x02\x8c\x05,[\xfc\xf5\xafM\xb0\xb0\xb6\xe9\x96\xe9\x0c\x11\x85P\x06[\x1b\xb1\xf7&\xbd\xae\xcf\xa1A\xd3\xa1X\xa2\x8c\x00\x00\xcbcv>\xe6\xbc\x11.r\xa7\xf5\xa9\x0b\t.\xad\xa6I\xed\xe6xeB\x18H\x84\x86\x07>\xf4\xc9&P\xa41\x1c\x0c\xafN\xb4\xf5e\xde\x7f\x089\xc7<\x0cq\xd3\x02\x9f\x97QR\xac\x01\x07c\x9fj\x94l\x81\xd8\xa0 \x8c\x10F\xc6\xbe\xae\xfb6\xf1\x13\xf8\xa3I\xba\xb5\xbc\x9dM\xfd\xa3\x82\xe4\x007\xc6xW\xc0\xfd\x0e+F\xb5\x88[\xc5\xeb\x88\xe5I\xe0s\xdf\xbe+\xe2\x9d\x17[\xd4t\x1b\xfb]B\xc2o&h\x89\x01\xba\x86\x1d\xd5\x87u=\xc5}3\xe1\xef\xb5\r7\xc4";Ao\xf7ME\xd3,\x8cAFe\x1c\xf9g\xbf\xb8\x07\x9a\xf3\xee\xa5\xd1\xd6\xc2Yn\xe0\x8b\x11\x80\xcd\x85\x19\xd3\x9d\xf8\xf6\x06\xbc\xdb\xc4^\x18\xb9\xb4\x96K\x9bhK[7\xa9\x82\xf3\x1f\xbeG\xb5_u-R\x1b\x04A\x1a\x89&e\x1c\xb2\xfe\x01\xf4=\xcf\xcdD[k\x86y\x08\xb8\xc9\xdcF\x1b\xb8\xf6\xa8{\x93:\x19]\x9c\xb8$\x9ey9\xa8Xfs)\xc88\xcf\x1d\xb1\x9a\xceOs=\xfb\xbc\x8d)P?(R@\x1fj\xc43yL\x07\xedZ\x0c\xf6\x88U%S\xf8\xf3\xea\x1d\x0f\xd6\xa1\xe4\x848`\xc0\x00\x0f\x07\xde\xa5\xf4\x857Q\xbd\xb9\x9b\x96_A=7\x0e\x94\x92\xc7\xe6\xdcCn\xc1T\x86\n@\x18\xe9\xd6\xab\x19\x1fJH\xa3\x01\x9bG\xff\x00\xb0\xe6\xa4\xa9\x0c)W\x88X\xd9\xc7n\xb2\x921\xe62\xf6\x0c\xc3\x9cU>\xf6\xea\x1b\x89$\x85.\xa2.\x87\x0f\x18`X\x1ff\x03\x9a\xaf\xfd\xad\xf8\x9a\xefG\xb2\xb5\xb5\xb2\xb91\\\xde;\xb3:\x9fP\x85\x06\x0e=\x89\'\xad|\xe9n\xd72\xc8dY\x1c\xcd\xbb;\xc3\x1d\xcd\xee\xd9\x18\'\x03\xadiz?\x87\xa6\xeaP\x1b\xe9\'\x11+\x92"\x1au\x12\x14\xe9\xc9\xcfm\xab{\xe1\xef\x03M\xd6\xbay\xbd\x92\xe0B\x8f\x91\x10\xd3\xab!N\t;\x8d\xab\xe9;{{\xa5\x95\x82\xe7\n\xdd\x0f?\x9ej\xd3\x12\xc6\xd2Y\xcdq\x11im\x89\xf2\xa5\x1c:\x83\xc1\x07\xddO\xb1\xac\x0bK\xf1\x86\xa3g$q=\xc3]\xc6GF\x18t\x03\xfd\xfd\xf8\xe7\xbdk\x1a7\x8a-oc!.72\xf5\x8d\x97\xd4\x07\xd3\xda\x98\xea}.\xfe\xd8k(\x19pF\xa4\xcf\x07c\x9a\xa9\xea\xfe\x0b\xea\x1d\x1bT\x92\xa1x{L\x9e\xa4\x1f_j\xb9\xf8\x9fF\xd2\xfcW\xa5Kh\xeaW\xccN\x18`\x95q\xf8]}\x88\xf6\xaf\x8e\xbcG\xe1\xdb\xad\x02\xfe]>\xf6&c\x13\x86\xe1\x88WF\xfe5\xcfo\xfe+\xea\xe1\xae\xc4A+\xe5\x02:\xe5\xb0q\xf4\x15U\xf1\xdd\x9c\x1e\'\xf0\xcd\xf4\x88?\xebt\xf8\xcd\xc4l\xa3,\xd1\xaf\x0e\xbf\xa5H\xe8\x1d^\xf6\xc2\xf4$\xeb\xff\x00\xa7\x9eE\r\x81\xa7C\x9c\r[{\xf7\xa9\xbe\x0e\xeb?\xe9=F\x1b9%\x0fku*\xab\x0e4;l\x1c\x7fz\xf9!\x95\xd9Uw\x00\x98\xda0p=\xf9\xf8\xcd5*w\xe4\xf5\xef\x9a\x93\x92\x14\xdc\xa60\xe0\x1cc#\x9c\xfcR\x05If$r\x0f\xfef\xbdy$\xdbj\xf7\xc3f\x01\x1bW1\xa6\x0eG_\xedS6R]Y\xbd\xbd\xd4186\xc0\xb2\xb1\x18\x1b\x98\xe3?"\xa3c\x00\x0c\x80A\x03\xa8\xa7\xc8\xbb\xa2/\xb86\xdcey\xe0t\xcdG\x98\x86\x18 \x10v \xef\x9c\xedS\xd2\xd69c\xd0\xc8\n\xb0!\x81\x19\x04\x1d\xb1_B\xf8s]\x83V\xb0\x86\xe9\x7f\xd4Q\xb2d\x1f\xc2\xff\x00\xf0z\x8a\xd2\xf4y\xa5\x17\x10\xa26Al\xf1\xfa\xd7\xcd\x9e\x19\xbe6\x1a\x95\x9a\x89\xd5\xa3\xbb"\x17\x89\x01\xc0\xcf\xf1\xe3\xeb\xcd}\x13\xa0\xc6~\xf0\xac\xc7\xd2\x8ax\xf95\xe5\x1e \xb3K9\\\xaeB0,\x80\xfdx\xfb\x1a\xf9o\xc7~\x19_\r\xf5\xf5Kq\x8b[\xa1\xe6\xc2?\xda3\x86_\xb7\xf4\xad6\xe4\r\x89,r\t\x01PH\xf6\xf7\xfaTsl1\xc8\xe78\xeb\xeeF)\xdcM4\xb1\x12\x91\x90\x07\x19\x1c\xe4}+\x8beC)F\xda23\x82}\xbe\xb4\xf5\xcd\xebu\t\xed|\xac\xaa\xce\xb8\x01\x81\xd3\xab\x18\xc8\xce\xff\x00j\xca\xa4`\x1d\xc7zN\xd2\xd2y\xc6]\x82\x85\xf5\xa2\x7f\xcdG\xebZ\x8d\xae\x9dgwqu \x8a\x0bx\x99\xe6q\xd9W\xd8{\x9e\xc3\xde\xad\xe8\x88\x15\xca\xb1\xc0\xe0\x0f\x81XW\xdb\r\xcc\x91h\xb1Z\tB\xfd\xf6\xf1U\x81\xfe$\x89K\x9f\xcb8\xab7\xe9i\x04VP,\x8c|\xf91+\x83\x9fH\xe7\xe9\xb0\xab~\x95dz\x97P\xb4\xb4\x19\x02Y\x02\x9cr\x17\x93\xfbW\xcc^*\xd4\xe7\xd5\xf5\xddR\xfaX\x99\x92\xe6\xe5\xda=\xdf\x89c\xe8\x8b\xc6G\xa5@\x15_\xd3\xe3\x8d5==\xd5H\x1fxO\xff\x00\xaa\x9c\xde\xcaa8\x0c\xac\x07Q\x9agm=\xbb\\B\x15\xf0D\xc8\xd8<g\x07\xb5o\xa2B\xb6\xdaUp\xba4\xed\xc61\x8e+\xd8\xaf,\x04V\xad\n\xc6B,Z\x00\x1d\x80\x18\xaf\xa0\xf4\xed3\xf7\xca\xe8p\x11\xb1\x91\xef\xda\xb5\x0b\x1d\x1d\xae\xadD\xa8\x98e8#\xa0<u\xaa\xf6\x93\x02\x8d\xdc\x0e\xb9\x1f\x19\xadKBH~\xe73\x85e\xc9\x00\x10{\x83\x9e\x95\xe6\x10\x8f\xf5.\xa5\x1c\x12\x13\xa7K\x12s\x83\x803_=\x84*\xce\t\xe0\xed\x9a\xa1]i7d\x8f0`\x0e\x83\x1c\x1am\x16\x98\xe6h\xe3\xfcD\x9c\xf0+@\xbf\x8c\xc9\xc0bc\xc1\xcey5\xee\x9bm\x1cD3\xaa\xeea\xc1>\xd9\xe9OGa\xae\xef\xc8\x8d\x88A\xfc\xcd\xc7\xedJU\xef\xcd:\xb1>J\xa0l\x8c\x01\x8c\x1e\x95f\xb6\xbcF\x05\x0b/\x03\xe8i\x84\xb0\xa2\xc4\xc602OQ\xd0\xe6\x9a\xdai\xbf\x7f\xbd\xb7\xb5\xc9V\x95\x80\xcf\\\x0e\xe6\xb6v?\xea\x9d"h!@\'\x0e\xca4\x83\x80K\x1c\x01\x9a\x90\xa3Q\xdbcN\xef\xd2\x1b\x80\xd1\x87]\xe7\x90\x01\x04\xe7\xe9Xw\x8el\'\xfb\xbc\x05T\x86\x8e\xe1Y\xbe\x98\xc6k|\xb7\xf0\xa5\xce\x93\x7f}\xba\x17\x9bv<\xb9\x82\xe7(\x7f\xb1\xf7\xaa\x86\xb9\xe1\xf9<Cp\x91\xd9\xc8\x03&w!_\xc4\xc3\xa5O\xea\xb6w\xf7\xb6P\xdc\xc9`a\xbb\x12\xb2\xad\xb8:\x89\x00\xe3\x907\xf7\xdb\xb5-c\xd3.\x0f\x1c\x1aGO\xb1\xb2\x7f\n\xc6\xd7`.\xd8w\x96n\xd9\xa6zD\x11\xaf\x96\xe5\x80\x0b\xca/\xf6\xa8\x7f\x17\xc3\xad\xc3\xa5E\xa55\xb9\x89"\x88\x06#\xab\x95\xfav\xa5\xbc\x1e/5\x0b\x00\xe6\x00\x04Ci\x91\x8e\x01#\xb0\xac\xa7V\xb0\xba\xb9\x97\xa3\xdbAfC\xdb&\x99\x14\xae\x93\xa9\x06I?JI\x8fH,}\xea\xdd\x1c\xdbD\x84\xf5ni\xdd\x9e\xb7>\x993}\xd1ci\x9d0Y\x86q\xf4\xa8)b\x9cH\xc50v\xf4\x19\xefR\x1al\x08\xe4\xb0\x18p}@\xd5\x87J\x9e{\x07F9\xf3\xc6B\x0cq\x9eN\xfd\xe9\x01X\xf1\xb5[\xfc\x18\x9a\x94\xfa\xd4\xd77\x17\xd2\xb0(\xc5\x93\'i\'\xe2\xb5\xaa\xa4\xf8B\xcd\xd1n\xae]p\x1b\n\xb5v\xafV\xe9~i\xb0\xb7i]\xd9\xd8\x16%\xceO\xa8\xe6\xacm\x13D_V&\x8a(\xa2\xa7\xd4\x9a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a)\x8d\xce\xa7af\xdb..\xe3\x8d\xb1\x9c1\xe7\x14j\x1a\x85\xbe\x9bn\xd3O&\xd1\xd1~O\xb5`7\xd7\xb7Ws\xdc\xcb3\xef29\xeb\xd4\x0e\xd5Y\xd4\xfa\x9c]6%f]L\xd9\xd2\xb9\xc7\x1d\xcdF\x9e\x7f,\x85P\t\xef\xf1_B\xac\xb1\xdcA\xe6C uu%YNA\xac\xc6\xe2\xc6yL\xa6y\xdeC\xb8\xf0\xc7\x81T\xbb\x0f\x1b\xea^\x1eU\x856Ons\x84~6\x9f\x83Mn<w{r\xd2\x14X\xe2\x0cI\xe0d\xfe\xa6\xaa\'\xf17H\x96\xd0j\xb8ef\xe5\x00;m\xef\xc1\xa8\xf2J\xb2\x84%NFv\xedS\xad\xa6N\x97\xa8\xe3\x0b\x16\x181\'\xaeG@;\xd5\x07V\x80Gp\xec9\xda\xdc\x0f\xce\xa4\xe1\xd7\xaf./\xad\x0c\x8c\xd2\x8f5z\xfbTv\xa9:\xcbu.\x1dH\r\xdb\xbdy\x17\x8ae\xb3\x96\xe2\xce[=e\x7f\x88\xae_\xbepF1\xda\xb9\x12\x07V\x1e\xc4\x1a\x8c\x96G\r\x85b\x07\xf2\x8e\x05uka-\xf4\xb8*6g\'<\x0f\xad%\x9c\x93\xc7^\x80\xf7\xa8\xab\xa9\xee\xa4`\xae\xc4*\xf4E\xe8+7\x1a\x16\xd8\x10\xbe\xe7\xbd*G\x11\x01\x81\x93\xda\xb5\x1bh\xb4\xbd>%\x13\xdeB\xa0t\x05\x87\xf6\x19\xa6w^ \xb7\x91\xc46*v\xff\x00\x14\xcc1\xff\x00\xf0\x83\xfd\xeb9\xb6\x82I\\69\xedV\x1bkVL\x96\xc9\xcf\xe4*\xce\xd64\x0c\xab\x1c\t\x80F\xb9\x0e\xec~3\xfe)\x93#\xbeO\x04\xf1V\xa1q\x14\x11\x93\x18\x1ed\x9f\x89\xb1\x93U\x9b\x99\xdai.\x0e2FGL\xfcS\xa9\x16EUm\xc4s\x82\x07o\xce\x90UXL\x1ca\xa5\x94\x03\xff\x00\xb7?\xe6\x9d\xeb\x1dG\xcd\x11[\xa2hT\xdc \xd9~\xb8\xf9\xa5E\x11\xceI\xcei(\xa1f\xdav\xd3\xb8T\xc50\xf2\xdc,\x83\x0c\x06y\x04w\xfa\xd2\xba\x84\xb0i\x90\xb3+\xa2\x9d\xa5\x99\xdb\x00*\xfb\x9a\xc6\xb5o\x1e\xd9C 6q\xbd\xdbo\xc0\x97w\x97\x19\xc7\xb1\xc1&\xaa\xed:}\xe5\xec\xac\xb1F\xc4\xa9\xdc\x8c`\x1f\xaf\x15kiaux\xc1m\xe12\x1e\xe7\x80>\xe6\xbe\xac\xb0\xd5\xed\xae\xa0\x8c\xbc\x88\xb3c\x0c\xa4\xe3\x91\xdc|W\x97\r\xe7\x02rp3\x8c\x1e+\x04\xf0\xaf\x88n|Gg$\xb3*$\xb6\xd3\xf9R*\xe7\x042\xeeV\xe7\x9c\xe3\x83\xf4\xad\x06\xde{\xd8J\xacs\xc8\xb9=3\xc7\xf5\xa9]F\xf2\xf2V\x167X\x0e\xa7K\x15\xfec\xd8\x91\xfb\xd2.-\x1e\xd6ib\x91p\xe8p\xc3\xf7\xab\x14\xe8J\x80q\x91\xc5|{\xf6\x89j\xb6\x1e-\xd6b\x8d3\xe6\xc8\'\\\x0e@\x91C\x1f\xcb9\xaf\xa9\xee<E}o \x8flS)\x18o21\x9f\xd4b\xbey\xfbd\xd3\xca\xc9\xa4\xebJ\xf97(\xd6\xf3\x03\xc6\x1e?R\xf4\xf7\r\x8f\xca\xa5\xf8f\xd9:wYH\xbf\x14$\x17\x11\xb4x\xd3\x8fP\xc3\x0e\xe7;\n\xd3\xf8\x1eU^\xb8\x91\xb6\xc2x\x99\x07\xc9\x1e\xa1\xfd+ $\x8c\xee\xeb\xdb=~\x94\x8c\xce\xbf\xed8 \x06S\xc61\xedLL\xaa0\xdb[q\x1d\x0f\xd3\x83\x9a@\xe5\xd8\x92z\xf55\xeaK\x167\'\x15\xee)f3SK#4l\xcc\xe3!\x86\xe3\xc0\x1f\x15\xaa}\x93\xba\x8f\x14\xf9N\x03\x16\xb5\xb8\xf2\xd8t\xdc\x17\xaf?\x19\xacl\x96+\x1b\xbbn\xec3\xcf\x1f\xf9\xd2\xaf\x1e\x0e\xd4\x8e\x9d\xe2m&\xe8\xc8\x91,WI\xe6K\x92\x00\x88\x9c>\xef\x8d\xa7\x9a\xa9\xeb6\xc6~\x99}\x12r\xf0\xb8\x18\xf7\xc6\xd4\xc7V\xe9\xa6\xe7\xa4u\x18c\x1e\xa7\xb7\x90\x0c{\xe9\xda\xbe\xa9etf$f\xbc\x8e6\x91\x82\xed#\x9e*u-\xe3\x98,\x91\xba\xba:\xeeWR\x08e<\x82\x08\xeci\xd46\xa3\xcc@\x07z\xf1\x11>\xa2\x11W.v\x03\xe6\xbevXJ~a\x8cs\x9a\x8c\xb6\x82X%WF!\x81\x1f9\x1e\xc7\xe2\xa4u\x88D\xfaN\xa0\xc8q\xbe\xd6P\x0fum\x86\xa4~\xecT\x1c\xae\x00\xeaqP\xba\xf5\xf2\xe9~\x1e\xd5\xe7r3\xe4\xb2\xc6\xa4\xfe)$\x1b@\xfe\xb4\xcb%\xc1\xba\xb7S\x11\x12\x19\x14(<\x9d\xf1R\xec\xed\xda\xe6\xf2\xce8\xd7S\xb4\xc8\x10\x0frv\xaf\x91^$@\xa7pnG\x00\x1fl\xf7\xa6\xad\t1\t1\xb8\xb6\xed\x9c\xf1\xc1\xe75#/\xa0F\x8c\x01;\x89\xdd\xf8\x94\xe7\x81\x8c{Sr"\x8c\xc8\xb1\xeee\xfcc#\xd2\x0f\xfb\x8f\\W\xb3\xa3\x9c\x0eI\xcf\xed_W\xc3o\x85\x1boL \xf3\x04[\xe5\x04\x06RS\x07=\xe9\xe2yF0\x8c9\\\xe4\x13\xc8=\xa9\x9c\x12\x17\xba\x9bd\x8d\x86\x89\xd53\x83\xdb\xa1\x15\xd5\xad\xca\xb4\x84\xe7\x04\x96\x0c1\xc1S\xfe)\xf7V:\x8e1\x80\x0e\xd4\xe4\xf6E\xb5m\xf3\xb5I\xa2\xaa\x86P<\xcc\xe0\x002\t\xc8\xff\x00\x14\xaa"$\xa3jr\xc3\nH\xcb\x03\xee1M\xe3\x9a\'I\x03\x95\x08\x0e\x11\xc2\xe0\x92?\xc5teT\\\x1c\x83\xc6\x0b\x1c(\xdd\xd3\x83\xde\xa2\x90\xc4\x91\xbeN\xd5\x00\xd9\x1c\x91\xa6\x9e\x0cCq\x04\x8b(")\x15\x95\x81>\x92\xa7\x8e\x7f.+\xea[\xf9\xa4s\x1a\xbe\xdd\xab\x12(\xdb\x9ct\xcey\xfa\xd7\xc9;\xc21\xcb\x86\x1e`F+\x83\x93\xd7\xb5}=\xe1\x8dr\xcb\xc4:e\xbd\xbbL\xa3Q\xb5\x85c\x9e\x13\xc1`\x83\x01\xd7=A\x1d}\xab%\xe2\xa8\xa5H\xad&\nY\x13Pr\x06\xe0\x1c`\x9fa^e\xff\x00R:5\xc3\xdbt\xfb\xb8\xa1,\xb0\xb3\x89X\x0c\xe9V\xc6\t\xf8\xda\xa1u[1!\x12*\xe5\x93\xf8\x8fq\xedT\xe1\x15\xc47h\xd0\xb3\xc7 9F\x07\x04c\xb8#\xda\xb5K\x9d:L\xb6\x01 \xf6\xa8\xd6\xd2\x81o\xf4\xff\x00\x0f?\x9dR\xdau\x15\x8d0X6\xd5\xe4j\xc4l\xc2\x9ci\xda\xac\xf3\xc0\x8b{\x1e\xe2\xa0\x0f1z\x90?\x98\x1e\xa6\xa7d\xb5\xd2nbd\x9akvW\\2\xb9\x18 \xf6 \xd4-\xb5\xbc\x912/\x96\xbbH9n\x84R\xd2\xe9\xacw\r\xc1\xfb\x82G\xbdG\x16KrL\x90M\xe5\xe0\x92B\xf6\xfdi\x89\x11s\x9d#<\xfbUcR\xfb)\xf0\xa5\xce\xf9\xe3\x9d\xec\xd4\xe4\x93\x0c\xcb\xb0w\xe8\xd9\xaa>\xa1\xf6Y\xa7<[\xb4\xcf\x12\xc5#\xe0\xe1n#\xc09\xff\x00r\x8e?J\xd1g\xd2\xdd\xca\xa8\\\x12s\xed\\\xc7f\xf6\xed\xc8\xe7?\x9dY\xdb\xf5\x1e\xadj\xa0\xff\x00\xaaL\xfaN\x00u\x04}\x0e\xac\xd5\xc5\xb7\x88:\xe5\xb1A\x15\xfc\x84/\xf2\xb9\x0e?\xff\x00j\xf9\xae\xfbM\xbc\xd2\xaf%\xb4\xd4 0\xc9\x11\x1b\xd0\x10C\x03\xd1\x94\xf4 \xf6"\xa2\x8a\xecVc\x19\x1bO,\x06@\xcfL\xf6\xad\xb3\xed\x1e\xde\'\xb3\xd2d0\xc9$\xf1\xbc\xab\x84\xfcF0\xbb\xba\xfb\x03\xcdab\xef\xcb`VL\x96@\xdb\x1d\x0b.\xecc\'\'\x93\xfd+\xd0:E\xdb\xf5\x0b8\xe7)\xa5\x8e\xcc\x07\x19\x07\x1b|\x1a\xf6\xef\x0e\xdd7X\xe9p]4a\\\xe5]G\x1a\x94\xe0\xe3\xeb^\x89Ff*\xce_\x0b\x93\xb4\x9c\x93\x82y\xed\x8a\xedK\t#\xdcK\x03\xf8\x87A\x81\xedL\xe2m\xa5\x8c\xdb\x94\x9eH\x07\x19?Ol\x8ei\xe3\xca\x05\xca"\xa9\xe0\x01\xb5\x86\n\x93\xd7>\xfc\xd5\xab.\t\x00gn~\xd5xl\x818\xd3[\x17\xd9\xd7\xda\nXI\x16\x8d\xaa\\1\xb4v\xdbmq!\xff\x00D\x93\xc2\xb1?\xc0}\xfb}+\xe8fQ\x95a\xdf\x90GB+\xe1\xb9\x90\xc12\x06U\xe4(^r\x00#\x1f\xd2\xb6\x1f\x02\xfd\xa1M\xa7\xcfo\xa3j2\xa4\xb6d\xacp\xcd\xbf&\x02x\x00\xb1\xea\x87\xfaV\x03\xc4\x9e\x1b\xf3\x8b_X\'\xa8\xa9ib\x1f\xcd\xee\xcb\xf3\xee;\xd7\x9ax\xb3\xc1\x86E\x92\xfe\xc2?V\x0bK\x10\xef\x8eY~}\xc5}+gv\x84}\xde\xe57\xc2\xc4dw\x1f#\xd8\xd3\xc9\xb4\xb5\x8c\xe08e#*\xc3\xf9OCP\xbb\x00!\x81\xeb\xedSz]\xdb\xc8\xd3C$\x84\xf06\x03\xd0\x00:VS\xa5\x1bK\xd7K;\xcf\xff\x00\xe1&\xf9S\xfe\xc3\xff\x00i\xed\xeck\xc7\xa6VPH\xe6\xa0\xee#\x11+\xf5\xeb\x80qY\x17\xda.\xb0\xba^\x94\xf1\xac\x85&\xbb&%#\xaa\xae=G\xfc~u\xb6\xdf\xe1cu#8\x19\x1fRs_+}\xaf\xc9*\xea\xbab\x11\xfb\xb5\xb6r\xbdpX\xbf?\xda\xa7x~\xc69z\xdc03\x02\x10\x96a\xf2\xa38\xfdj\xfb\xc1\x9d>>\xab\xe2n\x99o(\x05\x01iJ\x9e\xfeX,\x07\xea+6\x8d\xdc\xce\xb8\x00\xe7\xd4MH4\xa5\xd3\nX\x9c\x96 \x1e\x80\x7f\xc5@M"\x87\x0b\t\xf4\xf9k\xf8\x8f\xb8\xe7\xb9\xefH\x89\x19y3\x11\xc7c\xdc\x8e\xa6\xbd`\xdb\xeb\xd2x\xdba\x8a\xfaa\xec\xf0\xa0\xa9\x03\xe3\x14\xf6{\x83\xbc\x83\x9e\x07\x1f$\xd2\xdaF\xb1.\x8d\xaa\xe9\xf7\xf6l\xad%\xac\x8b/|\x12\x0f*\x7f.\rD\xb3\x89\n\x1f8\xeeV\xce\xf0\t\xe3\xdf\xe9]\xdbZ5\xc3\x98\xe3\x9e-\xc4w;s\xdf\x00\x9e*B\xdbG2\x18\x9dr\x1dJ\x95<\x10v\xa8\xb2X\xc5:I\x1c\xb1\x82\xac\x85Xv \x8c\x1c\xd7\xe8\x1f\x86\xf5\xed?\xc5:=\xb5\xf5\x9c\x80\x07@\n\xf7F\x1dQ\x87\xb8\xaa\xf6\xbd\xa4\xa3\xf9\x9c\x00\x1b<\x8e\x95\xf2\x7f\x85\xbcU\xac\xf8?Scgtv\xe5CB\xcd\x98\x9f\x1f\xce\x07O\xa8\xaf\xa9|;\xe3\x9d\x0b\xc6\xd6\xdfv\x89\xcd\xbd\xf8\\\x9bI\x08\xc9#\xaf\x96\xdf\xc4?\xad`\xfa\xff\x00K\xb9\xb6\x80\x03\x1b\xb1\x80\xe69\x80\xdc\xafeq\xd8\xf6\xcfz\xf0\x1f\x14x\x1a\xff\x00\xa2K,\xf0F\xd3\xd8\x92Hu\x191\x83\xd9\xfe\x9e\xf4\xdfM\xb5k{\x8by\xd5\x02\x94`\xf8\xc7n\xf5\x92}\xba\x82\xda\xc6\x97\t\x94\x08\x85\x91h\xc6OVr\t\xc7\xe4+\xe9\x07\xd3\x1a\x05,\x0602s\xd0}k\xe4\xef\xb5\xcdR\x1dW\xc41$.\xb2\xc1m\x14v\xa2E9\xdc\xcb\x96b=\xc6[\x19\xf8\xa8\x1e\x1b\xb6\xb9\x1dn\x06\x96\x12\x1a4v$\x8f\xca\x08\xc6>\xf9\xa7?\xe9\xd5\x83\xcd\xd7\xd1\xd62\xd1\xc3\x14\x8c\xcd\x8d\x86F\x07\xdfz\xc6\xdd0\x0f\x982\xd9#\xaeH\xc5p\xac\xea\xa4*\x826\x9d\xc1\x86G\xd4w\xa7\x12[1\x92R\x1b\xd2\x0ew\x1c\n\xe28\x11\x89\xdd#t\xea\x14\x92O\xd2\xbdq#\xd4\xa3#\xe6\xbd\xe4\xda.\x0eSjl$\x01Ha\xb8\x85\x01OL\x7f\xcdH$\xa0\x1d\xb8!\x80!\x80\xf7\xf9\xfc\xe8\x16\xf0a\x8e\xc9\x18/\x7f\xc2\x0f\xd7\xae+\xb8\xfc\xb2e\xc8 \xb2\xe1B\xfb\xe7\x8e\xb5\xc9 b\xa4\x81\xb0;\xefM=\x88 \xe1w\xa7\x8a\xeb\xb6<\xe1q\x9f\xa6Ew\x16\xa0\xf6s\xc1u\x04\x84M\x14\x89,l\xbdA^G\x1fZHO\x95e\xf2\xb2v\xe0drX\xf5&\xb8HZ7\xdf\xb9H\x1d=\xc9#\xda\xa0\x18\x93\xd4%+\xc7\xe5\xe7#\xda\x98\xff\x00NVVYH\xc1\x04\x15\xe7#\xda\xbe\xbe\xd2\xb5x\xb5\xad"\xc6\xfc\x01\xb6\xe2\x05r\xbdv\xb7u\xfc\x8f\x14\xe2;ef\xf4\x01\xcfc\xdb\x9e\xd5\x89}\x98\xf8\x86h\xe7\xb8\xd2._r\\\xb9\x92\x0fd\x90\x0c\xb2\xfd\x18\x0e>k\xe8+Kwv\n\x83=\x0f\xcdx\xefW\xb2~\x93}<+\xf9Kj\x8b\xbeT\xf1\xfe+\xe7/\x13\xf4iz/V\x9e\xd5\x94\x98\xc9\xd7\t\xf7F\xe3\xf4\xe2\x9di\xca\xd0J\xb9\x1d\x0er;T\xe6b\x9fX\x92X\x1c\x9c[3\xb0#\xf8\xc0\xc1\xa6R:\xdb\xc0Y\x97\x91\xd3\xdb&\x9bhw\xa5o\xb0p\x1eh\xde,\x9e\x99a\xfej\x05\x94\xdf\xc41\xb8\xfe\x13\xca\x8c\xcc\x01\xd4\n\xe4z\x7fZ\xa8D!~q\xb5|\xcf\xf6\xb5x\xf3x\xbaHyo&\xd2\x18\xd7\x9c\x05,\x0bg>\xf95C\xb4\x9a\xe2(C\xa4A\\\x12\xb2\xb09g<\xe3\x81\xce1\xc1\xad\x0f\xed_J\x96/\x18\xdd\xb3\x16-s\x14RD:\x0e\x17i\x1f\x91Z\xcd\xed\x18\xa9\x8fw\xa4\xee\xdc\x1c\x8cd}Gj\xf5\x9e\x8ec\x1d\x0f\xa6\xacg\xd4\xb6\xf1\xea\x18\xc1\xd5\x8d\xff\x00z\xfa\xb3\xc2V\xd07\x86z)\x8c\x82?\t\x198\xf7#\x7f\xde\xac\x08\xaeQe\xda\x039 \xa9\xc6T\xfb\x801RQ\xbc\xd0\xcceG!\xe2\xc2\xabFr:\xe4\xff\x00J-`\xb3\x032]\x99$$\x1eFT\xafN\xbd\xcf4\xbd\xd7\xdd\x13S\xb4H\x06c\xf2X\xb2\x9cv\xf7\xf9\xae\xcdn\xfeQ%\x93N3\x8d@\xed\xf4\xfd\xaa\xe9\xa0\x86Ex\xda \xca\xc0\xe42\xe5H\xf69\xab\xde\x8b\xa8\xdbk\x0e\x90LR\xde\xf0\x8fH\xe8%\xff\x00\xbf\xc5[Z\xcb\xf6E\xad\xf5\xed\xd4\xc8\x90Ek7\x98\x0fB\xa620s\xdc\xf6\x15\x86\xcbr\xb2\xdc\xbe\xd1\x80\xcaF@\xe4\x01\xd3\x06\x9b\xeb:\xee\xa5\xabA\r\xbc\xf7\xf3\\E\x15\xb3\x14Wl\xe3\x8e\xa7\xfeO5\x9a\x97\xa1Iqq\x18\x8aq\x1c\x0c\x7f\x88\xa4d\x81\xff\x00o\xd7\xe6\xbc\xce\xff\x00\xfe\x98X\\uh.\xade\xfc<>`y"\xdfl\x1c\xfa?\xe7\x8a\xa7\xe9p\xd9\xcf\x7fg\xf7\xd9\xda8I\xcb\xberF\xde\xdf\x02\xa1\x9fo\x99)\x04\x1fQ \xfb\xf3R\t\x03\x99<\xb8\xd8\xb3`\x1e\x9f\x9f\x7fjw\x0e\x83\xa8M\xb1\x96\x02\x15\xd42\xee\xe0\x10k|n"\x8d\x00wU\xdf9\'\x19\x07\x8a\xf5\t#T \x96\x03\xb6\t\x15\x0e\xaaNx\xe4\xfbqS\x10\xda\x84\x008\xf5ua\x91\x82\x99\xe0\x8c\x1f\x83\xf4\xa9\xfb\x7f\x08K"\xa9\x9a\xe4+\x1f\xc4\xa83\x8f\xce\xacv>\x11\xd3a\x1ed\xac\xeev\xf3\xb8\xfe\xbc\n\xab\xb9\xea\xd6\x880%\'\x1d\x94\x13\xfe+\x9f\x88\x86<`\x93\x8faT;6d\x942\xc8v\xa3z\x08\xe4\x82:q\xed__xe\xc5\xed\xad\x94\xe8\x03\t\xe1Gc\x8e\xe4d\xd6\x14\xb0YD\xe2\x18-\xe3\x8a\x04\xff\x00Q\xc0\x03?\x15\xbc\xf8&K[\xbd"\xdf\xee\xf2\xa0(\x19%\nyS\x9c\x81\xf01X\xff\x00\x11H\xb7\xebi\x88\xca\x01&\tb\x00\xc1\xf7=\xb8\xaf&\xff\x00\xab\x10\xa5\xe7O\xe9\xd7+\x11\x0f\x04\xe5r\x06p\xb2.\xf9\xfb\x81W\x89\xb5d\xb1S\x05\xa4k$\xe7\x01\x9c\x8c\xaa|c\xb9\xae!\x95\xe0\x85\x8c\x98vc\x97\'\x82>\x95\xe4\x90\xd9\xdb\xdb1R\x06\x0eK\x1e\x00\xc7rOO\xadd\x9e(\xfbE\xb4\xb1\x8e{=)^\xee\xe8\xab/\x9e\x87\x10\xc4\xc4`\x10\xc7\xf1\x11\xd7\x8e>j\x03M\xd4\xe5\xbc\xb5\x82\xd6X\xe7\x11C\x88\xcc81C\xab\x9c\x9e\t\xf7&\xbc\x7f\xa7t\xab\xae\xa5 \x8a\xde\xdd\x98\x96\xf51\x1b\x01\xee\xc7\xb0\xab\xbe\xb9\xf6\x87\xe1\xdd\x01\xcc7\x17--\xc8\xfcp@\x03\xba\xfc? /\xd0\x9c\xd7\xce_h~8\xb6\xf1>\xa1\x14\xd1G$\x16\xb6\xf1\x18\xe1G \xb9,r\xccq\xd0\x9e\x07\xd0U]\xe2\xd4\xef\x18\x14\xb0\x95\xf77\xa9\x87\\\xf7?Zm\xa8h7\xc2\x10\xcbd\xe5\xdc\x1c\x13\xc0\\}{\xd6\xee\xd2\xc6L\xa1\x99\xdaF\x18\xcbl\x06}\xeb\xd7z?\x86\xbaOB\x96;\x85\x95\xa5\xb9T+\xe61\xd8j\x1b\xe9\x1d\xaa\x13\xcc\xb4\x94\x134\t\x81\xf8F;|\xd2\x96z]\x95\xf5\xfd\x84I\x00\x0f-\xc2\x04\x00\xe3<\xd4o\xec\xcb\xc8\x98\xf9\x8b&\xe0=\xea\xff\x00\xf6}\xa2I\x7f\xe2\xad-\x9c3\xb4\x04\xc9\xb7\xaf\xe1S\x83\xfdj}\xdb\xb5\x9d\xad\xcc\xc93a"f\xc2\x9c\xee\x06\xc3\x1fZ\x97\xd5oD6wsk\xfc\x91;\x0f\xa8\x1bW\xd0Z}\x90\x0f\xe5\xaf$\xf0=\xab[\xd2\xb4\xd8-\xacv\x9fQ\xc6MUl4\xd5GR\xea\xa0+\r\xfd\x8e\xdf\x8a\xb7]\xea\xfa}\x9c/\x1a\\\xc6\xcd\x8c\x04NN~\x82\xb1\xbe\x0f6\x90\xc9{\xd4\xaf\x1e4\x11\xa6\x98\xf5\x90\x0eNs\x80~\x95\xf3\xdf\x94\xd9$\x8c\x93\xb9\xa8\x1dL\xc4\xceQG\xa4\x0c\x0fni\x9a#\x17\x04\x02W\x1c\xd3f\xb8k\x8d\xe4\xaf\x07\xdf\xda\xac\x03\xc2~,\xb8\x86\tlZ\xce\x11"\x86c>X\xe0\xf4\x00\x0e\x98\xa5\xf4\xc8\xba\x87\x88\xef\xeed\xb3\x87*\x08fo\xca\x14\x0c\xe0oO\xc1m\xad\xd6=h\xb9\xe4\xb1\xc0\x1f\xa5u\x02\x80\xa0\x82Nz}*w\xc36\xcd&\xb7\x14\x85p"\x8d\xd8\xfec\x14\xd6\xdb\xc1\xfe)\x8aXD\xd7\x96RBB\x890\xa5X\x10y#\x1e\xfd\xabB\xd2\xb4h\xf4\xb9.\x1cJd2m\x00\x91\x82\x14v\xe3\xe6\xbd?\xa5tK\xc8%\x85\xaeQTD\xc1\x86\x97\r\x92;\xfe\xb4\xbf\xc2\xb4s(\xd6\xae\x01\xc9e\xce?p*j\xab\xf6Z\x14Vz\xb5\xed\xf0#\x13cj\xfb\x1e\xf5`\xa2\xb5\xf8\x07\x19\x00\xe0\xe4g\xb1\xe35)\x91X\xa9#\xf2\x9c\x8a\xab\xf8\x9bC\xb0\xd4t\xfb\xd9d\xb7\xcc\xc9\x03\x94q\xd4\x108\xac\x0bDk\xbd<\x1b}\x80\xdb\x8e\xdd\xf3\xdc\xd7\xd4\x8c\xaa\xcaU\x86A\x18#\xe2\xbe{\xf1=\xd4\x1a6\xb5y\xa7\xc3\x0e\x14\x80\xc8\xd9\xe0\x06\xac\xf7^Q\n\xdb\xdf+\x04h\x98\xa3\x1c~`\xf8\xc0?\xa5C\xba\x88\x92\xbaG<\xe3\xdcw\xa9\xcd&\x1d\x12\xf2U\x8ay%\x12H\xc0 A\xefW\x94\xf0V\x94\x8d\xb8I6\x7f\xf7b\x8f\x0b\xf8wJ\xd3\xedm\xef!S4\xd3F\x1c\xcc\xe7\'\x9foj\xb8T\xfb~\x9dl#C5\x95\xb1\x979$ ?\xb9\xa5A\x07\xa32\x00s\xb8\xa4-\xed\xe2\xb5\x868b\\*\x0c\n^\x8a*\xca\xa5\x80\x00\x00\r\x85\x14QE\x15\xda(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a\xa4x\xda}\xb6\xb6\x90`\x11#\x96?\xfd\xb5\x8cjwk\x181\xa9\x03\xb0\xf7&\xb6\xef\x18\xe9\x97W\xf6P5\xa4FI\xd2M\xa1G\xb3q\x9f\xca\xaa\xb0\xfd\x99\xfe\xe4K5\xfen\x8f\'\x8fB\x8faY\x1f\x10\xf4\xae\xa3\xd4\xe6\tn\xaa\x10D=lq\xf6\x15]*H\xd3>\x10\x9e?LVW\xf7\x01y\x06\xd7\x1c\xe3\x86\xc7CU\x85\xd35!1\x8f\xee\xb2`\xb6\x03\x11\x85\xfdO\x15\xac_\xe8\xf3\xe9\x17on\xee7.\x08a\xd1\x81\xaa\xde\xa3\'\x9d#\xc4\xc4\xed\x07%\x7f\x875\xe7=C\xa4~\x02)\x12\xe88t *\x82\x06O\xd7}\xa9\xad\xd8\xe3\x8cs]Agk\xa3i\x8fq4\xe9-\xe3\x82\x90\xa2\x9c\xaa\x13\xd5\xbeqUD\x0b4\xdeZ\x90[\x04\x96<\xd2\x1a\xad\xd7\x94\x84)\xc6:\n\xebDG6\x86i82\xb6W?\xca8\x15\x9b\xea\xb7Kp#h\xed\xd6\x08\xa1A\x12 %\x89=\xd8\x93\xc94\xfcxE8\xdf;\xd7|\x89\x91\x18\xf3\x8c\x7fZ\x9e}!\r\xbcw$\x02\x1f\xaf\xc7\xd6\xab\xd3\xb1\x86\xedN3\xe8<\xd6\xa9c\x0c\x13iV\xa1\xd3ph\x86~sQ\xad"\x0f&\xa6\xc6\x16"\xd8>\xf9\xc59\xa3\\c\xdf5R\xb4\xd2\x91\x8a\x94B;\x8a\x9a6h\xb1\xf2\xbc\xd4\x96\xe1m\x85\x8e\x10Tu\x1f\x15\xc4\xd7\x08\xea0\xa4\x1e\xe2\xae\xd7\xa8t\x98-f\xc4\x80J\x17p\xca@\xc9\xdbozl[JY@\\\xe7\x8cU~u\x03v\xe5\x1cs\xc7LV1\xe3\xaf\x10^=\x94\xdf\xb3\xee\x1a6\x8a\xe0G1Q\x86\xe3\xa0\x1e\xc3=}\xebj\xd4\xa6\x8f\x80\xab\xb1@\xe9\x9c\xf3Y7\x88\xbc!\x0c\xe2\xe2\xe2\xdd\xa5W\xbc\xc9\x94g\x80\xdd\x88\x15]\xd0\xe7\xe9_\xea\x92I~\xed"\x7f\xf6\x9dG\xa7Vy \x8d\xc5j\xfa7N\x8d]^\xe5t\x9c\xfa\x14\x8c\x8f\xbde\xde#\xf1N\xbd\xe2\x10\xb2\xdd~\xea\x00\x15|\xa8\xf3\xb0\xb0\x18,\xde\xe4\x9e~*\xb2\xa4\x0bK|\xf7*\x07\xd7<\xd5\xaf\xf6\x17\x88\xedm\xe5\x8aHRT~\x0e;|\xd5m\xad&\x89`YP\xa0L\xaf<z\xb3\xd2\xbd\t\x0fKEH\xec$_)H8\x18\xce~\xd5\xe8]2\xce\x08\xd0$*\xa1T\xe4\x01Z\x8f\xd9]\xe4Qk\xb7\xb6\x12\xb7\xaa\xfd3\x08=\xe4\x87-\x8f\xcdI\xaf\xa2\xbe\xe8\xfb\xf8\\\x1cc\x02\xbe\x1e\x92i\xe0\x9e\xceh\xa5xd\x8c\x90\x1dIR\x18t \x8eA\xab\x1c\x9e/\xf1\\zL\x0b\xff\x00\xab\xaf]\xa6g\x8a[o0\xeeT^\x8d\xbb\xaf5K{\xe1\xbf\xc6\xdd\xfe)\x1du>\x90\xd9\'\x00\xa8\xc6F\x01\xedU\x9d_\xc2S\xf5\x0b\xa5\xb8\x86\xe68\xfc\xc0\xa1\xc3\x02w\x1bdc\xe0W\xd3\xfa\xe5\xce\x95\xa4D\xd7\x1a\x95\xec\x16\xb1\xa8\xdcL\xac\x14\x9c{\x0e\xa7\xe8+\xe5\xef\xb4o\x1c\xc3\xe2\x99\xedm4\xf8\xd9t\xfbR\xcd\x1b:\xe1\xa5\x91\xb8.}\x87\x18\x02\xb3\xbb\x8b\xab\xab\xc9\xcbL\xf2H\xe6<e\xd8\xb1\xfa\xe4\xd3M\x8c\x87\x1f\xe6\xad:g\x86\xa1\xb2\xb9\x17SM\xe6\xcc7A\x80\xaa\xbbc o\x93W\xbe\x1f\xf0u\xa7H\xb8K\x99&3\xce\xa0\xe88\xd2\xab\x9d\xb2\x06\xfb\xd7$\x10NA\x04\x7f\x8a\xe9Fy \xfbWd\x13\x8c\x9c\xd7\x98\xce>?J\xd1\xe6\xb7\xca\xa7c\xcf\xc5,\xacs\x9e\x0f\xbei\xdc\x13\x15!KzGl\x7fcLWvF:\xf7\xf9\xa7e\xb2\xcaY\x14`\x00@\x1by\xcd0\xe0\x1d\xb1Sb\xdf\x03\x1b\x1a\xfa\x03\xec\xcb\xc7\xdfs\x96\x1d\x1fT\x94%\xa4\xff\x00\xfe\x96W8\x119\xfe\x13\xfe\xc6\xfe\x86\xbe\x93ON8\xe5Nz\x7fJ\xf8\x02\xca\xe1c\x94;\xa1h\xd0\x12\x88}@\x82x\x1c\xd6\xff\x00\xe0O\xb4\x86\xd3b\x87O\xd6Y\xe5\xb4\x18Hg\xfcR\xc3\xc7\xe1u\xeaW\xdb\xb8\xaf4\xf1\x1f\x87Yn\xbf\x1dg\x16\xe7yb\x03\x9f\xfb\x97\xe7\xdcw\xaf9\xf1\x97\x83Z\xe1\x9f\xa8t\xd8r\xed\xbc\xd0/\xf3\x1f\xf7/\xcf\xb8\xef_F\xceL\xa1\x02\xafS\x8f\xa9\xaf\x98\xbe\xd0|P\xfa\xd6\xa9-\x94\x12\xb0\xb3\xb2\x95\x91c\xc7\r"zY\xcf\xd7\xb7\xb0\xaf\xa0\xef<K\xa1Z\xe8\xd3jqj\x16\xd3D\x91\x12\x9e\\\x80\x97s\xf8T\x0e\xb9\'\xb5|z\xf29i\x19\xa2"R\xdb\xd9\xfb`\x9er>\xb5\xcb\x0bqw\xd5f\xbd\x91U\x8cp\xc6\x13la\xdb\xf3s\xdc\x7fz\x87\xff\x00L\xfa(\xfcU\xf5\xe5\xcd\xb3\x06\xb7"8\xb5\x8ca\x8euc=\xc0\xfe\xb5\xcb\xc7\x94\x85\x8bI\x18\x0cJ\xee\xf6\x1f\xe2\x93\x18U\x93\xd2\x1b<\x83\xce\x0f\xc7\x1e\xf5\xd9\x18\xcb;3\x06\\\xabu;G\xc7\xbd4\x91vD\xe6Y0\xae\x99@8,s\xfe:\xd6\x9dFp3\xde\xbd\xca \x08\xe7\xbd0\x95\x102\x96%]\xdf%\x80\x01B\xfc|\xd2M\xb1\xb2\xc7\xb0\x03\x03\x95\xce1\xf5\xe6\xbb\x99K\x03\xea%\x00\xfcD{q\xc7\xb6i\x12\xa1\xc9\x01\xd4\xb3m\x00m\xc6\x7f\xe3\x15=x\x1b\x9a\x9e\x14\x107\xa7)2\xdc>\x08\xd8N8\x1f\x84\x1c\xe0\x92{W\xa5\x94\xed\x8bb\xae$\x192\x1e>?\xf9\xa4\x03G\x14\x87*\x0b\xa8\xc7P\x17v{\xfcR\xa3c@\xea\xd2\xa0n@\xc6Ib=\xf3\xd8\xfb\xd2J\x81\x8c\x03\x8d\xb1\xfei\x93\x1a\xf6\x07\x1d\xa9g(\xce\xf3\xa1(\xc8\xe0zy\xce;\xff\x00\xc5J\xe9\xf7\xd7\x96Wk=\xb5\xcc\x82\xe5\x1b|rF\xdbB\x13\xdf\x9e\xf5\x13\x1d\xb9\x94\xa4k4{\x0ba[\x07\x93\xc1\xc7jp\x19\xe2\xdbu\xb8\xb1W*{\xfa\x80\xc7\xc7\x18\xa6$Eu(@l\x824\x91\xdb\xb05\x12xcude\x0c\x18\x15*\xc39\x07\xb1\xaf\xab|\x13\xe2\xeb_\x14A\x1d\xad\xd8H\xb5%ORcj\xcd\x81\x9d\xd1\xfc\xfb\x81\xf9U\xc6\xe9-\xec\xce\xd9\xe7\x8a\r\xe0.\x1d\xd53\xf1\xea"\xbe+\x8e\xf2H\x82O\r\xc4\x9b\x93\x94pJ\x18\xfdX\x1bH9\x06\xbc\xbc\x9a\xe6\xe4\xf9\xb3\\\t\x946Iv,\xc7\x07\x04\x02\x7f\xa5bg\xf0t2\\3\xc1t\xd6\xea\xcc} g\x19\xec\x06\xd5\xe57\xff\x00\xf4\xca\xd6\xe6\xf9\xe5\xb7\xbe\xfc=\xbb\x92|\x9f/QV\xf6S\x91\xb5}mi\xa9\xe8W\xf7r\xdaY\xea\xd6\x93\xdcFN\xe8\x92@[\xf2\x1d\xff\x00*\x9bXWk!PA\xaf\x85\xe4\x94G4\x97\x10I$2\xa4\xf9\x8fk\x9c\xaeNA${c\x1cV\x9d\xa2}\xad\xeb\xba4B+\xa2\xba\x9cQ\x85\x19\x9d\xb6\xca~U\xc7$}sM\\xF\xfa\xd1\x92k\x0b\x9f8\xe3\r\x1c\x98V9\x1b\xe0\xf0A\xf9\xaa~\xad\xff\x00L/!\x8c7N\xb9\x17\x1b\x0c\xc7 \x08\xd9\xf8#j\xfaT\xe9\xcaI;y8\xef\xd7\xf5\xa8\xadAt\xad\x12\xd6[\xedJ\xf1"\x819,\xc7\x03>\xc0u\'\xd8\n\xc7\xb5O\xb6\xfb\xa9at\xd34\x84\xb6c\x1eD\xb3\xb7\x9aK{*\x80\xa3\xf35\x90j:\xce\xb1\xe2)\xa5\xba\xd4u\x17\xbae\x03h\x95\xf6*\xe4\xf4U\x04\x00>\x95:\xcb\xa2_\\$\x7f\x8b\xb5\x8a\xd5\x17\x92Hw$\xfb\x01\xe9\xfd\x7fJ\x81\xd2?\xe9\x9fU\xb9\x90I\xd4e\x16\x90\x825(!\xa4a\xec1\x90?Z\x9c\xf1\xdf\x8dW\xc4\xf7\xb1\x8bL\xdb\xd9Z\x83\xe4/\xff\x00Q\xcb\x1eY\xb1\xd0\x9e\xc3\xb0\xac\xe6RF7\x03\x9e\x87\xa7\x00\xf3\xc6{\xd3\xe9\xe0\x11\xe66(\xac\x0e\xe5#\x9c\xe7\xb7\x19\xaf6D\xf1\xa8\x111\x93p%\xb2s\x8fo\xd6\xb7\x16p[\xd9\xdb\xc5\x14(Dk\xc7\xdf|\x93^\xd1a\xd2\xadz}\xa46\xd6\xb1h\x8a5\xc0\xf7\xfa\x93\xdc\x9e\xf4\xdeE\x89#\xdc\x14\x96`0\xd9\xe8G^\x98\xa7\n\xd0\xf9,\xcc\x87\x922;3\x1e2\t9\xfa\xd2\xb7\x08#\x12\x08\x89\xdaN\xc2\x8d\x83\xea=\xd7\xe0{\xd2\x028\x91`Vd\x05]\xb7d\x1c\x90;\x1faOj\x0c\xa3s\xcf\xde\x9f\xf2\x97\x03\x19;\xd7\x86?0\x15.\xac\xc7yR9\x04\x0e\xd9\x1d\x0f\x14\x80\x8e\xe1\x08\x8c\xab |\x1c\x1f\xe2\xff\x00\x9ar\x01\xd9\xc3*\xe0\x90\xcb\xd0\x90\xddy?\xa5\'t\xdc\xa8Tl*\x909\xc8\xe0\xf5\x1e\xf4\xa5c\x9d;`\xfe\xd4\x14\x19\xc1\xc6\x0f;W\xd2\xbff\x1e9:\xb4k\xa2\xdf\xc8\r\xc41\xe2\xdeV\xe1\xa5D\x1d\x1b\xfd\xc0~\xb5\xb0D\xe6\x0b\x95a\xef\xd2\xbe\x14\xd3/\xee,\xaf\xad.m\xe71\xcd\x1c\x82M\xe4\xf7\x07\xbf\xc5}\xb3\xa1\xeaV\xfa\xe6\x95\xa7\xeaP\x90Vh\xc3\x11\xec\xc3\x86\x1fPk\xc9\xfc[\xd2\x17\xa6^Gyn\xba"\x9c\xee\x07\x0b \xdfo\xaf5\xe0_\xf5\x0b\xc3Q\xf4\xab\xc8\xae\xedS\x16\xf7$\xe5@\xd9$\xe4\x8f\xbf"\xad\x1a\x95\xb9Lp}K\x9ey\xc0\xaf\x9f~\xd8t\x9f?K\xd3\xef\xd1[\x16\xf2\xb4r\x11\x8e\x16A\x90O\xc6Em\x1a~\xb3\xe6Mw\xa4^1\xfb\xc5\xbc\xcd\xf7w\xeb\xbe2s\xb4\x9fp:|T_\x8ate\xd64\x8dB\xc4\x8f\xf5\xe2!\t\xe8\x1cr\xa4\xe3\xe4T$\xb8\x8f\xa6u\xfb[\xa8\xc8X]\x95\xf09Ua\x86\x07\xe9\xbda\xbc9\xd4\x07I\xeb\x9d.\xf8\xe4,3\x81\'\xff\x00\x83z[\xf65\xf0\xf0\x11*\x8d\xe9\xbb\n\xc0\x15`9#\x8c\xf0zw\xa4\xb7*\x12\xc0+\x12A\x1cd\x8f~\x0f\x14\xe6{ya\x96U\xc0,\xae\xc0\xe0`\xa9S\x8e\x9d\xa9\xa3\x8d\xaex\x07\xa6pz\xd7\xb4&\x1b|\xe7#\xde\xbe\xb9\xca\xb0\x04\x1c\x86\x19\x1d\xc6)#\xc1![\xa8\xc1\xf9\xa7\xd6\x88\x92K\r\xbc\xa5"V`\x0c\xac\x0f\xa47\xbe:\x8aAb\xc4j\xf8\xc8bx\xc6z\nwd\xb0\xb3(\x92\x07u\x07\'kc\x8fc\x91O+\x80y\x18\x1c\xe7\x8aoFA?\x1d\xbf\xe6\xb4X|\x03r\xb0\xef\x86\xee)\xa4$:\x94\x07\x0c\x87\xba\xfb\x8f\x8aV?\x01\xf8\x8e\xc9>\xf1\x02\x80\xd1\xe1\xd3\xc9r\x1b\x83\xc1\x07\xa8\xa8\xbd\x13^\xd44LE\x10\xf3aI8B\xdc(n\xd9^\xd5\xa1Yx\xdaTso#K#;y\xa7q\x0b\x82?\x12\x03\xfd\xaa\xc8\x1e\x8bt\x06\xb2\xc8\xc4`\x80r8\xf9\xe6\xa8\xae\x97\xab\xc7\xa8 \x82d?\xee\x18\xc8\xf6\xc0\xaa\xc5\xe4~3\xd4`0\xcd\xa8\xdf\xcb\x81\xea\x82I\x9bq\xf8\xda\xc4f\xaa3\xe8\x1a\xcc\xc1\x04\xb6\x17$\x8eH\xd8r?/\xca\xb7V\xf1\x96\x89z\xa0\xcd\x00M\xb9!]\t\xce?\x8409\x06\x92\xb7\xf1v\x97\x1aH\x93\x86Q\xbf!\xbdY\xda{\x0c\xf7\xfa\xd2b\xe9\xfd&\x13\xa2\x1b\xd5P\xdb\xfap2~\x95\x06\x1b\x8b\xcbh\x88\x8f\xa3,X;\xa2\x00\x07\xdb\x1c\xd7\xcf\x8f\xa0\xde\xb3\x82-\xa5U\xcf!\xd0\xee\x03\xdf\x03\xad7\xb7\xd1\xf5i\x89\x02\xd2`\x91\xf0}$d\x13\xd3\xb7Z\xfaRO\x10\xf8s\x877\xc8U\xc0\nrx\xed\x921\x91\x8a\x86\x9bQ\xd04\x8b\x99\xae\xa3\xba\x13\t[\x98U\xf7\x06\\cw\xb6A\xe6\xa7\xb5\x8d\xaaF\x1b\xfdIXc\x07q\x91N\xc7\xd5n\xa4,\xad\xd3dV\xc7\xa7 \xe0\x9c\xf1\x9a\xc3-\xf4]Q\xa5\x9e(m\xdeM\xc8T\xa6\xd6\xef\xff\x00\x15\xe4\xbe\x1d\xd4\xa3}\x92\xdb\x05t`J\x92\x01\xdaG\x1c\xf4\xad\x8a_\x19\xd8B\xb2\x9b{>@%I\xc0$\xf6\xcej\xab\xa8\xebr]H$[x\xa33F3\x86\xdc@\xc7L\xf6\xaa\x9b\xcf\xf4\xe8c\xd4\x97\xc5\xe4-\xc0\xf6\xc5O\x82k\xa9\\\xeb\xb4\x11\xa9\x1c\x96\xc9\xcf\xda\xa9Q\xd8\xbc;:\x82\x01<s\x8c\xd2\xdftU]\xec\x03\x003\x8c\x81N\xfdk+\x003\x91\xdf\x8cW[K\x82\x1czv\xfb\xe3\xfbVq\xa6brN\xc7\xf5\xa9"\x16-\xbf\x14\xbd\xa8\x8bH\xb9\xb2\xbf\xb6p\xed\x1c\x90\xceG\xb6\x1b\xd5\xfa\n\xfa\xf3H\xf2\xe7\x8c\xcc\xb2\x00\xa60\xe8FNU\x80 \x0f\xd6\xbeD\xfb\xbb\xca\xc5x\xe3\xa8\xc7\x18\xfa\xd7\xd2?gZ\xdd\x95\xe6\x91\x06\x99%\xca\xa5\xdd\xb8\xd8\x11\xb0\xa6D^\x9bNy\xc5e\xfcMo\x1d\xe9\xb4\x9f\xcb\xd9\x0b,\x80\x13\xf9H\xc8\xdf\xb0\x04W\x99\x7f\xd4\xce\x8d%\xcd\xa5\x9d\xfc1\x97krV]#\'C`\x83\xf4\x18\xabv\xa6\xac\xe9\xb5\x98\x90\xaaJ\xe0\x7fz\xa7y\xa5%L\x120\xd9\x04U\xf2\xf1%x\xc8PP\xe0\x86\xc6y\x07\xb1\xfd*\xbf\xfb/%]\x89\xc8\xcfj\xc9]\xb5\x9aM\x88\t(c\x04go\x8d\xb3\xb9\xc5x\xba\xc6Yw\x1b\xe6\xa9\xdfi\xfax\xd7t\x1b}a\x10\x0b\xcd;\xd30\x1f\xc6\x8eq\xb8~u\xf3\xf4vF2\xacAT<\x1c\xf3\x80:\x8cW\xd6\xf7\xb6+.\x99\xa8A \xfd\xd4\xb6\xcf\x1b\x1f`\xc3\x00\x9f\xa1\xaf\x9f?ei\xd11W\xbb\x96R\xa4\x82#\x8c\xed\xf9\xe5\x88\xef\xf1Z\x8f\x0e\xf5)\xa5\xb5\xb9\x8eC\xf9$\xc8m\xb7\x0c3\xfdrk\xdc\xff\x00\xe9\xa7Y\x11\xf4k\x8b+\x89\x7f\xfeZo\xe1\xe4\x13\xe8}\xf1\xf69\xaa\xd2+z\x1d\xd0\xf0F\xdcq\x8c\xfc\x0f\x8at\xb0K#\xdb\xc9\x9c\x95B\xa7\x00d\x0c\xf7=\xea\xe2\x89b\x14,z[\xc8G\xf1K)\x1f\xd1\x00\xa2;+\x8c\x9d\x96\xf1 \'\xa6\xdd\xdf\xff\x00Vj\xce[\xe0\xab\xf9\xd7~Fx\xad\xf3u\x9bP\x0e\x11\xf28\xd8`\xfe\xf5S\x167\x0c\x8c\x0c\x0b\xea`U\x89\xdd\x8fs\xf54\x90\xd1R\'\x0c\xc3\x7f\xa7k\x0e\x07\x03\x9cc\xda\xaf\xb1\xe9Wm\xd6G\xc7\xb0\xe0\x7fJy\x16\x80O%sP\x8fVX\xf3\xfcU\x00\xf6\x15\x06^\xb4NBG\x8c\xf2I\xac\xf8i\xcc^2\xaa\xa9\xc8\xdc\x14v\xa98\xecn\xa4#\x12m\x1f\x0b\x9a\xd0\xa1\xd0\x94c\xd1R\xf6\xfaB)\x1e\x81P\'\xebh8\xc1\xc7\xbd@~\xa9!\xe5\x80\xc5f#H\xba$\x04f\xe3\x1c\x9e\xe7\xe8*R=\n\xf9\xd4e\x98\x9f\x81\xff\x005\xabA\xa6G\xc7\xa2\xa7\xadt\xc8F2\xa2\xa0\xafW\x9e\xe1\xf4\xc6\xa87\xe4\xd4\x19\xfa\xe0\x8co\x96\xacm<+s**\xb6\xef\xd0\n\x97\xb0\xf0U\xdco\xbe)\xa7\x81\x8f\x05\x91\xca\x92>H\xc5m\x10\xd8D\xb8\xc2\x01R\x91Z\xc6?\x84U\x8d\xba\xddH\x7f\x8b:\x95<\xa8\x18\x06\xa8\xae\xbcF\xce\xac<\x94 \xfb\xefY}\xb7\x81\xc4\xe4\x1b\xa9\xa6\x9b\x8c~\xf6F\x7f\xeejj?\x05ip&\x05\xac\x7f\xff\x00\x08\xad\x04B\x17\xa0\xaf]A\x1d*\xee9\x96\xd6"\xa9\xb1\x1f\xa5Q?V\xb8c\x85!\x17\xd9F\x05g\x13\xe8\x16P\xa1T\x88\x00;\x00\x05U\xb5-\x12)T\x83\x10\xe3\xa5j\xd7p\x13\x9e*\x02\xe6\xdb9\xe2\xb0\xfdK\xae\xdf\x9b\xc6\x8c\xce\xea\x83\xb6p\rO\xb7\xb92.Kd\xd6\x01\xaa\xf8y\x15\xc9\xf2\x97\x1fJ\x90\xf0|6\xda6\xa3,\xe4\xb4-$[\x04\xab\x9c\x8es\x83\x8e\xc6\xb4\xab\xdd=%\xc8d\xa8U\xd2\x10?\nG\xc5J^\xaeg\xb4hd\x91\x80a\x83\x83H\xbbE\xb8\x86Hd\xce\x87\x188\xa9\xd7\xbc\xb5\x9c\xfe\xf7VF\x04w|\x7fJ\xea&\xb2\x8bs\xac\x9e`=\x90g\xfa\x9af\x9a<2\xa0\x059\xa7\x10\xd9\xdc[2\xa0\x88\xba\x13\x81\x8e\xb5HD\'!%r\x7f\xdap3Tqxo\xa63fIe?\x19\x00\x7fJ\xb3\xf8K^\xd3\x17T\x92\x1dKLU\x89\xb0"\x91\xce\xed\xa7\xdd\x87N\x7f\xa5}\x04\xa5YT\xa9\x05H\xe0\x8e\x98\xaf\x9f\x1fC\x91 \x13\xcb\x03F\x07r0y\xad_\xc3\xfa\xce\x9e-l\xed\r\xc8W\xd8\x15\x11\xcf\xab>\xd5\xed\xff\x00\xf4\xef\xaaI\xf8y\xba]\xd5\x9a\xda<*\xb2E\xacyo"\xb9=\x8f\xe6\xc1\xefT\xbds\xa7\xd9[\x98\xe5\xb1S\xa0\xe5d\x03\xd4\x01^\xf9\xabu\x14Q^\x9dY\xea(\xaf\r{E\x14\x85\xcf\x9am\xe6\x11.d(B\x0c\xe3\x928\xe6\xb2\xdf\x0f\xfd\x9c\xe2{\xbb\xcf\x10\xc8/\'\x91\xf3\x1a\xef%UkY\xa2\x9a\x96\x18\xa6\xf2\xfc\xc8\xc3\xe8b\xca\x0e\xe3<g\x14\x86\x8dY\x819\xd8c\x14\x940\xc5o\x14qD\x81\x11\x14*\xa8\xe8\x00\xa5h\xa2\x9d\xa5\x81\x8d\x85\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14QE\x14Q^\x1a(\xaa?\x8a\xf4k\xcb\xf9a\xb8\xb6\x88HR2\x18\x03\x82k&\xd54\xb6!\xdc+$\xab\xf8\x90\xf1\x9a\xfaB\xa05\xbd\x0e\xdfT\x85\x98([\x85_C\x8e9\xf65M\xd5\xba5\xbfS\x8eMJ<\xc2\xbbg\x82@\xdb\xe9P\xe5\xb79gC\xb9\xdc\x8f\xf1_$\xebp\xb1\x8c\x92:\xf1V\xc7\xb6\x86-:\xd6%\x18h\xe2\\\x1f\xcb\x9a\x96\xd7\xb412M\x0b\'\x95p\x9cm<\x02EF\xdfF\xe2\xd6\x12A\x05\x10n\x1f\x961^%\x7f\xd3&\xb3\x92\xe6\x19\x10\x91\xbe\xe4ps\xbf\xdcS<\xaf\xd2\xaa").5\x1bX\x95\xb7\x16\x97`\x1f\xfb\x85k\xf60\\Y\xd9\xc1o(\xc1Q\x8c\xd67\x89!\x9dnbf\r\x1b\x87\x00\xfb\x83\x9a\xde\x1a;\xeb\x9d&\xce\xfd\x10I\x1c\xd1+\x92\xbc\xe3#\x9ao\xa6\xf4\xc7\xbc\x86\xf1\xe3Y\x9aKh\xc1e\x8cg\xd2N\xf9\x1c\xd3\xf0\xbe\x10\x02\x075\x174\\\x9aq\xa7h\xb3_Hrv\xc6?\x13\x7f\xc5t\xab&\xc4,\xbe\xa3\xd0}kC\xb2\x86\x1b[H\x94\x10\x0e\xd0O\xb95i\xe1\x8f\x08[\xf5\xbe\xa7,\x97\x88\xe2\xd6\xd8+\x18\x8eW[7\x00\xfcU\xbe\xaf\xc2\xc2\x8c1\xe6?\x7faX\x7f\x88\xf4\x89\xec/\x84lI\x8d\xcf\xee\xc9\xee)\x85\xfd\xba4\xe1PzUT~x\xe6\xaf>+73\xea6\x82h\xf6\xc6\xad\xfb\xb5\x1d\xc7rj\xa8#\xdcX\x9e\xe4\xd6W\xc4\xf6\xf6\xdd/\xadu\x0bKX\xd9!\x8e_@q\x86]\xb3\x81\xf1\xbe\xdf\x15\xa4\xe9\xba\xae#\x85\xdf\x04\xe9\xdf\x1cT\x0b\xe9\xe8\xeaA^\xb5L\xd5\xbc\x1d\x15\xd1,\x83\x1c\xe7\x18\xc8\xcdj\xbeP\xc0\xcfz\xf3\xee\xe0\x8e\x95Mo\xd5\'\xb6}Q\xc8A\xadE\xb3\xb4\x04\x158\xaf\x9c\xf5\x1f\x04\xcf,m\x19 z\xb7\x02>*\xb7u\xe1\x9b\xdbfG0\x17+\xd4\x81\x9c\xe7\xe2\xbe\xa5\x9bOG\xfe\x1a\x87\xb9\xd1\x94\xe7\xd1Z;O\x15\xdc.\x95b\x08\xf6\xab\xd8o\xf2\xa0\x1cW\xc8\xf7\xfaT\xd6\xd71Hc-\x13\x02\xad\xc7*z\xd3y\xec\xe2\x8fo\xa4\x8c\x8c\x12:`\xd7\xd3\xd7\x9e\x1d\x82\\\xef\x81[\xea*\xb5y\xe0\xfb)\xc3\x06\x88\x8c\xff\x00/\x15\xa5\xb7\xf1\\N#\xd7\xa8c\x92\x0f5c\x1d\xea\xfarO\xda\xbeu\xb9\xb6\x92\xdbd\x9b\xb2\xaf\x9c7\xd3\xde\x9b)\xc0\x07\xa6kw\xb9\xf0E\xbb\xc5\xe5\xab\xb0\\\xe7\x04f\xa1\xa5\xfb<@7\xc3/\xab\xa8\x04`~Uo\x17\x88\xba{\xa8\xd7!\x07<\xe2\xadb\xea\x10`j\x7f\xda\xb2\xe8\x11\x92h\x0b\r\x9c\xee\r\x8fni\xfbB.\xa23\x17f\x95\xe4!}\x80\xf9\xf6\xab\x91\xf0\xad\xed\xbam6!\x80\'\x0c\t\'\x14\xee+\x0b\x98-\xa5\x85-\x14\x96\xc0%\xc1\xc0\xc79\x18\xfd9\xa7\x8fS\xb6s\xa9e]\xb8 \x8a\x9d\x1d\xd4m\x82\x8c\x0flg\xb5gF\x19Sk\x1c\x9c\x81\x8c\x0e>\x95/oz\xbbbI\x18\xae\x08\r\xc6\x06A\xeaqV\x88\xb4\xb7r\x1ap\xd9\xdcIU\x1e\x80Fp}\xf1^\x1d\x05<\xc9\x19rU\x98\xb2\xb8\\\x10O\xc57-\xfd\xbc\x8b\x87l\xe0\xed\x83V\x0b:2\xe0\xef\xedLV\xe1\x15\x06\xc9\t\x06@I\xe83\xdb\xfaS\xa1,RH6\x92\t?\xc4\xdc\x11\xee}\xab\xa3\xa7\xbeLaY\xf8\x19\xc2\xe6\x9d%\x91\x017\xa1\x1bF\x17\x8e\x80s\x8a\x80\xf2C\x8c\x83\xbf\xd6\xb8\xb2i<\x1d\xe9\x16g\x84\xe5B\xab9\x062\x0e\x08\xed\xc6)\xa1\x89N\xc0\xe5@\x8d{\xb1\x04\xe7\xe2\xa6M\x923\x02\x10\x83\xeez\xf3\xd4\xd2\r\xa7\xb7\xa9\x83\xe5\x87@GZm&\x8c\x7f6\x0f\xbdL\x8a\xe4\x0eN3P.\x1aH\x0e\xd6c\xb7q\xc3`n\x00\xe7\x06\xa3T\x9d\xee\xce\xe0\x0er:\x9cg\'\x1e\xd5f\x9e\xc2Y\xb2\xcf\x90\x08\xc9\xdb\x81\x9f\x81\xedQ\xa3Lp\xe5\xe3F\n0\x06I\xc8?\xe6\xa6\xc5<Z[,*\xc6+\x94 \x8dB\x98,I?\x9d\xbet\x8fn?\x16rA9\xe3\x15\xdc1D\x93\x80\xe8d\x00\x81\xc0\xe3\x18\xfe\xf4\xf2[f\'v\xdf/\xb1\x00\x13\xf9\xfeU\xec\x91;\x87\x927"@A\xdc:g\x18<v\xa7<\xd0A\xf5\x10\x08\xc7\xd0\xfdE+\xce\x19\xc6v#\x1fJo\x07\x97,\xab\x1e6\xc6\x0b\x9c\x0e9\x07>\xa3\xed]\xc0\xcc\xaaa\xcf\x98\xef \x00\xf2\xc4\x8cc\x81N\xed\xe1\x1b1\xe5\xf3\xb4\x02Gn\xc4s\xd8\xd7m\x01I6\x88S\xf1\xe4\x12I\xc0\x1d\xb3\xf3M4\x8b\x96_\xef\xdf\xde\x9ayA\xc8\xfd\xab\xa4\x8b\xcb\xf3I\x94n\x1c!a\xb4\x0fo\xa5#\x14N\xd3\x99\x0c\x04(b\xc3i9_c\xcfsO#\xb5\x9d\xa3\x0c\xe4z\xf2\x15z\xe3\x1c\x12s\xd3\x15\xd4\x91HX\x82\x08c\x93\x92\xd8%GN;b\x98\xf3\x06Xj\x07;\x13\xedLk\xe4l\x7fj\x8c\xba\xb5D\x8e\x12\x88\xcb&Ih\xfd\xf9\xcf8\xf6\xefHN-\xdd\x14\xf9l2H$\x102\xb8\xe8\x07qS&&!\x8eTm\x00\xec\x03#\x9cg\x1d\x7f3^\xbd\xb4r\xc7\x85@\xd8`Tt\xc1\xcd-g\x03N\xa2N\t\xdf>\xf4\x19\x06\x06I\xe6\xab\xf1\x8bD\x86D\x91\x18\xc8\x8c\t}\xb9!A\xeb\xf3\xc7QH\xc6\x11\xfc\xb2\x08\x06L\xab(>\xa1\xb7\xf8\x8e\x7f\xa0\xa9\xe9"\x05\xdc\xbcx\x12\x1cp?\xbf~\xdcW\x12\xdbD\xe5\x15\x15@T\x0c\x8c{\x9f\xaf\x1e\xf4\xf2\xdc\r\xf3\xab-\xbf9\x03jO\x9b\xbe7\xdf~j\r\xa0\xf3\xf2\xec\x19H\'{\x9c\x00A\x19\x07\x1cQu\x07\x01\xcb.\xc4*\xa0.r\xc3\xe3=8\xe4\n\x9c\x92\xd4\x97\xca\xede\xdc\xac\x0b\x0c`\xa8\xe8\x7fJT\xdaE\xe7\xeev\xde\xe7\x922\n\x86?\xd0\x01]\xfcP\x05Nv\x03`(2\xf1\xea\xed\xc5@\xbe\xc6HY\xcb\xeeQ\x95\x90\xfe"\x0fO\xd2\xbc\x92\xda6\x88\x03"\x97Ugi\x17\'\xafL\xe3\xa9?\xd2\xa6\xde\xd3{\xb7\xa1v!=q\xc8\xa5c\xb7\xc4\x93K\x0cj6\xe4n+\xc1\x03\xbf=\xcfa\\\xfcHP\x08\'m\xf9\xdb\xe9H.\xb8\x18$}*\xb1\x14W\x0b\xe5\xf2\x00\r\x9c\x93\xe98\xe7\x1fO\x9aNY\x19\xf6\xeef\xf5\xb9m\x84\x00\x01\xc7\x15ckuUO8\xee+\xd1T\x91\x80y+\x9f\xefQ\xf2ZD[\x0b\x160H\xc63\xfa\x1a}\'F9#\xee\x05$\xb0\'\'\x1f\xa5E\xb4\x04\xba\xaa\x00\x19Pnl\xe4g8$|\x1a\xfa\'\xec\x7fW\n\x97\x9a,\xb9V O\x17`H\x18p=\xb3\xc1\xacv\xdbOe\x8d6\xc6\xc1\xf7g\x81\xea\x07\x15t\xf0|\xc3O\xd7\xb4{\x8d\xc0\x118Y\t8;d\xf4\x11\xf29\xaa/\x10\x84\xbf\xe9\x97P\x1d\xc8R\xc8{\xea]\xc5g|Sa\x17U\xe8w\xb6\xe4e\x92"\xf1\xfb\xebM\xc7\xeb\x8cV\xc9\xe2H\xda=b9\x94\x95\xf3`S\x91\xd42\xfas\xf5\xe2\xa4\xf4\x8dy/qkx\xc1n:#t\x12\x0f\xf0\xdf\xde\xbd\xf1\x15\x81y\xe2\x95A\xc8\x18o\xc8\xf1T\x8b\x88\x1e\x19\x8f]\xca\xd9\x04pEy\xd4I\r\xfd\xacA\xcf\xac \xc3w\x04W\xcbN\x85u\x81\xd9\xcf?;\xd6\x7f\xf6\x9d\xe1\xa8\xb4\xddt\xdeF\xbba\xd4\x11\x9c\x01\x90\x16U\xfcC\x8f|\xe7\xf3\xac\x8ex\x14l\x0b\x10\x04.\t\xf7\xaf\xa4<z\xb2\xeb>\x1f\xd1\xb0\x86[\x94\xbceb\x078\xd9\xd7\xf3\xe2\xb2U\xf0\xd6\xa3!\xc0\xb4q\xcf;\x88\x1c\n\xf4/\x0f\xf5\x12:e\xb8\xb9\x98k\x8f1\x9c\x9cd!\xc0?\xa5}-\xe0N\xa3%\xdf\x86\xfat\x97\x0e\x0b"\xb4Y\'\x95\x8c\x95\x07\xf4\xaa|V\xaf*\xe3\xd0\xbe\x8c\x0cg\xa8\xff\x00\'\xb9\xa9T\xb4\x96\xddLo\x12\xa9\x04q\x8fP\xfd\x7fZ\xb1\'\x86/_\x91\xb1FG\x04\x8c\x8c}*r/\rHQRI\xd7h$\xfas\xd4\xfc\x1a\xb1\x9b\xa9\xc01\x99F9\xc5k\x1e\xf2\x05\xc7\xf1\xd3\x1e\xd9\xaaQ\x83\x1b\xa3$\x86=s\x91\x81\xed]\x84!\xc6\xd0N9$v\xff\x00\xb5_\x93\xc2\x96\xb9Rd\x95\xbd\xf8\x03#\xdb\xbdJE\xe1\xfb$P\x05\xb9orI\xe7\xf4\xc5C\xff\x00U\xb7\x04\xff\x00\x18\x0f|\xed\xfaTG\xeav\xa0m&\xaf\xa0\xac\xd1T\xb1*\\\x90\xd8`G \x1f\x9fj\\\xda8e"O0\xb0\xe4\x8eG=\xbe\xb5\xaa\xb6\x91k!Q\x1e\x99m\x18\x18\xe0\x069#\xdfq4\xa4:<\xd0\xe7\xc9E\x8c\x93\xd5T\x06\x19\xf6=@\xa8\xb2u\x9bU|y\xc4\x809\x03\xfc\xe2\xa1\xb7U\x84\x8c\x85`}\x8e\x05ecK\xb9w`\x91M\xb3\x18\xfc\'\x1cs\xda\xbb\xfd\x8fv\x10\x11k \x04\x1c\x92\xa7\xfc\xe2\xb5y4\x8b\xc9\xb1\xe6M+\xe3\xa6\xe6\'\xadq\xff\x00\xa7\xa4=A\xa6[\xaf[\x0e\x18\x908\xc9\x03\xf5\xa6\x0fT_`>\xf5\x95.\x91tY\x18*\xa7n\\\x03\xcf>\xf4\xa0\xd1e\x04\x1c\xa1\xf8\x04\x93\xfd\xabWO\x0f\x11\xd4S\xc8\xf4\x05\x1dV\x98\x93\xc41`\xe3\x1f\xad4z\xae8*+\'\x8fE%\xb2\xcc\xc0\xee\x07*2q\xed\xcd>\x87C\x88F\xc1\xa3\x95\x9c\x9e\x0e@\x18\xf9\xe2\xb5\x88\xf44\x1f\xc1Oc\xd1c\x18\xf4T\x07\xf1\x1684\xc3\xf5\x82?\xfb\xd8\xfaVU\x16\x92\x88W\xcb\xb2\x00`n\x0c\xec\xc1\xb1\xef\x8cqR\xd1A{\x1e<\x8b[XH9\x0c\x90)`~\x0bn5\xa6\xc7\xa4\'\xf2S\xb4\xd2\x17\x8fEE>#\x9c\x961\x83\x93\xc9Q\xfe*\xba~\xad\x1b\x8c<\x8c\xc3\xd8\x9a\xa6Xk^+\xb4\xc87\xedp\x87\xf8.\x14H\x07\xd3\xa1\x156\xbe$\xd7\x99HkKL\x13\x9e\x15\xc7\xff\x00\xddVD\xd2\x07\xf2\x8aXi*?\x84Ut\xd7\x0fr\xda\xda\xc81\xc65c\x07\x06\xb3\xb3\xc3\xd0fr\xef\xd3\xe1,N\xe4(\x19\xfd*\x83\xa8>\xb1\xab\xa1\x8a\xe2m\x90\x9e\xb0\xc66)\xff\x00\xdd\xdc\xfet\xc6\x1f\x0f(\xc7\xa2\xb4\xf1\xa6\x01\xda\xba\x1ax\x1d\xa9\x0buu\x14z#\x83\xcbA\xd9p\x05J\x86\xf6\xce\xd61\x1d\xbc)\x1a\x0f\xe5Q\x81\xfbU\n\x1d\r@\x19_\xe9R1\xe9(?\x86\xae\x02\xc8\x0e\xd4\xa7\xddT\x0e\x95\x1aI\xee\xc8$\xe7\xf5\xa4\xbfT\'\x83Ud\xd3\x95q\xe9\xa5\x85\x9a\x8e\xd5`0\x8fj\xe0\xc5\xf1P\r\xdb\x93\xb9\xa4~5\x9b\xbdB\x8b`;R\xe9\x0e;T\x8f\x95\xcfJ\xf3\xcb\xf8\xa4\x99\xc9\xefI7\x05\xbb\xd2q \x15%\t+\x8al\x8b\x8au\x1a\xf4\xa6\xbc\xe7\x8d\x83+\x10j\x1c\xcd\xab9\xa9X\x98\xe2\x9f#t\xa8\xf8\xb2}\xe9\xe2d\x1a\xd6Z]\xc8UX\x12A\xefT\xf2\x81\x93O\xd0\xf1]\x91\x9aE\x0f\x14\xb0\xab\xa4\x9c\xba\xe0\x9eEAa\x83M\x9e\x1d\xd9\xa8;\xcbr\x18\x90*\xccFi\xac\x91\x06\xedU\x1dJ\xc5.#\n\xa0\xab\x83\x90\xd5"\xdev\x8d\x81\xce\xd5L\x92\xdc7\x18\xa6\xa6\xc5I\xe9\xc8\xe9Vi\xed\xb6\xb7\x0b\xd7\xb7\xbd6h\x80\x19\xf6\xac|\x8d-\xb4\x8d\x1bd\x10qV\xebp\x1c\x0f\x9a\x83X6u\x14\xee\xcd\xb6\xdd\xc0\xe17\x04uc\x9e\x9c\x1a\xf6ps\x81\\B.`\x91%ON\xc6\xdc\xbcw\x1e\xf5.\xc6UK\xaby\xa4\xce\x98\xe4Vb\x06p\x01\xceqJh\x84\x88\xe3 jR0N+C\xbe\xba\xb3\xd67C\x1d\xc0\xde\xb13\x01\xf2\x05g\x9e\r\x92\xeb\xf6\xf46\xba\xa4DM\x14\x84\xe1\x86>\x87\xe9R07\xef\x03\x97*Y\xb2\xc4{\x9e\xf5i\x11\xc5=\xcd\x84\xd3"\x0b\xa8\x18\x18g\x07\xd3"wRk\xdb\xfa\x1f\\\xb3\xf1oQ\xb2\xba\x9d#\xb6\xb8\xb4\xb8RH\x19\x8eU$a[$\x95#\x1e\x92v\xce\xd5\x96\xbd\xb7n\x9bk<1\x16\x929##\x07\xf3)\x1d\xc7\xb8=\xebG\xa2\xa3\xa0\xd4m\xe6%C\x80A\xc1S\xd4\x1a\x91\x04\x11\x91^\xb8T\xaf"\xb2a\x83pk\xc3^\x8a\xf0\xd7\xa2\xb9]\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xbc5\xedrh\xa2\xbc\xaf(\xcd\x15\xda\xe52\x9fN\xb0\xb9\x93\xcc\x9a\xd2)\x1f\x18\xdc\xc3\'\x15\x15s\xe1-\x06\xe8\xb6\xfb 7\x0c\x10\xa4\x81V*)\xb9"\x8aQ\x89"G\x1e\xcc\xa0\x8f\xde\x92cC\xca\n\xabY\xf8\'\xc3\x96K2\xae\x9e\xb2\t\x06\x0f\x99\xea\xe3\xe3=+\x8d@\xe9\xfe\x1e\xd2\xd6\xce\xd96G\xce\xd4\xcep;\xf5\xab[\xba\xc6\x8c\xccp\x00\xc9\xacW^\xd5\x86\xa1\xa8\xdd2\xc9\x98\xe2\x1b\x17\xe4\xf7\xaa~\xad\xd4l|?c\xf8\x83\x1cQ\x92|\xb8\x94\x00\xbb\x9d\xcf\x1d\x862ipZ\x89\xee!\x824\x00\xc8\xd8$s\x8e\xf5+\xa4j\xba|\xfa\x8c\xa2r\x13p\x02=\xc3\x00\x9a\x99\xd7\xecg\xba\x81f\xb4\x98\xac\xd0\xf3\x1e\x0f\x06\xb1MF\xf6\xea$\xca`(<du\xa54\xbf\x1e\xde\xd8\x85K\x89@L\xe0o\xe5\x7f^\xa2\xb1\xf6\x9e4\xe9\x1dF\xde\xe2\xca\xe9$E\x94\x91\xe7D4\xeew\xc8\xc1\xceA\xe0\xd6\x9a\x7f\x0f^DVx\n\xb6\x9f\xe4\'\'\x15b\xb7\xb8\xd5\xae5\x9b\x04\xd4\x0c\x84\xef\xc0\x0c1\xc6;R>^\xd7q\x8e\x8c\x7f\xbdIi\xbe }gT\xb0Y\x04~Z\xc9\xbf\xcc\\\x1c/N\xa3\xeb^\xdf\xda\xfd\xd6\xeaU-\xb9w\x1c7\xbek\xcd<Sc\xe5\xd8\xa5\xccW\x93^G\xf8\xe9CM("OR&5g$\xfeR3\xc5X\xf4\xe2Rf\x8d\xe2X\xdb\xcb\x07J\xf1\xb1<S\x15\x8f&\x94\xf2\xe8V,p\xa3\'\xda\x9e \x822\x0c\xd2\xa8\xff\x00ny\xacL\x16\xb7\x17-\x84P\x17;\xbb\x1c(\xfa\x93W^f\x9f\xf09\xa6\xa2\x1d\xdd\x06~\x95\xd2\xd8<\xa3!x\xa7O\xaaB\xb9\xf2Qv\xf4\xc9\xe2\xa3\xa4\xd4\x91\x80Cp\xaa\xbc\xf0:\x7fJ\xb1\x16\x16\xf0\xb8\xd5,\x93\x8c\x1f\xfd\xb1\xa1I\xce\xde\xa6\xe4S\x88f~\x17O\xd7s\xfaW\x92\xe9#\xbb\x0e\xbe\xdd\xbd\xea2\xe3M\xb5\x8d\xb6\xc9 RFx\x19\xa5\xa4\xd4\xf6\xe4@e\x7fr8\x15\x11,\xf7\xf2\xb1>Z\xe0\xd4\x82\xf6\xc8\x00\x8e\xdb\r\xb6u\xc8J\xfe\xc4f\xa6F\xb3\xff\x003\xe0~\x86\xa3\xb5\x1bHa\x86y\x11\xd4\x84RA<v\xaaV\x97\xab\xcc\xd1$w6a\x9f82\x0e\x98\xf7\xc5\\\xee\xac\xae\xae\x94\xac\xad\xe88\xca\x8e\xf8\xa6\x83K\x8e\x01\xf8qR\xad\xee!H\x9d\\+\xb36F3\xe9\xfaT\xc4r\x06\xed\x9a\xab\xea\xb3\\L\x15-\tQ\x8eX\xaf#\xe9T\xd9t\x8b\x8d\xed+\xcd&\xf3\xfc[\x8ekP\x92\x0c\x92\xb1\xc7\x93^G\xe1\xe9n\x0efb\xaa{\x0e\xb5c\x07RKd\xe5P\x1e}\xcd9\xaf\x8c\x9f\xde\xb1\xd7\xb2\xbaG\xdb\x0c\xb2\xee=\x02\x92io\xd8\x1e#\xbc(Z\xe6d\x03\xa6[\x9f\xd0V\xfde\xe1\xfb;u\x1b!P}\xfb\xd4\xcczd#\xff\x00\xa6)2\xf8\xa8F\x7f\x87\n\x92?\x99\x80&\x94.U?\x9d\xb1\xec\t\x15\x83i\x9a\x0e\xb5c)\x91\xe7k\x9d\xdf\x89%\x03\x1f\x969\x15b6Z\x8c\xc9\xb4i\xb1\x0f\x90Ml)\xa7F?\xfab\x9e%\x84c\xf8ET\xcf\xe2C#\xebhSW\xc6\xdf\xb0\xa7?\xd6|\xb0\x00-\xb7\xfd\xc4\xd6\x184\rP\xfe+h\xb0{m?\xf3H\xff\x00\xe9\xfdMI?vV\xecy \xd6\xf9\xf78\xc7\xf0\xd7\re\x19\xfe\x11M\x8f\x12M\x9f\xfd\xb4\xa7\x17\xc4R\x03\xdc\xfd\xeb\x03}\x16\xe4\x8c5\x9c\x80\x0f\xf7\x03\xfaqH\xbe\x88\xf9\xce\xcb\x81\xed\xe9\x07\x1f\xd6\xb7\xd6\xb0\x8c\xff\x00\r"\xdat\x7f\xcbN\xa7\x89\x1f\xfd\x98\xfa\x1f\xf3RS\xc4\x8e;\x1a\xf9\xf9\xb4\x04V\'s\x03\x8e\xa5:\xfdi\x1f\xd8Q\x95#\xcfL\x1e\xe66\xfe\xb5\xf4\x1f\xec\xd4\xceB\x8f\xd0\x1e\xb5\xc1\xd2\xa2=c\x8c\xfdQ\x7f\xe2\xa6\'\x89S\x03T\x92\x03\xf0\xa0\xd3\xe3\xc4\xcc?\xf3\xfe+\xe7\xd3\xa1\xc7\xb0\xa8\xb8\x88\x1cc\x9c\xe0\xf3\xed\x8a]4\tg\n\x91M\x04\x9bF\x00\xdd\xb4\xf3\xf5\xad\xdc\xe8v\xad\xd6\xd6/\xff\x00\x86\xb9\xff\x00\xd3\xda{~+\x14?\xfbIS\xfei\xe5\xf1\x14\x0c@7\x01w\xe5\xd4\xe3\xf6\x14\xb3\xe2\x81\x8d\xc1\xcf\xd0\x7f\x91X\x84\x9e\x1e\xba\x12\xa3\xc8-\xd4\xec\xc7\xaaQ\xd0RRx~a\x872@7\xe4\x16\xf3\x14\x8cu\xad\xb2o\n\xe9o\x92\xb1J\x0f\xc9\x06\xa3\x1f\xc1\xf6\xdc\xe1\x063Kn\xbb\x0c`\x0f\xc4#{\x14\xdf\xfa\x9av?\x12\xa3c2\x01\x8e\xc5O\xf9\xacs\xf6<q\xb2\xaf\xde\xed\x88\r\x90\xa6A\x8e}\xc8\xa5\x13O\xb5\x8c\xed7V\xe3\x8d\xb9\x1b\x88\x00~]ke>\x11\xd3\x16\xdf\x0b\x0c\xa6b9b\xc0 \xfa\x002i\x99\xf0\x8c\x1d\xd6\x9d\x97\xae\xda\xa0\x00\xdc\x07,\xa0\xe5\x7f\x97=\x8f\xcd8\xbe"\x89\xb3\xfcLo\x8d\xc7?5\x92\r:\xd39[\xd8\x14\xe0`\xe1\xf28\xe7\xb7zM\xf4\xdb\x0c\x90\xf7\xaa\xc5\x8f\xa9\x95\x1b\xfc\n\xd7\x0f\x85!\x1d\x12\x91o\x0bD?\x82\x90:\xed\xb9\xc7\xf1\x9c~\x99\xa5\x0e\xba\xa7\x89\x97\xf4\xac\xb5,4\xb0\xde\xad@\x80H-\x88[\xb7N\x00\xa4\x08\xd3\xa2|\x85\xbb\x9b\x00\xa8\xf4*\x8c~f\xb5F\xf0\xbc_\xc9H?\x85\xe3\xfeJZ\xf5\x9bb}R\xc8s\xd8\x90?\xa0\x14\x93\xd6\x1d\xb8\x9c~\x82\xb2\xd7\x93LPJiWL\xc4\xf3\xbaE\x03\xf2\xc04\x82\xdc@\xa1\x97\xf6\x19`}\xe6?\xf1Z\x89\xf0\xd2\x8c\xfa)3\xe1\xc5\x1f\xc1O\xafW\xb3\xc6=G\xea\xed\xfei\xb3\xd4\xa6?\xff\x00P\xdb\xfc\xd6p/\xc2\xa8\x11h0+{\xc8\xec\xff\x00\xd3\x02\x91iu\x19\te\xb4\xb4B{\x08\xb3\xfd\xcdi\x83\xc3\xab\xfc\x94\xe5<>\x83\xf8(\xff\x00W\xb3M\xc4`\x9f\x92[\xfa\x93L\x9b\xc7\xceL\xcd\xfa\xd6[m.\xa1\x03\xee{H$\xe3\xa6\xdd\xbd>\x9d\xe9\xfc7\xed\x1e\x0bi\x1e\xa0A\x05X\x0eGC\xd2\xb5\x04\xf0\xfcG\xf8\x05=\x8f\xc3\xb0\x9c~\xe8~\x95\x1aN\xb7f\xc4\xea\x87$\xed\xb1#\xfaR[\xa8\xb0\x04\x19\xce>\xb5u\xd2\xee\xad\xfcE\xa5\xda^!\xdb\xe6F7\xa1\xe4\xa3\x81\x86S\xf2\rU<E&\x9f\xa4mk\xa6m\xcc\x0e\xd5E\xdc\xccGP?\xefN-tImIh\x1aHI\xeaP\x95\xfe\xd4K\xa1\xa4\xce^`\xd29\xfe\'$\x9f\xebY\xd0,\xe0d\xfe\x1c\x88\x81\x8e\x08$\x12\t\xc8\x1b\xed\xb7\xbdy\xbf\xff\x00J\xd95\xf4\xce\xf7\xf9\xb7v\xcf\x96\xab\x87\x1f\x19\xfe\xf5\x8a\xea\xfa\xa6\xa1\xabL\x9bm|\x9bx\x891\xc7\xb8\xe7\x9e\xa5\x88\xeaM\'\x07\xde\x17\x86\x89\xf1\xf5\xcdm#\xc3\xb6\xdf\xfe\xc8\x0f\xca\xbd\x1e\x1f\x84\x7f\xf4\xc7\xe9W#\xafY\xa4K\x1a@\x15W\x81\x9a\xda\xda\xbd\x8d\x94\x11\xc1o\x84\x8d\x06\x15Ef\x96\x8f \x18\xd9\x9cv<T\xf5\xaf\x94p\xcf\x03~Db\xae#@\x80\x7f\xf4\x85,\xba\x1ck\xd1qQ\x9f\xac\xc4\xe4`pv\x07qN\xb5\xec\x07\xf9\xea\x1e\xd6\x1b9\xc7\x11\xb0?"\x9f\xa6\x9dn\xec\x02H\xbfJ\x98\x83J1\x95#\x90;\x1a\x98\x86\xcc9U\x91#\x07\xb3\x10G\xeb\x8a\xbb\xb5\x82\xda\xfe$\x0c\x11\\\xb0\xdc\x0c\x03\xf1\x90v\xaa\xe9\xaf\x95\t)!#\xebP1h\x87\x8c`\xd3\x85\xd2\\\x1f\xc2*j}\x12\xfa \x92\x07!\x0bd<m\x95\xfaqL\xde\xe3R\xb6\x93j\xb0\x99\x7f\xdc?\xcdv\xf7\xa2[\xdb\x0c\xdcY]D\xa4\x8c2\x9d\\\xfc\x1cT1{$\xe31\\\xc6\xff\x00\xb5!\xfb0\xa8\xe5+\xa5\xb0\x07\xf8E<]h\xa1\xc5\xc5\x99\x03\xddy\x14\xee;\xdd6\xe7\x04J\x14\x9e\xcd\xc5SM\xd2\xece8\xb7\xbd\x01\x86\xde\\\xb9\x8d\xbf\xff\x00je\xa7\xbc]\xda6\xc7\xfb\x97q\xfbTH\xb2\x19\xc6\xda\xe8Y\xff\x00\xb6\xa7|\x84 \x14pG\xc5zc\xc09\x19\xaa\x8b\x8e\x93}\x06\xac\x821\xb8<\x82>\xd4\xd7\xe3\\\xf7\xa8Qk\xf1J\xad\xb0\xe3\x8a\x95X\xe38\xceW\xe7\xadz"\x00\xe3 \xfc\x8a\xab\x92\x0b\xa4\n\xc4\x06Rq\xb1\xfe\xdc\xd2\x1a\xe9\x8ew4\xd1-\xc0\xedO\x12\x01\xedNV\x13\xc7\x1cR\xea\x95yg\x11@\x80\xa6>\xb5\x0eK\x82s\xea\xa6\xcb\x08\xf6\xae\xc4#\xda\x9e\x84\xae\xc2\x13WI\x16\xac\x00\xa4\xe6\xa3\x19\x8f\xbdGy#\xda\xb80\xe7\xb5Ky5\xc9\x86\x96\xf6.W\xf2\xd7\x05\xc7\xcdD\x18\x80\xedI\x98\xaa\\\xc1H\xb4$v\xaa\xe9\xeceP}\x04\nug\xcfz\x88x\x8d"c\xf8\xa9\x83\x18\xa4\x9a\x00j\x82\xe7\xa7\xc8\td\xfd*B\\{\xd4G\x97@\x88\xfb\x8a\x93\xfb\xb7\x19\xeb\\\x1bcQ\xbf\x05w\x80|\xae{f\x9d\x17\x0b\xfe\xea`#\x1e\xf4\xe1\x15A\x14\xe9m\x97\xbd* \x8f\xe9O\'M\xb9c\xb8N\xdb\x13Hy\xd4\xf74\xb4\x18\xc6;T\x9a@\x1b\x9c\x8a\x8bU)\xde\x9d\xc4\xe4\x1ek_\xd3\xa4\x8a0\xb1\xcb\x0e\xae\xdc\xe3\x15]0c\x92\xadNvm5\xd8\x02\x95F\x0c\x06i&\xc8&\xae$\x828\xd4H\x98({{T@\xc4\x9c\x1ek\xde\x95\xc1\xa5\x15\x869\xa4\xdb\x03\xa1\xa8\xd3*\x88\xd5\xc3\x02\x0fc\xc8\xae\x8c\xe7\x18\xa4\xa5Du \x8a\x86\xba\xc2\x8e\x07\xc6jJiB\x83\xcdf\xfe(\xf1e\x96\x93<\x16\xad0\xf3e\xe5\xf0y\x8d?\x98\x8f\x9a\xcb\xdf\xa3^\xca\xb6\xf0\xc5\xaeV\xe7H\xc9\xd2\xbb\x93\xf6\xab+(]\xdc\x00\rOD<\xf9\x9b\x03\x858\xfa\x9a\x9dX\x01\x8f\x18\xea9\xaa\xe6\x8b\xa9\xe9\xfa\x8d\xbcr\xc1s\x1c\x83\x1c2\x90j\xd3\x19e\x1e\xeb\xee*\xee\xce\xc2\xce\x18\x8a\xc2\xe5\xd4\x8c>v`\x7f\xee\x1d\xa9\xfb\xa6\x900\x04i\xd3\xc7\xcdD\x88\x9a&*G\x14\xed%\x92\xdf\x00\x8d\xc9\x91\x95=?/j~\x04ny\xc6iy\x92\x06EP8\xc7_\x9a\xab\x83\xa1\\\xc0\xd3\xdc\xda\xdf\xacM\x19\xccg;\x9f\xfbO\xc7\xbdG{\x80\xfaU\xe3\xc8<\xd2W\xe8\xd7\x16\xbf}\xb2\x99\xbc\xd8\xc0\xdd\x8f\xc4@\xfe\x17\xff\x00\x06\xac\x9e\x14\xd6\x0e\xa3hc\x95\xbf{\x19\xc1\xcfZ\xa7\x94\x9e\xd5\xbc\xc8\x98\xe0\x8e~G\xb1\xaa\xdd\xe6\xba\xfe\x17\xd6\xf4\xadI \x91\xac\xef\xa6\xf2.\x920HI\x0f\xe1a\xed\x9e\x84W\xb3xG\xc5\xb7=Z\xe6\x0b\x1b\xd4\xfc=\xd2G\x87\x8d\xb2R@8t?\xd4Vz\xff\x00\xa5\xc7\x1c2K\x10\xd43\xa8\x11\xc8\xf85\xf4\t\xafi8\xa4\x12\xc5\x1c\x80\x10\x19A\xc1\xeb\xcdv+\xd28\xac\xf8\xde\xbd\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xaf\r\x14W\x95\xc95\xe9\xaeM\x14Pk\xca(\xa2\x8a+\xdc\xd7\x94QEP<g\xab\xea\x11\x04\xb0\xb2\xb5\x95\x9ea\xf8\xd5I\x00Vn4\xeb\x9d;\xca[\xe8\xde1#d\xe7\xa9\x15\xf4)Db\tPH\xefX\xef\x8f/\x03_\x85\xcf\xa6\x18\x89\xc0\xf75\xe6_\xf5\x0f\xa4\xa4\xb6m\xd4\xa5\xbc\x9aI"\x92(\xedm@\x1e^]\x80 \x81\xb9-W\x1d\x01\x0bu(\xf0\x07\xe5b\xcd\xdc\x00*\x85\xaf\xddC;m\x89\x02E\x18\xc2\x0f\x7f\x93Y.\xaf\xa9\x08>\xf2\x91\xdb\x1b\x92\xa8KF\x0e1\xf3WO\x12\xbd\xe6\x99%\x88*\xa2[\xac0F\'0\xa1\xff\x00\xea\xc8\x06x\x1e\xd5\x1f\xe3\xb9\xf4\x8f\x0bi\x91\xc7k\x0c7z\xb9#}\xcb\x82\xae\xdej\xe7z\x81\xd4{\x03\xc5@\xf0\xef\x83\xaeeY\xfa\x97Y\xcd\xba\xa8\xf3<\x9c\x05\xc0\xed\x91\x8d\xbe\x05j\xaez\xb41\x1b{kO\xe3I#iR7\x1brsP?dW\xfa\x8akZ\xf8\x96eX\'\xd3\x9b\xcb\xb5\xe4\xb2\x92\xcb\x86\xf8\xad\xeei\xde\xde\x19\xe1\x99U\xe5`\xa6I\x19\xbf\xd3\x03\x9d\xb9\xe9\xf55\xf1\x7f\x84\xbcs7\x845\xf6\xbd6\xbfz\x96\xe0y2+6\xd3\x96a\xcfC\xd3\xb0\xab\x0f\xda\x87\x8enu\xbb\xd4\xd3-|\xdbx`#\xcdD\x93\x89U\x86w\xb0\x1dOlWz\xa7\x87/\xba\xfd\xc2~\r\x16\xda\x08m\xccM+\xe0\xa9\x0eNB\xaf%\x88<\x9cc\x15\xc9\x17\xf0\xf3\rc[J\xc1\xb6\xecW\x1c\x9fa[v\xab\xe3\xbd\x0bN\x86\xfc\xc7v\xd7\xb2Z&\xf9\xa2\xb4\xf5l\x19\xc7\xa9\xba\x0e~k\x0b\xd4\xfe\xden\xf7L\xba~\x83\x10\x0b\x9c\xbc\xd2\x17o\xc8.\x05f\x16W\x1a\x94\xb0j\x16V*\x14\xcb\x19\x13\xb36\x10\x0e\xb8=\x87\xc5Wmt-F{\x91\x13BT\x027\xc8\xc4\x85\x00\x9e\xc7\xbd?\xd3<\x17\xd0zp\x8c\xb9{\x99\xb4\x1d^i\x00g\xfe\xd5\x1d\xa9\xd3%\xc9\xd4B\xe0j\xc0 \x7fZ\xde\xf4\x1f\xb6+\rNE\x83QI,\xe4$\x00\xe4\xe62~\xbd\xabl\xd2\xddn\xc2:\xb0da\x90A\xc8 \xd7\xc6\xe7\xc2\x1fsc%\xca4\x86A\x94^@+\x9e\xab\xff\x00z\xd1<\x19\xe3{\xcf\r\xc9\x1c\x17Q\xbbXn\xdb\x82r\xf1\xfc\x8f\x8f\x8a\xa2\xf1\x07\x86-\x9a9\x1f\xa5+\x07Q\xea\x88\xf1\xff\x00\xeaN\xf5m\x05\xcc\xf1\xa6\'U\xdf\xf2\xb0\xe7\xef\x8a\xfa\xde\xde\x10#\xd88\x04\xe4\x8fzpm\xd4\x7f\rEh\x9a\xbd\x86\xado\x0c\xf6\xd7q\xbcr\x80R@}\'\xeb\xedVG\xb7\xb8\x8dC<Gi\xe8\xc3\x90~\x84W\x93\xcbm\x7f\xfcF0JV3\xa5\xce\t\xd1\xf0}\xbe\xf4\xdb\xcd\x87\x00\xb0\x04\xfe\xf5\x14\xd0)\xedQ\xd7\x16\xcaG\'\x1f\xde\xac^K\xb8\x18S\xcf\xc5t\xdal\xca\xa1\xcc\x0e\x01 n*z\x9an/\xc4n\xcb\x14\x84(\xc9!I\xc0\xf74\xb1r\x89\x80\xce\x01<UV\x0b@\x1b+\x18Q\xeez\x9a\x93Kpz\x8a\x95\xfb\xa1F\xc3\x82\x18v#\x14\xba\xc0\x07Jjk\x96\xd4C\x02\x08\xd8\x83\xc8\xa1\xaeW\x1b\x1c\xd3\x14\x84\x0cqN\x16/\x8ar#\xc5(\x12\xa24\xa4\xf7\xa8\xed1=\xe9%\x8e\xbb\xdb\x8aP-{\xb6\x99-\x9e\xf4\xc9l\xd28\xaf6\x8a[o\xc5z\x16\xbb\xab\x15\xcdT\xdff{W\x9e_\xc5:\t]\x84\xf8\xa09<\x02h2\xe3\xbd3\xf2\xab\xdf({S\xd1\x11\xae\xbc\xa3K\t;q\x1b~\x94\x9f;\xe6\x99yc\xda\xbd\xf2\xc7\xb5<\xf2\x8f\x14yF\xbaa\xb8\x1f\xfd\xb3\\\xf3~i\x9e\xc1^\x18\xc7\xb5<X\x9d\xce\x15r}\xbe\x95\xc1CH)2\xaa\xb3F\xc1I \x1clH\xe4\x03\xf7\xa0K\xbe5SO({W\x06\x11\xedOv\xd1\xb3\xe2\x92$4\xbf4\xfb\xd3\x03\x00=\xa9#n\xbe\xd5\'\xb2\xbc\xd9\xf1J\x13\x11\xde\x96\'#\xbdD\x9bu\xf6\xa4\x9a\xd5O\xf0\xd4\xc9\x8f\xe2\xb81\xf3\xd2\x9c\x13\x9fzqn[\xde\xa0\x9e\xd1OjD\xd9\x83\xda\xac&0{W\x06 :S\xabr\xde\xf4\xf2\xdd\xb8\xeej\x03\xeec\xda\xbb[1\xedS;@\xea+\xd1\x18\xf6\xa5~!\xfd\xe9F\xed\xcfz\x8dK@;S\xb8\xa0\xdax\x14\xf9"\xdd\x8c\n\x90\x86\xd3\xa1$\x0c\xf4\xa9\x16p\xde]\xca\xbeJ\xb6\xdf\xcd\xd8TI\xae\xf0\x0e\xa3L\x16<\x8f\xc3\x8a\xe4\xda\xee\xe7\x15k\xb6\xd2ZL3\x15\x08{\x8esN\xe4\xb4\xb0\xb6]\xcc\xe7#\xa0\xe3$\xfd+{\x17\x83\xfa\xb5\xd5\xa8\x9a\xed\xd2\x18\x80\xc9iX.\xde\xe0U[u4W\xd2\x99c\xec7\xaa1\xb4#\xb5s\xf7o\x8a\xb1K\xb5\xd8m\x00\xe7\x93\x81\xd2\xb8\xf2\x0f\xf2\xd50\xf0\xd3J\xe4B\xc5\xd4\x1d\x98n\x0f\xe9\x9a\x92/\x1b\x03;T\x1a\xdb\xe3\xa0\xa7\xb0\xc1\x19\xc7\x98\x87\xf2\xa9/!\x87\xf0\x0f\xd4W^S\x8f\xe1\xfe\xb5\x7fc\xe1\xc9\xad\xd9K#0\x1f\xcaS#\xf7\xa6\xde\xebP\xfc\xd8\xf9\xcd3\xfb\x94D\xf0H\x1f"\x9c\xc7i\x16F\xe6\xc0\xf7\xc6iuG\x1d\xab\xdd\x8f\xed\xfdEh\xad\xbaZD\xda\x96\xcfrw\x18`\rFi\x9c\xed\xe6\xfe\xe2\x88\xc7\x90O\x96r\x0f\x04\x11\xc1\x1f"\x99\xdcX\xdaNK\x01\xe57\xcf+\xfa\xf6\xa7,\x18u*?:A\xe4P2\xd2\xa2\x8f\xaej\xdc)\xf2\xbc\xa9\xa1S\x109\x0b&\xc0}\t\xc1\x14\x85fV,\x92\x10\xc4r\xbc\x9f\xaf\xbdEM\xa4\\\x00J\xc5\xe6\x01\xddHaU\x8b\xfb\x10\x03\x02\xbbH\xed\x8ejsQ\xf1\x97\x87\xfc<\x8f5\xd6\xb5o\x0e\x06\x08.\t?\x90\xc9\xac\x97\\\xfbr\xf0\xf3J\x86\xca\xd6[\xb6rUe\xf2\xf6F1\xee[\x9f\xe9Q.:WE\xba\x83\x11H\xe6BwE\x02E\x1f\xfe\xcb\x8c}\xeau\xac\xfdK\xcd\xf5D4cf9S\xfa\x1a\x98\x92]V\xd1\xcf\xdd\x9aN\x9c\x11\x9cR3}\xa0I\xa1\xc7\xbbW\x92\xd4F;\x99\x02\xbf\xe4+\x14\xd7~\xd2<S\xaa\x86Dx\xec\xe1f \x88\x08\xde\x17\xdfs\x7f\x8a\xcc/,n\xb5+\xa7y\xa5\x96\xe2L\x02X\x92\xe7\x8e:\xfd*\xae\x0f\x0c\xc0\x8f\xb5\xf3*r@\x03q\xed\xcd_0i\x13\x12[\xa9j\xfb+B\xfbO\xf0g\x88$Xm\xb5t\x8ebp#\x9b\xf7D\x9f\xf6\x96\xe0\xfeF\xb4x\xa4\r\xc8#\xb1\x15\xf9\xee\x9e\x19k$\xd5\xfe\xf2\xa4MnT\xac\r\x94e\\d\xb9\x1dN:b\xaf>\x14\xf1\xc7\x8a\xfc=\x142Y\xea\tuf\\(\xb5\xb9\xdcS\x1e\xd1\x93\xea\\`\xf4\xa6z\x87\x83\x80s%\xa3\xb9\x07\xf9\x1dw\xdb\x9c\x11\xed\xf4\xaa\xd7\x88\x1c\x80WW\xb6k\xed\xd8\xa6\xdaFG\xebR\x91G\x14\xea\x02\xfa\\\x9f\xcb\x15\x8a\xf8g\xed_\xc3\xba\xe2\xacw\xa1\xf4\xb9\xf7\x05\xfd\xf70\x16=1/A\x9e\xdb\xb1Z\xd42aU\x91\xb2\xa4d\x10r\x08=\xc5W\xdaY\xddYHR\xe6\xdcK\x0e\xe0\xe4n>\x9e\xdfZ\xac\xb9\x85\x97\xb1F\xa9\x96\xb1\x919\xc6G\xc5$c#\xb5\'\x1d\xe4\x83\x1e\xb3O\x16\xe9\\a\x805x\xb0\xf4\x99s\xe4\xb3\xc0q\xf9_q\xfa\xd5i\xf3\xd3\xf3\x00\xdf"\x9a\xed5\xc1V\xa7D\xabt\xa3\x02\xa3\xb5\xa0\xc9\xf5d{\x8a\xe8r;SR\x8ci6\x8d\xbd\xa9\xf6\xd1\xed@\x1f\x14\x93f\x18`\xea\xde\x94%"\xa2\xda\x16\xfeZD\xc6s\xd2\xa6\xf6|RL\x83\xda\xa1O\xd2P\x0c\x91\xfa\x8aqn\x0f\x18\xa8\xc5O\x8a\xec\xc7\xf1K8\x0b\xc8\xa6\xe6F\xcfZ\xa9\x9d\xa0\xb7\xc2\x11\xbd:\x0b6\xe2\x92h\x9b\xb5#\xe5\xbez\x1f\xd2\x9dn\xcfz\xf43\x0e\x86\xaa\xdcB\xed\xf9\x9c\x0fq\xbd:\x1d\x87\xb1\xa6\xc1\x1a\xbc\xf5\xaf#4\xec\xc8q\x82\xa2\x80\xa4\xf3\x8a\xef\x90\x8c\xc0C3\x12=\x86\x08\xa3Y\xee\x05\'\x1c\xe0u8\xa7"\\\x8e\r#$a\x97\x04})\xb0\x0c\xa7\x83O=\xe5\xc5\xa1\x11\xb1\xd4\xa4l\xc3cI\xd0\x8f\xb8\xd8\xfbS\xdd\xd9\xa4\xa4|\x0e\xb4\x97\x99\x81\xea\xa8\xbb\xdb\xe8\xad\xe1\x96id\t\x1cjY\x99\xba\x00;\xd4;\x8b\xe4\x0b\xb1%\x9be\x03\x92~\x94\xb8\xe0.\xc0\x01Q>&\xd7\xe0\xd0\xf4\xe9\xee\xe5\xf5\x11\xe9\x8a1\xd6I\x0f\xe1Q_\'\xfe\xd4\xbd\xd45\xcb\xa9o\x97\xcc\xb9\xb9\x94\x90\xacp2F\x00\xc8?\x84t\xc5h\x1a\xf6\xb7\xa9k\xba\x9d\xc4\xa8\xb1}\xda5Ao\x14\x8e\x17\xcbBr\'\r\xc8$\xf7\x1dj\xab\x16\x9b\x0e\xa1\x7f3\xa4\xc1Li\x81\x81\x96f\xc7\xfa\x99<g=F+\xd3|3\xe1v\xe9\xd6\xa9yp\xc3\xf1\xd7\x0c\x0b\xc6\xc0a#\xcf\xe4\xdf\xbf\xbdj\xba|i\x00et\x18e\xdd\xbb\x83J\xc3q\xaa[\x9bq\x06\xa0\xd6\xe65"\x11o\x19 \x9c\x9fK\x9e\xb8\x07\xb9\xab\x96\x95\xf6\xc56\x97<vZ\xcd\xa7\x99\xe8\x05n 9\xdc:z\x94\xf7\xfaVk\x7f\xa8%\xa1\x969Ze\xb8\x87\x82va_?\xc4\x08\xe3\x06\x9c\xe9\xd6ZK\xda-\xf3\xc6\xe6I\x00\xda\x8e\x14\x9e=A\xa3\x1d~\xa3\xa1\xadwV\xf0\xefL\xea\x89\x13\xb2\x85\x9c\x90\x16d\xcaH\xa0\x0c\x10\xc5y\x02\xa3\xcbo\x89\\4yNq\x9d\x8e}\xab\xe9[\x0f\xb4/\n\xea*\xa7\xf6\x8aD\xc7\xf8e\x063\xff\x00\xfdU\xb2\x1b\xab{\x94\x0fmt\x92\xa9\xe9\x86\x0c?\xa5|u&\xb2\xeb.\xdb\xad=\x1e5\xc93\xf4R?\x87\x8e\xd8\xe8jWO\xd5\xe1\xbaEK\x08\xa70`\x8b\xb6\x82M\x866<\xa9R\x08\xc0\xac-\xcf\x84\xa6Yf\x8e\x1e\xa0\x1bF2e]/\x82q\xca\xd7_\xa4)Udf\x19\xed\xb3\x0f\xed__[\xde4/\x89\xa1\xdc\x87\xf3\xa4u\x9d\x1e\xcf[\xd3\xaf!\xb5\x9bc\xc9\x1eB\xf4!\xd7\x95a\xf2\x08\xcd|\xc4\xbe \xd5 *\x0e\xab|\x9b\x00\n\xab!l\x01\xef\x9e\xa6\xad\xba^\xb1\xaaX\x18\xae\xa4\xd5\xde\xe5f\xf5\xc6\xca\xe4\xe1\x08\xe4\x10{\xff\x00j\xb9\xe8\x1d\x07\xac\xc2\xd0\x0b\x8b\x8b)!IC#\xb1"h\xceq\x94`\x07\xe9Tw\xf6\x1eN\xa2\xa5\x8b\x15>\x95\\\xab\x003\xb85\xf5\x1f\x84uV\xd5tKG\x95\x87\xdebO*\xe5z\x15\x95=,\x08\xfa\x8a\xb3\n\xa3\xf8\x0e\xc8Z\xe9\x06w\x97\xcd\x9a\xf2F\x9aY\t\xcb\x12\xde\xf8\xf6\x1cU\xdf5\xeb-\xab>\xa03\x81\x9cq\x9e\xf5\xe7\x84*\xb3\x859P\xc4/\xd0\x1d\xab\xaa+\x9c\xd7\xb9\x14\x9a+\xda(\xcd\x14QE\x14QE\x14QE\x14QE\x14QE\x14Q^d{\xd1\xb8{\xd1E{EpdQ\xde\xb9\xf3V\x8cQ\x9aV\x8aD\xcc+\x838\xf7\xae\xe2\xb9\x9asE23\x8fz+\xbaMsU=\xa2\x8a)4\xaa(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a(\xa2\xb9\xafI\xaeI\xa2\x8a\rrh\xc8\xa0\x9a(\xaf(\xa34f\x8a(\xaf(\xc8\xaeK\x00\t\'\x18\xa2\x8a\xa3x\xc7\xc7\xbaW\x84`\x94\xdc:\x99\x96=\xe1\t\xc6s\xc0\x1e\xf9&\xber\xf1|w\xde\'a\xe2k\xf9\xaet\xfb\x0b\x18\xe0\x9eX\x83m\x0c_\x04D\x9f\xcc\xc7\xde\xb4\x0f\x12\xda\xe8~*\xd6\xeec\x8fR\xb73\xab\xb6\xe06\xbb\xc6\x91\x1c\x923\xd0\x93\xc5c~4\xf1\x8f\x87\xad\xf4\xd8\xf4\xfb\x0b\xa7\xbd\xb4\xb4p\xd2C7\xa4<\xa7;\x88\x1f\x07\x9c\xd5e\xf2C ?\x88\x11\x98\xd0\xe6<\xff\x00\xbcm\x9a\xd2\xf4kf\x91\xa3\x16\xeb\'\x9c\xdf\xfb\xad\x8d\x82\x1e\xc3\xb6\xf5K\xfbM\xf1\xd4w7\x96\xb7\x9aM\xf9\x8b\xcd\x83\xc9\x9dU\x8e\xf21\xf8[>\xdd3UM\x7f\xc7z\x96\xa9m\xa6\xdb\xdf\xdd4\xed\x08\x8c,\x91\xa8\xf5"\xaf\xa7su$Vq\xa9L\x9a\xae\xa14\xfb\x02F8\x00{\x0e\x9fZua%\xed\xe2Z\xd8G\x05\xbb"6\x11\xc8\n\xdb\x8f>\xa6\xefU\xb7\x13\xbd\xc9\xb9\xc37\xf1P\x06E\'\x07\x1cV\xc2>\x97mc\x15\xbe#Vd9V8$g\xe6\x99jF\xed\xb5O\xbc\xab\xfa2\x19G\xf1\x02*\xddae\xa8x\x86\xeeK\x85\xb3y\xa2U\x12L\xff\x00\xc8Uq\x92G^;V\x87\xe1_\xb3\x99u\x1d/N\xbf\xbb\xb3y\x96}D\x99<\xb7\x00\xad\xb4$,\x8cA\xe89\xe0\xf4\xad\xb6\x0b}?\xc1ZV\xa3>\x9d\xa4\xc9\x1c7\x8a\x92\x8b\x087J\xf1\xc1\x92\x16\xe2w\xed\xe6p1\xc0\xdbS:m\x85\xd1T\xf3\x0f\x95\x08\x8c\x12q\xc8\xc1\xc6\xdf\xd6\xa8\xfa\x9fQ\x867\t\x08\xf3e/\xa4\x0c\x8d\x8epA=\xab\xe6\xed\xad\xa5\xe9\xd7\xb6\xb6\xf1[\x0f.\xec0\x92fU\x9f\x05A9\x19<\x1f\xce\xa2\xe7\xb5h\x0e\x9fy%\xbf\x91\x1d\xc3\x16\x08d\xdd\xbb\xe4\x0cp9\xe2\xa5\xae\xfc/s}\xa8=\xc4\xae"\xb5\x17\x18\x9aR\xa4\x0f0z\xb6\xed\xc99=~\x94\xce\x1dZ\xde\xfa\xe6\xea\xda\xd2\x08\xa0\xb7\x0e\xd1\xe6oQ\xdb\x93\x92\xbf\xcb\xd3\x809\xaai\x96T\xd8\xc4\xe5\x8b\xe1u`.\xc7\xf3o\xbf\x1cU\xec\x05<\xb2<\xc0\x0f|o\xbe8\xda\xba\xb9\xba[\xa5\x82+\x92\xf1\xbazd\x8b\x80\nv\xc6:\x1a\\\xe9\x9aL\xab\x02-\xfc\xea\xcc\xa3\xf7l7\xe0\x9f\xf7\nB\xce\xc6\x01\x1c\xd2\xbc\xac\x81\x7f\n*na\xdf\'\xd8}i\xee\x90\xd6\xfa\x84L\xee\xeb\x04\x90I\xb6E\x00\x97\xca\xf3\x9c{Ue\xc3]e\xb4C\xf9\xc69\xc1\xf8\xcf\x14\xe8\x8fP\x05\x8f\x15\x1b?\x88\xb5\x1f\xb3\xedF3\xa7\xdd\x03\x1c\x982B\xff\x00\xe9\xb8\xf7\xc7c\xf3_Dx\'\xed\x86\xc3Q\x86(\xcd\xe7\xdc&~<\x99X\x18\xc9\xff\x00k\x1e+\xe7o\x10XY\xea\x0c\x86ks(\x9d\xb8\x9d\xf2\x08\x00\xff\x00\x0f\xb0\x1d\xea\x12k\x87\xd2\xb7Y\xe1\x1e\x1c\x0cn@r=\xf21U\xad\xd2,\xfa\x84I1\x92\xe2\xd6\xf9\x14\x8f\xc5A\xe9c\xed\x9c\x11\x91\xf5\xa8\xd7\x11\xb8V>\\r\xc5\xddN\xf5\xf7\xfax\x9a\xfc\xa0d\x9e2\x0f!\xc2\xa9\xeb\xf3Mg\xf1\x1d\xeb\xeeI\xee\xcb\xc7 \xc1\xdd\xce\xd2\x0eA\x1e\xc6\xbe(mKU\xd2#2\xdaj\xd7\x10*\xb0\x11\x88\xa5\xdc\xa0\x91\x9c\x15\xe4\x1ao\'\x88|I\xe4\xc5-\xdf\x88\xb5\x19D\x92m1G&\xcc|>\x06ERM\xe1o\x12H\xc6/\xfe\xa3\x9ah\x8a\x95\xd2^L\x90F\x0eW$q\xefQT\xd8/\xa8\xda\xa2\x9c\x8d\xf4\x8e~\r}\xd5\x0f\x88?h1\x8a\xe9\xd6FS\xe9\x90\x0fP\xff\x00\x9av\x18\x03\xc1\x04v5\xf9\xf3\x07\x8a\xb5\x9b}ON]7Zt\x99$\xc1\x90J\xce\x8a\xeb\xc9\x8f\r\xf8\xf8\xe3\xd8\xd7\xd5^\x0b\xfbG\xb3\xd6\xda=>\xfc\xc7m\xa8\xf4\x0b\x9cG1\x1dLD\xf3\x9f\x83\xcdf\xbcW\xe1\x0e\xbbk\x02\xdf\\\x16\xbb\x00\x7f\x12\\\x13*\x81\xdd\xf9\xc8\xf9\xe4R\xa0{Y\xb2\xb0)U\x1c\x0c`\x1f\xa5l \x8a\xf6\x9a$\x9d0x\xa7*\xd5\xe6l\xa5iL\x85k\xba1\xf3FiE u\\\xd7\x14\x06`\x0b\x05\x1e\xe7?\xda\x9b?J\xf1U\xb6\x93\xd0{\xd7\xa1s]\xe4\xb63\xd2\x94P*j\xda\xac\xa5tj\xd2\x17\x96\xe4\x9f\xec)\xb2\xc4f\xb9T\xa7\x0b\x18\xaf\x14R\xb9\xc8\x03\xda\xae\xac\xecb@u\xae\xe0m\xf2i\x86b{\xd7\x9b@\xaf0=\xab\xba\xf2\xac<\xa4\x03\x01\x00\xa4f\xb8\xc5xE)\x8a\xf3\x14\x86\x88{Ws^\xc0L,\xd2l\x0c0F\t\xa46u\xa5\xd5K0\x00rx\xc5z\xcaT\x95#\x04\x1eErKv\x96\xd6\x14(\xdeLn\xd8\xdbmo\xb9\xdf\x1d\xc0\x1b\x1a\xe0`\x18\x9e\xe4\x0f\xd0S\x7f/\xe2\xba\x11\xd2\xe0W@Tt\xe9\x91\x926\xdf\xe9]2\x1am\xe4\x8e\xf5\xe1\x84T\xa4v\x92J20)\xe2i\x83\xf8\xdc\xfeUum\xe0\xdb\xdb\xd0\xa6+/I\x19\x0c\xd8Q\xfb\xd3\rv\x91\xf2\xfb\xfbUm\xa2\xa4\xbc\xa6\'\xa5X\xaet\xf6\x8b\xd4\xa7r\xf7\xf7\x14\xc0\x84\x18\xc0\xedU\xd7\xbe\x14\x96\xcef\x8e\xe1|\x96\\m\xd9\x81\xee\x0fzz;\xa0\xea\n\x9c\xd4Y\x89\x87jH\xc6A\xe9RlT\xd2L\x07j\xaan\x8c\xb9!$c\xf6\xcdHY[\xda\xa3\xfc\xa6?\xc3K P\xb8\xdb\xcf\xb59\x039\x19<\xf5\xc0\xa0El\xa72\xcc\xc0\x0e\xd9\x00\xd5\xa5\x97B\x95\x182\xb2\x00F\x18\xca\xca\x00\x15\xd3.F\x0e~\x00\xe6\xb8P\xa0s\x81\xedN\xa3\xcb\xf0\x8a\\\xfcT6\xa1\xe2?\x0fh\xf1\x19.nm\xe2\x1f\xcd3\x81\xfaf\xb3\x9d[\xed\x9fJ\x89]4\xe8\'\xbc*2\n/\x97\x1f\xff\x00\xc4\xf8\xfe\x82\xb4\xd6\x96Vql\x935\xc9\x03\x18\xb6B\xc3?.\xd8Q\xf7\xae\xa5\xad\xd5\xc7\xe4\x81\x87\xcbm[[Iw\x1cAd\x9dcO\xe5S\xcf?J\xaf\xeaZ\xe6\x91\xa4\xc6\xd2\xde\xdf\xc5\x12\x8f\xe2\x91\xc2\xe7\xe9\x9a\xf9W_\xfbN\xf1\xa6\xa5\x94\x8ex\xf4\xc4bF#R\xf2c\xe5\xdb\xa7\xe8*\xaet]J\xf9\x8d\xcd\xc5\xe5\xd5\xc4\xaa2\xf2J\xdb\x99\x81\xe9\xb47o\x9e\x95v\xf6Ww-\x1a?\xf0p\xa3H\x95\x9ay\x00\xc7\xb6\xca\xbfl\xd4\xebn\x8d\x80^I\x14\x0c\xef\xa0\x01_K\\\xfd\xadxb\x16\xfd\xd5\xc4\xb2)8\x0e\x90\xb9S\xf4$\n\x87\xba\xfba\xd2bR\xc2\xda\xfd\x86p1\x10P\x7f2\xd5\x8a[\xd8\x89\x88]\xea\xe0zc\xe7af\x003\x02\xa7%Ts\xea\xe8M\'\xe2\t\xec\xac\x9a\x08m\xef-\xee& \xbc\xc5\x08h\xe1\xf6PG\xa4\x93\xcfN\x95*O\t\xc8b3\xc9\xd4\xa71)\x00\x930\\\x9e\xfaB\x81\x9f\xb5K[K\x14`\x826.F@#?\xaf\xb5iS\xfd\xbcY\xab\xec\x8bK\xb9s\xfe\xe9\x11\x7f\xb04\x83\xfd\xb9\xdd\xecfM\x08\x90;\xb4\xc7\xfc-cVZLW\x17\xe9\x11\xb4g\x92E\x0e\xb1\x81\x8d\xaaF\xe0\xd8\xe4\xed#\xbd^W\xc0\x97\xd7\x02\xdbe\xba\xacL\x87\xf7\xcc\xa4\xa09#\xaf\xfc\xd7S\xc3\xf0k\xd1\x1cW\xae\xc0\x02\xd9\x9aQ\xb1\xff\x00\xf6\x14\xb3\x15\x8cj\x0c\xa8\x8b\x9e3S\xa3\xed\xdbZ\x97!4H\x10\x03\x8fT\x8e\x7f\xc0\xa4\xe6\xfb]\xf1\x84\xe8\x1a\x0b{\x18\xc3\x03\xfc,\xc4c\xdf-JC\xe1\x85\xb1\x81\xd4X\xfd\xf69\x11Ig\x8b([\xbf\x07\'\xf3\x06\x9aE\xe1I\x98\xc4\xabdIv\x061\xd0\x85\xf6\x18\x07\xad75\x94\x11H\xb1\xad\xbc\xec\xc7l\x17\x91\xc7\xc6\x0eNs\xf1N\xc7\x05\x89Fm\x11\x80\x07\'\x1f\xdf\x8a\x89\xbd\xfbA\xf1\xec\xed\x1a\x9dqB\xc8\x01"\xd2\x10\n\x83\xd8\x96\x19\xc8\xaa\xad\xfe\xa9\xe2+\x9b\xb8V}gQ\xba&B\xbe\xa9N\xd2q\x90\x02\x82\x01>\xf5\xb9?\x85\x9bB\x06\xfeM>\xd0\x989{Eb\xe5\xf3\xc8\x04I\x92\x00\xc7\'\xbfj\xa4K\xe1\xedWU\x9e\xd2\xfa\xed`\x84\xea7.C!\xf5\xc2Q\xc1#\x1c\xfa\x8er3\xd8U\xff\x00\xfaL\x16\xeac6\x91\xfe!\xb7\x08\xab\xf9S8\xd4I\xdfrqU\xc9426\xa8\x88\x10\x8d\xb5\xfb\xb0\x19\xc0\xc7\xc0\xcdgw\xde7\xd4t\xe9\xed>\xef\x1cj"\x8dZ\xe8\xe2=\xcc\t\xc6\xd0\x1c\x1c\xf3\xd4b\xba\xbe\x97P\xd6\xee\xe1\x12\xdb*e"\x96h\xe2\x8dc\xf5\x05\xca\xee*\x07\x01Nj\xb9\xaa\xe81\xcbv\xd3\xc8\xeevL\xd8\r\x82\xdds\x96\xab=\x9d\x9d\xfc\x96S\xdfyc\x07\x1bd\xdd\xb4\x80\xbc\x00\xa3\xfe9\xa6\xcc\xd0\xda\xd9Eo\x03\x15\xc31a\x9d\x98\x9c\xe7\xfe*zB\xd2K\xad\xa3\x1c\x0cm\xb8\x15l\x83G\xb0\xb9\xd3\xeeg\x8bN\x95V\xd5\xc1/$\xa1\x92@\xa3\xd5\xd0g<\xf5\x1ct\xe2\x97\xd2b\xbc\xb0\xb3\xbc\xbb\xb4Yl\xc43\xaci4E\x97+*\x82\xd1\xb6\xe5\x05\xf8\xc1\xc05\\\x8a\xda\x08\xec\xbc\xdb\x92\xd2L\xe7\xcb\x1b\x1b\xd3\xe6\xa9\x1b\x81\xfea\xb7\xae:\x1cR\xd3\xda]-\xa2]\xc1t\xc8\x8b(_ \xcaN}9\x0cP\xf2W\x04\x80i\xa7\xb8`T\xaa\xb4r\x08N\x96L\x02\x08\xc9\r\xb0\x18\xa9\xad\x08\xc1\x0e\x03!}\xc1\xc9\xc8\xf6\xa7\x17\x91G\xa8\xc8e\xba\x85ndc\xfb\xc7\x94\x9d\xcc@\xc6I\xeb\xcfzzt\x15\x85\xed\xbc\xbbe\x85bpC#\xb60O\xe2U\xe0\x8c\xff\x00Z\x95\xb7\xb6\xb7\x82;dy\xed\xa4\x86\xe0\xff\x00\xfa\xb2\xce\xaa\xa9\x8e\x1b\xb8\xe0\x82\n\xe3vx\xaf`\xf1<ZzO$\n\xf2\xed;s"\xe6<\xb7 \x1c\xf4\'\xb6**O}\x04\xab\xe79}|\xb6rW\x1b\xef\xef\xf6\xa5Ik\x04\xa8DH6\x1bv\xcfaPw\x9ae\xfd\xa5\x94\x92_\xe9\xb7SG\xb5\xfe\xef,\xa1\x15\x8f>\x86\xdc\xd9\'\x81\xca\x9c\x83\xda\x9fxC\xc6\x1a\xdf\x87\xed\xc4iw+D\xae\x7f\xe9\xb0\x1a5\x07\xd8\x1eG\xe5\xc5T\xf5\xbf\x15\xdej\x97j\xd7\x0e\x00h\xf3\x1chI\xc7\xbf^8\xe9\x9e\x94\xf3H\xd1\xae\xaf\xde\xdf\xee\xa9!\x96X\xdeTE.\xc5Hl\x0c\x86\x04\x9c\xe3\x903S\x9e;\xdb\xf9UR"\xc50C \x1a\x8e\xf8\xde\xa2\x8b{{x\x88\x98\xaf\xa8n\x1b\x81\xfa\xd7\xd2\xbe\x1a\xfbF\xb2\xd6\xc1\x8eh|\xb9B\x86\x1b2C\x03\xf0y\x075v\xd3\xbcC\xa3\xea\x83\xfe\x8fR\x82R\tV@\xc0:\x91\xc1\x05N\x08#\xd8\x8a\xf9S\xc9\x8e\xc2D1\xab\xc78u2\x97\x8f\xcb\xca(\xf5\x15\xc1#9\xe0\x80~\xb51\xaeZ\xea\xb7\xda\xb5\xbe\xa7q\xa6\xc7s\xa6\xc2\xb1!\xbb\x8a<<\x83qUgb}L\x0f\r\x83\xd3\xa5I\x9b\xa2\xc6\xd6\xe4\xcblV\xe27\x02V\xe0i;\x968\x1bi\x1d\xea\x9e[\x08\x1eU1\xc8\x02H\x0e\x9f\xaf`3\x8c\xe7\xda\xbe\xae\x0e\xddA\xae\xc4\xcf_ \xd8k\xfa\xfd\xa4\xb7\xcfi\xae]\xc5\x14lJ@ev\n\xa0\x9e\x9b\xf3\x90>y\xab%\x87\x8a~\xd2\'\xfd\xa7\x1d\xb6\xaf\x13\xbd\xa2D\xef\x14\xf1#\x1c9\x03\x82\x06\t\x1b\x81 \x9e\x95M\x15\x95\xbc\xb22@nN3\x82\x8b\xa9N2v$\x8fjD\xdd\x0eh\xd41\x9a\x0c\x1c~bT\xeeq\xec}\xeb\xe9\xa6\xb9`:SV\xd4\x02\x13\xea\xc5|\xed\'\xda\x07\x8e\xac\xfe\xef\r\xd3i\xb2\xcf2\x07U\x8a2\xc4\x83\x90\x06\x14\xf5\xe3\xa5p\xbfh\xbe+3\xdb\xc5s\xe1\x88\xd8\xccp\x9c\xb4A\xb1\xd7\xd4K\x0e1\xcf\xb7z\xaf\xbe\xe9\xfdQ\xc4\x82\xc8\xcb\xad\x08\x07\xccB\x00\xcf\x19\xc6i)\xd1\xddt\xeb1\x1c\x8d\xb4\xb6s\x8f\xae+\xe8\xd5\xd5\x87@\xe2\x95]N3\xc3\x159\xaf\x9f`\xfbR\xb2Yd\x86\xefB\xb8Ic\xe5\xd2\t\x96R\x17\xf9\xb1\xc7\x1f"\xa7m\xbe\xd2\xfc\x1d89\xbf\x9e\xdc\x85\xc9\x13B\xc0\x01\xd7\xa8\xcdg\xe5>.\xb6\x19\xd2\x93i\xc8\xc0\x0c~1\xb8\x14\x97\xe9H\xa4\x8f-\x87\xe9\xfd\xabl{\xdbY\x90"\x8d\xa4w\xf7\xa6\xa6\x1d\xdc\xa3\x06\xfaVwa\xe2\xef\x0f_\xb0[]r\xcaV=\x14L\xa1\xbfF\xc1\xabL7\x84\x00\xca\xdcv#\xa7\xea+?w\xd7%\xb8\x94\x0e\xa9\xd3\x8cl\x00]Q\x82\x84\x01\xf0v\xa6\r\x83B=\x04\xfd\xeaX\xa3\xa1\xe4\x11\\\xef\xc5u\x0e\xab\xb8bU\x0e)\xfc\x7fs\xb8\xc6\xc6\xda\xc7\xb1\xa9v\xf66}GH\xe9\xddQ\x0b\x9f\xfe\xd4\xc3D\x9fn\xc6\xa39\x92?\xfd\xc8\x8e=\xc6\xe2\x91\x88\xa9\xc14<\xde[`\x01O\x1a\xdd\xd3\xa0\x0c\x07\xb52\x96%\x93\x83W\x17V}B\xca\xd5cE\xd1(\xdc\x121\xab\xdf}\xe9\x84h\xdd\xb2NEz$W\x04\x1e)\x8c\xcc\x10\x9e\xf5\xd9\x88 95\x1f3\xf2@bEd\xfa\xa5\xed\xc8\x81\x16x\x95f\x07b\x0e\xff\x00qR\xe1\x8dKzNE7\x9e}\xa0\xb36\x00\xf7\xe8+\xe7o\x1f\xf8\xf2k\xeb\xa9\xf4\xbb\x18\x90\xd9\xdb\xe0\xcf,\x99\x02C\xec\x17\xbac\xa7\xb9\xe6\xae\xbe3\xd4\xeeu[{\xfb\x1d;W\x82\xca8CG,\xcc\x0b4\xcf\xf8Y#\xdb\x9c,y\xcb\xb7\xbf\x02\xbez\xd6-\xe5\xf0\xfc\x91Ax\xe9:\xc7&\x1a\xe6\x10\xc5Y\x03gqnz\xf4\x07\x18\xc5m\xbc\'\xe0\xbb\xe8m\xed:\xcd\xdc\x1e\xb9Hkd|\x10\xa0\xf0\xec7\xdc\xf2\xb9\xed\xbd_t\xe5\x85\xe5)\xcb\xaev\xc1\xe4\x7fZ\x97\xb7\xd6\x03\x08\xa4\xb5\xb3\xd9\xcc\x05Y\xfd\n\x121\x92\x18c\x19\xefR\xd3<\x85F\xa53E\x1c\x12\x92K)\xdf\x12n?\xcc\x00\xe4t"\x8b\r{\xc3\xb2\xc0\x0e\xa9\xa6\t}%\x89\x8d\xc2\x15r\x7f\x08Q\xc1\\\n\xee\xff\x00O\xb7\xfb\x8d\xdd\xb4\x05\x94\x1by^T\x93\r\x11\x85\xbf\x0b&IR\xf8\xfc$rz\xd7\xae\xdaY\x89\x95\x98\x10T\x1d[~l\xe3ee`23\x9e\r?s\xf8\xd8\x19u\xbf\xc7`\x08\xce\xe4b\xa9z\xc6\xaf.\xd5\x8e\x16\x12*\xfa\x16@p\xb2g\x93\x9c\xf3\xc6x\xaet\x8b=B\xe7QI\xca\x81\x13(Eg\'h*:\x0e{u\x15;\x7fm\xa6^D\x8b$o\xb2\xdd\x14\x07\xc8fb\xab\x9d\xc4\x0c\x0e\xbcUF\xd2\xe9\xe7\x91-\xa3am\x1bI\xfe\xab\x12\xc7\x8f\xa7L\xd3\xb7\xf0\xf9\x0b\xe6\t|\xc2\xac\x02\x91\xb7\x1fZM\xbd\xd4\x92\x05W\x1a3\xc8\x1cV\xa1\xa7h\x97-o\x7fes"M\x11\x8fp\x95\x81\xda\x806\xe2\xad\x8fz\xadY.\xb1\xe6\x00"\x8d-L\xab\x1a\x88@\n@$)`:\x9eq\xcd1\xb8\xd6uX\x84\xdat\xb3\xb2\xc3t\x17\x0e\xacA;;\x9f\xfd\xd5;g\xabY[\x8b{{\xa5c\x02F\xc3r63\xed\xbb\xbe\xdc\x9f\xadf\x8d\xdc\xf2M\xf8pR5\x99\xc3z\xb8\xdb\x80N\xfbU\xcc0\xa9\x06B\x0bi\x04m\xfb\xedZg\x884m\x17J\xd3\xe5O\xda\x0b\x1d\xd4\x10\xab\xb2\xbc\x833)<\xe1y\xf5\x8fl\xd45\x9d\xf6\x8duc\x1d\xc5\xa4.\xb3Z\xb8U(\xdb\xa3`y \x8f\xf3T\x9dG\xc5\xa7Z6\xd6\x97\xff\x00uu\x82%\xb7\x8a\xe7a\xc8P\x7f\xd4\x18\xe4\xb1\xc79\xabe\x94vz^\x9bl\x96S\xdb]\xb5\xc4y\xf3\xd0\x15*\xd9\xe8\xc0\xf7\xe6\xb5\xd3=\xa4\xf0\xbbC\x1cQ*\x84f\x00z\x81\xcf\xf9\xee*\x9e8\xde\xdeH#\x9c\xc9,\x8c\xcc\x01\xcf\xa7\x8f\xe9\xf0k\xe8\x7f\xb3\xdf\x11$\x97B\xd5T\xc6\x93\xc3\xe6,{\xb2\x15\x94\xe0\xe0\x1e\x80\xd6\xc9\xe7\x0fz\xf9\x8fI:o\xd9\xe46\xda\xa6\xab1\x95\xe6\xf4\x96^J\x93\xc8\x15\xb1xw\xc56^&\xd3c\xbf\xb4oC\xe7\xd2O#\x1d\x8dZ\xdb34j\xb2\xb8\xf3\x00\xce\t\xf5i\xecMy\xb7]\xb3\x10]\xbc\xd6\xf0\xb0\xb6\x91\xb0\xaf\x83\xa0\xb8\xe4\x03W\xb10\xf7\xaf|\xe1\xefP\x1fxj\xf7\xef-N6\x05S\x00MOy\xc3\xde\xbd\xf3\xc7\xbdW\xfe\xf2\xd5\xe7\xdeZ\x91\x91K\xd2j\xc3\xe7\x8fz>\xf0=\xea\x00\\5\x1e{{\xd7u\n\xe6\x83S\xc6\xe4\x0e\xf5\xc9\xb9\x1e\xf5\x07\xe6\xb1\xefF\xf6=\xeb\xa0\x8a\xe6\x9a\x997_5\xc9\xbb\x1e\xf5\x0f\x92{\xd7\x9c\xd0Z\xba\x16\xa5M\xdf\xcd$o>j8\xa9=\xeb\x8d\xb5\xcdU\xdd"\x9f\x9b\xcf\x9aL\xde\x1afR\xb9\xd8k\x995\xdd"\x9e\xfd\xf3=\xeb\xc3r}\xe9\x9e\xca\xf4-\x194i\x14\xab\\\xb5\x14\x9e\xca)Z\x8d\'\x02\xaeY\x1e\xf4TO\xde\xd7\xf9\xab\xaf\xbd\xaf\xbd\x18\xa4\xe4\xd4\xa5\x15\x17\xf7\xb5\xfej\xf7\xefc\xf9\xa8\xc5\x19>\xd5\'EE\xfd\xec{\xd1\xf7\xb1\xfc\xd4b\x8c\x9fj\x94\xa2\xa3>\xf6?\x9a\x8f\xbd\x0fz1FjK#\xde\x8d\xc3\xde\xa3~\xf4=\xeb\x93t=\xe8\xc5\x195$\\W&J\x8c7C\xde\xb87#\xde\x8cQ\xbdI\x19>i3(\xf7\xa8\xc6\xba\x1e\xf4\xdd\xae\xc7\xbd\x1bQ\xbdL\x19~k\xcf4{\xd4\x19\xbc\x1e\xf5\xe7\xdf\x07\xbdv\x8c\x1a\x9e\xf3Ey\xe6\x8a\x83\xfb\xe0\xfej>\xf8=\xe8\xda\x8c\x1a\x9b2\xfc\xd4f\xad4\xe3M\xbe\xfb\xb8&_%\xf6\x01\xd78\xedMM\xd8\xf7\xaa/\x8f|]s\xe1\xbd\x06\xfa\xe6\x1bY\x1d\xbc\xa2\x12Q\xf8\x14\x9e=]\xc5weR\xc4\xe0\x01\x92k\xa8\x8f$\x89\x1a\x0c\xb30\x00|\x9a\xc2\xae"\xd4|\t\xa7\xebz\xba\xc5n\xb77\xf2\xa4p=\xc6\x1eXr3\x96\xecK|W\xcbz\xad\xfb\xddMs$\x9e\xb9\x1d\xcb\x92\x06\x06\xe69\xe8+\xe8\x9dSD\xf1.\xb7\xe0Y\xb5\x06\x9a\xd5\xe0C\x10X\x9b>a\xe7s>\xe6\xe0?\xbf\xc5Ru\xdf\t\xc3\x1d\xbe\x95\x1c1\xa4W\x12Z\x96\xfb\xc1l\xac\xf2u\xda\xab\xf1\xd2\xaa.lM\xca\xa6\x8dB4@\xc0\x1e\xe5\x8fj\xf4\x0e\x99v\xb6\x86me\x1aV\x90\xa32v\xd26\x1b\xd6\x1b=\xa9\x85VW\x91ZBG\xee\xfa\x03\x9e\xc6\xaf\xbe\x19\xd1\xa5\xf1F\xa9\xa6X\xe9Z[\xc1,\x83e\xd23y\x8a\x80\xf5\x94m\xe4(\x14\xc54\xfd;K\x8a\xed\xf5R^y\x11\xd2(\xe3\xc3\x94q\xd4\xb8=\xbd\xabh\xfb%h<%\xa0M\xad\xacP\xcd\xaa\xde+5\xac2K\xe5b\xd18,\xcezg\xb5.\xda\x05&(\xf0\xbeY\x04\xcb\xdd\x80^?ZU\xfd\xcc\xec\xb2<a\x9e]\x965\xecX\xf7\xfa\x0e\xf51\xe2/\x1c\xda\xdax^\xcfJ\xb4V\xb0f\rc\xe6*\xe4\x08\xe0\x1c\xa1\xe8}m\xc9\xa9ko\x13[XxM\x8f\x8a\xaeg\xbb\xbd\xd4K46\x907\x94\x93"\x84Q\x99\x00\xfc(\x06\xdd\xbe\xf9\xaaw\x85\xf4\xbd?\xc4\xfe,\x85u\xe5\x92\x0b;\x92n\xa1\x85Xl,\xcf\xd1z\xfa{{\xd7^6\xfb\xa4\xda\xae\xb7t\xf3<v\x90J\xb1\xe9\xe8\xcav\xb6\xc3\xf8cP= \xfe,\x8e\x83\xebW\x02\xe2D\x82Y\xe4 \r\x1a\x15x\x04\r\xf5\x10x\xaa\xa9,\xed\xa4\xb8\x82\xca8\x88:\xbc\xf9$\x1b\x9c\x93\x8d!\xbd\xf3\xcdU\xe2\xd5u\x1df\xee\xe2\x14\x8bm\xab_\xf9\xad\xbd\xb7"\xc8Wn\xe3\xeeB\x8c\x00j\x8f\xa5\xe9/ayu\x1b\xc8\xb2\x04\xba\n\x02\xe1\xfc\xc6v\xf4\x8d\xa0\x82w|V\x8d\xa7k7W\xf0[\xc3\x05\xa0\x82\xca\x07&\xf6yH\x08L\xa7\x99\x1f\x1c\x9e\xdbTg8\xaaV\xaf\xae6\x9b\x7f\xae@\xf6\xb1n\x96\xe2dR\xcb\x96B2\x8aq\xed\xb7\xfa\xf3T\xf7\x1f\x86\x9a\xd5\x19\xcb6\x97\'Q\x07\x1cgj\xd1C\x03,\x9at*\xe0~\\\xfc\xe3\'\xe6\x94\xbe\xbe\xd44\xddE\x04\x82\xf2\xce8\xd0\x91\xe6\xa6\xd7b\x07@>z\x12{T~\x9f\tmh\xb2\xc6qy\xb0\xca\x99;C\x0c\x9e[\'&\x9dY\r[Q\xb3\x9bQ\xbf\xba1ZI\xfb\x98\xa3$\xa8\x99\x95\x7f\x02 \xc9?\'\xf55\x1bys4\x11O!\xb0K\x19\xad\xc2\x14\n\x1dN\xe5\xc6p\xad\x9cd\x0c\xe3\xbdW\xcb\x1f\x98\x8c\xc3 9\xd4\xa1\x86\xf8\x1e\xf8\xec{T\xc7p\xa0\xc7\xcb\x01\x8c\x8f\x7f\xbdiz\xa4\xd2$v\xed4I=\xb9\x8c\xc6\xb6\xd1\xfav62\x0eO\xbdP|K\xa7.\x9do\xa7]\x90Z\xde\xe2-\xf1\xaa\x12\xc1\t\xea\xa4\xe3\xad[\xbc=\x14z\xcd\xdc\xf2M1\x9cJ\x8a\xd1\xa1b\x02\x9fq\x8a\xb47\x84Zm>8\xee\n\x88\xa0\x91\xd3p9\x1c\xf2\x14{\x9ej\x89\x81\xd7\xe7"\xea&\\\x1c\x121\xef\xcfm\xa9\x88dm\xe3c\x8c&F{\xd6U\xe08\xf4\x8dOQ0M2C\xe4/\x99\x18\x9b\x95m\xbf\x8cn\xc8\xda:c\xbdK\xdaYEs,\xf0\xdfY\xcf\x04WL\xcd\r\xd09\x920\xb98p:\xa3\x9c\xfc\x83Q3iV\tw\xaaIf\xad\x00\x8d\x19w\x02\x01#!H\xcf8\'\xb7\x15\xe4\x11\\\xdaX,p\xdd\xdc\xcbgv8V\x022$L\x82\x99$\xed\x00\x9eI\xea+Gb\xb0\xc6\x90\xdc\x05\x05\x8eI#}@\xe3\x00\x83\xd8\xf1\xb5E\xd1\xf8\x87\x95K`l\x00;`\xf7\xc1\x15\x0f\xa9Z\xd9D#\xbb\xd3\xadd\xb4\x8a\xcbt"F`\x18\xeefa\xb7\x80FFs\x9f\xa5FM~b\x7f\xfaV\x90H#@dp7\'\x96C\x10\x8d\xdb\x07\x81\x8ey\xa9\x8b\xab/\x13kW2F\x9a{\xcb\x14q\r\x91\xa9\xc8\xf4\x9cd\x0c\x8c\xe4\xaf^M)}\xa0\xa6\x91\x813y\xf2[~"\x991\xef\x07qA\xc8\xfc\'\xf24\xbb\x89RX\xbc\xe6R\x11\xdb\x19l\x01\xed\x8c\x0f\x8aJ\xc3\xe5\xb7\x96\xa0\x12\x07\xe5\x1c\xfdk\x7f\xfb5\xfbT\x83V\xfb\xae\x91\xaa\xca\xe9rUR\x0b\x99F\xd13c\xf01\xe9\xbb\xd8\xf7\xad\xf9\x1e\xbe\x02\xb9\xd5n h\xed\xf4\xe2\xce\x92;\xcf$*\xc1\xd4+\xa8f\xcb\x15\xce\xe0G5\xf4\x8f\xd9\x87\x8f\xa4\xd5\xe2\x87F\xd5_\xfe\xbe8\xff\x00q1 \x8b\x85^\xa3#\xab\xaf\x7fz\xf0\x9f\x1bxB+S\'Q\xe9\xab\x98\xb73\xc4\x06\x02\xff\x00\xdc\xbf\xf6\xfb\x8e\xd5,\x06e\xf5\x0c\x11\xff\x00\x9b\xd6\xe8\xad\x9aS4\xcd\x1f\xe6\x97\r^TW\x06\x98d\xc1\xa7hx\x14\xb0\xa9\x1d8\xda%\xb9b\xc8\xcf\xd5\xf7u\x1f\x034\xc1\xe5\x13\xca\xce\xa8\x14\x13\xd2\xb6\xaf\xd2\xe3\xb2\xe9\xdd6\xe1\xaf\xe1\x92k\xa5\xca\xc0\x9e\xad*9%\x86\xd9\x1d\xc5@\xf3\x0b\xc9"\xf9l\x02\xff\x001\xf7\xae\x81\xae\xb3I\x8f\xad*\x14\x9e\xb4\x98\xc36\xca;\xd7\rvq\x85\xc1\xceG?\x06\x8f\x9a\x02\xd7\xa7\x02\xa6\x95m\xc9U]\x86\xc0\xd23\xf3^QF+\xdc\xe2\x91\x827;Q@\xdc\x08`pA\xc85\xeb\x12\xc4\xb3\x12I\xeak\x90hf\xc5+a\x19\x1a\x9bNs\xa7\xb6x\xce+\x989\xafA\xae\x95\xc0\xa4\x0b\x13\xd2\xb8\x05\x8e~;\xf6\xae\xc5#\xab&\x95$\xef\xdb4\xad\x19\xcdL\xc3|\x91py\x18\xeb^K\xac(\xe1G>\xddj\x8d\xaex\x9fC\xf0\xfc[\xf5-J(r=1\xe7.\xdf\xfbPrk\x1c\xd6~\xd8\xee$y!\xd14\xa5]\xb9\xfd\xf5\xc9\x05\xb8\x19\xe1\x01\xfe\xe6\xb46\xddw\xc4w\x11y\x16(\n\x02G\x9b\x8fH\xfa1\xd8\xe3\xe34\xe4=+\xcf:\x84D\x8fs\xb0\xaf\xa2\'\xbe\x9al\xeel/\xc9\xaa\xad\xff\x00\x8b\xfc7\xa5\x96\x17\xba\xe5\xa4L:\xa1\x95K~\x83&\xbeJ\xd6<W\xe2=f\xf2(o\xb5[\xb9\xe2\x90o0\xc6|\xa5\xdaG\x1e\x94\xe3\x19\xef\xedQ\xf6Z<2\xe5\xe6\x9dF\xec\xe3\xd5\xf8rG\x18\xea~\x94\x86\xe8\x97s1\x9f\xa8u-Nw:F\xb3\xfa\x9f\xf1WV\xfd\x1dt\xe3P\x1f\n?\xbd}E/\xda\xe7\x82\xd0\xed\x86\xf5\xee\x0fO\xdd\xc2\xe4~\xa4\x01Q\x93\xfd\xaeX\xb2\x93i\xa4\xde\xcd\xc1#*\xab\xd3\xeaI\xac\x86\xd3\xc36\xd7\x1eS1de\xeb\x81\xd5{q\xed\xc5Xt\xf0\xda"\xca\x92\xa5\xb6\xd9\xa3 )\x19m\xa4\x02@nFFpq\xcdJ\xb7\xe8\xb6\xf3\xb2\x96\xb8\xb8\x11/\xe7f*\xa0\x7f\xfc\x01y\xa9\xa7\xa5Z@\xa3*ds\xc2\xe7\x19\xa7z\xa7\xda\xf6\xbb$a\xact\xcbuS\xc1vv\x93\x1f\x92\x85\xe6\xabM\xe2\x9f\x18\xeb\x96m<\x9a\x8bA\x1b>\xcf\xdc\x81\x1a\x83\x8c\xfe.\xb9>\xd9\xcdX\x84Ztq\xac1\xc6m\xe2\xb9#\xcc\xf2\x93xr\xb9\xdb\x90\xb8\xdcFx\xaa\xda\xe8\x17+y\r\x9c\xd676\xc5\xee\xc2\x16\xf2HE\xde\x06\xd7\x0f\x9eA=TsS\xa0\xe8\xb6r1\x10Z+\xb2\xff\x00\xf7$\xf5\xe9c\xdb\xd6I\xc5J\x8a\xde\xde\x12\x7f\x86\xa9\xdc\x0e\xf8\xaa\xff\x00\xdd\xa4v\x06\xe1\x9awl\x9d\xcf\x97={\x13SPi\x90\x18\x8112\x81\xca\xaeq\xbf\x9eT\x9e\xa0|\xd4T\xe2o4\xc4\x923\xca\x1c*H\x84\x01\x81\xdbcs\x93\xed\x9a\xb1&\x9b\x1a\xdf<\x1a\x8e\xa2\xd6\xed\xb71\xc7\n4\x8c\x0c\x802\xa9\x0c2z\xe0\xafQ\xd6\x96\x96\xb7\x0c\xe9\xa2X0\xad\x86%\xb0\xa0\xf6\xcev\x1cU\x9b*\xa2\xe0\xa3n\xb9\xc0\x19$\n\x8c\xbb\xd1\x93T\xbd\xcf\x96\xed8%\x96>\xd9\x1e\xfc\xf6\xab\xee\x8d\xa5\xbd\xcc1#X\x8b\xb2\x81Qa\xf3\x8cm\xd7 \x009#\xe3"\xaa\x90Z\xeb\x16+\xb6\xf5b\x8ecr"m>V\x11J\xa8\xca17?\xc2s\xdb\xdb\xa5j6\xde \xf0\xb5\xf6\x90\x92[\xdc%\x9d\xccH\xb0\x80P#)@\x07$`:\xb1\xf7\xe4f\xac--o\x92W\x9ai\xf4\x14\xc9]L\xa7X\xe4\x8d\xf2\x03\x0cpj\xae\xf4\xaa\xc6\x12(\x99\xd5\xdb\x1a\x94\x1fO\xb18\xdf\x1f5B\xf1\xfe\x91cmi.\xa7\xe6\xcf\x15\xfc\xae#$\xc2!m\xac\xa13\x81\xc8\x1bT\x81\x93\xd2\xb1Amu}wege\x1c\xb2\x99Dg\x022If\xea6\x01\x92\x07oz\xd7\xbcc\xacO\xaf\\\x85\x98\x99\x82\xed@\xf2\x1e\x01\x03\xf9\x8fa\xefT\xfdCG\xfb\x83Y\xfd\xda\xfe\xca\xecH\xcc\x19\xe0\x98\x10\xa5NF\xe68\xc6z\xfcU\xac\xb7\x91\xde\xdc4\xa9\x07\x99\x12\x10\x19\xb3\x82\xc7\xdf\x93\xbbRm-e\x8e\xda8\xa4\x94\tH%G \x0fn\x06\xc2\xa3\xf37\x82u\xe6\xb4f\x170\xdc\xaf\x96gL\xc6A\xc7m\xa5\xb6\xaeO*N~\x95\xa6Zx\x9fUX\xec-m\xc3F\x979T\x01\xc6A\xc9\xdd\xca\x9c\x80;\x82>k-\xd6\xe6\x12\xcbo\x06\x9d\x01\x8a\x1e\xa0yi\x1f\x9a\x9b\xce\x0f\xa3w\'\x1e\xa6\x1dqV\x9bsp-\xde?\xbb\x04\xb9,\x11ea\xfb\xc1\x81\x9c\x0e\x9c\xf3L\xf5GD\x9ai-\x0bB\x0cD\x10\xaeI\x19\x19\xdc\xf7\xa2\x1boB%\xd2\xac\xac\x08\xc1 r6\xe3\xb5oV\x93Y]\xd8Cnu\x02\xf2*\r\xc5}9u<\x82\x07,\xa7\xe2\x9d6\xa3\xa7Z\xc8\xb0M\xbc\xce\x98\xd8a\xfd\xdb\xfa\x86@!\xab$\xb1\xbe\xbb\xd3\xbe\xea\xd7\x97\xdbE\xbcM\x86\x8518\xc2\xf0;\x03\x92?\xaej\xa7w\xe2\xfdE/\xec\xf5K\x85TK\x96v\x82=\xe7\xcc*\xa7\xab\x0ex9\xcd&\xdb\xa8\xdc\xcb\x16\xb8"\x0f,\n\xab$\xa0d\x04\x00\x0c\x90O95\x02^\x95\x1f\x98\xca\xd2\x9f*BYW\x8fQ\xed\x91\xda\xbe\x86M]C\xfd\xe2\xfe\x07&\xf3e\xbcrH\x07\x9b\x12\x86\xee\x07\x04\xf3\xfaUC\xc6\xba\x0c\xfa\x03]\xc9g\x7f$\xa2;#*+\xb0\xccfF1\x82\x15}\x83\x1c\x9f\x9aN]n\xe9\xe2\xd3\xae\xef\xb4\xc9u\x01r\xbb\xac\x18K\x88\xd3\x18%\xc2(\xe5\xb2r7qQ\x89\xa9\xc2\xb3^}\xfa\xd1\x91n\x12h\x9c\x89rTH\x84\x10Cs\xc1\xe4{T\xa9nad)!\x7f<\xb6\x16GVG\x8c\xb0\xc9,\x06\xc41\xdcnv\xa6a\xb6\x9a&\x0c\x9aV0\xa7TjU\x95\xf4\x9c\x00\xb99\x1aF\xdcsY\xbe\xae\xa9q\xe1m+|\x90\x97\x82\xe4\xc7#\x80\x01\x01\xd0\xb0RG<c?\x9d?\xb7\x8e\xe3L\xd1\xf4\xa9\xef\xad\xe5\xf2&\x8d\xde&\x8b\x0c[\xd4AY\x00\xc6\xde\xe4r\t\x02\xa2\xfcDmD6P[\xdc\xc8\xf6\xbfw,\x11\x10F\xa9;\x0e}]X\xf02\x7fJ\x89\xb0\xd6\xcczt\xb6\xf7S\xbf\x9b\xb8\xa7\xe2!\x8a\xb0\xc6\x0f\xf6\xaa\xf9\xde0#\x7f\'\xcc\x0b\xa5B\x8c\x1d\xf07#\xbdZ\xdb\x12\xb9\x05\xf4\xe4\x93\x92\x08\xdb\xdb\xb6)\xed\xfe\xac\xb7\xb9\x1eC$\x89:\xc9\xb9\x7f\x01\x025F u\x05\x8a\x83\x8e\xd58\xb3Ms\x05\x8d\xa5\xec\xa9\xe5\x99?q3)\xc2\xab\xe1J\x9f\x8e3\x9e\xd8\xaaU\x85\xfc2\x85\xb61\xc6Sy$c\x0c~\t\xf6\x1dj\xfbg\xa9.\x9e\xd6\xb7\x1a}\xc9i!\x88\x99!\x96<\x84\xff\x00\xd8\xc79\xcf\xc6\r7+I5\xc6\xa7q\x86\x00J\xa4\x01\x95\xc8\xe0dg\xedR\xc3\xa2\xc5\xa5Fq\xf9\x0f\xb1\xc7\xbfj\x83\xbf\x7f\xb8^\xde[%\xc7\x99\x126\xc6\xc2\xe3~\x1b\xf1z\x86@\xef\xcf\xe7QW\xb2\xc0HPB\x06\x00\xe4\x9e*2}R]CQ\x91!\xdd;I(\x8f\xd1\xeb|\xe7\x9f\x7fQ\'\xbdm\x8f\xa6i\x1e\x1a\xd0\xce\xa5.\x97\x04r\x0f-^+\xcd\xb3\xdcH\xe0\x15(2p\xac3\xce\x06\x0e)\xfb.\x8d%\xd8\x96c \x868SQ-\x9d\x878\xfb|\xd4y/c\xb7\x11 \x1ec;i\x00\x11\xcdU<"\xbao\x86\xad\xee\xbcA}ak|}Q\xc3$\xb3\x02\x01q\xb7`\x8b\x1c\xfc\x9c\x8d\xb9\xcdL\xd9_\xc5\x1f\x85u)\x92\xe5\xe1\x9e\xdfU\x99\x80\xde\x19\xa3\xb6\x9a0p\x1c\x00\x0f\xa9\x00-\xdc\xd6y\xaei\xd1jf\xee\xc8j\xe5\x1fj\xdc\xd9*\xba%\x9a\x97\x1b\xda6L\x90\x1b\xa8\xc0\xcf<U\xb3\xc2\tt\xd0\xdd[\xc2\x96\x97\xfb\xac\xc4\x8d\x1b\xabF\xc8#B\x19\x95G\x07\x00\xe0\x8ex\xad\x87O\xb8khl\xa17\n\x15\x96H\xc0P\xba\xb5c\x05\xbd;\x9e\xd8\xaa\xc9\xe1\x8aI.\xa6h\xc9`\xd1>\xed\xb6\x01\xd9p\xdb\x01\x82sL\xed\xfcV\xda\x82"^\xaa\xc9<\xf2.\xdb\xcb\xb2R8\xe5\x97\x96\xcb1\xe1x\xc0c\xc6:\x0cS\xd9u;\xab\xa9l\xe0\xbd\xbbqg\x19\\\xacJ\x1fd`q\xb0\x0c\x03\x91\xd0\xfbTl\xfe\x15\xb0\xb6\xb6\xd3u6\xb7\xb9\x92\xce\xf1N\xf5I\x00\xcbC\xb5]\x149`\t\'\x83\xdb\xb5\\\xe2m\x12\xc8\xc9>\x93~\xb1\x89\xf6[\x98\xb5\x05F\x8c\x02\xbb\x8a?\x07p\xc8\x18`\x00\x1c\xd5GR\xba{\xe9\x824\xaa\x00\xd3\xe6.\xac\x17Ldlp\\|\xe6\xac\xa1\x82\x18c\x1eTL\xc0\x02\x15\xb1\x90\xac\x0e\x0e\xe3:O\xc6)\xb4\x1a~\xae\xf6d\xd9C\x1c\xb0\x1d\xf71\xb4r\r\xf1 ;J\xc8\xbb\x81\x18\xe3w\x15e\xf0\xab\xdb\x1b\xf0\xcdz\x96\xc9\xe5\'\xde<\xe9#E\rtXM\xd7\xf1~\x1c\xae\xdc\xfc\xd4\x02k\x11Z\xcb\x16\x9d5\xbd\xa1\x8e\x08\r\xb5\xf1\x11\x80\xb2\x05\x97 \x8d\xb8\xce\xdepG4%\xb7\x86\xf4\xfd6+\xbb\xb9\xd4Zy\xeb\n\\\x1623\xc4U\xa4 F2\x01R\xc0\x1c\xe0\x82*WO\xb7K{\xa8^\x06R\xa8\xa1\x9d]\x82\x84+\xbe\x17m\x80\'\xbdF\xbf\x0f=\xb4\xa9*\xe92\x12#h\xd4\xb1 \xfb\xef\xb9\xc7\xb5f^#\xf1\x16\xa9\xe0\x9f\x12D\xab\xe6F\xd6\xd6\xd1\xc0\xf3Dv\x15\x9e3\x82X(\xe40\xe4\x1e\x98 \x8a\xac\xea\x1fhSj\xad\x03\xde\xea2\xcf\x1d\xb6\xff\x00&\x12\xb2\x05\n\xc4\xf4*\x14d\xf7\'\x9a\xb4x\xa3Z\xd35{-5D~}\xd5\x92\xb4"t;\x92xA\x05\x01\'\xd4Br\x06y\xc6\x05P/\xf5\x8bK\xb9U\x9b@\xb6\x82=\x825\xdaX\r\xcb\xd4\xf3\xef\xedR\r\xcd\xbb\tm\x96 \xd0\xea\xc9\n\xec\xb9\r\xb9\r\xa7\x19 \xd4&\xb3\x9d\x9dfi\xd9%\xd3\x8c\xe9V\x00\xae\xc0\x8c\xf0\x08\xedR#\xc60%\xd6\x99\xa8\xc7x\xd1\xca\x02\xac\x86\xdc\x91%\xbe\xd3\xb3\xd5\x90\xb9\x1by\x18$\x9e\xf5s\xb2mC\xc7\x9a\xcd\xc3K\xab[\xdbY\xe9\xd6\xf2Bu3\x07\x94\xb2Z\xc6A\x1b\xd51\x9ep\x14VOy\xa2\xda_\x98>\xe0\xc5K0\xdd\x08Q\xbbq\xe0\x01\x8e\xbc\xf1V8\xf4\x1dWEAm%\xc3\xd8\x97\x8d\xa2\x92\t\x15\xa2;G;[p\x1djH\xba\x82+5\x86\xd6\x06\xf2\xcb\xa9\x95K\xb6\x96\x1f\xed$\x9e\xe6\xa1\x0b\x0b\x96\xbc\xf3\xa6\xba\x0c\xe23\xe5\xb6\x85\xc8\'\x92\x06;\n\xb3\xb7\x86\xd2\xfeX\xafe&+I\x12o\xbb\xc8\xfbr\xfeY\xc7\xa8\xe4\x0e\xbdO\xf4\xae,e\xd6\xb4\x84I4\xcf\x12\xddZ\xf0]\x91\x0c\xb8\\q\x82\x0eW\x1f4\xbe\x9b\xaajvv\xc6!\x1cR\xc06\xb6\xd6R\xc8\xac\x7f\x8b\xff\x00\x9e*\xe5\xe5\xf8Zm\x0bP?t\xbd[\xd0\xca\x04\xd1\x94\xf2\xa32&v\x1c\xe4\xe0\x10zu\x1dk.\xfa\xaf\'ko&\xdd\xa3*\xec\x04\xa3P8\x19 \x01\x91\xdbj\xbc{`\xb1\xf9\x8c\xac\xe4\xb8R\x10q\x9d\x81?\xde\x9e\xd8}\xaa\xf8\x97I\x92858\xed\xaf\xb0\x8aX\xf1\x1b\x90Fr\x198\xfdEi:_\xda\xd7\x86.\x84f\xea\xe2M9\xdb\xa7\x9d\xea\x8c\x9f\x87L\x8f\xd7\x15\xf1\x86\xb9\xf7\xb8/\x0c;\xc0U\x94\x13\xb7\x0e\xb8\x03\xd2\xc0\x8f\x7f\x9ami{rn\xa6\x8dU\xe5+\x8d\xb9\xf7\xc7?J\xa5\xbe\xf0\x1f@\xbc\x8e9\x92\'\xb6v\x00\x93\x01\x0b\x82\x7f\xed\xe3j\x810BY<\xac\x11\xdcq_\xa6\x1av\xbe\xb70\xa4\xd0\\\xc5u\x03\x80U\xe3p\xeaA\xf9Rj\xc0\xb76\xd7P\xf9\x83\x82\x0e\x1b=W=3\xf1_\x99:V\xb3\xaaY]\xc7&\x9buqk)nLnT\xe7<\xf4\xaf\xa0t?\xb5\xdd\x7fKS\x1e\xa9\n\xdf\xb2\xa8\r\x85\x11\xcb\x82prW\x83\xf9\x8a\xa9~\x91\xd7z;<\x02\xf5:\x9d\xab!\x02)\x86%_b\t\xf6\xf6\xcdV\xc9\xd3\x84\xa3Tk\xa5\x878\xda\xbe\x9f\xbc%\tR~\x95\x8d}\xaa\xf8\xdd\xfc%\xa1\x85\xb68\xbd\xbd\xdc\x90\xbf\xff\x00\xb3U\xc6\xe7\xfa\xf3\x81W\xcd\x17\xc5\xda\x07\x88\xac\xd7\x17_s\x99\x14\x16[\x82\x15F\xe1\x90\xa2A\xe99\xc6G9\xc7j\xf9\x1f\xed7V\xff\x00\xd6\x9a\xe5\xd3\xd9\xc9\xbe\x0b!\xe4[(\xce$P\xc7s\x8f\x96\'8\xf6\xaa+\x1f\x0b]\xdc\xf8\x92\xd2[\xdbF\xfc\x1e\x9f4\x06<\xe9\xfeC\xef\xb9\xfb\x8a\x91a\x11fe*CF}Y\x1bg\xb5Di~5\x88Y}\xdeH\x83\xa4\x92\x07f\xc6\xd2\xac\xa0\x83\xb0\x83\x9eA\xe7\xdc\xf5\xa9\xbb\x9de\xf5]>X\x0b,\x91\xdc$p\xcbn\xb1\xed\x05\x13\x84\x04&\x0f\x7f\xd6\xb3\xbb\x7f\x0e\xdc\xd9\xa7\x9c\xab"\xe62\xc23\xd4g\x85b\xa4\x8c\x82{\x8c\xd5\x9a\xc7N\x97L\xbe\x84K|&\x99\xe3\x12)\\\xae7.p}\x98{W\xb9\xc2\x92*B\xaa\x18G\xa8\x0cppw\xfb\xd5\xc4\x92\xc4T\xfa\x06\xaf~\xd9\xa8+m\x1d \xbe\xbbW}\xb1)\xde\xb1\xc8\xc7(\xb9\xe9\xf2\x05Z-5\xd9\xe5e\xb2`\xf76Q\xb8\xca\xa2\xe4\xa0\x1e\xccz\n{\xa8X\xe9\x1a\x9a\x0b\xa6\x86X\x95"*C7\x99\xebQ\xcfM\xbe\x92\x7fJ\x81\x83U\x968a\x8a\xd6\x14H\xe0\xde\xb1\xae\x17\x9d\xddw\x15\x03?\xe2\xa45\xbc\x02\xe1\xa5/\x95\xceP(#\x9e\xc4\xed\xb5F{\xa9e\xb7\x11\x15\xdf\xb9c\x92?\xadN\xeb:\\\xed2\x0b\x16\x8d\xa2x\xb7\x01o(\x7fO<\x1d\xbd\x0e\x06H\xaa\x9f\x92a\x8d#\x8eA\x98\xc8\xce\x1b;y\xc9\x07\x1d\xcdHE\xa9\xcf\r\xbc\x91\x98U\x8b\x16#i\xdb\x82\xdd0OaP\xb0\xe8\x9a\xad\xdc\xf0=\xbaH\xe2E\xdc|\xa5-\xb0\x8f\xc5\x90:\xed\x1c\x9an\xf8\xa4\xd1\x85XB\x96#\x03\x9f\xebL\xc0\x84r\xff\x00\x95s\x9e*{X\x96\xda\xe2\xde\xc2X\xb7\x99\x15\x02\xb2\xe38+\xf2>*\x12\xdfTQ?9F*F\xd6\xe7\xafz\x94\xb0\xf0\xee\xa3})\xb5\x86\xe4\xe4F\xd2oR\x18`g\x9fI8\xf9\xcd@^\xe9\x97Q\xde\x0bkKf\x96X\x94\xb4\x8e\x9c\x86\x03\xbdT\xa5\x98\x0f\xaaH\xc8e`\x06\x06\xd8<c\xe6\xa7\x0b\x99\x13!pr>\xf5#\x1d\xd5\xacO\xb9\x94\x89\x19\xb8\x07\xa6;\xd7\xd1:_\x85\xec\xd9"h.R{t\xb5\x13\'\x97\xceK&y\xe9\x82\x0f\\\xd7\xce6qH\xd7\x919\x8c\xa2G\x81$N\xbd1\xd4s[/\x85ou\x1bx\xed\x87\xdeY\x95#{\x86\x00r\xc0p\xa8\xd9\xf7\xedV\xdeL)\x14\xa1\xe3]\xf0\x03g\xb2\x9a\x80\xd7\x13K<z\x1fN\x8c\xed\x8c\xe4\xb0\xda\x98\xea\x82\xe7Q\xb9\x86\xda\xe2\xf4\x887\x83\xfb\xc6%W\x15\xf5w\x80\x9fJ\x93G\xff\x00\xf2\xfb\x04\xb6Dm\x8d\xb3\xa3\x95\x18\xdd\xc7Z\xf9\xafU\xb3\x17\x11%\xd0\x8cD\xae\xde\xa1\xde\xbe\x8b\xfb3\x85\xe2\xf0\xd5\xbb1\xf4\xb9%?\xf6\xe7\x8a\x8f\xd0\x9c\xf9\x92\xa9`\xc7N\xe7\x9d\xb3\xb6>*/\x8d\x82\xb7O\xb4m\xc6\x99\xb0\x14\x1d\xb7\x19;{\xd6\x80\x075\xee\xdc\x9a\xe8W\xb5\xa1j\xf3e\xae6\xd1\xb6\xbb5\xe5&\x97^\x05\xa3\x14g\x14f\x81\\\xafk\xdc\xd794\x13]\xaeW{\xa8\xddIn\xc5y\xba\x8a)|\xd7\xb4\xdc5t\x1e\x8a)Z\xf3\x15\xce\xfa\xf0\xb5\x14WtR{\xa8\xddE\x14\xa5\x14\x9e\xea+\xb9\xaeb\xab\x83[O\xe6\xaf\x7fm\xa7\xf3\xd6|Y\xbd\xcds\xb9\xfd\xea\x1f\xe2\x9f\xda\xa4y\x0b\xefZ\'\xed\xa4\xfej\xf4kH\x7f\x8e\xb3\xe5-\xfc\xc6\x9c&\xe3\xdc\xd7\x7f\x12\xde\xd4y\x03\xde\xaf_\xb6\x14\xe3\xd7J\rX\x7f5SP\x1fsK\x01\x8aW\xe2\x1b\xda\x93\xe4\x8fz\xb7\x8dU\x7f\x9a\xbd:\xa8?\xc5U0M\x1b\xfek\x86\xe7\x1c\xe2\xba \xcf\x15l\xfd\xaa\xbe\xf4~\xd4\x1f\xcdU\x13!\x1d\xe9#3{\xd2\x7f\x17J\xfc5\\\xff\x00j\x0fz\xf3\xf6\x98=\xea\x9e\xb2\xb1\xefN#rk\x9f\x8b\xcf\x15\xdf\xc3\x81VF\xd4\x0bt\xa6\xedu#t8\xa6\x08i\xc0\xa5\tY\xbb\xd7<\xb5^\xd5\xd1\x9e_z\xf3\xcf\x97\xde\xba\xda+\xb0\x83\xda\xbb\x96=\xe8\xc0\xf6\x15\xc0\x9aS\xde\x95\x12\xc9\xef]\x08\xd6\x96X\xc5tj\xf74\x92\x17\xda\xb8Ws\xde\xb3_\xb5]I\xa0\xd0\r\x86\xc5cz\xae\xb9c\xc6\x14d\x81\xfe\xect\xadMP\x0e\xd5M\xf1\xde\x99=\xc6\x91\xf7\xfb;q=\xf6\x9aZ\xe2\xd9=\xdbiR?CKr\xc6\']X\xc8\xc1?\x1d\xe9v\xe68\xeea\x91\x97!\\\x1c|\x8e+\xe6\x96\xf15\xdd\xaf\x87_M\xd4"\xbcH$\xd3\x84\x96\xc0F60f\xe5\xf9\xc1\xe81\x9a\x89\xf1\x1f\x8f,/<9ef4\xa8a\xbdf\x05\xe6\x1d\x02\xaa\xe1\x02\xe3\xf0\xfb\x9fs]\xde\xf8\xabP\xba\xd1\xecd\xbf\xb0\x81\xee\x12\xc6K&w\x8f\x0c\x999\xe3?\xc5YM\xd6\x1e0\x92\x00J\x1cr;U$\x9dI\xad\xf5D\x93\x96\x050\t\x1d\x85o\xa2\xb2\x8eUI\xa4\x81P\xf9\x85\xf0\x1bl\x9a\xefSo\x0b\r8\x08\xeeo\r\xe0\\\xba:\x82\xa5\xfe\xa3\xb5X\xed\xe6\x9e\xff\x00\xc3\x9aa\x82\x0b\xa1\x14v\xe6\xdeyv\x9f,\xfa\xc9\\\x11\xd0\x01\xefT!\x0c\xb7\xb7"\xd6\x0bP\xceW\x00\x81\xc9\xc7\xcf\xb5i\xbah\xbe>\n\x8bG\x17R\'\xfd[3\x00\xc4\x86\x0b\xc8\xc2\xfb\x0c\xd2\xad\xe5\x13\xf9\xac\xcabQ\x16\xc1w\xc9\xc84\xb1!\x8eh\xb4\xa8|\xbe\x0e{\no\xa4M.\x93y\xf7\xd8.^\x19 p\xe4\xa6\x0e\xdd\xbc\x0e\x0eFi\xd9\xf1F\xafyl\xd3\xcd\x0b\xdf~\xf5\x94\xa5\xc2\xf9\xb1\xc7\x95\n\xa7\x07\xa1 pGN\x95Y\xb9\xb5\xd44\xc9.,\xddd\'j\xb3q\xd5O#=\xc7\x06\xad\x9e\x16\xb4]J\xdf[I$1\xd9A\ny\xf3F@*\xa4\x8ev\x9f\xc4r:WD\xf2\\\xc5,\x11\xc8P\x8d@\x82xa\xbe\xff\x00\x1bQ9\x8e;\x85\x9c\xa0\'`\x0e;\x1fj\xa6\xc3sv\xeb+<\xcd\x14d\xfe\xf3h8\xf4\xf6\xc0\xeb\xf4\xa9+=*\x1f\x11x\x81#\x8b\xef\x1eK\x83=\xed\xd4\xec\xbb\xc2\xa8\xcb7\x18\x03\x8e\x14u\xcdy&\x95(\x8cI\x18\t\x06\xe0Af\x1b\x89a\xc6@\xf8\xaem\xb4\xbb\x8bYm\xae\xe5\x9f\xc8\x8dnDyY6\xb1\x07\x9d\xdd\x0f\x1dFqQ w\x7f)\x19U\xa3\xd9\x9b\'c\xa7\xda\xac\xce\xe3P\xd9\x88\xc08\xe0\x9a\xd0\xf4\xff\x00\r\xda\xdfA\x1e\xb5.\xb4m\xac\xa3G\x10\xc3\x1a\xab<\x11\xc2\xc0\r\xacs\xb3\xdd\x9b\x19\xaa\xbf\x8b.\xad\xb5\x9b;\xbb\x9bK\xc8\x05\xb2\x86\n\xb3\x13\xb9\xba\x15\xc7OW\x1d>)\xaf\xdc\xef\x0cwW\x16z\x82}\xd9g*\xca\xc4\x86,NT\x15\x03\x0c\x0e:Tu\xee\xa8V\xcex/\xa2\xc5\xd4lL,c\xc9\x0f\x906\x91\x81\xd8c\xdcU\xa0\xbb\x8f\xcbh\x9a3\x18t$\xb1;1\xc7m\xf6\xfaTv\xb6`\xc5\xfc\xcdxm\x861\xa4T&\x8f\xaa\xddY,\x10%\xc3\xa3\x15+\x19\xc7;OO\xd3\xb5i2\xea\xb7\xd6\xbe\x13\xb2\x86k\xeb\x8f9\xe4\x91\xd8\xe4\xee`\x0e\x0f=\xb1Y\x9e\xad:\xc9"\xb2\xcedh\xe6\x0c\x0f\x96\x13\x1b\xbdD\xe1{\x03\xefV+\xbd@\xea\xdae\xa2=\xd4Q\xdd\t\x9bx\'\x04\xaf\x00c\xf4\xe6\xb2\xf7Q\x92\n\xab\xb0P\xd9 p}\xf8\xa4\xe8\x11\xb9|\x0c\xe3\x1fJZ\xd2\xd6\'\xb0\xb8\xb8\xb7\x8eIn\x08\xdc\xe4\xc9\x8d\x911\xc3d\x7f\x16}\xaa\x1c\\\xcao\'m\xce\xccNXs\x9c\x01\xd7\x81\xc8\x15k2\x1f\x0b\xac\x0f\x1c)t\xd72\x08\xb7J\x08\x8b\x01w\x1eA\xc8\xc6j\x9bc\xa9\xdb\rk`\x89|\xc9\x17\xce,\xc4\x18\xfdG\xf0\xb2\x9e\xaa:b\xa7X\x89Z\xdda#H,[\x9e\xc3l\xedLK*\xc3/\x98{\xe1~\xf8\xce*\xf7o\xabiw\x96\r$\xf6\x0f\xf7\xd8\xc0\ty\x13<o\xbb\x96\x05\xb9\xfe>\x87\x18\xaa\xe9\xd5^\x0b;\x88b\x84\xac\xec\x0cn\xc6OC!\xe8v\x1e\xeb\xef\x9a\x956\xd73\t\xe1\xb7W\x8eT\x89\xa4$\x9d\xa6X\xc8\x00\xa0\x00\x1epr1\xda\xa15\xbd*\xc2)-\x0e\x9cn\x84\x8e\x99x\xe4eb\xb2v\xdb\xb8\x0e\x0f^j\xce`\xcbo\x9d@o\x86$\x00w8\xda\x95\x13\x03! \x13\x9d\xf65O\xb8\x8d\xe0\xc3DY:\x02\xc0\xf5=\xf3\xf0{\xd6\x91\xa3E\x7f\xf7+wr#w\xb8i\xed\x9a2#eh\x17v\xf0O\xbeG\xd6\xa0/5\x12-\xc4:\xb5\x82\x0b\x89\xb6\xff\x00\xa7\xe8)\x1a\xb6\xc3\xb5W\x80\xc7\x07\xa8=i\x13\xa9Kp\xdarE\xe6\xde@#Q,\x92"\xfe\xe9\x97*\x11O\'`\x1d\xbb\xf5\xaa\xd3l\xb9\x91K\x06P\xa7:\x866<\x82\x0f;S\x8c\xe1\x94lrH\x1bo_`\xf8#\xc5p\xf8\xa3K\x8eFd[\xd8UV\xea%=\x18\xf4o\x80\xdf\xd0\xf1W\xc8\xcf#wJ\xf8\xb7B\xf1\x1c\xfe\x1c\xd5`\xbe\xb7O(\xa7\xa6H\x02\xfaf\x8c\x9fR\x13\xfd\x8fj\xfa\xe3C\xd5\xad5\xeb\x1b;\xdb)C\xc58\x1bs\xc1V\xe8U\xbd\x88<\x1a\xf0\x1f\x15xq\xbaM\xeaI\x04d\xdb\xce\xdf\xc3\x03}\r\xfe\xc2?\xa5rT\x1b\xef\xb5X\x08\xc1\xe9N\x91\xbd8\x02\x93\x96/,\x94\xdcILg<W(\xd5\x9f1\xcd\xd3\xafe\x85\xc6\x96$\xab\x0c\x83\x82\x0e\x08\xc8\xf65\x00\xe1\xd4\x11\xbd;S\x8aT9\xa4V\x9c\xc5\x1f\x98\xc1A\x03\xe6\xafm\x16yJG\x1b\x1dL@\x00w&\xa3>\x06I\xed^d\x9a\xf75\xc60\xc4dpz\xd7\\S\xeb\xacg\'p\xc4\x1d\xfb\x8aM+\x1a\x86<\x9c\n\xe0\xe3\x9a\xe0\xb6+\x82Y\xbaS\xad2hDX\xf2\xf99#rk\x81NI\xce\xd5\xd1nh9#\xa5y$\x96\xd6pKsuq\x1c\x10\xc6\xbb\x9aI\x08U\x00{\x93\xd2\xb0O\x17}\xb5[\xdb\xf9\x96\xda\x0ck+\x03\x83u*\x9f,|\xa2\xf0[\xeax\xa9\xf0t\xdb\x97T\xfe\x1b;\xc9\xc2/a\xee\xc7\xb0\xfe\xbd\xa9\xe8by\x9bJ/\x1c\xb1\xd8\n\xd8\xb5\x8dwK\xd0mZ\xebR\xbd\x8a\xda%\xe0\x17<\xb1\xf6Q\xd4\x9f\x81X\'\x89>\xd8n\xb5\x11%\xbe\x8aM\x9c]\x16\xe1\xc030\xef\xb4r\x13\xf3\xe6\xb0\x8f\x14k\x97\xba\xed\xd1\x9a\xe6\xf2\xe6\xeaYaC\xbaC\xf8\x1c~ 1\xc0\x07\xa8\x03\xa7zi\xa6K)\x9a\xddF\x1aBs\x1a\x90\x18\x16\xcf\x19\xcf\x07?5\xa6\xb4\xf0\xba\xc4\x8a\xd7R\x89Y\xbf\xfbC\xff\x00l}G\xf3}\xf6\xf8\xab\x8b[HQ\xc6\xb0\x1c\x8e\xe7\x81V\xfb\xb9\xc4\xc2Yn%7s:\x93)fc.[\xa1\xcbu\xc69\xfa\xd2Z\x1cz|\xee\xcd;\xac9\x0c}cq\x05y\n\x01 d\xfb\xd2w\x11^YX\'\xde\xec\xa6\x11N\xc1\xa2\x98\xa8\xdaq\x9e\x8d\x8c\xf5\xea\x01\xa6\x97zu\xdf3\xc7u\x0c\xc0(f\x00~\x1c\xe3\xf5>\xf5\xa06&(\xd1\x06\x01P\t\\c#\xe9\xedV\xc2T%\xb4\x8d\xb8\x04v\xab\xae\x87\xe1\x98\x8b\xa4\xf7BFK\x89\x97\xc8\xd8\xf9\xc9\xc1\x01@\xee\xb9<T\x83\xd9[\xd8K\x19\x85$f\x99\x82[\x92\xc1W,8;\x89\xe0\x83\xd4\x1a\xafi\xfe(D\x8dRH\x8f\xde-bH\xa2\x12\x1d\xca\x1d_.\xcc\x0f\\\x8a\xae]\xf8\x93]{\xe6\x13\xdb\xbc/\x15\xc4\xe72\x05c \x99\xb7\x15d9\nG\xebL\x8e\x9f\x14\xf3<\x93]\xca\x15\x02\xfa{\xec@\xc0\xe0g\x93O\xa3\x14\x08\x12%\xcb\x93\xbfo\xa9\xad\xbfN\xb4\x9fQ\xd3Vx>\xf0d#\xcb-\x81\xfe\xacg\xd4\x99<\x17\xc0\xe1)\xcd\xc6\x95k\xaaJf\x92T\x96\xe1!b\xe6`B\xae\x10\xe7p\xc0\xfc8\xe3\xd8\x8a\xa9x\x0bZ\xd5`\x8bW\xbb> \x92\xd2B\xaa\xe1dm\xab,\xdb\x80\x0b\x96\xceHPIn\xd5\xce\xa3\xe2\t\xaf\xe7\x0c6\xa8y\xdaV\x03\x19S\x91\xc9\xc6I\xe4U\x83Kkej\xae`\x92O1\x8e\xc4.\x0e\t\xdf98\xdf\xde\xa24w3\xdc\xcb\x18\x91\x02\xa6\x02\xb0\xceF@8 \x81\x91\xf45d\xd3"\x99`\x8e\xefO\xbc\x8b\xef\x0b0\x10\xd8\t\x02\xba&6\x99\x07\x9a@\r\xdc.N*>\xec\xeb\x1a\xd6\xb1.\x9d\x1d\xcc\x96\xa2%g\xbai\xa5b\xb1*rY\xdc\x13\x81\xdb\x03\xa9\xc5URi/n\xb6Kt\x96\xe8\xf2\x8cL8\x8d\x17\xb9`\x06s\xf4\x15\xa6\xd8\xe8\xf6\x0f\xe1\x8f\x10\xdf\xc7{,\x0e$\x86\xd8\xc8Ha\x94p\xe4\x821\xd4\x10G\xb5G\xe9\xf1I|\xa5b"4@\xcf*,\xbau\x05RN\xdf\xcaN1\xce)wR-\x91\x12Hu;\xba\xc7\x1b\x18\xf2T\xbb\x008\xe4\n\x83\xb6\xf3Z\xd3Y\x91\xf4\xebU\x8e\xc29-\x05\xe4y\xda\xcc\xe0\x05\x865 q\xfcE\xba\xfb\xd2\x07T\x9d\xaet\xb9-\xedWO\xb6\x13o\xf3\x8cG~\xc7dwd\x0c\x0fV\\\x8cs\xda\x9d]\xddEy\x146\x16\xcbr\xd6\x16\xe4\xc9+\x13\x99\xe6f#|\xd2\x13\x91\xb8\xf0=\x80\xa7\x12\xddEw\xa7\xde;:Gi\xa5\xd9\xb3C\x0c{\x82\xc5+\xb8P\xb9bwn<\xe4q\xc1\xa6&\xba/\xe6-\xb4\xe0\xf9`*\x9c\x0f^\x93\xa9\x88;z@\xee78\xa91#a^X\xb0\x1d\xb89:A\x18\x1bo\xb9?a\x9a\x8b\xd5!\xd1a:\x9e\xabs\xe2\t\xad\xd4\xdcL\xf0\xc5\x15\xbc\xaf3\xa1$nbv\xaa\x83\x9crh\xf0T\x17Z\x8e\xa9\x1d\x8e\x93yk-\xb6\xa5n\xca\xf2O\x11Q\xb23\x92\xac\x8c\x0f\xadq\xc1R}\xf3U\xf8d\xb9\xd5%\xb8\xd2\xaf\xed6#\x00\xf2\x8f3\xcba\x1a\xfe\xf3\n_\x8c\x91\xd39\xcfj\x96\xf0\xdc\x96ZjX(2$Ks\x90\xdb\xb1\'\x96\xc7 \x821\x83\x8e\xe2\x9a\x8e\x7f\xc3\xfe\x1d\xe6\xb2\x10\xb1\xba+#\xab\xba\xb6\x9e[\x92@\xf68\x14\xf4\xf1L\xf6\xf7\n\xb7BA\xe5\x7f\rY\x11\x95O\xf2\x9d\x80\'\x8c\xefR\x1e%\x84X\xea\x1a\x8d\xbd\xb5\x8f\x94\xb1^M\x15\xb5\xb2\xb8\x95rq\xeb\xdaN\xe0\xa0\x0c\x96\'\x19\xabF\xa3g\xa6\xe9\x9e\x1d\xbb\xd5\xc6\x8d\xa7\xea,\'u\x95e\x8c\xb0,\xacK\xb2\xec $e\x8f\xa4c\x04\x0ei\xae\xbd\xe1[\xab\ri\xe6\xb1\xd4D\x96\xd3\x96X\xf1\xb8L\xa8\x17\xd4\xad\xbb\x93\x90y#\x83\x9a\xa8\xde\xd9\xea6\xa5!\x97\xcd\x9a\x05\x94:B\xc4\xb2\x96\xe8==\xf8\xe3\x8e\xd5e\xf8\xe7\xe8\xcf\x7f\x1b\xf4\xff\x00\xe2J\xcc\x0b\xa8\x0c\xaa\xdf\xcb\x8d\xb0F\x0f\xb0\xa8qZ\xc5\xd4a\xb0t\xbc!T+0\xf5+8\xee\x0e\xf9\x07#\xde\x99xN\x0bX/\xb4\xcdF\xf4\xa4\xbal\x17\x0f(\xb5&8\xd0\xcf\xb3\x03v\xee\xdcs\xf4\xc55\xd5oc\x9bU\x17\x16\xb0:Be>LLA\x93o^q\xc5i\x1e\x14\xfb=\xbd\xd6\xf4\xe3q8\x16Q\xa4\xbb\x90\xc9\x1f\x0f\x13\x92[nO\x04v$S\x9f\x15\xe9\xfe\x18\xb0\xb3\xb1\xb4\x8eXo\xaf`\x94\xa1x\x89\n\x90\x02v\xa1a\xcb2\x8c\x00z\xd3\x13\xda\xdf\x0e\x92\xb3\xcf\xa2\x18\x17\xf8\x88\xd2\x11\xaeN\x06\x95\xef\xf2\x06)\xb9/\xba{uV\x8a\x16y\xa78\x8eE\x8c\x12\x91\x81\x96\xc9\xed\xdfsU-N\xee]cM\x86X\xeddu\xb4\x06X\xb7\'\xa7\x05\xbd#\xa7;H\xe7\'\xe2\xab0i\x02\xe6\xf6\xf4\xdc,\xd7W\x1a\x80Y\x11\x8a*\xc5\x18 \x96\xcfM\xb88\xc0\x1dj\xf5\r\xe4\x1e\x1d>K\xc2\x1e)\xe2\x0c\x04\xac3\x86\x1e\x92\x08\xce\xe0\xddGLTf\x9dq\xaf\xcc\xb76\x90\xda\x97\x92i\xe4\xb8\x10"\x0f1\x15\x7f\x1a\x85l\x11\xef\xc7jf\'y\x02\x08f\x95\x9a`VX\x80\xdc6\x9c\r\xbd\xf1\xc5,\x8f-]\x9a4T]\xd1\xc9\xc0\xc19\'\xf5\xe6\xa9\xf6\x0f{\xa0]n\x8ei\x165\x07\x1bq\xf4\xc6;T\xee\xb9\xa7jJb\x9fT\xb5\x9a)&\x85&\x01\xf9vF;A t?\x1e\xd8\xaa\xfd\xf5\xec6z\xa2\xcb\'\x98\x1a)\x82\xb4eAd\\\xfa\x8e\xd6\xeb\x8e\xb84\xd7X\xd6\xefu\x8b\xbbx\xce\xa1q-\xb43K\xe4\xf9\xccF\x03\xe4\x96+\x93\x82z\xf54\xe4P\xc7\x15\xbc\xdey,\xec\xde\x85\x05q\xa8we\xe4}\xa9\xb9\xc4\xad4>Z\x80\xba}e\x81\xce;`\xd7z\xc5\x8a\xc3\x05\xb7\xee\xdfk\x12\xcaq\xd4\x0e\x0fJ\xa74\x10\xc8ff*\x02\xf1\xd7$\x8f|\xd6\xa3k$\xd6\xd1_-\xb5\xc2\t6*\xef\x95R@\xc9\xf8\xbd\nA\xda}\xc8\xaa~\xae\x9a\x85\xd4\x02{\xad:\xd0\xec!\x04\xd1\x8d\xae\xf99\x0c@ \x0e=\x85H\x10\xdb\x8ch\xd9\xc0\xce\x8026\xed\x90\x7f\xb54\x15\x9b!\x87\xa78\x07;\xfe\x98\xa6\xb0x~+\x88\x12h\xe3\x92L\x05f)\x8fH?A\xdf\xde\xa3\xee"\xd5\x12\x17\xb7\xb5rn&\xdf\r\xbey%\xf1\xe9\x04V\x85\xe1\xc7\x9a\x0b7\x92\xd6\xe9\x9d\xd1\xd4\x80\x07\xa5B\xf4\x1c\x7f\x9a\x82\xd5,\xe5\x96E\x9f\xf0\xdc$\x9b\x84\x8b\xc0\xc8\x1d\xc0\xc7#\xdf\xad-\xa1\xd5\xe5\xb6\t+\xea\x1b`\x1f\x8c\xd4vf\x85\xdd5`0\xc1 \xef\xbde\x1e\x1a\x9fW\xd3\x85\xdcw \xfe\xf9\x97\x11\xc8\xa0\x851\xf4\xc6z{}*\xff\x00s\xae\xc7u\x7fs\xa8_\xc4%y\x1aG0\x16!\x14\xc80\xac\x98\xec\x06>\xb5M\xd5\xee$\x87U_\xbc\xab"\xef\x1b\x99W~\xdc\xf5a\xd3$\xf5\xc7zd5?\xfa\xc7\xbd\xb7\x91\xe3p\x13\xc9\xf2\xdbiP\x9c\x82~s\xcdN\x99\xae:\x8c\x8a\xd3\xb6\x84|\x16\xd2\x01\xc1^\x06\t\xae\xdaG\x0c\x11\xa4P\x00Jl\x0b\x1cs\xc9$V\xab\xa0X\xf8WP\xd5\xf4\xb9\xb5{\x82Dr\xab\xc8\xb7\x1b\xa0F\x12.\n\xab(`\x02\xb7%\x8e3\x8e+P\xd5|?\xa2xz\xda\xea\xd3O\xd5\'\xb9\xbb`\xac\xd1yI(\xf2\x83ed,\x07\xee\xc1\xf6\xea{\x1a\xc0t\x99\xe6\x9aI\xae\x1e\xf4\xe2x\xb64hv\x82\x84\x8c\xe4\x0e\xc4\xf5\xabD\xde3\xd4\xaeb\x96\xd6[\xc4S\xf7sjKg{D\xaa\x00f#\xd3\x90\x10.\xe3\xcd[Z\x1b\x15\xb6\x92\xd6[h\xdd\xd00\x8d\xc2\xfa\xc0`r3\xab\xbd&\xe6\xca\xf1n\xe2\xb8\x8a\xec\xaa\x12<\xd8\xf24\xb1S\xe9<\x1a\xde<\x1f.\x9fq\xa4]^2\x8b\xabT\x94\xac\xca\x19\xa2\xb8\x8bp\xc1$.v\xa9\xe9\xb8pA\xe4U\x1b\xc5^\x1c\xb2\xb2\xd6\xadZ\xca\xf9\xff\x00f\xdd\xc6\xb2\xc7\xe6\xa9\xf3"\x04\x95uc\x8ev\x90x\xeaj\xb7\x07\x8al\xf4+\x99e\xd3Q\xad$\x930\x9bY&\xf3\xd7\x0f\x11Ws"\x0fP\x04\x820y\xa4\xe5\xd4\xe4\xbd\x86\xcd./\xbc\xd3\x04L"W#*\xac\xc5\xce1\xee\xccN\x7f*\x87|,\x85\xacv\xe6\xd1$\x9e\x13\xb620T\x81\xb98#P\xecx\xa9]9/?\x1b-\xc2\xdd:\xc3(\xddI\x07!\x97#a\x91\x95=\xc7"\xad\x1a\xf7\xdc4\xbb];\xf6T\x96\xb7\x18\x8a9\x96\xe7\xca\rr\xaf8\xc9\x13\x13\x9d\xac\xa3\x1b@\xf9\xac\xcbP\xf3\xef\x0c"Y\\A\x1a\xe2$\x04\xedg<\x12~[\xb9\xa9\xb9\xe5\x0fm\n\xc2\xcc\xc3\xcb2nT\xe4ob\x08\'\xa8\xe6\x99\xcf\xa9\r>(\x95\x127\x03\'cdz\x07\xf1`\xf7\xf65Ev\xf7r\xc8LAc\x8d\x90e\x01\xf4\x8c\x0c\xe0s\xce1WpF\x91D\x15\x98\xc8\xe0\x9f[\r\xc9\xf7<{\xd3\xad#@k\xb8g6\xf6\x9et\xc1\x0b\x04E,p\xa3\x9cc\xa61Q\x9a\xd6\x8c\x16\xce;v\xb5\rr\xd2\xa1,J,b3\x8d\xa4\xb1\xe79<\xf6\x02\xb5\xff\x00\n\xeb\xb66zD\xed\xa5Z\xe6{\xbc/\xde\x15\x99\\\x10A\xdb\xb7\xf9r*\x97\xf6\x83f\xf7\xfa\xa3k1\xc5s\x03]\xc8L\xf1z|\x90T(\xf4m\xf79-\x9a\x83h\xe6(\xcc\xeb~5\xab\x15\x96\x12\xac4\x9dX\xc0n\t\x18\xc9\xfa\xd4E\x12\xcbt\xf1\xb5\xbe\x94\xc7\xa5\xf5\x03\x92\x009\xc7`s\xb7\xd2\xa8\xe7\xc3\xe9\xa3jK\x10\xbcX\xef\xad\xa4\xde\x02\x84\xba\xb6\xb8\x0e\xa7\n0?\x12\xfb\x9e\x05Zd\x93S\xd5t\xd1a\xa8\x15\x9e\xde\td\xb8\x12:\xaf\x99\x19\x7f\xc4\x80\xf5\x03#\xf0\xf6\xa8\xdd\x01\xe4\x96\xed \xfb\xa0\x99=j\xe1\x9fb`\xa9\x03\xa6\x18\x90ON\x86\xb47\xb4\xf2\xad\xe5\x96\xe3q,\xa3\xcegc\xeac\xdf=zt\x06\xad\xff\x00\x16\xf2\xc4\xc8\xa7\xcb\x0c\xa7![9\x19\xcf\xaf\xb7\xb5)\xad\xa2F]H\x18\x83\x90\xc4\x0ex\xf4\xd2^\r\xd5-!\xd0u\x0b(\xa6K{\xb5\x06c+\xb6\x15\xd5[\x94U\x00\x93\xe8\x1c\x9fzh\xd3x~\xca\xea\xfak$\x82\xde\x0b\x88\x88\x85.wI"\xf9\x88Cm\x07\x92\x84\x91\xb5\x89\xc8\xe9\xcdU4\xd6x\xaf$\xd4\x15bk{9\xa3yQ\xca\xfa\xd5\x9f\x85\n\xdc1 t\xf6\xaa\xfe\xab|\xca\xd2\xb4\x10\x9d\x9b\xdc\xa4C\x1b\x8a\xb3eq\x9e8\x07\x18\xa9v]D\xf96\xb1\xb4(Y2\x10\x91\x80Fy\x07\xfa\xd3\rb\x82K\x97\x12>\x1ce\xb0{\x9clG\xdbj\x81\xd7\xa3O6iUC\x01\x90\xaa\x08c\xe9<\xf2:\xfc\x1a\x83h`\x8ekV\x9a|\xab\x94i|\xbe\xa1H\xc9\x1fQV\x9c\xdd\xdd\xa8_\xbb\x12#b\xc1B.\xfeF\x0f#\x19\xe9\xef\x8aV\xf3\xc3\x97\xd1[\xc1uub\xf6\xe6i\xbc\xb4\x05[j{.\xe2\x00\xc8\x07&\xa4F\x04\xb0\xb1S\xf9\t?\'\x1e\xff\x00\x1f5\x06t\x06Ob\xdf\xf9\xb50\xb4\x16r\xeb0m\x95cS\xe61\x94\x0eNF@*\xa3\xd3\x9ct\xab\x12\xce\xd0\xdcn\x9a\xc5g\xb9\xb8\x9b\xcc[\xb9J\xbe\xd0H \x10=\xfa\x11\xdf5\x15\xa3\xe8O\xa9\xcf,q\xf9H@`]\xd40\x1bO$\x0e\xe7\x8a\x9a\x9fH\xbe\xf0\xc4\x88.R\xd2\xe30\x05VFf \x12\x1b%\x18\xf1\x90q\xd3\x15\x1c\xa4\xae\xbf\x88\x8f*\x91\x82\xa7R\x96\xdc\x8c|\xef\xb74"\xa8>[r\xde\xa1\x83\x8d\x85_4k\xf4{?\x11\xc3\xfbB\xde\xd84>]\xbaH\xa2\x08\xfc\xc3\x95!T\xee\n\xa3\x1c\x1e\xb5E\xd1W[\xd2d\xb9\xba\x87J)\x0bJ\xd6\xfet\xca6\x82H|\r\xe3\xa9\xc7^\xf5d\x8bR\x7f\n5\xbc\xf2YX%\xc4\x80\xdc\x02\x91l\x9a6nT>\xee\x9c\x1c\x8cq\x83P\xd7\xbe\'\xd6o\xec\x1a8\x11\xe5\xf3\x1cN]\xca\xff\x00\xa9\x92K`v\xe7\x03=\xaado\x04\xdaE\xcc\x92G$\x19\xd2\x15H\xfc\xfe\xa0I<s\x8aJ\xc2\xd1\x96x\xd66\x8eL\x13\x9e\xfav\xdb\x03\xe2\x9f\xf8\x87\xc5cR\xbb\x94\\[\xc6\xef2\xfe\xed\xb8a\x12\xed\xdb\xc69R\xbd\xa9\xec\x1aJ\\C\xabj\xfa\xb4>R\x9bg\x92\xd6\x07}\xb2\x92\xac\x033\x0fI\x18\xec:\xf3P\x86\xdex\'\xbb\x9bY\x82\x08.\xe5T\x9e\xd9cU\n\xa9\xb0\xe3`_@RF;\x9a\xe3W\xd7V[\x0bh\xa6\x97r\xa33\x84\x93\xd4\xa8J\xe0\x9c\x9eN~j\xd1f\x86\x19K\xcaZf\x04\x9c6\xc7Q\xee\xdf\xae\xd4\xc4\x8a\xd2\xc6\x8b\x12\xac1\x8cq\xfe\xd1\xd8UJid\x08\xea\x8d$h\xcaA\ny#\xbesQ+1\x85\xe2\x86\x08\xf7\x92G\x1d\xd8\x9fz\x91\x82X\xe7\xd4l,\xe2\x0f*\xcb2y\xd8\x07\x1eNrI#\xa7\xb5[\xd5l\xf4\xb7\xbb\x914\xb4\xfb\xd4\xa4}\xdd\xf2\xc5\xe3\xe7\x9c)\xe3\xa1\xebL\xdcO\x0c+\x11i\x11L\x8d\x80\x83<|\xfbR`I\xa5\x95\x82FHQ\xeav\xe0g\xfa\xd7\x1a~\x96\xda\x8d\xb4\xa8\xf0\xaa\xceU\x88\xdd"\xc60\x80\x93\xc3\x103S:&\xbd\xad\xe8\xda|\x96\x922C\x0f\xdd\x9a\xde"\x0e\xde\t\xdc[ u=\xea\x12i\xe7\xbcb\xb1\xd97\x9b\x1c\x8a\xcdr\xcf\x94\x93nK.\xde\xc4\x8aE5[\xeb\xf3=\xb4\x12\xad\xb8\x9a&I\x0b\x05`rr|\xbc\x83\xb4\x9e\xe4`\xd4\xa5\x96\x19\xa0\x83L\x84>\x92C\xc6NF\xaeT\xf1\xf7\xa0\x92\x93\xc8\x1e0\xe8\x18zXlq\xdcsV\xbf\x0fk\xd7\x17z\x8c\x93\xc2#\xb4\x06\'\x85\xdc\x81\x93\xe6\xf1\x92O\\\x11\xc1=\xaa+\xee\xb2h\xba\xed\xad\xc5\xe5\xc2\xbd\xba\xda\xbb/\xaf\xd3 \xdd\xca\x90\xbc\xe0\x9ey\xa8{\x8dR+M\x8b\x0c\x11.\xe0\xb1\xcb\xb7\xf0\x82\x067{\x96$u\xa6\xd7\xc6K\xcbH!-\x1cR\xac\xa1\x9ac\xcc\x9b[\x8d\xb8\xf6\xa8\xcd0m0\xeb9\xd6Z0r8\xdf\xfbWIQ\xae\xe4\xa8\xc6\x9c2\x8eOa\xfdi]SXI\xee\x84v\xf6\xcb)eUf\xd9\xb7\x04\xf6\x1f\xfbs\xd4\xd5\xef\xc2Ww\xda6\xb5&\x9bsm\x0c\xd6\xd3\xc4\xaa\xae\x08\x0c\x07\xb7=~\xb5V\xd04\xadKu\xfa,v\xebn\x80)\x99\xc7\xa8\xe3\x9fN}\xea\x9d\xe3\xb5\xd64\x8dkN\xd4\xad<\xd6\x90F\x88]rP0\xe9RV\xe2%\x98,\x8d\xabX\xc0\xc9\x1b\x807\x19\xaa\x91\x1c\xad\r\xc4\xed\x95\x08Cm\xfc\xb9<\xd7\xd1\x1e*\xd2E\xa5\xe4v\x16\xb9&\xe1\x95\xa3l\xe4z\xab\xe9\x1f\x0ci_\xb1\xb4K\x1b2\xfb\x8cq\x80O\xb9\xaf\x92~\xceumj\xf2\xfbI7\xf0\xb6\xa0\xd2H\xcc#\xe0:t$\xf3\xd3\x15\xf6dlLq\x9d\x85}#\xd2{Q\xd3\xeda\x86K\x97\x8c\xe7-\xa4|\x0ej\x97\xc4\x97\xf3\xdcG\xd3\xe2\x93\x81\x1e\xb2\x7f\xdc\xc7l\xd3\x9a\xf6\x92V=\xe9Q\x83V\x06\xb3\x03\x8a3^dW\xa4W\x04W)U\xed{\\W\xb94\n+\xaa\xf0\xd1Fk\xb5\xcaL\xfd)2icI2\xd7\rtR{\xa8\xdf\\\x95\xa4\xcek\x94S\x80\xf5\xd8l\xd3QJ)\xae\xe6\xb9N3Ex+\xd1]\xa2\x8c\xd1^\xe2\x8a(\xac\xa5`\'\xb5v-O\xb5I\xa2\x8aT\x01\xedU\xc1A\xa9y5\x1a\xb6\xa7\xda\x96\x8e\xd8\x8c\xfdi\xefJ\xf74\xa0\xa0Q\x9aMa\x00W~]u\xba\xb9g\xae\x9cb\x81\xcdp\xca\x00\xa4\x08\xae\xcb\x13]"\x13\xda\xa1\xbeI\xa9\t\x80) \x84\xf6\xae\xfc\x8c\xf6\xa7\xa9\t=\xa9\xd2\xdb\x9fjRDOj\xe38\xa8\xb1\x061\xc5.\x91c\xb5Iy8\xedF\xc0)\xef$\x8d\xe9\xbf2\x9b\xa2\x1fj]W\xe2\x94\x03=\xa9UP)\xd5LSl\xd9\xa4\x82\x9fjUP\xd2\xc0|Wx\x14\xf0\x14\xd6k\x80\xb8\xa5@\xc0\xaf2+\xca\xed\x14\xa6@\xafA\xceA\x1cRU\xd0\xae\x83\\5\xf3\x07\xda\x8f\x87t{+\xbdI\xe2\xb8\x8e\'\x9f\x12}\xd5\x8e\x19\x9c\xff\x00\x14\x7f\xe6\xbe{\x9c\xe6\x02\x8d\xe9\x95N\x00\xc63\x8f\x9a\xfbO\xed/\xc0#\xc5\xd6\xb0][\xc8\x16\xf2\xcd\x1b\xcb]\xb9\x0e\x0fc_)j~\x0c\xd4\xa0\xb4\x93Q7\x08c\x85\xccR#6\xd6WS\x826\x9ek!\xd5\xa0d\xba\x07F\x95\xdd\x81\x19\xde\xb7}\x1e\xf5\xa4\xe9\xe1\x03\x96t\xf4\xb08\xdb\xb0\xaa]\x9cS$\xeeRW\x85\xb6\x11\xbdN\x08\xcf\xcd\\|7q\x12^\x18noeHD\'n\xd1\xbc\xef\xe8\x0f5M\xb8)\xa7\x97\xf3\xa5\x91\xcc\xc4,k\x8fn\xb59\xe1\xfdF\xda\xce\xfa\xd2\xf2ko6\x0bY\x96Y;\x8d\xab\xceH\xef\xf4\xa90\xea\x8d\xadP\x10K\x10I\xdf\x18;\x1a\xeb6<\xc6\xdf+\x9c\xfb\x82*\xef\xa8G<\xda\x8d\x93I\xe6\xef\x9e\xda2L\xa9\x8f@\xf4\x8cg\xb6\x05Oj>\x0c\xbe\xd2t;\x9b\xa8\xe2s\r\xe6\xe9\xc1\x04\x18\xc9\x88\x10\n0\xe4\x922pj\xf9\xa0\xc1{\xf6\x8b\xae\xdb\xeb\xb7\x8b\x1cvv\x9b\x12G\n\x123\x0c~\xbeA\'\x05\xb3\x80\xa2\x9fx\xc3]\xb1\xf1\x16\xa8\xfau\x9cr$Vv\xd3\xc6\x9c\xe5\x18\x0e?v\xaa85g\x05\x85\xbd\xbcwRy\xa4\xfe%\xf1\x16v$\x91\x82w\xa8R\xf5\x1b\x99n-\xe3H\x94\x18W]\xc1\x07POa\x9d\xab\xe7K\x95[\x88\xa0E\x0b\xe8\x038\xe3\x9cw5\x05\xb3\xfe\xa3\'q\x8c`\x0e\xe4\x0f\x8a\xbe\xdaZh\xcdojd\xb9\x0f&\xd9S\xcb\nU\xe3\xd8K1~98\x1cUE\xa5\xb3\x9c\xa3Z\xe4\xc2\xfb\x7f{\xc8\'p\xc9\x04\x1f\xe5\xe9\x91\xd6\xa8\x9e\xc6[DF2)\x1a\x86N@\xe3\xb0\x02\xb4\xb1]\xa4\xdb\x02uc<~\xf4\xcb\xcb\xb5y&d\xb8\x96&\x04\x1d\x92uf\x07\xaam\xe0qN\xed\xae4\xb8g\x92]B6\xb8\x00n\x903r\xd8?\xc3\x9e\xa4\xe7\x9e\xf4\xda{t\xb7\x04\xfd\xe1v\x06\x07{\x13\xc6zSK\xb8\r\xea3y\xcc\x1c\x84U`\xa3\x1cp1\x8cW?\x15\xe5\xb0\x90\xa6\x90O\xa7W\xe5 |f\x9ev\x01\n\xf7\xa5-\xad\xac\xda\xdfV\x12Cp\x86Di\x84\x10\xba\x95\x11\x93\x95\xcf9\xe0u\xaa\x92\xa4\xf7\xae#\xb7\x8d\xd9Rp\x03\x1cd)\xfel\x7fz\xbeE\xa5\xc6,\xa5\x94\x82\xd1\xa1X\xdc/%\x9f<)\xc7@q\xd6\xa4\xe7\xb3\xb3\xb52\xbd\x8c\x03u\xd4@\x1bq\xb9\x04.\xad\x9c\x06\'\xd5\xf9\xf4\xa7\x9eo2$\xca\xa2\xb6\x9c\xae{\xeb\xe3\x8e\xd5\x19\xd41\xe7n\x0f\xb0\xc5@\xea\xfa\xa7\xdf\x9e\xc2)@\xd9ej\xb0`\x9c\x02\xeb\xc1\xc7\xb5Ixm\xb4\xaf\xda\x10\xea7\xd6qK\x00\x02\x14FM\xa1@`Y\xfaz\x80#\xa5)kmkw \x87P\xd1e\x86\xd9V\x17\xbb\xd4\x146\xe4\x00\x93\xe6\x11\x9cz\x8f\xf4\xa7\x11[\x08\xda\xce\xda#/\xec\xeb\x86v/)\xdc|\xd5\'\xd2\xbb0J\x00Alu9\xab>\x9fmq\x1a\xac\xc5\xd1Y\x94\x8dDpN\xdc\x11\xb8\xf9\xe2\xab.\xb4H\xc2\x1c\x1d\x00\x82q\xc9\xef\xb5w}5\xdf\x87\xb5\xf9\xfe\xf1\xa9K\x1a\xa0UX\xe0\xc4\x80FW\x85/\xd3\x90y\xedH\x9dB\xdfQ\x9d\xfe\xe9\xa7"\xc9\n\xb7\xef\x19\x89\xdd\x18;\x87\x98:\x02\x07\x1cqO\xaen\xf5]6\xda+\x0b\x89\xd2\xf6\xcc\xede\x85NH]\xb9\x00\x90:\x8c\xe4u\xa8\x7f\xbaI\xa7\xcb{}\x0cw\x16\xednC\x08\x9e2\xd1I\x13\x12\x08fm\xb9\x07\xdb\xbd5\xe6y\xd2\xb2#\x96@\xe7Z\x91\x92\xb8\xdf\x92H\xa9J\xa6\x14\x1a\x80\r\x81\x83\xd8\xd4d\xd0\xc5\xe2]F\xd04V\xfakMt\xc4\xca\x18\x84@\x07$\xf5\x00w8\xa9\x08\xe1\xb2\xb3\x8a\xd0D\x8a\x15#1\xc9"6C\x82\xff\x00\x8b\x1czx\xc8\xf9\xae\xb4\xc1m\xaaIa\x04\xc2\x18aEu\x90\xa2\x00\xe7\x7fv\xfec\xcf\xe4)\x9cV\xcao\x85\xa2\xc3\xbaUw\x8c\x10s\x95C\x9c\x02q\xce:T_\xc4+\x9b\x82\xaa\x18\x968\xdb}\xf1\xc0\xfa\xfe\xb4\xb5\x18d\xf5l\x06\xff\x00j\x9b\xd4b\xb7\xb8H\xd2\x0b\xd6\x91CnH\x95wH\xca\x06Ir3\x8d\xbe\xddMZ|\x0b\xe2\xa7\xf0\xc6\xa2\xb1\xb6\xe6\xd3n\xe4\x02e=c\'\x85\x91G\xf4>\xe2\xab\x96\xab\t\x94A,\xd2\x0bU\xc9\x85J\x85s\xce\x01#\xbdw4v\xd7\r\xe5\xdcO*H\x84\x08\xbc\xa4\xde[#\x199#\xa6\x06+3\xd5!\xb6\xea1\xcfmr2\x8e\x84\x1c\xf6<\xed\x9e0x50\x85*1\xdf\x15\xf6]\xac\xaa\xfb\x19X2\xb8\x18 \xe4\x10{\xd4\x8a\xc7\x83\xda\xbev\xfb0\xf1\xc8\x1a\x93\xf8n\xfeW-\xe6\x13c$\x80\xf2G-\x19\'=O+\xfaW\xd0k6\x19\xb8\xcf&\xbc^\xff\x00\xa6\x7f\xa3\xdd=\xb5\xd8\xce\x1c4O\xd9\x91\x87\xe6\xdb>\xdb\xd5\\\xa3S\x1d\'=\xbfJ\x92E\x07\x00\x0f\xad*\x00\x075\xd5\x8ay\xe8\xec\x0f"\xb8\x9bt.U\xc7=kL\x96\xa6+\x0bk\xd3\x1f\xf0\xa4\xfc\xae\x06\xc3\xb0\xaa\xd2\xd9\x91\x93;\x8eEp\xd8Q\\g5\xea\xa3\xc8Fj#]\xf1&\x85\xe1x\x91\xb5\x1b\xccM!\xc46\xb1\x8f2y[\xb0D\x1c\x9f\xedQ"\xb3\xb8\xbcr\xcb\x1f\x97\x17\xb9\x18\xcf\xd0R\x89\x0b\xb6rjg\xcbc\xff\x00\x15F\xf1G\xda\x06\x85\xe1\x80\xd1I(\xb9\xbc\xfe\x1bX\x98\x12\xa7\xdeF\xe8\xa3\xfa\xd6O\xe2\x7f\x1fx\xfb\\\x96\xea\xd3K\xf0\xd6\xa3cb\x84\xab\x94S\xe78\xe9\x96q\xc2\x8f\x85\xfdk7\x83\xc2\xfe \x12K4\x96rFn!\xd8\xc6@\x85\xb9nC\x02r\xa3\x8c\xe6\xaf-z=\xaa\xb4Mqx\x90\xc6\xc0\xb7\xe7]M\xed\xbev\x14\xa4x\x00\xcb\xcc\x87\xfe\xd0\xc3\xf7\xa4|K\xf6\x81\xae\xf8\xc3Qh\xafeH\xed\xe2\xc9Kd$F\xb9\xe0\x1fvo\x93U\x14\x99\x16\xe5\xd6s\x93\x10$\x83\x8e@ \x9e\x86\xb4\xcb?\xb3\x0b\xa9\xe6\xfb\xc6\xa1\xa8E\x1ce\xc9h\xe2]\xcd\x93\xfc\xa4\xe0\ng}\xf6E}\xff\x00_&\x99\xabE(9h\xed\xe6R\xae\xe3\xf1m\xde22{v\xab\x98z\xbfA\x85\xbc\x94\xbaD\x00s\xa5\x8a\x96\'r[\xde\xa5\xc5\xd5\xec\xe3+\x19\x91T\x0e1\xb0\xaa-\xc8E\xb1\x9a\xdb\xc8\xb7c\xbd\xf6I\x82\x08Y8-\xc1\x1d1\xc6}\xe8\xd1\xade\x86\xde\xfa\xd8\xdd\xd8I\x00\xb7bL\xb8\x0e\xa5FAM\xd8\xe7\x8cdsQ\xd2\xcd=\xdb4r\xc52\\"\xaa\x0e\x02\xedX\xc66\xb0\xeaH\xe3\xe9^\xae\x95v\xef\x18Ur\x08/\xce\xd0H\x03\'\x04v\xadR\xcb\xe5J\x85\x9c:\x03\x85\\`\x91\xc0\x1d\xea\xcc:\xba\xfay8\xdf4\xe1%Y\xca(\xbe\xb8\x11\x8e1!f#<\xe4 \xe8>)\xb5\xcb\xea3G3Cp\x98T\xf5yc\x07\x91\x8e\x7f\xcdN\xd8i\xa3U\x92\x14\x84\xacN\x00\x0e\x826\x00\x05\x18\xdcXg\x9fz\x9f\x8b@\xb7\x8fQ\xba\xd3\xa2\xb9\x89\xe3C\x12\xb0W#\xef2\x17\x18\x8d\x00<\xe4\x9eO\xb0\xc8\xa0\xba\xee\xfaAR@]\xf78\x1bm\xf1\x8at3\x1d\x83\x10H\xde\xb3\xad\x1b\xc3Z\xa6\xa7s<\x16\xb24\xd2\xabn\x8cd)r\x06J\xaex-\xf1\xd6\x9c0\xbeu\x11\xc8\xf1\xe62rXa\xb3\xf3\xf3[V\x9d\xa4k\x1a4%t\xfb/)\x95\xe5\x90\xc8fT\t+~\xed\x9c>y\x00p\x17\xafsP\x1ag\x84o5\x19\xda[\x9f\xfa?Iyd\xb8b\x8b\x12\x05\xdf\xe6\xb9\xee\x18\x11\xfa\xd4\xcf(\xdcG\x00\x10\xb9\x92C\xbeT\xaa\xf6\xc7=\xe8\x8ec\t\x94\x99T"\x8e\xcd\x93\xf3Y\xe4\x17O\x1f\x97\x1bC\x97\xdc\x00bx=\xaa\xc55\xc3F\x96\xed\x14\xb8\xc6\xe1\xb9y\x05\x87\x0cx\xff\x005)\xafx&\xfbG\x9ax\xe7\x8b~#I\x04\xf0\xfa\xe2h\xa4>\x87\x04v8=G\x15\x15a\xa4\xdf]"\xc3km\xe6\x93\xd0\xc6\x84\x9e\xb8\xe3\x15V\xf6d\xca\xf1\x1bf\xf35cI\x1e\xaf\xb0\xa9I|\x8d\x1aH%R\x84d0;Wz}\xf8B]\xca\x9d\xccCu#\xf2\xf9\xab\xc6\x93\xad\xc6\xb6\xda\x9d\x94\xda\x93\xc1h\xd6\x93\xb4\x16\xc5K#J\x14\xed\xed\xc1\xf5\x13Qw>\x16_\x0f\xd8\xbc\x9a\x9d\xccQ^H\xa4\xdb\xd9B7\xc8s\xd1\x9c\xf4P*)%fx^x\xd7lq\x07(\xcc\x14\x17\x07n\xe022O\xb7\xb5%\xed\x9f\xa4\xdc\xa4\x85\xf4\xc9$d4;\xfe_f\x0b\xfd\xe9q\xdc\'P\x88\xa8\xf5 `C\xe3\xb8\xee3\xfdkG\xf0\xf5\x9c:\xed\xa6\x9f\xa5En\xd1Ost\x82[\xb6\x9b8\n\x0f\x08\x98\x00\xfc\x8c\xe75)\xac\xd9Zi~\x0fh\x10+\xc8\xda\xc4\xf0]I\xc9Vk|\x85\x07\xfd\xb8<\n\xa8\xe9z\xf4V\x97\x92m\xd4.-\xb4\xc2\xfb\x1b\xf0\xabz\x86x f2\xc4z\x9dF@\xa4\xa5\xd6Z\xe2\xc1\xedm\xed\x1dB\x19%\xb911\x967_31\xbe\x18d2n\xdb\xbf\xab\x0cf\x90\xb0[\'O\x94\xaa\x83q\xe5\xc9\x10l`\xe3o\xca\x07\xdf\xd4~i\xe6\x17-{\x11.|\x80\xe8\xe5s\xb6w\xdc\x93\xf6\xc0\x1d\xea\'J{\x8f\xbfK\x0c6\xefp\xf7\xa8m\xe4P\x82IdG \x11\x1e\xe1\xc3`zOj\xbf\xf8z\xebN\xb0\xd6\xe6\x8e\xea\xc5\xee\xec\xe7\x87\xc8\x8cK\x16\xc9\x19F\x020\x00~<\x0c\x1295\x9aM~ \xb9X\xe3\x90\x80\xf8p\x03w\xc7\xc7qW\xbb\x19,\xad\x96\xc2i/\x8c~Q\x12\xc9\'\xa9\x84`z\x8barx\xeb\x81\xd6\xa1\xda\xcf9{u<\xa4\x82MM\x8278#\r\xces\xbeju\xfcp\xbcR\xf2\x03\xc6W\x0b\x90\xde\xf9\xc8\xdfn\xd8\xadGX\xd2\xaf\xf4\xab/\x0f^\xe7h\x81&X\xe2\x90\x1f0FX\x15G\'\x82\xc1p\x07|u\xa9\xfbMgG\xd4\xe3\x86\xea\r<\x89\xa1q\xb2r\xaa\xa5s\xd5\x1d\x86\x01\xe3\xa9\xaa\xad\x85\xa6\xbb\xafB\xba\x87\x99sui37\x95%\xc3\x04.\xbd\x03\x05s\xdf\xfaUvG\xd7\xed\xf4\x9dKN\x8e\xc8%\xb8\xb9s4\xa5\x86#\xdc\xbb\x1bp\xec;\xfb\xd5\xe4C\xa8C\xd4\xefd\x16\xf3\xad\x9c\xb1#B\x19u\xeax\xd0(\xc1\x03\x03\x8c\xe4qY6Ky\xed\xe1\x89\xee\xa1{\x98\xa5`\xe5\x1f@U\x91\x89*Frq\xc6\x0f5q\xd7\xbcP\xba\xd4\xcf\x04\x17\xb1\x08\x11\xf6\x08\x11\xcedn\xdd:\xf3\xc7\xb5eZ\xde\x9b\xe2\x0bO2\x17\xb2f\xbc\xc3\xccUW\x05"\x04(a\x8e\xe4\x9cb\xa2\xee/c\xd3\xe7\xd6\x12\xf6I\xfc\xef\xbby\x16\xfeATPN\n\xb1=v\x8e\xb8\x1c\xd4\xa5\x9f\xda\xa5\xca_\xea#Rv\xb8\xb6d_\xba,k\x82\xae\xbc`\x93\xce\x1b\xa9\'\xbdA\x11G\xd5o&\x93\xaa\xdf\xb8r\xc0\x04\x1c&\x9c\xe4\x1d\xfe6\xc5Z\xc5\x03\xf4\xc8\x11,m#1\x85\xef\xb1l\xe3\x04\x1e\xff\x009\xac\xeeY5\xe6\x86vhX\x8bd\xf3\x1bc\x89\x1d@\x90\xc6x_\xe2\xdc:u\xc75\xed\xc7\x8a\x19\xda%6\x97\xb7W>_\xfd<\x9eqIc\x93\xf8\x8b\x92\x0eF28<S{-oV\xd3\xe1\xd4"\xb2\xb8\xb8\xb4\xb6\xb8\x93\x12\xbcd\'\xac\xe5\xd7\x0cz\x1e?J\x9e\xf1\'\x88\xed\xb5\xfb}5\xe3\xb50\xdcB0\xf3\x06\x04\xce\xca\x8a\x81\x9f\x03%\xce\t\'8\xe6\xa4B\x9d6\xda\x1f:?L\xcb\xba\xc7"j\x0cw\x03\xed\x8a\x9f,w22\x86P\xd16s"\xbe\n\xe0\x03\xb8\xf94\xcbI\xd1f\xbf01c\x86\x04\xc8\x0f9rq\xf9\x00)\xf6\xb1\xa0[ZC\xba\'\xcc\xbc\x12\xd9\xc0\xe3\xb5Lhw\x97{\xa4D\x9e\x18\x84\x83hg\x18_\xd4\xf7\xa6^!\xb5C\x10E\xbd\x13\xcb"\x92YO\xa0\xa9\xf7#\xde\x89 \xe9\xd6\xb6\xc1\xe5p\xd26FA\xdf?AQ|\xc9\xe4\x9c\x85S\xa7\x9c{\xd5=${(\xa4\x95\x18\x96x\xf2\xc1[\xb7\xb8>\xd5\xe7\x9a\xa5\x16K\x88Z5q\xe9Fa\xbd\x81\xf9\xe34C\xa1j\xd0A\r\xda\xf9SE\x9c\xb2\xe4\r\xb8lgi\xea>\x952\x1e\x1dN\xee)\xa4\xb5,\xf1>\xd4P0>I\xcf\xb5B\x8cC\x1a\xb1\xd5\x97\xc0a\x93\xd8\xf7\xcf\xb5If:T\xaa\x82\x01\xc1\xfa\xd4\xf7\x86|A\x06\x95o}m%\xb1\x85e\x8bb0\x1ds\xf8\x81\xfd)\x8d\xd5\xdd\xb5\xdd\xd4\xb2\xac\x8b\x16\xe1\x8c\x05\xc8\xe0u\xc0\xab\x8e\x9d\xa8i\xec\xf8\x9bG\x0fol=\x03|q\xb9uel\xb6A\xc8=1\xed\x9a\xf3\xc5\x1f\xfaz\xee\xf5\xae-\xd5%i\xdb}\xcc *(\\\xe7j\x95\xce\x0f\'q\xa7^\xf5\xd2\x12E\xecn\xb1\x14\x014\x95$7}\xf9\x03\xe2\xabf\x81^\xe0f\xdd\xd5\xa4\x04\x96\x04\x11\x91\xdb\xe3\xefX\xe6\xa1\xa4Ev\xf2\x15\xb8\x12\xc7\xfc<\x8c\x8f\xd7\x15\x99jzT\xf6\xd3\x84\xb6egi\x1c2.\x08o\xcc\x1cq\xf5\xad\xa7\xc6:)\xd3\x0b\\\xe9\xd6j\xa9\xa8*\xb8\xb6\x8e6\xdb\x14dnP\xa0\x92y\x07-\xf5\x1c\xd5N\xc2\xdbMk\xeb8\x1e\xe27_#s\x08\x97hF\xe4\xed\x91\x899|\x1c\x1cv\x02\xad\xed\x90\xc6\xd2\x97\x91p\x988\x1c0#m\x8f\x15\x19\xa2\x0c\x10\xa0;\xf7\xce\x08\xc5Vmm\xafl\xa2\x8aD1\xa9u\xf4\xabn\xcf=;S\x11\x14\x86\xe4\\\tLr\xa6p\xb1\x83\xc8<\x1c\xee\xc89\xee\x0fQ[\r\xf7\x87\xfe\xf8\xb8\\\x85\xfe^\x98\x18\xea*\xbdq\xa2\xc3\x04\xc2\x18\x90\xbb\xc7\x188e\'\xaf^=\xfehGh\xa52E)I\x07\x0f\x9c\x1andr\x80?\xad{\xabn\rT\xb4[Yf\xf3\xc4\x10\x19\x05\xaa\x83\x87m\xa0\x83\xc1\x00c\'\x14\xea\x0b\x8b\xa7\x97zC\x92wq\xd7\x188\xabt\x9a1\xb5\x83\xce\x84\x04\x90cx\x00\x9c\xa8\xeeG\x18\xaa\xbb\xe9\x17M6\xf8\xe5\xfd\xd39\',T\x83\xf5\xf9\xa8&M7R\xb4\xc0\x81\xcew\xce\xe3\x7f\x8d\xea]\xbc\xec\xa8\n\x9c\x81\xd8S\xb3\xab\xce\xaew(W\x03\x19n\x82\xb8\xb0\x99\xef/\xb7\xc8\xden\xf2\n\xb0\xe7\xaf\xc7<R\xbf\xfazH\xe32I,c\x00\x9f,\x0c\xf29\xe3\xde\xa5t}\x17\xf6x7&\\\x12\xc7\'9a\xfat5\x12k\xa8^)\x96\'$\x93\xe9_\x9a\xb1\x82\xe1\xd9\x93P\xc0\x15\xb5}\x9dk:\'\x86\xa4\x9a\xe6\xea\xd5\x9e9\x07\xdd\xf6\xa3\x86e8\x1b\xdb\x07\x1c\xb1\xed\xd8T\xef\x8a\xfcqo\xaci\xf7v\x07I\xb7H\x99\x81\x8eS\xf8\xb6\xa9<\x003\xcb\x0cg\x9a\xce\xf4\xc1\xa2B\x93D\xf7\x10\x92\x02H\x11\x8e\x19\xfc\xc6\xc7\xa7\x1c\x12:\xe3\xae*P\xe9\xb6\x96\xb3\xb0^X6\xe5\xe3p\x19\xf6\xa7\xed\xeez\xaaZ\x8be\x92\x08\xad\xa4%\x9be$\x86$\x1c\xed\xdc\xf1Q\xe7\xb2\xe9\xad{\xf8\xc6\x86G\xb8] \x12\xcd\x80Wq\x81U\xcb$\x9a\x07h \xb7E\x87w\x19$\x90I\xc9<\xd2\x1a\xac7s\x89wNA_NKd\x9f\x9ez\xf4\xab\x95\xe4\xbe]\xbcs\x86\xe22\x06x\x1f<\x1cTL\x93\x0b\xf8\x11\x96"\xae\xca\xcc\x01=\x15y-\xf01\xcdV\\\xd8\x88\xe62\x891\x9c1\\\xfec\xf0*\xc69\xd9\x94m\xb7\x19\xac\xda{\x88\xed\xa2\x9e6\x83\xcf\xf3B\xae\xed\xcc\xb8e\xe0\xf0:\xf1\xefS\x9ad\xc5~\xef\x8b\x14\xb9p\xa5@e\xdd\xb4\x91\xc7N\xa4u\xc7\x7fj\x98\x8b\xc3fy\xbc\x94H\xbc\xd9\x1c\x13\xd4`\x9f\xe2\xe7\x83\xf5\xa2{\x7f\xd8\xce\xee\x86d\x92\xdf\x0e\xb2\xc6FU\xf3\xc3\x129\x03\xae1Rci\x14@<\xcd1\xeb\xc8e\x199\xe7\x15\xd2C\x87\x19\x19+\xc6}\xf6\xa7\x91Z\xdb\xe9?\xb2u!s\x03\xcf$b\xe9 \x18}\x8c\xaf\xb4,\x8as\x82G\xa8g\x8fz\xacx\x8a\xff\x00U\xd7\xf5\x0b\x8b\x8b\xb9\x19\x96WQ\xe4\xc6\xb8@\xd8\xc6I\x1dX\x8ao#_-\xdc\xae\xa42*\xa2\x9fF\xd0N=\xf1\xce;\xd3\x86\xfb\xb9\xf44\xdeS\xf2\x1eV}\xb1\x82@P\x00\xee\xe0\x9e\xd5k\x0bJ\xcd\xa5\x0b\x08\xe4\nJ\x16\xd4\x0bc\x9f\x8f\xb5Cx\xe3\x1e\xa9\x002.\xa1\xabN\x08\\\xf1\xf4\xa7\xbe\x1a)\xa1\xdb>\xa1$\xf0\x08\xa7\x9cZ\xc7\x1e\xec>Qw\x92\xcb\x82v\x9eAo\x8e\x95~\xd4\xed\xb4\xe5\xd0^\xfd[\x0fw\x12\xb0k\x92c\x91\xa1\xd9\xc8u^Y\t\x1e\x901\x92*\x85\x0e\xa3n\x93\xe9\xf6\xa9\x18\xba\x83Ng\x92\r\xf1\x80\x93\xce\xf2\x02\xcd \'\xf0\xe0c\x8e\xb8\x15X\xd6<A<\xb7\xdfu\x82P-\x9b\x0em\xf8UM\xa7\xf0!f9A\xd8\xf7\xf6\xab\xf8\xee \x8e\xdd\xa3EG>^\x08\x1b\x90\xf8\xdc\x8es\xedU\x12D\xef"\xb33 \x0f\x9d\xbf\x99s\xb0?\xd6\x91?v\xbb\xd4\xd6+\x99dpv\x00\x8c\xac\xee\xc3\x18\xcf<a@\xe9S\x16\xe6\xde\xce\xecIj\xb1\xc2a92\xaf\x07#=A$f\xaa\xd2\\\xcd\x14\xcaZ\xe4\xcd4\x81\x15\x00m\xf8\x8d\x01\xc0\xcbt\x034\xde\xda{tk\x94\xf2\xe5b\xd2e\x86\xf1\xf8\x88\xeb\xd0\xd5u\xc4P\x94F\x8eS\x18#\xff\x00s\x18\xcbg\x04\x13\xbe)&\xe7\xcbw\x0cT\xe9\'l\xf6\xc5M\xea\x17\xb0\xdb\xef\x05&y%\n\xb1*\xe3\x0e{e\x8fA\xf4\xaa\xad\xca\xdc\xcf\xbe)|\xc2\xa0\xb4A\x90n\x8c0\xc7q\xd7\x1d\xcfJ}q\x04\x97\x16\xae\xa6\xefca\xcch[\x0c\xe1x\x1f\xd4\xe0\x01\\6\x91w\xe1\xe9\xac\x13P\x9a2n\x11n$\xb7-\x9d\xaa\xdf\xc2\xfe\xc7\x8av\xdd\x02\xda\xef\xe8\xc9S\xa90s\x9d\x81\xce\xfb|Uk]\xcb{u\xe5\xc4\xe5QG\xa8\xd5\xeb\xc3Z0\xd24w\xbd\x9d\xa3\xbb\x88\x8d\xd2\x04uM\xb2\x9e\x15\x1b\'-\x8cd\xe3\xa6j?S\xd6\xee.\xa4d\x13;#\xed\x06VP]\x10p\x14})h\xad\xe1\xd5!\x8e-<-\xb9\x96DW_3\x10\xbb\x9f\xc2X\xb1\xe3\xe4\xf4\xa8\rQ\x84D\xdb\xc7\x08\xcc^\x99YN\xec7C\x8289\xedO\xdd\x85\x95"\x8e \xcf\x92\xba\x9f\x1d\xc0\xe3lm\xfd\xea\xce6{q\xa4\xb8\x18\x1e\xfb\x90{\xfdj_Q\xf3m\xac.M\x9d\xc9h\xc2\x00\xcd\x8c\x16-\x81\xcf\xcdT\xb4tY\xc6\xa4\xf7\xd7R\x08\xac`.\xa5\x07\xfa\x8ep61\xfe\xe4S\x8dn\xcbU\xb6Y7Y\xcdm\x14\xbbV8\xe49e%A\xf5\xff\x00)\xef\x8a\xe2\xf3T\x85\xf4[\x1d9Q@\xb5RZU^\xac\xc7\xf0\x8f\x81\xfdi\xcb\x0bca<\x90]\xc7\xa2@r\x88s\x821\x81\xcf\x03~MC\xbc\xbcY4\x98\x9c\x1dC\x19\x1b\xe3\xe7jv\x17N\xbc\x82\xd0\xdb$\x91\\d\xf9\xc1\x98\x18\xdc\x13\x95)\xdf\xea\rX\xf4\xc5\xbd\xba\x9eR\xf0\xa4\x85\xd7k;\xb79<g\x9flqQ\xd6\x16\x10\x1bxn\xa3\np\xa5\xd8\xf4\n\x00\xf6\xeci\x0bM}\xb4\xf9\x8d\xdc\x0b\x04\x9e\xa6TI\x0eNH\xc6\xec\x0f\xe9R\x84/\x89\xa4\x11p\xa3Q\x04\x0e;\xfbo\xfb\xd4ma\x1a5i7\' o\x81\x9a\xb7\xc3\xe2k+\x19\xed\xd2x\x84\xfbr\x8c\x83\xb1\xe9\x9f\x93Z\x1e\x87-\xa5\xc3\xc2.\xed\xa1{Cp\x19\x9a@\x1b\nzp}\xab/\xd2\xbc*\xedeo\xacL\t\x89\xe5\'9\x1cc\xa9\xc5Z~\xf76\x0c\x16\xe8\xd2\xa4\x8c\x08\n2\xc7\xf4\xaa\x9b\xbb\x99\xed<\xa0mNuf3\x8c\xe7P\xc8\xcf\xc1\xabk{d\xb8\x12\xa3K\x90\xeb\x87\xc1\xe3\x15\xa0\xe9\x9a\x96\x89\xe1\xbf\x19\xcfp\xd1\x89 t\xdbm\xe4\xff\x003c\xb0\xaf\xa5"\x97\xcf\x8a96\xe3z\x83\x83\xdb5\xf1\xff\x00\x87\xad\xee\xf5\rr\xc28bE\xba\x8aee\x8ep@;y\xe75\xf6<\x11H!\x88H\xa08Q\x90:f\xaezT\xd2M\x04\xac\xd1\x04\x1a\xf2\x00\xf7;\x9a\xc5\xf8\xae\xde\x1b{\xcbeG,\xfeH\x0cI\xec\xbb\r\xbek\x8a\x07\x1d)\xc7\x95\xf1^\x18\xea\xc0\xd6hR\x1b\xc8\xa3x4\xa1JD\xa7\xc5&\x95]dQ\x9aH\xee\x15\xe6\xff\x00z+\xb4\xa1?5\xe6\xea\xe0\x9a\xe0\x93E\x14\xe35\xe1\xa47\xe2\xba\x0e(\xcds\x15\xd1\xae\n\xd7{\xc1\xae\x86\r\x14R\x1biE\x14\xb0Z\xf7ev\xb9\\\xa8\xa5\x00\xa0-u\xb6\xbbEq\x8a)CE\x15\xca\xcd\xd5\xd6\x95\x0e*\x14L\xd4\xaa\xca\xe6\xab\x83T\xd2*[x\xf7\xa3"\x98\xa1sN\x91\t\xa5\x02i4\xa8\xe6\xbb\x08\rz\xb1\x9a\\&)x\xaef\x93X\x87\xb59H\xd4W\x1c\n\xec\x1a4\x8fj5\x1fzr\xbbE+\xbcb\x9ag\x15\xe1zX\xda\x92~\xb4\xe4\xb85\xc1"\x9b\xee&\x80M\x19\xa3\x14\xedM*\x08\xf7\xa6JX\xd2\xeb\xf3J\x14\x93NCW`\x03M\xc1\xa5W5\xd1\\\xa5\x80\xafq\\\x03]\x8c\xd7qEy\xb6\xbd\x0b^\xe4W\xa0\xd1Ez8\xaf\x98\xbe\xd4\xf4\xd3\xa0\xcd\xaa\\\xcbo\xe6[\xea2#G(8\xf2\xdb\xf8\xb2?\xcd};\x8f\x8a\xae\xf8\xa7\xc3\xb6\xfe(\xd1\xee\xb4\xe9\xce\xd1*\xfa_\x1c\xa9\xa8]B\xd7\xf1V\xee\xa3\xf3\x00J\xfdqV\x1d2\xf4\xd8\xdd$\x9c\xa1\xc0q\xee3_\x9fQ\xfd\xcfRi#\x96|\xc7\x17\xaa6\x03-\xb8\x7f\xcdAjO5\xaa\xa4\t\x1e\xf1&\x01LrI<t\xeb_Lx_\xecm\xb4\xddsR\x87_\xd3<\xeb\'\x80\xbd\xbd\xc4R\x95\x01\xf7c\x9cw"\xaf\xb6\x9fd\x9e\x0c\xb0\xbf\x86\xfd`\xb8\x95\xe1}\xf1G,\x9b\x900\xe8H\xc78\xac\x1c\xdd\\\xd8\xddK\x04\x91H^%\x04\x07\xc0\xceFGz\xd1\xdeuk%W\x08\x0b\x16\x19\xca\xee7\xedT\xef\x0c\xebW\x1fg\x9a\x0e\xa2\xd7\x97`\xdc\x1bk(m-V\x12\x04E\xc6\xe7r\x0f\x0c\xca\t\xe4\xd5*\xea\xe9E\x82j\xb6\xb7l\xf7\x0e\xf8\x12\x1961\xda\xd98Q\xc8\x0c\rj\xdfi::_x}\xf7#m\xb6\x7f4\x94]\xd2p\xa4\x0c\x0e\xff\x00J\xf9N[\xe3k4\x16\xce\xd1L\xc4\x9f-\x93\xf1\xa1 eH\xec3S\xbaWY\xea\x1dS\xa6\xc4\xf2@\x0c\xb6\xbe\x97 \x8dZ\x9b\x92\x07\xb7\xb6\xd5\x13\xa7\xcbl\xcb+\x8c\x99% K\x9e08\xa9In$&\xed\xa4\x94\xf9\x97[\xb7\x82N\xe3\xbf\xb8#\xfa\xd2pMj\x0cv\xea\xcd\xb0C\xea\xc8\x00oRr\x06;}i\xb2\xc9\x18\xdd\x0c\xe0\xab\xe7p\xc9\xc3)\x1d\xbe\x95\t>\xa7\x15\xbd\xe1y\xe7\nQ\x82zNx\x039c\xde\xa7\x07\x92E\x7f1s\x92q\x19\x1a\x98\xe7\xb8\xc5XEs\xe5I\xfe\xdc\x0c7\xdb\x8a\xbcO\xa6\xd8J\x8b\x1b\x10\xce\x01a\xb1\xc3+q\x9cW\x16P\xda\x1d\xcb ,N\x02\x8c\x8cu\xc0\xc5T-\x9a\xeeY\x9b\xc9H\xd8;\x03\x00V!py\xeaif\xbc\x8e\xd5#\x04Je\x0cK\xa2\x9d\xb8\xc7uny\xcdG\x8a\xc6R\xef \x90\x18\xd9\xb0\xb9?\x97\xe9\x9cT\xdf\xc5\xa9#\xdb\x1b\xd5\xaa\xe2\xcc\xac\xad\xe4\xdd\xack\xe6\x87m\xa7oN\xc7\xe9O/5\xa84\xfd6\xf8\xc4\xb2\xdb\xcc\xd0,K*\x9d\xf9\x0f\xc4\x84\xe7\x18\x0c:|\xd5\x0e\xd3\xc40j\x177\x11\xc2\xd2G\xb0)-#\x06m\xe7\xaf8\xe4}jV\xf3\xef\x92D\x89,"@S(\xfb2\n\xb1\xc1$\x8fl\xf1\xc5*\x08\xee-n\xca6\x01RFNN\xc7\xd8\xf6\xe6\x9c\xf3\xa3\x96<.\xe0\x90H\xed\xc8\xe7\xe2\x9b\xd8\xeb\xc1\xac\xd3K\x96\x12\x90\xcbp\xb3M0bd!A\x000=p\x0e\x061Wm+\xc4\xbaE\xbe\x87\xab\xe9\xcbk.ev\x16\x97\x01T\xc8\xb1\x12p\x0e\x7f\\VM\xadXj\x1e\x15\xbc\x8e+\x81\x98n\xe1\xf3\x10+#\x96\x8b9\x0c\xa5O+\x9e\x82\xbc\x8b\xc4:k\xc3\x18IB\xc8\xab\xb5A8\x19\xf6=\xea\xfe\xe5\xef hr\xa7PQ\x19\xca\xe7\x0b\xbfn\xdc\xd4Q-\xa9,\xce\xcb\xeamG\r\xc9\xf7\xcdj\xf0\xdf\xdb\xcc\x8f%\xd5\xf5\xcd\xcc\xaa\x08\x8a\x17e\x88\xb2c\xd3\xb9\xc1\xe0t\xe1~\x95\xde\xa6,\xa0\xb7\xbak\x19\x84Wm\x03\x19\x07\x98g\x8e\x06\xc6\t\x1b\xf2\x08\xc1\x1c\xe0\x91\xda\xa8/\xaeEh\x02\xdeik\x13I\x17\r,l$ea\xe9e\xdc@\xe3\xb1\x02\xa3\xef\xfc\\\xf73\x13<\x8c@\x88e\x17\x18\xda\x08\xf4\xe0c\xf3\xf7\xa8\xb1:\xdb\xe4\xc6\xa1\xdd\x9b \x85\xce\x0f\xb9-\xde\x97$\x91M\xf9\xa4\xc2\x01\x8cj\xc7\xf4\xa6\xd6\x1eD\xa6d\x9ay\x1aD\xe0\xca\xa3\x86?${\xd3\xf9e\x921\x1b\xac\xb2K\x1c\x92f@\xd8b\x0e0\x0e~qTk\x0b\xfd\xcbr\xe5\x9cBd\xc4\x85H\x04\xe4\xef\x1c\x0flsW\x85T\xba\xb4\x08\x93\x08\xe4\x8b%Y\x17-"\xbf\\\x92y\xc7\xb6)?\x84\xd2\xf2jb\x99V\xe7l\xd4/\xc4\x86ud\xdf\x81\xb5],\x04\x171I*\xcaN\xe4\xdb\xcb\xeen\x06\x14c=>\x05W\xe7\xbc\x8a;\xaf)K\xa3n%\xd8s\xb4\x13\xdf\x9e*\x1a\x7f\xff\x00*}\x91\xdc\x1b\x98\xd6M\xb1N\x17b\xb9\xeaY\x86I\x18\xe3\x1e\xf5-=\x9b\xde\xd8\xcbv\xb0\x17\x1f\xfdY\xd5\xd7\x05\x8f?\x84s\xd2\xa9\x7f\x00\xd0I&\xb0e\x0er\x089\xc0\x07\xdf\xe9SM\xde\xb4;`\x81\xde\x8b\x1b\x9b\xa2\xe94WL\x1a\x17\xf3|\xc1\xcbG\xb4\xf0\xc0\xff\x00\xcd}\xcb\xe1\r~\x0f\x12\xe8\xfa~\xa2\xcd\x912m\x9fh\x03\xcb\x99?\x1a\xb7\xb6s\x95\xf85\xf9\xfe\xc1m\xe3\x8f\xf7\x93B\t?\x85\xff\x00\x1a\x100\x18\x11Zg\x81\xbe\xd15O\x06Zj)\x04\x96\xdbnU\x14\xdb]\xa9;\x9b\xaa\xb8\x00\x8cpz\x93\xd2\xa1u\x1e\x89o|ci-\x96eA\x96\x1aA8;\xecOz\x81+H\xcaB9G\x07l\xf1\xf7\xaf\xbb\xb4\xeb\x9b{i\x88,B9\x00\x12x\x1fZ\x8e\xd7|A\xa5\xe9\xe5\xae/n\xd2\x18\xf1\x84\xdd\xf8\x9f\x1f\xca\xa3\x96\xfc\xab\xe4K\xef\xb5\x1f\x18_$p\xc3\xaaAhrL\x91ZB\x88T\x0c\x11\x89\t|\xee\xcf\x035U\xba\xf1]\xf2\xcdu%\xe4\xf2^\\9+\x99d\xdc\xeb\x8e\xc5\xbe=\xaa\x81z7W\xff\x00O\x8f\xa7\xbb\xdb\xc1j\x93y\x8a\xa0\x12\xfb\xef\xa4\xe0`\x00Mqb_8\xca\xc4\xea+\x82{}kn\xf1\x17\xdb]\xd4S-\xbe\x8dd\x96\xc1\x99\x94Mv\x9b\xe48\xe8\xdbA\xda\xa3\xdb9\xacC\xc2:\x9f\x885\x9f\xb4\xad>y\xa7\x972\xcd#\xdcH\xe3%\x91T\xb3.H\xe8\xd8\xfc\xbbU;X\xd7&\x9a\xe2\xdd\xa4\x8a9\x1c\x05_\xc5\xb3\x8cd\xe2\xb5\x0f\xb28SU\xf1[\xdc\x88\x9c%\xa5\xb3\x00[\xbb\xcf\x98\xd7\x9e\x9d\t\xab\x1b\xcb8\xfaoD\xbcs\n\x12\xd6\xce\xa1\x8f\xabw\x1aF>\xa6\xa3_\xba\xc7mp\xca\xfb\x05?\xae8\xad\xf2I\xe1\xb5\x1ecH\x8a\x18`\xab\x0c\x9f\xca\xa0?hC;6\xd6,@\xca\x80xe\xea?:\x88\xd5.\x95\xd9\x92I\x15\x0c\x0c@\x04\xe0\x86_\x7f\xadEXN\x1022\x83&\xdd\xa0\xe7h\nI\xe5\xbd\xf3^w\x15\xa35\xb2kv:\x06\x00\xec2sXh\xee\xd9u\x11\xc9\xab|:\xc8vH\x1e2\xaa\xea\x14\xb1\x18\xc1\x1d*Nh$\x1c\xab\x1c\x1cr\x07\x7fj\xcb\xfe\xf7\'\xfe\xa0\xb0\x86k\x9f\xdd\x19\x82\x93\x8d\xa3\xaf\\\n\xdf$M6\xdeha\x96a\x1e\xe8\x95\xd4\xe4\x95\xda\xfd2Fy\xa4\xdct\xd7\x8d\x90\xc4\x00%5\x10x\xdc\xe3\x93G\xe2\x19\x81\x0c\xdc\x9ek\'\xf1\xcf\x87\xeco\xf4V\xd5\xa6\x81\x9a\xe2\xc0+\xbc\xa3\xf1\xc9\x018e\'\x9c\xe39RzV\'kz\xb6\xc5\x12\xde\x18\x8bI\xc4E\xc0b3\xc1\xc8<t\xe7\x9e\x95\xf4\x7f\xdalp\xc5c\xa3\xdaZ^*&\xa2\xee\xb3\xfa\x88C\x1e\xd2w\x13\xdb\x04W\xce\xda\x86\x90\xfau\xe4\xbeu\x84\xc2\xd9S\xcb\x8eX\xa3\x0c\xden\tPA#\x86\xf7\xee:q^\x8d\xd0zE\xfc\x1d5\x0c\x92j\x0b&\xcc\x0eB\xe4d\x00}\xabo\xe1\xab\x9c\xda\x94\x92L\xfa\x8e\x85<\xe9\xab5\x9e\xb9\xa4\xe8\xfaq\tlf\x9ad\x91!y\x08T\xdd\x9c\x07\xe3\'\xaf\xebJYC\xa1\x9d2\xdbP\xbd\xd5&K\xa9.6(\xb7R\xcc\x10\xfavd\x8c\x00:\x91\xf9U.\xde\t"\xd4\xad\xde[I\x95a\x9e0\xc6B\xbb\xa3\xdc2\xbb\x81\xc7\\d\x03\xda\xb4E\x166\xf1[&\xa0\x97\xf1&\x9b\xfb\xdb\x84\x8aH\xccR\xb2\xe3l\x90\x89[\x0c\xd99!Fzg\x8a\xd0X\xf4\xe6\xd4\xceaP\xc0i\x05\xc1\x00\x13\x81\x9c\xed\xc7;\xd6\xc1\xe4\xfe\x16\xa4c\x8c\xe7\nFH\x1d\x86}\xea~\xcav\xd7,f\xf2u\xa8$\xb6\x92B\x1bM2\xc5\r\xcb\x98\xdcm\x91KmT-\x8c\xf22\x17\x8aOV\xb0\xd3\xecu\xad>\xda\xe2K\xc3m\r\x82\x06e\x9dX\xccz\x84Rp\xa3\x93\x8e3\x8a\xcb\x86\xb7\xa7L\xd70\x9bC;\xbb\xaa[\xce\xdba_Q\xf5L\xe8\xb8\xcb\xf3\x9e\xb5n]~\xfb\xc4\xb1\xc5\xa0[\xdb\xe9\xf1\xdbB\x00\x8e\xf1fX\xe3n\x02\x99\x1b>\x95\xf68\xe9\xd0f\xac\xda\xde+\x8bk\x8dE|\xc8\xd9\x15\x06K\x19\x1bs\xa7\xbe\x01\xf88\xa6CK\x0c\xb1\x923\x1b\x87.v]\x03\x03\xd5\xf2~\xd9\xab\x8f\x89g\xd3\xd8iP@o-\x06\x9da,M\x0c\xed\xbev\x90H\xc4\xc6vq\x8c\xf0\x0fz\xb0\x8du|-\xe1\x94ab-\xcc\xccE\x92\xbe\xdf5\x831,\xd2\xaa\xf1\xb9G$\xfd\x05T5-\x16-2\r.\xee\xeb]mE.nJ]\xcdgl\xce\x02\xc6\x83\x01\x1b\x001\x18\xc7A\xda\xb3\x1f\x14y\x91^\xcbmk\xa9\xf9\x96\x919{wc\xb7\x02E\x05\x90\xaeN\x0ez\xe3\xbd2\xcdu\xd3\'\xbc\xb8e\x11\xc9"\x05C\xa9v\xca\x80\xa4\xa8\xce\xd8\x1d\xbb\xd41\x1d\x9d\xec\x10F\x18\xbcH\xec\xef\x95m\xc8c\x91\x93\x8e\xe7\xbfj\x90\xb4\xd5$\xd6\xb5)\xe5\x92FS+\xb4\x8dp\xde\xa6`\x06T\x0e\xec{\x05\x18\xc9\xefW\xef\x06Aqs\x0e\xad\x03[\xd9H\xf1\xd9Ip\xf6\xf3\xdb\xf9\xdekD\x7f\x80g+\xd7\x9ek%\xf0\xac\xbas[\\-\xf4\xf3 \xf2\xc9\x8a\xe21\x93\x19V\xc8*\xb9\x1b\xb3\xf8O#\x15+.\xbf\xab\xb4R\xdc%\xdc\xb1\xbaX\x9bF\x90\x15VxX\xed\xc3m\xc6\x17\x9cT(4\xa5\xd4SN\xba\x8a\x96\'I\xf5\x10F\xfa\xbb\xfc\xfc\xd5\xec\xb6\xcd-\x9b,,\x13\xd24\x92= \xf6\xc5Ij\x13X\xeaw\xcd-\x9d\xab[F\xd3g\xee\xc5\x02E\x12\x15\x07\xd2A\xc9\xe7=\xab\x89\xec\x96\xd4\t\xff\x00\x12\xb8`6\xbeTt\xce\xe09\x02\xa1\xbe\xf2`\xdc\xcaw\x0f-0\xc7\x83\x9e\x94[\xea\x17\x11\\\t!}\xa7\x93\x94>\xe3\x1f\xd8\xf3U\xb7\x16\xec\xd7O3\xa0E d\'\xbf\xbe?\xb5J\x8e@\xb1\x88\xd5\x8bi\xe3V\xfc|\xd3\x97\x82\xd5H\x98D\xdd\xc0\'\xe3\x83\x8a\x9c\xd2.\xde7\x11I\x02M\n\xc8\x92\x98e-\xb4\x95\xec@\xc7\xe2\x1c\x13\xd7\x14\xce\xd2\xd4=\xbb\x8d\x80(\x18\x03<s\xda\xae\x1a^\x91\xa5_]^\xdc\xea:\xb4z\\\x11\xc2\n\xc6\x1f$\xb7M\xa3\xcc\xc9*\xa0s\xde\x9aH\x19\xe6A\x18]g`\t\n1\x8d\xf3\x9d\xb1]\x92uDma\x8a\x0et\x82O;`\r\xf3V\xab\x18\xee<_\xaeZ\xd9\xa1\x9d\xe3\x11\xc2K7\xee\xd68\x89\xcb4)\xc0\t\xd9@\xec*\xd9wom\xa1\xf8\x82+\xcd7L{\xbb\x1b\xbcAwn\xe1\xb1\xbd\x18\x90A\x938e \x11\x9f\xa7z\xc1\x92\xf5\xf4\xdb\xa9~\xeb\xaa\xbc\xd6\xf0\xb3y3\x8d\xc8:~%\x04\xf1\x9e\xdf\x15#w\xe3;\xd2\xd0<\xe8\x9er\xcd\x13}\xe1\xc1\xdf\x98\xbf\x0e\xe2\xa7\x91\xf5\xc9\xf9\xa9\xb6\xddR8\xcc\xa2h_\xf1\x1ez\xb8\xb8\x041\x18\x07\xd2\x0e\x0e\xdc\x8d\xf9\x06\xa1]t\xb6\x94\xc7\xa2U\x16\xe2\x02\x9eF\xeb\xbb\x7f1\xe3~\xe3\x8cS\x8f\x17N\xda\x9e\xa34\xcf\x1c\x10\x9d\xb2\xec\xf2|\xac\x1fW\xe1$\x11\x9e\xbf\x95f\x1fz\xf2d\xf2\xa4R$\xce\x0f\x00\x0f\xfb\xd6\x91\xa4^\xa5\xe1\xbf\xbb\x96\x0bm\xd7,\xf2+\x00\xab\xe5\xf2X\x84\x12\x06\xc09\xe3\xbdSu\x8d6\xe8\x06i\xaceE\xde[\xcch\xb1\xe9=H+\x80>\x94?\xfe\xac\xb5\xd9\xc9vv$\xe0\xff\x00.\xd94\xf4r\x88\x02@\xaa\x02\xa2\x80\x06j\xbd\xa8<q\x95\xe1p\xc3\xf2\xcf\xfc\xd7Zp\x9aR\xd2\xefT\x85\x06\x0e\xe7\x19\'\xb6\xd1\xd4\xe6\xba0\xe9\xec\x17\x99\x9c\xc7\x82\xd2 \xe1\xb7\x1c\x0c\xe4\x8d\xb8\xf9\xa9Xn\xe5W]\xd0\x80aR\x1c\x14Pv\xbf\xb6\xec\xf5\xf7\xa0\x05X\xdaF,@\xc1\xc0\x19\xe6\xa5\x895eA\x035n\xf0\xf5\xc1\xb6\x96\xce\xe2\xcb\x06\xe6+\x95TG\xc3!,q\xea\x07\x82\x0epsW\xef\x19\xe9\r\xe1\xd7\xb3\x8e[(#\x92xW\xefo\x03f\x17\x90\xbb8@\x87\xf0\x80\x00\x1c\x0cV{\xe1\xa5\x91\xcd\xf3\xb4\x0c\x96\xca\xad\xb4.\tW\xe8\x81\xb3\xce\x0f \xd4\x96\xa9\xac\xea7w0\xddM9\xdc\x18"K\'9\xda\xa1\x7fL\n\x82\x08kk\xc8\xe5\x8eOYV\x85\x93\xf2\xed\xf9\x8e\xe3c\xb0\x15\x1c\x86K\x9bwGM(\x18H\x08:\x98\x9f\xca2;\r\xcdhv\xde\x0b\xf3tkk\xc7\xbb\xb6\x8e7@\xeb\x1b\x96\xc2\xee\xe0\xe1GC\xf1P\x7f\xb0%\xd1\xa7\x8e\xe1\xa3A\x1f\x9e\x00\x8eA\xf8\xf9\xe0\x15\x07#4\xf2\xe2\xea[}"\xce\x195t\x9a \xfen\xc8@\xca\xb1\x1cg\x81\x91\xc54\xb3\xd4\xf5\r~\xf2\xc2\xc4\xb2\x03!D\x0cQQ\x9b\x00\x9c\xfa@\xf6\xeai2E\x04\x01\x1a\xde\xd6E\xb8x\xd4\x0c9r\xcew\xeep\x05\x114\xf3y\xbem\xc2\x18\x839#N\x9d(=\xb6\xdc\xd3+\x84\xfb\xad\xa4\xba\x84\x97\x96\xaa\xbek7\x93(\r\xb86w\xe0\x0c\x15S\x8c\x029\xcfJ\xa7\xdc\xea\xb1Au\x8d%\xe3\x9a\x05\xdeAd\xc3\x1f7\x99#\'9+\x9e\x99\xe9\xf5\xad3\xc5\xbe\x00[[\x19Z\xe3V\xb7\x88\xc2\xa2@\x92\x17\x11H\\\x11\xb7#\x9c\x83\xc8\xac\xd6\xcf\xc2\xb7\xb1\xc3b\x90\xc7\xb4\xb9\xf4\xdc\xc8<\xb4\x93\'\x97\xf5c\xd23\xd7\x15,\x9e\xa9\x1d\x9c\x10\xf9Z%]\x8a!\xd6\xf9\'}X\xe0\x13\xfd)1Ke;\xb4\x89&\xb8\xff\x00\xde\xc3J\xf1\x91\x8c\xf3\x81KiZ\xa5\xe6\xaf\xe2\x1b\xeb\xc4\xd5-m.\xe2\x89\xe6E\x95\xfc\xa0\xa5}$F\xc7#\xd08\x08\xddEW\xaen\xac\xfe\xf4\xf3&\x9f\x16Q\xc9\xc4@\xf9D\x8e\xb8\xcez\xf54\xce\xf7K\xf1\x16\x81\x7f\xa8ZMed\xf1\xddN6\xde4a\x8a\x8e\xa3\xcbpz2\xf3\x8a\xb8h~\x1b[\x91\x14\xce\x8c\xa1b\n\xde\xca{\x93\xf2j\\\xf1\xcc\xa2\x0bx\xb7\x99\xc1\x96`\xd9\xc8s\xb1\xce\xc3\xb8\xae!H\xc4\x92\xb0\x02<\x05\x8c\x8c`\xa8\xe3\x184\xde\xee\xe1\xeeeF\x81\x08-\x809\xc0\xfaqW?\x0fxx];\xcbuuo\x0c\x88\x99\x91\xe7p\x91\xa4c\x9c\x9c\xf2s\xec95\x1c\xbf\xb1t\xedB\xcb\xce\x8c\x1ba(\xf3\xd9[l\x8a\x9c\xee*y\x19\xa8\x8dSS\xd2\x17T\x9a\xe6\xc2\x03\x05\xbc\xa6"\x07\x9c\xd3\xcf\xb4\xe0\xb33>U\\\xe3\x9e\xb8\xa9\x96\xd6\xc2\x1f\xfdU\xdd\xcce\x91\xb0a\r\xa7;s\xc7\xf5\xa8\x17\r%\xc1\xf2!\x8aEVMBl\x02\x06\xfcs\xcdIx\x92\xc3\xee3]@\x976\xb3\xda\xca\x81\xd2hI`\x11\xba\x0epA\xf8=+<\xd3\xfe\xff\x00\xa9j6\xca\xd72I\xa7\xd9\xc0S{\xa0P\xe4p\x00\xdb\xd7\x1e\xe7\x9a\x9b\x83W\x97R{\xcbyc\xde\xf7\x13<\x938\\)\xde\xdc\xed\x1cp{U\x8fH6\xf6\x16\xec\x16\xc9\xc0F(\xac\xd8*\xa3\xa6O\xcdC\xba\x9cMt\xe6<\x84l\x83\xcb\r \xf1\x81\xcf\xf6\xa4\xa4-\x14(\xb9\xd4\xcb\x8c\xb0\xc0\xc9\xaf`\xd2\xe1\xbf\xb4\x92qz\xb1[A\xc1\x0f\xc0\xfa\x03Rm\xa7\xdaA\x02\xfd\xddc\xdb(\xc8\'\x91\x93K\\\xea){\xa6\xac/m\t\xf2\xc1\xf2\xce=#=r@\xe4\xfbT\x02k6\xf6\xb6\xd2\xac\xb7Q\x16U\xe5G\xf1\x03\xedQ\x12\x15$\xcb\x1c$\xb3\x8d\xc7\x96C\x0c|S\xe8pp\xe4.\x93\xfe\xec\x83U\xc9\xf4\xa7\xd2\xe7]\xd2\xcd2\x99\tC\xb8zI9\xe9\x81\x91V\x8b]wC\xd3\x84v\xf2\xdd\x99\'\x98\x95\x88\x1eQ\x18\x9crG\xf5\xaa.\xb3}&\xb3~\xcd"\xcab\xf2\xb3\x12p\xaa\xc7\xf9\x8e1\xf9Uj\xdbH\xb0\xb4\x9d\xe4Ef\x99\xe5\xde\x101a\x16z\x8f\x9f\xad8#\xe9\xf0\'\x9d\x89\x8b\xba\x9d\x00\r\xb2}\xf2v\xf7\xa5\xfe)\xcb\xa4d\x02\xb9\xdc\xea\xe2\xb6{\xe6\x8a\xe9\xd9@]\x91\xbf\xa8\x82H\xce1\xc7\xbdAL\x96\xfb\xf3$\xaacNNG8\xe9\xc05\x05\x0e\xb4\xf0\xc6\xbbF\xf5S\x83\xb8\xe3\xd5\xf1\xf1S+\xa96\xa3j\xaaQ\x1fb\xe2=\xe3\x94\xe7\x901\x8c\xfeu\x15\xe0Y\x962\xe1\x9d\xfc\xbd\x8b\x0c\x80~\xd569_\xb6\x00\xce\xf8\xa7\xa9yy\xf7ky\xa1\x92\xe1nd\x94\xb6\xe0\x14/\x94\xa3\x01\xb29\x07?\x95U\xeeu\xeb\x08\xb5xm\xae!\xbaY\xc8csq3\x8f\xbb\x94\\\x14U\x1dr;\xd3\xd4\xd4\xfe\xe0\xd7\x11\x04\xc3\x9d\xa01\x1bW8\'\xaf|\x01PZ\x8a\xc0\xb7)\xa8jA\x1f;eH\xa3\xc1i\x17\x19\x07=\x94\x9e\xa6\x9f_\xc2\xdb\x15Y\xd2YY\xa3\xd2#\x07\x1e\xad\x8eF?\x9bo\xd0\xd3S\xddG\n\xe7\xce\n\xda\xf21\xbeq\xdb\xe9\xbdZ5f\x81\xad\x92\xea;\xb8V\x10\xaaSh\xf5\x1d\xe0\x8c\x9c\xf4\xfc\xea\xabi\xa9\xd9_\x83o<\x19\x82\xdf\x1cnT.z\x93\xb9\xb3\x96\xa8\xf1\xab\rF\xf3u\xe5\x8csF\x8aUb\x900\x8dK\x0c\x12NA,;S\x1d\x7f\xf6e\x89\xd3\xe2\xd3\xa0b\xf2\xda\x16\xbb\xf5\r\x81\x8b\x9c\x05\xcf`\x07\x07\xde\xa7\xa4r<\r\xa1\x91$E\x05\xa2b\t\x03P\xfa~\x95Qs\xd5\x82\x90\xfa\x80\\\xe3\'\xff\x006\xa9;i\xc4"E\x95w\xc8\xcf\xbb\xcb\x07\x03h\xed\xbb\xe9\xd4\xf4\xa8\xddI\x8e\xa0\xd1\\\xcfim\x17\x94\x17hA\x82P\x91\x80@\xfcD\x8e\xe7\x9agf\xd2\xcb*\x03\x12\xc7\x1e\xc073nQ\x93\xce0{\x9e\xb9\xa8\x9dc^\x86\xdc=\xb1\x94y\x8c\x19\xa4#\xb0l\x00\x9cg\x9e?J\x93o\xe6\xba0UL\xb7\xe7`F\xfcl\x00\xcdB\xbc\xbd\x8eX\x81VV\x1b`\x13\xdc\xd4N\xb3\xa9X\xdbK\x13G\xfb\xd9K\xb1p2\x00\x1d\x00\xf9\xa6O\xe2\x0e\x14\xb2\x15\\\x1c\x85\xc2\xf4\xed\x80id\xb6\xd2\x8c\xadsuq\xf7\x86H\x00\x8e\x06S\x89\x1f\x1c\x83\xb4\x82\x07\xcdAM\x05\xc5\xfd\xca\xec\xb6<\xb6\xd0\xb1\xae\x13\xf2\xf8\xf9\xaby-m\x94C\xabIe_|c\x03\xdb\xb5RD\xb7r\xbb\x1dZT\xb6\xd8\x19\xc8\xad\x02\xd2\xfa\xcd\xb4{k\xb94\xf9.\'\x17\xb0\xc5;glq\xc6\xeaJ\x80FH\xf98\xab\r\x9e\x8au\xd6[\xab\xe9<\x9bM\xe20\xf89\xe9\x80\x01\xef\xd2\xa9\xb6\xdad\x96\xcb\x1b<N\x82&\xf2\xaeHc\x86*\x07a\x91\xc7L\x8a\xd4\xf5?\x1fZh\xfaq\xb4\xd0\x8b,%Dk\x1d\xc0I6&?\x08\x00{\x92sR\xa6\x16\xa7\xcaI\x1d#\x11\x04 *\xeai\x08;\x0eF\xc3\xbdX\xc6\xcfj\xacB\x02\xa4\xe0\x82t\x81\xef\xef\x92j\xb3\xfbN\xdfJi#\x8e2\x92gh\xdc\xd9\x05\x00\xc08\xc0\xe7=\xea\xb9\x17\x89.\xacu\x08g\x8f\xd4\xc92\xb2\xb1\xc9\xcb\x83\xc3`w\x1d\xaa\xdd\x1d\x96\x95\xe2\xf9,m\xe2I\xed\xd6\xddK^^\xb4l\xc7h\x19\xc1\nO\xd0b\xb8\xd0?d\xe9\xe7S\xd4\xa3\xf0\xfb\xdd\xc5d|\xb6\x95\xdb\x90X\x90\xbe\x83\xfcM\xfd)\x10[\x94&h\xeeF\xef\xb3wR\xa3\'a\x93\xb6y\xae\xcb,\xd3\x12\xa7\x01N\xdb\xf1\x83\xb6=\xa9\x1b\xad#\xc5>$\x8e\xefRK\x94a\x0e%\xb8F\x7f\xde\x94\xeaX\x03\xce=\xea9,E\x95\xf4F\xee\xd2D\xb7\xb8\x8f\xcc\xb7Tl\x86=\x9b\xd5\xdb5v\x89\xe6\xb9\xb5}N\xda\xdcX\\\x88\xda\xd6(\xd4\xe4\x19e\xf5z\x8b\x1e\xbbN1\x8a\xa7^\xddMkcsy\xa9\'\x992\xc6\xf0E\x92G\x96W\x8e\xdcT\xf6\xb7An\x9es\xa7\x9f*3k\xc6\xad\xc1\xc0\'8=\xf8\xa8+wn\x8f\'\x94\xda\xbc\xb6\x00\x0c\xe0m\xc8\xab\x04\xda\xbe\x85mgk\xa7\xcds\xf7s4d\xcaQ\xbdr\x00{\xfb{\n\x86\xd3N\x8fg{$\x9fw\x13@\xea\xfb\x16C\x92\xbe\xd5\x8c]\xce\x12\xea\x19\\\x16\xcf;\xb3\x9f\xca\xb4\xad\x1bQ\xd2\xa5\x86\'\x91\x9dT\xc6U\x88\x1f\xc4j2$\xf0\xc3\x0c\x05\xd1\x82\xb1,\xec\xbc\xe4\x7fJ@\xbd[\x99\xa4\x91\x94#`\x05\x00\xd5\xd3F\x9e[KI\xe6k\xd2\xb0\x06! \xdeI9\xf8\xabo\x87<[u\xa1_\x99\xa1\x8d$\xde\x08\x1b\x86v\x83Y$:\xd6\x9ba\xa9\xa4\x1e\x99\x07]\xa7\x9eO\xbdj\xd6\xba.\xaf\xae\xa5\xb1\xd2\xf4\xc7\x93\xcc\xc2\xbc\x88\x84F\xa4\xf6$\xfbUm\xccw\x10E\xae-e\xd0\x0f,`\xb6\xe3\xda\xad\xed\xef\xadc\x89\xcc\x8e\x848\xc3j#\x8f\x9a\x9f>!\xbc}R=DN\xabr\xb2\x03\x1b\x00:\xd7\xd9\x1e\x19\x92\xfe\xe3G\xb1\x9a\xfeE{\x89#\x0c\xec\xa3\x03$W\xcf\xde\x10\xfb\x18\xb9Y \xb8\xd6nAP\xc1\xbc\x94\xe9\x9fbk\xe9\x8bX#\xb6\x86(c\\"(U\x1f\x02\x9d\xe8v\xddF$\x9e[\xd9\x1b2\x9c\x84;c\xe7\x15\x9d\xf1\x1fT\xb0\xbf6\x91\xda\xa8c\x08!\xa4\xc63\xec\x07\xc5<U\xafJ\x03B\x9a\xeb5tk6\r \xd1R-\x15=\xaf1\x9a\xe5w5\x1a\xd0\x9aE\xa1\xf8\xa9r\x80\xd2f:\xe6+\xb9\xa8\x93\x11\xae\x18c\xadJ\x94\x1e\xd4\xdaD\xe0\xd1\x8a3QO\xc7CH\xef>\xf4\xe6X\xba\x91M\xf6\x10y\x14\x93J\x06\x95G&\x9d\xa1\xcd5E\x1d\xa9\xca\xe4v\xa0W\r8\x15\xd7JL1\xaf\x0b\xfc\xd2\xab\x94\xb6\xea\xf7u52|\xd1\xe6\x0fz3E8-E \\Q\\\xcd\x15\x96\x88\x89=)\xdcp\x1e2*Im\xc7\xb5.\xb0\x01\xda\xa1\x04\xa9:\xa9\x9aC\x8e\xd4\xe9P\n_\xcb\x02\xbc#\x14\xe0\x18\xaef\xb9\xe0W\x9b\xab\x96\xa0\x0c\xd1Ev\rv+\xc0\xb8\x14\xb2\xa6k\xa2\xb9\\rk\xd1\x194\xba\xa8\x15\xd5+\x14\x9c\xd2b1]\x84\x1e\xd4\xa2\x8c\xf5\xa5@\xf8\xae\xe2\x8c\xd2;>+\xa0\x94\xb0\\\xd2\xca\x83\x15\xd0+\x99\xa6\xe1>)P\xb4\xae\xda\xf4\nUs5\xc0\x18\xaf1J\xe2\x8d\xb4QI\xe2\x94\x0b]\x05\xe6\x97T\xa3\x14f\x93\t\x9a\xe1\x8a\xab\x14$\x03\xb7"\x94\xb8\xb9\x82\xd2=\xf2\xb8PN\x07\xc9\xf6\xaa\xd5\xf6\xa4\xa6x\xa6Q\xe8\x03\x18\x1e\xde\xf5\x9a\xf1\x07\x88\xec\xba**4\xa8\xd3\x92\xb9\x8b;\x84;j>\xd4\xa4F~\xdb{\xd7\xb2n\x96G\xdf\xd7\x1c\x9f|S;\x80\xd1FH\\\xaf\xd7\xa5;y\xe3\x11\xeeR\x180\xc8#\xe6\x9aO,RE\xe5\x9c\x0c\x0c\x1cW\x9bG\x17\xe2\x9a\xe6Y\'/#)!\xcbd\x92x\x194\x89\xe5\n\x00\x15U\xbd\xbfF\x8eH\xdc\x02\x0f\x04u\xaf\x88<[\xa6\x1d/\xc4Z\xc1\xb6\x8c(\x82F\x93\x07\xb8nr?Z\xfbj\xee\xd60\x1cs\xd7\x8a\xc2<y\xe0k\xddB\xe6MCO\x91D\xcd\x1e\xd9!\xed&8\xeb\xd8\xe2\xb9\xd1g\x9f\xa6_\xb1\xbaq\xe4\xc8\x9aw\xce\x01\xcf\xf3c\xfa\xd2m/V\x19\x18\x87\xd3\xa8c5\xf3\xad\xb6\xa6\xb3\xdd\xc6\x92\xb6&q\xf8\x86x\x1d*sW\xb7\xb0\x8e8\xa5\xf3\x16I0r\n\xfe\x1c\x0erG\\\xf6\xaaf\xa5\r\xd6\x8b\xa8L1*JX\x86\x8eA\xf8\x0f~\xbdA\xae\xedu{[\xc34@8\x99Wr/bGPs\xda\xbd(@\x0b\xc3s\nk\x8c\xa8;o\xcf\xf6\xab\xb8\xafw,\xc7Qa\xb1\xa9\xabMA\xc5\x9e\xe8\xe3e@\xc4c\x9cq\xdb4\xca\xff\x00W\x02Hc\x9eY$]\xbc`\x81\xc0\xed\x9fa\xda\xabp\xdf\xeav\xcf\'\xee\xc8\x8c\x96\x04H0\xa3>\xc2\xa3\x1eYKDf\x7f1W\xf8G8\x04\xd5\x8a\xdbn}GI\xdc\x0c\xf7\xa9\x0b{\xa5\x07\xfb\x8e\xc6\xad6r\xda\xcf=\xc0\xb1\x85\x95\x9c\xb1\n\x99$\x05\xe7\xd4OZ\xd2\xee\xbcJ\xb7\x16\x9arD\xae\xd0Z[[\xf9\xf0\xccNdh\x97\xd4N\xdd\xa4\xa1n\x9e\xc2\xb2\x8d\x1fU\xb5\xb5\xde\r\xb8;I\xc1\x1c\x91\x91\xd4\x8a\x92\x1a\xa4w!vB\xc0\x06"@H\xdaGl\xe0t\xa8\xf3\t\xd6G\xd1\x1b\xa8\xd4\xa4\xb6\xc4\x1cv\xfaT\xab{\x84@\x1dd]X \x0f\xafz{\xe2\x9dr\xfb\xc4\x93\\]\x08\xc4{B\x91\x14G\xd1\x1a\xa1\xc2\xaa\x03\xf8B\x8e\x00\x15d\xf0ri\xde\x18:m\xf5\xcd\xbc2_\xee.\xd8\x1b\xddw\x1c\xf2q\xc1\xf8\x1d\xea\x16;\xc4w\x8a\xce8aUB6\xb9L\xec\xc7\xa8\xed\xe8\x06I\xeasOo\xef\xdeh\xed\xac4\xa9\xa7\x98\x92|\xe9\xb6\x05\x05\x8fe?\x1d+\xb3\xcd=\xda\xaf\xa9\x81c\x997\xd2\xd8=\x85H\x8d\xe1\\; :F\x10c**{\xed/\xed\n\xdf\xc5V\xd1\xda\xacF\x14\xb6\x94\xc9+\xcc\x03;8;T.\x07\x18\xeak%\x01.R\xe9!e\x133\xe4`c\x8c\x0cs\xedRw\x16\x96\xb6\xd6\x97\xd0_\xb6d\x94\x81\x1b\xab\x05+ \xec\xf9\xcf\x18\x15\x164\xcb\xa5\xb4O!\x11\x92\xe3\xd2\xaf\xbb g\x90\xa5\xb8\xed\xce*tQ\xa4q\xa0E8\x07\x93\xf5\xe6\xab\xe5w\x96IN\x06\x0e0\x07#n)\x84w\x16\xf1\xde.\xe5V?\x87*1\x828,\x07C\xf1Z&\x89qj\x88\xc8\xb0\x96m\xc1\x86}<\x13\xd4g\xa6+1\x96\xdekb.\x1cE\x0bFN\x10\x8c\x92A\xe0c\x9f\xd4\xd4\x95\x9e\xb9p\xea\xabq\xe5\xf0\xa5\x8b\x14\xc9l\xf4\x1f\x97Z]\xc4:\xd1I\x8c7|\xea\xc1\x1fJf\xdeq\x1c\xa5X\x91\x8d\xc1\xc6\xd8\xadQ&\xfb\xcc\x8b-\xf8\xb9\x96\x13;M0\x07\x92@\xda3\x93\xdf\x8c\xd2\xb3\xb5\xad\x85\xc4\xf7I\xa6\xca`\x87\x01\xa3g0\xbcN\xe3\nT\xf2B\x93\xc8\x1f\x95Qa\xf1\x05\xc4\xd2\xf9s\\\xbc\xcc\xf2\x07f\x0f\x96,z\x1c\x9es\xf1Zh\xd2\xacn-\xe2\xf3\xafe\xfb\xd1S"e7*\xbb\x8c \xc1#,\xa7\xaez{Uf\x8f\xe2\x84q\xe9-\xa8\xc8\xf8\xcf\xdb>\xfe\xd5t\xb2$\x89\xa9\x7f61\x81\xc5Vu\r>\xe6\xce\xde\xdd\xe4\xb7t\x8e`\xca\xc6H\xf6\x80\x0e\t\xc1\x07\x96\x19\xe2\xa6Vin#\xd3\xa6\xb8\x81om\xc2\x86]\xd8B\xca\\\xf2J\xf2\xc7+\x8ez\x01HkP\xebW:d\x16\xb7\xaf\x0c\x89\x04f-\xc9\xfb\xb2\x8c\xb8m\xc7\x1f\xc5\xc7Z\x85\xf0\xd7\x84\xfcK}\xa9Gag\xe7\xdcJWj\xc0\x83qR9\xf5\x90p\xab\xceI<S3\x98V)tJ\xf1\xaa\x91\xb3l\x18\xfc\x9aD\xae\xd1\xe9gQ\x80\xa4\x97$m\xfa\xd4\xd4z]\xce\xa7\xaaZ\xd9ZD\xd1\\\xde\xcc\x88!\\\xe0\x969,q\x91\xb4u5\xb8\xd8}\x88\xc0 \x03T\xf10\xf3\x0f+\xf7HF\xd0~K\x90O\xe9Z\x1f\x83|\x07i\xe1\x1d>\x06\xb8T\xb8\xd5d\x8c\x8b\x8b\x91\x96\xc6\xe3\x9f.,\xf4Q\xdc\xf55=wo*\x02\xcb\xf8G8\xcdyg\x88<Iw\x05\xc7\x93l\xe1B\xfeg8,N~G\x15\x98\xbd\xebr\xcb&-\x8e\x94]\x8bc\xf3|\xd6\x05\xae\xfd\x87k\x06\xde\xe2M.\xfe\xdbS(7$X0\xce1\xecNU\x8f\xe7W\x7f\xb3O\x0c\xdcxgF\x96\xe2\xfd\x15.faqr\x08\xd8bX\xc7\x08\xdf#\xbf\xc9\xabj_Km+H=;rx$Uw\xc4\x9e"\x9a\xf6\xcakc\n\xc6e#\xcee\'.\xa0t\xfc\xfb\xd5D\x9dg\xaa\xf5Xb\xb2\x98\xa1\x8bXgp\x06p7\xc7\xd2\xaa\xee\xba\xac\xb2Bc\x95\xc19\xd8\x81\x82~\xb8\xaa\\\xfa\x82\xdd\xea\xb7\x8ev\x85\x9aw\x93w\x03;\x8eA\xcf\xb75`\x81 \xbc\xba1\xa8*DC\xbf\x19\x04\xff\x00l\xf3T[kQ\xe6@r\xca\x19\x07\x19\xe3\x81\xefV\xdd:V\xfb\xe81\xc2\x15\x04c\x82>y\xc1\xa9\x97q\xaa!\xd0\xc7">~EQ,\x80\xb75\x1d\xaeX\xcb\x1d\xca2\xe4\xb9n\x0f\\|\xfeU\xae\xf8gJ\xb9\x9a\xdc5\xed\xf8k\x8c\x82\x84/<\xf4\xe7\xe9T[\xa9U\xefaw\x1cy\xa8\x0f\xc0\xc8&\xb4\x88.cT\x0f\x11`1\x93\x9e\xb5O\xd4n\xc0\xb5\x85\x1e\x1f1\xb7\xc1;m\xf5\x15 a\xca\x82v\x1b\xd6\x7f\xf6\xab\xe1\xeb\xb7\xb5\xd2\xe7\xb5ig\xb6\x86\xe3u\xc4Y\nT~"\xde\xdbx\xfc\xb3X\xd6\xb7ye%\x81k\x0b\x9b\x8bdEV\x16\xb7\x0c\xe2]\xac3\xe9 \xed\xdaG"\xb5\xff\x00\xb6mz\xd2\xdb\xc1B\xdem\x8fs}u\x18\xb7\x8c\xf5\xc4L\x19\x9f\xe8:~u\xf2\xad\xfd\xd5\xdd\xe4\x11\xa9*\xac\xa8\xc9\x1a\xb1\xecO\x1f8\x1d\xab\xd1|\x19wyq\xd1\x7f\xf5\x11\xacj\xd2h\x8b\x00\x8fJm\x90s\x9e\xe7\xe2\xb6\xdd\x05\xd6;W\xdc\xe01\n;{\xefH\t\xcc\x92\xe6Y\x19@9\xdaX\x90H\xe0\x92=\xea\xe7\xa1kzO\xde@\xb9\x02\xf0DI[R\tV$\x1e\xa7\x8c\x00pH\xefYm\xc4/\x02\xc7\x0b)2\xb3H\x14\x07\x1c\x04\xef\xcf\xb8<{\xd7\xadn\xeaa\x92\x1f:6C\x968\x03$\xf3\xce\x0f5\xb2kB\x85\x1d\xdd\x862\x10\x11\xe9\xcf9\xab\xe8:\xbb@\xfe^\x8c\xaf\xf3\xef\xef[7\x8a5\xcd\x0e\xf7M\xd2\xd6\xdbM[{\xf8\xe11\xcf&#D\x9d\xb7\x12\x1bh\x1cu\xc3{\xf1V[\x1dO\xc3Z6\x9fg%\xb6\x9b\xf7\xb9-\xaf#\x96\xeak\x97\t.P\r\x9b\x02\xfe\x18\xf3\x91\x81\xd7\xbdcZ_\x89uk\x16\r\x0e\x03\xc3*\xca\xa0\x85e\xde\xa3\xab#\x82\x0e3\xd0\x8ab\xb3M\xab^9lG\xbd\x8b\r\x80\xa2\x92Nz|R\xcf\x9aA\x90\xa2\x17\xd0\x03\x1f,\x1d\x87\x0c9\x19\xdb}\xa9\xf6\xbf\x81\x93\x08$\xd1\xa8\x95P\xcd\xdf9\x07\xe3\xda\xb4\xfdw\xed3Z\xb8\xb7:|RE;\xdc],\x92\x16\xc9x\xc2\xae\xc0\xaaA\x03\x18\xf7\x15L\x9d\xee\x08\x91\xae7<\x8e\xb8fV\xe9\xf0>\x05!oaog\xf7\x91\xb0y\xa5@VnWvs\x96\x1d\xf8\xfe\xb4\xe6\xee\xea7\x9b\xee\xd10\x90\xa1C\xe6\x01\x80I@\xc4`\xe7\x18\'\x1f\x954#K\xe5Y\xa4\x97[*\x84\xd4\xc7\xd4rs\xb9\xa6\x9as\xa3\n\x824c\x9d\x0b\xc08\x02\xa3\xb4[\xc9\xa1\x92H\xe4\x91\xa2\x96\xdd\xc9\x1c\xed\xe4\x9c\xe4|U\x8a\xebY\x95\xec\x85\xb3\x85\x08\xb9`\xd8PF\xeeI\xcfRN;\xd5CR\xb4\x9a}B\x12\xb2\x114\xb1\xa9\xc8\x00\x8cc\'4\xa5\xce\x97+y&k\xde\x17\x82\xa2=\xa3\'\xa9\xe7\xfa\xd4I \x8d\xd9]\xa4\t\xab\x90\x01\x1b\x8ex\xe7z\x9fk\xd5\'H4yd\x85\xd86\xd5t\x87R\x88\xc3\x1an!\x8a`\xa9\x03\x81\xdb\x93\xde\xa4\xed\xedd\x12F\xe2\xe24\x88\x1c\xbex$c\x8c\x1cVS\x16\xa6\xf6W\x8f\x1b\'\x99\xb4\xe3<\x01\x8f\xeb\xcd]\xec<[\x0c\xb04RH\x01\xc6\x10\xb0\xc1\xc8=\rG\x9e\xdex\xd5\n+:\x85\xfd\x8dH\xb5\xeaQ\xcc\xc43\x04l\xef\xda\xb5m\x06\x0bK\x95\xda\xd2\x18\xc8bI-\xc6\x0f\xf1q\x9e\x95\xc6\xbd\x05\xb1\x11\xab\xc2\\\x0e#\xc1\xcf\xd4\x83U\x8d\'V\xb4\x86[s\xe6\xc4\xb0\xc9\x19\x1bK\x1d\xea\xd9\xc9\xe81\x8cqV\x84\xd6t\xcb\xbb\xa8\xedd\x01\xbc\xc2\x16"\xac\x0e\xd0}\xea\x8fI,\xda\xbd$d\x8c\x03\xff\x00\x9d\xb7\xabX\xe7R\xf8V\xcej.+K\xcb\xeb\x9b{{\x07+#\xc8\x14a\x94g<q\x93\x8c\x9fj\xf5\xf4\xe9\'\xbbM9!w\xb9\x0f\xb1\x81\xe1\x94\xe4\x82\x1b\xe8x5\x15\xa8O$SI\xe4*\x98\xe2\xca\x96C\xc22\x9cn-I\rFM\x1bP\xb2k\x98\x84\x92K i#\x97p\xf3\x00\x19e$r2;\xd5\x8cV\xe0&\x93\x12\x84\xff\x00y$\x80\x08\xdf`\t\xa4\xcbp\xe4\x9fWm\x87rkH\xd5tk\x0f\r\xfd\xca\x1f\xdav\x97\xab,H\xf1\x94\x7f\xdd\xb6\xd3\x89\x06\x14\xe7\x03\xb18\xc8\xa6\xba\xa4\xba\x93\xcc\'\x83\\\x98F\xf1\xed-pL\x91\xeca\xb7\x18l\xfeC\xa8\xaaK]\xc7w|\x93LB\xabH\xca\xe8\x0e\xc0\x15\xb9\xc0l\x13\x8c}imG\xc5\xfa\xac\xb1\xcbg`d\x82\xd4\xc6\x03y\xc5]\xca\xe3\x18\x07\xdb\x8e)~w\x98\xce\xd0\x9f"0\xca\x02\xabjm\xbb\xe4\xe0\xe2\xa2g\xc9\x08\xb30\x91\xb0r\xec\x00\xce~\x06w\xa8m^\xd6\xe5Z]\xcfo,[\xb0$\x07\x05\x8fL\xf1\xef\x8c\xd3kM6d\x8a?;\x7f\x96\xf91\xc21\x83\x8e\xbe\xc7\x8aj\xc0Gn\'3\x86\xde\xddH\xf5\x00>9\xc7\xd2\xac\xde\x1c\x82{\xf9%0@\x18\xb6\x15\xa5a\xca\x8c\x8eA?\x84\xfc\xd4i\xe5"90\x18\x13\x9e\x0f\xf3\x0f\xadI\x82u.2s\xf1\xf1V\x1d>ak\xa2\x99\x14\xc8\x1eg1\xb2\xaf\xa7r!\xce\x0f\xbf5\x07\xe7\xc1\'2\x02C\x1c*\x03\xces\xc6k\x7fo\x07\xe8:v\x97\x1b\xbe\xab\xe6\x18\x91d\x95\xcb\x0c\xbeFH\x8d;\x01\xdc\x9esX=\xf5\xc6\x9a5\x0b\xaf\xbb\xc4\xf1\xc4\x1b\xf7a\xff\x00\x88\xe7\xa8\xf64\xd2\xc3sn\\H\xf1\xb3\x83\x9d\x01\xb3\x80\xd5"\x1b\xb8\xae\n\xb2\x06\x00\x922W\x1cV\xe1\xa1\xda\xf8M\xb4\xcb7\xbb\xd5\xf6M2\x85\x11,\x0c\xf8\x04\xe0d\x8e\x9c\xd4\x8e\x85g$\xebq\x16\x9emn%\xb4\xb8\x06Uh\xb6\xb8\xcf\x00\x86o\xe1\xed\xdb\xe6\xaa\xdff\xf2iOui.\xa5\xa8C\x1417\x9c\xaa\xc3+#\xa0\xe09\x1f\x87\x07\x9eA\xcdiW\x97\x10\xdck7\x12\xec\x92).c\x11\xce!]\xe9\xe8\\\x87fln\r\x9e\x08\xcf\xbd[\xac6\xf7\x16^d\x89\x14%_\xcad\x89\x88|c:\xb2X\x81\xf4\xc6\xe35Oq-\xcd\xb5\xdbD\x8d,\x80\xa0\x93S\xa81\x83\x9ci\x00\x00N\xdc\x9c\xecqY\xe7\x8c\xd3T\xd4\x19\x13P\xbc\xe68]a\x808p\x14\x9cc\xd3\xfc\xdd\xb2k(\x9bQ\xbb\x827\xb7\xb8\xbd\x98\xa4m\x88\xd7\xcc*HROL\xf6&\xb5\xaf\x11A\x05\x8e\x9bu\'\x92\x10\xc8\xdc>0\x17=\xb3_9\xcdx\xb6\x9a\xad\xd4\xb2n,\xc3\x8c\xb7\r\xdb\x1fJ\xa5Xd\x0f\xaa)g\x08\xe9\xc9r\xccH\xdb\x04\x9c\x7f\xf1W\xb6\x93\xaa"\xc6\xcb\x1f\xa5\xb6\x01@\x03;\xe4\r\xea\xeb\xab\xf8\x8e\xef_\xb4\xb5\x86\xe5!s\x1c\xacQ\xd60\x8c\xa5\x94"\xaf\x1c\x05P\x06\x05X\xb4\x99[e\xc42^:e0pp\t\xc7L\xd5\x0f\xccW\xb7\x12D\x18\x93\xd7\x03\x8ek\xd9^\xea\xee[{+3!\x92f\x11\xc6\x80\xe321\xda\xaa\t?\xd4\xd5\x8d\x95\xcc\xfet\xae\xec%\x91\xb4\xaa\x06\'s\xc7\xf7\xa6\xafDI\x18UP\x91\xaeN\x06\xc0w\xa9\x8dB+\xe4\x92\t\xaegH-\xa6V\tq \xc4C\xd4A\xc1\x19\xc9\xe3\x18\xa6\xda\x95\xd6\x87a\xa6\xcdlf\xf3\'\xf3\xc2\xc30uT\x92\x1c\x13\xbc\xa9\xf5\x02{{\n\xca5\xcb\xcb\xa8\x05\xc5\xa5\xc2\x13p\xa4F\xd1\xf1\xf8\xb3\xdc\xf7\xcfZ\x8f\x82\xc2\xe8\xa7\x9c\xeb\n\r\xbe\x82\x15\x7f\xbdY\xbch\xb1\xb1\x97\x01\xc8\xd3\xb9\xc8\xce7\xc0"\xaa$\xea\x9eQ\xd0\x8a\x08\x18;\x121\xbdi\x9aE\xfe.\x96X\xc4j\xb1\xa2\xb3y\x87;\x9b\x91\x95\x18\x07\x8c\xf4\xf7\xad7\xc3\xde"\x9e\xda\xe6K\xa4\xd3\x86\xa3g\x1a*^\xac\x91\x1f,#\x1e\x06p\xdbI\xce3\xd4\xd7\xcf\x16\x9a\xbc\x8a\x04o\x18y\x07FN\x87\xeb\x9a\xb1[\xeaZ\xc3Ar\x96\xe2D\x8eE\x1eg\x96\xc5U\xc2\x9c\x8c\x81\xd7\x06\x9aW\xb8\x80\xa9\x88\xe1\x90\xe4\x10\x07a\x81\xb7\xb7\xbdw\\\x17\xb10\xce\xb0\xdf\x98\x10F\xd9\xdf\xfe+D\xd7<A\xa7\xc7\x1c\xd1\xdaA,"2\xc0\te\x0c\x84n\xc8\xe7\x03\x90\x08\x18\xe78\xcddZ\xb7\x88$\xbd\xbb&Y\xdc)b\xe5\xa3Q\xcbt\xed\x81\x9f\xa58\xd5\xf4\xe9g\xb32\\\xbbG B\xe4\xb6v\x901\xfd~\x95A\xbe\xf1$H\x15-\xe0>\x95\x00\x96\\\x00G_I\xa91C5\xc1$\x8c\x93\x80\xca\xa3B\x8d\xb9=\x8dU_\xdd\x0bs\xa3V\x17\xeb\x93\x8f\x92w\xab\xdc\x17\x17\xa1\xde_\xde2\xa1\xe1\x9f\xb9\x1f\x04t\x15!f\xf6\xf1y\x8ftH\xdcx\xe7\x1f\x9f\xd2\xb2\x98\xb5\xbb\xeb\xa2\xaf\x10\xc1\x8ce\xce\xe2O\\t\x1d\xaa^}GU\x94\xa3\xcd0\x86\'\xc2\r\xaa\x18\xe0\x0fn\xb5\xc3\xd2\xe6V\x8c\x04E\xeew\xcf\x1f\x1b\xd4(:\x8c`\x02\x01\xfa\xe6\xb4q{h\x1f&@Ip\n\xb7\x18=\xb1\xee*N\xdf\xc4vp3\xa4RF\xdeR\xfa\xc1a\x91\x8eI# \x81Y5\xde\xa3\x15\x9492\xac\xc4c\xd2z\x9c\xf4#\xbe\x7f\xb5AI\xab\xde\xdd\xa8\x06B\x90I\xfb\xb6d\x00d{\x164\xd8\xe8\xd3\x12X1\x8c}v\xfd)\xf3\xd7^"B\x90I\x1b\x0eEm\xd7\xbe!B\xf0I\x0cFy&%r\xa0\x14\xc1\xe0\x8e\xf8\x07\xfa\xd4e\xebCr\xd2^:\x92\xfb<\xb8\xd3\xa8\xe0\xe7 \x8e\x83\x9a\xa8\xe8\xb6\xcbi\x0b\xbcz\x82\xbe:!\'8\xcfQ\xcfj\xe2\xfe\xfe\xe6Y\x8d\x9a\xc8I\x18%xR\xe1\xbe\x95\x13\xf0\x0c\x93\xe69\x0epuJN\t\\\xfbv\xa8s\xdf\xcc\xea\xd2I\x8c\xb6\x00#l\n\xbexOG\x1e.\xf1\x16\x99\xa6\x0b\x87X\x95\x8c\xaeW\xa2\xa2z\x89\xc7|\x9e9\xeb_P\'\x83\xf4\x9d/\xcfKK\x08\x97\xcd}\xd2\xb3(w\x91\xcf$\xb9l\xe7\xe9\xd0V%\xf6\x1d\xa7\x81\xac_\xdc*\x12\xb0A\x1c*\xe3\xf0\xeev\xdc@\xfc\x85}\x8dq`\x93\xc5orF\x030\x0f\xf1\x8e\x87\xf3\xe9Y\xf9\xae$\xbd\xeb\x97==[\xf8qB\x87\x1cd\xb6\xecO\xea+\x15\xd5\xee\xa5\x9eC\x89\x0e\x94\xec\x0e\xde\xf9\xac/U\xfb&\xf0\xcf\x88\x15\xe4\x9e\xc2KiX\x93\xe7\xda\xb1\x8d\xb7\x11\xd4\xaf*\x7fJ\xc0\xfcQ\xf6-\xaax`O-\xa4\x1f\xb5m\xe7`\xa2~b6\xc3\xdet\xe7 \xff\x000\xe2\xbe\xff\x00\x8a;{u\x08@\xda\xdd?:cy\xa7,\xa0I\x17\xf0\x8c\x11\x9c\x10\x0f\xc1\xadD1\xddt\x95V\x8aAs\x12\x8c\xcbn\xc7\xb7\xfd\xa7r*\r\xb5\xfd\xd5\xb9\xca\xc9\xabla\xb7\x15\xf9w\xa4i\x12\xb3-\xc7\xdd\xdf\x11J\xea\xe0\x9c\xa1 \xe0\n\xd54\xad\x1bQ\xb8\x81\xeeR\x18\xf1\x13\x82\xb6\xea\x99y\x02\x8d\xce\x00\xc7\n\x14z\x8do\xbe9\xf06\x99\xa6iZ\xc6\xa5\n5\xac\x12\x88\xdekx\xd3\xf7K2\xbf\xa6dQ\xf87~\x17\xc7\x15\x95G\xab\xea\x1e\x1d\x94\xbc\x1ap\xb6\xb8\xb3\x88\xa4\x93\xb2\x17\xe5\x8eC\xb6r\xaa\xc0\x1cR\xbc\xd8\xba\x80\x82\xe5\xbc\xc1\x1b.\x1d\x00\xcbF\xd9#I\x1cg\x03#8\xc8\xafG\xe9]M.-u@4\xb08 \xed\xbe\x01\xfe\xfd\xaa\xb1\xe2\x99-\xae\xb4\xf9n\x15\x9a\x19\xc4g\xcf\x88)U\x8c1\xda\xaa7\x1c\xb1\x03\xaf\xc5f\x960\x08^I/\x9e\x7f#\xca\xe8\x10\x82\xdf\\\xd6\x9d\xac\xebVW\xbaE\xd4z\x83\xb4\xb2\xdf\xce\xbe\xb09S\xb7p9\xc7\xa5\xb8\x18\xf7\x15X\xf0\xfe\xab\xa3[\xcf\x13j\xf7\xab\xa8\xad\xa0\xf3-\xadv\x91\tf \xba8<\x8c|pM[\xf4\xfbw\xbc\xb7\x9c\x05h\xf4\xb6\xe6A\xa4\x91\xce\xa02I\xc8\xf6\xefM\xdf\xdc\xacw\x11jmE\xb8\x00\xe4g\xd8\x9d\x80\xfb\xd3\xb3\xe2\x9bkW6\xfa^\x9d\x14Pm*\x1aB\xdb\xc0#\x1b\xce\xdcz\xabk\x98xK@\xf0\x95\xad\xd7\x92\xa9q$Q\xcc\x9er+%\xca\xba\x90\xae\x0e:\xa99*{W\xcf\x1e)\xd4|3\x13\x9f\xb9+\xb3Mp\\\x8cl\x1eA\\\xa8\x1c\xfay\xea+w\xd7\xe7\xbc\xd6<\x1d\xf6}\x14v\x90\xbe\x9b.\x95\x08\x9aA\x8fN\xc1\x82\xa4\xfcb\x92z\x83t9\xad\xdd\xa3\x86H\xd9\x99p\xca0\x0ey\xcf\xbe\xd5\x9b\xf1\r\xec\xc6\x08Qn\x1e4.C\x85ldb\xb3\xef\x0f\\\xd8<\x1a\xce\xa5r\xef\xe6Z\xda\t\xad\x90r\x8d9m\x8b\x91\xef\xcf\x15N\xd7\xae.\x1e\x0b\xd8\x1f\xef\x13I1\xff\x00M\x86N\xe6;\x89\xc0\xab\x7f\x81e\xf0\xb6\xb7\xad\xeb\x1e\x1d1\xdc\x18&e(\xc3\x0b\xfe\x979_\xa1\xed\xdcT\x8f\x894]\x7f\xc2S\\\xcddE\xe5\xc2\x9f3\r\x17\x1eH\xe1]3\xdf\x1d}\xaaE\x8d\xefL\xbb\xbf\x929\x8c\xb0N\x02<\xa1\xb0\x1b\xcac\x80T\x1eFN\xe3\xde\xa9!\xearZ%\xd7\x96\xa1\xa5\x90\xa8\x89_a\x8cgsYf\x916\x85\x04\x8b\x06\xb7`D\x89\x11![\x8c\x928\'\xda\xa5\xac\xe2\xd0\x80\x8e\x16"G\xdcd>Sq\xb4\xf4_\xca\xa2\xd3C\xb9\xf1\xb9\x9aX\xe6\x99\xf5\x9fQ6\xeb\x19b\xeb\xef\xe9\xa8\xfd;K\xd6|3u%\xbe\xa5c=\xa4\xaepU\xd0\xa9\xe3\xb8\xcdin\x1a\x1be\x8b%\x1e\x17Rb\xfc\xa6B\xb9\xfe`\x0e\xc7j\xb4\x83\xadC"\xba\x18\x82\xdcG\xa4J\xbb\x81\x9c\x7f.q\x91Q\x9a\xcbF\xbe!\x8eM:\xdd\xa2\xf2\xc8%I\xdd\xc8\xef_i\xfd\x80x\xb3\xc4:\x8d\xc5\xce\x9fq\x1c2Z\x01\xbf;p\xc8\xdd?\xae+\xe6\xdd6\xfa\xcfL\xd6^Cg\x05\xc9\xb9\x80F\xcd \x07a#\xa8\xaf\xa0~\xc2t}kI\x9a\xe7\\q\x18\xd3\x1aW\x8f\xcc=\\\xe7\xfa\x01\xd2\x92\xd3Emhek\x83\xa0\xe5\x9d4\xfeP\x06\xc4\xd4+\xdb\xa4p\xe4\xc6\x14\xb3)C\x9ew\xc9\xc5}\x96\x80\x9cqN\xd1O\xb5T\xae|Cs\x1e\x04p&\x08\xf4\xb6r\r7\x8fP\xd6\xee\xc6U\xd5W\xe0V\x0e\xfb\xc7\xdd\x16\xda\xe9\xed#\x8a\xee\xe6\xe1y\x8e\x18\x89#\xff\x00\xe2\xc5&2H\x07\xb7\xb9\xab\xc32F2\xcc\x00\xa6\xe9{m#\xecYT\x9f\xadR&\x8fQ`|\xe9Y\x87p\r \xb0:\xb0#p>\xf5\x85\xea\x7f\xf5^\xe6\xd2\xe9\x11:\x0c\x91\xc6\x0e\\L\xda\\\x8f\x8c\x02\x05O\x8a\x0f0g\xcc\x1fj\xd2\x875\xedW\xb4\xdb\xb9\xa3\xf2\xe3\x95\x8b\x03\xd0\x9e\xa3\xebV.\rzg@\xeb\xd6~!\xb1K\xabmK\xc0x\xdb\xf3!#84\x97FC\xa4\xd1\x91^\x1a\xf6\xb95yH\xc5x@4\x83%,k\x93E\x14\xc5\xe2\xf8\xa4L\x03\xda\xa4\xf8\xaeJ\x8a(\xa8\x96\x84\x0f\x8aH\xb3\'\xcdI\xbct\xceH\x87<W1]\xa6\xdfx^\x84\xd7-2\xf6\xa4e\x87\xaf\x15\x1e\xc2e\'\x1d)$\xd7qO\xda|w\xae\x04\xe0\xf7\xa6BBxaJl-\xd0\xd1\x9a\xee)\xd7\xde\x00\xefE519\x1d(\xaeoF)\xba\x01J\xe2\x90\x8c\xd2\xdb\xc0\xa6\x858h"\xb8a\\\xb4\x87\xda\x93/\xeeh\xc8\xa2\x82\xb94\xaa\xa5$$\xf8\xae\xc3\x9a\xe5v\x9c\x80\x00\xae\x80\xcd7\x0e)A%\x00\xd0E8\x0b^\x12+\x8f2\xb9\xdc3K\xcd\'\x14\xb2\xd2\xe0Su"\x97\x07\x8aP\xa4\x9aTR\x80R\x00\x9fzP8\x15\xda\xe5)Fi\x03 \xf7\xae\x0c\xa3\xde\x8c\xd7qN\xb3^\x83L\x8c\xc3\xde\xbdY\xbek\x99\xa3\x15"\rsq:[Bdf\x19\xc7\x03\xb9\xa6\xab(\xa673\x8c\x96\x9fiU>\x92{U7[\xea\x9f\xe9\xf6\xc3C\xaa\xc9!!I\xe0|\xd2\x95rw\xa6\xfa\x95\xc2jV\x91\xabFF\xd3\x96\x07\xdf\x15\x9f\xde\xf9\xf6N\xa6)\x99\xa2\xcf\xaa2s\x8f\x91W\x93<RF\xe1\x1dN[\xa8\xaaT\x96\x97\x1a\x96\xa4c\\\xacQ\x9c\x16\x1dY\xb3\xd0W\x87\xf8\x98\\\xf5N\xb1k2\xb0\x95\xe7\x8c!\xd29\xd3\xb6)F@\x91\xb0\xe3\x06\x9d-\xdc\xf0\x04\xdar\xae2\x01\x18\xfd)\xa5\xc6\xb3\x1d\xbf3\x07P}\x86E\\o\xb4\xb8\x8a\xc7\x14K\x9d\x83\x00\x8fz\xae_hs2\xb7\xa0\xb6\x06X\x0f\xf1ZD\xe8\xddB\xdaC\x1ca\xe4\x8d\x08\x04\xa8\xc8\xce7\x02\xaa%\x9bV\xfd\xea\xbe\xba\xa5\xad\xc9;d\x05\x89\xe8{Sk\x87,\x0e\xd2\xa7\xd8\xd7ShO\xbd\x1b\xc9\xdb\x8c\x9eF)\xd4Ze\xd8\x8c\x06\n\x0ex+\xd3\x1f\x9d1=\xa5\xdcx\x1f\x87\x98\x86\xfem?\xd6\xa2k\x07\'#\xe9Y\x0f\x8f<!c\xe2\x1b\x193l\x12\xe1\x14\x98\xe5\x03\x9c\xff\x00\xc5|\x89\xe2\x1d#\xf6\x18\xb4i?wvw\xee\x0b \'\x83\x8eGl\xd7\xe8\xc4\xb6\x04\xa3n#\x03\x8ek\xe4\xcf\xb6\xcf\x03\xcd\x13>\xb9ilv*\xe2\xeboog\xc7\xf7\xad7\x86/d\xb4\x9cZ\xcf\x91\x14\xdbG\xbe\xca\xde\xdfCSl.\x82?\x94\xe4io\xcb\x9fz\xc3g\xd5a\xb8\xb5\x0b$\xee\xaf\x81\x94\xc6A?\x06\xa1&\xbbe\x0c\x16%@\xdd\x00\xa6\xbb\xc9TP\xa3*\xd9\xc8\xa9\x8d-\xed\xe6\t\x0c\xb6n\xec\x1d\x98J\x99%x\xee1\xc8\xe2\xbd\x11 T\x18U\xc8\xcf\x15l\xd33\xe0d\x0f\x9a\x81Vq\xbbinG\xab\x15\xa2\xf88\xe9v\xd0\xcdu\xa8ZI(?\xbbES\xc9|\x8c6\x0f\xb5R\x92\xe2o\xbc\xc9\x1cab\xf3\x9c+.1\xc6kM\xb0\xb9\xfb\x95\x8bY\xea;U\x18\x06g \x1e3\x84!x\xc3v\x19\xfa\xd2\xa6l*\x9e\x0ew\xc8\xc8\xfb\xe2\x9e\xe9\xe0y\xf9-\xc6\xc3\xebZm\xde\x99\xa6\xddX,\x86H\x1d\x9e&\x99\x1c7\xef#A\x9c\xab\x81\xc2\xe4\xff\x00\x0e2i-\x02\xee\xe0ZC\x15\xb4\x11$\xd1E)R`B\xa1T\x028 d\x93\xc1&\xa8\xfa/\x88\xb4};W\xbd\x80\xbb\x9b+\xbbs\x14J\xeb\xbeE/\xc8o\xe1\x1c\x11\x91\xcd \xf6\xfa\x95\xe5\xe3\xfd\xde\xe1e\xb6\x90\x80$Fh\x84\xa9\xed\xea\x19\x03\x1d\x8dA\x8a\xde\xf1&\x121V.\xd8,\xa7\x801\xf7\x15{%\xcd\xb4\xa9\xa1\x17\x05F\n\xfc\xd2\xd6\xf2\xb5\xe1\x955%\x02x\x9cC\x18\x01<\xb5Uc\xb9X\xa7R\xde\xfe\xd5\t\x0c\xb1\xe8\xfa\x91\x9a7\x8e\x1b{\x81,\x89\xe5\x03(\xb7\x1c\x806\xb9\'\x04\xe0d\xf3\x8a\xb7X\xc3f\xb1E\x0b_G%\xab\r\xd2F\x85C\x06_NNx\xc9\x1c\xd5w\xc5\x1a*\xc3l\'\xb6\xbf-\x01e\x11\xc7\x1a\xe4\xc8\xb9\xf5\xb1\x03\xf0\xe3\xd9\xba\xd5\x82;\x92\x0e\x01\xd3\xdc\x10)\x9f/Dg\xbf&\xa0|Kqyw%\xc4\xb2\xc5\x14\x11\x89\x00xb#\x1b\xc2\xaa\xe4u\x04q\xd8\x9a\xae[\xbf\x92\x9fx\x9b\x7f\x93\xea\x88\x15\xc1\xcb\x01\xbb\x18=\xbd\xe9\xfa\xe9Mv\xd2\xc1\x15\xf1\x92T+\xe5\xc4\x01 #\x1cg\'\x18\xc7R1\xc52\xbc\xd05X\xa5x\xc4\x12J\x12#32~\xf1v\x03\xb7~P\xb0\xc5,\xc6\xce\xc5\x981\x04\xf3\xcf\xf4\xaa\xc9e*\xb9D\x03\xde\xa2\xbe\xf2\xbetO\x12y%[%\xb7\x16\xe79\xcf5\xba\xe8\x1e!\x87\xee\x88\x8d:\xc2dd-\xb0\x90\xae\x03n\xcb\x11\xcf\\t\xac\x15m\xa57\x0b\x01R\x1c\xb8Lt\xe4\x9cc\x9a\xb1\xe9\xefq\xa7\xde\x18Wi`\xc5]x\xfc#\xa8\x07\x91\xf3Q/m\xc4\xb1\xea\x1b2g\x07\x1f\xb5+\xa6\\\xbcR\xb0o\xca\xc4\x02>kb\x9b\\{\xa7\xbbV}\xe9;\x87l\xa0\x8c\x06\x03\x07f\xdcaq\xc6=\xab\xeb\x1f\xb2\xdd*M3\xc2\xb6\xd3\x02"\x97Q\xff\x00\xa8\xda\xaaF\xd8\xb1\x88\xd4\xe7\x9e\x835\xf27\x83c\xbf\xf1N\xab\x1e\x91\xa4G\xfb\xeb\x96\x01\xa4\x91\x14yQ\xaf\xa8\xbb\x1c\x1c\x05\xeaq\xd6\xbe\xf7\xb4\xd3\xd6\xc2\xca\xd2\x08\xd9\x9a;xc\x85\x0b\x0f\xc4\xb1\xa8\\\xfe}k\xce\xfcMs:E\xa4\x13\xa9\x9b.3\x8c(\xf9\x1d\xa8\xf1\r\xda\x08\xa1\xb7F\x1e\xa3\xa9\x80\xe7\x03\x8f\xde\xba\xf3\xca\xe4I\x92~;\x9a\x81\xd5.\x960\xd2;zGA\xd2\xa6f\x92$\x04\xc8\xb9\x18\xeax\x1f\xa5b\x9e$\xd6g\xd4uI-t\xe4\x96U\xb4p\x1d#\x19\x05\xbb\xee>\xc2\xbc\x98,\xfdN\xf1\xe2\x12\x7f\r7b{cm\xcde$\x94C\x18\xff\x00q\xe0T\xfd\xc3\xc9p[\x12F\xa3\x1cF\xde\x9d\xc7\xdfw\xbf\xf4\xaaN\xa5\'\x9aY\x10\xbaF\xacVWa\xea\r\xddT\x1e\xff\x00=\x054\xba\xf1\x17\xdeUc\\\xab\xc7\xb9%\x04\x10U\x94\xe3\x19>\xc6\xa1[Y\x17\xa94\x05\xfc\xc9\x16`[\x04uu\x1c\x1f\x9e+Gi\xd3\xe4\x89rb\xd2S\xf6\x19\xc6MAg,\x18\x90I\x15,\x96\xa9\xb5^\xdeyT.\x02+\xb0\x7f\xcb\x91V\xab]6\xe2#\x0c\x93<\xae\x19\x07)\x84P\x0f=\x14TU\x95\xb9\x16\xb0\xe4(\x91\xd8\x10\t\xe4\x8c\x7f\x8a\xd0\xe3h\xe2\xb5M\xc4\x96\xf2\xf0G\xb7\x1di\x89\xa5i%\x11\x82\x0eKe\x8e3\x81\xf3M\xa1\'$\xfcU\x1bW\xb5\x96\x02<\x96v\xcf,$l\xee\'\x00\x90\xdd\x8f\xf4\xad\x17\xc2r\xc1\xa9i\xe6\xe6E\x7f-\x08\x8d\xa3#\x0ed\x1f\xc3\xcf\xbf\\\xd5\x1b[\xb9\x8aH\x0b!e|\x81\x85\xed\x8e\x0f\x02\xb4\x0f\x01\xc9oq\xe1\xc8\x02aL\x172\x06\x07\x93\xbb9\xc9\xfc\xa97\xd0\xc5q\x15\xb2\xe9\xff\x00\xee\x81\xab\x8d\xb0I\x07\xf4\xa7\xe2oY\xf7\x00\x91X\xcf\xdb\xb6\x9f\xfbCK\xb1\xd5B\x18\x8d\x8d\xc2\xa1E\xc9\xc28\xdb\xc0\xf88\xaf\x97..R\xde"f\x8a\xe5X\x8c\xac\xb9\xc1\xe7\xa63\xda\xbf@\xbc}\xe1\xcb\xbdc@\xd4\xadc\xb6\x8f|\xf0\xb2\xa4\x80\xf0\x1cr\xa4\x83\xeck\xf3\xbeH\xae\xd3R\xd4m\xee-\xe4\x92km\xebq\x0c\x80\xefP\xbe\x83\x821\xf8{g\x8a\xf4\xcf\x0b\x15\x92\xd6[i5+@\xfa\x82\xe9+\x84}\xf8\xf6\xcf\xda\xafzD\xecc\x926oR\xb6G\xd0\xd2\x11\xdbj\x17\x12C3F\xee\xec\xc3s;\x05\x1e\xae9>\xc7\xe2\xac\xe2\x19!\xde\xd3B\xc9n\x15VB\x80\xbe\xd6q\xc0$\x8e>=\xea&\x085(\xedZX\xe4g\x81\x80\xda\xa4\xfa\xb8;J\x12:0\xa7\xf7\xd7,R8\xecc\x928\x88B\xe9+\xe5C \x07\'n9\xdd\xcf5\xac\xf4H\xa5$8\xc1\xc0\xd0\xc4\x1d\xc6v^+@\xa4\xa6\xa2\x01\x07\x19\xdf\xbf\xd6\xa5\x85\x8e\x96\xd6\xf0\xdeG<\xf0\xa4\xaf\xe5)u.\x01\x03\xf1\xe7\x81\xb4\x9c\x8cu\x15\x1f\x17\xde\xe3\x97q\xc4\x9eS\x10Z>T\x8c\xf4SP1\xdcH\xd3\xcf\x14\xf6\xe1\x89}\xc5r\xdf\x88\x9e}<\x00{\xd5\xd6\xca\xe6\xea\x18\xda5\x80/\xa4\xff\x00\x08\x07\xfe\xd5\x02\xe1\xda\xd8\x1d\x1arN\xcf\xb8:O\xdc\xfe\xd5"\x17\xf3\x15q\xe9\xdb|{\xd1u\xab[\xcc\xa1BI\xe6\x127!\xe3j\x8e\x9d;\xe7\xf5\xa7\x16\xe2\xdet\xda\xb6\xe26W\x01\x08\xc6\t\xc7\'\x8f\x9ab\xb2\xdb\x02\xed.<\xd0\xdc\x06\xe4\x8f\xce\xac\x96\xf6\xa9\x05\x8cW!\xe1`\xe5\x8ck\xe6\x02\xfc\x1cd\xa8\xe4s\xd35\x0e1\x10b\xc4\x14\x11\x9de\x86\xe0\x9c\xf6\xf8\xa9\xd1\xbbH\xc5X\xa9\xc6\xfe\xd5\x0b|!\x82\xee\r\xf2`\xc5\x1e\x0f\xd4\x1c\xf1\xf9R\xf7\xb6\x97\x1a\xab\xdb\xc1gmq+\xb1T\x81\x15\t\x92g#\xf8Td\x9ezW\x17\x86\xe1\xe7\xb7\x825K\xb7\x98\x90"E\xcb\xa9f\xcf\x18\xeaq\xc7\xd2\xbe\xb4\xfb\'\xfb<\xbb\xd1\xe1\xfd\xb7\xae\xc3\x8dQ\xd0\xc7m\x0bc6\xd00\xc1$v\x91\xba|\x0f\xadC\x99\xf4\xb2J\xa4\x1cja\x93\xef\xbe\xc2\x9a\xbc\xea1X\xdbI\xab\x05\x89\xf4\'r\x7f\xc5`\xda\x1f\xd8\x06\xad$Ow\xafj\x89c#.R\xd9\x07\x9f0?\xff\x00\x90\x82\x15~\x99&\xa3\xf5_\xb1\xdf\x14ir\xf9\xbah\x8fV\xb3\x03\xfdH\x97d\xa8\xb9\xe7\xcc\x8d\xbac\xdc\x12+\xedMN\xd6$P\xa3 u?\x1f\xfc\xd5:\xe2&\x03\xc9\xb6b$~\x9e\xd8\xeeH\xef\x8a\xa4\xb8\xeb\x9dB;\x9fT\x912\xb6\x17\xcb#a\xf4#z\xc9E\xd6.|\xcdM\xa4\x8c\xfeR6\xaf\x94\xb5\x0f\x01\xf8\xabO\xb77/\xa6^b\x08\x84\xb7G\xcb?\xb8PFC\xe38\xc1<{\x8ei\xa3]\xb2B\xbeL\x83 \x10p\t#\x03\xafj\xfb;\xc3\xbaTv\x9f\xbb\xb8_5dI!\x9by$I\x1c\xdc8a\x9cs\x9a\xf8\xdb\xed\x0fD\x93\xc1\xbe%\xd5\xf4\xb5\x91\xb6E3\x85$p\xd17*s\xecA\xfdi\xfb\x1b\xcf\xf5I$W\x89W\xcb\x90\x85\xd3\x92\xa4\x11\x91\xcdjz_X7^ln\xa1Y\x17 \xa9\xed\xc50\xd3u\xfb\x8d:@x\x95\x95\x84\x8a\xce\xbb\xc0\xc7@T\xf1\x8e\xfc\xd4E\xd6\xa3}{u-\xec\xd7DG\xe6r\xed\xcb3\x9e\xa4\xf7\xe4\xd5r\xe2\xea\xe3k\xb4[\x81\x04co\x19\r\xdc\x03\xc9\xae\x96\xda\xfah\xe0\x967\x12\x078\x0b\x9c\x01\x8e\xa7\x9a\xd2\x08\x1bF\x19\xc0\x0cF\xc7}\xfe\xfd\xea\xd3\xf1\x8c\xcb\x83\x92G\x07\xe2\xa6\xa5\xbe\xb8\x96TY<\xc6\\g~\x0f\xd38=j^\xdexw\xad\xbe\xf9q(\xc29!y=\xc7\xbdGC\xa3\xac0,\xda\x9d\xeb\xa2\xc9\xb4\xc6\xbb\x8a\x87\x04\x90\x18\x1e\xea\x089=\xaa6\xe2H\xe6\xb9\x9eHo\xd9\x96\x0c\xaa\xe1w\x16\xed\x88\xc1\x1e\xac\xf6\xaeIb\x04cm#\xdc\x0e\xe7\x8f\xd6\x9a\xfcn\\\xeabj\xdb\xa8\xdb\x1d($R3\xb34{\xcb\x05\xda\n\x9e\x9d=\xe9-\x13\xc5\xefez\xc9\x0c\xa5Q\x90~\xedI\\\xed9\xe39\xe6\xaa:\xb4Ok\x1cr=\xc9\xba\x0c\xb9\x8d\x0f\xa7nz\x92\x079\xedZf\x8b\xa5\xe9\xf6\x16>\x1b\xd6m\xadt\xe9\xa4\xf2\xc3L\x91\xcb\xe6\xdc\x99B\x96-\xe5\x1d\xc4\xaa\xe4\x03\xc6A\x15\xd5\xe9\x82E\x94<l\xdd\xc8Q\xab\x18\xf8\xe4\xd4\xab{\xc0g\x8c\xc6\xc1@8\xf5\x1ej\xfb\xe1\xff\x00\x10\xc3\xe2\x15\x92\xcd\xe0\x89W`c<\x92;2px\x0cz\x86\xec\xa0pE&\xfe\x12\x99\xaf\xcb\xa5\xb1u\x18)\xbb%v\x9f\xf94\x9f\x86\xe2\xd0\x9a6\x9e;\xb8\xe2\xd4.\xa4\x95\xe1WtT\x08\xa4\x10\x8d\xfc\xa5\xf2ps\xc7\xb5M[\xf8\x8c\xf8k\xef\xf7Z\xaa-\xe3;\xbcq*\xb9\xccrt8R=$c\xbdWO`\r\xd7\xf1\x1dR\x1d*\x0bD\x00\xe7\xdc\x01\xb5i\xa1\x95V\x06}\xcb\xaes\xafo\xdc\x9a\x9b\xd0\xf4\x0bs<\xb6\xb2\xbc6\xf2F\x1c\xed.W\x1bF\xe6\xfd1\x93\xedP\xf0x\xfe\xff\x00G{\x95\xb3\x88\xdcY\xdaN\x04\x97*\xbb\xa3%\xc9U\xe5\xb1\x90s\xd6\xaa\xd6\xfe8\xfd\xa6o|\xbd&\xdaY\x8d\xc2\xc8$\x9d\xc2\xeebyFoJ\xedc\x8d\xc3\x80Ef\x92x\xa0[\\\xcf\xf7\x9bW\xb8o<K\xf7f9\x88H\xab\xb5I\xc9\'\x19\xe7h\xe2\xacc\xb1\xb0\x96\xddq#\xa4\xab#\rI\xe9b1\xe9,q\xf7\xc5U\xdc^\x18\xe5%\x99\x1a\x17U#P\xd43\xfc\xd8\x19\xef\xc0\xadS\xc5\xde*]b\xf3\xca\xd4.\xe3\x85\x00I\x15[|k"0\xc8e\\\x16PG\x03#\xe6\xb2\xab\xf3a\x7fs\xa7\xc7e(\x12H\xfb\x04M!v/\xd4\x1c\xe1z\x8e\x00\xf7\xaa^\xad\xa9\xcf\xa9\xdcKuu$\xcdt\xe0)g;\x88\xc0\xc2\xe3=\x868\xa7Z\x0f\x86u\xef\x14jvV\x9aM\xb3\xbd\xe3\xc9\xb8I\x9c\x05\xc7W$tQ\xdc\xf6\xae\xc7gkm\x14\x8f$\xdaSS9w\xe4g\xdc\xfbUT\xddoD\x81\x82\r\n\x00\xc6p0=\xeb^\xd3\xf5\x1d.\x1d>\xe2\xd9\xd6B\xea\x85#T\x94\x00\x1b?\x88\x82=X\xe7\x8aW\xef\xb6V1\xcb4+ "0L\xcd\x84d\x93\x91\x88\xf1\x9c\x83\x9esV\xab\xcf\xb1\xd6\x86\xdaT\xd1\xa6Yuh\xe2\x8ba\xb9\x98\x04\xb9\x97 J\xe3\x7f\nz\x95\x06\xab\xc7\xec\x7f\xc7\xd2\x12\xba\x88\xb1\xb5RF<\xcb\xa1+g\xbe\xc4\x87w8\xf7\xc5RAw\x0c\xed$\x91K\xfc8\xd8\xa9\xf3\x10\x06\x18\xdf\xee7\xa4\x9f\x15YL\xac\xda\x95O\x18,F\xf5\x9b\xc8~\xebp\xb7\xb7\x11,\xac\xb9\x90\xb4\x83>\xa3\xc7?\x1c\xf4\xaa\x06\xad\xaa\xdc\xb0t[\xb6\x11\xf9\x84\xacjG \xf2I\xdb\xd3\xe9_Bj\x9ff\x17O\xa3\xdf\xc9\x1e\xb3\x14\x9eD-*@\x96\xf2\x06\x95\xe2R\xdbw\x13\xc18\xeay5\xf3C\x16\xd4g\x8e\xd9\x15#Tn\x15\x17n\xe2\xc7\xaf~\xd5\xa4\xe9\x8foq\x19>`\x93\xcb\xfc\xd9\x18\xc6~>\xd5G7RK\xb2E\xbc\x9a\xb0w\xc6F\x7fZ\x98\xd2/\x12\xde\xe6\x14\x9d\xfdd\x8c(\xe4\x11\x8f\xefZ\xa4\x17\xaf\x1cH\x9eLq\x0689b\x08\xcfqX\x8c\xf1\xc3h\x97("\x8c\xca\xac\x869<\xd3\x95\xe7<\x03\xd78\xe7\xda\xad\x9a_\x88\xedg\xd3\xe7\xb6\xd4.\x9b|q\x96\x89\xe3\x88\xc8\xcc\xcb\xd1:\xae\x14\xf75&\xef\xa6\xb3\xcf\x13\xc4\xc0\xea\xd9\xb7\xc0\x1f\xae\x05N\xe9\xddX[\x87YA\x04n\xa0o\x9f\x8a\xb8x\xbb\xc4\x91\xcd\xf7X\x83\xc2\xadm\x8eb\x04\x8c\xaa\x81\xcf\xd7\xa9\xf75\x9ci"\xda\xfbRq\r\x87\x9a\xc5\x0b\xaa9%\x03 $\xf0z\x83\xf3]\xfd\xf9\x05\xb4\xd1\xc7fDd\x92\xd2\xc8\xb9,\xc4co\xc0>\xd5u\xf0\x9f\x87t\xe4\xb7\x96[\x8b\xc7\xb7\xbc\x82\xcd\xeeLr\xa8M\xfb\x9bhT<\xf2T\x93\xcf^\x82\xa4\xd9\xc5\xe4\x04\x8c\xb1f\x07|\xb0\xdcw\xc6v\xa2y\x9e\xees.\xc11\xed\x9cv\x02\xa1\xae\xb4\x8b++\xb4\xbb\x10\xc7\x03-\xd0\xdf\n3\x02\x14\xaeO\xa4\xe7jv\xc9=i\x8e\xa9\xa8\x99\x1a\xc9`x\xe3\xf3\x13\xd6\xe0\xee*\x15\xba0\xed\xff\x00\x15\xa2\xcf\x1e\xad\xe2\xcb\xfdN\xf5\x15\xe4\x99c\x8dg\xf5*\x97TP\xa0(\x01A\xe9\x9e\x9c\na\xa0\xe8\x1aM\xdd\xb4\xd6\xd7\x16Q\x89e\xb8^\x11U\x98)\x18m\xacrY\x8e=*= \x9eM9\xe6\xc2\xef,\xc2R\x06\x18FYB\x86\xc1\xecx\xa4\x08\x99\xb4"\xc6=\xdfI\xc8\\\x7fZ\xcf\xaet\xab\xb7\x9d\xe43\xfd\xed\xd22\xeb\xb23\xe9Q\xc9v\x00t\x19\xc5LXxf\xf4K\'\xde#D\xd8\x8a\xaf\xb5\x87\xef\x04\x98#\x81\x9c\xf1\xcf\x15\xa1\xad\xb0\xd0\xee\xef\xcd\xb4\xd7\xa9s*4\x1a|\x8e\xc8\xeb"G\xe8h\xdd\x90\xe7#\x19,8\x07\x83UH/\xfcE.\x9fun\xea\xb2\xda#.\xe7,7\xc7)#& 1\xea#\x8e\xfcS\x8d,I\xa4\xb9l\x95f\xd0\x0f\n3\x8c\x8ew\xa8\x8d\x12\xea\'\xf9A\xc6~~\xb4\xdfR\xf0\xbe\x9fkp\xa9\xa7\xea\x91F6\x13\x90\xce\xc4\x95\x1d\x17\x8erzd\n\x8b\x8bA\xb8\x9fT\xb3hd\x9e\xe1Y\x90D6\x82\xecH\xc1\x04\xa8\x1dOLV\xbb\xa7\xfd\x98x\xc2XmU\xa3\x82\xc2\x19Yd\xd9rwL|\xc5\xe1\x8a.[x\x07\xa1\xad\xcb\xc2\x1fgv\xba\'\xab\x1fx\x95\xb0\xdes\xa6\x1861\x84\xeb\x81X\xdf\x10\xf8\xb2\xd3\xa6\xdb\xcb2,E\xd8\x91\xe5\xae\t\r\xc6\x9c\xe4\xfd\xea\x9e\xee\xf6\xd1\x10\xc5\x13\xf9\xd2\xf00r\x00\xf7$T\xaf\xd9\x87\x84\x9bC\xd2-\xd1\xd0\x17iZIH<\x068\xe0\x7f\xed\xe9[\xdd\xba\xa7\xdd\xa5\x89\x86VE \xae}\xea3F\xb1K}=\x06\xd1\xb9\xb2s\xf5\xedRpG+\x12\x02\xe7\x19\xc5b:J\xddG:_I\x96\xb8\xbf\xf5\x9c\x0c\xe9\x0f\xc0\xfd;U\x1e6\xc1\xfb\xfc\xd4\x02\\\'\x9a\x14\x0c\x01\xe9\xe3\xaf\xcf4\xac\x8f+\xca\xbeX/\x91\xd3\xa9\xc7\xb5V>\xf8\xd3(R|\xb2\xa4\x803\xea?\x97jS\xc6\xbe!\xb0\xf0?\x87.\xef\xa6\x93d6\xd0o\x99\x81\xf5\xca\xfd\x91s\xdc\x9e\x00\xa7\x9b\xae\xc9y\x1c\xd1\xc6L\x804`*~vv\xd9QG\xdb\x9a\x8c\x88O5L\xfb\\\xf1\xfe\x95\xe1\x8d\x19\xb4\xcb\xabE\xba\xb9\xd5\xa0\x96\xde87\x00\x140\xdb\xbd\xcf8POn\xf5\xf3\xf4\x7fhr\xff\x00\xe9\xeb\x8b+\x88\xa5\x17\xd0,q\xde\x999\x8eH\xe3\xf4#\xe5yVRy\xc8;\xab/\xd5\xfcm\x1f\x8bm5\xddWV\x96\xe4\xde\xc9q\x8b\x08c*bU\xcf*\xd9\xe4\x00\xbd\x08\xefO|)\xaai6>\x13\xbf\x8bQr\xd3_\x10|\xb0\xb8o-Xp\xac3\xcf\x19\xe7\x81^\x95\xd0\xad\xba\x97I\xb5b[\xcc\xb9\xba\x1f\xc7P\xe3\n7\x18\x00\xe3\xf2\xfb\xf7\xad\x87N\x82\xce8\x94H\xdaYq!v\xce\x9dC|}?\xbdRn5G\x9bR\xbb\x89n$\x91"f(I\xe3 m-\xc7\xc7CW\xbf\x0fxVM\x7f\xc2\xfa\xbe\xa7g\xa7J\xf7v%\xda\xf2V?\x8dX\x9d\xa2,\xf7\x1d_\xe3\xa5Oh\xba>\xb1\xe2\xc7\x82\xc6\xdfMKr\xd6\x96\xce\xdb\xed\xd4G4q9\x01\xcc\x8b\x82\xa0\xaf\xe2=X\xf6\xaf\xac\xbc!\xe0\xcb/\r\xf8}4\xb8\xf3\xe528\x95\xcf\xe2f\x93\xf15K\xf1\x0f\x89m<!-\xa5\xb4./.\xee\x02\x19`+\x96\x86\x1c\xe5\x99\x81\xe0\x91\xb0\xce\rdo:\x83\xf5Y% 4B9\xb2\x8e\x8f\xe9l}9\x1f\x15\xf9\xbf\xe2\x1b;\xb8\xa7\xb6\x8dm\xe4%\xcbyaS*\xc5N\xd6\x00\x8c\xe4\x03_h\xfd\x8ci\xab\xaf}\x9a\xdfxsP`\x97P\x97h\xb3\xf8\x91e\xe4c\xff\x00i\xaa\xa9\xfb!\xd4\xf4\xb9\xae\xc2\xa8\x9fd\xf2=\xbc\xe5\xb2\xbe@>\x9c\x0e\xa0\x9e\xe2\xad\xde\x0b\xd1\xf5]#J\xb8\xd4\x95\xc8\x91\xae\x1cnS\xd9x\xfe\xb5\x9a\xeb}f.\xa1\x1e\xab;MP$\x9a\x97Sd\xb6\xd8\xca\x9cp3\xb5"\xea\xe9\x8cQ\xc6\xe4>7c\x8cW\xcc\xd6\xfe\x1c\xf1\x87\x85|Suocc;\xdd\xc1q$E\x95I\x127\xfbONz\xd7\xd2z3\xfd\xa3\xde\xe9\xc9&\xa3\xa0\xdbC4D\x00\xb2\xc8\x85\x99\x0f^2q\xf3R\x83\xc6z\x98\x94\xfd\xea\xd2\xde\\1%\xbc\xbes\xeeq\xc6jf\xcbX\xfb\xd2;7\xa7\x921\xf0k\x0f\xd7\xfa\xd5\xf4\xad\x0c\xbf\xe9\xd6\xeb"m\xe7e\xb5\xe0|\xa9\x1b|Uy\x969\x98\x96b\x0e\xdb\x8d\xbf^i\xde\x99\xa5i\xdau\xe4z\x85\xad\x94\x16\xb7/\tI\xc4J\x06s\xd7\x04v\xab\x1d\xd6\x99\xa5\xf8\x82\xc9\xa3\xd5l"\xbc\x880\xc2\xca9\xc8\xe7;\x86\x08\xfc\xaa\xbc.\xc2\xb6v\xfaA\xea*\xcbe\xa9Z\xbc%<\xc5\x1b\xb0Nx\xc1\x1d\xeb\x1b\'R\xea?\x88I\xda\xeedl\x1f\xe2!9\x07\x1f\x152)\x94\x9c\x16\x1f\x7f\x8ama\xe1_\x0c\xd8\x05[/\x0e\xe9\xb12\x9fN Vo\xd5\xf2j\xcf\x80\xf6\x12\xda\xc4\x91\xc6\x0bnh\xc0\n\x18\xfe]\r2\x8aX\x9d\x86\x1d[=\xd5\x81\xab*X\xb4\xd1\xa3\xe0\x1c\xa8\xcf\x157\xa7\\\xf5\x99e\xb9{~\xa7q$\x862\xb2\xa4\x8c]]\x1bb\x0858yn7Q\x8fqU\xad\x1e\xfd\x04\xd2\xd8\\\x06L6\x00n\xaa\x7f\xe2\xaev\xb7\xa9h\xdfw\x94q\xfc-\xee*\x89\xe2\x8bf\xd3\xbe\xeb\xa8\x05 \x89\x16\'$uS\xd3?J\x96\xd3\xef\xe2\xbd\x81\x16N\xb8\x1b\x1f\xb8\xfa\xd2a\xbf\xba\xb1+\x8cEw\x10)\x13\xc82\x19y17\xc1\xe5M9\x11\x01\xcclr9\xfb\x1e\xf5j\xba\xbePq\x1e\x0f\xcd&\x97\xee\x8b\xca)\xfc\xaa\x18n\xdf\xb4\xf6\xabF\x97d\xae\x82Y\x17?\xca\r@\xe9p\xf5\xef\x16\xf5\xe3\x0c3\x98\x18\xe5\xa5?\xc9\x12\r\x8e\xdd\xcd\\\xa1\x8e(\xc1#>\xdf5\xe5\xab_\\\xb2\xb0\x80"\xe7\xa9\xabB\x93\xb4g\xae)\x05\x01@\x00b\xba\xdd\xf3_Bxs\xc3V\xde\x1d\x86U\x8a\xe6y\xe4\x97\x06I$l\xe4\x8f`6\x14\xd3\xb9\x90\x8c\x801\xc6)m\xd5\xe6i<\xd7\xa2\xb4\xb9\xa6\xeb\xad\xd5\xe6k\xc3^f\x8c\xd1]f\xbc4Q]\xa2\xb99\xaeJ\x86\xea+\xbe+\xd0\x05\x14SV\xb7V\xa6\xafh=\xaaW\x15\xe5s\x15\xca\x82k5=\x85&m\x8a\xf4\xa9\xe2\x8a{Rm\x0f\xb5\x18\xae\xe6\xa1\x95J\xf0E\x15"\xf0\xfcQ\\\xc1\xa2\xaa\n1\xd4\xd7E\x80\xa6Fo\x9a\xe3\xceRz\xd4]B\x9f\xc1\xa7\x0c\xf9\xa4\xb2s^\x07\x15\xd894g4W\xa2\x94\x19\xaeA\x1e\xf4\xa8\xae\xe2\x8a\x06iN\x94\x02+\xae\xdd+\xb8\xaeW\x1b\x8dz\t\xf7\xaeX\xe2\xb8\xe6\x8c\xd1N\x95\xc0\xa5\x04\xb4\xccf\xbd\xdcE\x00\x9a1O|\xecW\x86cQ\xe6C\xcdpd>\xf9\xae\x191]\xd3O\x1a\x7f\x9a\xe3\xce\xcfzf\tc\xd6\x96Ec\xdb5\xcdf\x8c\nT\xc8Oz\x03\xb5v\x90\x9c\xf3Kyx\xe81K\x00\x91\\\xc8\x14.J\xf3Q\x9a\x84\x1fy\xb7\x92\x1d\xe4\x16\x18\x04u\xcd>2\xa4G.x\xa8\xab\xbdN\xd2\xd6Q\xe6\xa9\x00\x9fK\x0eFk\r\xe3(\x12O\xc1\x97d\x8dX2\x19\x18\xe0o\xda\xba\xad\x80\xd8\xc9\xf8\x15_\xb5\x8e\xf2\xc2\x0b\x98\xaf1\x18\x88\xe07s\x9e\x84U\x87C\x81DQ\xdco\x07w1\xfd\x0f\x7f\xadG\xdd\xa8\x9f/,\x85\x99\xb9\xcf\xc7j\x9c\xb6h\xad\xad\xad\xa3\x05r\x10`{\xe7\xda\xb2\x9d7\xa7[G\xd4C\xa6\xad\x16\xc8tkl\x9c\xb3lv\xf8\xe2\xa1\xdc\xbbh\xc9\xeey\xa7\xb2\xbe\xcca\xbaTl\xda\x8b\xc6\x84\x0c\x1f\x93M\xae\xf5\x15\x93*\x8aI\x04\xf3\xd3\x15\x04\xd7!\x8be\xf3\x83\xd75qu\xd7^\xd8\x94\xb5\x94\x81\xc1a\xc5U\xb0\xd5\xcd*\xd7W\x12\xb8\xcc\xbc\x02p\x00\x00\xe2\x9e\xc7\x1a0\xdc\xcaO\x1c\x92sM"\x8c\x07\x0c\xc3\xd3\xd74\xe6y\x83\x00\x14a{c\xbd7mw;\xc6\xd2\xdc\xccd;\x05F\xdc\x9f\xd6\x98`3\xb0\xa6W,\xbb\xc1\x1d?\x84{|\xd5S\xc4z%\xbe\xa9aq\x04\x89\xb9$\x8d\x92E\xc6r\x18t5m\x8a%\x91\xd8\xbev\x81\x9f\xa9\xaen\x1c\xf9\x04\xc0\x88\n\x9eU\xb8\xce}\xbd\xe81\xbc\xb1I#\xecpYq\xc8\xc7\x7f\xb5 \x8d\xeb\xf3O]\xfb>\xf1\x1e\x9d\xae\\\xd8Ec#\x81#\x08]U\xb0\xeb\xd4c\x8fjk\x16\x81\xe2m%\x18M\xa1\xea\x11E\xbb2\xca\xb1\x16\x18\xc7\xbe+\xf45\xb4\xdb\xb9\xa4\xf3g\xb8h\xd4\x92I#%G}\xa2\xa3/\xb4\xfb(7\x19\'\x96TV\xe4l\x00\xed\xff\x00\xbdXE\xe3.\xa0\x16!\xf88\x8a\x80\x01gm,\xc7\xdf\x03\x8a\x96\xbdBT\xc1(\x0e9\xaf\xce\xc8\xac-\xae\xa4w\x8ai\x1d\xe2\x91w\xc4\xeb\xb5\xd8\x13\x8c\x8f`;\xe6\xae\x90\xd9O\x03\xd8\xdc\xc9d!1\xb3\r\xb38\x95\x00\xc1\x04\xed<\xfd\x0f\xbd}qu\xe0\x8f\x01\xf8\x8aus\xa5\xb0\xb8*AeQ\x1b\x9c\x8er\xcb\x8a\x97\xb6\xfb)\xf0\xcb\xddI\x03F\xd7~j\xa8x\xe4\x99\x98*\x80\x01\xce\x08\xcfO\xce\xb56\x9d~\xd6\xe2\xdd\x9d\xe1\x99N\xc1t\x00\xcb\x93\xf3\xb1\xa9\xb1\xf5h\xb1\xb4\'\'\x9f\x9a\xf9\xbf\xc0\xde\x05\x8b\xc6Z\xfc\x8c\x1a\xe1t\xeb@K\xea\x0b\n+\x87e\xf4F\x06pX\xe7?\x02\xbe\x8b\xb3\xfb-\xf0%\xa5\xb1\xb7\xb9\x8e\xfe\xe1\xc3\x93\xe6=\xc1\x8c\x81\xd9@\x8c\x01\xb4|\xd6\x91\xa6\xf8kL\xd0la\xb2\xd3\xacR\xda\xd6\x12J\xc4\x9d\x8bubO$\x9fz\xf6dE\xf6\xc0\xe7&\xbc\xdf\xc4\xbe.\xea\xf1\xdc\x13o9\x8a\x14\xd9\x10\x0c\x13\xf2{\xd2\x9e\xeaYdfGh\xc1\xec\x0e+\x1d\xb9\xfb\x19\xf0\x9b\x12\xd6w\xd7\xd1\xc6A\xdb\x14\xea\x97\x11\xf21\x82F\xc6\xc7\xb75\xf3\xc7\xdaG\x80\xbcI\xe0\xebd\x9e[\xd3\x7f\xa5J\xdeS\\\xc0\x18l?\xc3\x1c\xaa\xdd3\xdb\xb1\xaf\xb5&\xbe\x8e\x03\x85\x04\xff\x00Jb\xcb\xa2x\x9e\xd6\xf7O\x95\xa2\xb9\x86t\xf2n\xed\xf7s\xb5\xbd\xc0\xf6=\x08\xefU}\'\xc7\xbdf\x0b\xa8^\xf1<\xebP\xc08\n\x01\x00\xed\x9c\x8f\xefNG\xd4\xae#:|\xf2\xe0\xf2\xad\xdf\xe8k\xf3\x96\xd7Z{K\x84\xb9\x86\xd0$\xc2\x05\x84\x0c\x0cH\x0f\x07w\xb9\xed\xeej\xee\xdfpd[\xebw\x96\xc9\xe6C+\xc0\x85N\x10\xa8VQ\xc8\xc6pI\xecN\x06+\xed\xbd3\xc1\x1e\x0f\xb0H\xe3\x8f\xc3Z|%\x1b\xf1,\nw\x11\xd0\x92\xc0\x9c\xd4\xa5\xce\x83\xa5\x91\xb54\xcb//\x1f\x84\xc0\x98\xf9\x07\x8a\xdb\xbf\xfdG\x8a4&.\x9b#\xae\xae\xf2\x05#\xed\x83\\\xfc~[x\xb21\x8d\xcf5\xf9\xfb\xa9\x9d\'K{;\xc8\xede\xbb\xb9\x92p\xd0\xf9\x91*!X\xf0J\xb4gp8\'\x1d0j \xe8~$\xf1%\xdb\xcb\xa7xZ\xe5\x0c\x8d\x96[h\x1dc\xcbw\xe7\xd2\xb9\xfd+\xef\xd9\xb4}.\x19\x04\x83M\xb4\x8aD\xc8\x8d\xd2$R\xa0\xf5\xc1\x00c5\x11q5\xdc\x8f\x1c\x10]\xcd\xb7\xaeY\x8e\xd5\x03\xe7\xbf\xd0TY?\xeaX\xb8f\x10\xf4\xaf/\x1b\x9drj\x00\xfd\x80\xa6\xda\xfd\xd5p\xa8\xa5\xb1\x8c\x9ek\'\xfb*\xfb,\xf1\'\x86\xb5\xdd\x07Y\xd5\xef\xa3\xb7\xd9r\x03Z\xa821Y\x06\xcd\xac\xc3\x00\x1fW\xcd}\xd6l\xa1[8\xf7\r\xc5x8\xee\x05bv\xf1\xc3qo\x18\x9f\xd6\xe3\x04\x1c\x9e\x18\x1c\x82=\xb9\xad\xb5nE\xe6\x8f\r\xdclx@N\x0f\xbfQ\xfa\xd2"\xea+}\x0fS\xbb\x9e4\x91\x85\xa1e]#\xf2/\xa8\x8f\xb5Cy\xe5\xb9rel\xb0\x00\x0f\xa5g\xfa\xc2\x93,\xa5B\x85\x04\x9c/\xf6\xac\x97]\x82\xefG\xd1\xe7\x9a\xda\xc5\xe1\x81\x9c\xef\x94\x03\x93#\xf3\x93\xd4\x92OsZ\xfd\xdeZw\x00u\xce\x00\xedP2\xdc\xcd\x036X\x9085\xe4VW\x9a\'\x96\xe1\xe1\xf3\x12I\x89\xd2\x0e2y\xf6\xf9\xa6\xa5U,5\x121\xed_\x16}\xa0X^hsZ\xd84\xf3+\xdc\xd9\xdb\xcc\xf0\x96$\xf9\x93\x0c\xb6G\xbej\xe5\xa0\xf8}\xb4\x8d\x1dw\x9c\xc8\xf3F\xec\xca0NW9#\xe9S\x1e4\x8e\xde/\x1f\xd8\xea\xf7q4\xed\xf7X\xbc\xa8\xf3\xc2\x94,3\xcfS\xde\x96\x8bXMjMp\xc57\x96\xb6\xf7\x11\xc3\xb4.[pNq\xd8\n\xf5\'\xea\x12\\\xf4\xbbb\x10*\xb4BYX\r\xb5\xb3\x01\x8f\xb53,\x9a\xd0\x85\xe3r\xc7\xdfz\xbb[\xacm\x15\xac\xf1\x9d\xc1\x17\x82=\xcf8\xcf\xbf\xc5\x17\xfa\xabE\xe5\xa0pX\xf4Q\xd4\x9e\x80\n\x88\xd0\x16{k\x01\x1d\xcb\xff\x00\xd1H_\xc9\x1c\xeel\x1c\x11\xf03\xf9\xd3\xab\x8b3\xae\xda\xde[$\xcb\x1d\xcd\xb3$\xf6\xcf\xd8\x11\x95 \xe3\xb1\x06\xb2\x8fm\x1c2\x17y\x83F\xad\x86=\xd7\'\xbf\xdf\x9a\x8e\x06\xdb{T\x06\xb7\xab\x88!\x16\xc8\xf9;}l:g\xa9\xfe\xb4\xf7\xec\xe3\xc5\xed\xa4j\xafgv\xf8\xb3\xbe!I\xff\x00\xf6r\x13\x85s\xf1\xd8\xd6m\xac~\xd5\xb4\xb8\x92=B\xcaXJ\x9c,\x98-\x13{\x10\xc3\xad0\x11\xdf_G\x17\xdc\x90\xb4\x92\\\xc5\x12F\x01\xcc\xccH%\x17\xdb\x8e\xb5\xa3\x8b\xa7B\xd6\x9a\x0b\xa6\x1f\x07\xcd\xc8 \x1e\xc7"\xbb\x10\xcc\x80\xf1\x9a\xfb\xe80h\x97z\x06\x19#\x91\x9eO\x18\xe2\xb0O\xb4?\xb1\xfb\x0f\x10\xdc]\xeb\x1adkg\xaa4E_<%\xc7\x1cn\x1d\x9b\x8cg\xbfz\xd7t]`\x1bX~\xf7\x03\xda3\x80Z\t]\x19\x91\x87b\xc8J\x9f\xca\xac\x8b\xf7[\xbe~\xf0\xbc\xf4\xc6\x0ej\x05\x8fY|\xc4\xd0\\\xa8\x99=:r\xb8=\x88-\x9d\xd4\xd4\xf8L\x90H\xb2Fp\xcb\xff\x00\x9b\x8a\xfc\xe4\xd4\xf4\xcbm\x07S\x9e\x07WE\x9252ZLIx\xd8\x8c:6q\xc8a\x95=\xc6*\x9dm\xa9^h\xda\x97\xde\xa0\xb4\xf3a\x0c@\x8eQ\xbd\x19s\xd1\x81\xe0\x83_\x7fx\xff\x00\xec\xc3E\xf1\x9d\x91\x8c\x9d\x97h\xa7\xc8\xbb@7\xc6z\xe0\xff\x002g\xaa\xd7\xc3\xbe)\xf0\x7f\x8e\xbc\x03|\xebw\x1c\xa2\'$\xa5\xc2\x0f6\t\x07\xc19\xc1\xf8<\xd6\xf3\xa2\xf5\xd8/\xee\t/\x1d\xbd\xd0\xc6b\xcf\xa4\x91\xbeP\xf7\xfe\xd5\xa0\x87\xa8,\xf1\x84u\xd2\xe0`\xe7|\x8a\x80\xba\xbf\x17>I\x82\xc9\x94\x8cy\x8e\x00\xeb\xd3\x03\xe6\xbe\x98\xd0\xfc\x1f\xa6x\xe7\xc0\x1a\x15\xccv\xc8\x9a\x95\xb4R\xc13\xc3\xfb\xb9&\x11\xb1\x03=\x8b\x8fc\xd6\xbel\xb0\xba\x8eW\xf3\xa6\x90\xa1\x95\xfdF1\xe8c\xd8\x95?\xe2\xbe\xb6\xfb\x12\x9f\xef>\r\x90\xfaG\xff\x00\x98\xdc\x1e}\x9bi\xa8^\'\x96[[Ky\xad\xcb#Ep5\x1c\x9d\xf2\x0eA\xa4\xf5\x19\xa4\x8e\x04\x91$*\xde`\xdcm\xc85\x94h\xda\x07\x83c\xb4\xd7\xc6\xa1\x1d\xdc\xefg\x13\x92\xd2\x03\x01\x12\xab\x00W\x9c\x84\xc6@\xe6\x9e\xeb\x7fdz\xc6\x9fem}i<w\x11\xc9n\xb3y\x01\xc9\x93\xcc\xc7\xa9\x14\xe0\x03\x80A\x1e\xf5\xbfx\x83\xc2\xf6~!idWH.\xde3\x0c\xb2\x14\x12$\xd1\x9e\xd2.FH\xec\xddh\xbb\xd15MKO\xb4\xd1L\xb1\x9b\xf8\xa1I!h\xc9X\x9cF68bG\xa4\x11\x8eOCYu\xf1<\xef%\xa8\x81\xb5\t$a*H\t`H\x18\xc1\x00m\xb7j\xabN\xady\x1b3+\x16$\x8ew\x07\xe3\xe2\xb1\xdf\xb1M\x0bU\xb0\xf1\xf5\x9b\xdc\xdb\x94Y-n\x95\xf72\xb1\\G\x9e9$\x10E}\xa8"H\xc6\x0f\x1b\x7f\xcdS|\'\xe1D\xd0\xf1wtb\x92\xf4\xc3\xe4\x86A\xe9\x8dN\x0b(c\xcb\x12G&\xac\xda\xa5\xecv\x90\x12\xce\xb9 \x9f\xa5X_u\x15\x8a\x17\x9e]\x02@\x06q\xc7\xb0\x14O<\x97n$\x91B\xb6\x9c`UkV\x94\xb1\x91@\xc0\xc9\xf9\xe9U\x8b|\xfd\xf8\x9cr\xa8\x15\xbf2O\xf8\xaf5\r`\xc8\xccc \x83\xc1\'\xbe)-2U\x91\x89\xe0\xb3\x90HQ\xdf\xb5b\x8fQY|\xc6r\xd9$\xeeF\xd4\xc61\xedVx\xce\xd2\x0eH\xc7\xbf\xebX\x07\xff\x00\xcc~\x8a\x07\x8bt]H\xc7\x88n\xec\x967ld1\x8d\x8f8\x18\xc9\n\xc0\xd6\xfc\x13\x00\xf5\xc8\x00\x9f\xad+\xe2\r\x0fJ\xf1\xbe\x89\xfb\x1fU\x02)\xa3\x1b\xadnJ\x861>03\x9e\xa3\xb1\xf7\x15u\xe1\xbe\xa4\x96\xd2\xcd\x1c\x8c\x06\xb6FRv\x07N\xa1\xa4\x9e\xc4\x86\xdb\xe9S\xac\xee\x05\xb5\xc4r\x90H\x19\x04\x0fc_\x9f2ir\xc5q\x04O\x04h\xec\xc1\xc20\xd8\xeb\x8c\x82\x186\x08\'\xa8\xfc\xabt\xf0\xcf\xd9\r\xae\xab\xe1K+\xeb\xcb\x99\x11\xef\x1cMoi\x91\x1a\xbc!\x87W#(\xce\x01\xdazt&\x9a\\}\x98\xf8\x85\xbcQ\xa5\xe9\xb7\xf6\xb3$\x97\x17\x91\xc6oUKE,=\xdd_\xb1\n\xbct\xf9\xaf\xa8\xef\xa1\x8c\xacqB\xa0E\x14a#Pp\x15W\x85\x1f\x90\x02\xb6\x17\xddW\xf0\xfeY\x83N\xa2\x01U\x7fV\xdf"\xae\xef\xfa\xc6\x9bx\x05\xb3a\xd9\xb3!\xc7\x00v\xfb\xd7\xe7g\x8c4\xf9|9\x7f\x1d\x9c\xe6\x7f0B\x8cR\xe1JH\x8cF\x19\x08 p\xa7\xa1\x1c\x1e\xc6\xb3I\xe6\xb8\x92@}j\xe7\xf0\xb2\xf5<\xe7\x80;\xd7\xe9\x8e\xbb\xe1m\x17\xc5v\xd1[\xeb\x1ad\x17\xcb\x16LfL\x87\x8f<\x1d\x8e\xa4\x10\x0f\xb6q_7\xfd\xa0\xfd\x86\xcf\xa5G&\xa7\xe1\x9b\xc7\x86\xd0c\xcd\x8aY\xb6\xb5\xbb\xb1\xdb\xe6y\x98\x1f\xba9\xc1\xcf\xe1\xefZ\x0e\x8f\xd6m/\x99<\xc8\xbc\x89[\x00\x01\xba\x92=\xb3PGU\xf3\xc8C\x95c\x9ex\'\xeb_)}\xfe\xea"\xea\xd21\xc8 \x86\xe4\xf3\xf5\xefZ\xc6\x87\xa1\xebz\x8c\xf6\xd7\xd7Ww\x1ee\xecn\xd0:\xa8\x1b\xde4\x0eT\x15+\x9c\x83\xd4t<u\xaaL>\x17\x0fey;\xea\xb61\\\xd9\xbb\x89m$s\xbd\xb6\x02r\xa4d1=0?3N\xf4\x7f\x16_\xe9\xc6\x1b\x19n\xda(\xe2\xde\xa0\xee/\x18W\xe4\xa0Q\xc0V\xef\x8e\xb5\xa3\x924@\x1c\xc0[pp\x06\xe7\x04f\xac,\xae$\x8d\xca\xbc\xe5\x03\x1cd\x93\x81\x90~\xdf\xadk\xb6\xde\x18\xf1&\x8d\xf77\xd3\x9e\xda\xfe\xe2\xea\xd9\'khf2\xbaz\x8f\xee\xd0\xe3\x05\x862@9\xedP&\xefV\xd44\xb9\xb5Y\xf4\xc9E\xa2\xccby\x8b\x86\x06F\'8\x1dO=N8=jF\xdf\xed:]I\x82\xdc\xbe\x9f9HB\xba\xce\x9b#`\xa5v\xe0)\\\xb2\xed\x00\x1e\xb8\xa6\xc9\xa6\xea\xfa\xf4\xb7Q\xab\x12 oX\x80zU$%\x82"\xaf\n\xb9\xce1U\x1dG\xfd\x1214\xda%\x8d\x82\xaes\x95\xdf\xb6\xe7>\xf5n\xfd^\xee\xce\xd1\x9ak\x941\x8eJ\xe1\x86I\xe2\xa1t\xfb[\x89\xae\xf1\x1d\x8d\xc4\xc1\xf7ac\x0cA#\xbe\x009\xfaU\x9f\xc3En5\x11\r\xa6\x98.\xf5)\x8b\xa5\xb2\xed\r\xb2G\x18\r\xb5\x81\xdc\x17\x93\xc9\xc7z\xbfxg\xec\xd2\xf7S\xb0\x8ex#\x92K\xa1)\x02\x1d\xe65\x8dA\xe4\xbb\xe4m\xc5}\x15\xe0\xcf\xb3\xfb\x0f\x0bi7,m\xad\xce\xa1pI\x9et\x00\xb0V\xc6"\x0e@%x\xe7\xdc\xd6vn\xac\x8b\x83l5J\x14\x95;i\x07\x9fl\xd6y<D\x0cr(\x80\xb0\xecI\xdb5\x82\xd9\xfd\x895\xed\xd7\xde\xf5\xfd\\ng2M\x05\x98\x13L\xe7\xd8\xc8@\x8d\x7f,\xd6\xc1c\xa0i>\x14\xd3\xc6\x9f\xa4i\xa9e\x14\x8b\xfb\xd6\x04\xbc\xb2\x7f\xfb\xc9\x1b\x96\x1f\x1d>*\xf7h!\x82C\xbfh\xf4\x9e\xbd\xb0\x7f\xefPz\xb5\xe6\x9dp\xf3D\'Eq\xc6A\x19\xc7\xf8\xaa\x07\xba\x92\xf62n.\xc1a\x92c\xce\xd9\xf9\xcf&\xa8\xae\xfa\x85\xc5\xc9%\x9fo\xf6\xae\xc3\xf4\xa8}\x16[9\xdee\xb9\x9671\x92\x883\xea\xca\x9f\xcf5\xa8\xd9\xaa\xb6\xd6\t\x14q\x85\'\xb1n\xd8\xc8\x15\x81]\xc9\x1d\xbd\xc0KK\xa5Y\x879R9\\\xfe\x13\x81V\xdd\x17X\xbb(\x01\x938\xe1\xd0\x9c\xed#\xb6{\xd4hz\xdf\xe0$\xf2\xda \xe9\xb7\x07\r\xf7=\xc5BV\x15\xa2j:}\x8c\xb2\x82\xb1\xab\xe5\x0fc\xc9\xc8\xe4b\xbf8\xbe\xd1\xfc+\x15\xa7\xda?\x88t\xaf\r\xda\xcfp\xa9y\xe8\x86\xde2\xe5\x1d\xd43\xc66\xe7\x85bE~\x94\xe8R\xad\xc3\\\xdcHT\xfd\xde\x16\x95T\xe3\x04\x8f\xf8\xac+\xc4\'\xff\x00G\xdc\xd9Zi\x16\r4\xfa\x94\x8f5\xc1\x89I\x9a\xe2y\x1bs;\x15\xf56I\xe0t\x02\xada\xeb"\xc9\x9e\xea\xde\xddd{\xcfLp\xaf\xa4\x12\x9bj\'z\x92\x97F\xcd|\xc0\t\xc8\xc0\x02\xbe=\x93\xec\xcf\xc5\xda$0_j\xbe\x1c\xbc\x8e\x02\xc4\xc90\x8f\xcdX\x80\xe7\xd4\xa9\xb8\x82}\xd8`Wzr\xdc[K\xaa\xdei\xd0\xacp_\x13o\x08""1!\xe8F\x06\xdc\xf3\x82\x00\x02\xbe\xca\x9fS\xb8\xd0.\xad\xa3\xd4\xfc\xcb\x1b\x99\xa2\x12,N\xd9\xdc:\x10\x18d\x1c\x1e\x08\xedU}o@\xf0o\x89\x12[\x9d-\xac4mt\xa3\xaf\xde\x1e\xdb|\x12$\x99W\xdd\x1e\x08W\xc1\xe1\xd4g53\xa5\xf8\xdaG\x9dm\xfa\x95\xa3\xd9\xea\x7f\xfd\xe5\xc9Q\xdb|\xf0?j\xb1\xb3\xeb\x90\xe7M\xc4J\xa7\xb1\xc7\x1fZ\xf9+I\x11M\xab\xb0\xbdXQ"\x8e\\I:\x84\x86I\x19:3\x1e8\x03(@\xcezU\xef\xc3\x96\xba\xb6\xb7wm\xa4\xda\xb1\x9e\xe3S\xf2\x96iUD\x88\x06\xe1\xc6{"\x85\x1d\xfbW\xd0\xf6\x9a\x17\x82<\x11\xa6\xc2u\x9b\x18\xb59%\xf2\xf3wwj&y\x99@U\x8e\x149\xd8\x83\xa2\xaf\xebS\x1e\x0fo\x0fxyn\xbfgh\xcb\xa7\xdb\xc91\x96(\x1d\xc4\xb7\x07\x04\xff\x00\xa8\xeb\xd0s\xc2\xe7\x02\xa6\\\xf8\x9e\xd2a\xe5\xc1\x1c\xab\xbb"9\x03\xd5\x91\xb9\xff\x0055\xba\xf0H.\xb4G\x9c\x9fC\x9d\x81\xdf\x1c|Tm\xcf\xd8\xee\x89g\xa7O\x1cZ\x85\xc7\x99\xe4\x81\xe6\xca\xa0F%\xcf\'j`\xfa\xb1\x83\xf1_;=\xce\xa1\xe0Mb\xf0I\x14\x11\xddZ\xbb\x05\x8aF\r\xfe\xa0\xe1\xd4\x9c\x8e\x87 \xd7\xda\x86\xf6\xe7Wx\xeeM\x9e\xc8\x14z\x0b\x1c\x06\x1f\xces\xd7\xaek7\xfbO\xb1\xf0%\x8e\x9a\xfa\xfe\xbb\xa1Ew,*-`\x19di\xe5pv\x86a\xc0U\xc6ry\x1d\xaa\x8a>\xa8\xa7\xa8\xb8\xd6^\'u\x8e\x14A\x86iA\x1f\x97\x8d\x87z\x8d\xd3z\xfd\xdcri\x95\x9aUm\x86\xc3#?^\xd5\xf2\xa4\xb7\x97qjp\\\xc5w\x04\xf7\xb7\xb2\x9d\xa9\n\x07\xf2\xfc\xee\xc1q\xb7\'w\x00w\xaf\xa6t/\x05i>\x01\x85L\xae\xf3]\x03\xe7\xc6\xf7!X\xdb\xb1\x1c\xec\x00\x95\xde0r\xff\x00\xa5|\xed\xf6|\xb6r\xfd\xa5\xf8b\xcd&\xb6\x9dE\xd7\x99\xba\x1ec\xde\xa8dE\x04\xf5\xc1\x00\x1a\xfb\x02\x7f\x0fO\xe2\x7f\x14YG8\xddii\x06$N\xcd&r\xa3\xe9\xdc\xd3~*\xeaw\xd63\xdat\xf8\x9eH\x8c\xa8d\x91\xd4z\xc9\xce\x95E\xf9$W:\xdfQ\x96b\x90\xc0\xe4\x06\x1b\xe0\xe0\x10}\xe9\xd7\x86\xf4k\x8d]\xa2\xd6o&\x97c\x12aF\xca\xe7?\xc4{\x9c\x8e\x95\xa5\xc1\x146\xed\x89\x00$\x01\xcd?\xbd\xd3\xfc\xab\x04\x8a,(E\x07\x1d\x06j\xb6\xd33\xe3~K\x859\xc7\xf9\xacGX\xb5\x97\xa4\\\xc2\xf7\x10y\xb3\x94\x0e\xa5\x8eP\x13\xf9\x94|\x8f~\xf5S\x02\x04]#os\xdc\xd5\xb6)c\xe10:pG\x1d+\xdb\xbdZ\xdbH\xb6{\x99\xb0Bt\x03\xa9\'\xa0\x15TK\xd2\x81pp@\xeaMd\xfa\x97\x8d\xec\xf5\xedn{\x01!Hm\xce\xdbi\x1b!$~\x8c\x7f^\x07\xbdJ\xb1\xf1%\xc4\xb1Lm\xe1&HP\x1d`d(\xfb\xf3\x8ay\xd4\xa8\xdb\x93\xc5J\x1dBg\x9f\xd2\xb8,\xd9\x03\xaf|\xd4\'\xdb\xaf\x87\xee\xbcZ\x96\xbaZM"\xc5o\x18\xb9\x968\xc6K\xc8x\x1c\x7f\xb4g\x1fZ\x9e\xd1\xec\x9emZ\xc6\x17\x04\xee\x99A\xfag&\xaf\x93j6\x8f\xa9]K.\x8b/\x98\x1c\xa2\xcep\xcb \xce\x00\xc7j\xef\x87&\xb4\xb5\xb83Mw\x15\xb9\xf3\x14\xc4\xef\x9c\x16\x00\x83\x8c\x03\xb8\xd5P\x8f\x9a\xa8t\x93\x9dC\xed\x8a\xfc\xda\xbb\xfb8\xf1\x16\x9f8\xb7\x92\xc9\xe3\x84\xb6\xe5v\xcf\xa8\x1e\xd8\x19\xe6\xafp}\x9e\xea\xf6rZ_M\xa6\xf9\xd6\xb0\x042oR\xf1g\x1f\x85\x80\xe7\x03\xe7\xad}\x95&\x95\x06\xa1r]\xad\x16\xdd\x0b\x82Ps\x92*\xfb\x06\x8f\xa3\xddY%\xbbZ\xc1*\xed\xda\xc8\xea\t\xc7\xb15\xbb\xe9\xbe0{\xeb\xc9\xe1\x8aX\xcf\x97\x1f\xa2em:\x9f=\x83\x03\x9aT\xb2\xdf\xdcA\xa1\x9c(\xc6\x927\x19_\xed_+\xf8\'\xc40\xe9lL\x93+\xc8HR\xc4\r\xdc\x0cc\xe0\x01\xd0\x0e\x05l\xf6\xba\xea\\\xb2\xc6&\x0c\xacx\x03\xe6\x98\xeb_d>\x1f\xb8\xb9yl`6\xb27;A;A\xf7\x15IM6\xefI\xd5SM\xb9WUe&\t\x0f_OQ\x9e\xff\x00\x15\x85\xeb0\xc9wuwtg\x9c\xcc\x18\xb4\xc5\x9b:\xbd\xce{\xfc\xe6\xa0\x04\x96\xd4\x01\x81\xa3;\x0cb\xb7\xbb;hnl\xa6\x87\xab\xc8\x87\x8c\xe3\x82+\x8b]\n-;G[\'U\xda2r:\xfa\xaa\xbf\xe1\xddFH\n\xc6\xee2\xa3\x83\x8eM]\xafn\xb6\xc4\xb2.?x\x06\x01\xe9\x91\xd4V\xa3\xc2\xbdV\xcaK\x11\x14\x85U\xe1R\x02\xf6\xd2O\xef\xbdI`\x8e\xba\xf1\xdb\x15\x86\xeb\x9aM\xbcs\xca\xb1\xa6w\x0eH\x15\x01f\x89m\xe6\x07\x05pq\xfav\xad\x83S\xb7\x17L\x92\xc7\x18-\xb8\xe4\xe3\xb0\xac\xf7T\xd2\xe6H\x1e\xe5[,\x1c\xe4\x01\xf3U\xde!\xb6a\xa7@%\x1d\x8b\xea\x1c\x05\xc5B\xf2\x86\xa69\x1bqQ\xbfye\x05\xbb\x11\xd2\x93\xfd\xa1\x1e\xd6\x0c\xa0\x12p\x0f\xf8\xa8\xb9d\x90\x0eT\xd7Ze\xab\xde\xdeyj\xa4\x9f\xc5\x8fo\x9a\xca\xf9\x11\x84fn\x06\xfbS\'\xcc\x0c\x17\x1b\x9e+@\xf0\xf5\x80e\x17\x123*\xe7)\x1erq\xf2k\\\xb0\x82\xe6KT\x96&\x8dP\x1ce\x9b\'"\xa8\xba]\xb8\x8a\x18\xc1\x19\x00\x01V\x81"\xda\\0\x926\n\xcb\xb6E^:\x0e\xbfQR\xbc2\xb6\xb3_\xcfs}\xa8C\x95@Q\x8a`\xbeH$\x81\xc6\xdcU\xd4h \x89\x00\x1b\x9d\xcdK\xdf\xe8\xf2j\x1at\xf6\xf7k\xe6G(\x07p<\x0ct#\x15\x8e[\x8dGC\xd4M\xa4\x90I4\x05\xbfw*\x8c\x82>kM\xd2\xb5+\x81$\x82;\x92FN\x019\x04\x1fqIM\xa7\xcbuy+\xb9U\xe8N\x0e\x07\xe5W\x1e#=?\xa9t\xdbo\xc0\xf4\xe9\x9ea!\x8bNCm\xb9\xc9nO\xde\x9dE\xd6\xca\xda\xb4\x91\xde\x9di\xe2\xde\xee\xdc\xc9,\x8b\x13\xa69n2*\xc4u{(!X\xe1>k\x81\xc2\xafO\xd6\xa9\x93-\x95\x92H$\x99X\xe0`\x03\x9ej%\xb5\xcbH\x11\x82u\xcf\x04\xfbU\x07N\xf1\x07P\xf0\xea\xb2[Z\xda%\xd4\xd1\x04\x9e|\x19$\xc2\x13\x8d\x87\xa46?\xe6\xac\x96@@\xd4\xdb\x0e3Z\xe5\xb3\xb4\xd0G#c,9\x03\xde\x96 \xd4v\x84]\xb4\xab7rr\xe9\xbb\xf5\xa9|f\xbe\x82\xe9\x13\xcdu\xd2\xbal\xf3\x7f\xeeKk\x13\xbf\xd5\x94\x13\xc5;M\x89\xc5t\x1c{\xd7N\x94\xdd\x97\x06\xac7\xae\xf3N7W\xa0\x8ai\xb8\x8aY[5\xda1K\x9a\xe0\x9a\xf3&\x81\x9a+\x94d\xd7jk\xd0\xa0\xd7aEv\x8a\x00\xa3\x15\xd0\x18\xa0\xd7i5\xc6+\xd0\x05\x04\x8a\xf34Q^\x90;\x8a+\xcc\xd1E\x15\x90\x1d\xed\xc9\xae\xe3SJ\x84\xcd*\xa1F8\xcdW\x81R\xc9\xae\x94\x1e\xd4\xa0\xcdt\xb9#\xa5*\xb1\x1e\xa4S\x80RMp\xa0\xd2\xa2\xba\x0b\x81\xd2\xba\xdaM*\x93@a]rk\xc0\xb8\xed^\x95j\xedv\xb88\xaf@\xa3\x15\xde8\xaeb\x8c\xd7\x06\xb8\'\xda\xbb"\x80\xa6\x8a)\xb9RMt\xb1\x1a{\x1c[\xbbS\xa1\x12\xa7&\x8f/=\xa8\xd5\x8a\x8f\x8e\x03\x9c\xe2\x9e\x04U\xedCH\xab\xde\xa3\xae5\x18\xa1\x07,)Z@\xa4\xea\xa9=\xca\xbdx\xa6ww\xd1B\x84\xe4qT\xbdC\xc4\xf1E\xb8y\x80U2\xf3\xc4\x93\xdc\x12\x91d\xe6\x90\xd3*\x0cWDl\xd5f\xd5\xf5\xb6rU\x1f\x14\xa5\xbd\xd3\xdf\xc7\tt\x05c\x1c\x8cq\xc7L\xd5.\xd6\xd6\xf2\xeeEg\x07\x04\xd6\x87ka=\xb5\xa4k\x81\xb5\xc8\xdc~+#\xe3\x08\xde\xeb\xa1\xdc\xb4i\x99#*\xc8}\x8e}\xbb\xd4\x88\xa3\xd3"\x0eu\x1c`Q\xa6\xa0\xbd\x92w\x9eG!N6.\x14c\xeai{\xab\x89U\xbc\xe8\xb0L\x1c\x01\xd7\x00w\xae\xcf\x95\xa7\xc0T>\x0c\x99en\xe75R\xbb\x97R2:d\x03\xf8\x91\xd4c8\xef^}\x11\x9e\xc2\xd6\xda\x06S\xe6\xb6ZY\x14\xe5\xb5\x9d\xd4\x13\xcds\xae[M\x16\x86\x19\xf2\x00\x01\x06\xc0\x03\x8d\xf8\xab\x04\x12\x8d@H\xf00\x12\x0c\xf9\x89\x9f~\xe3\xe0\xd2\x13iw-\xb7j\x85 \xe79\xae|\x1e\xebuyx\x1a\r\xb3,>\xb2\x06\x15\x86\xe1\xc8\xf6?\x15\xa4%\xb4M\x1a\xb3&{s\xed\xf1W}7\xa5\x0e\xb1m\x1c\xcd\x85\x7fQ$~S\xa5\xb1\x9f\xbfz\xcc\x9c\xd5:;9\xe3\x8b\xd4\xcc\xc0\x81\x9e\xc3\x8f\x8a\xe8\xc6\x99\\\x83\xfa\xf5\xa9\x9b\xb6B\xc2%\xfe\x13\x93\xff\x00\x15\xe40( \x91\xc5[C\xd3\xc7\x99\xa1\x08:p\t;\x81\x8ao\x19\xa8\xa7\x82S\x80\xab\x8c\xaeA\x1c\xf1L\xcd\x91,\xae\xc5\x8a\xc6w\x11\xf5\xe2\xac>QBr\xac\x00\'\x91\xcf\xa4\x9e\x9cS\x94\xb6\x1c\xe5p3\xc5"n\x9d$\xecW,=\xc1\xe0\x1e\xd4i\x1e\xd5_\x06H7\x05<\x11\xea\xcf#\x1e\xdc\xd5oX\xd4\xec\xecT5\xc2+g$(\xc6qWK\xf1\x15\x9c[\xa4%\x90\x0c\xe0\x0eG\xd2\xb0\xfdvq\x7f\xa8\x88Q\x8b\x17q\xc1\xe89\xaa\x0e\xa1+\xf4\xcf.\xdf\xcc\xd5#\x12B\x13\x90\x8a;\xe3\xe7\xb53(<\nQf3\x99.\xd2"\x8a\xdc&8\'>\xff\x00A[7\x85,\xa2\xfd\x98\xb7i\x1a\xbc\xd3e\x1d\x8f\xb2\x1e\x9f\xadg:n\x89w\xa8\xbc6\xd6\xc8\x00Q\xb9\xcb~\x15Q\xc1l\xff\x00a[\x97\x87\xac\xe0\xd3\xb4\xe8-#\xc9X\xf7e\x8fV9\xe4\x9f\xa9\xab\xfe\x85m%\xc2\xebrU<\xbc\x07#\xf9\xb6\xce?Z]\xbcXbH\xa6\x97\x16\x81\xa2\xcb \xc1\\\xed#\xa1\xaa\x16\xaa\xbeS\x15\x07\x18\xe4\x8fj\xd5/\xf9@Tt\xe7\x15\x92\xebs\x08\r\xf4\x8c?\x01b;\xfd\x05b\xfcq\x1aC<1\xc65j`3\xef\xb5N\x1b\x03X\x9f\x8b\xb5\xcb\x89/\xbe\xedm\xa8}\xde\x18N&UNd~\xe0\xb0\xec=\x85D\xfd\x9b\xad\x8d\xbf\x8bM\xcc\xd7\x1eK\xb2\xc8-\xa1<+\xbc\x87\x1bI\xf8\xce@\xeek\xcb\xeb)$\x91\xdd\x93\xd5#\x16b}\xcf&\x90\xb3\xd3[\xccW^\x19X\x10\xc3\xb1\x1c\x8cR\xe0\xf2 \xe9\xef\x02>\x8dQ\xe9,\x00\xc9>\xe7m\xfe\xf5\x03K\t51$\xfbW\xd3\xa9\x03\xc8@n8\xe4\xe3\x92~\x86\x94[Q\xb4`\x1c\x80A\xdd\xces\\\xe8\x17\xff\x00\xb5t\xe8e8\xf3\x94\x05\x99O\x1e\xb0:\xfd\rL\xf9G,y\x1c~\xb5[ki\xac+\x02[\x9d\xcf\xfev\xc5L\'\xf7\xaaU\xfe\x9e\xe12\xea\xa0\x03\x95A\xc8\xaa\x8d\xec\x05dB\x0f\'#\x1fQZ\xb5\xe5\x99\x9a \xe8\xf8\xe7\x04pqT\xbb\xbb\x12\x19\xf22\xd9\xeb\xdc\xfc\xfeU\x0e\xff\x00\xa7\xcba22\xc6\xe67\\\xab\x1d\xc1\xcf\xd2\x93\xb3}sP\x96\x07l\x83q\xe3\xa5j^\x12\xbc\x12\xc1sb\xe4\x15e,\x99\xec{\x8a\xcc\x92\x17\x89\x81\x00\xfb|f\xac\xda\\\xb3D\xeb*\x10\xac\xb2n\x078\xa9\xfd\x16\xfc\xc72!R\xca\x03\x06\\~da\x82\xa7\xechd*CT\xc5\xc3\xb47jH\x19\x05\x87?\xa5W5U\x95\xcc\xa5A\xdd\xdc\x81\xedV\xfd@\xc3p\xd0](\x01\x1d\x81q\xd7\x07\xb8\xa5\xef\xec\xad\xd1"0\xaf\xa1\xd7\x93\xedT\x91\xf4\xc9\x95/\x91nc\xf2\xec\xe6\xc8B\xdb\xba\xb6\xca\xe0{{\xfbP\xeb\xaf<\xef\xde\xbeL\xfbL\x90Xi\xd6\xfa\x8c\x91\xef{;\x94\x0c\xa3\xf1\x18\xe48?\xa1\xc1\x15\x9c\xe9\xde,\xd0b\xbd\x99\xe2\x90[\xad\xd4@\xcd\xbc\x15\xfd\xea\xf4\xcfl\xe0\xe35\xf5?\x8a|5i\xab\xc2\xe95\xacr\x86FF\x88\xff\x00\x10=\xfbr+\xe2\xbf\x19}\x9cj\x1aE\xe3\xb5\x92\xceav9\x8d\xb2Y~\x84\xf5\x15\xbe\xf0\xac\xdd+\xa8Z\x0b+\x9b\x86\x8aQ\xabI\xce\x14\xa9\xc1\xc7\xd8\xefLG\n\x82Q\xc9\x1e\xc7\xb6+\xe8\x0f\x08\xea\x16\xba\xfd\x95\xd6\x91.\xa3\x19x\x1d\xae,e\x88\x83\xb6\'8*\xc3\'8n}\xf9\xaf\x1a\xe6\xefD\xd4\xb0\xc3l\xb6\xf2l\x95s\xc3\x0e\xe3\xe8Ee\x1fd\x9e\x01\xf1P\xf1&\x9f\xa8Fd\xb7\xb7\x8bw\xdedu\xfd\xdb\xc6\xdcyj{\xb1\xfe\x95o\xf1V\xb3$\xfe#\xd5f\nZ\xdc\xcc\xa18\xe4\xa4@&s\xf3\x8c\xd2/:}\xbau\x8b\xabKk\xb8\xeeb0\t\x1c.=\x0eN\n\x9cw<\xd2\x96\xdf\x12\x10\xad\x91\x8d\x8d^\xae|gcr\x97\x11\xbe\x85\xbc\x1c\x85\xdd.\x06\x07\xf3q\xc7\x157\xe1\x0f\x0e\\I<:\xf6\xa1g\x1d\xa7\x97\x1b\r>\xcd\x10 \x8d_\xac\x84{\x91\xd3<\x9e\xb5\x97\xe8\x0f\x06\xa9\xe2\r\x16\xc5\xcec\xbb\xbd\x85%\x1d\xca3\x0c\xf4\xf7\x1d\xebv\xf1\xbf\x8bm4W\xb8\x82\'Dd\xfcl\xdc,~\xc3\xe4\xfc\n\xa3\xeaP\xcbf\x90\xd9\xd8\xc3\x89.\xb2\x1bv$\'\x04\x8c\xf1\x9c\xe2\xbaQb\xd4\xf2m\xa4\x8c\x0cri\xae\xb3|\x90F\xca[-\xd8S\xcb{c\xa7E\x14d\x91+\x00\xf3\x10\x7f\x88\x8c\xe3\xe8:W\xcf7^7\x9a{\x90\xdb\x9b\x06@\x109\xc6Nx\xc2\x8a\xfa+_\x94Cs\'c\xbb\x04U]\xff\x00K\xb8\xe9\xe9e\x14\x83\x1ev\xb2~J\xe3\xfc\xd3p\x13!\x92B\xa4c\x00}\xeaj[9\xee\xf4m\xd1J\xe9#\xab\xede$\x10A\xe3\x91U}\x1fW\x97s\xda\xdcJ\xec\xc3\x87W9\xcfn\xf5\xab\xf8}a\xbe\xf0\xbe\x95\'\xa7&6RG\xba\xb9\x1c\xd6?\xe3\xdb#\xa1N5h\xfd1+\x838\xf8\xc7==\xf1P\xd2\xd9\xa2\xb9\xfc\x1c\x84\x7f\x1dU\xe1e\xff\x00q\x00\xe9\xa5\xdd\xc4\xe1c\x9a<\x926aR:\x9f\xd9\xf7\x83\xb5\xc8\xe4{\xaf\x0fY\x97q\x93,\x08 \x97\'\xb8h\xf1\xcf\xd75\xc7\x85<\x1fk\xe1k\x1b\xad?J\xbb\x94\xc7%\xc3L\xb1\xdd0\xc8,\x00\xda\x1d@\x18\xe3\xb8\xa8\x8d\x13\xed\'\xc3sB\x82MZ\xde5\xda\x08\x0e\xfbH\xfa\x83V\xd85\xfd\x03S`l\xf5\xab\x19X\xf4T\x9d7\x1f\xcb9\xa5=\xcf\x88\xac\xd5\xad\xee\r\xd3@\x18\x1d2\x06+\xb7\xc9\xe2\x94%\x12\xc7\xa4\xb3\x01\xddI\xc6\xf5;cct\xd2\x08\x84#\xce#/\x928\xf7l\x8c\xe4}*\xedi\xa7%\xa48\x03\xd6\xdc\xbb\xe3\x96?\xf0;\n\xa5\xc1y,-\x1b\xef)$|\xc5"\x9e\x87\xdb\xe4\x1a\xbe\xdbj6\xfa\x95\xa3J\x14\t\x13\x0b"{\x13\xed\xf0kA\xd0.l.|\xdc\xfanQ\tDc\xb6\x9co\xa4\xfb\xfb\xfcR\xa3U\\\xe3zgy}kc\x0c\x92\xcf*\xa2\xa7\xe2,qY~\xa3{.\xad#\xca\xae\x04\';\x14{|\xe2\xb2\xbf\xb4?\xb4+MOW\x9a\xca\x1b\xa0-l\xa5(\xa1N\x04\x8e\xa7\xd4\xff\x00#\xb0\xa8-\x0f\xc6)\x0c\x88>\xfa\xa2"=JXeO\xc6}\xe9\xeb\xdb\x1b\xeb\x90\'h\xb2\x17tB\xa4\x0c\x1e\xff\x00&\xa4\x18\xc9^\xe2\xb4\xab\xd1*\r\x8b\x82>z\xfc\x8c\xd4\xa6\x99v\xadp<\xa8\xc0b2P\x1c\xed\xf9$\xf4\xf8\x15[\x7f\x10\xe97h?\x7f\x18*7aNF\x07\xb7z\xeb\xc3\xd7k,\x93\xc8\xac19\xf3\x07\xff\x00q\xe0~C\x15Mu\x0b42\x1f)\x93\x18\xceF74\xd1\x8d\x90o\xef[\x0c.\xb3*\x11\xd0.\xe6\xc8\xc1\xcfa\xfehV!\xc9\xe9\x9e\x95\x01gq$o\xb4)1\xf0O<\xf3V\x88\xd3y\x8d\x82\xf5\x04\xe4\xf4\x15\xcb}D\x15a\xea\xd8\xe7\xdf\xb6k\xa1\x87cR\x10\xde\\\xa5\xac\x88\xacwmb\x8b\x8d\xde\xae\xd8\xcfJ\xac]^"\xa4n\xe5# \x00\xe8\x18\x11\x9c\x7f\x8a\xb2\xa4+\x9e]\x99q\x92\x14c\xbf@k5\xd5o\xd1\xb5\xbdn\x1c\x82\x90\xde\xc9\x1a\x85\xc0\'\xcb8\xc9#\xe6\xa6\xf9\xb3-\x84\x92;\xc9!\x8aU\x8dApB\x8220>qN\x9c\x90\xb8\x02\xac\x11]\r\xd8$\x90O\x07\xfe)\xb7\x89\xd6\x1b\x8f\x00x\xd5\xfb&\x912\x91\x9ev\xb0!\x88\xeb\xce:TlB\x19\x9d\x03\x96\xda1\x9fW\x03\x8e\x9f\x9fz\xb3\xad\xac7\xfaN\xa9\xa5\xbb\x0f.\xfa\xc6[un\xc1\x99H\\\xe7\xb78\xaet\xcf\x10\x18o\xadRL\x04bG\xa8\xed\x92=;\xfdk\xab\x16\x18?\xfbH?\xa5|-\xa5i\x1e\x19\xf1\x03=\xbb\xee\xb1\xb4\x827\x96+\xd7E\x12\xcd\xe5(%\x1c\x820\x1b\xf0\xa8\xeb\x93\x93T\xdf\x1a\xf8WC\xb6ky\xb4+\x9f\xbc[\xa5\xb25\xcb\xa8bcr\x7f\x0bn\x0b\xcf8\xcfBi\xe5\xfe\x8et\xdf\xbf\xd8_[\xf9\x17V\xb3\x10\xbek2\x90T\x90\xca\xcb\xdd\x8f\xcf\xe5\x9a\x9c\xb0\xd05\xcdx[\xa6\x8d\xa3\\\xb8X\xcb<\xa4\x00\x19\xba\x10\x19\xb6\x8d\xbd\xc0\xcd{\xdb\xf5H\x12\xd7YXU\x8f\x0e\\\xe7\x9d\x87qZ\x19d\x8d\x87\xf1&\xc4z@\np\x07\xd7<\xd6`t1\x1d\x8d\xbd\xfb\xa8\xc7\xde\x19\x1a6]\xa7\xca\x1d\xddq\x80\xcd\x9e0k\xeb\x1f\xb0\x1f\x0c\x08\xfc\xdb{yVF\xb9g\x9aI2\x1bj\xe0m\x19\xcf,\x07_\x9a\xd8\xfe\xcb<=v\x9e\x00\xb4\xb3\xd4m\x84\x17P^\xdc\x07\x8d\x95[\x01\x982\x93\x8c\x83\xd7\xadXm\xf4\xbb-6\xf1\x8a\xe9\xf6\xf0Hw~\xfa\xdd\x04O\x920[)\x80O\xd4V\x0b\xc5\x1e"&\x14[\x8bR\xb6\xc6p\x1d\x91\xb2\x08S\x82\x0e\xd9\x19\xf7\xde\xb3w?\xc6v\x89\x1b*\xaf\x90s\xf9\x80;qW\x88t\x98\xb4\xd8\xd2\x18m\x82D\t$*\xf5c\xc9f#\xa9=\xc9\xae\xeeeH\xed%\xe9\xc2\x9e>k\x16\x93\xed3]\xf0\x1e\xb5\xfb/\xc4\xaf\xfbN\xc0\xa2<\x17\xc8\x02\xcf\xe5\xc8HBs\xc3\x1c\xa9\x0c\x0f<u\xa9\xff\x00\xb4\x8f\x15\xd9G\xe0I\xb5\xed=\x1e\xf6)\xfc\xb4\x8f\xc9\x05\\\xf9\xa7n\xd6\xfe_\x9c\xd4Y\x9a)\x16\xdeK/O\xe24\xf9J\xd8\xc1V\xdb*\xdd\xc0\xa6\x14\x12\n\x85 \xf1\xa7\xda\xa9>,\xf1\x82%\xfcV\xdaT\xca\xc8\xc5\x92Y\xc8\xf4\xee#8_\xd3\x19\xac\xcbP\xbe\x92)\x0b\xdd\xdd\xb7\xa8n\xe0\xfa\x8f\xd3\x15\x9b\xcb\xe3\x0f\x13\xeb\xf7\x96\xfa}\x8f\x86\\\xcb4\xa1`\x84?V\xed\xfa{\xf6\xadoB\xfb\x1e\xd7/\xd4O\xe2/\x11Cl_\x19\xb5\xb1\x8f\xcc w\r,\x84\x0c\xfd\x01\xae_/N\xe9\x11\x86\xbc\xb9\x86\xdc\xb8\xc8]Z\xd9\xb7\xec\x17\'\x14\xf2\xdb\x95\xc0m\x8f\xb7z\xa7E\xe2\xe5\xb5\x91\x96\xda0\x1bw\xa5\xdb\x93\x8a\xbfx{\xc4mx\xc7r\x05\x90\x90I\x1f\xc4}\xc9\xa8}c\xecc\xc4:~\xa5l40\xfa\xad\x85\xc6CH\x02,\xb0\x11\xda@H\xc8=\x98q\xef[G\x82\xfe\xcb\xe5\xd2\x92\t\xafR$\x7f\xe4\xfco\x9f\x92\t\x15O\xd4\xdb\xa6\\\xd9\xa4\xb6`\\\x19W*S\xe3m\xf3\xc7\xde\xa3M\x03\x16UE \xfb\xd5\xc7\xc2\x9eb\x013\x83\x89#*\xeb\xd8\xab\x0eG\xe7]\xdc*\xe8\n\x90+\xf9\xb3D\xb8i\x8f\xe3 \x9e\x99\xec1\xd8qRZ\x9c\x92\xe9\xb1\xa5\xa6\x99\x00{\xa9HQ$\x9f\xe9C\x9e\xac\x7f\x98\x8e\xc3\xa6k!\xd4\xfc{\xa0j\x9a\x9c\xd0\xda\xeb\xb6\xd2\x98\xe51I\xba@\x8c\xc5=$\xfa\xb1\x9c\xe3\xa8\xe2\xb2\x91\xad\xea[I\x04Ld\x969\x8b1\x8f,!V\x18 \x91\xc1l\x0f\xd2\xa6\x08\xc2\xa8\xc2\x96*9\xc7sW\xaf\x12\xf8z\xc7\xc7~\x1d\xfb\x94\xe7\xc9\x9c\x0f2\xce\xe9G\xaa\xdep8q\xf0z0\xee+\xe3K?\x11x\xa7\xc2\x9a\x8d\xcd\x9e\xb7`\xcf=\xad\xcb\xc2\xd9\\\x02P\xe3\xe8W\xe9_m\xe8R\x19"PN\xe5e\xf4\xe3\xa7?J\x8d\xf1\\\x9e(\x82\xfa\x03\xa5C\x0c\xf0Io\x99\xa3\xb8\x89$Tpp6dg\xd49 \xd5\xff\x00J\xf1\x02Ib\xf0\xdd\xc1\x1c\xe62\x06]\xb4\xb0\xc788\xdb\xe9Qn\xa1]\x1a\x99\t\xe3\x81\xbd|\x9b\xe2O\xb5\ro\xc4\x1ft\xd3\x83\xc5\xe5\xc8\xc1E\xbcQ\x16$\xe4aH\x1f5\xb9x\x0b\xc1\xd71\x1bk\xddQ\x0c[vyV\xfbH\xdcq\xd5\xc1\xfa\xf0*\xc1\xa6\xa7\x8c\xa0\xbc\xf3\xe7\xd0\xf4Yab0\x86\xd7\xc9e>\xe8\xe8G\'\xe9V\xddK\xc4\xb2\xd9H\xd6zf\x83s\xa9jk\x18i\xa3\xb5_2\x1bbx\xda\xd2\x1cd\xf3\xc8\x14\xfd\xd7P\x93\xa8$v\xf61G\x16\xd9\x98\xab\x17\x90\x83\xd8l\xbc\xe3\x1c\xd2m\xedD\xe5t\xab\xe1G\xf3\x02?zw\xe2\r^\r"h\xa2\x8e8\xdaB\x800l\x1c\x0f\xce\xab\x8by\xe1\x0f\x1e\xc1w\xe1\xedB\xda\x19\x1aL7\x96W\t#Fw\x82\xa3\xa1+\x8e\x95N\xd4|+\xf6\x8b\xaa \x9e[[{i\xaf7\x15y\xe5\x1b\xd7=\x01U\xe8q\xd0f\xa3\xbc\'\xe0\roG\xd7\xec\xb5+\xedDI%\x9d\xc0\x90E\x1a\xe0\x1cu\xceq\xfaUl\x90~\x06\xe4\xdd^\xdd5\xbc\x89 xa \x908\xc0\x03\x18\x1bw\x18=\xea\xe6;\'x\xce\x02\xe3\x1f\x19\xfd\xaa\x06\xce\xcfF\xf0\xaf\x8dl\xac\xe2\xd1l\xad\xde\xdd\xb7\xa3\xa4*\x99^@ \xe3\xbd}\r\xe1\x7f\xb9\xc7s\xbe\xd9\xc1\x86Ff\x03\xf8\x91\x9b\x9d\xad\xdf\x8e\x80\xd7\x1e)\xf0\xb6\x8f\xa9\xdc[]\xc8\x17\x81\xe9\x99\x7f\x12\x06\xe7\xf4\xf7\xf6\xa4\xec\xbc84\xdd\xb3Gt\xce\x15r\x18\x1e\x18w\xe2\x9c\x99\xee\xef&K\x92VYz{#L5\x823\x11,\x18\x1d\xce\x1b5E\xe5M\x04\xe4\x10YO\x04\xf3\x83Zt\xf1\x02\xfe\xa1\xc6\xde?:\xab\xdfi(wH\x9c\x9c\xe7\x02\xad\xe4\xf9\x90Z\xcb\x8c\x02\x83#\x1d\xfaW2[\xef\x04\xe7?\xe0V\xef\xab\xf4\xebn\xad\x14\xa8\xd1\xac\x80\xa8\x926\xef\x87\\\x86\x158)SY\x94\x9ag\x9e\x1e6\xc8$\x11\xd7\xb5R\xef\xfc\x17a#6\xd4#\xf9\x8cg\x18\xcf\xbdn\x0bb\x8a\x8c\xe0`\x93\xfd*\x16\xf6\xc0\r\xcd\x1a\xa2\xe0\xe7\xe4\x8a\xf3\xce\xa3\xe1\xcb\xde\x95\xd3\xe3\xb8\xb6c\xe6\x1c\xbb\x058\xca\xf6\xfa\xd5\xff\x00MX\x88+ \x1b\x9a\xadxSL6\xc6W\x9aA)\x82=\xb1;\x0fP/\xc6>x\xa9GE\x17\x04H\x98\xc3\xe7\xfe\xf4\xefJ\x08\x97[\x1c\x85I;\x9e\x99\x153\xaa\xe9\xa3\n\xcaq\x8crzU\x1a\xd9]u.\x85\xf8\xc8\x14f\xcev\xf3\x00#%\xc9\xceH\xed\xb6*5\xfc+\x05\xd3(P\x15\x80"\xa1\x1e\xd9\x19\x8c\x80c\x9eq\xd2\xbcH\x8cR\x86\x8f\xb7qK\x8f:0\x14\xa9a\xd3>\xf4\xc6\xe7Q\x83N\xff\x00\xf5\x0f\x86?\xfd1\xcb\xfec\xb5W\xb4FWB\x88\xf1\xb6\xadN\xfcio|\x9fz\x87\xe9]\xce1S\xe4I$h\xc0\x16pI\xcfL\n\xce|y\xa6\\\\i\xf0jP\x00d\xd3\xa6Y\x9d1\xcb \xe1\xb1\xf4\x06\xb4?\x0fjk\xaa}\xe5V \x81Pm\xc9\xc99\xeb\x9a\xebQ\xb2I\xe2\xb8\x81\xd4\x15u*\xea:\x10k\xd1\xe2\xb6F\xe9\xf6\xb7\xdel\x97\x11M\x1b\xa3\xaa\x92\xb9e\x1aN\xe7\xbe\xdb\xd4)\x90H\xac8\xac\xc6\xccI)\x8a\xe1"\xca\xb2\x86\x0e\xbc\x82\r^Q\xe5\xba\xb2*P2\xa8\xdd\x93\xd7#\xda\xa9\xfe\x1c\x82\xe7\xc2\xfa\x83i\xd7D\xc9e#\xb1\xb3\x90\xf3\xe8\xeb\xb4\xfc\x8e\x95\xa4\xdb\xbf\x9e\xb3\x88\xd5v\x15\xc0\x1f\xd0\xd3\xbe\x16\xe8\x9a\xa6\x96O\xc4\xba\x06\xf4\xb4:w \xaeT\xfd\rD\x1c\x15<\xee\rB@\x80Z\xbc\x8d\x1e\xdd\x80\xe4UGR\xb6i,\xa7\x9d\x97h\x9d\xbd+\xec\x07\x7f\xce\xadw\xd3\xa4\x01\xed`\x93s\x7f\x17|\x03\xfej>\xed\x08\xd3\xd1\\tR\x07\xb5\x1do\xaa\xc54\xd2t\xd4\x9bQ\xb3\xb3v\x90\xae\n\x89I\n2G\xb0\'\xef]\x10\x11\x18b98\xaf\x9f\xb5?2\xde\xe0\x85b\x07\xc5)\xa4\xea\xc2)Y\x99\x01\x04lb8$S\xdd~\xdfl\x8cq\xb7 \xe0\xd5R\xcbj1]\xa4\xe0\xe3&\xb3\xd0\xacw6~\xa1\x93\xa4T6S\x9d\xbb\x1a\xfa+C\x96\x1b\xd8\xedJ\xc8\x08fQ\xba\xad\x1a\x84R\x1b9\xc9C\xe7"\xeco\xfd\xa7\x80\xd5\x91x6\xf5\x87\x9dlx\xd9\xeaJ\xd6\xed/E\xe2l\x91\xff\x00x\xa3\x19\xfea\xeci~\x1c\xba\xb4\xb5\xb8\xbd\xe9\x97\x19\r9\xfe\x13\xed\x86\x04ps\xc3\x0eG\xdcU\x8a\xe6X\x15\xbb\x81\x82>j\x97\x016L\xa8\x92\x11\x81\x8fzmq}>\xe7V\x9c\xe3\xebT\xff\x00\x15\xddj\x9e\x1e\xd5d\x8d\xd4\xbd\xb4\xa7|2\x0f\xe5=A\xf9\x14\xca-a\xf52\xa9\x0cL7pX\x9a\xae\xea63\xf9\x981\x84\x8d\t\x07\xd5\x91\xb6\xdb\xd2cg\\.\x0f\xc5M\\\xdf*9&\xe3\xafNj\xd7\xe1\xdd\x08]\xa0\xbf\xbb\xc1`s\x14g\x81\x8f|T\x16\x97\xe1\xb8|\xe4\x96\xe3\xd6z\x85=\x01\xad:\xd27H\xf9\xc2\x85\x1f\xd2\xb3\xd7\xb7Q\xc6\xbeT\x00\xbe\xc7[\x0fN\xd8\xedV\xd6V\xc4\xb6\xb9p7\xd9y\xfdjkH\xd5\xce\x16\xc7\xcb\x19\x8f\x85#\xdb\xe6\xadJ\xdc\x0c\xd6~\xf6\xc9g*]\xdb\xcc\x04\xad\xd4u\x07\xebS\xb6z\xfa\xca\xeb\x15\xcd\xb9\x89\xcf\x01\xd4\xe5Mz\xef\x81\xfc[\x05\x9c+\xd2\xba\xcd\xff\x00\x97p\x9eZ\xdb\x97\xc6\x83\x19Q\xa4j]\xb3\xf5\xa9L\x84\x92\xca\xb9\x04\x9c\xd5\xa0`\xd7,\x8a{R \x9cdt\xa0\xbbW\xaf\x82\x08\xa6\xeb\x93\x10\xf6\xaf6`\xd7a\xeb\xbc\xe6\x8a+\x95\x02\xbb\xda)\x16\xc8\xe9I4\xac\xb4g\x14S\xbe\x95\xe8jf\xb7\x19<\xd2\x82@{\xd7r(\xc5<\r\x9a\xf34\xd7y\x15\xd8\x96\x8c\xd71J\x93^qIn\xcfz2k\xb4R\xb4W!\xa8\xa2\xb9Y\xb8\x84\x9e\xd4\xa2\xc0Gj~\xaa\xb4\xa6\xd1Q\x82\nx\xb55\x8e\x1cS\x8f.\xba\x1bW\xa9\xae^uQK\x00\nI&\xb9 \n\xf4\x01M\x1a\xe5}\xc5s\xf7\x8fj\xe6E\x1b\xd3\xc6 \n\xe79\xa6f|\xf55\xe0\x98\x9e\xf5\xcc\x8a7\xa7dW@qM\x16S\x9e\xb4\xed\x15\xda\xbb\xb1\xa3\xef^\xed\xce)\xc4p\xe4\xe6\xbdUU\xeb^=\xc2\xa0<\xe2\x94\x05p\x9a_\xd3\x1d4\x9e\xe0($\x9e*\x12\xf7Y\x8a\x00}c5L\xd4<W\x12\xa3\x06\x90\x0e=\xe9&D\x1d\xeb\xbaX\xf6\xa9\xddW[Keb\x1cb\xb3-G\xc4WWnc\xb7\xcb\x13\xde\xa3\xaeo.uy\xb6&\xed\xa4\xd5\xcfB\xf0\xe0P\xac\xc9\xfa\xd4G\x98\xb1\xc2\xd3\xe9\x1e\x06MU\xec\xf4\x1b\xfb\xd3\xe6N\xecs\xce*\xd3i\xe1\xd4\x84\xa9e\xce*\xfb\x15\xa4\x16\xf1\xf2\x07\x02\xa3n\x18\x96\xc2/\x14\x86\\nN\xf4\xea\x1c\xf1^\xc5m\r\xb4\x05\xc2\x0e\x05xoT\xc0"w\xdb\xb8\xe7?\x14e\x8c2)\\\x82\xa75C\x9a\xff\x00\xcbYP\xb3\x02\xb9\xc0\xac\x17\x8b\xba\x9d\xdd\x9d\xc5\xa4J\xdf\xfay\xe2`\xe9\xeeA\xce\xf5\xa6\xe86\x90N\xb2\xbb.d\x8d\xc1\r\xed\x91R\xfa\xad\xdbO=\xbcH\xd9\xc0\xda?\xe6\xa7X\xc7\xfb\x84\xda\x0b\xc66\xb1\'\xe2\xb3\x85\xd4\x1a;\x98\xe4<`g\'\x9c\xd3\x8b\xedmL\xa4\xa3\x93\xbb\x0c\xdf\x06\xa8\xec.`\xd3s$\x8f\xa9\xa5e\xc0\xf6\n21\x9f\x9a\xb5\xea\x1d=.\xa1\xf2\x19}$\x1d\xfeMlZ\x1d\x9cvq\\O\x80\x1ar\x07\xff\x00j\xff\x00\xde\x9fOs#\x1d\xab\x80\x07z\x88\xf0\xee\xa3m\xa8i6b9F\xf4\x84\t\x13#p#\x8e\x95\xee\xa5w\x1e\x9f\x0b\xcd$\x8a\xaa;\x9fs\xda\xb5\xb6\xec!\xe9\xf1<o\xa2\x1d\x19b\x0f\x1d\xce~\xf5\xe4w0<7\x12BT\x96W+\x8cnpq\xc5w;\xc5\x19\x06YB\x05<\xb6qN\xec\xaf-.\xa3-kp\xb3 ;w\x06\xce\x1b\xda\xb0\xadwR\xbe\xbe\xb9u.\xc13\xf8G\xf9\xa6\xba7\x8a\x8f\x85\xf5\xab(\xa4\x8c\x9b;\xc0\x16\xe0\xf3\xe8\xe7\x01\xc0\xf8\xef\xf1U\x16~ \x8b\xf1\xe2\x14\x84\x08\x9c\x90d\'\xd409\xfaW"\xb5\x96BB\x0c\xb6\t\xc7\xd2\xbe\x8d\xd8\xf8a\x8e\xd8\xcek\xb6<n\xc1\xe3\xb7\xcd*\x8c\xb2F\x8e\x8c\x19YA\x04r\x08=\x08\xfa\xd4.\xb7~\xb6v\xccT\xae\xe2\x08\x1f\x1f5\xb1\xbd0\xf4\xfbY\xae%|"&\xa2}\xfe\x9e\xf4\xcf<U[\xc4\xb7:\x8d\xc4e-\xade\x95\x08;Lk\x9d\xd8\xe3\xb5RtO\tk\x93\xdf\x9b\x9b\xdbqm\x19=da\x9c\x0fe\x1c\xd4:\xf8\xcb\xc5\x1a\x8d\xe5\xc6\x9b\xa3K\x0c\x10\xdb\xb92\\\xb2nl\x16\xe7\x04\xe4q\xdb\xb9\xab\x88\xbb\xd6t\xa8\xe1k\x9djk\xb7d\x04\xa3\x80Aoa\x8e\x82\xbc\xc6cd\xee\xd7\xd7b\xe5\xdaP\x8c\xe9\x95\xf4\x83\xfc\xa3\xfe\xdf\xde\x83\x17\xa8\x02\x08#\xb5iP\xb5\xa6\x99a\xf7k\\\x83\xf8\x9d\xbf\x89\x8f\xb95\xd6\x9b\xad\xc5\x0b2\\\xb1T\xc7\xa5\xc7;I\xeb\x90:\x8a\xa3\xdbj?\xb4\xd1\xda6t\x95\t\x0f\x1b\xf5R?\xb8\xa5\xd3\xcc\x7fI\xeeq\xbb\xeb\xde\xac\xa4\xeb\xf3<\xb6\xfeB\xaa\xc6\x8b\xa64\x03\xd0G\xb1\x14\xe2\x8c\n\xd4\xe6\x1et`\xa3oR2\xae\xa7 \xd6U\xe3K{\x84\xb7\xb9\x91\x10\xfa\x82\xee\xc7\xb0=jL\x1b\x8b@\xbfw\xb9\x92-\xa0ck\x10\r2\xba\xf1\x0e\xa2\x81\xa3\xb9\x8a+\xa8\xbb\xab\x8d\xad\xf90\xff\x005\x07\xafY\xc7~\x16mM\x1c\xc8\xca\xc1H\xd4\x87\x1d\x89\x1b\xfd\xf1JIB\xb2\x92\xb9\x00\xe7\xf4\xac>\xe1\xcc\xf2\xed\x0e\xa03\x05l\x9e\x00\xee\xc3\x153ggol\xab\xbeh\xf1\xc6\t R\xda\xff\x00\x87RY\r\xfe\x8b!\t\xcbKjx\x922z\x90\x07\xe2\x1f\x02\xa2\x96au\x0b\x0f\xc3"\xe1\x8a\xf5#\xf25\x9e\x93\xd7\x1a\xaa\xbe\x90\x0e$^\xea~j\xe6>\x9fiv<\xd8\x9d\xb7\xe5v\xda\xafZ\x0e\xb1\x0e\x9d\xaa\xc6\xa6Q\xe5L\x02\xc9\xcf\x00\x1e\x8d\xf9V\xc2\x14K\xb7p\x1cq\xcfNk\xe6\xd4\x8d\x95\xdal\xae\x08\x1b;\xb0\x07\xa6Em\x9e\x16\xd5\x92\xf3O\x8a#6\xe9aUG\'\xdb\xf8O\xe68\xa9\xdd"h\xa2\x99`\x90\xe5\x1f\xdf\xbbs\x8d\xe9\x8b\xee\x9cm\xe1YW$\x03\x86\xf8\xcd\\M\xaa\x80T.\x03\x8e\x83\xe6\xabz\x86\x9aR@Ur\xa7\x8e\x9f\xde\xaeq&\xf1\x1b\x0e\xc2\xb8\x9e\x17 \xf1\xc8=\xab\xd3\xaf:5\xad\xe5\x98S\x19\\n\x8c\xa38\x1c\xd5>;\xd6Y=\x93o*\xaa\x00\'\x19=\xa9\xfd\xb4M\n\x05+\x8e003V\x0b\x9b0\xcc\xc3f\xdf\x91\xfd\xe98\xe0!J\x9c\x1c\x1a\xc5\xc1\xd2c\xb4\xba\x94\xa3\x15\' 7c\xf1\x8eiD\x96P\x08\xa8yr\x0b\xa9\xe8z\x8a\x97\x86I/#\x11\x94pP\x01\xbb\x1e\x9e\x9dG\xbd6\xb8\xb6\xcb\x12\x07\x1f=\xaaWE\xbc\xb7\x82GI\xdc\xe1W#\'\x80O\xff\x00\x15\x94\xb9\xe9\x91\xbfY\x10\xdc]\xfe\x1e+\xa7*\xcd\x9c\xa9\x03\x7fQ\xf6\xab>\x9fn\xd7\r*\xace\x8a\xc7\xabnv \x7fz\x8fm&9]b2\xa1\x91\xcf\xa5y\xfe\xbc|SY\xbc \'\x9a \xd0\xc4\xc5\x86FW\x81\x8fz\xd0\xe0\x16\xf2M\xbdQK\x18\xf2O^;sO\xa4U(\x8c\xab\x8eq\xf4\xad\xafN\xf0\x1fF\x926w\x99\xce\x1f\xd2bv\x19Q\x8c\xe7$\xefK\x92\xd7I\xc1S\x9f\x9a\xcb\xef\xbc%~\xdal\xb1\xda\xdd%\xac\xee\xa1\x03\x04\xc9D\'\xd5\xb3\x1f\xc5\x8e\x9e\xc7\x9a\xc15?\xff\x00\x97K\xc9\xae7\xc5\xae\xce\xe1\x9d\x9b\x12J\xcaUI\xe0\x12s\x9ct8\x15\xf6r\xc6\x18\x03\xdf\xda\x9a\xcfl\xa7q#9\xff\x00\x1f\x15\xad\xb4\xf0\xb7H\xe9\xd1\x91e\xe6\xc2X\rn\xaf\x96|\x0eIl\xd2\x10<y\xc2\xa9\xf8"\xbe3\xb1\xfb%\xf1/\x84_O\xd4 \x87\xef\x8b\x1c\xe9$\xe2?\\\x8a\xb1\x9d\xd9\xc9 \xb7N\x80T\x0f\xdag\xd9\xef\x8b\xf5\x0f\x12\xdfjV\x0c\xd7\x967/\xe7\xc2\xbc\x86\x88H3\xb4\xa1\xeb\xf5\x15\xf6\xf7\x96\xe6DR\x98\xc2\x93\xc7c\xf3L\xff\x00fG\xb9\x99\xa3\xde\xc7-\xcfO\xa5g\xba\xb7N\xbf\xb4\xbb\x86\xeb\xa6\xbcsK\x82\x92~$m\xa4\xeepTg9\xa4\xc9j\'\xdc\xa0\x07\xe2\xbe\x0e\xf0W\xd9&\xa7e\xae\xc1\xe2/\x15L\xd0Xi\xaf\xe72\xc9\x842\xba\x1c\xa4q\x8c\xf4-\xd7\xdcU\xc3\xc4\x1e2\x82y\xe6\xdb*3\xb9f$\x1e\xe4\xd7\xd4\x1e \xf0\xd6\x9f\xab\xd9\x81}l\x92$d4i\x8e\x15\xbd\xf1\xd3&\xb2\xe9\xbe\xcd\xbc-\xa9\xf9\x8ds\xa6\x18d\x85\xb2\xab\x1ec\xdc\x18\x7f\xb7\x1c\x1e\xd5\x99\xbf\xb8\xb9\x93\xa8[\x9e\xaf\x13<\x9eY\xf2\x84!V5Q\xbe0\xc4ni\xe5\xe9\xeaSv\xd8lp*\x1f\xec\xeb\xed_\xc3\xb6\xb6\xbf\xb15\x8b\xe4\xb6*\xc4\xdb\\8>^\x1c\xe4\xab\x9cq\xcfC\xd2\xb4\xfdQ\xfc;\xac\xd9J\x92jZl\xd6\xd3F\xcaI\xb8\x88\xa3+pA\xf5t\xe6\xaa\r\xf6\x15\xe1\x9b\x99M\xd34\xcc\x1czb\x1bU#\x1e\xc39\'\xfei\x84\xbfa\xfa,os\x1d\x8c\x93G!#\xf7\xaf\x86\x0b\x8e\xa0)\xc0 \xe6\xa4u>\x85\r\xe4V\x85\xad\xae\xa0t\xc1G@\x84\x92}X\xc8\xcf\x1e\xf5\xcf\xc3\xc5\x82\xa1\xf21\x82\x08\xacW\xc5\x7fa\xda\xf4\x0f\xf7\xaf\x0e\\\xc1\x7fc.]\x11fB\xea\xa7\xf9Np\xe3\xfa\xd6s\x0f\xd9\xa7\x89\xcc\xa4\\YJH\xf6+\xfe\r}\xcf\xe1\xcf\x02\xdb\xf8N\xc6hmo/&\xdd\xb5\x9b\xcd\x97r\xab\x01\x82cN\x8b\x9e\xb4^x~\'\xb9i6\x93\x93\x9d\xcd\xd4\xfc\x9c{\xd4{\xcf\x13\xf5\x8e\x86\x1e\t\xf4:\xa9P\x92\xbaa\xd8\x1c\xeeq\x81\x91\x8a\x815\xb3(Q\x19\xcey\xaf\x99\xfc#\xe0?\x14i\xb7(\xe9\xac]X\xa0`\xcf\x0cr\x12\x1b\x1f\xce\x0eT\xd7\xd2z]\x85\xec\xb0\xcf\x03\xdd\x18\xda\xe6\xd6H\x0c\xaa0\xde\xb4 >:\x02\x0f5\'m\xa6\x08GN*z\xc7Oy\xa1\xba\xc2\x8fTf5\xcfA\xbf\x83\xfd+/k\xd4\xaf\xbcO\xd7\xfatJ#W2\xa9.\xab\x8c \xdd\x89<\xf1JKB\x80\xbb\x12N6\x15\xf9\x81&\x81\xe25Y\xae\x12\xe5\x8d\xba\xcf$++\x8fK\xbcg\x04\x03\xef\xde\x86\xb2\xd6\xe0H\xdaD\x0f\xe69P\x06F1\xc19on\xf5\xfa+\xff\x00\xe1\xc5\x95\x95\xa3\xd9\xda\xda$p\xc9 c\x14|\x82F=D0#8\x15\x03\xa9}\x96\xfe\xd4\x92K{\xe5{\xc8M\xcbM\x11s\xb1\xa2\xdc\xbbJ\xab\x8cu\xf6\xe9^\xf3%\xbd\xf8\xe6\x18\x9b\x18\xd9W\xb7\xd6\xa4\x89#8\x05\x08\xf9\xaf\x84<\xdd[M\x92<o\x8d\x9f\x04\x18\xc9\xe6\xaf\xfe\x0f\xfbF\xb9\xb1\xd4\xe2\x83T\xb7i\xa2oC\xca\x07\xef#\x07\xb9\x03\xf1|\xf7\xaf\xa6o\xfe\xc2\xf4\xd9\xed\x8a\xdb\xc0\xf0\xc8\xab\x84e\xb8\xdc\xc0\xfb\x9d\xc3\x9f\xa5?\xd1~\xc8,\xedvo\xd3\x12b\x99Pg\t\xb4\x826\xb7\x18$\xe7\xdc\xd55\xf7O\x92\xedM\xbc\xfd$\xc8\xce\xa7\xd6\x99\x1a~A\x14\xa2\x902\x92s\xf44\x8e\x93p\xb7\x8f\x14\xd0H\xaf\x04\xaa\x1e9\x14\xe4\x15\xedW{y=Dn\xc8\'h\xfa\x8as\xa7}\x9eX\xe9\xb6\xef\x1d\xb4b\xd7s\x16h\xa3\xe5\x15\x88\xfe\x01\xfc>\xf8\x15\xcd\xa5\x84\xd0\xdc:\xcc\xb8keg \xf2\t\x1d?.\xf5\xe6\xdd[\xc3\xdd[\xa3\xde[\x06\xf5C;zd\xdflr\x1b\xd8\xe3z\x81\xe4\xe9\'\x1c\x13P\xfe9\xf1(\xf0w\x87//\xd6X>\xfa\xd0\xe2\xce\xdd\xdc\x07\x91\xc9\x03*\xbdN\xde\xbe\xdcW\xc7\r\xe2\xbdN\xe1\x9e{\xa5\xbbI\x1d\x89ve\xc3\x16<\xe7\xd3\xceM}\xe6>\xce|7:O5\xc5\xab\xdd\xdc\xdca\xe5\xba\xb9s,\xc5\xb1\x8c\x86o\xc29\xe0.\x00\xae\xed\xfc\x05\xa2[Z\x9b1h\x1a\x1e\x18\x86\x03,W\xb9#\x92~z\xd7\xa5Z\xf8A\xe1\x87\x00C&\xa1\xa8\xb1c\x9c\xe3\x8e85%J*\x80U\x89\xf7\xaf\x8b\xf4\x7f\x19\xeaV\xf1D\xd2\xcb#\x03\x8d\xc4\x83\xc1\xfa\x9a\xd9|!\xe3\x085K\x98\xacK\xe6i\x9fj\xe0pI\x19<\x0e\x98\xadRO\xb3\xed&[\xa9U\xadBA\x91\xe5\xaa\x7f\t#\xd4Fs\xc94X\xfd\x95h\xd6\x17\xb6z\x94\x13\xcc\x97V\xef\xbd\t\nFy\xeb\xc6pA\xc1\x15\x99\xea\xbe\r\xba\xba\x17\x00XF\x84j\xd2\xe9 \xc6G\x1b\x106\xa9\x08\xb0\x9d\xd5\x98\x1fb+1\xf1w\x84\x13\xc4Z\xe4\xa3Z\xd1\xa2\x96\x0f)\x1bO\xd4"#\xccC\x1f\x1e\\\x99\x1c\x9e\xf8l\xa9\xe9\xc5S\xaf|-{\xa6\xdb\xc8\x90\xf8\x95d\xc2\xeeVp\xd1\xc9\x91\xd3\x91\x91\x8f\x8e+\xebmCMf\xb3\x91\xbe\xea.\x1f\xd3\xb6$!I\xe7\x1c\x16\xe3=\xea\xaf?\x83\xad\x99\xa7\x9a5\x8af`U\x84\x8a\tS\xfe\x08\xa8\x93\xd8\xf8\x97\xa4\xbc\x02x?\x15\x04q\xa9-\xa5\x9cm\x9e\xd9\xcfn\x05A\x9e\xdb\xcd#K\x05\xdf\x82x\xac\x8f\xecn\xeam:}_H\xba\xd4c\xb9\xfb\xd3}\xe2\xdffO(\x08|\x93\xc8\xdc9\xc6:\x8a\xb2x\xa7Z\xb7\xd2\xee]\xa5q\x95#j\xf4,\x0f\xb0\xfe\xf4\xf0i\xf6^\x18\x86\xe2\xea8B\xdeN|\x98\x14v\\\xe5\xdb\x8f\x81\x8aa\x88\xa7\t5\xd5\xaeCg\xcb.\x99^\x0f8\'\xa9\xff\x005\x9f\xea}U\xfa\xca[\x85\xb0\xf2\xa0\xdd\xd9#f\x03oN=E\x88\xc9\xfe\xb5\xa7\xe8\xfe\x16\xb8\xbb\x81\xa6{\x8c\rEU\x8a\x83\xa8\xf3\xb61\xc5T|c\xe1(\xfc}a\xa1\xea\xd6Q\x99\xee4\xc3,R\xdb\xe3\x0c\xd0\xc8C\xa9\xc7S\xb4\x83\x90=\xea\xd9\xe1{\x01\x16\x8bq\xa6_X3\xc0\xeec\x929\x10\xec!\xc0\x1b\x08\xf9\xedSm\xa9$Vec\x84\x013n.N\x18\x90z\x81R"\xf0\x1b6\xdcVG\x90d>p\x14\xafaK\xb6\xb5\xbd\xebp[\xdaG1\x85l\xe1WV\xdc\x15\xcet\xa8\xdb\xf3q\xb8\xda\xa7\x1f\x07\xbcs\x89\xcd\xcb\x1c\xb1@\xa5v\xf9<\xd5\x07\xc2?fzw\x86\xf5\xfdn\xf0,\x92\xc5\xf7T\x8e\xc0\xbf\xe2\n\xecL\x8b\x93\x9c0\xc0\x04\xf7\x15\'{\xe1W\x9et\x0f|W}\xc0M\xb18m\xa8OS\x92:T\xac\xf7w\x91\xf97\x06\xe8\xeea\x8c1$\x10z\x0e:d\xd3y\xfcB\x01\xf3V\x05W\\)nO>\xf5+\xab\xce\xd7\x12\xdaIu\x1f\x934J\x88\xec\xc3y\x00\x1f\x98\x05\r\xb9\xee3R\xa3\xf0H\x97^\xb9\xdeP\xc7m;i>\xc7<\xd4\x85\xa7\x80\xcc\x1a\x9cK\xa7\xf8\xa6\xe68\x95\x03\xf5%\xf21\x9c\x7f\t\x15y\xd5\xe1x\xace_\xbcH\x85be3"\xe1\x830\xc6\xe1\x81\x80\x7f\xcddO\xae\xde\xdc\\/\x953\xfa[+\x8cds\xd0|U\xc4\xea\x1a\xf1xV\xe1\xdah$Bd\xc0\x1e\x91\x8eK}:\xd3\xf0_\xf4\xdb\x9b[\xe8W\xa6\xcd\x04\xb2H\x19e\x87S"\xe7\xf2\xe4\x16\xc8\xc1\xfdEHo\x07%\x94\x901\x922\xb8\xc9\x8d\xdbs\x8d\xf06\xa7\xb6\x1a}\x83\xe8\xe7J\x9e\xe6\xeaV[V\x89%i\xc2\xdc2\x11\xb4\x8f0`\x96\x19\xeay\xc5V!\xfb3\xfb7\x8a\xd3\xc8\x83\xc2\xd0\xdc\xc9\x12\xb0\x13\x06b\xf9^}l\x08\xfdjkK1k7\xf7>t\xaa\x1d\xa2\xc2\x90\xa0\x12\x07\x1c~_\x9d^,\xec\xact\xe5\xf2`\x80&\xe2\x19\x8erN:\x12M\\t\x18\xaeo\xadC[\xb40\xc0\xdedrLQ<\xc9;\x06\xd2\x01\xc3\xfc\x93\xb0\xe2\x98\xbb\xe9\xd6\x16R\x11\xe57\x9at\xbf\x962\x14{\xef\x9e*#\xc3\xde\x05\xf0\x85\xb5\xbd\xad\xcd\xa6\x90\xd0:\x8e3<\xa4\xa9\xff\x00\xf8\xb0~*\xc9>\x95o\x1c\xab"\xc4\x1b\x8c\x00\xc7\x8e+\xd8%*\x18D\xbbWy\xdc;\x0ey"\xa5\xade3B\xac\xca3[h:gI\xbb\x82\xde\xde\xe6\xc6\xdd\xe7DV3\x88Uu\xb2c-\xc5f\xaf-J\xbb\xc8\xbb)m\x94\x9c\x90\x0fj\x82\x8bD\x8c\xdc$\xe51\x8eB\xf5\x00\xf6"\xa4\x16\xd0[:mQ\x87\xe1\xb0;\xd4\xc0\xed\\\xb8\x1f\xa75ig\xd2z\x7fI\x86d\xb2\xb6HL\xaedv\x03r\xc7\x00\x9f\xf8\xe2\xa1\xaa\x96a\xab|S\t\xedb\x9dv\xc8\x81\xb1\xd8\x8c\xd4\x05\xd6\x9d\x01!\x94\x00\xc7\x81\x81\xcf\x1f5h\x19$\x86\x00\x7f\xc50\xb8\x89\x81}\xa7\x91\xde\xa9:\xe5\x82_[\x92`V:\xb0I_P\xc7\x15c\x02\xaa63\x83\x8f\xb5T\xa4\x83\xcdWFB07\x03\xd75\xd6\x95el]\xd4\xb3\xa6\xd2\xb9Bp\xb9=\xb8\xebK$w+4\xbeb\xf1\xd8\x8fn\xf4\xf2\r2G\x91dY6\x86oVG8\xaf#\xb5\xb0\xbd~\xa5k<=)\xee\x1de"H\xdf\x08J\xe7\x00\x9e8\xfd\xc5=\x7fh\x9a\x01\x05r1\xb8\xf6\xc5H]<\x8b\x04v\xf0\xe1\x98\x1e\xbd\xa8\xb5[\xa0\xa0L\xeaN1\xd35)\x1d\xba\xaa\xe3f0x\xf9\xa5\x99\x01\xc7\xbdz\xfc}\x16i/\x16\xf6[\x89\x10\xacK\x1a@\xacDaWl\x11\xdc\xfc\x9a\xaaX\xe3\x0b\xa4\xaeO\xbd0\x9a=\xc0\xabt#\xb7\x15\x07y\x18\x08\xde\xddI\xab#\xe4eH\xcf\x1cT]\xc4K `A\xe4\x11\xcf\x14\x8e\xb3f.\xa1\x91G\xe6*G\xab\xfaT\xcbs\xe5\xb0\xf6\x07\xb5RfM\x80\x14\xe4g9\xfa\xfbS\x95\xd5n<\xa5\x8aC\xbc\x00\x08 \xfa\xb1\xed\xf3O\xee-\x84j\x9cn\nF\xdaa4O\xb0\xaa\xa0P2A\xc75\xe2\xb7\x9d&\xfb\xa7\xcdtm\xe4x\x8bF5\xc6\x99*\xc3\xd8\x8e1V\xd2y7\x11\xa8t\x0c\x018\'\x9an\xfa\xec\x9bJ$j\xa5\x90\x8d\xdc\xe4\x1289\xed\x8a\x80\x9e\xd6+\xc5-\x90[>\xa3\xeei\xc4\x887\xf08=i5q\x12\xae\x07S\xcdf\'\xbf\xbc\xba\x11y\x93\xb3yy\xd06\x00g\x9e>\x95\x12\xee\xda\xd6;g\xc4J7\x18=\xea\xc5\xe1X\xcd\xab\\\xb1\x18\x04\x04\x07\xdb\xbd[\x1d\x03H\x0e\x06\x1dy\xe3\xadT\xb4\xeb\xa5X\x9ba\x19\xceMJ\xc5r\xcaT\x9cs^\xa3\xe1\x8e\xab\x04=.\xc6\xd2Ug\x01\xcc\x84\xf6R\xcd\xbf\xf5\xc5f\xa5Q\xa9\xb1\xc50\xd5\xf4\x95\xb8[k\x8c\x95kI\xc4\x8a\xd8\xc9\x0b\x9fP\xc7\xb1\x15\r6\xb7h\x16X\xad\x1d\x80|\xf9\x8e\xde\x93\xf4\x03\xb5^\xd1\xc4\xa0\x06\xe4\x10x\xf7\xac\xdb\xc4\xbe\x0fe\xf3o\xb4\xa9v\xb36\xe7\xb7?\x84\x9f\xf6\x1e\xdfJ\xb4\xea\xf6W\xf6\xdd:\xe2N\x95*\xc7\x1c\xab\xfcv\xff\x00\xee\x00\x062\x9e\xc3\x07\x07\x1b\xd3p,\x06`e\xfb\x1e\xd9\xf9\xa4\xa2\xb9\x8d\xe4\x01H\x05\x9b\x035a\xfb\xbe`uq\xb8\x8f~\x98\xact\xdd\xea\x7fy\xb7\x8e(\x19d\x8d\xc0p\xfe\x90\x87\xfd\xc4\xd5\xf8x\xba\xc6!o\x1c\xd21b\x00\x96D\x19E\xf9\x19\xe4\xd7\x9d\xf4\xcb\x18\xed\x9eI\xa5;\x94!7\x04\x1e\xc4|\xd5\x8d\xcd\xad\xc4\x8c\x16(\x8b\x80\x01:Fj\xb1\xe2-(bR\x13\x1cdf\xb3$\xb4\x11;3\x1c\x00pkj\xbd\xd44\x9dHI\r\xa5\xe0\x95\x88;\x03)RO\xc6z\xd61y$\xe2S\x0c\xa8\x11\x96NF0A\x15#\xa7\x19\xd1\xae l.\x86\xecA\x18\xf8#\x91Q\xed\xfa<\xb3\xceu\xa9@\xb8,\x0eC\x10}\x85[<1\x1c\xb2_\x94\x85@\x0c\x9c\xb1\xed[-\x8d\x9a\xc1\x82$/!^\xa4V!\xe1\xedJ=:\xe6I%\x04\xc6\x11\x98\x81\xc9\xc8\x19\xab\xbd\x9f\x8e\x81>g\xddX)\xfc##5*\xdf\xf0\xd0\xde\xf9\xd3\xc2\xc7\x05p\xe0\x13\x81\x8e~\xb4\xbe\xa3h-&TT\x08\x8c\xa3O\xcdY\xfcK\xa0\x8df\xc0\xc6\xca\x04\xa9\x96\x89\xc8\xe3>\xc7\xe0\xd6\x0c\xf1O\xa4\xde\xc9\x0c\x8aQ\x91\xb0G\xb1\xad\x86O\xb4\x8b&\xdb\x1bY>\xfc\xf4\xdc\x06j\x17]\xb7\xb2\xf1\\\x02\xee\xce#\r\xf4c\x94b\x07\x98\xa3\xb6}\xc5N\xbf\x9e\xc0\xbb:\\1W\xc0!\xd0\x8c\xe7\xbeq\xda\xa3\xc0\xba\xb6\xe7\xda\x9exv\xec\\\xc2\x0b0%;\xfcT\xee\xa1\xe2+{HY7o~\x9bGo\x9a\xa4xoJ\xd6g\xb2\xb9\x16\xd6r4\x8aHn\xd8#\xb75#\x07\x80<Ws\t\x9d\x8ci\x9c\x9f*F\xf5\x1a\xa1\x83\xc3W\xddB\xe2Y \xb5\xb8\x92\x12N\x9d\x08\xc5X\x0ew\x03\x18\xa9^d\x91\x80\x15r}\xfd\xa9\xcf\xfe\xa4\x83\n\x03\xb6}\xa9\x8d\xcf\x89\'\x89U\xa2b\x186z\xd3\x19|;\xabZ\xb8\x8ekY#\x938\xe9\x90~\x84U\x9bL\xf0\x0e\xa3y,My\xfb\x98:\xb7\xf3\x11\xf4\xedK\xb3\xf0\xf4\xd7\x17\x9f\x87\x82\xc2i&V\x01\x93I\x05O\xfd\xd9\xfc\xbfz\x03NF\xe7\x1f5{\xf0N\xaf\xa8\xeb0M5\xcb\x96\x85@T$u5yp)\xa5\x85\xa5\xb6\x9fk\x15\xb5\xbca#\x8c`\x01N\x19\xc8=+\xe8\xae\x87a?L\xe9\x96\xf6\xd7\x17Oq*\xe4\xbb\xbb\x16\xdc\x9c\xe9\x04\xf6\x1c\n_\xb7\xd2\x9b\xbeW\xa6k\xc5\x94\xfbS\x8c\xab\x0e\x94\x9e\xc5=\rZ\xd7sK!\rJ\x18\x95\xa9\xae\n\xf44\xa2\xcaEv\xb9I\xbd\xb0\xec)\x16\x8d\xd6\x9d4\xdcR^f{Q\xb5\x19\xa4D\x84u\x15\xde\xe0{\xd7\xa4#|\x1a\x048\xe8h\xa3j\xf5I\xa5\xd7\x14\xc9\xf7\xabqJ,\x87\xbd\x14S\xc0@\xa2\x9a\xef\xa2\xbb\x9a\xe6*\x94\xb3\x1aPL{\x9aGi\x1e\xd5\xc9\xc8\xedL\x0c\x8a_5\xe4\xb7\x04t\xa6N\xf20>\xa2)\xcb.{sM\x9e9\x0fAI95\xd0j=\xe41\xb7$\x93J\xc7#\xc9\xee)\xc0\xb4f<\x8c\nq\x15\xae\xd3\xde\x92\x14\xfd\xa8$mDq\x13\xd74\xee+R\xc7\x9aV4\x0b\xd6\x96\xf3\x82c\x14\xea\x81\xde\x92M8\x8e\xd24\xc14\xb1(\xa3\x8a\x8ek\xdcg\x9a\x8a\xbd\xd6\xed\xedQ\x8c\x92\x81\x81\xefNe@\xa4oR\xf3\xdc*\x03\xea\xe9T\xbdg\xc40Y\xc6\xc5\xa4\x0b\x8f\x9a\xcf|M\xf6\x93kj$Hd\x05\xb0G\x15\x8a_\xeb\xda\xbf\x88\xa7\xda\x8c\xc1\x18\xd4y%\x03\x8ar8\xc9\xe4U\xd7\xc4^6{\x99Z+B\xcc\xc4\xe3"\xb8\xd0\xb4\x8dOV\x91$\xb8\x91\xf6\x93\xde\x97\xf0\xcf\x83\xb7l\x96t\xdc\xddy\xad\x97N\xd3\xe1\xb2U\x01G\x02\xa0\x93\xa9\xb6=\xf9\xa9\x98\xd28\xa5to\x0e\xc1l\x89\xe8\x19\xc7z\xb8$)\n\x8c\x0cqQ\xd6\xf30\x1d1N\xe4\x95\x8a\xf1R\x10*\x8d\x852\xc5\x89\xdc\xd1+g SS\x1eH\xcf\x02\xb8\x8ddv9\xfc\xa9\xfa\xdb\x96 \x9a?7j\xe8\xc0\xefM\x91\x009\x15\x94\xf8\xad\xbc\x9dJP\x00\x03\x83\xfa\xd6\xc4\xc8\x10\x00+9\xf1n\x8f5\xcd\xc7\xde#\x8c?\xeeI#\xa7\xe1\xac\x87\x8cm\x1a~\x9b\x13\xacZ\xccS\xa98\x198 \x8a\xd0\xf8z\xe1c\xbbtf\xc0x\xce3\xee+-\xba\xbd\xcc\x84o\xe3\x03\x8aeq\xa8\x02\x86A\x9d\xe8H#<\xe3\xde\x9a\\\xed\xf3\x13h\xcb\x96\xc1\x15\x13s3ZO\xeb\xeb\xd8{\xd6\x12\x08\x81\xc0\x1c\x9d\xf1Z\xe9\x1b\x03z\xb6h\xba\xe4\xc9& \x90\x87\x91\xd60\xc0\x91\xf8\x8f\xbdhwf\xefdQj7f\xf9\xa1\x90\xb2 \x04&\x7f\xdeO\xe2\xc7j\xf9\xfe\xd2\xf8\xd9\xdd\xc7"\x82#2\x83\x9f\xe59\xe2\xbe\x9b\xb0km^\xca\x1b\x94\x00\xef\\7\xc3\x0e\xa2\xa5\xdd\tb\x84\x81&\xc7\x85\'\x9cv#\xbdc\xbcJ\xf3*[\xbcj\xa0j!\x9fH\xd4\x0e6\xc1\xedQ\xf1\xdaG{\x03]4AKd\x10:\x0ek3\xf1\x95\xaa\x85Yb9\xf2\x81\xcf\xb6\rj\xb7\x91\xda\xd8\xc1!{\xa0\xb1\xae\\\xc6\xac\t\'\xe9\xeek$\xba\xd4\xa6\xd7\x05\xe4l\x8b\x14D\x8f-\x07R3\x8eOsP\xd1\x1d\xa4\x8eVP\x8e\xa7/\xees\xce\xc3\xde\xa9zGN\xb8\x96Q*\xfaQN\t=\xfe>kM\xfb/\xf1{\xdc\xe8\xf2i\x97r\x9f:\xd4f\x02\xc7\x93\t\xe3o\xff\x00i\xfe\x94\xb7\x8e5g\xb4\xd3.n7\x10\xcc<\xb8\xbf\xf77\xfc\n\xc74\xe4\xba\xd2\xee$\x92\xd2r\x93B\x1bc\x00\x08\xe7\x829\xebH_\xeb\x1a\xb6\xbd+}\xfa\xeaY\x95\x01*\x84\x05U\xed\xc0\x18\x15kuy=\xec\x11A,\x84\xc3\x164\x8fq\x9d\x81\xfaT\xf9|:^\xfcL\xa5D%\x832\xf7\xcf}\xbej{\xc0\x1347\x17\x16\xcc\x7fwt\xc3$\xf5\x0c\xa3 \xe7\xe6\xb4\xadV#u\x12\x91\xfb\xb8\xc7*O\x19 \xff\x00\xe75P\xf0\x15\x95\xad\xd2O\xd3\xcd\x8a@v{\xf1\xd7\xf2\xad\x03\\\xbb\xb3\t\xe44\xf0\xad\xe7\x95\xb9c\xde\x03\x15\xe9\x90\xb5S\xd4\x04\xd3Z\xca\xeaB\xe8;\x92\x0e\xe0v\x18\xee*\x8b\xaaE\xa3\xa8\xdc\xa8C\xb1\x07\x1f\x18\xe6\xb3}kW\x9fA\xb4\xb7\x9e\xcaM\x93\x8b\x95\xd8O9\xfe&\x07\xdc\x100kZ\xf0\xf6\xafe\xe2]:;\xdb_K~\x19\xa1\xfe(\x9f\x1c\x83\xf0{\x1e\xe2\xb0\xcf\x19\xc7"\xe9\xbak\xb7\xa7u\xd3\x80{\xfaW\xfe\xf5Q\xb4\xbe\xd4,\xa4_\xba^M\x03\x1074R2\xf0:\x13\x83\xf3J\xe9\xb1\x01d\x84\x8d\xd9\xd9\x89?\xd6\xacm\xbaB\xdeXFT\x84\x93Q\xc3c\xf65\xf6\x1f\xdd7\x01\xea\'\x8c\x10zTU\xf6\x97$\x9f\x84\x8a\xf9\xcd|k\xe2\xcbt\x1e^\xbdz\x0b`\r\xe7p\xfa\x1d\xc0\xd4\xa4^.\xf1\\\xb6\xb3\xbd\xce\xb5t\xf1\x87\xc6W\x01\xba\x7f\xb4\x0e*\xd2i\xe30a\xa3$\x9c\x00\x03c4\x9f\xfe\x97\xbb\xc8\xfe<X\xfb\xff\x00\x8a\xbf\xeb\xcfg\xa1\xc4\xd3\\N\x0c\xbdc\x846\x18\x9fs\xec>k.K\xeb\x8b\x9b\xe9dX\xc9g\x904\xb9\x00\x8c\x7f\xb4\n\x8f\x9ei\xe5cp\xcc\xccYN|\xcc\xb3\x13\xeeI4\xf6\xc6gyeb\x9bPF\x13\x18\x07\x9f\x9a\xa6hcA$\x825$\x8c\x1c\x9e7\xe3\xe6\xaf,\xba:X\xc6pu\xc8\xdf\x99\xb1\x8f\xb0\xab\x05\xbc\x8d$\xd2;\xe5\x958A\xd8\x0e\x995;\xa4k\xf3Z_+\x1bm\xa5\x97k\x00\xdd\x06x\xfa\xe3\xadUb\xb8r\xd8\x0b\x84\xee\x079\xc7\xf6\xc5<\x8a\xe4\x8f+\xcb\x89L\xb2\x10\x08\\\x9d\x82\xab\x9e2\x0et\x0c\x804\xef\xc6*s\xda$\xd1\xb4N\xb9F\\7\xd0\xd6\xfd\xa5x\xc2\xd5\xe2(\xd2\xc6\x8ezy\x99Q\x9f\xad[SS\xb7\x91s\xe6D\xdcg\xf1\x83\xf9\xf5\xaf\x9b\xed\xe7\x94\xdc\x88\xdfc*\xa1bzg\x1f5.\xb2\x0f-\xb0Xg\x91\x81\xef\xda\xaca\xf1_X\xb3U\x8d\xa5\x12(\x00(8\xd8~\x95\x00\xf8B\xdaL\x18\xeed\x8cw\x04\x06\xff\x00\x15\xba}\xea\xdaB@\x92&=\xc0`qQ\xd7\x97\xb66H\x1eyR!\xd8\xfd>\x9dk7\xb6\xbaI\x11#\x8c\x15\xf5\x0c\x91\xc98\xf7\xa9{\xa8.\xae\xa3D\xf2\x8c\x91\x8e\x8d\x91\xc7^*<\x9e$\xbf\xbaI@\x80\xb3\xa0\xceUurw\xf9\xe3\xbdpxB\xdd\x1d5\xde0Rw\x18\x00\xfe\xbb\xd2w\xfe/\xb5\x94I\x15\x82\xb3?y$\\~\x83\xfei\x94W\x12I\x07\x98\x8c7m\xdc\xc7\xb9\xc7\xbdV\xeel\xbc\xb9\x98*\x95$\xfd\x08\x15\xe8\x99\xa0\x8a(\xd8\xfaG*s\xcf>\xf5\x9e\xbcv\xbea$\x8e\xcc\xde\xc7\xfaV\x9a\xc7\xa4Z\xd8)[x\xf0X\x0c\xb1\xdd\x8dl\x1a]\xfc\xc6\xce\xdc\xc0\xdb$\x00\xa1\r\x82\x0e\x0ep\x0fj\xb5\xfd\xebp\x8c\x97U\xde\x06y\xe3?\x15\x92X\xea\x06\x08\x95\x18\xb3\x07\xc4\x83\x1d\xb6\xf1\xcf\xd6\xaci\x7fo2\xc0e\x9cn\xdb\xfb\xb3\xcf~\xa0\xfdkO\xd1\xbcA%\xad\xbf\x90d\xc9\xf2\xa3P\x8e\xfaPi\xdb\xbf\x19\x1e\xdc\xd4\x1b\xce\x92$\x93XM\x8b\x13\x902w\xad\x15n\xa0a\x9d\xe9\xb65\xdcH\xcex\xed\x8a\xe9\xae\x1b+\x85\xe0\xf3\x9e\xbcU=o\xd0<J8$\xe3#\xa1\x03\xbf\xd6\xac\xd1\xdc\xc9.\\\xaa\xaa\xc6\x80\x92O\xeb\xfaW\xa0\xf4\xee\xb3\xf8\xc3$bQ\xa9J\x8c \xce\xf8\xcf=\xb0+?s\xd3\xc48:69\xe4\xd2\xf2\xc8\xb0#\xbe\t\xdd\xce;\xf3Lnu\x18\xed\xe2\xde\xc3\xa0\xe8\r8r\xce\x93C6\x1c\x1c0\xc7pO\x02\xa9\xba\xa5\xc1\x92u\x89e\',\x06\xd0;\x7f\xf3P\xbcE\xd4\xa6\xb1\xb5/\x1b`\xb2\x84\x8d\x08\x19\x12\x12s\x9c\x9f\xa5;\xd3\xecc\x9aL2\xe7\x07$\x8c\xe0\xae*]\xb5O2\x05R\x03\x19\x1c\x01\x81\xfd\x0f\xfc\xd3\xa8"\xb3\x98\xc0\xe5c\xdc\x01Q\x8e6\xe7\xa8\xfa\xf1U\x08\xee$\x12\xba\xc7\xbb9\xc2\x9c\xf0;c\xf2\xf6\xa9\x139\x82EB\xe9\xe6\x04\xc1l\xf7\xc7j\xc7\xd9u\x99\x9aA5\xc1\xf3\x84ec%\x87\xa7 \xe4c\xdc\x9cf\xac\xee:\\EJ"\x85\'-\xb75t\x11\xaa\x80\x06\x068<\xd2n\x91\xe3\x80\x0ej\xb05i!S\x13\x07r9\x07\x1cc\xad6\xb7\xd4%A#\x06L;\x02=Y\xc7\xc6*\xf2\xe7\xc5\xb6\xea\x125\x89\x99\xb4\x9f3l\x94#\xb7\xb7\xc5V\x0e\x86\xfe\xa6$c#\x1f5;t\xdeT\x0e\xccv\x8c\xf2\xc7\x81Q\x9f~\xb7\xf2Dk\x11+\'\xff\x00Q\xb8\xc7\xb7\x07\x9aR{\xa7x<\xa9\xa2\x0cY1"\x1c\x11\x8fz\xad\xc9\xa3\xde+\x89lu2\xb1\xbeO\xddf\x8c\xb2\x86=\xd5\xb3\x90>9\xc5e:\xcd\xcc\xd7\x92I\xe43\x06\x16\x85\x0f\x98\x9b\x8dG\x04o\xc1\xc1\xc6\xc3j\x877I\x98\x15p\xaa\xc3W\x00\xfe\xf5lKes\x1cj\x01f\xe4\x9f\x8a\xb3X\xda%\xbc\x1bB\x8e\xbdj\xb1\xa4\x89\xac\xe3a4Cp\xc6\xe2\xa7 \x0f\x7f\xce\xad\xa96\xe8\xf200\xb9\xad7\x80\xac,\xec\xcc\x97\x92A\xe5\xdd\x04e\t\xa7tA\xb62F\xe4\xe3$\xd4\x19\xac\xe5\x04dzs\xb6ig\x8b#\x8ct\xe2\x99<m\x12.\xe1\x9c\xb7aO\xa2\x94H\xa1\xbezR\x8cQ\xc0\xe7\xbdz\xdcwQ\xca\x8a\xe1\xb6+\x90~*#[\xb2\x92\x08\xdc\x1a\x8f\x8a\x1d\xfea>\xa5=\x88\xa7>Z\x95\x18\xc7^)\xc18\x1e\x91\xf5\x14\x9a\x90\x14\r\xa0rx\xa5\x99\x91;\xe4\xe3zH\x89\x8fjk\xea+\xea\x03#\x83U\x9dj\x11\x04S\xdc\x81\xcb\xc0\xd1\x9f\xafj\xb5H\xc0\x1c\x1cTm\xe5\xa8\xbe\x81\xe1-\xb4\x13\x90z\x9c\xd6S\xc5\x01\xaf\xfa]\xdc0\xa9y\xca\x9f%v\x18p6\xe7\x8aym\x19\x94\xec\x06\xd9\x14\x9f\x87/~\xff\x00\xa7\xa8~d\x84\x04\x7f\x91\xd8\xd4\xbc\x80\x02x\xe9Q\xfa^\x9f\x0e\x9c\x8c\x88X\x979f=\xc8\xe9\x8f\x8a\x90\x96E]\xaap\x0b\x03\xdf\xda\xa5t+\x8b\xdb^\x87\xd3\xe3\xea,\xbf\x8a\x8e \xb2\x1c\xe7\x83\x85\x04\xfb\xe3\x19\xf9\xae\x0bf\'\x18\xaf\x12\x15 \xe7\x9e)`\x06\x00\xf6\xa4\x13\xf0\xf0I\xf7&\x94i\x82\x80{|\xf1V\xa9v\xae\xa0\x91\x81\x80}\xf3]0\x158\xe6\x97\xda\xa3\xa7J\xac\xeb1\xdd\x05i-\xcb0oIT\x1e\xa1\xdbp9\x1d*e\xe5TR\xce\xfbPrI8\x18\xfa\xd4T\xda\xad\x84r\x847*X\xf4\n\x19\xb3\x9e\x9c\x81U\xbdV\xe2\xda\xe2\xcd\xa0\x9ea\x029\xc0ma\x0f\xc7\xd4|\x1eju\x9d\xb3\xac\xca\xeb\x1f\x98W|i\xd4+/\xd6\xf4\xc8VK[\x8dF\x1b\xb9\x94\x96Y\xd9\t>\x90\x01S\x9e\xdd\xfb\xd3I\x9e=C\xc2\xb0\xf9\nU\xadf\x95bY\\\xfa\x95\x8f\x07#\x9c\xff\x00J\xd25\xe8l.\xf4\xfb\xcb#q,~lx\x04r\x13\x9c\xe7\x15\x81k1\xc6\x9a\xbf\x91k|\xeb\x1cqmbF\xdf\xde}8\x00\x91\xed^y\xd4\xad\xed\xba$\xd2$&\t-\xe4\x88\xa4\x8a\x0e\\\x12s\xf3\xc1Pk\xd1:+\xff\x00\xa8E\x08o2) \x93Z\xect\xe9\x00\xf6\xed\x9dX\xa5\xb4\xdb\x81qt\xb0\xdd\xcc\xf1F\xe0\xabI\x82\xc1Xt$\xff\x00.z\xd3\x1b\xe9\xa7K\xc9\xe1\xb3v\xb8\xb6\x8eO\xdd\xc9\x9cg\x9e\xa0\x1e\xbf\xf1\\\xdc\xdd\xc6-\xdc5\xd0g\x07n\x18\x82Kc\x07\x00w8\xa8Y\xef\xc8\x8a\x18\xd0\xb32>v\xe7\x19$e\x8dR\xd8~\x0e\xe3Z\x08\x04X\xdcLI\x126\xdb)\xed\x8f\xb5k\x15\x1dd\xd7\x9d\x88\xc1M\xb4\x8f\xfb\xb8\xcej\xc3\x1f\x88d\x92\xf4,1\x88\xbc\x82\x00l\x86P{\x8c\x1ag%\xec\x92L\xe5\x9f\xd7#\x9d\xdc\x00\xa7=\xc6;\x9fj\x86\x8e\xf7rG*\xed\x1e^pH\x03\x1d\xf9\x1d\xf95%g{\xa75\xd1\xb8\x99\\\xa8\x04\xedS\xb7$\xa9\x19\x1f\x15c4\x10\xdf\xc5\xa1\xee\x02\x93 !\x9fe\\\xed\xdb\xe9K\n\xb0\x82\xeb\x0eH\\`nN7\xc6M[\xf4\xed.h\xa3\x8e\xfaG*\x08\x0c6\r\xcc0z\x9ct\xad:3\xf7\xabF\x9e\xe1\xc3o\x8c\x8f,\xfe\x16?\xc2\xc7\x1c\xe3=\x85f~\x1c\xf1\nEh\xe5\x90\xf9d\xedw\xea0\x7f\x87\x07\xa0\xab\xb5\x86\xb0\xb7\xf1\x93\x14A\x13v6\xb1\xcf+\xf4\x1f\xa5L\xe96\xd6\xf6\xca\xcf\x0b3\xa4\xcb\xea\x8d\xb2}K\x9d\xce\xdc|V_\xac%\xdc\xb2\x96x\xf6\x8d\xf6\x90`aOaU4m[J\xd6c\x95\xac\xdc4R\xa3>\xd4\xdc\x029\xef\x8f\x8a\xd1.5\x93\x14\xf0\x85dh\xa4\x94!\x906H\x07\xa0\x03\xfej"\xf69\xafdY\xe3\xb8\n\x96\xf2\x92T.w\xe4\x7f\xdb\x9aw%\x9a\xdc"Hn\x15\x01\x01\x84{}J\xc0\xf2\x7f\xe2\xbbikq\xd3\xd6\xf2\x1b\'r\xaf \x922YF{\x128\xfa\x1e\xe7\xb5C\xbb\x96\x0b\xa3l\xf3\xc6\x81\x95\n>\x90v=\xbf\xcd^m\xdd\x14\xab\x19\x15\xb21\xe99\x075\xd47\xca\x89\xb6A\xb1\xd4\x9c\x81\xc9\xe0\xd53M\xd4\x1e\xdeh\x91\x83<~\xa6,\x06\x19X\x0e2=\x8fL\xfb\xd2\xf0\xdey\x90\x97\x91I\x98\xb1>\xbf\xe2\x07\xa9\xe2\xaf\xdb\xc4\x11\x88\xa0h\xfd\x0eC\xeaV\xe3`\xa7\x91\xc9\xdflVr^\x98\xc1\xdc?\xa9}8#\xef\xdb\xfa\xd5\xfa\xde\xea9\xd4yd\x95\xe7\xd5\xf3\xedK\xb3\x8e\x99\xa8\x1d0\xaa\xc6\xa7\xa0\'z\xe3\x8e\xa3\x1c\xd4\xc4l\x8c\xbe\x92\x0f>\xf5\xa6\xb1\xbb\x92\xe6\xda\x16\x90\xa0v\x1b\xe3\x8f\xb5Q\xcf\x02\xc5+\x85\x04\x80iV9\x07\x8e\xd4\x8b\x82\xd8\x04\xe0{W\x10\\\xc51q\xb8\x02\xacA\x14\xa8xy\t"\xb6\t\xe0\x1a{\\S(q"\x95oc\xce)\xbd,\x84\x82\x87#\xe2\x9ay\x0b\xb4`\x1e\x07\xe7J\xc1\x85\x1bI\x04\x9f\xedN26\xd2RI\x10]\xcc\xf8\x1d\x88\x14\xd2\xc1\x04\x04H\xa5\x17\x0b\xf4\xda\x95\x96\x7fI\x04\xef\xfb\xd2\xd8\xdd\xc6s^ \xf2\xc1\x0c\xd9\xec)\xba\xcb\x80\x19W!\xb9\x1e\xe34\xb3\xa8uR2;\x9a~7\xd6\x0b\xa6\x0b.\xfc\xf64\xd3\xa6\x08\x07`v\xa1\xbaq\xf9\xe6\x98N\x85\x8eH\xf4\x8a~\xc0\x04;y\xe3\xa1\xa6\xef"s\x19#8\xe8{\xd3W\x08\x1d\x08r\x00#\xecO\xb5u6>\x91\x9d\xfe\xf8\xa8i\x08\xc9L\r\xad\xd0\x9e\xd5\x0fx\x820U\xc9#\x07\x8ey\xab\x14\xbeZ\x90\x00\x04\xf4\x18\xed\x9a\x89\xbaR\xc1\xb76\x08\xfdNk\x1b\xd6,D\x900\x1aY\xf7\x1b\x8d\xb1\xdc\x1e*|\x1b\xb0\xd8\x81\xfb\xfdj\x9c\xe0#z\x88\x01\xbaWpZ\xac\xccwu\xe7\x02\x96\xbb\xb2\t\xb4\xcb\xb8g\xf0\x80y\xcf\xbd1\x82\xe5\xed\xc7\x9a\x01tO\xc6~\x9dk\xc4\xee\xfa\\\xf6\x17\x8a\xae\x87\x1a\xb2@\xdd\xb4\x8d\xc9\xc5L\xbb\xb3{\xbbq\xe5\x1c\x91\xbe;\x1ay\xe5\xc7f\xc4\xe3\r\x80q\x9aa\xfbaZR\x8b>[\xdb\xda\xa4/#7\x0b,\xe4H\x11\xcf\xa0c\xb6?\xbda\xfe%\x9e}6e\x96\x17h\xddd\xce\xefl{\xfcT\xd8\xec\xaeZs\nL\xf1\xa1f0\x90H\xd4;1\xc7\xbdC\xb7\xf0\xfc\xd2\xdb\xbc\x920F\x03!q\x9c}kt\x83Z) V;\xc7\x18\xf8\xab\x14z\x8d\xbc\xc8\x9b\xca\x85\xceN\xea\xf9\xb2\xc7X\xd6%\xbaF7\xaaA\xc3g+\xb3\xe9O5\xab}b\xf2h\x19\xef\x19\xf7\xf2\x00lF?!\xc5k:WU\xebV\x8c\xf1I"\\G\x81\xb1\x04\xe3~3\xcde\xe7\x83\xcbl\x1d\xb2y\xad\x83\xc4\xba6\x93q\x1c\x97\t4K)\x1e\x82\x1cs\xf0k\x1dh\xbc\xd6+\x8eA \xfcQ\xa4\xe8\x97+p.\xe5\x97\x11\xc7\xd3\xbe\xe2x\x15k\xfb\x84K\xb0\x92I\x94os\x8f\xc2\x0f\x02\xaa\xfa\x94\xf0\xdc_O-\xbd\xb2@\xbaAdS\xe9\r\x9c\x1cg\x1f\xb5m<7iq\xf8i\x1aP|\xb6a\xe5do\xb7?j\xac5\xa9\x88$\x88\x19YNU\x85V\xf5K\xbb\x8b\xeb\x85{\x92\xae\xd1\xfaC\x85\x00\x90;\x9cu\xad\x0e\xe6\xdeM\x80/(\xbb\x80l``V\x7f}\x03\xaa\xb3\x15\xce\\\xf3L\xd91/\x97\x1b\x91\xe9\'\x9d\xfd\x8d^\xcbb\x85\x83i\x04\xae\xc0\xf7\x14\xebN\x83\xceK\xa9:\x0f%\x87\xf4\xa9-+J\xbd\xd4\xadbX\x95c\xc2n2?\n\x00\xefS>\x17\xb2\x80\xc7\x12\xcc\x7f\x11\x04\xae:\x8fj\xb2kS\xc1\x1c2\x08\x9c*\x90F\xd01\xf9Ss\xca\xea\xc3N\x86\xd5(P5z\xb6\xdb\x8a\x87\xd4z\n\xf5\x1f\xc3\x83!\x8f\xcbC\x93\xa79\xcdb\xfa\x8d\xbb%\xcbD\x93<\xd3\x87\x01Z1\xe9\xc8=\xabP\xd2\xb4\xbdF-9\xef\x1d\x82\x08\x90n\x91\xbao#\x18\xfc\xeag\xec\xf3\xc3Q\xde\xde\xcf\xa8\xdcE\xba(\x8e\xd4\xc8\xe1\x9b\xb9\xfc\xab^\xd54\x98\xae\xf4\xdb\x8b(\x91Q%\xe7\xd28\x07\xaeksg\xe0\xdb\xce\xab\xd3?\x13+\x85\x02)\x0cQ`j\x91\xc0\xf4\xef\xc0Rk)ykieu\xe5BI\xd2\x06\xa2Nw\xaa\x8f\xd9\xdc\xda\x93Av\xb7k\x08R\xc1\xb2\xa7\xd5\x93\xfe+I;{UG@\xd0.4\x96.\xf7\x1b\x89\x18*\x07\x18\xab\x0bErd\xdc\xbd+\xd0<!m\x7fe\xd0mm\xefm\xcc2\xc6\xce\x02\x16\x07\n[#\x18\xce\x06\xfcT6\xc1c\xbd;dF\xc1e\x07\xea+\xad\xa8E!\x99\xcf\x05O\xd6\xb91\\/\xa8\x1c\x8a\xd3m\x92t\xf3\xcd\'\xefN<\xb5\xc1\xc5q\xb5s\x82+\x98e,v\xb0\xc1\xa5\x1d[?\x86\xbbG\xde\xbc\x11\xa9\xe9\\48\xe9K*\x91\xcfJ\xf4\xba\x8e\xe0\xd7qFi\x01\x19\xef^\xec\x02\x97\x05Xf\xbb\x08\xa7\xbd\x18\xa35\x1c\xc8\t\xe2\xbd\xf2\xc6:S\xd6\x84\x03\x90k\xcd\xa8x\xe9F+\x99\xa8\xd7B:R%\xe6N\xd9\xa9c\x10>\xd5\xcbF\x00\xe9\\\xc5w5\x16g8\xe5H5\xda0\x93\xb59*\x8d\x90V\x9b\x94\xc7\xe1^+\x95\xdaPF\r\x15\xe2\x8e:\xd1]\x00{W7\xaaYdS\xc9\xcdpeS\xd2\xa3\xa4Y[\x92\xd8\xaeQ\xa6S\x80\xb9\xf9\xa8\xfa\xbe)U,\x8b\x9e\xa6\x9c\r\x83\xa0\x06\x9a\xc0\x92\xb0\x1b\x8e)\xd0\xda\x0e\x00\xc9\xa5\x8a\xe1\xafBn=8\xafHU\x1cu\xaf%b\x8b\x92p*\xa5\xa8k&\t6\xa8-\x9fj\x18\x85\x15\xc1\xbdX\x9eP\x0e\x0bb\xb8\x92X\xc2g9\xaa}\xf6\xa8\x12\xd5\xa6yB\xf1\x9cf\xb2\xfb\xdf\xb4\xbb[\x7f6#6J\xf0\x005\xc2\xc0}\xf8\xa3\x04\xf1\xda\xae\xfe$\xf1\\zj\xc8\x16@\x08\xf9\xaf\x9e\xbcE\xe3\xab\x9b\xe9Z(eg-\xc0\ni\x8e\xbf\xa9\xea\xbe\'\xb8u\xb7V\x08\xdd\xea\xcf\xe0\xef\xb3igd\x96\xe0`g\x92\xdd\xea39\xe0\x9c\x9e\xc2\x9fU\x1c\xff\x00Z\xa7\xe9^\x1b\xd4\xb5\x89\x04\xb3\x16 \x9e\x95\xafh\xde\x15\x82\xc1Aq\x92\x05^\xd3E\x83L\x8dc\x85\x06G\x14\xfa-9\xddAn2j\x14\xae\xc4\x91\xfbT\x94\xc0\x00\x8a\x8f\xb7\x95a\x01P`\n\x9c\xb6\x9c\xb7\xf0\x93Nm\xb4d\xea\xd8\xc5K&\x9e\x88\x00@\x00\xf7\xa4C\x14\xb9\xd4\xc7\x14\xa9$N\x07\xebH\xc4\xe0/JS\xcf\xeb\xb8`S\xd5\xb5E\x1c\x8ei\x0b\x8bPW*jv\x08\x15\x18\x11\x9d\xeb\xcb{\x98\x98\xe4\x0e\x94\xe2K\xc0\x9cS\x1bh\x12\x10I94\x84\xaaebs\xc6h\x0c\xc1Fh*3\xb7\x15!\x1d\xc2\xc8\xde\xa6\xa7\x8d\xe4:\x10\xca\x08 \x8f\xd6\xa2R\x03\xc6\xdc\xd3\xa4\x85\xf3\xcb\x1c\xd7G\xabfPG\xb1\xde\x8f\xcb\xba\xb1\x07\xb6+\x1b\xf1\xd7\x85\x13OS\xa8\xd8\xc6\xdeV\x7fz\x83\xf8~Eb\xf7\xa4\xcb\xd4\xe4\x91\xef\xcd}\x9dsb\x97V\xb3A*\xe5%B\xac\x0f\xcd|\xa1\xe2}\x06\xe3D\xd4\xee,\xde>\xa4\xb4L\x07T\xedX~\xb9\xd2\xd2\xc6\xe5\'\x86-\x10\xc9\xed\xc2\xb7\xb7\xc5k\xba?Qk\xa8Z)_T\xa9\xdc\xf2EQ\xe6,\xfb-\x8b\x05\x0b\xc8?5h\xd3%\xb8\xbc\x820\x93\xc8\x92B6mW#q\xf7\xe2\xa9\xf2!s3\xcb\xc1Q\xc58\xd35\x16\xb5\xb8\x86h\x9fk\xc6s\x83\xd0\xd5s@\xb2 \x04d)\xc9\xc7bG59\x9dF\xc7\x1f\x19\xad%\x84\xb1D"\x96fF\nK\x12z\xe3\x9cf\x91\xd3B*rp[\xf0\xe4\xf03R\xd6Z\xa6\x99\xa9A\x13HT\xcb+\x15`FHlU~\xf1f\xb5y\x11"&1\x90x\xfc$\x7f\x83Pd\xb7h\xdc\xec\n\x82q\xf2\x00\xa5\xeb\x0e\xa0\x03\x83R\xb2/\x93\xe4\x99\xad\xd9_9$p\x00\xe88\xf6\xa6R\xdb\x98\xd6W\x8a`\xecH=\x08<\xf3\x8a\x7foq\xe7X\xa4\xc4\x02\xc2-\xca\xa4eq\x9cc\xf2\xa8\xcf\xbfB\xe72.\x1c\x10=<`\x8e\xd8\xf6\xa8\x93+Ft\xa2\xe4\x0f\xd7\xff\x00\r:\x98q\x9a}\xa6]^\xe9\x97\x91\xde\xda\x90\x1a"\xa4(\xe8\xc0\xf5\x07\xdc\x1aKY\x96[\xeb\x9b\x8dFx\xdb\xcf\x91\xb7\x05\x19\xca\xa9\xe0\x05=\xb1I\xc0\xa8\xd0;+\x93\xc6FOl\xe7\x8fjV\xec\xac\xc5\xe5\xc9\xca\xc6\xa3i9R1\x8f\xd6\x98\x120 \x178\r\xc6\xf8\xdcW\r\xac-\'\x9b\xe5\x8dz4\xea\xef\x8eqPWMss\x08_6G\x8cL]\x94\x9c\x80\xcc1\xbb\'\xbf\x18\xaf-\xec\xfan\x8f\x95\xfdG\x14\xee;e}\xe0\x06\xfd\xe2\x9c\xaey\xfa\x8f\xa5?\x11\xeeT\x0e0\xdf\x85q\xdf\x1cS\xad6\x85\xd26\xae\xc7l\xab\xb0P>\x95\x18b\x91\x91\x82(\xc1l`\x9e\xbd\xf8\xa7\xdam\xaa\\$\x90o\xe07\x0b\xd3\xa7\'\'\xbd-,\x0f$EQ\xc1+\x93\xb8\x9c\x0fn\xb4\xe6\xde\xc3\xee\xd1\xc6]\x946\xfc\x92\xbe\xe3\xe6\xa3\xc901\x1fV\x92[lnr)\xcf#}\xab\x94\xb5\x98\x8d\x8eQ\x89\xc8\x18\xe1q\xdb\xad:\x8e\t"\x0b\xe6m@@)\xc6\x0ei\xca\x06\x88\'\xa8\x92\xd9\xeb\x8c`\xd1\x14A\xe3b\xbb\xf1\x1e0\\\xe4q\xd8f\xa14\x8c\xd9\xe3\x1f\x02\x97\xe4\xf0+\xa8c\xf5\x1d\xdd\xc9\xc9\xf9\xa9\x8bkHm\xd8\xb8\x93p\'\xb8\xeeGj\x85\x89d3\xa2*\x1fW8\xeb\x8e:U\x84BT\x02\\\xeeLn*8\xdc:\xaf\xe9Q\'\x0eA\xc3\xe0\x103J\xf2\x01##zR[V\x12)\xc0\xf3\x11\x80+\xdc\xe6\x9e-\xc3olD\x01\x04\xe4\x1eH\xa4\xa6\x89\xe4\x89\xaeU\xd8"\x00N\xe3\x82\x07o\xadq\n\xb4\x89\xbfq#<\xe3\x8cf\xa1\xb2\x92\xaapv\xc9S\x8e\xd5.(\xc0\x188\xdbj\x98\xd3\x9833\x16\xd8W\xbf\xd0U\x8e\'\x90\x05\x7f43v\x03\x81\xc8\xff\x00\x8a\xadi\xf2F\xa6u\xda\xcc\x06Jw\x1c\x0ez\xd4\x85\xa5\xc4\xad?P\xc0\x82X7@>=\xaa+.\x08\x00\xe0\x96\xc8\xc1\'\x04pqN\x18\xcbg\xd3\xc0\xefS2\xc6^H\xe41\xae\xf1\x1e\xee\x80\x92z\n\xab\xea\x16\xcdo1\xdc\xa7<c\x9c\xe4\x1e\xf5o\x88Bv\xf9l\xa9:\xeeg,N6\xff\x00.*\'Y\x867)2\x1fB\x9f\xc4\x01\x03\xda\xa5=\xbe\x98|\xcf1I\xf4\x9c\x06\xc99\x1b\xfbd\x8f\xe6\xf6\xa6\xe3#\xcc\xd3\x82\x06\xfd\xbd\xb8\xff\x00\x8a\xea\xd69\x1e\xd4\x90B\x85L\xa8#\xa9\xef\xf9\xd7vR\xfacG\xecH \xf5\x18\xe0R\x9aY\x90\xdb\x80\xa9\xe9\xceA<\xe4\x8e\xc0{\xd3a!\xb7\x91\x9b\xca\xde\x92\x0fW\xb8\xc9\xcf\x1f5\x15\xe2Q\x14-\xbeNrXm\xb7\x1f\xe2\x9d\x1b\x99\x13\x03\x9d\xb0w\xab}\xbd\xcc\x17\x0c\xc8\x88\x91\xb18\xc6\t\x19\x1cu\xed\x9a\xb4Z]K\x04l6y\x8a\x14\x8c\xe4`\xe3\x8e\xfd\xaa\xabm\x0e\x95s$mos\xe5\x15E\x07\'\x04\x9c|\xff\x00js\x1e\x8dt\x93\xba\xfa\xa6\x8aD~\x87\xa0#\x8e\rm:q\xeav\x85f\x86\xddn\x19\xa5\xf2\xfc\xdbW\x05Fq\xbe\x00;g\x9d\xab?u\x1d\xb4\x99Ws\x18\x0b\x9d\x12.\xff\x00\xad\\\x1a\xe2IYa\x8e\x10\x03\xc7\xbcI\xb8\x15^\xdd\xaa\x87\xa9\xc6\xeb$\x85\xc6\xe3\x93\xc8<\x8e\x7f\xcfj\x98\xd2\xa6\xbd\x83N\x99\x02 \xf2\x89\\\x9e\xbd\xc9\x07\xe9Q\xb3\xcfk\x7f\x08\x92)Q\xca\xff\x00\t\xc2\x1c\x81\x80H5#\xae\xcf\x1fU\xe9V\xd2\x13"\\:\x97X\xe4\xc0\xc0\xd8\x10\x06\x06\xad\'\xbe3L\xd8\xc2\xd6\xb72\x00\x14\xa2\x90\xba\x97\'\xee}\xb3Q\xd0\xeaN\xacc1\x95\x03;@\x00\xfa\x80\xc7\xd6\x97E\xb78E\xcf\xad\x0e\xed\xfd\xb2pH\xf9\x1dj\xbb|n\xa0uyC6\xdf\xde(\\z\xb1\xd8c\xadM\xc1;<p\x9cF\x0e\xeeF9\xe7\xb5ca\x95\xe6s\x1d\xc6\xa6(\xde\x90\xe9\x86\x00\x91\x90\x06v\xab\xd9`\x08\xaa\xe9\x80\x1b\x9d\'l\x8arHE|LIPc\x19n~\xb8\xa6\xa1\xbc\xbc\x13"\x9d\xcc\x14\xaez\x1cS\x88\xd1\xa0\x91\xe5x\xd1\xd7\x9c\x01\xces\xd7\xa74\xd2u\x0e\xc5P\xf2\xa7\xd4:\x0c\xfb\xe6\x91w\x0b\x18\xd5\xccD:\x92\x16"N\xacva\x9er?aMF\x01b3\x90F\xed\xfd\xa9\xc9\xbdS#\x16\x1c\x82\x06\xe0\xc7o\x15\'\x15\xe9\x88>g\xce\xf1\x8eFO\xb8\xc1\xaa\xc8\x040%G\'\x82{\xe3\xda\x9f\xb8\xc4\x11\x95\xd9\xc9\xc2\x81\xc8\x0c:\xe7=\xe9\x8bk\xab\xa4i\xa5\x1b\x15\x05\x8f \xfa\xbe\x98\xe75\xc9\xad\xa2:\x17\x1b\x1c\x0fz\x9aMNa0\x8dT\xb7\x1f\x8b9\xce{\xe3\xe3\xda\xa7\xad5G\x92\x03\x19OVNO\xe1P\x01\xedT\xdbV\x11C1\xeb)\xc6\t\xe0\x0c\xf3\xde\x94\x8eO6\x0f/\x1e\xb5\xc9=\x87\xe7V\xbd;\xac^\xd9\x10M\xc31\x92\'+\x17\xc6p\x178>\xad\xaa\x05\xc5\x8c2dh\x03K\x0fW\xf7\xfaV\x95kp\r\xba\x94\x19`\xde\xa0\x0fRi\xdb\xba\x85\xdeI^=\xbf\xc5Q\xad.%\x81[d{\xb2\x8aw\x1e\x08\xc7|T\xb5\xbd\xe16\xf8g,\xc6A\xc6r1\xf9\xd7\xa3t\xee\xbe\x93C\x14o\x19W\x11\x1c\x83\x9d9]\x81\x1b\x0c\xe7\xe2\xb3\xf3\xf4\xf2\xae\xcc\xa7#W\xdfz\x9d\x92\xf5c\x05K\x0c\x81\xd79\x1c\xd3\t/w\xa1UbX`1\x03\x8c\xfdj\xbf4\xc1\x98\xc8\x93*\x95 \x84c\x8c\x11\xcf\xe7^J\\B&\x05\x84A\x89 \x1e0\x07L\x1e\xe6\xa1\xdc\xf5\xf9\xe6\xf3\x95W*\x80\xe7I\xcf\xa0\xed\x9c\xf6\xc7|\xf1OG\xd3\xe3M\x19\xe4\x9e\xe3\xbdM\x0b\xa4,KK\xd0\xf3\x91\xf8\x88\x1d\xb1\xda\x97\x82x\xdeH\xe32\x1e\xc0\x93\x80*\x92\xfa\xb5\xbc`\x05\x89\x95\xb7\xe4g\xff\x009\xa5!\xbf\x95\xdb\t\t\x19PX\xb7\x18\xc7qU1x\xa2\xdde\x8du$\x8d\xaf$.\xa6\xc8=\xbf\xf3\x8a\x94\xfd-\xca\x13\x82\xa3\x1b\x13\x81Z\x12\xdd\xa2\x7f\x10*X\xe1\xb0y\xe6\xa0\xe7\xd4D\xb7;\x95\x89T\xe3$t\xa6_|\xff\x00I\xa3}\xcd\x9cz\xc7\x18\x1cdTl\x81\xa0iB\x9c\x86-\xdf\x903\x82jWZ\xeb\xb7R[\xc0\xb0`\xc4$\r!]\xf0\x00\xca\xee\x0f\x04\xd4{{\x04Vb\xc3\xd4F\x06\x7fz\xba\xdb\\\x07\n\xbc\xfa\xcf~+\xa9B\xf9\xcb\xfb\xd0[\x04`\xff\x00z\xadZ_K4\xc60\x84\xc6\x0e\x01\x1ct\x14\xe9n<\x98\x86\xd9A\xc7\xea3\xed\x9ej\xe2\xc3\xaeE=\xb2\x9d%\xd5Y\x80|`\xfa1\xc0\xee>j4\xb6,\xb2\x11\xc1 m\xf5\xf7\xa9+\xdb\xa8-\xe2a1\x07f\xd2\x01\xfe,\xf6\xfe\x95\x07(\xf5\xcf\x1e\xc2\x08P\xe1@#\x19\xe9\xd3\xbd\'5\xc8\x94\x15\xb8\x8cI\x92\n\x822w\x1e\x01\xe7\xb7\xb5E.\xafron!\x9e3\x1aA1\x8d\'\x04\xa8$\xaf\x19\xc8\x1c\x1e\x99\xe9L]u\x08o\x9a5\xc3i\xd4\x14(OP\xe7:\xbe\xdcT\xcbkG\x8d[\x1b\x9cd\xef\xb7n)\x96\xa7z\xf6\xd1(\xcc\xac\xbc.\xcc\x9e\xa7\xe7\xebX\xf7\xec\x9dgR\xd7\x92\xe2\xf2\xdd\x85\xb5\xb4\x8d\xb5\x81\x03j\xaa\x90\x1b\xf3\xcfz\xd6,5-\x1fS\xd7-,\xe5\xd4\xa37\x12\x97\xd8\x8a\xd9\xdcb8 \x8cv\xc7\x07\xbdFx\xf2\xe3K\xd0\xa1\xf2Z\xe5\xe1\x86y35\xc2\x92\xd2FH$\x00=\xd8\xf1L\xf4\xce\x9cd\x81\xfa\x84\xb3/\x94\x93yh\xae\xdaX`\x00\x00\xe7\x19\xee;V\x86\xda\xf3\xf0\xb3-\xa2\xc0\xfel\x91\xeb,\x17#\x1b\xe4\xfc\xf1X\xd3jv\xf7?yx\xa1\r4WR\xb2\xb0\x18\xc8\xe0`c\xe9H\xcbkwoz\x05\xccQz\xa1WF\x89\xbc\xc5Q(\xc89\x1d\x0f\xb8=:WZ.\x99q\xe6K}mj\x8b\t*\x8c\x18\xec\x00\x90Ie\x07=)\xc5\xc3Ikq\x17\x9d\x88\xc4\x8b\x92\xe8\xfb\xcbz\x8f\xe2\xf9\xcdU\xacP\xac\xb2I#1g\x94\x12\xe7\xf9Crp}\xcdk\x03\x91\x80\xb8\xc0\x04\x11\xf3\xf5\xa5\xecmmR&k\x82Y@8\xcf\x04\xe7\xfb\x9f\xedQe%\xf3D\xd6\xf6\xf2\xb4i\xc1\x00~\x04\x04\x02\xc7=\xb2jB\xf9\x10\xb5\xb5\xcc7(\xe8\x01\x8d\xa2$o\xdf\x8c\xe4\x0f\xe9N~\xe3\xa8_ZI%\xa1\x0f$D\x16P@\n\x80\xf2Xg\x90)\ri\'\x9f\xe5G\x11u#9\xcf<\x9c\xd2\xd6`\x14\xb3>7\xef\xda\x9e\xda\xdd\xc1\x15\xcaH\xc5\xe4\x0f(3+\xb0\x00\x93\xc9\\\xf1\xcd{u\xabI\x04\xdee\xac\xae\x8b\xb82\x8d\xde\xbe9?Z\x85\x86K[8\xfc\xcb\xa8\xcd\xc1\x91\xb6\x02\x06F\xee\xa3n:\x11V\r#I\xb1\xba\xdc$p\xc1\x08\'w\x0522I\xa7A\xbb\x82\xde`\xae\x0b3\xeb8\xc6\xc7\x1e\xe4\x8a\x1d\xa0\\\xb3\xa9\xc0\\{\x82>\x95b\xf0\xce\xaenn$\x1fz\x1e\xa0Y\x83\x9e\xad\x8ex=M[\x8c\xde\xb9\x00\x9eGRL\x84rXd\xf3\x9f\x8cp>*\x87q-\x9e\x85i\x0c\x90Y\xa4\x97\x0c\xd8|\x92LK\x83\xea@}\xc7\x154u\x89f\xb4\x85c\xd3\xdd7\x11\xbaRG\xf4>\xc4\x9c\x1c\xd3I3\xa3\x98\xa7\x9dT\x95\'Kgc\x8d\x90c\xf5\xaak\xa8\x84\xd3\t#\x8f\n\xc4/a\xc7z\x9c\x86\xe2\x0f\xbc\x16R\xc5$\x06"\x8a\x0e\xec{\x9ez\x8fcS\x91\xdcI\nE\x1f\x94\xa7\x95T-\x93\xe9\xf9\xf6\xaa\xd6\x8fgr\xd1\xdd\xb3D\xac\x15\xc4\x9e\x82\x01\xd8O\xb1\xeax\xabLW\x10",o\x17\x98H\x07\x90\x06\xdc\xf2\x17\xe7\x15_\x0c\x92\xc8\x85\xbd\x16\xaa\xf9\x11\xb9\x07\x04\xe4\xe5q\xef\xb7a\xb5U^\x84W(\xa3\xcc\xd3\x80F~65k\xfb\xcd\xba$O\x95v\xd8r\xa0\xe3\x8c\x7f\x8a\x88k\x89\x83${\xccm)\xf3\x17\x90\x01_\x82>=\xe9\x93\xcd\x13"\xa6B*\xe3\x00\xfe\x1c\xf7\x1c{\xd3y\xd8\x97Y\r\xd2\x90W vA\xf9t\xab[\xfe\xad,\x8a\x19@\x01\x02\xe7\xcb`\x06\xf8\x0cI8=\xb6\xfe\x95M\r\xa2\xa99\xe4\xe7\x91\x9f\xa5M\xb7\x9ar\x10\x97*\xa7{d\xe4\xf3\xf9t\xa7\xd1J\x9ez\xae}q\x9c\x13\xee\x01\xe4\xfc\x93P\xa6G\xf2T\xb2\xa1\xd82\x00$\x16S\xfcLG\xb5%$\xcc\x92\x19\xa1!#\x8c\x06\n\xfb\x82\x9c\xf58=I\xa5\x8e\xa0\x96\xcc\xb2`\x91\x94b\xa79\n2I\x00\xfbcs\x9c\xd3f\xdc\xc8\n\xf1\xc8\x07\xb6j\xfe\xd2Hv\x94\x03\x07\xa84\xca\xf2\xed-\x82\xb1\xce\x00\xed\xcfS\xedUa\xa8\xcf\x14\xae\xa6R\x1ed\x18\xdd\xd0d\xe7?\x02\x9e\xdcj\x08\x9bwM\xc7\x98#(pA\x00g8\xfa\xd6\x8f\xff\x00\xa9-\xe7\xb7\xb8ef\x8d\xd3\nK\xe0\x84\'\xee=\xb3\x8a\xaf\x1d9\xd2H\xf2\x03\x03\xbe\xd9\xde\xac0\xddF\xd1\x06\x0b\xc1\x07\x91\xd8\nv%\'j\xe3\x18\xe0f\xab\xb6\x97\xb6\xf8\x99\x07\\\xe4`g \xf6\xa71j!\x94\xee\x84\xa7\xd7\xa7\xeb\xefW\x10u8D1k\xb8R\\c\xd2;\xaf<TYm\x1f[b#\x80{\xfc\xd4\xb3\xb3\x0e\xae0x\xc7\xd6\x9a\xe29\x18\x15n\x87\x19\xa4\x1ay\x18\xab\xa8$r1\xefM\xcc\x92\xc5\xb4`.\xf6\x1f=i\xf7\xb9\x8d\xc8:\x0bF\xbe\xa2NO\xd3\x14\xc8\x81\x87\xf3\x00\xc7a\xc5.\xf3\xc6\x83\x07\xd4s\x8f\x9aj\x80\\1\xca\x8c\x83\xef\xce=\xe8s\t\xe1\x88\xda\x0eG\xe7]\xac\xd1\x16*3\xbfa\xe3\xb9\x15\x0eFF!\x19\xe3\xd0\x0f\xe5\xeeO\xdf\xf6\xa7\xd62\x01![V9\xa4\xaf!\xb6 y\x83\x9e\xd5\x1f\x1e\x9c\xac\xd2,{\x14m\x19?\xc2)K\xbdB\xda\xc4m\xbap\xf2\x10\n\xc7\x91\xb8\x83\xec);\xbb\xb8\x99v\xdb\xab(u\x05\xb9\xc1\x04\xfb\x8f\x8a\xce\xdf\xbfNiei<\xa3"\x01\xaa\x15?\xc4\xc9\x04`\xe35c\x04s\xa2 P\xd8n\x1c\xfe]\xa9\x8e\xa74j\x86\xdfy!\x10s\x802H\xe4\xe3\xe6\xb1\xaf\x18\xc3k3\x86HF\xd1\xc3\x01\xd3\x1f\xf2kY\xbb\x8e\xd6E\xcbL\xd2\xe4\x05`88\xc6+9\xd4\xec\xf2\xf3\xba.\x17\x07hc\xc9\x03\xbdbz\xa4\xb3\x1b\x95\x90\x84\xc1oHV\xd4B\xaf\x1b\xee1\xbe9\xad/M\x8a=\x04z\xb2\x06\xf9\x18\x04\x9a\xf9\xf7R\xf0N\xa7uv\xd2\xe9?\xbcG\xc9\x11\x16\xc1_\x8ej\xf3\xe0\x8f\x01k\xa2Cw\xa9\xea\x12A\x04\'\x9bh\xe4,d\xf8$d\x01\xef\x8ej\xed\xa7@\xf6\xec\xb8\x0c\xa5\xb2\xa8\x00\xceKU\xcd\xe3\x16o\x1d\xbc\x13\x03#/\xab?\x87q\x1d>\xa2\x9c=f\xf2{v\x8c\x85h\xd7\x08\\\x01\xe6e\xb6\\d\xeek\x93t\x9bC&Y3\xab}\x07u\xdb\x9c\xfcRW6p\xa5\xb0HI"=\xab\xec\x00\xa4\xc2\x9d\xd2\x07\xda=\x01A\xff\x00\xd9\xedL\xe5\x9a\xe6$\x95\x03d\x9e\x18\x83\x91\xb8\xff\x00\x9a\x8c\xbb\xd5Dl \x12\x0fH\x01\x80\xe4\x0fqT>\x96\xd4\xc9\x0b\'b\x83\x8c\xef\xcf~*\xc1`\xc0U\xc8 q\xf4\xa5\xb5k\xff\x00.\x14\x85\xa5\x00n\xdb\xb4|w\xaa\x8d\xd6\xd9\x9e?-\x81\x0c\xd9\xc7q\xf5\xa5\xe6\xbb\xb5y$\xb9\x99\xc1@J\xc7\x1a\x9eA\xc7SQ\x11]\xa0#\x8d\xcc[\x8cv\x1e\xf5c\x1cM\xa03\rL\x17\x00\xe4\xec\x07\x1c\xd2\x0ck\xa8\x01\xb6\xfb\xd6\x89\xa4\xc8\xb6\xd6\xdb\xc4~\xb9\x0e\x15\xbb\x00:\xd2\xb3i\xf7\x1a\xa5\xe5\xb5\x940\xb3I!\xdd$\x9dUP\xf7\xa4\xbc7\xa2\xea^"@-XE\n\x1c4\xce\x0e9\xfe_s[\xc7\x87\xb4+-\x1e\xd0Z\xc4\xbb\x9f\xab\xca\xdc\xb3\x9frkO\xe1o\t]u;\x98\xaf.\xa31ZG\xbcy\xc6\\\xf7\xc0\xc7\xefT\x9dk\xadAb\x8d\x0c,\x1e\xe0\x8c\x108_\xaf\xf8\xa3O\xb3\x87M\xd3\xed\xac\xa0@\xab\x12\x05\xc8\x1dO\xbd:Y%\x8c\x0fH"\x9dHQ_c\x1e=\xeb\x92\xa8\x07\x12dW\xb6*,j\xa8\x80*\xa8\x00\x01\xd8\n\xf3\xa2\xc5\xd8\xb3\x1c\x969\'\xdc\x9a\xed%\xca\xe4u\xf6\xa0\xdd\x04\xfcB\xa3n\x1dQr\xad\x83\x9a\x8b\x9e\xfc\x9f\xdd7\xe2#\x83]-\x8e\xf4\x05\xcdO\xb6\xa3\x16q\xde\x93\xfd\xa23\x8cT]\xbc-\x12\x06\x98n\xcfz\xe5\x8a3\x16\r\xc5\x1a\x8d\x18\x15&.\x15\xdf\x8e\r*o\np\xc0T3\x16Nv\x92;\x11J\xc6\xed"\xb7\x19\xa3Q\xae\x90*L\xdd\xa3\x0c\x83LZ\xe9\x0b\x1fY\xfaw\xa6\x8di4\x8d\x94r\xbf\x15\xca\xa1\x8d\x82M\x16\x0ff\xech$\xd0\x00\xf7\xa7\xcbv\xbc\xfa\xbf\xa5(\xb7\xac\x0f\x18"\x98K\x0c\x91\xf3\xb7*}\xab\x85\x8d\xa2\x05\xc6q\xf3FM\x18\x06\xa4\xe7\xbe}\xbe\x80sL\xe3\xd4\x15\xdfc>\xd6\xae#- \xdd\xbc\x0c\xd2R\xdb\x19\x01\xdc\x9b\xcf\xb8\xa0\x93F\x05Jy\xb7\x08F\xc6\x0e)Qzs\x87\x8d\x94\xd5y \x99\x0f\xeegeq\xfc&\xbaY5\x02\xfbd+\xf5#\xadsQ\xf9\xaec\xe9V\x02\xe1\xdb\xd3\x8ek\xbc\x11\xedQ\x9et\x98\xda\xd1\r\xc3\xa1\x14\xaa\xca\xd2\x1d\xa1\xb6\xb0\xeciY\xa3\x14\xb4\x90\xbb\x1c\x87\xc1\xa2\xbc\x0b2\x0c\xb7\x1f=\xa8\xa2\xb9T\xcf!\x9c\x82T\x8a~\x90 Q\xc74\xb1p\xa9\xea\x00T]\xce\xb1knJ\xee\x0c\xfd\x80\xe6\x9b\xc2\xaf&\xbb\x92{S\xd6\x1b\x08\x1d\x05#$\xf0\xc6\tB\x19\xaa\xbbu\x7fw8\xdf\x8f.>\xf9\xebU\x1d[\xc6\xba6\x8e\x08\xfb\xc2\xbc\xa0r\xa0\xf3\x9aK8A\x9e\xd4\x00X\xe0sS\x9a\xfe\xabs\x14n\xe5\xc2 \x1dk\x10\xd7\xbe\xd1m,D\x8a\xaf\xbd\xea\x9f\xe3o\xb4]GY\x91\xe1\xb6%"\xe9\x9a\xcb,\xb4\xbdCX\xba\x08\x81\xdc\xb1\xe5\xba\xd4fmM\xa89\x0b\xf3O*``\x8c\x9a\xb2\xea\xff\x00h:\xce\xad\x98-\xdd\xc0n\x00Zq\xe1\x8f\x04j\xfa\xb5\xc2\xcfu\xb8+\x1c\xe0\xd6\x95\xe1o\xb3\xfbM5Rk\xc4R\xf8\xcf#\x9a\xd3\xe1\xba\xb3\xb3\x8c\xacH\x14\x0e\x06\x074\xd9\x98g\x9d\xbd\xcd/F8\x15\x15\xa5\xf8n\xcfJ\x81T"\xb3\x002j\xc7oz\xb6\xff\x00\xba\x8c\x0c\xf6\x15\x16\xb3\xdc\xdd\xb11\xa9Pz\x13Nm\x16\xda\xdd\x98\xcaw?z\x8c\xd3\x00\xc0/4\xea\xc7\xb6\xf52\x8b+\x90\xee\xd9\xcfjy#\xc8\xa86\x8es\xde\x99}\xe4\xbe\xdf.</\xbfO\xebSpM\x06\xd5\xdc\x83\x8f\x8a\x16=d\xe5\xeb\xa5\xb4\x81\x85\xa4\xedM\xd3\x0c\xb7\x03\x8a\x96K\x91\x16C\x1c\x9fzlu\x0bd\xe3\x1d)\x9c\x9f\xf5yu\xf4\xa8\xa9*4\x0fKd\xd3G\xd4w\x18\x14\xfeK\xc0\xc0\x9d\xdd)!\xa8\xc2\xa3\xd6\xc3\x15\x15\x10\x91X\xa0]\xc0\xf7\xa7\r\xa6!_2OH\xf9\xa3S\xb7\x02\xba\x15\x07&\xa5\x1a\xf6\xd1\xa3%FMF\x89\x18\x9c\x91\xb5A\xe2\x94C\x14cdQn\'\xa7\x195\xea\xd9J2\xf3\xb0PO\x03\xa9\xae\x9dG\x1f\xda\xba4\x8c\xd4\x9d\xb5\xd4L\x15\x00\xcf\xf7\xa9\x84\x8d6\xe6\xa3mm\xe1@6\x8c\x9a\x93\x8e"I\xdcq\x8e\x82\x9e\\\xe3|S,\x06v\xae\xbc\xbd\xc3\x81U?\x11\xf8J\xcf\xc41*\xdc\xae\xd7_\xc3 \xea*\xe6$\x8e%\xe4\x8c\xd7\x12\xcc\x00\x0c\xc0b\xb9=\xbd\xbd\xdc-\x0c\xea\x19\x1b\x91\xc7\xf4\xa29e\xb7\x91d\x89\x8a\xb0\xef_&\xf8\xb7\xec\xcbR\xb3\x92Cl\x8d,k\x82\xae\x07Q\xf3X\xd5\xd5\xa4\xf6S\xc9\xe6B\xc5\xa38a\xd2\xbfCg\xbb\xb7t\xda\xe0\x15=\xb1\xc5g\x9a\xff\x00\x86<+\xaa\xca\xf2\xddXE\x96\x1c\xba\xfaH\xc7\xd2\xa8_\xc3o\x13\x1f\xc2\xdd+G\xda99\x1f\x1a\xaa\xdd:\xd1`\x04\xf0\x90\xdd\xd9\x7f\xc5|sk\xac\\\xdb\x90\xd8\xd9\xb5\xc3(\xcf\x00\x8e\xf5m>(\x83P\x0b\xeb);\xa9\x0f\xce\x07#\x18\xad?Y\xfb\x1d\xd2/\xd9f\xd3/^\x15\xc7*\xdc\xae*\x93\xae\xfd\x91\x1b\x18CZ\xeaj\xcc\xab\xc8#\x1e\xaf\x8a\x8e\xfd&\xedAW\xb5$(\xe50F\xfe\xd4\xfau(\t\x05f\xdc\x9e\x0e\xc6\x98h\xda\xc4ZD\xa2;\x94\x0f\x00\xc9\x04\xb7\\\x8e\x8d\xf0i\xe06\x9a\x9cB\xf2\x19#\x89\x89"E\x1d2;\x8c\xf6\xac\xabX\xd2\xbcW\xa5D\xa2H\xd5\xe3\xdd\xb4s\x9c\x93\xefU\x93\xa9j\xd6\x88\x0cv\xef\x0c\xb1\x928n\x0f\xbf\x15\x0en\x88\xd2(S\xe9a\xdc\xec@\xf9\xcfj\x99\x17P\nr\x0eA\xfb\x8a\xda\xe6\xba\x8e\x0bV\t1br\x08\x0b\xc0\'\xa8&\x9d\xc1y\x11\xb7\x18\xe4\x807\x82y\xc7\xbf\xd2\xb2;?\x1d\xdcZ@\x8b{`\xb2nR\xb2\x14\xc0\'\xdb=\xaa_J\xf1E\x9e\xa93Cj]fe\x05a\x93\xf8\xb1\xd4)\xaa\xab\x9e\x85<q\xb3\xe8\xd4\xa0\xe4\xb2\xee*\xc6\x0e\xa3\x1b\x95R\xd8\'\x8c\xd6\x9a.\xd1\xe3\x90\xa5\xba\x94\x1bV6S\x9c}~\xb5)\x00G\x88JT\x9d\xaew\x02zc\xb0\xaa\x15\x8e\xb4\x90HC\x03\x0b0 \x8e\xbd\xfej\xc4\xba\xb4\r\x0c\x01\xa5\x19-\xeb `\x1e\xc3&\xa8.,\xe5R\x00\x8c\xe3<\xf3V\x91\xca\x8c9\xab\x8b\xcb\x1c\xf0\x18\xe3\x85\x17$2\x91\xca\xe4\x7f\x8a\xe60\xcd\x10\xca\x96F\xe0\x82\xb9\xc7\xc8\xaa\xb4w\xf03J\x04\x85OU^\xfc{\n\x94\x8fXH\x95\x17\xcc\xf2\xdb\xca\xc2\x02:\xb1\xfeo\x93U\xefm2\xe0\x05<\xfb{\xd4\x90T\xadKD|\xe6\x98\x96\x0c3\xe8\xff\x00n\xde\xd4\xaaB\xe6(\xe4\xc6\x0e\xe3\x9d\xbdO\xfe{\xd3+K\xa9S#b\x00\x10\x16$\x0fQ<\xd4\xa5\xad\xcaJ6\xf0\x01 ol\x1e\x9c\x8cc\xf4\xa8\x92jM^\x90F6\xa5\xe8\xc8\x14\xde\x1b\xd8N\xa8\x96,\xbb\xd8\xa6\xe2\x17\x83\x903\x8a\x9c\x87&\x1f0\xa8U\x0e\x01\xe7\x80I\xf6\xfc\xb9\xa6m\x1d\xb47\xcfu\x1e\x01X\xb68\xc8$\x82{\x9aqq-\x9cQFB\xb2\xbc\xcd\xfb\xa5\xed\xbb\x19\xc1\xeb\xc50\xec\x8c#\t\x1b\x1fN\xfb\xff\x007\x7f\xb5(!\x04\xea8\x19\xe7\xe2\x9d\x89\x86d\x8d\xa2,\x8d\xc8_\xe9\xc14\xe5b\x8c7\xa4\x92\tR>\x87\xde\xbc\xb4\xfb\x94N\xd0^\xab\xe5\xe2;fRHVnT\xed\xf6\xeci\xf4\xb2D#\xb5\t,l\x98l\x81\xc9\x04\xfb7p)\x89#"/3Z\xef\x9c\x00ps\xecA\xf8\xa7\x14\xfa\xb4\x85o\x9aR\xd0*\\\xaa\xec\x08\xae\x8e\x8e[\x9e]q\x9f\x8a\xf01\xb62\xe5\x14\xb2\x95#\xbes\xd7\x8e\xd8\xa4L\xc1\'A\x82v\xe0\x8c\xf4\xa9\x07c{g6\xdd\xbekaS\x1e\x9fP\xe9\x9f\xca\xa3a\x9c\x05?\xcb\x93\x828\xe3s\xfaR\xff\x00)\xce2\x0e\x06i\xf5\x96\xa5\x04\xc6\x08\xcc\x1e\xa5;\x99\xba\xe4S\x8b\xa7Yc*\xee\xa5\x08\xf4\x91\xd0\xf3\xda\xabP\xc0\xfe\\d\xb8G<\x13\xb7\xa0\x07\x91\xf1V\x19\xf4\x99m\xed\xad\xe5\x17QI\x1c\xbe\xb0s\x81\xb4pz\xfbw\xa7\xc4\xd7\x12\xc3 D\\D\x149\x18\x03\x1b(\xd4;\xff\x00\x9am\xd2\x18\xdd\t|j>\x9c\xe4\xef\xc9\xc1\xa5\xf4\xe8l\xa3\x80\xc6\xd2\xb9\x97~\xe8\xf1\x9d\xa0\xe3\x03\x07\xf9\xaa2\xea\xd9\x91\x8f$\xfd:u\xf9\xef\xefO.gXf}\x8a\x19\x1b\x1b\x0f|\x0e8\xf7\xa97\x96\xde8\xe2\x92\x00\xfeC\x05.\xae9\xdd\xd0\x8c\xd74\x0b\x98\x8a\xb1\x89\x05\xbe\x01p\x0e\xa2\xa4\xe38<\xfc\x9fj@f\x8d\xc3\x00\xcd\xe6o\x83\xc6}\xaa\xb1\x1d\xdb\xa4\x9b]\xb1\x9e\x84\x0e~\xb5n\xd3\xb5+\x9f(\xce\xb3\x90\xa8\xb8\x19s\xd7\xdf\x19\xaa\xd4\xe2\xdeFq\x82\xa07\xe2\xc0m\xa3\xaf8\xa4\xe3m\x80\x88\xf1\xb7<\x1cd\x1cTH\'{)<\xd4f\x04\x83\xf9\x1bH\xc8\xd8\x1e7\xdfz~h#\xb9M%@\xe3\x91\x9d\xaa\xf9\r\xd9\x92\'x\x9c\x03&Ap\xde\xac\x9e\xff\x00Jf\x9aQU\x95\x98\x00\xa1H\x04\xf3\x92O\'\x9e\xf5\x0bix\xf6\xa5\xd8\xa0m\xe9\xc0>\xf9\xceqN\xac\xf5iCli_,\xc5\xb7\x1eHo\xfe\xea\xb0\x17\xd6\x97\x11\xda\xfe%\x9d\xd9Cz\x7f\x947\x19<s\xcf\xf7\xaa\xd6\xb4\x9e#!\x87\x00m\xbfr?\xe2\x9c^Y\xb4Z|\x0c\xb2\xb4\x85\x0f\t\x8c\x80\t\xe7\xf2\xa8\xa8\x88fth\x8eA\xc8\xc1\xcf\xe8\rXN\xa0dy\x12H\xb6\xf0\xa0\x01\xf8\x07\x18?@j7l\xb3\xb4\x8f\x1d\xa9E-\xe9$\xf5\x03\x8e+\xb7\xb0\xda\xc8bx\x1c\xb8\x08#x\xf4\xb1\'F\xdbg$};R\xa0\x92@\x8c\xb2\x807\xd4\x1b \x0fV\xf5\xcc)#\x08\xd7\xc8 1\xc0s\xd0\x1c\xfd)\x18\xae\xe0\x99\xe4V\x95\x90\xe3n\xf3\x18!\xbf\xe0|\xd4\x94\x16\x82\xe3n\xe9pT\x10\xcaXzA8\x19\x14\x9c\xc9f\x04K\x1c\x07sI\xe5\x8c\r\x98#\xdb=\xbd\xa9\xe3f\xcbk\x1c\xab\x8d\x94`H\xc7\r\xb60\x02`\xe4g\xf7\xa4\xf9\xa0\xc8W\x7f\xb0\xe3\xf5\xa4V9\xc4R\xb2\xce\xcc\xd1\xbe\xdc\x1c\x11\x86\xe9\x8c\xd2\xb3(.\xb8e=r\x8b\xf8N;\x8f\xf8\xa9I\xa2\x02\xdf\x02x\xc6T\x068^H\xe3\x9f\x9cS\tm$\x17\x05\n\x08\xdd\x88\n\x14eNG\x07\x8aE\xe5\x9c\x90\xa2\xa7\x94\xee\xaf\xe5\x82ud\x02s\x8e\xe4\x03\x81\x8d\xf9\xa4$\xea\xe7%\x80\xc6q\xb7\xd2\xb9\x12\xc0b\xc4s\xfa\xf2W*9+\xdf4\xe5\x08\x0e\xac#\x1b\x90\x01\x81\xc9$v pj:\xea8\xe2\xf4\xee+;\x12\x1e0=#\x07\x18\xcd9\xb0\x92N\x02"\x89#9\x1c\xe0s\xef\xf4\xa8\xd1\xb3\x0b\xa5\x85\xd1C\r8\x085\x91\x8f\x8d\xfdx\xe4l{R\x9d\x07\x94]I \xe7\x9d\xbf\x7fjx\xd7\x82)7\xa2\xbc!\xf9\xc0<1\xff\x00\x15\xe3\xdf\\\xc7\x14\xbb%\xcf\xab\xd8dc\xa1\x19\x14\xdex\x0c\xc0\x98\x15\x94"\x02\xe8\xc7-\xbb\xb9\x04\xf5Zn\x8c\x8d\xe5\xab\xa3\x1c\x822\xa7\x1c\x93]\x9a\xe2\xf2)$O=\xa3\x0c\t\x89\xd0\x95RX\xe9b4\xf1\xb9\xe3\x1f\xbd4\xb1D\xca\x0e\x80\xc4\x1fR\x9c\x13\xb6\xe39\xa5\xff\x00j]\x9c\x13\x0c.\xa9\x82\xd9L\x1c\xfb\xe4w\xae\x06\xa2\xd2<\x9em\xcf\xa1\xd4\xee\xdf\xd4g\xb0\x14\xd2[b%\x9dD\xac\xea\x01\x1b\x90\xe3?\xf2+\x9bm=\x1cK&2\xa80rx\xc9\xe8sQ\xd2~\xa2]"w\x91\xd9Y\xb5\x86;\x1d\x19\x04\x12\xbc\x8cT\x91\x15\xa0B\xd8\x03a\x8c\x0f\x7f\xafzqk"1`\xad\xe6\xb0O\xdd\x8ct\xfc\xaan=\x91F\xc7\xcbm\xd9\xda\xccFB\xa9\xa8\xaf\xbbK\x0b\x89`&,\x81\xb8\xf08\xc7\xf0\x93\xd74\xb9\x9a]\x8d\x10VU*7/\\\xed\xfag\x91R\xad\xc0\xb2V\x12\xa3y\x8a\x08\x8f\xd3\x95%\xb8\xc1;\xef\xc6\xfc\n\x8d:\xac\xa4\x14a\xa4\xe3;\xee=\xf8\xa9F\x08\xe7\x82@\xdb\xfe\xa09\xfc?\x15\xc7\x9f\xe5\x82\x82%\x90\xfe=\xd8\xe7\x03\xbe*#2:\xee\x13\xa1\xc1\xc1F%N\x07\xc59\x96c#\x17g(7\x10\xe4\x9c\x15$\x0cq\xc7\x15*;\xb3).\x89\xe5\xb3`\xaf\xe5:\x83lp8\x18\xfdi\x8f#\x04\x02r7\xcf;\x11R\x16\xd7Re\xb7K\xe5\xee\x07n\xd1\xce;Q\xf7\xa59o$1\x89I$\x9eO5\x11#J\xa0\xa3\xa0\x12rC\x02\x00\xc2\xd4;_\xc9\x1c\xd1+F1$\x9bX\xfb/s\xc7\xf4\x14\xe7\xe3\xe6\x85bGWlj\xdd\xc6\xf9\x18;\xea\x18\x188\xa7\x12\xc8I\xa9\x94\x0f\xa0\xff\x00\x8a\xb1\x9b\xdf\xbb\xde\xd8\xbc\xf2\x06\x86f\xc7\x07\x9c\x91\x90\x07\xd2\xba\xd6\xe6\xb1\xbf\xd2g\xb3\xd4Q"\xb7\x99<\x99X\x92\xa7\x04\xe4\x00\xc39\xaa^\xb7\xae\xc3ol\xb8\x86d\x11\xb3\xccG\xa6_\xc01\x85n\xcc@\xe9\xda\x96\xd3\xf5-?\xc4:M\xb5\xee\xd2\xb3\t|\xfb\x7f5K\x05\xc0*APy\xc8\xad\r\x85\xe7\x90\xed\x12\\<h\xe5\xcc\x85\x8f\xa4\xb6\xc7J\xb1\x1b\xe4\r\xbe\xf5\xc9,\xb2"\x95\xa3\xddH\x03\x1c\x8c\x1d\x8e*\xba\xda\'\xfe\x97\xbd\xd0\xf5=:\xff\x00\xce\xb6\xb0\xb6h\xe5\x89\xf9\x96F\x93 <Y\xce\x08\'\x8c\x9c\n\x83\xf1\x15\xfd\xbf\x885\x1d\x14G#\xc9\x1b\xc8\xcf<l0\x14*\x16\xe8?\x8c\x9cR~(\xd5\x03\xd8[%\xbd\xe4\xa6tB\x8d\x0cj\xa1\xdd\x00\xd8\xdd3\x85\xdd\xda\xa04[\x93a\xfb=\xaf\x96<O3\\H\xf9;\xc9a\x85\x1b\xbe\x8b\xd0T\xdbH\xbf\x11qnfm1DK\xe9\x07!\x8e~\xbe\xde\xf5m\n\x14\x06M\xdaM:s\xdc\n\x98\x8bXhDv\x06E\xdb,\xde\xa6\xc1\xc6\t\xeaGf\xe7\x81U\rV\xf5V\xe6f\x8e\x19&\xf2\xa7%0\x00g\xd9\xc05\'=\xb4\xd3\xdf\x99,n\xce%\x90\xb9\x92E\x03\'\xb0\xff\x00\xbd>\xd34qq\xa8\xbc\x1bV\xf2t\x05IF\x1bd\x04n g\x8e\xdfZfH\xe3\xba\xbd\x11F\xa3\xd4v\xdc\x96\xc6\xf8\x18\x1d\xb2j\xc8\xb8\x866rq\xb6O\xb7\xd7z\xac\xad\xdc\x17\x91\xef\nq\x13\x86\xd8y\xcb\xe3\x91\xfdz\x8a\x94\xb5E\xb8\xdf?\xdeO\x9aCE\x10\xdeTF\xcc:\x00:\x9f\x92{U\xac\xe8\xdaF\x8f\xa4\xdf\\^\xe8M\x14\xd2\xdc\x08b\x80\x11\xb7\xcd\x90\x10\x08\xe9\x95Q\xea\xf7&\xab7\xb1\xc2\xec\x90\xf9\x11\x99c\x00\xa1\xce\xc5\xc8\xe01\xc7\'\xe4\xe0\xd5\x9c\xfd1l\x94j\x9dI\x1b\x15#8\x07a\x90x\'\xb5G\x82\xf3\xf1\x05\xb4\x83\x80va\xc1<\xed\x8ejJ\xde+k\x7f"\xe6\xe6IY\xe2\x94y\xb6\xe8T\x02\x1b\xae\x08\xcfL\xf5\xedM\xf5\x18\x0c\xf7s,\x17\x18\xb1g\x06D\x906\\\x0e\x83 \x0f\xeb\x8c\xf4\xa89Z\xf5\xc3\x19-\x9a\x15]\xcc.\x14n]\xa9\xc9\x04\x83\xd7\x9e\x94\xe2\xc7V\xb8\x96(\xe78\xb6\xc3\x92"\xb8B\xed(F\x00*c\x80\x08\xc9\xc9\xf6\xa8\x13J\xebnTD\xba\xdb\'\xd4\x02\x9e2\x0e~q\xb5JR\xba\x89\xd6Xq\xb1\xcf\x7fjqe\x7fss\xab\xddG.\xa2K\x06Ua\x1f\xe1\xc6v\x85\xc9\xe3>\xf5\xb4Gcqa\xa3\xdd]j\x93\xc0\xbeT\xbb"\'#\xd3\xc7U\x19$\x8es\x8a\xc9\xacm\xf5\x1dH\xda\xdd\xa4\n\x87\xcf\xf5\xc2\xca\xa46N@9\xfe\x0eNq\xcekq\xd7u\xcd\x1e\x1d\x1d\x12\xd1_\xce$4;\xb2\n\x149$\x1e\xa3\x1d\xb3LGaa,S\xcdu4j\x04j\xda\x0e2r\x08\xc8#\x9c\x11U\x9dBy\xc4\x96\xd1C\x13\x10\xcf\xbb(\xe0\x0c~\x94\xb5\xcb\xdb\xd9\xc5\xff\x00K\n)Et\xdf\x8fQ\xdd\xc1\xceNMF\xad\xf6d\x85e\x8c+;\x10\x83\x07\x07h\xc9\xe4|{\xd4dZ\x9d\xad\xcd\x9c\xae%\x82FS\xba\xe2gr\nn\x1b\xb0\x07\xfb\x8dI=\xe7\x9fn\xd1\xc5 \x85C\x06H\xd4\xef\xf3I\x18<\xf65\x9f\xbas#\xa12,Qy\x19\x8e-\x03 \xeeFA\xfc\xbb\x0f\xde\xa3\xa4Z\x14\x82\x85\x9bY\x0c\xe4\xefR77Dd\xc3\x94<`\x9e\xa0\x11\xd3\x15\xdd\x933\xbcjYB\x15\xf5c=3\xce\xef|Uz)\x9d\xe4\x91\x01\xdcFAU\x03%\x87@\x0fNjV\x0b\x87Cq\xb2%\xd9\xb7$\x9e\xc0\x1e\xe7\xb5S4\xcf%\xd2\xcd!\xd3\x19\'\x01A\xc6F\xe4`\x0c\xf1\x8c\xfcW$\xb7\xd1\x19E\x038\x1b\x9f\xd2\xac\xf7[\xe2\x12\xef(\xb12*\xa0Q\xd5\x01\xcfZ\x8ci\xe2hY\xa7\xb8I\x10\x10\x107P\x07l\x0f\xf1Q\x92\xcb3/\x9b!eX\xc0\xe4\xfd8\x00\x1a\xa5^_\x9c\xdcJ\xef!\n\xc4\xca\xc1}(\x0f\xb5J\x9f\xa8=\xcc\xc4\xc7l\xca\xac\xa4*;\x16\x0c\t\'$p@\'a\x8an\xd7\xa7\xeb\x18i@\xc1\x19 w\xff\x005t7\xef5\xdb\xbc\x19\xc8l\x82q\x81\x8f|\xfd)[\x9dON\xbd\xbd!dP\xcf\xd7,\x02\x82\x06}$u\xf8\xaf\x9c5/\x1d\xde\\\xcd\xf7m(O\x0cr)\x8d\xb3\xd6D\x07\xa9\x1fZi\xa4\xea\xb3\xd88ff\xbe\x91\x9fc#\xb1\xdb\x11Q\x9d\xcc\x0f^\x0fj\x9b\x17M\xbbKi\xbc\xf0\x8d\xe7\xca&h\x9drA\xdf89\xdbc\xde\xac?\x01\x16\xa0\xca\xd8\xd2\x9aT\x8f\xef_Wh\xf7r\xc7s\x11\xc0\xdc\xa3\x0f\xb8\xf2\x10v#\xe2\xa7\x9ahn0^S\xe5\x90YO\xbe{\xa8\x1d@\xaf\x9dt\xaf\x10\xea\xd2\xb1\xb4\n\x136\xc7\xef1\x95 e\x88f\x00\xae\x08\xcf\x04g\xbdj\xd6\xb7\xca\x16\xde\x18\x968a\x8e,\t\x18\xfa\x8f\xc7Z\xba\xb4\xbc\x8e\xc2\xd9\xac\xc4\xaf2.\x08V\x18\x19\xc0\x18\xdblm\x9c\x93T\x97\x9d<\xf9\xbeg\xa4\x1e==\x85^>\xfa\xb6\xf2y$zA\xe6F\xcf\x19\xa8\xf9\xf5\x99]\xee#\x8e\xdc\xca\x13\x80\xea1\xb4\xf5\xfc\xe93u\x04 -\xcd\xecO3"b69~z`SK\xdb\xf4\xb5In`\x90\x98\xcf\xaaTe\xc2\xf4\xe7\x93\xf4\xabI\xefeHJ\xa5\xd7\x95\xbeJ\x8d%\xd50p0Oo\xd6\xab#\xb6FpL:\x8f\x199\xc1>\xf4\xf9nd\x80K\x03\xe32F\n\xe3\xd8\xf7?Je\x0c\xb3=\xf2H\xb7.\x89\xb4.\xee\xbb\x94\x1cU:-~\xcfT\xbb\x96T\xb9\xda\xb6\xfc\x1d\xbf\xa8\xc0\xee\x05L\x8dr\xda\x0bK\x84Y\x0b9\nU[\xa2\x83\xc9?\xf6\xac\xdd\xc7U\x8d\xe4\xf2\xe4\x95\xd68\x1bR\x1dgQ+\xea\x03b\x0e\xfcU\x9a\xd8\xc8\xab\xe8\x883H\x00l\r\x86v\xab&\xa1\xa5\xc5$\xcdw\x16\x0c\x81\xb7\xb6\xf5\xdc\x19@\xe3\x19\xf6\xa8;\x9b\xf7\x99dy\xa5\x19$\xa8\xe3\x19\x1d{v\xaa\x8e\xa3\xe2i\xad\xde?\xdf\xe1\x8f\xe0\xec1\xee\x05BM\xaf\xfd\xee@d\x95\x8b\xaa\xe0\xe4\x8e\xa7\xfb\n\xad\xbd\xbe\x17\x8d$\x96\xf6\xb2B$b]5z$\'\xf9\x88\x07\x91S\xedzd\xc8\xa9\xe7H\xad\xa4aN=@{T\xb6\xa3\xab}\xdeI\x02H\x1f\xcc\xc2\xed\x07\xfbg\xb5C\xfe\xdf\x95\xa3\x9b\xccE%\x8f\xa4\x11\xd7=\x80\xf6\x15V\xbd\xd5\xa0\x83QP\xac\xac\xfb\xf0\x18\x1fH\x03\xa7_\x8a\xab]\xf8\x8f|\x93NgX\xcb\x13\xb3\xdf\x0b\xfd\xbe(\xb7\xe9\xf3\xbf\x08F\xa1\xbe\xfbnx\x1c\xedVL\xd0F\x00\xdbj\xd5c\xd5cWI^Q\xe6\x81\x858\xc0P\x7f\x94{\xfc\xd7\x17\xbe$0\xc7\x16\xc06\x86\xca\xf3\x92q\xd4\xb5`\xf7^10<\xb2\xc8\xc4t\x19\xe9\x83\xf2;T\x1c\xfe=\xfb\xcb\xaa\xee\xdd\xb7</\xb5Z\xdb\xf8j\xfeF\xca\xab\xb0o\xcd\x8f\xd6\xa1K\x7fi\x1f\xe6u\x18\xe35\xb8\xdek\xec#\x12\xc98\x8dd%\x94\x0e\x01\x1d\xcf\xfcURo\x11\xc0d\xff\x00P\x05\x07\x81\xdd\xbe\xb5\x8bk~9\xbc\x02O&\xd1\xf9\x18Q\xd8\n\xeb\xc27\x96\xfa\xcc\xea.\xc4\x92N\xdcm\xdd\xb1P\xf6\'\xde\xb4\x96>\n\xb8e-*\x84\xcf\xbf\xcdS\xddx\x86\xd5\x0e\x98\xd8\xbe=\x85i\xfa\xb7\x8a\xa0\x99\xd5b\x8c+\x03\x80\x8b\xc0\x03\xdf5q\xf0\xb6\x96\xfa\xb1\x82\xe6\xe5\xda+L\xfa\xdb\xa1c\xec>>j>\xdbHYbX\'\xd2\xed\xb6\xb2\x98\xcc\xa0a\xf1\xee\rO\xe9\x8f\xa9xV\x00\xad\x00\xbf\xd2\xff\x00\x8d\x80&h\x17\xe5\x7f\x88\n\xd2ZxV\xc6)\x15\xae\x18H\x14\xe7@\xe0\x9f\x9f\x8a\xa5\xba\xeb\x972!\x10!Bv\xd4{}+\xe8\r?]\xb1\xb6\xb6\x86\xce\xd8\x88\x965\xda\xa1G\x18\x14\xa5\x87\x8aV\x1db;k\x8b\xa0\xa2S\x85\'\xa1\xaaV\x93w\xa6jVp\xdc\xd9<r\xc5/*\xcb\xc8\xfa}jnKKI\xd3\x98\x90\xf1\xe9=\xc1\xadI\x94\xa8P\x9aUW\x18\x03a\x8fj\xcey9,_Qf\xe4\x9d\xf7\xf7\xadF\xea\xe8E*\xef`\xc2_\xc3\x8e\xf5\x18\xf2\x98\xe5\xdf\x0b1\x04\xe0\xa1\xe9T\x8d?^\x97N\x94[\xeb\x0c\xa6\x05 As\xddO\xb3\x7f\xcd_\'\x99c\x8e\x19\x03F\xd0\xcb\xf8e^FOL\xe2\x9dYD\x80\x90q\x8f\xd4S-\x11B\x01\x1c\xf7\xf7\xa4\xdbQ\x829\x15nP\xa6\xf3\x80O*M{qa\x04\xa4K\x1bm8\xc8\xc5!)iT\xfa\x91\xc8\xfe\x16\x1c\x1a\x8e\x17W\xd6/\xba\xde?21\x8f6\xd9\xbf\x10\x1e\xf1\x9e\xff\x00J\xe9q\xfc\xdb\x8a@V\xce\xd53\x1d\xf1\x8e?.T\'\x1d+\x91l\xd2\xe5\xc1\xc2\x11\xce)\x87\xed[[\xd8|\xc8\x8b{\x15#\x0c\xa7\xd8\x83\xd0\xd3\x04\xbd\xbcIJ \x90+~\x16Q\xfd\xeb\xba\xd7m\xf2>(\n\xdb\xed\x8a\xb6Z\xc0QLr0\xf2\xff\x00\x85\xff\x00\xc1\xa7\x06\xc9\xa2\xe52A\xf6\xaa\xc5\xc9\xbae\xf4\xce\xd1t\x0e\x07!\xbd\xf2\r\x10\x1dE \x0b\x05\xdb\x88\xd8zX\xfa\x94})a\x87\x1aM$\xa9\xe7P\xab,k!\'pa\x8aQ\xe4^\x8f\x1b8\xf6"\xa1V\xf6\xea\xd9A\xbb,\xab\x8en\x13\xd5\x1f\xff\x00p\xea\xb5$%\xba*\x8e\xae\xac\x84d\x1e\xaa\xc2\x94\x08\xa4\x91Jm`\x0b\xc4\xac\xcb\xde6\xff\x00\x14\x81\x8e+\x80Ld\xab\x03\xccm\xc1\xfd)u\xbee]\xd9\x18\xf9\x1d\x08\xed\\\xddKmp#\xca\xfa\xd5\x81\xc8\xe1\x81\xf7\x15\xdd\xb1\\\xde\x9b\xfd\xdaE\xe9\x0f\x1d\xc7\xb5u\x13\xb2\x16\x19>\x9e\xc6\x9c\xa4\xe4\xaa\x86m\xe38\xdc\xbc0\xfa\x8a\xe2x\xf7F]x#\xa3g\x00\xfc\x1fj\x07\xc5v\x90\x9a4o[\x12\x08\xee84\xd6Q#\xe0\xa1\xde\x98\xe4\x1e\xbf\x95HGq\xe7[\x871\x80T\xe0\x83\x8f\xf1J\x8f$o\xdd\x06=9\xe2\xbb\xcds\x8a\x85\xc4\xa8\x07\x93"\xb1\xcf!\x8e1I\xad\xf12\x14\x9e\x10\xa7\xb1\xcf\x06\x9c\\\x8b)\xd5\x19RB\xc4\xe02\xa9\x07\x1e\xf4Edb\xff\x00\xe9\x99\x17n=\\\x9f\xce\x93\xbeF)[cz[\xf7\xd2(Q+ \xec\x0f"\x8a\xf3\xc8\x95W\xfe\x98\xfc\x84|\x94\xfa\x0e\xe2\x8a\xee>\xb5\xcc\xd5\x0e\xfbS\x9ap\x8b\x1e\x04dz\xa4\xcfj\xae_j\x1aV\x84~\xf14\xea\xdb\x86r\xc6\xb0O\x14\xfd\xaa\x9bW\xb8\xb4\xb5BS>\x8c\x1a\xcbu\x7f\x12kz\xf4q\xad\xcc\xe5c\xec\x01\xa8E\xc9l\xa8\xcf\xb14\xfa\xc7\xb7\xa8\xe3\xe2\xb5\xcf\x1b}\xacMxd\xb5\xd2\xf2\x07B\xc2\xb1Cuyq?\x9bq+I#\x9f\xc29\xe6\xa44m\x1e\xfbU\x99-lm\x9eV$\x06\x93\x1c/\xd4\xd7\xd0~\x18\xfb3\xd3t\x9d\xb3\xdf\x11,\xf8\x07\xd7\xd0\x1aC6y\xdc\x9aX\xc2\x8c\x01\x81\xefYf\x81\xe0\x1dO]d\x9a\xe1L0\xb68<\x12+m\xd2\xfc!\xa7h\x10\xa9H\x81`\x06[\x1c\xe6\xad\xd1\xad\xbd\xbb*\xa1P\x98\xe0\x8e\x94\xda\xfa\xf3\x18H\xc1l\xf75\x1d\xb0\xc0\xean;R\x86r0**\\I\x11\x90\xf0\xa3\x80=\xe9+h\x84\xad\xfe\x97^\x82\xbc\x16\x97W\x0c\xca\x98\'9#9\xc5K[Z<8f|0\xc0\x00SYRF\x91\x9f\x9aw\x04\r\xeb\xb4\xb3\x99\xc8T\x1bF:\np\x96\xb6\xd10_/\xcc\x93\xfaf\xa4m\xec\xef\x9e\x16\x92I\x964\xcfq\xc9\xfaT\xc4Q* \x1e_ t\xee~\xb4\xfaE\xb6q\xfa\xd3L\xfb\x9d\xff\x00J\x8e\x8e\xd9D\x88d\x00(\x19\xda:\xd7\x0f1r\xc2;c\xb0\x1c\x03\xefR\x17\x13Ek$m)T;{\xf3\x93\xec*<\xea\x13\xdc\x92#\xd8\x8a\x0f$\xf1\x81K8\x1bps\\\x1b\xef\xc8\xa8\x82.~\xf8\xc1\xa3\x0202}\xeaL_ P\x8b\x19\xc694\xc2\xed\xe3\xde\xc5fU8\xf7\xe4\xfc\xd3X\xb2\x01av\xac?\xb5!I\\\x8ap\x80\xd8$T\xb1\xbf\x920\xc6;vf\x03\xa5"n\xb5\t\x17\xcc\xb9\x1b#\xf6\xf6\xff\x00\x8a\x81}|o\x92-=\x8d\xec\x89\xf8\xf6\x0fB\x7f\xeen\x94\xefI\x87U\xd6K}\xeeD\xcexE\xc8@?\xcd\x1a\x89\xd8\x13\x93\xd8Q\x80\x06H\x1fz\x97\x8bY\x85A[x\xcb\x7f\xb8\x8e?\xefN\xe2w\xb9\x95d\x9af\xda;v\xa6\x97Q[Y4q4\xbel\xf9\xc2\xc5\x18\xe3\xf3\xc5$\x93I#a\xd0\xb9\x07\xf0G\xf8G\xd4\xd7588c\xf6\xa0\x05#"\xacGSH\x8a\x88\x93\x81\xc6\xee\xc2\x99I\xadJ\x1d\x94\x12[9\xcdD\xce\x97\x12N\x03:\xaa)\xcb*\xf6\xa6\x97\x17\xf6\x96\xf34\xde`dE\xc1\x00\x7fos\\i\x9cw\xc6\xf4\xa5\x8dv\xc8\xcdM\x9dU\xdd\xbc\xc2NGj\x87\xba\xf1K\xca\xed\x14!\xa5o\xc3\xe9\xe8\rB_\xdc\xdc\xea\x92A\x01V\xb2\xb5~v\x8f\xf5d\x03\xdf\xd8R\xe2H\xac\xed\xe3\xb7\x82\xdc\t\x19\x8e\xd4\xfe \x07\xf11\xa6\x0c\xef\x93\xea\xfa\xd3\xa25\xc7\xe5\xa7\xe2\xeaw\xfd\xd4\xd7\x18b3\xb4\x1eE0\xbc\x950\x02\xbb3}j&\xe6W\xb3o=\xa7\x8f\xcdc\xea=\x94|\x9e\xd5]\x97[{\xab\x89 \x85B\xc2\x17\xf7\x92\xf7?\xfbh\x17,\x07&\x95\xe4\xa9<T\x9e\xa1\xae]B\xcbi\x04\xccN2\xc4v\xaa6\xafs\xa8\xb3\x167\x8cS\x1d\xcfzq-\xfd\xb4\x05\xf3\xb9v\xf5\'\x96#\xdc\xd5WW\xd5E\xca:\xc4\xa4c\xa6{S\xc9w!\xc7?\xad%\xad\xd0\x7f(\xcdRu\xfb\xbdR\xe2P\x9fxfU\xedT\x1b\xe9o\x04~^\xd2J\x92j\xfd-\xecR\xc8\xcb\xb4\xb6\xd1\x82\xf8\xc0\'\xe2\xab:\x8d\xcaF\xe9\x1c1y\x936x\xea\x07\xc9\xf6\xa9\x0b31\xdds\xf5\xa6\xcc`\x03\x83\x8f\xa5g\xf7\x8fz\x88A\x04f\xa3#M@\xbaH\xaec+\xca\xb08"\xaf2YH\xc0\xbb\xfa\x98\x9es\xd0}**\xfa\xd1\xc4dF\xd8\xe4nc\xda\x9fW^4.\xfc\xedM20\xdfS~\xb5\x14\xfa\xfe\xbd\xe6\x97}E\xe5*\x7f\x8f\x06\xa6\xa1\xf1\xad\xd4V\xc8\xbeIi\xd7\x1b\x9c\xb7\xa5\xb9\xeaEAM\xa6\xb4@9\xce\x0fA\xdd\xa9\t\xec\x19F\xd01\xc6X\xff\x00\x81M=\x9d\x8c\xc1C\xdb\xa6\xc7;\x0c\x7fJu.\xae\xe2\xd4Vg\xdcw9\xfe\xb5y\xb3\xfbE\xf2\x89\x13\xdaHs\x9c\xedp@\'\xdb5g\xb6\xfbD\xd0\xa6\xc2\xc8\xf3D\xbf\xef\\\x9c\x8f\x91\x9a\xc5\x9a\xcbk*\x8c\xf23\x83\xd7\xebM\x8d\xbb`\x93\xd38\x1f5\n^\x81\xd2\xa7\xdf\xcbt>\xea\xdf\xe75&>\xb5\xd4\xa2\xc7\xa9\x1c|\x8f\xf1\x8a\xfasO\xf1\xf6\x97.\xc0\xfa\xad\xb3\xab\x9d\x88\t\nW\xd8\x10q\xfa\xd5\xe6\xc7Z\xb1+\xfe\xa8\x0f\xbb*W\xd4\x98\x1f#\xfb\xd7\xc4\x850@\xceO\xf6\xa7\x10\xdd\xdd\xda6`\xbb\x9a#\xdbc\x95\xfe\xd5Ou\xe0\xabI\x81\xf2nY\t\xecT\x11\xfbb\xac`\xf1L\xc9\x8f6\xd4\x10;\xabc\xfa\xd7\xdc\xeb\xa8?\xef%_H\xd8H|\x8ct\x07\xbdJ\xc7\xaa\x04\xd3n\x9fk)X|\xc5$\x03\x9f\x8c\x9e\xdc\xf3_\x0eY\xf8\xbf\xc4\x96.\x1a\x1dZ~\x0ev\xb9\xde?F\xcd_\xac\xbe\xdb<W\x00\x1fx\x82\xce\xe4\x04+\xeaM\xb9\xc9\xc9\xce8\xe6\xb3\xf7^\x05\xbf]>SC(\x04\x1d\x98\xa9\xdb\xb6\xf5k\x0f\x8a\xac$\xc8u\x92-\xbb\xaeG\xed_Mi\x9e!\x86\xf3q\x8e\xe4\x02\x14\x06Y\x06\n\x8f\xa9\xed\xc5KGx\xb1\x8b\x89\xb9\x91\x04E\xdc\xa1\xfc\x00\x7f\x11\x03\xb7\xd2\xbee\xb1\xfbb\xb1\x8b{K\xe1\xa4\x8eFP\xbf\xbaeeP\x0e}!\x87\x19\xa9H\xbe\xd74\x03\r\xd4"\xce\xea\x15\x9b\x19\xc8\x07\xea85W?\x84z\x98\x91\xb1\xd3\xe5\xd3\x90\x08\x05X\xe3\xea\xa6\xaca\xeb\xdd1\xd4\x0f\xc6\xc4\x1b\xdc\x82\xbf\xd4W\xd3\xd2\xcc\x1b\x1b\xe5\r\xe9P\x08\x18\x07\x1f\xdf\x8an\xd7R.]d\xf5g*\x7f\x84q\x80N+\x07\xb1\xfbZ\xd1\xa4\x8ax\xbfl:nUQ\xe7F\xeb\xb8\x01\x8c\x83\xc8S\xeej\xc5e\xf6\x81\xa1L\x11c\xd5,\x98\xed\xc1S(\xcf\x1f\xfb\xb1T\xd3\xf8s\xaaB\xccd\xb4\x98\xef\xc9C\xb8\xfd*\xca\x0e\xa3a(\x01.\xe1#<\x07\x15\xb4\xcd\xaa\xc9(G\xc1\xf5*(\xe3\x80@\xe6\x9c\xdb\xebd\x02\xb2o\x9a\x00=\'o\t\x9f\xaf\xd3\x91Y\x8c\x1e*\xb1\x91\x83\x0b\xb8\x98.\x19@t`@\x1d84\xe2O\x11*$\xae\xb3d\x1c\xe7\x07\xd2~\x9dj\xb5\xfau\xc9w\xd5\x13e\xcf\xab=\xf3S?\x82T\x00F\x07\x15\xa8[\xdf\x86T*\xbc+d\xcazg<\x11\x9e\x83\xe2\x9e\xc9u}2<e<\xd1\xe7\x02\xde\xad\xa4{\x00\x17\xaek\x14\x1a\xbd\xcd\xd1\xf3\x16\xfb\xd0H>Z\x90\x07\xb7A\xc7\xd6\xaev\xbe \x95\xe11\xcb?\xef\x14\x0c\xb7\xb1=\xb3\x91\x8ai\xecn-\xf5\xfa\xd8\x87\x1a]\x14\x91\xdb\x1b\x8e\xf4\x92\xaa\xc4\x10\x06A\xc8\'r*\xcbwrc,\xb9E#\x0b\x93\xc6jV\xc6\xf1m\xf6\xc7\xf7hd1\xa9V$`\xb0\xceIo\xf0k6\x97Y\x86f\x00\xcc\t\xce\x069\xc1#\x19?\x15!\xfbI\x82\xc3$2z\xb7cy9c\xc6?\xf34\xc4v\xd3\xdb\xe8e\xca6y\xc0\xed\xbfzu\x91\x1dt\xb0\xe7\xff\x00;V\x84\xf7\xa6}\xa1mc\x8d\x01$(\xcepO\xbf\xd6\x9a\xcf\x1d\xcc\x88dH\x9d6\xcb\x8d\xbd\xb1\xd8\xf3\xd4UR\x1d]\xa0\x95dr\x1c\x8e\xe4t\xcfZ\x95]p]\xe2O\xbc\xa8\xc9!\xbad\x0cv\x1f5\x19\xe2\x95\x9aI$\x8f[\x1e\x08\x00\x01\x81\xce\xc3\xf6\xa6\xfc\xa2\x9aB\x00\x07\xceOz\xb0\xa5\xd3\xc8\xe8\x18\xc6<\xb5\xe88\xe9\xfd\xe9\xf0\xbf\x91\xe2\x81E\xccC$\xe3\x8fX\x04\xe4\xe4\x9e\x05U?i\xda\xf9p\x94\x927)&@n\x17i\x1d\xc9\xf9\xed]C\xe2->/1n\xa1;\xd6@\xc2\xe1X\x1ct\xf4\x81\x83\x90~)\xcbt\x98\x87\x1eiVq\xeb\xce\xac\x901\x81\xb7\xd3jn[ppDY\x00\xec0?\xbdh\xb0[,m\xe5\x82\xcf$\xf1\x95\x129\xc7=Fq\xed\x8a\x91\x9a\xc9\xcc\x0bp\xa1$Xs#\x96\x04\x91 \\\xf4\x1d>*\x97\x1e\xa0\x9767rYZ\xcf&\x08h\x94\xe1\xc7\xe2\xe4\x82=\xb1\xd2\x9f\x9dGV\xba\xb4b\xb76\xb6\xf0L\x165\x8c0\\\xae=\xd8\x92H\xf7\xade\xb5\xcc\to,mm#\x06]Q\x88\xbdD\x15\xcf$\x81\xb0#\';\xefT\xb2Z\xce][\xceE\xc3a\xb5\xed\xfd3\xda\x9b^\\Bg\xddl\xac\xe9\xce\xe2G^\xfd\xe9\xcd\xb5\xfc\xa5\xc4\xab<j\xaa\x0eAl\xe3<\x0c\x0e9\xaa\xf2\xea\xb1Gt\xf2\xc7!f\x11\x05,\xb8\x1c\x8e\x0e\x06:\x1aW\xef\x90]E$J\xcbn\x19\xc1Y\x11\x03\x15>\xddzb\xb2\x91\xcb"\\\x19#\x98F\xef!`\xab\xe8PF\xeas\xdb\xe9V\xadk\xfc5S\x19 (\x1a\x8e\xe7~r;\xd4\xbd\xe4\x8a7\xef\x9d\xa4\x07\x94;\x00\xe7\xa1\xa6\x115\xea*\xb3[\x9c6J\xb1\x1c\x1d\xa7\x1cb\x9bIsc\xb8D%d\r \xdaY\x80\xc0\xfe\\\xf4\xa5_U\xb3X\x0c+(PH\xc8,\t\xdd\xf0\x07A\xf3M0\x13<\xf2\xb0\xd2U\x0e\x82\x9a\x9bSgq\xea\xdf\xbf\xda\xba\xb1:\xaa\xa0\x8fVH\xceF0>\xd5-\x06\xaf6\xf7Y\xad\xa2`\xe9\xb7\x0c1\xf4 \xfb\xd3y.\x95\x88\x910\x1f\x8c\xfa\xb208\xe3\x15\x19\x1d\xcc\x130\x1bI=I\xcf<w\xc5+:@\xf0\xb1\xf3V#\xb4\x8fVy\xc7$\xf28\xa6\xe5\xb8\xbc\xb9\x8dRIC\x05b\xcaX\x0c\xe7\x93\x83\x8ek\x9f\x87\x8a7\xcf\x96S8\xce3\x8a\x9a\xb7\x94)E\x05q\xc3d\x03\x83\xcfCR\x93H\xb0M9>S\xc7#\x00cP\n\x03\x8c\x83\x81\xd2\xa9\xd6\xb7W\x8d\x1a\x84\x8d\x9e\x1eDlXm,\xbczs\xedN\x85\xfcI\xb1VM\x8e]\x93\x9cr1\xfc<\xf55*\x0b\xa9m\xe1\xf2\xd9X\x02\xc8\xc1\xb3\x8d \x02\x08\ny\x045G\x96\xcc\x99\x0e\x08;\x10q\xbf\xeb\xed\xc5K^j7\x17K\x1a\xc7.\x11\x14/e\x19\xf6\xedICqqj\xed$\x98\x84\x86E\xdd\xb8a\x83s\x91\xec*\xb7w\x04W\x918[\x94\x0c\xa0\x1c\x16\xf79\xcdy\r\xd4H\x14!\x0e\x11v1\'\'\x8f\xaf\x19\xa6\xbf\x15,\x92\xac\xf7\x12\xdc4\x8cF\x18?\xe4\xc0\xc0#9\xa7\x85\x9ay~Z*\xe3\xb8\xd3Wm@E\x00\x82e\x82I\x18\xfa\x99\xb1\x92=\xf3\xda\x91R\xca\x91m\x90H\xce\xb9\xda\xcaI\xce?\x0f=x\xaa\xd5\xb7\x89\x1a\xd3\xef\x11\x97\xf3\n\xc6IwB@G\xe0\x80NFF9\x14\xc2\xe7\xc4~H\x85C9\xfb\xc4\xa9\x18(\xbc\xe5\xfa\x1c\xf6\xfa\xd5\x9d\xcd\xdc2\xcd\x0c\xd1,\xa2G\x00\xb2\xaa\xe9\xf2\xf0\x06\n\x90FY\x87s\xc5G\x8e\xcap\xbaX\xa9\n\x7f1<\x8f\xa6;T\x9d\xfd\xdc6\xf0\x9b\xa9IH\x95X\xcd+d*\x94\xe1\x87\xd0c\x9a\xadj\xf1M\xe2\xfd\t\xdfI\xfd\xec0\xce@\x93i\x1b\xc1]\xa4q\xdb\xebH\xea\x17\x89w\xf7\xbd;T\xbb\x8a4\x98\x14\xb7\x8dr\xc1\xc2\x82I$q\x93\x8e\x95\x17\xa2^M\xe1m\n{{K\xc8\xed\xe3\xdcY\xa6\x92P\xa8\x81\xfde\x8e\xeeO\xc6\x06i]:;{{\x95\x96T\x94\xb1\x90\r\x03\x18a\xa7s\xce\xfe\xaa\x94\xe8\xfeW\xa0\xaeW\x82s\xef\xfe*V\xc5\xacl\xf4\x93\xa1\xea\xf2\x89Vx\xff\x00\t\xceQ\xb1\x8c1\xf68\xceMV\xb4O\x11xcU\xba_\x0fi>e\xd2Y\xdbK\n\x85\xf4\xc4\xf9S\x90$\xeb\xf1\x9f\xd2\xb3=S\xc6\xd7\x9e\'\xd5V\xc2-Z\xd6,\x12#\x05\t\x92Ul\x8c\x8crs\x8e\x9e\xd5=\xe0\xed\x0bQ\xbc\xb5\xf1d\xb6\xbfr\xb0{\x85"\xd2\xf5\xd9\x96g\x97\xae\xe0\x8a\x02\xf9d\x02\n\x80\x0ekK\xf89V\x02n.Z\x07\x08\xa68\xc9\xd2\x83Y\xdd\x9c\x9ep;\x0f\x9a\x8cd\x01\xf2\x8a\x1c\x16:\x88\xdfp8\x18\xa7\xbe.\xd0%\xb7i/4\x1b{\x7f&\xc6\xcdm\'\xb7W\x90\x8d\xef\xeb>\xc0\x95\x07\x8c\xf2{\xd5]\xafd\x86\x0bs\xaa]\xb2\xcd\x02\x04\x11&\x18\xc7\xe9\xea\xe1\x7f\x0f\xbe*\xee\xba\xf7\x89\x17M\xb7\xb1s\xa7\xdb\xcdirc\xb8\x1e\x8d\x92\xc1\x1aaSi\xdcS=\t\x19=\xfaV\x7f\xab\xfe\xc6\x92\xff\x00[\x92\xce5\xb7\x9eg\x8e_\xbb\xc1#\\+\x16<\xb3\xb9U\xc7\xe9\xd6\xa7[\xebhP~"& g\\Dj#8\xdf\xd8~\xb9\xa7\xe2\x90\xab\x90Q\x86\xf8\xf5q\xef\xf7\xab6\x91ohV\xe2]V\xea\xe2\x19\xad\xd1e\xb4\xb6\x04\x95c\x9eN?\xde\x0eA\xed\x8a\xb4\xf8r\xfbH\xd1\xd9.\xc5\xe4\xbfz\x92\xe9\xd9`_\xe0\x84\x0e\x01\xfa\xe4\xd6o\xa1\x98\xf5\xcb).\x14mb\xcb\x14\x8b\xb8\xac\x99\x07\x07\x04\xf029\x06\x9a\xebV\xb6\x1e\x19\xb8\xb0w\xd5Q\x9aH\xa4\xdb\x1e\xf0\x80\x08\xdfj~.pW\x07>\xf4\xecRH\xb7,\xca\xa8\xb3\xa4e\x151\x96,\x0e\xadX\xce\xf8\xf7\xa7$\xd0\xc8\x01r\xc8\xe7Q9\xdb\x18\xc6+b\xf1]\xd5\xdf\x8a. \xbe\x17N\xb6\x16?w\x11C\xb4\xe1\xa5}\xcc\xccON6\x81\xf4\xaan\xbc\x96\xb3\xc8\xda\xc4v\xd7\x10\x9b\xab\xc8\xa3\xb5\x8a\x19D\xec\xf1\xa9oQ\x08\x0e\x07\x19`H\xc5Q4\xdf\x14\xb6\xa3wslw\xb4`\x12vH\x1e=\xa4c\xa0<{g\xad?\x9b\xc4\xa2\xd2\xda\x17\xd3\xc7\xdd\xa3\x8e<G\x16\x1a\x1cq\x86bN\t\x04\x1eI\xebK\x92[\xb7\xb8o\xc4C\xa9\xe5\x0b\xe6c\x04d\xe7}\xf3\x8d\xb8\x15\xc8\x92$\x89D2\x00\x89\x9d\x03\x8c\x01\x8d\xbew\xa9\xe5\xb9\xcd\xd5\xdc\xa6\xfa\xeeU\xf3LRE \x02\x05\xc2\xed;s\x921\xf1\xd6\x96\x9e{\x8dj\xe2]Z\xea\xf2\xc9\xd2\x08\x82\x0by\xc9>bp\n(L`\x908=+=\xbe\xf1\x11h\x95|\xbd\xed FC\x1f\xe1%\xcf\xc7@:\x92j\xab\xa9\xeb\xb2\xad\xbd\xc2Z\xcc\xd2\x193\xbd\x91pv\x8f\xe1\xcf\xb0\xff\x00\xbdr\x0b\x1b\xc9\x8c@\x00\x80i\x00c\xd2t\xed\x93\x8e\xfb\xf3K\x9a\xee\xda\x05vf\xc9\xd2x\xe4g\xb0\xcf\xd2\xb5X<Wggm%\xad\x9cr!Vg+\x04\x84\xaa\xb1<\x83\xf2p3N\xae\xbcj/\xe1\x89/$X\x91r\xa1f}\xa4\xe7\x81\x96=\x87\xb7z\xf9fmzH\x0e\xdby\xdf~xe\xe0\x8f\x8a\xf5<Gs"\x10\xe0H\x17\x0cX\xf3\x8f\x9e{\xd5\xc4\xbe\x133\xb7\x9a\xecX\x96\xd5\x92NA>\xc3\xb5T\x0f\x12Y)\xd0\x00\xca\x8c{\x8a\xfa\x88\xf8\xbfOcim\x1b\x00\x08Tg\x89\x1b\x04)-\xb3w\x19\x04\x92y\xab\xc6\x9f\xe3\xbd\x12\xd6\x15\x13\\\\\x12P\x8d\xc4\x84\xc6;{\xe7\xdb\x15\xf2\r\xb7\x8a\xe0E-"z\x89^\x01\xe3\x1d\xeag\xff\x00WB\xca\x1d\xbc\x97#\xa3\xb0\x03i\xc7\x1cg\xa8\xf7\xaa\xcb\xbf\x0b<\xb2#2\xcaY\x7f\x9b#$\xe3\x1e\xdfj\x94\xbd^\xd1\xe3 I\x18\x1c\xe0|\xd7\xd5\xb0\xf8\xfbH\x85ge\xb6u;\x8b\x02\xa0\x90\xc1\x87\xe2<\xe0}+\x8b\xcf\x1aH\x96\xefomq \x8eu\'tk\xbfh\x1c\x82\xc7\xaf\x1e\xd5\xf3\r\xb7\x8f\xada\x1bY\xa3\x90\xb1\x1c\xb0\xff\x00\xccT\xdax\xff\x00M\x90\xcdn\x8c\xb6\xf0d8%\xc3\xe5\xfb\xe4\x8e\xc6\xaa[\xc2\x12\xc2\xfa\xd2\xd6M\xb99\xe4\x11\x8fl\xd2\xd3\xaa\xd863*\x1d\xf3\xbe\xf8"\xb6\xfb\x7f\x1f\xc9i\xa6Mi0g\xb9\n\xa1fa\x97~\xc0\xe4\xfb\xf2N;UsU\xf1\xdaChm..\x8c~lqI$Q\xaeY\xb6\x83\x8e{u\xcdf\x97\xde3\xb1\xb8\x8a8\xb4\xbb\x19$\x9d\x88\xf3\xa6\x01\x9c3g\xa0$`\x0f\x81\xcdA\xbe\x83\xe2}Hy\xdf\xb2\xaf$i[$\x95\t\x908\xc0\xcfP:qV\x96>\x18\xd4\xc2Y \x96.p;\xef\xce=\x85C\xbb\xeb0FJ\xc2\xe8\xdb\x82Om\xbf\xbdN\xe9\xfa\xc5\xb3\xea\x04^I/\x91.r"\xc0s\xdct\xed\xefZO\x87,\x12\xe2ky\xa6\x95\xa0\xb22\x8d\xbb\xc8\xc9$\xe39\xf7\xe8\ra\x97>\x1f\xf1\x85\x8d\xdce-\x85\x94a\x94\x87\x93\x04\xb1 w\x19\xe0V\x99m\xa1x\xebQ\xdb3\xdf\xd8\x94\x8a\x15X\xe2\x08|\xb5\x19$\x94\\\xe0g\xbdZ\xdft\t\xa4L\xc6\xca\xba\x93\x18\xc9\xdb\xed\x8a\x89\x1f^S\xa9p\xe4\x86\xfc\xd5\xf4\r\xbc\x96zr:\xda\xd8\xa3}\xdf\xd0\xed\x13\xfaY\x8f\xb1\xe7\x8fz{mqsx\xaf$\x89j\x96\xcd\x1bd\xa9>`q\xce8\xe2\xb1]kJ\xf1\xbai\xf7\xe0jv\x96PO\xb0\x95\xb7B\x00\x87\x18*\x99\'\x00\x9e\xb9\xe74\xaf\x85|\t*i\xed\r\xfe\xb3\xab\xdeYM\x16#\xb7\x86\xe8\xdb\xa9#\x91\xb8\xa8\xcf\xf5\xedY\xc9<\'t\xd13\xc9r\x88Y\xbf\xf6\xd5rt\x9f\x9d\xb7\xa0\xf5h\xcb\x80\xb0\xb3\x0c~bq\xbdi#\xc6\xfe\x1c3\xda\xf9\xba\x97\xefeo,\xbb7\xfax\xfc#\xe78\xed\xd2\xa7/\xbck\xa5I\xa32\xae\xa1\x1a\x9b\xa4\x96\x0cL\xea\xe3*=D\x0c\xfec\xb5|\xc9}\xf6Cie\'\xde\xa4\x12\xcf\x07\x9aU\x83\xc9\x96\x0b\x9fI\xcf\x1d\xaa\xd7a\xf6M\xe1\xdb\xd8<\xd8\xd2Y\t\n\x1dVv8\xcf\xce{f\xac\x17\xc2Vp\x10\xd1u\t\x01+\x86b\x99\'\xf7\xa8\xff\x00\xea\x92\xbf\xe6\xb5]\x8eG\xab\xfe+\xab/\xb6_\x07\xf8~a\xa7\xb5\xb4\xee\xcbr\xe6iU@;\n\xf0G\xb9\xcfQ\xedS\x17\x1fjZ,\xd6\xf1:\xdc\xa0Y\x00+\xc8\x19=\x87\xc5Wo\xbe\xc5\xf4kh\x89\xb7\xb1g\x94\r\xc06[8\xed\x9fz\xefA\xf0O\x85n\xe4\x8e\xd2\xe3E\x82;\x82\xac\x030\xf4\xb1\xfav5"o\nt\x19<\xa6\r0a\xf9\xdb \xea>\xf5\xd8z\xcfP\x8c\xc8\nDA>\x9eF\x05@\xea\xbfi\xb6fY \xb5\x93{\xb7*\xec\xd9\xc1\xec\x00\xfe\x94\xdbN\xf1\xee\x8c\xd635\xd5\xcd\xeb\xdc\xc4\x00{x\xe2>\xb6s\x8fCp\t^\xf9\xad`}\x9bh\xa7\x98t\xf8\xa2m\x85\x142\x82\x18u\xc9\x07\xa8\xf6#\x9a\xa5\xea\xfe\x14\xb4\xd2\xaeJ$a\xe3\x93\x85\x1bC\x1e:\xa9\x1cr*l]\x0f\xa2,b0\xb2gbH8;|\xd3run\xa4\xcd\xabTc\xb61\x91TD\xd6u\xbdR\xed$m>t\x8b\x18\x8d\x18\xae\xf6\\w\xff\x00>\xd5\tw\xa0\xf8\xba_5\xc9\x11F0\xcaK\xee\xc0\'\xb8\x15\xaeh\xde]\x9b\xc2\x93\xdb3[\x99\x0e\x18\xae\xe6\x89\x87BO\xb7l\xfe\xb5\xa9\x1d6\xda\xed&\x9a\xd1\xe2Y\x15\n\xee\x00\r\xbd2{\x8f\xc8\x8a\xb4\x89,-\x8f\xf0\xed\x97\xb0\x19\xde\xa0\xbc\x97S\x03\xaa\xe5\xb7\xe7\x1bW\xca\xe9\xe1_\x15\x0b\x04\x81\xafVH\xbc\xcd\xec\x02\x9d\xce\xc7\x9f[w\xc7j\x90\xd1\xf4\x0b)/b\x8a\xe9L\x13\xab\x00\x1f\xb6\xeff\x07\xb1\xaf\xa5\x12\xc2"\xf0\xc5\xf7uC\x1c@\x11\xb7\x903\x83\xd3\x8d\xb9\xeb\xedU\xfdO\xc36w\xcbp\xc9d#\x9e3\x82A\xda\xde\xf9\x1e\xe3\x15,^\xa0\x04"*\xef\xdbnj#[\x02A.X\xfc\x9a\x81\xb1\xf0\x9e\x99u<\x88\xd6\x08\xb9\x01\xbd\';\x87M\xe9\xee=\xc7Z\xf6\xf3\xec\xde\xc8H\x97V\x0c\x16d\xc7 zXw\x1cW\xb6wWzL\xebkp\xcev\x8c\xa8bA#\xaeW\xd8\x8f\xd4U\xe6\xcbP\xb5\x0b\x0bO;\xa4.\xf8\x9eL\x1d\x9b\x80\xe1\xd8\xaf\x0b\x93\xd4\xf4\xf7\xa6\xcd\xe4\xb9\xfc\xdbQ\xe4\xc5\x8f\xcbUG\xb1\xd6t\x90R\'\x92\xe2\xdc\x80v1\xc1\xfc\x9a\xae:\x0e\xbd\x1bGn\xb7.\xe4`\x831\x00\xed\xcf\xf0H?\xfe\xea\xb5\x0bV\x9a\r\x9b\x1d7\x10\x06\xe5\xe8{d\x8f\x7fz\xac\xdd\xf8>\xe4\\\xad\xcd\xbc\xbb\x1c\xa6\xe9\x11\x01\xda\xdd\xc6M \xcb#\xeey\xecE$\x84]\xb3O\xd3I\x9fE\xbd\xba\xbc\xd0\x94<O\x18\x9eK\x03\x8f.|\x1eZ/\xe5\x7f\x91\xc1\xefV\xdd\x1fY\xb1\xd5#\x91\xec\xcby\x8a\xc1e\x81\xc1Y\x12B2Q\xd4\xf4a\xedU]>\xfciO<W0\xca\x88\xe4z\x1f\xf0\x03\xfcF6\x1cma\xdb\x8fpjZ\xe3M\xb4\xfb\xc4\x1a\xb5\x8e\xa8\xd6\xf7Raai\xd71\xcf\x81\xb9\x16e\x18\'\x03\xa3\x0fP\xa5\xc6\xc7\x1e\xdd\xf1L\xb6?\xe6\xad\x17\xe2\xda[R\x97\n\xcb\xb8p@\xce\r3\xd2u\x89a\xb7\x96\xc4\x07`\xaeX\xda\xb7\x1et`\xe0\xb4Y\xc6\x18w\x1d\r<\xd359.\xe7}2\xfe\xdc\xdbj\x88\xbb\x9a\x06\xc3\x07\x8c\x9cy\x90\xb6\x00\x91;\xe7\xa8\xee*jm4L\x17\xf7H}E|\xc5;_#\xf9O\xbf\xc5KP\xf9\x05{\x0c\x1d\xaa32\xe0\xa9\xf7\xces]i\xfa\xde\x9f}p\xd6k.\xf9Y\x0bG\x1b\x82\x8eTv\x1e\xe4w\x1di\xfb<rFc\x95X\x11\xc0`\x7f\xb5T\xb5-\x07R\x8d\xa4\xb9\x86\xe3t\xef\xb5\x92p\xab\xe6,\x89\xf8Kq\x86\xc7C\x9e~i\xae\x8f\xe3\xc5\xb0\xbd\x1ag\x8a\xe0\x8bN\x96V\xc47\xc87Y\\7M\xa4\xb7\xfaNObp}\xe9\xe5\x90\x83\xa5\xf6\xdfc\xda\x99d\x04e7\xf8\xefS\x97QI`\xef4\xc6I\xed\x9b\x04\xcc\x8b\x99\xe2\xf8p9t\xfe\xa2\x9c\x8b\xf0\x8a\x87\xcf\x12\xc2\xd8\x11H\x99\xda\xc0t\x19\x1d\xea\xcd\x12Ar\xf9\x8aH\xe4\xe7\x9d\xae\x01\xcfn\x0f4\xdd\xf4\xebDI`kU1\xc8\xc5\xa4\x89\x97\n\xd9\xfe =\xfei\xf0\x84n\x0e\xd4\xce\xa0v \xe6\xa2a\xd4 \x97\xf7\xb6\xf7Q\xc8\xca\xde\xb8\xdf\xfd@\x7f\x94\x83\xd3\x1e\xf4\xb5\xc4\x17$\xb5\xee\x99xm.\x91=PH7\xdaN3\x9cH\x83\x90\x7f\xdc\xbc\x8a\x8f\xbd\xd2V\xd5\x14<\x12]\xc0\x1f\x02U\xc1\xb9\x847O\xff\x00x\xab\xd3\x07\x9c{\xd26;>\xed\x0c\xb6\xfa\x84d<\x85R\xe3;\xed\xe4=\x86[\x98\xd8\x9e61\xc85\xddG8aA\nFA\xa9\xdb\x7f\x14[\xbb\xc3i\xa9[\xbe\x99\x7f&\x15a\x90\xee\xb7\x99\xfd\xa2\x97\x007\xfe\xd3\x86\xf8\xa9?,\xc1\x1c\x9fu>Qv\xfc\x05KDXw\xdb\xdb\xf2\xaa\xa34\xd2Cum\xa9\xdaGy\x03\x81\xe6\xab0\x08\xcb\xdfpl\xe3\xff\x001]\x9b\xdb\xdd\x1a\x18Z\xcc\x99\xed"G\x07O\xb8\x93\xcc\x93\x00zD\x13\x92\x08\xc6:>F;\x8aXs\xdfq\xef\x8c\x11H)\xed\x8f\xedV\xd8\xef\xe3\x01D\xea \x97\x19$\xfa\x94\xe3\xd8\xff\x00\xcd9i\xed\xd8\xe5\x8cn2\x08\xe3\x955P\xb5\xd74=mXG \x8a\xe4*\x97\xb7\x9ftS o\xe1u9\x18\xf9\x19\x07\xde\x9e\xc8\xa1\x1e_2\x16\x8f\x08\x07\x98\x87*G#<\xf1\x9fzX}\xb6 \x8fzI]\xf7\x04\x1a\xb0Ks<#|(\xb3 \xfcQ\x82\x03\xfdT\x9e\x0f\xd0\xd4k\x95\xba247\xdb^2\x0b\xa2\xfad\x8c\xf5\xc3)\xfe\xc6\x99\x19Dq\x87]\x8f\x1cl\xb9\xc6\x0f\xa4\x9e\xe7\xd8\xd4}\xd6\xa1f\xc2F\x927\xca\x06>dy\x8d\xd1A\xc6U\xb2H\x1f^+\xa5\xb6\xdc\xd0\x14\xf6\xde\xa6\x14\xdc)\x91\xd1\xd5\xc2\x83\xbd\x94\xe0\x0f\xfd\xe89\xcf\xd2\x857\xf7\n^\xde\xe6\xd6hK\x8d\xc1\t\x07\xd3\xd5A\xecO\xb1\xa6\xb6\xb2\xf9\xc0,\xd1G\'\n\x12\xe10\xaf"\xb2\xf5u^2\x0f\x19\x04\x83\xec)#\xa7\xcc\xd3\x0b\x8bW\xfb\xad\xcf\x96?y\x18\x0e\x92\x00\x7f\x0c\xcb\xd1\xc7o\x7fc\\\x04\xe0c&\x8c\x0f\x8a\xb2\xdb\\E!\x08W\xc9\x9b\x90RN\x08?\x1dG\xe9N\xd86P\x968\xc7A\xc8\xfe\x95R\x97Z\x16\x8a\xf1k\xbax\xb2\x1c\x0f\xbd\xc6w\xd9\xb1c\x81\xb8\x9fTD\x9f\xe6\x18\x1e\xf5(n\xef`[c\x1a\xf9\xd08\xe6@F0zm#\xb7\xb5,7\xedI+S\x8a\xa90\x8f\x83\x91\xf8J\x9d\xac??\xf9\xa2\x9a\xdbL%WdW\xce\x07\xa4\xfe {\xf0\x7f\xf8\xa2\x94\x08\xf6\xa4\xe2\xbf+\xcd\xbcq\xec\x92g\xf3%c\x8fsZ\x87\x85\xbe\xce\xf5O\x10I\x14\xb7\x88l\xec\xc6\x08\x07\x87q\xfe\x05h>\x0c\xfb8\xd34\xd8\x85\xd6\xa2\xd1\xdc]+\xa9\xf3Y\x86\xc8\xc9\xec\xa0\xff\x00z\xd0/\xb5\x1b{x\xd1-\xb0\x80\xae\xdf0d\x90O\xc7AU\x8d&\xdbl*_\'\x1b\x9a\xe7O\xb1\xd1\xfc7\x02ZZ[\x82\xcb\x80vu\xe7\xdf\xdc\xd3\xcb\xe4{\xb8\xc8\x9d%N2\xb1\xa1\xcbc\xfd\xc7\xb5G5\xf9\xb0\xb6\x93\xc8\xb37W\xa7$\xe5\xb2\x14g\x1c\xb601\xf1Q\x12K\x7f%\xcc\rxeb\x83pX8M\xcd\xee3\x96\xc7\xcd0\xc4\x9d\x89\xc8\xf6\x1f\xde\x9dE\xee0>\x7f\xc5KEu\x05\xbcR[\xc3l\xec\xc8\xd8+\x9e\x06\x06\x7f\x11\xe2\xa4-\xa1{\xe0\xb2\xcb\x08U\x001E\xfc?\x19=\xeb\xcbK\x03\x12\xcb,\xc9$g``\xa7\x979\xe4\xf0(\x13^\\#6\x9b\x14/ \xca\xbc\xf3dC\x07\xb9\x0b\xfce\x7f!\\\x08\x062\xbbc\xf2\x81]/\x9c\xe1\xb7\xf7&\x9f)\x85"\x9c\xc5\x00\xb5V`\x1aiN\xd5,{/\xf3\x1f\xa5:\xb7O2!$H!T\x1f\xea\xdc\x02\x07^HZ\x85\xb5\x11@\x0c\xd0L\xda\xc5\xea\x82\x1a\xfe\xe7\xd3m\x0f\xb9^6\xe3\xd8&O\xcdM\xb4\xb1\xc3$\x0fwr\xd77s/\xee\x02\x83\xb3p\xeb\xb20= {\x9aqUy\xc0\xfe\xd4\x86\'\x8f\xfei\xea\xdcIpD\xf1\xa9\x91U\xf6\xac\xb3\xfa\x10\x01\xdd\x16\x93\x9fY\x89\x0c\x80\x12\xf2\x0e\x18\x8f\x8aR\xe5neh\xff\x00\x12.\xdc\x00X\x05\x19\xe3uD\x1d:\xd6 \x1e\xf1\x996\xb9\xc2\x96\xc1s\xee\xde\xcbKb\xfc\x0f\xb94\x95\t\xde\xa1.5Y\xaen\xa4\\\xbb\x05\x1f\xbb\x01Ic\x9f\xf7\x1e\x05"\xb7\xda\x86\xd0$\x82\x18\xd0\xf1\x96\'w\xe7N\xa6s<\xe4\xc7:,|p0\x01\x1d=\x18\xed\xf3Q\xb7\xd7\x16\xdat\xc9\x1c\xa8\xb7\x17R\xe0-\xbd\xba\x99\xae\x0e}\xd0\x10\x10\x7f\xb9\xb0)\xad-\x92s\x9a{P\xc0\x18\xa7\x92I\xb25\x92Rf\x91\xbaG\x18\xc9\xc7j\xa9]]E\xab\xdc\xbd\xaa\xdcI"\xa1\x0b%\xbd\xabyh\xbf\xfe\xf6^\xe7\xe0T\xe4\xf6\xfa\xbe\xa4\xb1\xa6\xaf<\x1a~\x9f!\xda\xb6\x16\xce\x0c\xb2\xfb\t$\x03,O\xf2\xa7\xebV\x0bm6\xd2\xd2\xd9\xb6G\xf7\x1bh\xd3\x1b\x88D8\xf8\x1d\x13\xfa\x9a4\x9e\xc74j\x03\x91QZ|\x16:U\xacV\xad"\x06\xc1+k\x009`>\x07\'\xe4\x9a\x94\xfb\xdc\xcc\x91<\xce\xd6\xb1\x95\xf4A\x03n\x95\x81\xf7=\xbf*\xf6+\x142\x08\xe0\x8c\xdb\xc5 #\x7f[\xa9\t9\x00n\xe4\x03\xee\xdc\xfcTD~Tf\xe2\xc7J\x8d%0K\xb6\xea\xe6fg\x866\'\x90\xf2g/\'\xfbT\xfdH\xae\x1dC\x8cc\xde\x8fI\xe6\xac\x1eu\xb2)i%K;p0Iq\xb9\x89\xfef\xf7\xfaW+\xabZZ\xdb,\x85\x99\x13v\xdbk\\\x134\xc78\xdc\x14s\x8f\x93Q-\xa5j\x17H\xbb\x19w\ts\xf7\x89\xe3F\xf2\xcfe\x86!\xe9S\x81\xc19\xa5m\xec\xca\xcf\xba\xcc\xa3\xedw\xfb\xfd\xfc\xed\xe6:\xed\xfe\x11\x93\x80O\xb7oj\xe6\xf8\xa3j}|^xVk\xbb\x84\x820}p\xa3rs\xd03w?Jes\x12F\xd0[\x87\x8dQJ\x9f4\x8d\xd8\xcf@\xab\xdc\xfc\xd7N\x92\x99\xbe\xe9nY\x0cY\x90\x96_2IX\xe7/\x83\xd0\x01\xd0\xb6\x07\xb0\xa7\xda|\x01l\xb7\x98\x84\xb26|\xb0_-#\xaf\xfb\x8f^?!M2\xea?\xd6\x9cV\xc0\xa8\x9b\xb9\x9e\'\x10\xda\x17\xf3\x1f\x99.\x98n`:a\x17\xfc\xd3\x1bia\x12L\x126\x91\x90\xed\x96Fl\xf3\xec\xcd\xef\xf1S\xd6\xd1I$j\xe0\x86,\x0f+\xe9V\'\x80\x11\x9b\x92\x17\xde\x99\xc9\xa4\xc8\x828Byv\xc4\x12\x96\xfb\x7f\x1b\x9ew9\xea~\x9f\xad4\xcai\xd5a\xde\xaa:\xa6..\x85\xb2E\xe7lpX\xb9\xd9\n\x1cd\xe7\xf9\x88\xf6\xa8\x1dFh\xdaI\xad\xed!&\xe1\x10n9\xc0\x00\xf4$\x0f\xe8+A\x1at\xf0y\xd2<\x82YQJ:(\x04\x86\xeb\xd0w\xc7\xebU\xfb[+;U\xd4\x96\x0ba,\xdb\xf7\xfd\xdd\x1c\x02Y\xce\x07\x9b/ \xb1\xeaGaM\xe0\x8e\xd4\xe8a\xefT;\x9bo.\x14s\x1f\x9d&\xd22;\xb9\xe3\xd5\xec\x05G\x8d\x15\xa3\x868\xe4\x93$\x82\xd2q\xd5\x8f\xf6\x02\xb4h\xedD0\xd9ZH\x15\xa7\x901*\x9d\xd9yb3\x8fJ\xfb\x9a\x8c\xbb\xd2/u9\x8a8X\xac`\'\xcc\x03\x1bX\xa1\xe89\xe4{\xb3q\xec+\x81\xd8m\xf7\xa3j\xca_G\x96\xfa\xe2D\xb6\x8d\xfe\xeb\t\xf5\xce\x07\x0eGUS\xdc|\xd3{\x9d\x02;i\xa2\x93\xca\xf2\x84\xa0\xe5OWn\x80g\xaf\xe4+iKC\xf7x\xa6KV0\x92V\xde%\xc2\xee\x00c+\xd3\x83IG\xa0\x88&{\xd9H\x96\xe9\x94G\x1eG\xa6<\x9f\xc2\xa0\xe4\xe7\xdc\xd2\xbc\xf7\x15\xcd\x03\xfek\x0c\xbb\xd0\xaf\xe3\x8d\x95\xa1A#\x9c\xf28\x8d=\xce{\xfdj\xbfw\xa3H<\x92ONX\x9e\xa0\x0f\xe2>\xdf\x9d}\r\x17\x87&\x9e9@\x91^g\x95\x84\xf3\x03\xb9\x83\x7f*\x83\x91\x90;\xf6\xa8\xf9|?m$\xd3Z\xc1g\xe64\x1bX,\x8d\x85\xdf\x9e\x0b\x9e\xe7\xbd:\xb7\r\xedI(\r`S\xe9\x12\x13\xea\x05\x80\x19U\xc7<\xfb\xe2\xa2\'\xd2f\x99\xcf\xf2\xc6xQ\xd0\x9e\xff\x00\\W\xd2w\x9e\x0f\x8e9\tw\x1f\xbc*\xd21\x18\xdeO\xf0\xaf\xb2\x8e\xf4\xdaO\x0fi\xb6\xd6\xe6{\xc9\x16\x08\xd5C\xb3\x95\xf4\xaf8\x00{\xfc\x0e\xf4\xf2\xdd\x1cpx\xa4\x98\x81\xaf\x9b\xa5\xd1w\x07}\x8eI\\\xb18^\x83\xbf\xc5B\xb6\x9b5\xd0\rk\x011\xaf\x06c\x92\xb9\xf6_\x7f\xad}\t.\x83o\xaa\x10/ax\xac\x15\xbfsk\xb7\xf7\xb3\xff\x00\xba_\xe5^8^\xfd\xe9\xcc\xf6\x16\x9b\x19-\xed\x86\xc8\xb0\n\xa8\x18\x00\x0f\xe8;S\xebrG\x03\'\xf6\xa6\xcc\x00\xfcW\xcd\xf2h\xe2\xdd\x02m\x1b\xfa\x90z\x9c\xf4\xa8\xd8\xf4k\xdb\x99B\xc7n\xec\xc79\xc2\xd7\xd2_\xb04\xb8e\x8aMB2D\xdb\x99b\x88\x033\xe3\x81\xb4c\x8f\x92x\xc5;\xb7\xf0l\x9e"\x8a\x08\xc9[;X\xa3#d%\x95YO\'q\xc0$\x9e\xe6\xbb\xf8\xed\'\x18\xdf\xde\x81h\x08\x04\x9c\x0e\xc2\xbeU\x9a\xd0C\'\x94\x0f\x9b0<\xaaz\x80\xfa\x91]\xc7\xa5^\xcb\xb8\xf9$\x01_\\\xa7\xd9-\x8d\xb4O\xe4\xc5\n!#\x01xs\x9fr}\xe9G\xfb3\x82(\xe3\xcc\xaa&\x90\xfe\x04\xed\xf9\x93J\xff\x00Q\x1c\x01\xf74\x81b\t\xdf\x8fa_#6\x8fv\x84\x03\x19\xcf9\xf8\xfa\xd2M\xa7L\x00;x\xe7\x9f\x81_]M\xf6cdw"\xb9\xdcT\x12I\xc6\t\xee=\xe8o\xb3\x1d)\xd6=\xac[\x01w\x123\x90>;f\xb9\xfe\xa1\xc1\xda\x95\xf8\x15\xaf\x8f\xcd\x9c\xc3\x18Br3\xc5{\x1d\x85\xc3\xb66c\x8c\x92x\x18\xaf\xb3\xf4\xcf\xb1\xdd;R\xb9\x08\x1dU\x01"I\x1b\x080\x0f\'\xe2\xa6\xf5/\xb3O\n\xe9v\xe8\x1aM\x8d\x8c/\x94C\xa9\xc8\xc6A=I\xf8\x15\x0e^\xbf\x1cr\xacI\x19w\'\x07\x1c\x0f\xad=\x1fH.\x0b\x16\x00\x01\x9a\xf8E\xe0\x91\x0bm\x07\x0b\xd5\xab\xd5{\xc6\x1bVIq\xd7\x198\xaf\xaf\xed\xbe\xc8\xf4\xdb\xd3\xcb\x01\xc6B\x9c\x1d\x84\x93\x92\xca:\x93\x8e\x07j{/\xd9>\x97\x1a\x80\xb1\xec;\xb0\xca\x06I\xed\x93\xf1\xf4\xa9\xa7\xa8\xa0PJ\x03\x8fsL\x8e\x9e\xd98r>\x05|w\x1c\xda\xac<Eqr\x99?\xc2\xec?\xb1\xa9\xf8\xbcc\xe2\xed=V(\xb5\x9b\xb4\x0b\xce\x1d\x83\x9eF\x0f,\x0f\x1f\x15\xf6>\x9f\xf6K\xa0\xc1o\x13\xdc\xd9\x82I\xc33\xcb\xb5T\x0eK\x02\xbf\x1d\x85@O\xf6s\xa0j\xb7\x97\x11Y\xd8:i\xd0\xe7<\xe5\xa4(3\xb8\x92\x01\xe7\xfa\n\xa9\x8f\xacXu\x19\xe4\x89\xacc\x91c\xfc\xcc\xc1Xg\xf7\xa9\xa2\xc2\xee\xd9\x03%\xe4\x91\xb3p\x15\x885\xf3\x04?h\x9e0\x8e\x19b:\x91\x93x\x004\x91\xab2\xf5\xfc\'\x1dOz\x9c\xd3>\xd6<Yh%\x17\x0c\x97d\xa0\xf2\xcb.\xdc0\xe0gf21_A7\xd8\xe6\x86\xa41\xca\xa2\xf2\xcd\xb7\x00`dc=\xbek\x9b\x1f\xb1\xed\x12i&\x99\xa2\x92;u\x1b\xa3g\x1bK\x003\x9e\x9d\xfa\x01\xde\x97<]\x11\xd1\xfc\xce\x99m\x83\xbe\xca\x01\xfbczv\'\xea\xc8\xcaW\xa9Nq\xb6\xecH\xfd\x0ek\x16_\xb6]]cd\x9bHM\xd8\xeb\x1c\xce\x9f\xaesO`\xfbi\x98C\xe5\xc9\xa3\xb8\xfe\x12RP}?\x19^\rk\x97\x1fd\xfaD\xc56i\x05#w\xf4\xee\xfcD|\xb1\xec:\xd2\x87\xec[\xc2\xe0\xc6\xa1$\x04\xaey\xc608\xe7\xbeMA\x1d7\xc3\xb3 o\xf4\xd02s\xb3\xb0\xfe\xf5,_u\xc8\xdb\x03\xa8d\x01\xdd\x14\xff\x00j\xc9a\xfbg\x8c\xab%\xc6\x97s\xb4\x91\x82\xb2) \x0e\xdc\xe2\x95\xff\x00\xf1kI\x98\x81$\x17\xb1\x80\xdf\xca\xa7\x8f\xc8\xd6\x9a~\xc6<3\xfb\xd6\x91d\n\xbc\x86\x04\x12\xd9\xed\x8e0\x07\xf5\xa6\x89\xf6c\xa0\xefh"\xd3NH\xda\x0b\x9e_\x07\x8e\x9e\xe7\xa5%\xbaG\x87\xc18\xb4d?\x12\x7f\x9c\xd3\xc9\xd4\xfa\xd8\xe6\xea6\xfa\xa0\xfe\xd8\xaa\xe2\xfd\xb1i\xff\x00t[H\xf5k\x98!G\x0e\x02\x07BO\\\x12\xa38\x1dq\x9e\rz~\xd4\xf4f>t\xba\xc3\xb9br\xc5Il\x9e\xe4\x11\x93Z\x1a}\x8ax]~\xec\x82\xdb\xb9g,@\xdczc\xe9\xf3N\x1b\xeco\xc2\x83hk\x1e\x11F\xf6\xc8\x1c\xfe\x95\x1d\xba/Ee\x0b\x89\xf4\xe78.\xb8\xfe\x94\xfa\xf5n\xa82\x7f\xf4\xf9\xf7\x08\xdf\xe6\xa8\xf6\xbfj\xbaW\xa5\x8e\xab\x1b\x1czK\x1d\xa4g\xb1\x07\xfcT\xc1\xfbT\xd2\xa6\x7f^\xa9k\x82I\xc20\\\x13\xc1\xc0\x1cv\xa5/>\xcc\xb4\x0by\xd5!\xd3"r\x00\xd8\x0br\xc7\xa0\xfa\x9a\xb0\'\xd8\x8f\x84\x94.\xfd1K\xaa\x02\xfe\xbce\xc9\x1cc\xfbTF\xf0\xd7Cr\xd82\r\xbb\x11\xfe*@\xeb]Iq\x94\x88\xfc\xee*\x97u\xf6\xa9d#;u\x88\x08\x0f\x94\\\xa9\n?\xb9\xa8o\xff\x00\x16l\x84\xe6Cz\xbe\x93\xd0\x1e\xbf\xde\xb4\x99\xbe\xc9\xbc\x19k\x13\xb0\xd1\xd7\'\x85m\xc7\x19\x07\x18\xfc\xaa\x10\xf8\x13C\x8ex\xd4i\xb6`3s\x95\x07\x19\xf6\xfc\xa9C\xc3\xfd\x06%9F;|\r\xbe\xc2\xb9\xfe\xb1\xd5\x18\x82\xa25\xdf\xe4\xff\x00z\xe2\xc3\xedWG\x97s\x1b\xb8\xd5\xc2\xf0<\xce9\xfd*~\x0f\xb4\xbb\x10\xaf(\xbf\x81\x80\x8c\xae\xde\x08\xe7\xdf\x9a\x9c\xb1\xfb2\xf0\xd5\xed\xbcsK\xa0\xd8y\x93&\xe2\xc6!\xc9\xcf\x03\x1c\xe35`\x1fe^\x14;\xdb\xff\x00OX\x0c\x82\\\x08\x861\xee\x01\xa8rxW\xa39\xd4\x8d"\xe7\xb74\xf2\xf5\xcb\xcc\x10\xf1\xc6\xde\xdd\xab3\x7f\xb5m\nI\xe5\x84\xeaq\xeeF\x0b\x90xS\xfd\x8e>)\xb8\xfbU\xd3\x15\x84k\xa9\xa1\xc6y\xd8\x18\x8c\x7f/^Mi3}\x9f\xf8v\x08\xdff\x87`\x8c\xea\xd9a\x12\xf4\x1d\xc6\x069\xf8\xa8\x8bm\x07K.\xeb\x1f\x90XK\x86\x1caX\xf2G\x1d\xc0\xc5\'\xff\x00\xa6:\x1c`\xff\x00\xee\x9d\xb7\x19\x07\xb7\xd2\xba:\xc5\xf3c\xd3\x08\xdfm\x8dS\xa5\xfbc\xf0\xf4\x89\x93v\x1aM\xa1v\x85+\x9f\xe9\xfa\xd5v\xeb\xedsGp\xab\x1c2I\xe5\xc9\xe6zcs\xcfL\x8e\x06\r}\x05o\xe1\xbd1\xa1\xb63Z\xc2\xceaU#\xca\\\xe3\xf3\x07\xa6i\xcbxn\xc5C\xed\xb6\x89B\x83\x82\xa83\x8e\xe7\xfe\xd4\xfc^\x19\xe8\x11\x1c\xf9s7\xff\x00\xb8\xff\x00\x14\xc3u\x8e\xa0F5B?\xfdO\xf9\xaf\x9a_\xedZ\xee\xe2I\xc5\x9e\x81|\xe0\xa6|\xc6\x8d\xc2\xb7\x1c\xae\xd02I\xed\xce*\xb5y\xe3\xbf\x17_\xbc\x83\xf6\x1e\xab\x14~V\xc5\x10#\xa9!\xba\xee\xc7\xe81\xda\xbe\x9f\xd4\xf4=8m\xcc\xdbF\xc6\xdc20\x0f\xb7\xd4\xff\x00J\x93\xf0\xfe\x8bi\xf7FD\xd8\xec\x92\x16\x18$\xb7\xd0\xf6\xe6\xacm\xbaWB\x81\xbf\x87a\x96\xc6\xc5\x895\x1a^\xa1\xd4\xd8e\xae\x80\x04\xf0\x14\x01_.[x\xdf\xc6\xf6\xd6\xf3B<%\x7f2\\\x05_\xde\xa98\x00c\xd3\xe9\xe3\xebH\xdd\x7f\xf8\x83\xafX\xcc\x9f\xfa~X\x98\xb6XK*\x05\xc6x\xc0\'\'\xe9\xd2\xbe\xc0\x9fB\x83\x05\x82\xa0\x00\x16\xc1\xc7~\xb4\x84ZE\x99\xc3\xaf\x95\x11#$g\xa7\x19\xe8j\\v]&9\x15\xd3\xa7\xa8`A\xceOo\xa9\xa6\x1a\xee\xfd\xc1\rw\xb68\n+\xe3\x0b?\x0bx\xd1\xae\x14I\xa3#]\xa7\xaa7\x8eh\xd6P\xdd\xb6\xe3\x81\x8a\x95\x8bA\xfbVE1\xc7\x0c\x81\xc2\x0c4\xb2@ps\xec\t<\xf4\xaf\xa7?b$Z\xd6\x9e\xef\xe5\xcb\x96R\x008*ry8\xabci\xf0E\x18P\xbb<\xc9\x16?r\x8a\xc7\x00\x1c\x0eq\x9a\x92\xe9m)\xcbZ\xc6\xc3<2\xea\xfd3\xc57\xf8\x8b\x94\x18\x17.\t\xee\xa7\x1f\xd2\xbe1\x93\xc0?i\xda\x90\xc5\xce\xa5oh\xac\x07\x01\xf6\x92\x0fs\xb4df\xa6<5\xf6O\xe3=3U\x83Q\xb5\xbc\xd3o\x02\xee\x13@\xd2\xc8\x80\xaf\x01\x8eGS\xed\x9e3_U\xdc\xe9\xb1*a\xa4e\x1brX\xb7\xaf#\xe4q\x8a\x8e\xd1\xd2D\xd4\xca\xfd\xe9\xbc\xbc\x96\xd8\\\xe7\x1c\x9fH\x1e\xe0\xf2M?\xaa\xdc\xc6\xd0~\x19\x169\x01V\n\xa1v<\xf1L\x06\x9fZ\xcd\xf8\x99\x19\xd4\x86\x05\x98\x9d\xc5W\xb4\xef\x0b_i\xf2am\xed\xe3\r.\xe7}\xeb\xca\x93\x9e\xdd\xeb*\xf1\xd7\xd9#\xf8\x97\xc4M\xa9\xbe\xa9,Mx\x11<\xbd\xa2P\xac\x8b\xb4\x01\x9cu\xeb\x8a\xfazx#-*\x89LGvG\xfe\xd5\x1f\x1d\xaa\xa5\xa9Y\xc8\xf7\xb6*\xb79\xdd2)Ps\x81\xdc\n\x81\xd3\xfa]\x87K\xb9{\x98\x16C+\xae\x82\xce\xe4\xecH\xdb\xf6\xa9W7\x97\x1dB!\x14\xcc\xba\x17\xd5\x801\xb8\x15\xf3\xd8\xfb,\xf1\x0e\x91\x04b\xd2\xfbM\x99m\xc2\x87P\x867`\x0f|n\x0cO|\xd5\x17\xc6\xcfg\xa2Xi\xd6\xf3\xda\xea\x7f}\x99\xe6\x171N\xb8\x88\x05+\xb0\xa3\x8e\x1dI\xcf\x00\xf6\xe6\xbe\xdd\xbb\xd2\xc0\x8e\xe0$h<\xc0rF0x\xea}\xb9\xe6\xb2\xbb\xcd\n\xdb\xc4z4\xf6Z\x9d\xbf\x9a\x11\xda5v\x19d\xdcy\xda>\rY\x8bkI\'Y\x19\x08nv\'sQ\x9a\xf2\xee8\n\xc7"\x9d\xb1\xba\x8e+\xe3\t\xbcax\xf1\xbc@0\x8c\xe31\x13\x85c\xee\xf8\xeb\xf4\xaa\xfd\xde\xaf{w\x90\xf2\xedS\xd5W\x80~\xbe\xf5\xe6\xada&\x99\xa9_\xd9HIkk\x89!$\x8c\x13\xb1\x88\xc9\x1c\xe35\x1a*\xde\x1b;XpR\x15\x07\xde\xb3\xf7\x1dF\xfa|\xac\x97\x0cG\xb7\x1f\xd2\xae~\t\xf0\xe4\xfa\xfe\xad\x1b\xf9\r%\xbd\xab$\xb3\xf6\x05A\xfc$\xf6\xcfJ\xdc\xbc)\xf6W\xa4jW\x1a|\x13@\xd7fK\x81-\xd1\xc6\xd2\x03\x82?@\x7fL\xf3O~\xcf<:\x96\xbaE\xacq\x01\x1d\xcb\xa0yd\x07\xf8\xb6\xef\x07\x83\x8c`\xf0Oz\xdf\xbc\'\r\xbe\x8f)\x96vF\xfb\xc2\x81\x83\xf8\x97\xae\x008\xf9\xe4S2\xdc\rX\r\x8f\xe9R\xed\xadB\xa6\xa2\x998\xac\xa3Z\xfb#\xf0\x95\x89\r\x1e\x99\x18\xde\xe0+\x02\x08\xc7\xb1\x03\xb9\xab\x0c?c\xfe\x0f[dg\xd2\xe2\xce\xc0\xf8\xc2\xe7\x0c22M^\xbcK%\x8cm"yJ\xeaW\xccV\x00ey\xdb\x91\xeeEX,\xe5\xb1\x96(\x0cBQ\x8c)\x0c:\xe0v\xc7Oz\x86\xf7o\xad\x86\xdcmS\x85\xbca\x14\x85\xe4\xee\x7f\xcdb\xd7_g\xbe\x15\xd3\xe7\xb6\x10i\x82"&\t\x93\x1a\xf4n\x8c}\xc75v\xb2\xf0?\x87\x1a\xd9\x16+H\x19\xc0\xcf\xfax#\x07\xa9\xc0\xe9\x9e\xd4\xfb\xc563Bl\xee!\xff\x00N\xde]\xee\xaaNv\xa8\xf8\xe3\x8c\xe6\xa4|=\x89J?\x99\xe5e\xbfv\xa5\xba\x83\xceFi\x87\xb8\x90\xb8\x1a\xb1\x91\xc58\xb1\xc6\xb1\xec\xbc\x1a\xaek\x9e\x13\xb3\xb2\xb6i>\xee\x81\x01\x0e0\x80"\xed\xe0\x92{\x13\x9e\x07z\x95\xd24\xfby,\x123\x1a\x8f,n,NIS\xce\x07\xb7\xb1\xabV\xa1kuua5\xbc\xd2\x19Q\xa3`\xf8\xc0\xdd\x9e\x0es\xd3\x1d\x8dP\xbc;1\xd3\xee\xae-O\x9c\x91\x8d\xd8\xe7\x85T\xea\xa4\xfb\xfb{\x8a\x8e\xf3K\xa8a\xc8\x18\xa7\x14&\x93\xe9\x06\x98\xf8\x97H\xf2\xe1\x85\xfc\x9c*\xb2\xee\xca\xee \xb8 s\xff\x00\x9cT\xd7\x86c\xb46p\xfe\xfdw\xe0)\xe0\xa9\x18\x06\xaeRE\x1d\xe42\xc5,*\xe1\xd4\x92\x01\xca\xf0:\x8a\xce\xf4\xfbK\xfd\x1b\\{a:,3p\x8cq\x85W\xfe"\x0fa\xfd\xa9\xb6\x92F\xc6\\\xfb}\xeb\xa3N\xf8\x1b\xd5\xda\xebO\x8a[[\x8bY\xe4\x08\xaeJ\xa1\x1d\t\xdb\x95\xfag\xbdW<;#\xdb\xc8\xb6W\x08\xacm\xcc\x887\x10CG\xc3p=\xc1\xeb\x9e\xdd*\xf1\x06\xe9-\x95\x15\x83<q\x94\xce2\xc3i\xc1\x03?\x8b\x1e\xc7\xadT\xf5\x9d5\x87\x9fw\x04 O\x01D\xb9\x8c.U\x94\x8fK\xa1\xef\x8f\xfb\x1ae\x836\x93\xed]\x0c7\x1e\xf5)s\xa6\xc3qk*0D\xe1\xd1J\x82\x00\x19\xce\x0eO\xfd\xbd\xaa\xa1\xa1\x93\xa5_\xbd\x8c\x91\x80\xd0\xb91\xc8\xbcnF\x1f=\xc8\x1cU\xdfK\xbb\xb4\xba\xb0Xe\xfd\xd4\xa12\xe1\xb8\x0c\x07\x01\xd7\'$\x03\xc1\xfe\xf5\r\xa8\xe8s,\xa6Ki\x99\xaePnFc\xf8\x94c# ~t\x87F*\xa4o\xdcW\x03\x8c\x90v\xa9g\x8e;\xa4Yc\xb8o%\xb2\xa0\x01\x87\xc9\xc6s\xbb\xf5\xc7Z\xcd5\x0be\xf0\xf5\xdec),rmc!\x8dI\x8fi,v\xbf<{\xfcU\xc3H\xd5\xdavk+\xabf\x89\x84\xa4\xc8\xce:1$\x92G\xfesOum*Y\xedb\xb7\x86<K\x13\xec\x8eO\x9cd3\x0e\x9c\xf4 \xd74j\x185\xcdeM{e\xa9\xdb\xdc\xc3j\xe5d\x0c\x9b\xb7\xc4\x14n\xdb\xd0c\xe0g\xafqM\xf5k;\x1dj\x13\tPd\x0cJ\xb0\'r\xf4\xc1$\xf1\x82\x0f\xbdB[\\j\x1a%\xc2\x8b\xabT\xf2\xe1c\x92\xab\xfc?\x84\xb0\xce2\x07z\xb3i\xd2\x9b\xa5\x91V\xd0\x05\x95\x89\xc6\xee\x8arw!=T\xff\x00)\xae\xc6\xb9<\xfa\xbb\xff\x00\xe1\xa4\xbbw\xedX|\xd6\x17\x96\x97\xf7\x16\xc6\xe0\x17\x85\xc8\xc9\x04d\x8e\xb8\xeb\x91\xcf~*\xdd\xe1\xe9\xae\xacdX\x95\xa2;\xa3\x1f\xc7\xbb~\x07\x00\x9eq\xc1\xef\xd2\xa6\xf5\xdf\x0b\xc9}!\x9e\xc2$If\x849_\xc4\xb2/N\t\xfc8\x1c\x1a\xa6\xa4\x9a\x8d\xa4\xc5e\x8a5\x966"H\xfc\xb0\xa4\x8ep\x00\xfaT\x96]C\xe2\x9b\xd7\xec~\xb5\xab\xdaJ\xa6\xdeX\x89"@wD\xe7\x1f\xbdV\x00\xee\x1d}C\xa3R\xcb\x12\x19a\x90\xedW\x84\xb7&3\xb1\x83.\x08\xc9<t\x1c\xfb\xd5OG\xd7f\xba\xbb\x80\\\xc4\xc1T2\x99\x13i\x05s\xf8$\\t\x1f\xc2\xc3\x91W\xb4\x9b\xcf\xb4*\x90\xf9\xe4\x00\x93\xc0pd\xf5\xf02:\x10G9\xee+\x82,\x11\xf1\xfb\xd2ZC\x8d\xea\xb5>\x97\x06\xa3j\xeb<\t I\n\xc8\xdbN\xe5e\xe3 \xf0Fx\xc7L\xd5T\xc1q\xa2\xea0\x86\x82f\x86C\xb7r\xc6&\xdd\x91\xce\xf00\x06}\xb1\x8cu\xadF+5\x86\xd2+uc+C\x12\x84\x93 4\xaa9\x04\x13\xd5\x94\x0cb\x9aM\xa3\xad\xc9\xb8\x8c\x8f\xc3\x90\xe5@\xca\x12\xb9\xdcA\xe5IRFG\x14\xe8\x84\x7f\xb7\x9ah\xcd\xc8\xcdC\xd8\xea\x91\xdbEp68\xb4\x8d2 t\xfd\xe4J\xa7\xd4\xb9$\x07O`pGj\xb8i\xf7\x8a\x89xSu\xd5\xb8\xf2\xdd#U>tH\xc9\x9d\xac\t\xf5\x0e\xe3\xf4\xac\x86\xea\xd6\x7f\x0e\xdf\xb2\xdc6l\xbaF\xc1\x08\xf2\xc0\xf7=\xc7\xf6\xab\xb7\x87/\xed\xcd\xcc\x8f\x17\x96\x91\xdc\x1c\xc6\x8a\xc3\x12y\xb8,G8^Fx\xe0\xe6\x9eE*F\xd8\xa6\xdfu\xab\xbd\xde\x9dk\xa9Y3\xc7\x1b0h\xb7\xa0\x00t##\x19\xc6\x0ex\x00\xd5\x1ax\xee,\xec\x16[V\x8a{H\xa6W1\xee*\xd0\xcc\xbc\xe3\x8eU\xc1<\x7f\\\xd5\xfbN\x95f\x9d\x920\x04\xd6\xed\xb2d\xfc\x01\x91\xb3\x86\x03\xa1_o\x9fjGX\xf0\xd3]\xc9\x1d\xf5\x8c\xd2\xda\xdeBB\xa3\xa0\xdc\x92\'\xff\x00\xb3\x99\t\x01\xd3=\xfa\x8e\xa0\xd4\x9f+\xcc\x19\xc6\xfd\xfej0\x94\xa1\xc1;Uj\x1d_N\xd5\xac\xe2\x8aid\xb9\x95\x17\xf7\xd2\x05h\xee\x14\xf6\x960\xa3\x87S\xc8\xdb\x8c\xf3\x8a\x98\x9fV}"\xf6\x0b\xdb\xc9\xd0\xdb\xcf\x18D\xd4\xc3\x1f \xff\x00*]"zF\x7f\x86^0x5\x11\xfb*\xf8O\x1d\xcd\xa8H/\xd6\x11$\xb0o\x0e\x19\x17\xd3\xbe&\xc0\xdc\xa7\xdf\xa8\xefR\x1am\xfc\xd3,\x90K\x18*\xef\xb2\xea\xd2d\xca\xb6x%:\x8fQ\xfc@\xf0G4( \xef\xb7\x1b\xfd(%O\x18\xf9\x15\xa0%\xca\x14\x89\x82\xaa\xc70\x05NIC\xb8dd\xe3\x82{S-KF\xb0\xd5\xad\xa6\x86\xe28\xa7\x8eU+"8\xc8 \xfb\x8a\xa6\x0b\rOA\xd3\x0c\xfe\x1cs\x12\x89\xb2\xda5\xd1\xc4$`\xabE\x19?\xe9\x16<\x8f\xe1\xcf\xc5Y\xf4\x7f\x11\xd8k0\xce\xd6\xfet\x17\x10\x10/,n\x10\xa4\xf6\xfd\x8a\xb2\xf7\x19\xe8FEJR\xad\x85n\xe3\x8a`\x86]\xd4\xf7\xe6\xb3\x8b\xbf\x0e\xea>\x11\xbb\x13Y\x19\xef4c\x90\xd6M&n-\xb8\xe0\xc0\xeeF\xe5\xf7\x8d\x8f\x1d\x8d_4/\x14\xdbO\x01D\xbd:\x85\xa0,\x92$\x8cL\xf1H9(wa\xb7\x0e\x84\x1eEO2\xa3:a\x9d\x82\xb6\x19I\x07\xb79\xc8\xe9\xcdg>%\xf0\x9c1J\xda\xce\x973i\xf7\xca\xa1\x9d\xd4\x06\x8ap\xa7\x85\x9a<\x80\xeb\xdb=Gc\\\x11\x98\xb2S\x8fj\xee\xb1&\x03\xf3\xefZ\xdcQ\x99<\x99a\x91\xa5\x89\xd7\xd6\xb2`:\xe7\x91\x91\x8e}\xaa\x16\xf3@K\xd0\xd2Y]\x1bK\x92\x0f\xef\xa1Q\x923\xce\xf4oK\x83\x8e\x8d\xf9\x1a\x81\xf0\xd7\x8c\xed\xee\xa5\x8e\xd7U\xb3\x1aU\xec\x98\x10\xb1}\xd6\xd7A\x7f\xfd\x8c\x87\xdb\xf9[\xd4+H6"LO\x0c\xe40 \xba\x96\xfe\x11\xc9\x02\xa4\xa8W\x1e\xf5\x1c\xeaF\xc1\xdb\xfb\xd54\xdcM\xa5,\x11\xea\xb0\xc5m\x19|4\xf1\x82\xf6O\x93\x81\xea9h\t\xf6l\xafl\xd5\xa6;h%T \xa9\x05\xb8\xe3\x8d\xa4v=0GqU\xedf\xc8jq\xc5\xe4\xdd\xddZ\\\xc3\x96\x82\xea\x06\xe9\x9e\xa8\xeaxt=\xd1\xb85\x05i\xad\\\xe8\xf2Y\xe8:\x84pis\xcc\xe1\xad.\xad\xfd6W_\xcc\xa8\xad\x9f-\xfd\xe3<{\x1a\x01\xd0p\x7f.9\xae\x90Xds\xdcU\x83V\xf0\xb6\x85\xad\x11\x1c\xbb\xe0\xb8\x84\x97\x86\xe2\x161\xdcBO\xf1F\xfc\xe0\x1e\xe3\x90{\x8a\x84\x82\xe6\xe3\xc3\xd1\xb4>%\x08"B#\x8fX\x80\x95\xb7\x947\x03\xef1\x8f\xf4\x1f\xb1?\x80\x9e\xe2\xae0\\HS\x0cLr) \x02r\xbc\xfc\x9e\x99\xf6\xefN%t(\xeb)R\xac0P\x80}\'\x82\x08\xee=\xe9Z\x17:\x80\xc1\xfe\xbfZHc\x8c\x13\x91\xff\x00\x9cT_\xec\xab)\x13jI4j\xe0\x12\xaa\xf9\x07#\xf1\x03\xcer\x0fj\x81\x9e\xc2\xca\xdaS\xb1\xe5\xb7\x91\x94(\'\x0c\xac3\xd0\xe7\x8c\x81\xdf\xaf\xcdr\xbat^\x1f\x99\xdbG\x98\xad\xa3\x87#Kg\xfd\xc8v\xeb\xe4\x16\xcf\x93\x9e\xe0e~)\xf5\xad\xed\xa6\xa4|\xa9\xecZ\xdeq\x19&\xceVS&\xd0y#o\x0c>Ep\xe9;i\xc1\xa5\x0c\x8d\xc1\xc8\xa8\xf8\xef`\x84\x0f1\r\xbc\x98\xc2K\x13cp\x07\xf10\xc0\x07\xf3\xc1\xf9\xa70\xbc\xaf<\x92[M \x99\x9b{\x8c\x83\x1b\xb19\xc8c\xdc\xf7\x07\x04W:\xa4\x11Y\xc6\xc6\x00\xf1\xcd2\x10\xbe\x8f2&$g,\xa3\x1fBA\x06\xa3\xa0\xd5#\x9f1\x88$\xb5\x93~\xd4\x89\xd7\xf7r\x9e\xfeS\x0e\xa4\xff\x00)\xe4{W?.\xc4\xd2\xbf0\xc8\x15ty#\x98(\xb9\x81\xd5\xfa\x13\x19\x18\xc9\xceFG^\x9c\x8a\xad6\x99\x05\x9a\xcb\xfb\x0e\xe0\xd8\xca\tf\xb5\x9a\x1f:\xc9\xdc\xf5\xdc\x99\xfd\xde\xee\xe62\x0f\xb85=n\xe5\x964\x9e\xce\xe66T\xfc,\xbc\x908\xe7\x9ei\xe1\x928\x94\xf9A\x0f@\xc8F\t\xf6\xa7684\xd6H\xdb\xff\x00\x8a\xa9Zx\xbe9\x046\xb7+\xfb/T\xdd\xb4\xdb\xca\x19\xed]\xc1\xc6a\x98`z\xbb\x03\x86\xf8\xa2\xacwv\xd6w\xf6\x8d\x05\xe5\x9cS\xc11e) \x05\x18t\xc3\x03Epj\xff\x00p?\xb5\x1a\x93\xfd\xa4~\xf5\x8e\xea\x9a\x87\xdd\xd1U!\x8a\xde\xdd\x87\r\xb7)\xe9\xe7qa\xf8\x9b\xb8P?:\xa5[k\x8a\xd2\xb4v\x90F\xfel\x8c\x1a\xf2\xe7,\xfdNJ\xa0\x1c\x0f\xfc\xcd=\x87H\xb8\xb9\x9d\xa7\xb8\xb9\x8e\xdd\x0b?\x97\x08\x93{\xa8\xc7#-\xce?\xadJ\xcbgi\xa7mK\xeb\x8f M\x94\x86&\x1f\xbds\x8c\x9d\x8a2X\x91\xec\x0f5TU\x8f\x03\xefR\x81U\xdb\x9f\x8aB\xde\xc8\xdc<\x92Gx\xce\xf3.\xc9\n\xa1M\xcc\xbc\x8e\x14\x8cm\xf6\x1d\xeaG\xee\x1eTF[\x8dE`\x8a"\x04\xd2K\x84%W\xb9/\xc2\x0f\x93\xd7\xb5HXXj\x8c\xd1<0Gg\x13\xc4\xd2\x99n\x94Iq\xbb\xb0\x08\xa7j\x8e\xe4\xb3\x13\xf1L\xf4\xed7J\x9e[\x8b\xa7\xb8\xb8\xd4\xe4\x85\xd4\x9b\xdb\x82$\x8e!\x9c\x95\x8c\x10\xb1!\x18\xe3h\xcf\xc9\xa7Dx\xc6\xdb\xd2\x0b\xe4\x9d\xf6\x15\xed\xac\xedw3\x9b`~\xee\xa9\xfb\x9f0:\xa4\xceF\x01\x91\x98\x06a\xcfn=\x89\xa9[\x08\xe2\xb8\x92K\x16\x89.\xc08\x968\xa11Z\x87<\x91\xb7!q\xed\x92I=Ez\xf0O)\x82[\xd7\xccY\xf3\xa3\xd3\xe3]\xf2\xb1n\x04\x92H\xfbq\x8c\xff\x00\x08\x00{\xd3\xb6\xbb\x8c\x92\xb2\xa8(S\x98\xcb`\x90\xa3\x90:g\x1f\xa5((;0\xc8\xf9\x1c\xd2u{mRV\xf7Q\xdc\xc6\x9b%\x85\x92\xdd\xb6\x80\xa4y1`m\xd8\xb8\xe0\xb0\xefBkv\xf3\xdf<\x10\xc6K\xa2\x16i1\xbc\x05\x1c\x92@\xe3\xe0\n\xac\\j\x0e\x96w\x12Kko\x041\xc6BG\x8fS\x0cs\xc7\n\x17\xdb\x19\xf6\xa8\xbb\x1dZ[;Y\xef%\x90\x89\xe7m\xab\x0f\x96\xb1:\x05$aCe\xdb>\xd8\xfc\xab\xa6L2\x81\xf7\xfbWB\x02\x18\x9f\xb7\xd6\xad\x97Z\xd5\xf9\x95\xd6\x0b\x1f7\xf7\x8b\x89]F\t=\xc2\xff\x00\x0e>j\x12\xefSh\xd5\xa7\xbe\xbe\x08\xb2\x9c\x00[.\xe4u\n\x8a\x0b6~\x01\xc5W\xae5\rZ\xfe\xfa)&\rch\x80\x82\xd7\x89\x1bJA\xe0\x95Q\xb5W\x19\xe0\xbeI\xf6\xa6\xd6\xbav\x95\x05\xcc\xc2\xce\xd2f\x96t\xdd5\xf5\xf4\x99\xde\xbb\xb0q\x80\x0e\xdex\x0b\xb4\x0e1If>\xfd\xe9J\xa0v\xedV4\x9a\xee\xea\xdc\x08g\x8bF\xb7\xdaZ\xe2R#k\xc2\xb9\xe3\x0cIHx\xeer~\x94\xf2\xce=.\xce\xcee\xd3D6\xd0\xb1\xdf-\xdc\x8b\xb9I\xea\xcf+\xb1\xdd#\xf3\xc9c\x8f\x9a\xa8\x9b}:\xe1\x82i\xaf&\xb1<D)-(\x86\xc6"\xbd\x89\xf5.\xe5\xcf!C\xb0\xab2\xf8n-E\x0bkW1^\x80w\x0bh\x80\x8e\xd51\xcf\xe0\xc926O\x05\xc9\xf8\x02\x8c\x93\xb7\xb5\x07\x19\xce)\xb4z\x85\xb5\xd1i\xf4\xabio\x9d\xf7"\xdf\xdczm\x9b\xb3m nu\x1e\xd1\x80\xa7\xde\x96\xfb\xbe\x9f\xa6:]j\xf7\xcdyr\xe0$~b\x1d\xdb\x81\xe1-\xad\xd3\'\xaf\xd4\xfb\x9a\x96\x86!$qC\x0crDL;\x95\t\n\xea\x06\x07\xe1\x03\xd2\x07\xe7\xf4\xaec\xb3\xd1t\x18\xafo\xee\xdd-`\\\x19\xf5\x19\xdb{I\x93\xf8\x01|\xb0\xe4\xf4\x04\x92i:r{R\xb2\x05G\\Z\xcdy\r\x9f\xed \xd6\x10J\xac>\xe3\x03\xe6\xe2q\xd7\x12\xcc\x87\xd2\xa0~ \xbfBM:\x9e\xfa\xdfL\x92\xc7K\xb3\xb4\x8d&h\x81\x8fM\x81\t`\x14eY\xcf\x0b\x14C\xb9$\x13^3\xeb>\'\x95\x85\x93\xb6\x89\xa6(*n\xe4@of\x8b\xbf\x92\x87>R\xb6\x7f\x13z\xbb\xe0T\xb5\xae\x81g\xa6\xdb\xddAg\xe6G\x172M)\x94\x99e#\xf14\x92>Y\xbf\xf7\x1e@\xe9\x8a4\xed\xb5\x05\x87~}\xaa\x0eE\xd4\xa4\xb2\x84j\x13\x08\xc3)y\xd2&1\xc6\x80\xe0\x90\xf2p{\xf0\x16\xa4\x0co\xf7o*0\xf14lcO%Bpy"<\x8c(\xf7~N>k\x9bEK\xbbW\xbe\xb8\x96\x15\xb1\x0c\x1e\x04p\x12%T\xe3\xcdi\x18\x92\xc4\x9e\x87\x81\x8a\x89[\xfb\xfdo\xef\x13\xe2]/IE!n\x00)yy\xb4\x8c\xb4A\x81)\x17^\xc5\x8flR0Fw\xe4R\x89\xcf\xb6\xc6\x96\xbd\xbe\xb7\xd3Y\xb4\xad"\xc0\xdc\xdd\x9c\x17\x87y\x11F\xcf\xc9\x92\xeaf\xc9\x00\x8ev\xf2\xed\xd8Wv\'n\xeb\x8b\xeb\xa6\xb9\xbaH\xc8\xf3B\x84@\x87\xaa\xdbG\x9fB\x1e\x99<\xb7s\\\xc3\xfb2\xdaH\x99ld\x88+\x98\xad\xe1\xe5\xa4.\xdc\x93\xd4\xf2\xdd\xces\xefMRc\xf7\xa9\xe3\x92\xcc\xb4\x8c7\x18\x91\x89\x11\x8f\xc4<\xd9O\x0b\x9cp\x82\x90N\xfbb\xba)0\xfa\x85\xc5\xf6\xe7\x8c$p\xe6D\x82\x12|\xb1\x9e\x03L\xfd]\xfb\xed\x1c/|\xd3kmU/\x04\xd2\xd9\xa3:y\xcc\x1a\xef\xcd\xdc\x0e\xc3\x8c\x06=y\xe3\x0b\xc0\xfa\xd4\xcf\x94.\x8c\xd6\xf3_G4\x91\xa2Iq\x18\x05U\x18\xe3j\xed\xe3\x80\x07F9=i\x0b\x8b{[F\x92\xfa\xee\xfa\x05\xb7\x83\x98\xdf\x85U\x18\xe5c^\x02\x8f\xe5\xea\xc6\x9b9&\x9c\x04l?\xcdB\xcff\xb7+,,\nX\xedbc\x8fr+\xb8>\xaf2@w1c\xd7\xb6;\xd38\xaf\x03\xd8\xc8t\xc8m\xc2\xa4{ \xb8a\xfb\x8d\xc4\x8d\xdb@\xc7\xa5q\xce;\xd3\xa3mw\xe2+\x853$\xd6\x9aJ\xaf\xa2\xdd\xff\x00u=\xd6?\x08p\t\xf2\xe3\xf8\xfcM\xf1R\xf7v\xce\xd2Egj\xb1\xdb\xc6`\x0e\xd3$`\x98\x10\x1e\x15G\x01[\xdb\xfbSgojp\x1a\xa9A\xe5\xc1\x1b\xca\xaf\xe6]\xcb\xe9\x96\xfae\xfd\xf1\x07\xb4)\x8e\x01\xe7`\xe9\xefSS\x98\xed-a\x90D\x85R<fF\xccj\xbdw8\x1c\xb3\x1e\xde\xe7\xa5?66\xca\x86\xd2\xd9\x84P\xc2\x9c\x9d\xbb\xa5\x91\x8f\',\xd9\xc9=\xf9\xe6\xb9-$\x90\xda\xcd#G\xb1\x08S\x1e\xd4\xf4\xc8\xbc+o\xc7U\xf8\xeai\xb3K\x06\xa3\xd6\xeab-f\xbd\x0c,\xe3\x0f7\xef\x07\x97$\x8e:)P}\x0b\xdf\xdf\xde\xba\x12}\xec\xcb$\x91\xeeyYv6\xe3\x8f-\x86H\xc0\xe4\x13\xfdi\xdb\xdd\xc5\x1c+o\x87\x9eV\x1e\x88\x9f\x07\xf0\xf5,\xc4\x1c\x0fv5\xdd\xb1\x9d\x9a\x1b\x89X3\xa2\xe2\x18\xa2\x18\x8d3\xc6Fy\'\x07\xf1\x1f\xd0Rs\xb6\xf4\x0ej\x1d$\x9cI\xe5YB\x99Q\xe4\xcaS\xfd(\x87q\xfe\xe9\x08<\x01\xd0\xf5\xa7\x90Y\xc0\xbe`Km\xa7vK\x1c\xef \xf2Kg\xbf\xcdI\xf1\x02\xaa\xef\x91\x10\xee\xc2\x86bX\xf3\x93\x81\xef\xdc\x9e\xf5N\xbf\xf1%\xe5\xc4\x93\xda\xd9\x02\xc4\x0f\xde\xce\xb9h\xa39\xc67\x7f\x13|\x0f\xd6\x82N\x05,o\xde\x9dj:\x8d\x8e\x96\x06\xf0\xd3\\N\x81\xa2\xb7\x8c\xfe\xf5\xce\x08\xce\x08\xf4\xa0\xee\xc6\xaa\xbek\x19M\xe5\xe4\xaaf\\\x98"P\x0cP\xf6\xca)\xce\xe6\xf7s\xd3\xb510\xcf\x1b\xcf$\x8b,\xd7\x0e\x8b\xe6O6\x04\x92c\xa6y\x1cs\xc0\xe8)\x0f\xbc\xc8\xd2\x14\xd8\x80+\x8cHH\xdd\xd8u\xec?\xa1\xa5)\xf9\xdf\x1b\xd7qR1\xea-(\xccg|\x99\xecI*;\x95\xc0\xec;\xd7k\x13\xc5u\x1d\xbczd\xd2^+\x01q,\x83\xf7)\x9c0\xc7w~{`{\xd4\x84\x16\xd3M*\xad\x8ef-\xe9\x92\xe25\x01\x15\x9b\xa0@\x7f\x11^\xf8\xe9Z.\x9b\xa5\xcdi\x0c>g\x99+#\x03\x87\xc8\xfc\'\xae{\xd3n\xcc\xccB\xec7\xce\xff\x00\xd2\x9c\x1aUrwm\xb0*\xa3a\xe0\xa1+\xfd\xeah\xdf\xcc~e\x0e\xbf\xbcrNB\xb3{\x0f\xd2\xad\xab\xa4\xa5\xba\x08\xe3X\xe3\x00\x0cFO\x18\x1c\x0c\xfc{\xd5\xa2\xda\xfeD2\x19#\xf32p\xaa[\x0cG\xb09\x18\xff\x004\xb5\x9d\xbe\x95\x15\xbc\xd1\x1bq\ts\xbd\x89\x01\xcb\x13\xfc\xccy5\xcd9\x00\x06\xfe\xd4\x93!\xc9$~\x95N\x82\x05e\x93\xccp\n\xbfu\'y^\xbbA\x19l{\xf7\xaeE\xa7\xde\x10N\xea\xbb\xc4g\xd2\xe0\x0c\x02q\x82\xc3\x81\xf4\xabe\xcd\x8a\xc90\xb7\xb3Ey\x1c\x12\xecz*c\x1b\x98\xfb{\x01\xd6\x9bM\xa5Kk\r\xb4j\x9ek+\x8c\xe3\x00\x9c\x1eX\x81\xf3\xc8\xa6\xccrs\xbe=\xe9bE\xe3\xbdV\x96\xc5<\x9c\xcb"\xed\x1b\xb77\x01\xdf\x18\xc1\x00`.sKZ\xe8\xebu\xe5\xb2#\x00F\t\xc1P\x0fA\xc0\xec*J->@n!\x86&w\x9a\\\xcd\xd7\x96n\x84\x91\xd3\xda\xa6\xe6\x93O\xd0\xe3\xff\x00\xa8\x98\x17rw"\x9e\x06\x07+\xf4\xe2\xab\xefg\x9a5\t\n\xe5\xd8s\xfe\xdf\xb5I\x80+\x9c\xb1\xd8U{Z)\xa4Z\xc8vB\x11\x91UJ \\\x909\xdc9\'q\xe8;\xd5F\xcfJ\xbd\xba\xbd\x17W\xb2K\xb8ym\x1c{\x83\x12N\x7f\x168\x00\x1e\x83\xf4\xab0\xb6\x9fV\xb9:\x83D#\x89d>W\x98FXv!O@;U\x91\xac\x8d\xb4@\x15_Td\xb1\x19\x18\xee3\x8f\xe9]\xb0\xb2kh\xbdLZF\x19w?4\xa9\xee\x030Pv\x1c\n\xabl\x82\x06\xd8cf\'\xd3\xd0z\x9b\xdb=\xf1S\xf6\xba]\xb4V\xf3_]\xc9\xb5\x15=\'\xd8w\'8\x1c{\x1e\xb4\xa5\x86\x9e\x02nhLJ\x98\x1d73s\xc6\xe1\xd7\x8e\xd5\x0b\xe2}j=Jt\xd2a\x89\xe4]\xe0;\xed\xda\xad\x81\xd3\x1f\xca;\xd4\x0b\xd6\x9a\xf1\xd6\xda\x07!3\xfcFV\xec\x7f\xc59\x19\xd250\xdf\xb6j\xbf\x7f\xa9\xdc\xf8\x86yl\xadP\xc3`\x9eXi\x18\x1d\xce\x01\xe1\x9b\x03\xae\x0e@\xfdj\xc2\xb6\x0bk\x14+o\x19s\x18\xc2\xa9\x189\xe9\x9f\xae)\xfe\x97\xa5\x0b+T\x867\xf3]\x81f\xc7S\xbb\xab\x1f\xed^_y\xc6U\xb2\xb6\x9b\xcawR\xf22\x9ec\xdd\xc1nq\xc9\xedV0\xdbEi\n\xaa&\x84\x1e\xde\xe7\xfa\x93M4\xcd#s\x93P3\xc1}\xab1\x86Eh\xe1Eo0\x96(\x1f\x1f\xc2\t\xc1*;\xfb\xf4\xa8\xedSV\xb9I\xa1\x827u\x85\xbdK\xcf \x8c\x0c\xb6\x18\xfeC\xda\xa7\xf5\xbf"\xcfM{{wb\xc0mF|1+\xd3\xa9\xc9\xcdAxcD\x9a\xfd\xa4\xbf\xbd\x9f\xcc\x1b\x8e\x03\x10I#\x18\'=\x87jb5{\x86%\x9ba\x91\x8d\xc74\xb2\xe1\x008\xfaT\xa6\x99es\x02\xb5\xc4\xd2\xfe6\xfcD\x96\n\xbd1\xf0I\xe6\xa4\x86\xf1\x91\x1c\x90\xe7\x03 \x12:\x9e\xbf<T\xdc\x91\xc3\x16J\x81\x85\xc0\x19\xe9\xc6\x07\x02\xaa\xfa\xa4\xd6p[\xcc\x00\xc330\xe39\xc6\x7f\xcdK\xd2G}\x87\xb56$-\xf7\xaa\xce\xb7\xa9y\x97+ah\xe19\x02Nz\x81\xceO\xe5N|3\xa3\x18f\x17\xf2+\x8d\xccLq\xb1\xcf\x00\xfe#\xf5\xedH\xe8\x1a:]\\\xbc\xa5@@\xe5\xe4,7d{d\xd6\x93\r\xa4H\x08\x8dB\xfaN\t\x1dG\xeb\xc5qA|\x95\xdcv\xf9\xa54\x9ap3\xbfz\x8c\xd9n\xe7,\xe1\x0ey\xc7M\xc3\xaf\xfd\xaa\xbdw{e<\x92\xb4\x13H\xd0\xed)\x18-\x90\xc7>\xa6\x1f\x1c\x00*\xc7t\xbej\xc3\x10\x89\xb2\xd9wd\x03\xa7S\xcfl\xf4\x15Oh\xed\x91\x9a(\xe3\t\x1c \xed@HP;*\xfb\xd7\x18zps\x9cWRC\xab\xb6)]\x12\xc1\xa7\xbby\x8d\xacE`d\xdcq\x87\xf5\xf59\xfat\xab\x9d\xc4\xa8\x8b\xe6*1\x8c\x1d\xa5\x0eA$\xf7\xa3I\xd3\xd6\xd6\xd6#\x80e\x957I\x8e\x99\xf6\xfc\xa9\xf5\xc2\xe4\x80\xa4\x9d\xbf\x8f\xd8\x93\xd0\x03\xefG\x96B\xd1\xe7\x12\xf9\xedUM]#1@\x85\xde<.F\xd0\x0f8\xf8\xefTaql\'\x8a\x03f\xac\xcb0/3\xee\x0cx\xc1\xe4\x1c\x00\xb5s\xd6c2\x02\x82@\x9bGS\xc7\'\xb5Sl-\xc1\xb9\x90\x04%\xca\x95\x18$\xf2\xdcq\x9f\x8aG\xff\x00\xdc\xeeN\xc3jp1\xf4v\x03z\xd0\xb4&\x98\xd8\xda\xee\x03+\n\xb6Nv\xe0\xe4\x8c\xd4\xf1\x92BK\x15\n\x008\x1dA\xef\xfdk\x8bEH"\x8a%BQc\xdb\xd3\x90:\xe4\xd3\x97s\xd0FW<(\x03\x8cc\xad?\xa1\xb8\xce)\x8f0f\xab\x1a\x84\x92\x0bI\x02\xc4T\x03\xb8\x91\x8e\xbd\xc9\xfc\xcdV\xec\xf4\xd6\xb4xcm\xaa\xccL\xb2\x85\xfe&l\xb1\xfa\x91\xd2\xa75\xd9\xe4\x7f.\xda\x16el\xee\'\xa1\xc7\xb5\'\x0cR\xec\xb6\x05s!\xe7\x9c\xf4\xeej4\x8a\xc7J\x83\xb9?\xda\x9f\x8eLd\x9e\xc2\xa7\xecc\x92+8ZE\'\xd2\xa4m>\xe3\x93H\xdc\x1d\xa9\xbb\r\x92\xc4\xafnq\xc8\xe2\xa5\xa3\xde\x88\xe3\xccE\x1bT\xe0\x8fn\xc2\x98\xdd\xe3dl\\m\xdd\x90\x14`\x8c\x8e\xf58\xc4\x00\xfbmQ\x84\xa4\x9a\xa9\xdeI\x13\x01\x9e\xcaG*s\x8fz\x96\xd0\xa3@\x932\xb9\x88\x90\xa7\x9eO#\x9e\x08\xa6\xb7\x16\xcf,\xc4\xc6r\xa5FFzU\x97K\xb3U\xb7\xc1@\x0bcvrzt\xa4B\x99\x91\xb0\xbcS\x92I\x84\x19<\x9aV\xe4\x91\x08\x0cL\x9c\x93\x85\xe0\x9a\xadI\x14\x8d\x03H\x92\x8f\xbc6\x17\x91\xe9R\xed\x83\x93\xf4\xab\xa4\xb6\xfb\xa3\xc6\xdev\x9e1Pw\x1aSM\xe5.\xe0\x15\x1c8Q\xc6\n\xf2)\xe2\x8c\x0eq\xed\xfbSj\xe3\x8c\xd4\x05\xc8X\xf5\x0b=\x81w\tW\x0c\xa39\\\xf3\x9a\xb1\xba\xbc\x93\xc2\xc1\x91UY\x9b\x81\x93\x8cc\x1di\x184\xa5\xfb\xf0\x90\x90\xdeZ\x93\xf4&\x9d\xe9\x9b&:\x84\xceAQ9X\xfe\x00\xe0\xe3\xf3\xa7#OH\x07\xb9\xfe\x94\x99$\x1a\x8e;\x0f\xebL/\x87\xee$M\xc0\xe0\xe3\xa6\x05@YD\x05\xfc")p\xfb\xb0C\x12F\x00\xe4qV\x9dF\xdftj\x80r{w\xa66V-\x15\xdc.\xb0\xaa\xb7\xa8\xf2z\xe7\x8eh\x032\x80+\xa1\xf1\x115\'{\x00\x91\xa3\xc6\xd0\xac\xd8`H\x18\xe2\xa2\xef\xe2\xb5\xb6xn\x10zD\xca\xaa\x81\x86\xe2\xdf$\xf5\x15-t\x84\xb8\xc9Ps\x8e\x99\x1c\xd4\x05\xf9\xb8\xb0\x9bOe\x85&\x8dY\x99\xdbo\xe1\'\x81K\x93\xd2\xb9\xc7q\xde\xb9\x11\xc9\xc6\xae\xc6\xa6n\x96S4\x04\x1c\x0cz\xb9\xeb\xff\x005I\x8e9\xac5+\xb8\xa5\x18I\x0e\xe4`rw{w\xe3\x9a\xba\xce\x92K\x1cL\x81\xceps\x9e\x05T.\xe1\x9a\xd3\\\x82[\x88\xfd2\x02\xb9##\x9fzx\x9d-\xc9\xe74\x80A\\g\xb7\xf4\xaf\x8c~\xdb4$\xd2\xbc\\\xf7p\xa0\x16\xfa\x84K*\xb0\xe8d_K\xfeg\x83X\xd5}\x9f\xf6\xef\xe1\xe8\xaf\xfc6\xb7\x90\xc0\xab6\x9d\'\x9aX\x1e\x0cM\xc3c\xfa\x1a\xf8\xc4\xf5\xab\xcbY\x04\x91/\xb8\xd8\xd5\r\xe2h\x98\xfb\x1d\xc5}u\xf6qp\xf7\x1e\x1e"q\xe6\xb5\xa8E\xfcXvD]\xd8\\rx5\xb3i\xd7s^\xacl\xa8\xa8\x04G\x90\x0b\x04\x19\xdb\xc9\'\xa9\x00f\xbeV\xf0V\xb0\xf66\xb6\xbeS\x04a.\xc7\xc9\xc1*WnO\xc0\xce+\xe9\x1b-L[Gk\x1aF\x0ceT,[\xba\xe4\xf59\xaa{\x9c\xac\xad\x8f|\xfd\xaa\xee\xd9\x83F\x83\xfe\xd1S\x92\x17\x8a\xda\t\xe7\x05\xd6"\x00a\x85\x01\x0f\'v9\xe3\xe0\xd5\xde\x16\xb4\x9e\xce\x17\xb4E\xc0]\xae@ \x1e\xe0`\x9e\x0f\x1dMC\xdaY\t`\xf2\xa4\x89N\xfe6\x01\xc0\xdd\xce)\xeb\xc1u\xa7\xc7\x98\xa3$\x18\xd5dP0\x0e\xde\x05CrG\xacv\xe7n\xd5(\x15oA8$\xed\xf5\xaf/\x0c\xe0:\x15\xde\x08;\x97\xe1\xbf\xb58\xd3`\xb3[e\x01!\x8d\xa3#\n\xd2\x1d\xc1@\xfa\xd4\x8cWQ^\xda\xc7" r\xf8\xc8\xc7B:\x8a\x80\xd6\xbc\xa8\xcf\x9e\x90\xa8t`\xa4\xff\x00\xb4\xd7]\xb0\xba\xc0\xd4@\xe2\x9b]\xdbA\xf4\xe4\xe0\xd5\xa3\xc8K\xcd\xad\xe6#\x06\x19\xc7n\x98\xcdA\xde\xe9\xf3Z<r\xc0\xd1\xa7\x9d\xc4\xca\xc9\xbb\xeaI\xe4\xe3\x8a{\xa3\xcc\xc6=\x8e\xc0\x1ceO\\\x8a\x90\xbc\x96B\xad\xbeL\xc7\xb7\x0f\x85\xe7\x9a\xe8\xd34j\xe3\xbe\xe2\x90KE!S\xda\xa3\xec\xd2)\xa0\x063\x92\xb8B\x83\xa63\xd7\xe9P\xba\x96\x8e\xaa\xa6f\x92_5\x18\xb2:u t\xfc\xb2qL\xa0\xb9\x9bK\xd4e\xf2Y\xccD\x10\xc1\xc6ISV\xd8f\x96\xee\x00\xc8AU\\\x02\xc3\x9d\xa7\xaf?4\x84\x1a\xc3)\x1b\x8f\xcc\x05u\x89B\x08;\x1d\xc5A\xe9WAL\xca\xf2\x97\x91Q\x87\xaf \x86#\xa1\xce:\xd5\xa6Kx\xae \x1bd\x02@\x80\x8cu\nF=C\xbdR\xb5H\xe7\xb6\x7f:$\x0e\xaf\x81"2\xe4\x15\xff\x00\x91R\xda-\xebK\x1b#\x04,\x00\x08\xb8\xc1\n;f\xb8\x80\xabym\x83\x9e3C\x9c\x80\xeb\xb69\x15\x19{\xa3}\xcd\xe5\x9a<\xa2\xc7\'\x9a\x81:\xaa\xfb\x8fu\'\xa8\xa9\xdb\x1b\x9b\x1dZ\xdaC4E\x1d\\\x96u\x18(\xc0p\xcaOAO\xa7\xb7\x13\xa9uUu#k\x06?\xc3\x9c\x90~EVa\xb5{;\xe5B\xe5\xa1euE#\x86V\xe7\x07\xe4\x1aXE\x88\xe7\x1e\x92x\xf94\xd9s \xc7\xf3\n\xf7S\xd3\x9eY>\xf5\x0cdL\x83\xd5\xfc\x92\'B~?:\x7f\xa3j\x9er\x8bK\x82\x1b\x1e\x96Y:\xe3\xb0?\xf3R\xf3\xcb<\xd6\x91<Q\x106\x1d\xf1\xf1\x92\xa3\x83\x8f\x91U\xfdJ\xc5aH\xef"`\xeb \x1b\xb1\xc3\x1f\x9a\x1a?,\x97D\'\xfd\xdfJ\x03\xeb\x1aX\xe3\xdb\xe2\xa4\xb5\r\x1d.\xa2\x99\x98\x16\r\x83\x9e\xf1\xb6ya\x8f\x8e\xbd\xaa\x8bk\x05\xde\x89t\xe27>K8hC\x91\x80\xc7\xb2\xfc\x1e\xde\xdd+V\xd3\xaf#\x9e\xde=\xeaA\xdb\xce{\x81\xefL\xb5m\x12\xd2\xf6\xdeD8\xc36\xf4\xe7\xf0\xb7\xc1\xa7Z\x00\xea\x1d9\xe7\xfb\xd3K1V*\xfcqM4\xe9E\xf4\n\xd2[/\x9a\xa0nA\xc1\x8c\xe3\x19\\}j/V\xf0\x9d\xb6\xa7\x18\x02\x13\xe7\x81\x81 \x00\x96+\xd0\x91PpK}k|#C\x89\x11\xb09\xc1l{\xfc\x1a\xd2\xf4\xf9V\xedY\x83\x90v\xf4=Q\xbb\x8a\\Ad]\'c\xde\x91!h\xc9 \xedXY\xd1\xf5-2vQ\x00\x018!\x9b\x90;\xe3\x18\xab.\x92\x1a@\xb6\xf2\xc8F\xf1\xb1\xf0p\xe1:\xedV\xea0y\x07\xde\xae\x1a\xf6\x8e\x97q\xf9\xb1\x9eTdu\xc95H\x1atq\xcce\x12\x18\xdd:\xa0\xe3\x8fjm\xa3h\xdb\x93\x8c\xd2\x95\xc3-hv\x0c\xb76ikx\xee\xce\xd1\xe3\xcf*\x17y\x1c`\x81\xd1\xf1\xd7\x1d{T\xb3[[+\xfd\xe4C#\xbc\t\x80\xa0\xe0\xb2\x01\xfa\x13\xed\x9a\xabZ^\xa7\x95\xe5\x19K3`\xe0\xf6\xc7qV+K\xa9Q\x96\xdaiK\xe7\r\x1c\x80`m\xeb\xb4\xff\x00\xcdK\x8c\xa9\x0b\x9a\x8a\xe0\xe4\xef\xf6\xa6\xf7\xfa>\x9b\x7f\x16\x1a\x16+0S\x86\xcf\xe2\x1c\xfa\xbek-\x92\xd6\xef\xc2R\xdc\xcf\x15\xb8\xb8\xb0b\\\xdb\xe3\xd7\x03/S\x19\xf6\xf7^\x9d\xc5m\x8c\x0b\xda\x15%\xa2\xf2\xdf \xafC\x83\xfei\xad\xf5\x8cW1JJ\x8c0\x18V\xeci\xc7\x888\x14\x85\x94\xaeA\xe3\x8a\x83\xd0/m\xb5h\xed\xae\xd1\x91\xe0r%\x8aU\x07\xf1t\xe3\xd8\xd5\xbc\xbd\xc4"\x13\xf8\xc21\xc9\xcf\xe2V\xe9\xff\x00~\xf5\x8e,\xb2\xf8GR\xb8\x96\xd9ekI\\\xb5\xd5\xba\x8c\xedo\xff\x00i\x18\xed\xf2+Z\xd15\x8d;V\xb7\x8aH.\x16d#\xaf\xcf\xc8\xeck\xb0\x11\xba\x92A\xcd"Ps\x9cdb\x9c^\xd8\xd9\xea\xf6a\x0b\xbcR#\xe6)\xa2b$\x86E\xee\xa7\xb1\xf7\xecj\xb1,7\x7f\xbb\xb5\xbdD\x86\xec\x10"\xbaA\x88\xe6#\xa1\xc7\xf0\xbf\xb8\xe8{U\xee\x08Qr\xe10\xc3#\x9e7}i\x0b\xbb\x05\xbc\x08\xc5@e<\x1e\xa0\xfc\x1a\x92SP\xce\x06\x7f\xad4\xaf\xa4\xe0\xf1\xfd*\xa7\xa6^_\xb3Og{\xe5\xf9\xd8e_5}2/\xb1\x03\xa8\xaen\xb4Q\xafY\xd9\x08\xaed\xd2\xf5\x0bk\x96x\xa6\x88\xab4l\xa7\x95\xf6h\xdb\xa9SKkV\x970\x05\x90\xa7\x98\xb1\x9e\x1d\x7f\xd4\x8f\xe4{\x8a{\xa5,w\x11\xad\xc5\xb3\x03\'\x06U\xc7\xe3\x03\xdf\xe6\x91\xa7\x07I\x19\xdb\xbf\xb5+V\x06\xa0q\x93\xfb\xd4e\xb7\x89/,u+]/\xc4v\xd1Y^L\xd8\xb5\xbd\x84\x93ks\x8e\xc0\x9f\xc0\xe7\xf9O\xe5V\xcb\xa8|\xe5>ly\xe3\xb0\xe3\xf2\xa6\x17\xb0i\xfa\xb5\xb3\xdaj\x16\x0b-\xbc\x8f\x8f-\xff\x00\x84\xfb\xe7\xb1\x1d\xaa\x0f\x1a\xb7\x84\xed\xd04\x93\xea\x9aR0\n\xc7\xd7sn\x87\xdc\xff\x00\x1a\xaf\xeb\x8at\x1c\x03\x93\x91I\xc6H\xc6\xcd\xfb}\xab\x8b{;\x16\xbd\x9e\xce\xe6\xd2+\xcbk\x90\x0b\xc0\xc8\xb9\x03\xa6pzc\xdcsW\xb9\xf4\xef\xba\xa5\xba\x89\xe5\x96\xc4\xa8\xc4,r\xca\xc3\xa7\xaf\xa9\x1f\x06\xab2C\x05\xec\xd6\xda\x96\x9d">\x06C\x0eC\x0fcV\xcb\rf;\x95xL~\xa4\x18\xf2\xcdu\x15w\xce7\xe0\xd2\\\xb6A\x1d\xb9\xa4R/1IB\xa0\x91\xca\x9f\xc5\x8a\x89\xbf\xd3"\xbdI\xad\xee\xe0K\x88\x9f\x97V\x1b\x95\x80\xe8H=\x18{\x8a\x93\xf3\x1df \xa6\x1f\x19\x1e\xd8=\xa9\x9d\xf2jQ\x0f\xbci\x85Y\x80\xf5\xdbI\xf8$\xfa\x1f\xe14\xe6\x068\xa4\x8c\xe4o\x8a\xa7\x9bmS\xc3\xc1d\x81\xa6\xbe\xd2#V2Z6d\xba\xb7\x0b\xd3\xc8n\xae\x9e\xea\xd95;m\xa8[\\\xd9[\\\xc3v\xb3ZK\xc9+\xd0|\x0c\xf2\xa4t*zT\xb6\x9d\xa8\xc1z^7\x8c\xc1p\x9f\x8e\xdd\xcf\xad~\x9e\xe2\x92\xb8\xd1mb\xb9\x92\xea\xc4\x08%\x94\xe6d\x03\xf7r\x9f\xf7\xaf\xbf\xcfZ\x02\xed\x95;R\x89\xdf\xd47\xf7\xf7\xae\x0c\x16WX"We\x1c\x00\x1f\x8f\xae=\xea\x0e\xefL\xd99\xb9\x8efG\x88\x97\x8f\x07\x95=2\x0fPM-q`\xcf"\xbcp\xf93n\xc9\x19%N)U\x85\xe4 J\x8d\x13\xee\xc0\\\xf0\xdfJI\xc1\xe4oJ#N\xea\xe0\xfcRpjSC\x00\x83SG\x9d\x06\x02\xdc(\xc9o\xff\x00x;\x1f\x91L\xef-,\x12_6\xca\xeeH\xb7\x10\xef\x14\x9e\xb4c\xee3\xdf\xe9V\t4\xe7p\x01V\xc0\xc5DM\xa5\xde)!P2\x03\x95\\WH>\xd9\xfe\xb4\x90W9\xce>;WZu\xdd\xda:\xc6\xcc\xf7H9\x16\xd3\x13\xb8|\xc5/\xff\x00\xda\xdf\xadM\x05\xb4\xd5\x0c\x92\xd9\xc8VX\x80Ym\xe4;eB;8?\xd0\xd3[\x13qi\x1f\x10`\xb1\x07kv\xfaW\x17\xd0\xcby!\x9b\xee\x86\x19\xf6\xe2;\x98\xf8\x91\x0fn{\x8f\x83]\x19\xc7\xbd$\xf3\xce>i\xf5\xb0\x8e%x\x9d\xe5RA\xde\x8f\xcf>\xe34S\x1b\rvh\xbc\xbb]v\x05I\x94\x90\xb7H=\x12\x0e\xc7\xe0\xfb\x8a+\xa1\x97\xdcRY\\\x1e\x0f\xda\xb0\x18\xecuK\xc7V\x8d\xa0\xb0B\x0b;\xbf\xef.\x00\x07\xa2\x81\xe9C\xf3\xc9\x15a\xd3\xb5\x1d?M\xbf6\xf0\xe9\xd3j\x1a\x91\x8f\xaaf[\x82\x1b\x95\xf3drDi\xc7s\x8a\x8e]6\xfeuU\xbe\t\xa6\xda0\x05-\xed\x9f7\x05{\xef~\x83w\xb2\xf3\xf3S\xf6\xa9c\xa2YN\xb6\xd6\x89o\x0f.\x91\x8c( \x0f\xc5#uc\x9e\xb9\xaa\xf5\xf4\xd3\xc4\xe4{\xfcS\xf4\xb4\xbd\xd4\xc4\x87Zx\xed\xe2\n\x15\xac\xad\xe4a\x0b\xb1;\x80\x92N\x0b\x11\xec\x83\x1e\xe4\xd3\xc9u\xad\x19\xf5\x0bk\x16u\x96\xe7\x04\x80\x10\x80\x0fL"\xfd\x07\'\xb0\xefQ\xf6w\xda\x85\xd2,\x8c\x00V\xc3F\xee\x08,q\x8fJv\x03\xe6\x94\xb0\x81\xedf\xf3\x15\x97\xceuc$\x98\xc9\x7fb\xec{\xfb\x01\xc0\xa7\x03\xf1\x81\xcf4\x8cs\x9e\xde\xd5-q\xe7]\xca\x11m\xc4I\x10e33\x15.\xa3\x8c(\x1c\xf1\xfc\xc4\x8f\x8ag:Z\xc1#\xf9\x03\xd7\xb1p?\x1b7ls\xda\x94/qs\'\xdd\xf2d\x1c\xef\x94\x8c*\xe7\xaf\xd2\xbcdxd\x88E!\xde\xa0\x8d\xe8py\xe0\xe7\x8e){\xb7a\xf54\x9c\xe3\xbf\xe9PMk|\xf7\x124\xd3\x04\xd8C\xa8\xc7\xa0\xa9\x18\x1b\x8fS\x83QN\x960;/\xdfU\xe5}\xccd\xce\x00\'\xf8\x9b#\x9c\xfb\n\x9e\xd4\xa4H\x14Ksr#N\x14\xc8\xfc\xee\xc9\xe9\x81\xcb\x1faU\x9b\xcbc\xa9)\xf2&\x96\xc22\xc7\xf7\x8257\x12\x03\xc6\x14\x10Dc\xe7\xad2\xd8\x1bb\x9cRN\xe6\x9b\xddj\x166W\xb1\x02\x8f\xa8\xdfN\xc0$J\xd1\xbb(=\x0e\xdc\xe25\xc7W4\xfa\xef@\xd45_&m@\x0f!\x0eV\xd2\xd9J\xc2s\xd0H\xc7\xd5&1\x908\x19\xedK\xe9z=\xbe\x97\x0cp\xdaX\x84c c\xbb\xf1\xc8\xd8\xff\x00Q\xd8\xe4\xb7\xe7WM)\xae>\xf7\x14q\xcb\xb5\x07\\\x1e\xb8\xf7\xff\x00\x81@\x198\xdfz\xe9n\xe2\xaa\xd0\x88\xa2\x0b\x0f\x91\x1a\x88},\xb16\xd4\x8cg=\xc5L\x85\xb8\xb8\x06(\xe5\x022=O\xfcy\xef\x81\xc6\x01\xf75/\xab\xdb\xc0\xd3+-\xb0\x96e\'\xca\x89Te[\x1d[\xb2\xfdMV\xd3\xc3\x8du\x13M\xa8\xde\xe60\xc5\x9a\x05m\xb0.\xd3\x9fY\xe0\xbf>\xfcW\n\x90H\x02\xba\x18\x10\t\xda\x96\xb8\xd4\x1e\xe9\x8d\xbe\x99j\xd3\xc6S\x12]\xbbl\xb5]\xa7\x07s\x0fT\xbf\x08\x9c{\x9aU4{(\xa4\x8fQ\xd65\x19/\xee\x9d\x95\x12[\x80\x02!\xed\x1d\xa5\xba\xe4\'\xd4\r\xc7\xde\xa0\xee53\xa9\x15\x8fDX\xd9c"1}*\x13k\x1f\xb8\x81\x07\xfa\xaf\xfd\x05J\r\'O\xd1\x04\x17W7\xd3\\\xde\xb9\xcb<\xc7}\xcc\x99\xea\xa8\xa3\xf0\x8f\xf6\x8e\x05s\'\x078?\xd2\x94\x0e\x0e7\x1f\x1d\xeaU-\xf5+\xc5\x05\xd1\xa0\x88\x86)\x11|\xbf-\xfc`\x1f\xc4GE\xe8;\xf3L|\xe95\x16\x96\xd2\x18\x12\xfc\x16\xd9<n\xe3\xeeq2\xf3\x86`3#\x0e\xe0d|\xd3\x95\xb1\xbd\xd4\xadYn\xdaM>\xda@3n\x8d\x89\xd9\x07P\xee?\x0eG\xb74\xfe\xde\x0f&\xd4\xdb\xc0\x8bi\x11\x1ba\xd8\x06@\x1d\xc0\x1d\xe8\xc6}\xf1\\\xd5\x8aA\xadc(\x90\xdd\xce\xd7RF\xc9#\x92\x8a\x15\x18\x0e\x02F3\xb4\x0e\xdd\xeb\x98\xd6?9\xe7\x91\xcc\xb7.\\+\xb2\x9c\xc6\xacxE\xee\xaa=\x87$\xf5\xa4\xa6\xb5\xd2t\xabY&\xb9\x98\xc7\xfb\xcc\xb7\xad\x9aG~\x99\xf7f>\xd5\x18\xe2\xf3V!\xe4\x8a]:\xc0\xa8\x1b7\x7f\xd4J\x07\xb9\x1f\xe9\x8f\x8e\xb4\x93\x9a\xe89\xfaS\xdb\xbb\xbba<\xc9g\x10\xb9\xbf\x8a\x0f\xe2}\xb1DO\xa4\x16a\xf8~\x83&\x9a\xda\xc3,~\x99e{\xbb\x98\xe1m\xf3\xa9\xd8\xbb\xdf\xa2\xc41\x85\xc7\xb8\x19\xc7SR\x86;M>\x0f&\xde$\x8a\x01\x19\xe4\x10\x02\xe7\xfb\x9a\x8c\xb6\x93z\xc9o\x02yQ\xec*\xb2\x13\xf8\xcbw\xcfR}\xcd!\xb9\xe0R\x94\xe4m\xfa\x9aaos\xfb!#\xb0\xb7\xb2\x8ek\xa9\xd9\x9c\xdbB\nF3\xd5\xe5v\xc9\xc6\x7f\x89\x89bzWP\xe9\xce\xf7\x9f}\xd4%[\xbb\xa8\x81\x10\xa8M\xb0[o\xe7(\x84\x9fW\xbb\x9fQ\xedR)\x1d\xc4J\x89n\x01\x8e\x14e\x0b\xfc#\x03\x96n\xe4\xfb\n\xf2\x16xl\xc9,\x15\x8b\x13$\x8e\x06I=\xc8\x14\xd194\xe8#\xefJ,\xb2}\xe9\x14\xc0\x85\x97\x7f\x05\xb2\x14\xf5\xdcs\xce[\xda\xa1\xccLg\xf2\x95Y"V-p\xc8\x08\x123\x1c\xb2\x8e\xe74\xba\x86\x82\xd4\xcb\xb9`\xb7\xc9\x92I\x1c\xe2I\x08\xef\xcfJB9\xa5\xd4\'\xb3\x9e$)\x17\xe2PN\xd0\xc7\xdc\xfb\x8f\xad7\xed\x9eM86\xe3\xf5\xaeeCz\x11U\xde$\x8d\xc8\x92A\xf8\x8a\xe7>Z\x1e\xdf\'\xb50\x9e\xe2,\xb4PA\t1\x9f\xdd\xa7!c\xdc:\xb6z\xfe\\\xd4\xfd\xed\xca\xc7"\xaa:,lp_\x8c\xf1\xd8Td\xb6\xf6\xea\xccS\x900\xdd\x81\'\xd8\xd2\x08\xc7jP;w\xa87xl\xe2\x99\x82\x87\xf3\x1c?\xab\x92OO\xd3\xe3\xa5#\'\x88\xad\xac\xad^[\x88\xc0\xc0\x05\x19\xc6\x01\xfa\xfc\x8fj\xe7Y\xd4\x16\xce(\x81D3;\x9f. 2\xcd\xf1\xf4\xaam\xed\x8d\xd5\xd4\xc9uz\xa4\xb9\x00\xac\x19\xca!\x1d\xc7\xb9\xae\x0c\x0cg\xbd+4\xdfU\xf1\x06\xa3\xaeJ\x85\xe3h,\xd1\xc3")e\x92]\xbc\x00\xe7<\'\xc0\xa8\xf9o\xe5\x8d\x14\x1c\xe3w\xa5\x14\x90\xa3=@\x14\xee\xe3\x11G\xear\x08\xc9=\xf3\xf0*>\x08E\xc1I\x1f1\x828\x07\x96\'\xdc\xd3\xb9\\n+\xa0\xfbR\xf0\x88n]L\xd2\xb7\x9a\xc3(\x02\x8c/\xe7\xde\xac\'J\xb5\x9e\xee\xdbM\x01\xa3\x86T\x12;\xa8>\xb0Ny=q\xf1Ml\xed,\x90\xacr\x03\x90\x7f\x17J\xbe\xe9\x10[\xa4\xc6\xe0G\xfb\xb4_.=\xe3\x9cS.\xda\x98c;~\x94\xb0p\x1a\xae\x1ad:n\x99m\x04\x11F\x88\xa8\x00P\x00\x00b\xa4n.\xe0\x9d\x90\tr\xe5\x8e\xcfY\x1c\xf7\xc95\x0e\x03n\x8f\x11\x897\x03\x96\xec)k;\x14@\xcd/R\xc5\x8e~{\xd2A\'l\nA\xc6s\x9ay"\xc3\x1b,\xaf$L\xd1\xf3\xc1\x1dH\xc7ZAn\x16Q\x1e\xe7\xc6\t%H$(\xf79\xeb\x9fsB\xdb\xc4\xf2\x12\x8a\xa5S<\x91\xc6\x7f\xe6\x9b\xb3fg\xdc\xa43\xae\xd1\x81\xe9\x00w\xfa\xd2O\xe9KR6\xf7\xa7R\\0\x94y\x0cA\x95\xc1r\t\xfc#\xbf\xbf\xd0S\xf8\xaf\'2m\x0f\x95\x18\xfc\\\xf1\xed\xcdDB\xf3\x82\xfc\r\xcb\xe9S\x8e\xde\xf5`\xb2\x81#\x1fx\x9a0\xa9\xd4\xf1\xd4\xd3RI\xe5&A\xdc\x9d\xa9j5\xb0\x18\xe3\x9aZ\xe2v\xb7\xb0y\x01`@\xc9\xc7\x19?\x1f\xf3Tcm&\xabpn$\x85\xe5\xdb\xc2\x0eJ\xb3\xe7\xfa\x81\xde\x9e\xea\xba\xad\xdd\xf4\xad\x05\xb4d\xf0G\x1c\x00>jcJ\x8e\xee\xda\x18Q\x13n\xc1\x96\xfa\x9e\xb5\x1a\xd6\xdd\x892HNN\xf5"YB.\x84\x02\x9f\xdb\xdb\xc9\x18\x12K\x1b\x05D\x01\x81\xe7\xa7`(\x1f}\xbe\x9fo\x97\xb1I\xcf9\xfc\x89\xa7\x92\xbc\xf3*)\xc0\x19\xcf#\xad<\xfb\xd5\xa6\x9b\x13I,\xbb\xa5a\xefR.\\,l\x88\xd8f\x1b|\xd3\x11e\x9b%s\x8a\x88\xf1\x14\xa6\xc2\xc8\xa5\xbc\x8a\x93H=l\xe7-\xb7\xbfNj\xb3\xa0\xe9\xc4G%\xdc\xc4ob3\xc7\xf0\x0fj|m\xdb\\\xbai\x9c\x91\x18l\xb1?\xc4\x07@>*\xc8\x96\xc9\x1a\xf0\x00@?#MY\xdayQ\xe7\x1c\xeeM9<\xf9\xc2\xe7\xebPR\xdc\xb4v\xf2\xce\x8b!\x92G\xd8\x83\xa7|\x01\xf4\x14\xb46\x12\xc3\x08\x9eI\\\xc9\xb4\x92\xc4dn\xf7\xa7P\x815\xcb;C\xb5:\x01\xf0)}O_\xb4\xb7O&8\xc1f\xea:\xd7e\xf2\xe4\xd8\xb6\xe3\x8a\xe2\x97\x18\xc2\xf3\xcdg\x93Cw\xab\xea\xa24\x89\x84+\x80\xed\x8czA\xe4\x8c\xfb\xd6\x89ka\r\xb4q\xacQ\xed\x18\xce)\r*\x19\x1dd\x9aT\nd\xfc v\x150fE$\x14\xce\x06\x07\xbdH\xb7\xb7\t\x18\xd8qM\xcb1f v\xa8\xf9L\x8cU\x96%\xe0\x10\x14\x8e\xa2\xa8\x9a\x8d\xac\xb7S\xc8\\))\xf8A8\xfe\xd5o\xd45\x03e\x0b\x90\x8a\xcc\xc4\xe0f\xab\xba~u\x0b\xc5\x06 \xa39jjP\xa4\xaa\x0eI\xde\x9c\x88\x90\x19\xc8\x18\x03j\xb1iZZ\xd9\xdb\xc5\x1cm\xebp\x19\x8f\xc9\xa9\x99m\x91bf\xf3\t|c\x1e\xf9\xa5cB\xaa\n\xa0$\x0c\x03I\xbe\xe4E.\x00\xeaMJ\x11*\xae4\xff\x00\xc5G2\x12s\x9e\xf5^\xbc?sIdPCm\xea8\xed\xd2\xaa\x9a=\x9d\xcd\xd5\xecfX\xc0Gm\xe4c\x8e:T\xc6\xb3xg\x05P\xe4\x13\x82\x05Ox~\xc6\xe24\xf3$~\x08\xe0c\xa5FP%\x93\n2\x01\xdf\xedR\t\xf2\xe3\xcblH\xa9\xa4\xb6\x02"NG`\x053\xbd\x86\x18b,\xf2\x90\xaa3\xb7\xe4T\xc4\x85v\x05/\x82{\xfbUWY\x99Qv\x19\x87\xcd?:\xaa!:A\xda\x9a\x89\x8b0\x19<\xd5\x13T\x96;\x97\xc0\r\xean\x80v\xa9\xaf\x0f\xe9\xb6fg\x97\xcar\x14`\x13\xef\xde\xa2b\x9e)n[\x9e\x9c\x03\x8a\xd2\xb4TX\xed\x81*\x06j\x15\xb4A\xe4\xdf\xf9G\xefR\xe6\x90\xa4{\x0ei\xccq\xc7\x1cY\xc3\x1e84\xceWB\xfb\xf6\x9c(\xe4\x8fz\xb0\x95\x8fh\x00\x0c\x1a\x8f\x95\x14o\x1b\x06\xdcU\x9bE\x808\xa8\x0b&N\xf5\x9e\xdd\x88\xee\'%\x14\xb7=\xfa\xd4\x95\x920\x9e!\x91\xfe\x91\xfa\xd4}\xf7\x96oZ\x148=I\x155in\x89q\x11\xdd\x81\xe5\xe0\x8a\x80\xa8L\xe9\x8e3\xbdL.\x04M\xf4\xa9/\'x\x00\xf7\xc6*\x1fQ\x88\x97U\xdd\xb4\xa8\xe4\xd5\x90\xac^Y\x01\x88\xf6\xa8\xbb\xdd\x9bTl\xdc\xde\xf55\x90c\x8a\x8c\xaf\xbf5\x00\xb3y\x1e\x82A\xf6>\xf5m\xb21\xa4J{\xb0\x19\xaad\xcf\x18\x91A\x8f85l\xb2Y\x1a\x18\xb8\x0b\xc0\xa4[\xa8\x0c\xfe\xf9\xa7&l\xaa|T\x8c\x93\xa9|l\xe9\xfaTrK,\xb7\x0e6\x00\xb8\xebJ\xce\xad\x1b\x13\x92x\xe9M\xf4\xd4\x12\xdc9r~\x05<\xc0w\xcf4\x98\xf2x\xf6\xae`*n\'![\xd5\xc0\x07\xa7\x14\xb6\x8fg\xe4\xda\xc9\xbc\x05-+\xb6\xdf\xa9\xa9[\x9b(\xa2P\xeb\x90\xd4\x85\xad\xbb"6\xf2y9\xa5E\x86\x00\x80v\'\x1bRe\xca\x93\x927\x03\xe6\x93\x92\xdd\x0eK\xf4\x03\x8a\xab[\xcf\x04W7\x1b\xa5fe\x97\x1bOaV\xcb\x8c\xf9m\xd6\xaaRZ7\xde\x06\xd4\xe5\xdc\x12k\x92zJ\x9cWb9\x0c\t\xedV\x89\xa2\x8ehw\xa09\xc6j\x06\xe6\x04x\xe4\x0e\xc4\x021V\x85\x82D\x85T\x7f-V\xf5Ky\x15\x1b\x93\x83\xda\x97*eI+\xb67\x14\x88\xa4\xc3\x00\x0f}\xa9K)U\xadR1\x9fH\xc0?J\xaf\xf8\x80\xdc\x18a\x98\xaeV7\x01\x86:\x8a\xb0\xe8\xb1\x11m\xc9\xc9\x06\x99\xeb{\x9a\xd9\xe2\xdb\xc1\xae\xe9\xfe\x189\xec+\xa1\xf1!\x00w\xaa\x9e\xbf\xa4Z\xeb:E\xd4n\xb9I\xa1d*zma\x83\x8a\xfc\xdd\xd64\xf9t\xadN\xfa\xcaT*\xf6\xf3:\x10z\xe0\x1e?\xa5~\x9c\xc1\x1f\x99\xa6\xec9!{W\xc5\xdfn^\x16M;ZM^\x02\x04w\x98\x12/p\xe3\xbf\xe7Sl_L\x8c\xa7\x86\x19\xfb\xd4K\xe4\xd5\x18`7S\xfbU7\xc3\xb7%\xadc\x8c:\xab7\xa4\xe4\x9c\xf1\xd3\xaf\x1c\xd7\xd5~\rW\xd6\xad,\xe7*\xb8\x81v\xb3\x13\x92\x00\xaf\x8d\xf4[\x9d\xae\xa8\xc4\r\xe7 \x9e\x99\x15\xf5/\xd9\xb6\xac\x92B,\xe2g\r\xbf\xd5\xcfR\xc2\xa2\xf5\x14#$\x0eN\xff\x00z~\xc1\xf8\x04\xf6\xad\xdfK\xf1*\xa3\\@\x96j\xdfw|n\xeb\xc0\xefW\x0b{\xa4\xd4#g\x11\xfaXTF\x8b\xa3\xda\xe8)s-\xdf\x96\xe2\xe12\xc4\xf3\xcd=\xd2u\x1b\t\x9eH\xa2+\x8c\xfa@\xf6\xa8\xb00$\xa98\x19\xc6\rI\x98m\xa8\r\xfd\xc1\xa6\x96\xed%\x9d\xd1\x85"\x00;\xe5G\xd7\xadO]\xd8,\xb1\x9cX\xaf"\x90\xd4#8\x0e\xa9\x86S\x90jv\xd6\xedg\xb7L\xe78\xe6\x9f\x8e%\x0c\xc8x\xe4f\xa3\xc9#\x15G\x03~\rR\xa0\x86k[\xad\xad\x16\x14\x9e=\x85[\xc5\xbc\x12D\x01\x8f=\x0e:T.\xa0\xcd\x1c\xbb\x82\x12\x01\xa9[;\x95\x9a0B\x9c\xd2 \x8dc\x96H\xf1\xb1\xf5/\xf8\xa5L\xe5\xe3\x8d\xc7 `\xd5\x7fV\xb2\xb2\'r\xc4\xc2P?*4X|\xc8\xe5\x8d\x89\x1e\xc0\xd4\xc5\xe0\xde\x1bl|\xfb\xd5n\xdeY\xad\xae\x9b\n\xc4\x1e\xb5\xc9\x10E2\xc9\xc0\xe1\xbeEu\x1c\xbce{\x8d\xc5O\xddYE\xc0\x94nF\x18\xe3\xa8\xaa\x8bX[Y^\xac\x913`6z\xf1\x8a\xb9K4\xd2B\xbba\xc9\xa8\xab\xc4W\x81\xd9\xa0*\xff\x00\x14\xe4\xb1+.\xc3~A\xa4G#\x03\xbe\xe0\xed\x8a\x90\xb5\x102(Q\xe9v\xc9\xef\xc9\xaeot\xa8.-\xdc.\xe1\xb0\xe4\x0c\xf4?\x14\xcfJGU\x1b\x94\xe2\xacHw\x02\x85M)\x15]\x06\xa1\x9fzC\xb1G\xf4\xb7\x15[\xb6\x964EG\x90\xe47L\xf5\xa6\xd7\x9at\x97\x16\xd7H\xa7\x0b\xd6<t\xa9-GI;\x8c\xf1\xa7\xa9y\xc7\xbd8\xd3\xe62\x80\x84m\xecA\xf7\xa4\'\xa5\xfc\xb7\xf6\xf4\x9fzQ>\x90\xe9\xf7\x15]\xd1e\x05DR7+\xc1\x06\xae\x91\x08\xe6R\x9bG\xe1\xc05U\xd4\xf4\xbb\xdbk\xa3sn\xa0\x8e\xac\x05X4\xab\xad\xf1r\xbc\xfb\x1a\\\x00\xa34l;\xed\xf4\xa4LC\x00\xea{o\xf1Q:\xbe\x8bo4\xb6\xf7\x01\x1b1\x8c1^\xa6\xbc\xb0\x85\xed\x9f\xce\x83\'i\xfd\xe2\x1f\xe2_\xf9\x15pdfP\xc0\x001\xc8\xa8S\x14\x96\xf3\x93\x81\xb5\x8f\x14\xfbD\x03\x07\x1b{\xd3BB\xcaW<T\xd41Z\xdcF\xb3F7\x0c~\x9f\x15S\xd6\xf4h\x9eE\x91b\nFr\xc0u\x06\xacv\xc2K)F\xd2\x0c2\x9c\xfd\rI\\\xc6%B\xa7\x18a\xc1\xa7\xca+\xa9\x1c\x1ad9F\x04\x1c\x8a\xcc\xa3\xb2\x8f\xccB\xb8\xca\x8a\xb4\xdb\xc4B\xab\xaa\xef!6\xed5\x07siwm<\x8069\xc8\xa9M2\xe2WV\x8d\x98\x06\xedQ\xa3\xd9\xf0\xc3zu\xf7\x19\x07j\x99*\x92!\x8d\x81\n\xc0d{\x1aJt\x9e\xc8\xac\xaa\xdeu\xbe\xdc2w_\x91B\x99\x91\xe4\xdd\x1fU\xe0\xd2w\x17w\x11\xc5\xfe\x81e\x15+`7\xd8\xfb\xd3;\xed\xc1\x15\tua\x15\xf9\x17\x08\x03.s\x9c\xf3\xf9\xd4tZL\x9a}\xd1\xbd\xd2\xc0I\t\x1et=\x16L\x7fcK<\xb3\xda\xc9$\xf6\xf1\xb1\x85\xf9\x92?c\xef]\xd9j\x02v%r0z\x1e\xb9\xa8\xee\xa0\x9c\xe7\x07\xdcS\x87 q\x91W\xbd\x1fW\x83T\x8c\xa6<\xb9\x93\x87\x89\xbf\x1051\x8c\x82\xa3\x8ct\xaa\x13"\xb4\xf1^\xdb\xfe\xee\xe5F\t\x1d\x18{\x1a\xb7\xd9\xeaQ\xca\x88d]\xb2\x11\xcdK\x8d\xf20y\xf7\xa8\xae\xa0\x1c\xa8\xdb\xdb\xda\x97\xba\xb6iW\x0b\x8c\xe3\x93\x8a\xa5Igqg\xa8\x19\xa1>[7\xe3\x1d\x11\xea\xf4\xb7J\x1fnx\xa4\xee\x1e\xdaU\xda\xea\r-\x90>7\xdcW\x15\x8a\xf6\xc84\xc5\x16\x1b\xe8\x83\xc50Y\xc2\xe1\x90\xf45\xec\x16\x8d\x10\xe2b\x03~8\xdb\x91\x9a\xafjH,\xdf\xce\x89\xd9q\xdc\x7f\x9a\x92\xd35\x98u\x04\xf2\xe4\x1e\xb5\xef\xefI\xce\x0e\xfb\x1f\xebJ\xc1\xd3\x91\xb8\xa67:$\xb6\xd2Ku\xa4\xcc!\x9b\x92\xf1\x7f\xf4\xe4?#\xb1\xf9\xa4\xed\xa5\x83Q\n\xed\xba\xd2\xfa3\xea^\x87#\xdb\xdcU\xa4\x18\xd8\xfa\x10\xfc\xd3;\xd5\xb3,\xab-\xbe\x1b\xf8d\x03\x91J\xd3\x8e1\xf4\xae\xea\xce\xc79\xf7\xefJ%\xc4\x91\xa8\x17K\xb8\x8f\xe3\x03\xfb\xd3\xc8\xa4B}\x0e\x0ey\x15\tk,\xd1L\xd1L<\xc4?\x81\xc7\xb5>T\x88\xc8J\x02\x8c:R\xd4\xe6\x90\xc3\x14\xdbU\xd2c\xd4\xc2\xca\xac\xd6\xf71\xff\x00\xa7:p\xca\x7f\xc8\xa8\x8b-z\xea\xca\xe9l5\x88\xb0\xe4\xe2;\xa5\x1e\x87\xfa\xfb\x1a\x9e\x97P{q\x89\xe3%\x7f\x9c\n^KM?R\xb7\x00\x94\x91Xq\xf1A\x07;\x1d\xe8\x07l0\xdb\xfaR\xa25\x91}8e<\x86\x14\xd2\xea\r\xea\x12S\xb9s\xe9q\xd4\x1a\x81\x9a\xc3Z\xd1\xb2\xf6\x13\xf9\xf0g-\x13\xf2@\xf853\xa6j0j\nA;$\x1f\x8a3\xd4\x1a\xe8a\xc7\x06\x92W\xb89\x14\xea\x0b\x89\xa2\x1e]\xcb\x87Q\xf8d_o\x9a\x7f\xbe-\xbb\x90\xe4v\xa6\xf2\xc0\xa38^\xa3\x91M\x13t$\xf9K\xc6yZVqI\xe6\x95\xb9\xb9\xc9Uhr?\x98v\xae\r\xcb*e\x89e\xf8\xa7Q\xcf\x1d\xc0\xc1\x01H\xeck\x86\x81\x91\x8b&\x08\xee(\xfaQ\xf1M\x9a\x1bK\xd4!\x908\xf6#\xa5\x15\xdb\xc2A\xf3"\xc2\xb0\xea\xb4RJ!;\xa8&\xba\x19\x87\r\x8a\xc4\xaf5\x0b?:T\xd3\xee\x1a\xf2\xfb\x02?-\x00)\x18\xff\x00st\x15!a\xe1\xe5G[\xbdB\xed\xeeg\x07p,\x7fw\x1e{(\xa7\x9av\x97c\xa6\xda\xc7\r\xad\xba\xc6\xb8\x04\xe3\xa9\'\xb9=\xe9;\xa63H\xb11\xf4dp8\xcd@\x1b\x9c\xfe\x82\xa4\x1c\x01\x81\xfa\xf7\xa2}B\x15,\x14\x16\x0b\xc0=\x05)k4w[Zf1[G\xd3\x1c3\x11\xfe*\x16\xe0\xa8\xbf\xb7\x8c"\x85\xdd\xda\xa4o.]\x1bb\xaa\x85\x03\xa6(\x04\x96\xae\x10\x00\x1f4\xcbU\xf1\x0c\xaa\xdeN\x9fj\xeb\x12g\xd4N\x00\xf99\xaa\r\xef\x88\xf5K\xbb\xc1k\xa7\xdb\xef\x93#u\xc1$D\x98\xf7\xf7\xa6\xba\xa5\xf5\xd5\xed\xff\x00\xdd\xa4\x94\xac[\x8f\xa5=9\xc7\xbdMZ\xc1\x12\x84\x8dWj\x0e\xc2\x96K{\xd2\x00Q\xdbz\xf2\xce\xce\x7f6)\xae\xae\xfc\xeb\x95$\xa3Hr\x17\xdfh\xe8*\xda%\xf2\xa3;\xee\xa3$\x8f\xe1\x18\xebP\xcd\x14q\x81\xb5G\\g\xbdK\xe9\xf0E<\xcad@p2)\xb2w\xa5g;\xd3\xcd\xef\xb0\x0f5\xd8\x15]\xcc\xbdH\xf6\xfaS\xb67\xa6D\xd8M\xb4\x03\x19*@b\x07\xcfjQQRD\xda1\x93\x8cU/\xc5w\xb7W\x13\xdb\xe9\xfesG\x038\xdd\xe5\xf0\xc7\x9e\xe6\xb8r\x07&\x94\xbb\x9d\xb1W)u\xf8\xe2k\x8bk+_\xbc\xc8\xa8I\t\xd0\xb7\xfb\x9a\xa1\x9bM\xd45x\x12]n\xe0Gh\x99o\xb8\xc6v\xc4\x7f\xfd\xe1\xea\xdfJ\x9a\xb7\xb7\x87M\xd3\xc2\xdb\xc6\x14"\xe7\x9eI8\xea}\xea6\xc1\xdfXro\x18\xba\xa1\xf4\xa0\xe1\x7fJ\t8\xdc\xf3B\x803\x8e\xdd\xfb\xd3\xdbY\xe4\xb8\x89a\xd2\xad\xa2\xb7\x82!\xb5ge\xc2\'\xff\x00\xbbZu\xa6\xd9Z\xda\xdc<\xc1\x9ak\x93\xfe\xa5\xd4\xbe\xa6o\x81\xec>\x05t\x8d\xbag\xb7\xc0\x11*\xf0\xa3\x81J\xc4\x83{I\x93\x948Q\xd8\x0f\xa5s\x8c}h\xe4\x1f\xa5I3\x96\x02B:\xe7$\xf6\x15\x1d&\xa1\x14\xee\xf0X\x8f9\x97\x93 \xfc\n}\xf7T\x06\xa1uqs}\x05\x93J\xcb\x037\xa9S\x8c\xfdMMlKKx\xe1\x81\x04i\xb8\x0c\n\xeeKg\x1b|\xd7B\x81\x8c\x8c\xe7\x8ae\x1d\x81\x86w\xb8\xb8\xb93\xcc\xdf\xe9\x92\xa0\xacc\xe3\xe7\xe6\xba\x9e\xe2H\xc2\xf0eg`\x10\x0f\x7fs\xf1^\xeb.\xdb,aS\xb5d\x90\x06\xc7\x04\xd2\x93HRx\xe1P\xa1Tq\xc74\xd9\xe0\xfcWF\xf84\x8a@\xfe\\\xa6\xeaS!>\xa6=\x81\xf6\x02\x9a\xc5,\xd7WY\nc\x89>=O\xdb\x9fj\x90\x0c|\xa7\xe7\xaf\x06\x92\xb6\xf4\x89q\xd8\x1aG$R\x81\xd8\x9f\xb5/\x12N\xe1\xb6:\xc7\x1atQ\xc9?SQ\x93\x94\x8dHi\x04\xb3o\xdc\xb1\'$\x9e\xd9\xa6:\xb5\xfd\xcd\xab[\xc5\x13\xed\x12\x9c1\xefK\xdb\xc1\x1d\xa2\xcb4C\x128\x05\x98\xf2i\xa7$\xb0Q\xde\x9eU\xc2\xea\'\xe8+\xa946\xd4<\xa9\xb56$dm\xb7\x07\xd0\x0f\xcf\xbd;\x9e\xd5Re\x8dd\x01Tu\xec\xb4\xb8\x9aI-\x0e\xe6\'\xa9\xaa\xcd\xcc\xf3J\xc9\x11\x90\x85g\xe7\x1c\x13\xcd%\xb0\xa3\x1b\x9f\x93]\\\xb1\xdf\x1e\xd8\xa7b\x1f>\xed\xc4@6\xd1\x8d\xc7\xa2\x8f\x8f\x9a\xe6X&\x8d\xbc\xb8\x10\x19\x0fWc\x9cR\xf29\xb7\x88\xac~\x90\x06*9\xee\xe6T$74\x9cg\x1b\xd2\xb2=\xa9C\xa5\xdb[fi\xd9^\xe1\xba\xc8\xdc\x90=\x87\xb5V\xf5gDGX\x93s\x9f\xc3\x81M\xb5]F\xefc?\x99\xc8\xe0T\x10\xbe\xb9\x16\xf9\xf39brq\xcd\x05riC\x8c\xd3f\xb6\x0f)\x96d\xdd \x18\xdb\xd9iD\x08\x8c\x18\xa7#\x901\xc0\xa4\x04\x8f\x9c\x96$\x9e\xa6\xad\xda-\xb47\x01\xc4\x8b\xb8c\xbd5)\x11\xa9\'$S\xd1\xa7\x98\xc0\x03\x8a\x83K\x81,\xb1\xac`I\'p\x07\x15\xa0i6w\x13\xc6\xa2T\xda\xbb\xb3\xb6\xa1\xed\xecmm\xee\xdb\xca\x85W\x07\xb5_\xec\x944\'5\xc5\x1f\xcd\x9eG\x15\xd7 \r pw4\xb2Y\xecM\xe3 \x0eq\xda\xba\xb7\x8e[\x89\x18\xbe\x04K\xd0\x01\xd7\x14\xbb3\x00\xa9\x9fNqRp\x00"\xc0\x03\x18\xa1\x13S\x02\x0e\x07\xb54\xcd\x81\xc6\xe7\xbdG\xbc`0\n@\xe3\xa5G<j\xf3\x86\x00\xfaF1\xdb\xebRd\x02\xd94\x89>\x96\xe0u\xc5+c\x9d\xb1@\xf4\xff\x00JF\xdd\nH\xa7\x01\x86rk\xcdkT\xe2;x\x8f\xab\x1c(\xa6ws<p\xe5N\r0\xd3cY\x8b\xcb&Y\xc1\xe0\x9a\x83\x16g\x90\xb18Pp\x05L+\xe5\xa0\xeej[H\xb1xU\x9d\x86d\x90\xe5\xbe*\xc0e\x080\xa7\x93\xd4\x9akn\xc4FO|P\xecv\x1e\x05N G\x19\xf8\xa8\x9b\xbb\x8f\x9aW\xef\x02\xd84\x97R\x82\x8b\xd2\xaa\xb2]\x8dV\xf9\xb6\xe7i\xe3\xe0\n\xe3S\xb8\x96P\xc8\xc7\x81\xd8S\xbd\x12\x18\xc4E\x82\xf3P!\x87\xcf\x94\xca\xe79\xd8\x0faR\x99\xbc\xb5\xd2\xa3\x8eO\xcdX`\xb7\x86(\xd5F\xe0\x00\xedNwDU@9^\x985\xcfD8\xf6\xa6\xdbG\x93)\xee\x07\x15:V\xf2\xa3$\x0f\x8a\x8c\x83[n{\xd4~\xadx\xd1#\xa4\x0c\x01\xc7j\x82\xd1\xac\xe4\xbe\xb9\xf3&m\xc1O~\xf4\xa0A\'-\xc9,A\xab]\x85\xac0\xc6\xa5\x17\x19\x195\x0e\xd6%\x92Vc\xef\x9a\x953\x98\xe3\n;\xec*Q#H\xd5\x818\x00qQ\xd7\x12E\x1a\x99\x0bt\xefN\'$\x9cd\xe3\x15T\xd7\x19\xa3\x87b\x92\x06j\xc2C\xa0}*\x1a\rDo\xcdE]<\x97\xf7\x18\x079<U\xd3J\xd2\x92\x18\x95\xb8\r\xc1\'\xbdT\xb45\r2\x13\xcdhA\x8a\x81\x8ab\xde0\xc4\xb3nsON\xc4\x05Q\xb5)\xb0\xa88|\x9c\xd4.\xb4\xe5a\xd8f\xc1"\xa5$\x95\xf0y\xe9\x9a\xa3j2\xc95\xd6\xd6c\x8c\xd3\xb3aQ\xb1\xedL\xc5\xeaqM\xecm\x96\xe2\xfa4\x19!NX\xfc\xd6\x93\x12,Q\x90\x1a\xabZ\x1d\xbcHY\x80\xe4\xf75j\x11\xae:Rmc\xd3\x1es\xb9\xefN\\6_\x1d\x86\xd5\x17p\\\x02\xc1\xb3\xc7J\xcd\xf5\x89n]\xa4$\xe0f\xb4)\x8e\x1eA\xdb\x06\xa8\x9a\xa1\xde]H\x18\xa6\xe6\x1b\xaf\xeaiqgsP:V\xd9.\x11L\x99\xf5V\xcfe\x12\xf9(\xa0\xf6\x15\x95h\xf6V\xff\x00{C\xb4\xe4\x11Z\xe5\xa2*\x85\x00v\xa5\xda\xaa\x92\xe4\nM\xc3\x1c(\xcd: *b\x98]\xc8DLA\xe8*E\x80\xc1\xa8\xab\xfe#8\x151\xc7\xa4\xfd*2\xfea\xf5\xaaa\x01\xe6/\xb3,MMX.\xe9\x19\x98\x1e\x9cS\x18\xff\x00\x13\x9fj\x98\xb1\xe8\xc7\xe7\x15\n\x14\xf5\xe7\xda\xa6J\xc7A\xa9D\x8dr\xb9\x1cS+\xd4\x89rF3OW\x9c\xd4n\xa00\xa4\xe4\xd4\xc7 \x0e**\x8c\x9a\x83\x86\xde9\xe7\xf5\x1c\x1c\xe6\xaf6\xf6\xb0\xaa\xa0\xcfj\xa7[\xa0\xf3\x14\xf3\x9c\xd5\xa2\x12}<\x9e\x94\x88t\x82v\xefK\x97\'\x1b\xd3\xb9\xa1\x83=A\xa8\xa3$V\xd3\x12\x80qO%\xeb\xd6\xab\xcc\x81\xee\x1f9\xefK\x91\x88\xe0\x0ek\x91\xfdO\x15%>\xa4\xd7n\x89\xd0\x02*r\xddA\x88n\xc1\xaa|p\xa0\x9dz\xf5\xabt#\x11\xa8\xc9\xa5\xc0]\x86X\xefH\x9bH \x01\x8aQ\xa2\x88\xc6w\x10*\x11\xa3\x88\xdc.\xd2:\xd4\x8d\xe7\xa58\xa8H9\xb9Rk\xb2(%\x07\xcd\x11\xb1\x00\x9c\xf6\xab\x80\xb7_)InqQ\xf7\xb6\xd6\xa6\x12\x1d\x86M8fm\x83\x9e\xd5\x13y\x92\xbdO\x14\xec\x98\xc1\x18\xedM\xc7\x9c\x83\x9e\xf5#a\xa5\xc1\x1c\x1c\x1ak\x7f\xa6[\xcb\x13\x03\x83Nm\x1d\xbc\x81\xc9\xaef\'\xcbnh!D`\x05\xedB\xb3\x19\t-\xde\xabia\x14q2\xa8\xf7\xaf\x9c\xbe\xda\xbc.\xda\xb7\x87\xee&H\x98\xcbk\x97\x8f\x03\xba\xf3\x8a\xfaf\xd9\x8e\xe6\x1fZ\xae\xf8\x9a\xde\x19l.U\xe3\x04\x149\xa4\xc5\x80Q\x87cN9\xce\xb5;\xe6\xbf--\x1d\xa2\x97+\x80A\xc8\xcf\xb5m~\x01\xd5\x1a\rN\xc4,\xbbw\xca\xb9\xc1\xf9\xac\xb3\xc5\x90\xc7k\xe2=N8T*\xa5\xc3\x00\x07\xd6\xa7\xbc/4\x88\xf0\xb0>\xa0\xe0\x03SnP<d\xfb\x8a\x8dn\xc5$\xc5~\x82\xeb\xba\x98m"+hq$\x92 \xf5g\xa5@\xe8\xb0\xdci\xd3C3\xb0\xc9\xe0\xe2\xa9z-\xd4\xf3XB\xf2HY\xb6\x8eM[-\xee\xa6x9n\x87\x8a\xa3Pu\x11\x91\xb1\xabs\xc6\xdd\xeb[\xf3>\xf5k\xb9y%zR:d\xcc\x92<O\xd0\x1e*/\xc3\xd3H\xf0\x90\xc7"\x9fJ\xa0\\\x86\x1c\x1f\x8a\x9b\xf9\x969;\x8a\x86}-"v#57qn$Bv\x8ei\x0b%\x11\x92\xa4\x01\xcdJ\'0\x02}\xaa\x16RD\xfc\x1avE\x0b\xa5\xbb\x83L#\x12\x19j^X\xb7\xa6T\xe2\xabW\x11\x08$\xdd\xc1\xe7\xadO\xc2\xecF\t\xe2\x9b\xdf\xc6\x86\x16\xe3\xa5\x12\xa2\xbag\x1d\xab\x91\xb1F\xc7j\xf6\xd6dx\x97\xa1\xa7r\xa4L\x84\x88\xc7J\x82\xd2y\x0c\x0f<\xe2\xadp\xa2\x95 \x8a\xeccR\x0c\x8f\x8a\xe4\x87K\x1c{\xd5QnV\xdeb\xbbp3\xedV\x08n \x90\x03\xb7\x9aF\xee\xd2\r\xc0\xec\xe74\xee\x08"\xf2\xc7\xa0{WQp\xc4\x0cb\xb9#\x02\x01\xefN\x04\xb0>A\x03\x15Y\xbfxl\xee\x96E\xe0\x13\xda\xac\x8b\x04`\x9fOJ\x85\xd5\xedau\x19Z\xec\xaa\x198\xdc\x1c\x83DM\x86\xef\x83\xb1\xa7\xab43E\xb8\x9c\xee\x15R\xb8\xbc\xfd\x99xF\xd2c\x90\xfe\x95=\xa7"\xf98\xea\x00\xa8\xcdZ\x18\xde6\xca\xf4\xe6\xb8\xde\xb8\xd4\xf0y\xae\xa7\xa5\xca\xf65b\xb2\xbfK\x88\xd4{\xd2\xb7P\xabF\xc0\x0e{U[Ef\x0c\x06x\xc5]\x95APH\xa7c>boM?\xa1\xf0*\xb7\r\xcc\x81L3\xf1\xecjJ\xd2\xeb\x07\xca\x93\x90:\x1a\x8e\xd5\xe1@U\xc0\xc1\xcdqhK\xa2\x13\xd4\x0e\xb5\xd1\x958\xf6\xa0\x80F}\xe9\xe6\xa5i\xe6\x92\xd9\xc6*\x9fu\x88X<m\x89\x14\xfe\xb8\xab\xe3z\xd3\x07\xda\xaaZ\xcd\xbci\x96PA\xa4J\x80\xe4\xf7\xa5Fx\x06\xacz\x16\xab\x05\xfc;d\xc6\xf00sS2$;YH\x1c\xd69o<\xb6\xd7\x91\x18\x9bn\xf3\xea\xadB\xd2W\x9e\xd9Y\xceN)P\xc9\xadpF\xe2\x93,z\x08 \xeci\xac\xe9\x15\xa4\xa8B\x83\x1bg#\xdb=\xaa:\xf2\xce\xc9O\x9fn@\xee@\xa9\x89Q]YXdf\xab\xcd\x12\xab\xb8\x04\xe2\x87\x00\x0c`WWs\xc9\xa4\xc6\xb1m\x18\x08\xc0\x06\xe9R\x1f|2\xc6\xb2FFz\xd5GU\x86=\xa5\xc0\xc1\x07\xb5w\xa4\\JJ\xa9l\x83H\x0cx\xa5\x14\\dV\x83os\xfb\xa5\'\x96\xc6\rHE"\xc8\xbd9\xf6\xa8X\x14\x05C\xef\xd6\xa4\xa2\xf4\xcb\x81\xed\x9a\x90\x87\x8a\x8e\xc3\x9aFg\x8d\xd8\xc7"pzg\xa5R\xb5\x08.\xb4\x9b\xb1sn\xa7\xcb\xceY?\xe2\xb4\x0b\xd8\xd1\xa3\x0eG9\xa8;\x95\x12\xc6U\xf9\x02\xba\xcb\x91\xfd+\xaa\xd8\xc7\xefN\xf4mz\xde\xee59\xc3\xf7\x07\xde\xac\x0f$2\xa9\x12 5\x99\xc9\x04v\xf2+\xc66\xb1l\x1cw\xab\x9e\x91+\xce\x98\x90\xe7\x1d)*\xed\xc1\xae0^FqIL%\xb6\x95\x9e!\x94\xceq\xdb\xf3\xa76s\xad\xf2\xb6\xdfK\xafQR\xa24\xf5\r\xa0\x8a\xae\xce\xa2\xd6\xf1\x9a/I<\xd2\xf0F\x0ev\xf6\xaed\x1e\xdb\x8e\xf5/"3\xc6\xc8\xeb\x9a\xadOmqjY\xed\x89\\\x1e\x9d\xaa\xdd\x1b\x99aVld\x8aGh \xe4R\xc8\xfdi \x91\x9a\x86\xb1\xf1\x02\xb6 \xba]\x8f\xd3\x9e\x86\x8b\xcd2\x07\x94\\[>\xc9\x0fq\xde\x92\xd5m t\xdcS\x9cu\x14\xc3M\x9aU`\xbb\xc9\x03\xde\x93\x9c\xecE+\x1d\xd7oqS\xf6\xba\x84\xf1\x11\x15\xd2\x12\x7f\x9b\x14\xf2\xe6EP\xb2\xa7JU"\x8ex\xc6\xf5\xc9\x03\x83KG\x12\x14\xdaW#\x14\xb5\xce9\xa4m\xce>\xb5\x1c\x16;\xb5\xccO\xb5\xfd\xa9\xe5\xb9\x9e1\xb6Nx\xa8\xcb\xb8R\xde@c\xca\xd4\x95\xb4\xcf,xc\x9e:\xd0+\xa7\x8f\x8a\xe9\xb7>J\xfb\xd1\\n!\x8e\r\x15\xdd\xe98\x15\xff\xd9')
2023-09-20T20:02:21,893 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:02:21,894 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:02:21,895 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:02:21,896 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:02:21,896 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 358, in handle
2023-09-20T20:02:21,897 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.inference(data_preprocess)
2023-09-20T20:02:21,898 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T20:02:21,898 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T20:02:21,899 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 300, in inference
2023-09-20T20:02:21,900 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     marshalled_data = data.to(self.device)
2023-09-20T20:02:21,901 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'NoneType' object has no attribute 'to'
2023-09-20T20:03:18,025 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:03:18,025 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:03:32,319 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:03:32,319 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:03:32,322 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:03:32,322 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:03:32,400 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:03:32,400 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:03:32,495 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:03:32,495 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:03:32,504 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:03:32,504 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:03:32,531 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:03:32,531 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:03:34,458 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:03:34,458 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:03:34,458 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:03:34,458 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:03:34,458 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:03:34,458 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:03:34,458 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:03:34,458 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:03:34,472 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:03:34,472 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:03:34,475 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:03:34,475 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:03:34,583 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:03:34,583 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:03:34,583 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:03:34,583 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:03:34,586 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:03:34,586 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:03:34,587 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:03:34,587 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:03:34,588 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:03:34,588 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:03:34,893 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:03:34,893 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:03:35,462 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=16270
2023-09-20T20:03:35,462 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:03:35,473 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:03:35,474 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]16270
2023-09-20T20:03:35,474 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:03:35,474 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:03:35,475 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:03:35,475 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:03:35,481 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:03:35,481 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:03:35,490 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:03:35,494 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240215494
2023-09-20T20:03:35,494 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240215494
2023-09-20T20:03:35,545 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:03:35,596 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:03:35,596 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:03:35,655 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:03:35,655 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:03:35,655 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:03:35,872 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:03:35,873 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:03:35,873 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/cb8e67a3e0d845daa7538e0c42e50b2e/model.pth
2023-09-20T20:03:35,873 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T20:03:36,359 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695240216
2023-09-20T20:03:38,658 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:03:38,660 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:03:38,660 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:03:38,660 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3115
2023-09-20T20:03:38,660 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3115
2023-09-20T20:03:38,661 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:03:38,661 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:03:38,661 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4194.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695240218
2023-09-20T20:03:38,662 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:53.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240218
2023-09-20T20:03:38,663 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240218663
2023-09-20T20:03:38,663 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240218663
2023-09-20T20:03:38,665 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695240218
2023-09-20T20:03:38,670 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - <PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=1000x684 at 0x7F1D1889F1C0>
2023-09-20T20:03:38,671 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:03:38,671 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:03:38,672 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:03:38,672 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:03:38,672 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 358, in handle
2023-09-20T20:03:38,672 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.inference(data_preprocess)
2023-09-20T20:03:38,672 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T20:03:38,673 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T20:03:38,673 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 300, in inference
2023-09-20T20:03:38,673 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     marshalled_data = data.to(self.device)
2023-09-20T20:03:38,673 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'NoneType' object has no attribute 'to'
2023-09-20T20:03:38,679 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:47218 "POST /predictions/test_model HTTP/1.1" 503 2326
2023-09-20T20:03:38,680 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240218
2023-09-20T20:03:38,680 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2300231192, Inference time ns: 2317618696
2023-09-20T20:03:38,680 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2300231192, Inference time ns: 2317618696
2023-09-20T20:03:38,680 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:03:38,680 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:03:38,680 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 8
2023-09-20T20:03:38,680 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 8
2023-09-20T20:03:38,680 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:9.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240218
2023-09-20T20:05:51,059 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:05:51,059 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:05:51,062 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:05:51,062 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:05:51,145 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:05:51,145 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:05:51,239 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:05:51,239 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:05:51,250 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:05:51,250 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:05:51,278 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:05:51,278 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:05:53,146 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:05:53,146 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:05:53,146 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:05:53,146 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:05:53,146 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:05:53,146 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:05:53,146 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:05:53,146 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:05:53,159 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:05:53,159 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:05:53,162 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:05:53,162 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:05:53,252 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:05:53,252 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:05:53,252 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:05:53,252 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:05:53,256 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:05:53,256 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:05:53,257 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:05:53,257 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:05:53,258 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:05:53,258 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:05:53,587 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:05:53,587 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:05:53,687 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695240353
2023-09-20T20:05:54,280 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=16570
2023-09-20T20:05:54,281 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:05:54,296 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:05:54,297 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]16570
2023-09-20T20:05:54,297 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:05:54,297 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:05:54,298 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:05:54,298 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:05:54,302 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:05:54,302 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:05:54,311 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:05:54,314 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240354314
2023-09-20T20:05:54,314 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240354314
2023-09-20T20:05:54,327 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:05:54,327 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:05:54,339 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:05:54,415 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:05:54,415 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:05:54,416 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:05:54,645 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:05:54,646 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:05:54,646 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/8431e698cdcc4a8da287d7f1764642ce/model.pth
2023-09-20T20:05:54,646 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T20:05:57,550 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:05:57,552 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:05:57,552 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:05:57,552 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3213
2023-09-20T20:05:57,552 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3213
2023-09-20T20:05:57,553 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:05:57,553 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:05:57,553 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4398.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695240357
2023-09-20T20:05:57,554 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:27.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240357
2023-09-20T20:05:57,555 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240357555
2023-09-20T20:05:57,555 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240357555
2023-09-20T20:05:57,557 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695240357
2023-09-20T20:05:57,577 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:05:57,577 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:05:57,577 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:05:57,578 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:05:57,578 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 355, in handle
2023-09-20T20:05:57,579 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     data_preprocess = self.preprocess(data)
2023-09-20T20:05:57,579 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/8431e698cdcc4a8da287d7f1764642ce/handler.py", line 59, in preprocess
2023-09-20T20:05:57,579 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     temp = torch.stack.to(self.device)
2023-09-20T20:05:57,579 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'builtin_function_or_method' object has no attribute 'to'
2023-09-20T20:05:57,583 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:58846 "POST /predictions/test_model HTTP/1.1" 503 3902
2023-09-20T20:05:57,584 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240357
2023-09-20T20:05:57,585 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 3864036613, Inference time ns: 3894655163
2023-09-20T20:05:57,585 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 3864036613, Inference time ns: 3894655163
2023-09-20T20:05:57,586 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:05:57,586 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:05:57,588 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 20
2023-09-20T20:05:57,588 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 20
2023-09-20T20:05:57,588 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:13.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240357
2023-09-20T20:06:40,641 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:06:40,641 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:06:40,645 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:06:40,645 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:06:40,735 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:06:40,735 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:06:40,822 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:06:40,822 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:06:40,830 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:06:40,830 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:06:40,856 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:06:40,856 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:06:42,651 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:06:42,651 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:06:42,652 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:06:42,652 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:06:42,652 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:06:42,652 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:06:42,652 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:06:42,652 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:06:42,663 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:06:42,663 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:06:42,663 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:06:42,663 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:06:42,737 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:06:42,737 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:06:42,738 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:06:42,738 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:06:42,739 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:06:42,739 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:06:42,740 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:06:42,740 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:06:42,743 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:06:42,743 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:06:43,027 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:06:43,027 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:06:43,525 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=16797
2023-09-20T20:06:43,526 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:06:43,535 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:06:43,536 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]16797
2023-09-20T20:06:43,536 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:06:43,537 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:06:43,537 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:06:43,537 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:06:43,543 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:06:43,543 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:06:43,552 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:06:43,556 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240403556
2023-09-20T20:06:43,556 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240403556
2023-09-20T20:06:43,599 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:06:43,625 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:06:43,625 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:06:43,667 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:06:43,667 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:06:43,667 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:06:43,864 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:06:43,865 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:06:43,865 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/60f78decef8f423badbd8a9780622f1a/model.pth
2023-09-20T20:06:43,865 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T20:06:44,167 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695240404
2023-09-20T20:06:46,578 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:06:46,579 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:06:46,579 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:06:46,580 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2981
2023-09-20T20:06:46,580 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2981
2023-09-20T20:06:46,580 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:06:46,580 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:06:46,580 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3922.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695240406
2023-09-20T20:06:46,581 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:44.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240406
2023-09-20T20:06:46,581 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240406581
2023-09-20T20:06:46,581 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240406581
2023-09-20T20:06:46,583 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695240406
2023-09-20T20:06:46,602 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:06:46,602 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:06:46,602 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:06:46,602 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:06:46,603 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 355, in handle
2023-09-20T20:06:46,603 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     data_preprocess = self.preprocess(data)
2023-09-20T20:06:46,603 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/60f78decef8f423badbd8a9780622f1a/handler.py", line 59, in preprocess
2023-09-20T20:06:46,603 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     temp = torch.stack(images).to(self.device)
2023-09-20T20:06:46,603 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - TypeError: expected Tensor as element 0 in argument 0, but got numpy.ndarray
2023-09-20T20:06:46,607 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:47606 "POST /predictions/test_model HTTP/1.1" 503 2445
2023-09-20T20:06:46,608 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240406
2023-09-20T20:06:46,608 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2412453697, Inference time ns: 2439063233
2023-09-20T20:06:46,608 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2412453697, Inference time ns: 2439063233
2023-09-20T20:06:46,608 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:06:46,608 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:06:46,609 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 19
2023-09-20T20:06:46,609 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 19
2023-09-20T20:06:46,609 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:9.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240406
2023-09-20T20:07:43,599 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:07:43,599 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:08:37,242 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:08:37,242 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:08:37,245 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:08:37,245 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:08:37,320 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:08:37,320 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:08:37,401 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:08:37,401 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:08:37,414 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:08:37,414 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:08:37,442 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:08:37,442 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:08:39,151 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:08:39,151 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:08:39,151 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:08:39,151 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:08:39,151 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:08:39,151 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:08:39,152 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:08:39,152 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:08:39,162 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:08:39,162 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:08:39,163 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:08:39,163 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:08:39,235 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:08:39,235 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:08:39,235 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:08:39,235 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:08:39,237 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:08:39,237 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:08:39,237 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:08:39,237 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:08:39,238 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:08:39,238 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:08:39,532 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:08:39,532 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:08:39,551 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695240519
2023-09-20T20:08:40,129 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:08:40,129 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:08:40,235 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=17044
2023-09-20T20:08:40,236 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:08:40,246 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:08:40,246 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]17044
2023-09-20T20:08:40,247 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:08:40,247 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:08:40,248 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:08:40,248 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:08:40,251 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:08:40,251 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:08:40,258 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:08:40,259 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240520259
2023-09-20T20:08:40,259 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240520259
2023-09-20T20:08:40,283 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:08:40,361 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:08:40,361 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:08:40,362 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:08:40,557 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:08:40,557 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:08:40,557 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/91278ba633064915ae7e031d55cbcfa9/model.pth
2023-09-20T20:08:40,558 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T20:08:43,148 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:08:43,150 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:08:43,150 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:08:43,150 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2867
2023-09-20T20:08:43,150 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2867
2023-09-20T20:08:43,150 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:08:43,150 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:08:43,151 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3992.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695240523
2023-09-20T20:08:43,151 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:25.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240523
2023-09-20T20:08:43,151 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240523151
2023-09-20T20:08:43,151 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240523151
2023-09-20T20:08:43,153 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695240523
2023-09-20T20:08:43,172 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:08:43,173 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:08:43,173 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:08:43,173 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:08:43,174 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 355, in handle
2023-09-20T20:08:43,174 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     data_preprocess = self.preprocess(data)
2023-09-20T20:08:43,174 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/91278ba633064915ae7e031d55cbcfa9/handler.py", line 58, in preprocess
2023-09-20T20:08:43,174 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     images[0] = np.array(image)
2023-09-20T20:08:43,174 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - ValueError: could not broadcast input array from shape (256,256,3) into shape (3,256,256)
2023-09-20T20:08:43,178 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:55540 "POST /predictions/test_model HTTP/1.1" 503 3634
2023-09-20T20:08:43,178 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240523
2023-09-20T20:08:43,179 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 3597976142, Inference time ns: 3625064315
2023-09-20T20:08:43,179 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 3597976142, Inference time ns: 3625064315
2023-09-20T20:08:43,179 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:08:43,179 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:08:43,179 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 20
2023-09-20T20:08:43,179 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 20
2023-09-20T20:08:43,179 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:8.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240523
2023-09-20T20:09:29,295 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:09:29,295 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:09:29,298 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:09:29,298 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:09:29,370 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:09:29,370 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:09:29,453 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:09:29,453 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:09:29,461 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:09:29,461 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:09:29,486 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:09:29,486 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:09:31,395 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:09:31,395 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:09:31,395 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:09:31,395 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:09:31,396 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:09:31,396 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:09:31,396 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:09:31,396 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:09:31,407 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:09:31,407 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:09:31,408 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:09:31,408 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:09:31,488 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:09:31,488 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:09:31,488 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:09:31,488 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:09:31,490 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:09:31,490 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:09:31,490 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:09:31,490 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:09:31,491 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:09:31,491 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:09:31,662 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695240571
2023-09-20T20:09:31,787 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:09:31,787 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:09:32,369 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=17262
2023-09-20T20:09:32,370 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:09:32,381 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:09:32,381 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]17262
2023-09-20T20:09:32,382 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:09:32,382 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:09:32,382 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:09:32,382 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:09:32,386 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:09:32,386 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:09:32,396 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:09:32,399 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240572398
2023-09-20T20:09:32,399 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240572398
2023-09-20T20:09:32,422 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:09:32,486 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:09:32,487 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:09:32,487 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:09:32,493 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:09:32,493 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:09:32,699 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:09:32,700 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:09:32,700 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/875439aa861e4052af5df9acf806ef04/model.pth
2023-09-20T20:09:32,700 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T20:09:35,297 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:09:35,299 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:09:35,299 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:09:35,299 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2877
2023-09-20T20:09:35,299 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2877
2023-09-20T20:09:35,300 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:09:35,300 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:09:35,300 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3898.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695240575
2023-09-20T20:09:35,301 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:26.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240575
2023-09-20T20:09:35,301 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240575301
2023-09-20T20:09:35,301 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240575301
2023-09-20T20:09:35,303 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695240575
2023-09-20T20:09:35,323 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:09:35,323 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:09:35,323 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:09:35,323 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:09:35,323 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 355, in handle
2023-09-20T20:09:35,324 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     data_preprocess = self.preprocess(data)
2023-09-20T20:09:35,324 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/875439aa861e4052af5df9acf806ef04/handler.py", line 58, in preprocess
2023-09-20T20:09:35,324 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     image = image.reshape((3, 256, 256))
2023-09-20T20:09:35,324 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'Image' object has no attribute 'reshape'
2023-09-20T20:09:35,329 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:49154 "POST /predictions/test_model HTTP/1.1" 503 3672
2023-09-20T20:09:35,329 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240575
2023-09-20T20:09:35,330 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 3635910028, Inference time ns: 3664946180
2023-09-20T20:09:35,330 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 3635910028, Inference time ns: 3664946180
2023-09-20T20:09:35,331 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:09:35,331 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:09:35,331 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 22
2023-09-20T20:09:35,331 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 22
2023-09-20T20:09:35,331 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:8.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240575
2023-09-20T20:10:00,101 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:10:00,101 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:10:00,105 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:10:00,105 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:10:00,181 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:10:00,181 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:10:00,266 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:10:00,266 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:10:00,275 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:10:00,275 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:10:00,302 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:10:00,302 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:10:01,971 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:10:01,971 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:10:01,971 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:10:01,971 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:10:01,972 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:10:01,972 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:10:01,972 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:10:01,972 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:10:01,983 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:10:01,983 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:10:01,984 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:10:01,984 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:10:02,072 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:10:02,072 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:10:02,072 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:10:02,072 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:10:02,074 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:10:02,074 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:10:02,075 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:10:02,075 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:10:02,076 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:10:02,076 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:10:02,386 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:10:02,386 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:10:02,467 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695240602
2023-09-20T20:10:02,985 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=17472
2023-09-20T20:10:02,986 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:10:02,997 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:10:02,997 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]17472
2023-09-20T20:10:02,998 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:10:02,998 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:10:02,998 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:10:02,998 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:10:03,001 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:10:03,001 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:10:03,010 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:10:03,012 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240603012
2023-09-20T20:10:03,012 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240603012
2023-09-20T20:10:03,041 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:10:03,072 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:10:03,072 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:10:03,107 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:10:03,107 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:10:03,107 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:10:03,305 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:10:03,306 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:10:03,306 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/c99e04101ace41a49d832094e7bb5ef6/model.pth
2023-09-20T20:10:03,307 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T20:10:05,935 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:10:05,937 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:10:05,937 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:10:05,937 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2897
2023-09-20T20:10:05,937 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2897
2023-09-20T20:10:05,938 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:10:05,938 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:10:05,938 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3959.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695240605
2023-09-20T20:10:05,939 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:30.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240605
2023-09-20T20:10:05,939 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240605939
2023-09-20T20:10:05,939 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240605939
2023-09-20T20:10:05,941 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695240605
2023-09-20T20:10:05,970 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - tensor([[[[255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:10:05,971 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:10:05,971 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:10:05,971 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:10:05,971 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [172.,  79., 243.,  ..., 168., 245., 206.],
2023-09-20T20:10:05,971 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [154., 242., 199.,  ..., 255., 255., 255.],
2023-09-20T20:10:05,972 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 192., 104., 250.]],
2023-09-20T20:10:05,972 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T20:10:05,972 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -          [[181.,  90., 239.,  ..., 155., 240., 205.],
2023-09-20T20:10:05,977 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [145., 242., 201.,  ..., 255., 255., 255.],
2023-09-20T20:10:05,978 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 193., 103., 250.],
2023-09-20T20:10:05,978 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:10:05,978 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [  6., 175.,  49.,  ..., 233., 229., 228.],
2023-09-20T20:10:05,979 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [200., 188., 173.,  ..., 215.,  47., 255.],
2023-09-20T20:10:05,979 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [217.,  47., 254.,  ...,   3., 137.,  28.]],
2023-09-20T20:10:05,979 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T20:10:05,980 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -          [[  5., 177.,  55.,  ..., 233., 229., 228.],
2023-09-20T20:10:05,980 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [205., 193., 178.,  ..., 212.,  35., 255.],
2023-09-20T20:10:05,980 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [216.,  40., 253.,  ...,   3., 136.,  31.],
2023-09-20T20:10:05,981 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:10:05,981 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [179., 165., 145.,  ..., 154., 115., 204.],
2023-09-20T20:10:05,981 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [178., 147., 209.,  ..., 179., 208., 186.],
2023-09-20T20:10:05,981 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [167., 204., 179.,  ..., 220., 215., 211.]]]], device='cuda:0',
2023-09-20T20:10:05,982 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -        dtype=torch.float64)
2023-09-20T20:10:05,983 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:10:05,984 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:10:05,984 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:10:05,984 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:10:05,984 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 358, in handle
2023-09-20T20:10:05,985 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.inference(data_preprocess)
2023-09-20T20:10:05,985 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T20:10:05,985 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T20:10:05,986 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 301, in inference
2023-09-20T20:10:05,986 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     results = self.model(marshalled_data, *args, **kwargs)
2023-09-20T20:10:05,986 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
2023-09-20T20:10:05,987 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return forward_call(*input, **kwargs)
2023-09-20T20:10:05,988 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:48954 "POST /predictions/test_model HTTP/1.1" 503 3526
2023-09-20T20:10:05,988 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240605
2023-09-20T20:10:05,989 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 3468557945, Inference time ns: 3518013985
2023-09-20T20:10:05,989 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 3468557945, Inference time ns: 3518013985
2023-09-20T20:10:05,989 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:10:05,989 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:10:05,989 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 42
2023-09-20T20:10:05,989 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 42
2023-09-20T20:10:05,989 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:8.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240605
2023-09-20T20:10:05,987 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/torchvision/models/resnet.py", line 285, in forward
2023-09-20T20:10:05,993 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return self._forward_impl(x)
2023-09-20T20:10:05,993 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/torchvision/models/resnet.py", line 268, in _forward_impl
2023-09-20T20:10:05,993 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     x = self.conv1(x)
2023-09-20T20:10:05,994 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
2023-09-20T20:10:05,995 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return forward_call(*input, **kwargs)
2023-09-20T20:10:05,995 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 457, in forward
2023-09-20T20:10:05,995 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return self._conv_forward(input, self.weight, self.bias)
2023-09-20T20:10:05,996 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 453, in _conv_forward
2023-09-20T20:10:05,996 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return F.conv2d(input, weight, bias, self.stride,
2023-09-20T20:10:05,996 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - RuntimeError: Input type (torch.cuda.DoubleTensor) and weight type (torch.cuda.FloatTensor) should be the same
2023-09-20T20:10:44,400 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:10:44,400 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:10:44,403 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:10:44,403 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:10:44,481 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:10:44,481 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:10:44,562 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:10:44,562 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:10:44,570 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:10:44,570 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:10:44,598 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:10:44,598 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:10:46,315 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:10:46,315 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:10:46,316 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:10:46,316 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:10:46,316 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:10:46,316 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:10:46,316 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:10:46,316 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:10:46,327 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:10:46,328 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:10:46,328 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:10:46,327 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:10:46,414 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:10:46,414 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:10:46,414 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:10:46,414 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:10:46,417 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:10:46,417 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:10:46,417 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:10:46,417 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:10:46,419 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:10:46,419 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:10:46,716 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:10:46,716 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:10:47,195 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=17687
2023-09-20T20:10:47,196 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:10:47,206 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:10:47,207 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]17687
2023-09-20T20:10:47,207 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:10:47,208 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:10:47,208 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:10:47,208 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:10:47,213 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:10:47,213 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:10:47,222 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:10:47,226 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240647226
2023-09-20T20:10:47,226 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240647226
2023-09-20T20:10:47,264 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:10:47,334 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:10:47,334 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:10:47,335 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:10:47,346 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:10:47,346 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:10:47,541 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:10:47,542 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:10:47,542 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/d5346515d6b44dfe902095a8ee25a86c/model.pth
2023-09-20T20:10:47,542 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T20:10:48,134 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695240648
2023-09-20T20:10:50,212 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:10:50,214 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:10:50,214 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:10:50,215 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2948
2023-09-20T20:10:50,215 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2948
2023-09-20T20:10:50,215 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:10:50,215 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:10:50,216 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3893.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695240650
2023-09-20T20:10:50,217 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:43.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240650
2023-09-20T20:10:50,217 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240650217
2023-09-20T20:10:50,217 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240650217
2023-09-20T20:10:50,219 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695240650
2023-09-20T20:10:50,248 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - tensor([[[[255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:10:50,248 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:10:50,248 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:10:50,249 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:10:50,249 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [172.,  79., 243.,  ..., 168., 245., 206.],
2023-09-20T20:10:50,249 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [154., 242., 199.,  ..., 255., 255., 255.],
2023-09-20T20:10:50,249 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 192., 104., 250.]],
2023-09-20T20:10:50,249 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T20:10:50,249 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -          [[181.,  90., 239.,  ..., 155., 240., 205.],
2023-09-20T20:10:50,250 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [145., 242., 201.,  ..., 255., 255., 255.],
2023-09-20T20:10:50,250 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 193., 103., 250.],
2023-09-20T20:10:50,250 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:10:50,250 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [  6., 175.,  49.,  ..., 233., 229., 228.],
2023-09-20T20:10:50,250 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [200., 188., 173.,  ..., 215.,  47., 255.],
2023-09-20T20:10:50,250 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [217.,  47., 254.,  ...,   3., 137.,  28.]],
2023-09-20T20:10:50,251 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T20:10:50,251 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -          [[  5., 177.,  55.,  ..., 233., 229., 228.],
2023-09-20T20:10:50,251 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [205., 193., 178.,  ..., 212.,  35., 255.],
2023-09-20T20:10:50,251 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [216.,  40., 253.,  ...,   3., 136.,  31.],
2023-09-20T20:10:50,251 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:10:50,251 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [179., 165., 145.,  ..., 154., 115., 204.],
2023-09-20T20:10:50,252 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [178., 147., 209.,  ..., 179., 208., 186.],
2023-09-20T20:10:50,252 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [167., 204., 179.,  ..., 220., 215., 211.]]]], device='cuda:0',
2023-09-20T20:10:50,252 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -        dtype=torch.float64)
2023-09-20T20:10:50,260 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:10:50,260 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:10:50,261 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:10:50,261 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:10:50,261 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 358, in handle
2023-09-20T20:10:50,261 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.inference(data_preprocess)
2023-09-20T20:10:50,262 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T20:10:50,262 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T20:10:50,262 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 301, in inference
2023-09-20T20:10:50,262 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     results = self.model(marshalled_data, *args, **kwargs)
2023-09-20T20:10:50,262 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
2023-09-20T20:10:50,262 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return forward_call(*input, **kwargs)
2023-09-20T20:10:50,263 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/torchvision/models/resnet.py", line 285, in forward
2023-09-20T20:10:50,263 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return self._forward_impl(x)
2023-09-20T20:10:50,263 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/torchvision/models/resnet.py", line 268, in _forward_impl
2023-09-20T20:10:50,263 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     x = self.conv1(x)
2023-09-20T20:10:50,264 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
2023-09-20T20:10:50,264 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return forward_call(*input, **kwargs)
2023-09-20T20:10:50,264 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 457, in forward
2023-09-20T20:10:50,264 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return self._conv_forward(input, self.weight, self.bias)
2023-09-20T20:10:50,264 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 453, in _conv_forward
2023-09-20T20:10:50,265 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return F.conv2d(input, weight, bias, self.stride,
2023-09-20T20:10:50,265 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - RuntimeError: Input type (torch.cuda.DoubleTensor) and weight type (torch.cuda.FloatTensor) should be the same
2023-09-20T20:10:50,266 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:33756 "POST /predictions/test_model HTTP/1.1" 503 2137
2023-09-20T20:10:50,266 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240650
2023-09-20T20:10:50,267 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2080942982, Inference time ns: 2130646349
2023-09-20T20:10:50,267 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2080942982, Inference time ns: 2130646349
2023-09-20T20:10:50,267 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:10:50,267 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:10:50,267 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 42
2023-09-20T20:10:50,267 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 42
2023-09-20T20:10:50,267 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:8.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240650
2023-09-20T20:11:47,252 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:11:47,252 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:12:08,167 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:12:08,167 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:12:08,170 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:12:08,170 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:12:08,244 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:12:08,244 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:12:08,327 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:12:08,327 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:12:08,335 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:12:08,335 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:12:08,360 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:12:08,360 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:12:10,023 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:12:10,023 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:12:10,024 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:12:10,024 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:12:10,024 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:12:10,024 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:12:10,024 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:12:10,024 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:12:10,035 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:12:10,036 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:12:10,036 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:12:10,035 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:12:10,111 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:12:10,111 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:12:10,111 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:12:10,111 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:12:10,113 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:12:10,113 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:12:10,113 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:12:10,113 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:12:10,114 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:12:10,114 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:12:10,400 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:12:10,400 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:12:10,924 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=17956
2023-09-20T20:12:10,925 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:12:10,940 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:12:10,941 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]17956
2023-09-20T20:12:10,942 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:12:10,942 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:12:10,942 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:12:10,942 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:12:10,948 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:12:10,948 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:12:10,958 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:12:10,961 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240730961
2023-09-20T20:12:10,961 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240730961
2023-09-20T20:12:11,001 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:12:11,034 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:12:11,034 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:12:11,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:12:11,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:12:11,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:12:11,274 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:12:11,274 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:12:11,275 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/ba6a8cbff98048f499535b3a1f114c1d/model.pth
2023-09-20T20:12:11,275 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T20:12:13,909 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:12:13,917 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:12:13,917 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:12:13,917 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2916
2023-09-20T20:12:13,917 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2916
2023-09-20T20:12:13,918 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:12:13,918 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:12:13,920 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3887.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695240733
2023-09-20T20:12:13,921 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:44.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240733
2023-09-20T20:12:18,362 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695240738
2023-09-20T20:12:18,365 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240738365
2023-09-20T20:12:18,365 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240738365
2023-09-20T20:12:18,369 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695240738
2023-09-20T20:12:18,398 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - tensor([[[[255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:12:18,399 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:12:18,400 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:12:18,400 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:12:18,400 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [172.,  79., 243.,  ..., 168., 245., 206.],
2023-09-20T20:12:18,401 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [154., 242., 199.,  ..., 255., 255., 255.],
2023-09-20T20:12:18,401 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 192., 104., 250.]],
2023-09-20T20:12:18,401 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T20:12:18,402 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -          [[181.,  90., 239.,  ..., 155., 240., 205.],
2023-09-20T20:12:18,402 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [145., 242., 201.,  ..., 255., 255., 255.],
2023-09-20T20:12:18,403 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 193., 103., 250.],
2023-09-20T20:12:18,403 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:12:18,404 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [  6., 175.,  49.,  ..., 233., 229., 228.],
2023-09-20T20:12:18,404 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [200., 188., 173.,  ..., 215.,  47., 255.],
2023-09-20T20:12:18,405 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [217.,  47., 254.,  ...,   3., 137.,  28.]],
2023-09-20T20:12:18,406 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T20:12:18,406 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -          [[  5., 177.,  55.,  ..., 233., 229., 228.],
2023-09-20T20:12:18,406 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [205., 193., 178.,  ..., 212.,  35., 255.],
2023-09-20T20:12:18,407 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [216.,  40., 253.,  ...,   3., 136.,  31.],
2023-09-20T20:12:18,407 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:12:18,408 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [179., 165., 145.,  ..., 154., 115., 204.],
2023-09-20T20:12:18,408 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [178., 147., 209.,  ..., 179., 208., 186.],
2023-09-20T20:12:18,408 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [167., 204., 179.,  ..., 220., 215., 211.]]]], device='cuda:0')
2023-09-20T20:12:18,635 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:266.95|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695240738,a862b046-537d-428d-a976-2b20d4e45b66, pattern=[METRICS]
2023-09-20T20:12:18,635 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:266.95|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695240738,a862b046-537d-428d-a976-2b20d4e45b66, pattern=[METRICS]
2023-09-20T20:12:18,636 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - HandlerTime.ms:266.95|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:a862b046-537d-428d-a976-2b20d4e45b66,timestamp:1695240738
2023-09-20T20:12:18,637 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]PredictionTime.Milliseconds:267.37|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695240738,a862b046-537d-428d-a976-2b20d4e45b66, pattern=[METRICS]
2023-09-20T20:12:18,637 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]PredictionTime.Milliseconds:267.37|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695240738,a862b046-537d-428d-a976-2b20d4e45b66, pattern=[METRICS]
2023-09-20T20:12:18,637 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - PredictionTime.ms:267.37|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:a862b046-537d-428d-a976-2b20d4e45b66,timestamp:1695240738
2023-09-20T20:12:18,639 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:51862 "POST /predictions/test_model HTTP/1.1" 200 280
2023-09-20T20:12:18,639 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests2XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240738
2023-09-20T20:12:18,639 [INFO ] W-9000-test_model_1.0 TS_METRICS - ts_inference_latency_microseconds.Microseconds:273325.453|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695240738
2023-09-20T20:12:18,640 [INFO ] W-9000-test_model_1.0 TS_METRICS - ts_queue_latency_microseconds.Microseconds:247.128|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695240738
2023-09-20T20:12:18,640 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 247128, Backend time ns: 275204281
2023-09-20T20:12:18,640 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 247128, Backend time ns: 275204281
2023-09-20T20:12:18,640 [INFO ] W-9000-test_model_1.0 TS_METRICS - QueueTime.Milliseconds:0.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240738
2023-09-20T20:12:18,640 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:12:18,640 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:12:18,640 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 272
2023-09-20T20:12:18,640 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 272
2023-09-20T20:12:18,640 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:3.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240738
2023-09-20T20:13:05,545 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:13:05,545 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:13:05,548 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:13:05,548 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:13:05,621 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:13:05,621 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:13:05,718 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:13:05,718 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:13:05,726 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:13:05,726 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:13:05,757 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:13:05,757 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:13:07,549 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:13:07,549 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:13:07,549 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:13:07,549 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:13:07,549 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:13:07,549 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:13:07,550 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:13:07,550 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:13:07,561 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:13:07,561 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:13:07,563 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:13:07,563 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:13:07,652 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:13:07,652 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:13:07,653 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:13:07,653 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:13:07,654 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:13:07,654 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:13:07,655 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:13:07,655 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:13:07,656 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:13:07,656 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:13:07,967 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:13:07,967 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:13:08,493 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=18234
2023-09-20T20:13:08,495 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:13:08,504 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:13:08,504 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]18234
2023-09-20T20:13:08,504 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:13:08,504 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:13:08,505 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:13:08,505 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:13:08,510 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:13:08,510 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:13:08,519 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:13:08,523 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240788523
2023-09-20T20:13:08,523 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240788523
2023-09-20T20:13:08,560 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:13:08,593 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:13:08,593 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:13:08,630 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:13:08,631 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:13:08,631 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:13:08,821 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:13:08,822 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:13:08,823 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/ca34f33bb42c4c888a256372618c4e70/model.pth
2023-09-20T20:13:08,823 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T20:13:11,520 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - ResNet(
2023-09-20T20:13:11,520 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
2023-09-20T20:13:11,521 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,521 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (relu): ReLU(inplace=True)
2023-09-20T20:13:11,521 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
2023-09-20T20:13:11,521 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer1): Sequential(
2023-09-20T20:13:11,521 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:13:11,522 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,522 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,522 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:13:11,522 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,523 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,523 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,523 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,523 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:13:11,523 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,524 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,524 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:13:11,524 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,524 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:13:11,525 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,525 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,525 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:13:11,525 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,525 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,526 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,526 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,526 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,527 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:13:11,527 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,527 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,527 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:13:11,527 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,527 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,528 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,528 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,528 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:13:11,528 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,528 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:13:11,528 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2968
2023-09-20T20:13:11,528 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:13:11,528 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2968
2023-09-20T20:13:11,528 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer2): Sequential(
2023-09-20T20:13:11,529 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:13:11,529 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:13:11,529 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,529 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:13:11,529 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,529 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T20:13:11,530 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,530 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,530 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,530 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,530 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:13:11,531 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T20:13:11,531 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,531 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:13:11,531 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,531 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:13:11,531 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,532 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,532 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:13:11,532 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,532 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,532 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,533 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,533 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,533 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:13:11,533 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,533 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,533 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:13:11,534 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,534 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,534 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,534 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3972.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695240791
2023-09-20T20:13:11,534 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,534 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:43.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240791
2023-09-20T20:13:11,534 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,535 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (3): Bottleneck(
2023-09-20T20:13:11,535 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,535 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,535 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:13:11,535 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,535 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,536 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,536 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,536 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,536 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:13:11,536 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer3): Sequential(
2023-09-20T20:13:11,536 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:13:11,537 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,537 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,537 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T20:13:11,537 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,537 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,538 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,538 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,538 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:13:11,538 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T20:13:11,538 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,538 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:13:11,539 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,539 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:13:11,539 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,539 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,539 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:13:11,539 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,539 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,540 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,540 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,540 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,540 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:13:11,540 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,540 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,541 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:13:11,541 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,541 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,541 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,541 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,541 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,542 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (3): Bottleneck(
2023-09-20T20:13:11,542 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,542 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,542 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:13:11,542 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,542 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,543 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,543 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,543 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,543 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (4): Bottleneck(
2023-09-20T20:13:11,543 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,543 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,543 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:13:11,543 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,544 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,544 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,544 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,544 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,544 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (5): Bottleneck(
2023-09-20T20:13:11,544 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,545 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,545 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:13:11,545 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,545 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,545 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,545 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,546 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,546 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:13:11,546 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer4): Sequential(
2023-09-20T20:13:11,546 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:13:11,546 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,546 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,547 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T20:13:11,547 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,547 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,547 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,547 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,547 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:13:11,547 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T20:13:11,548 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,548 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:13:11,548 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,548 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:13:11,548 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,548 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,548 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:13:11,548 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,549 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,549 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,549 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,549 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,549 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:13:11,549 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,549 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,549 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:13:11,550 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,550 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:13:11,550 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:13:11,550 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:13:11,550 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:13:11,550 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:13:11,550 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
2023-09-20T20:13:11,551 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (fc): Linear(in_features=2048, out_features=1000, bias=True)
2023-09-20T20:13:11,551 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - )
2023-09-20T20:13:11,551 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:14:07,827 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:14:07,827 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:14:07,830 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:14:07,830 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:14:07,911 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:14:07,911 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:14:08,000 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:14:08,000 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:14:08,008 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:14:08,008 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:14:08,033 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:14:08,033 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:14:09,828 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:14:09,828 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:14:09,828 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:14:09,828 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:14:09,828 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:14:09,828 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:14:09,828 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:14:09,828 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:14:09,840 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:14:09,840 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:14:09,840 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:14:09,840 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:14:09,917 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:14:09,917 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:14:09,918 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:14:09,918 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:14:09,922 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:14:09,922 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:14:09,923 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:14:09,923 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:14:09,926 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:14:09,926 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:14:10,215 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:14:10,215 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:14:10,773 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:14:10,773 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:14:10,780 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=18435
2023-09-20T20:14:10,781 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:14:10,787 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:14:10,788 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]18435
2023-09-20T20:14:10,788 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:14:10,788 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:14:10,789 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:14:10,789 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:14:10,794 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:14:10,794 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:14:10,802 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:14:10,806 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240850806
2023-09-20T20:14:10,806 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240850806
2023-09-20T20:14:10,844 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:14:10,916 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:14:10,917 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:14:10,917 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:14:11,127 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:14:11,127 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:14:11,128 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/9a7204bf2fc64015aecd435e864bf582/model.pth
2023-09-20T20:14:11,128 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T20:14:14,063 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - ResNet(
2023-09-20T20:14:14,064 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
2023-09-20T20:14:14,064 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,064 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (relu): ReLU(inplace=True)
2023-09-20T20:14:14,065 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
2023-09-20T20:14:14,065 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer1): Sequential(
2023-09-20T20:14:14,066 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:14:14,066 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,066 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,067 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:14:14,067 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,067 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,067 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,067 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,067 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:14:14,067 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,068 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,068 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:14:14,069 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,069 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:14:14,069 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,070 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,070 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:14:14,070 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,070 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,070 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,071 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,071 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,071 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:14:14,071 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,071 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,071 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:14:14,071 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,072 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,072 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,072 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,072 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,072 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:14:14,072 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer2): Sequential(
2023-09-20T20:14:14,072 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:14:14,072 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:14:14,072 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:14:14,073 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3228
2023-09-20T20:14:14,073 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,073 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3228
2023-09-20T20:14:14,073 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,073 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T20:14:14,073 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:14:14,073 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,073 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:14:14,074 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,074 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,074 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,074 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:14:14,074 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T20:14:14,074 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,075 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:14:14,075 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,075 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:14:14,075 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,075 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,075 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:14:14,075 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,076 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,076 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,076 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,076 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,076 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:14:14,076 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,077 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,077 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:14:14,077 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,077 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,077 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,077 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,078 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,078 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (3): Bottleneck(
2023-09-20T20:14:14,078 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4239.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695240854
2023-09-20T20:14:14,078 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,079 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:45.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240854
2023-09-20T20:14:14,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:14:14,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:14:14,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer3): Sequential(
2023-09-20T20:14:14,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:14:14,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T20:14:14,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:14:14,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T20:14:14,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:14:14,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:14:14,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:14:14,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,083 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,083 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,083 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,083 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,083 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:14:14,083 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,084 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,084 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:14:14,084 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,084 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,084 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,084 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,084 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,085 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (3): Bottleneck(
2023-09-20T20:14:14,085 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,085 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,085 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:14:14,085 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,085 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (4): Bottleneck(
2023-09-20T20:14:14,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:14:14,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,087 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,087 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,087 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,087 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,087 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (5): Bottleneck(
2023-09-20T20:14:14,087 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,088 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,088 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:14:14,088 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,088 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,088 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,088 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,088 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,089 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:14:14,089 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer4): Sequential(
2023-09-20T20:14:14,089 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:14:14,089 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,089 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,089 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T20:14:14,089 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,089 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,090 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,090 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,090 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:14:14,090 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T20:14:14,090 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,090 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:14:14,090 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,090 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:14:14,091 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,091 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,091 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:14:14,091 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,091 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,091 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,091 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,091 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,091 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:14:14,092 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,092 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,092 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:14:14,092 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,092 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:14:14,092 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:14:14,092 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:14:14,092 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:14:14,093 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:14:14,093 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
2023-09-20T20:14:14,093 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (fc): Linear(in_features=2048, out_features=2, bias=True)
2023-09-20T20:14:14,093 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - )
2023-09-20T20:14:14,093 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:14:18,687 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695240858
2023-09-20T20:14:18,690 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240858690
2023-09-20T20:14:18,690 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240858690
2023-09-20T20:14:18,692 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695240858
2023-09-20T20:14:18,726 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - tensor([[[[255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:14:18,726 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:14:18,726 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:14:18,726 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:14:18,726 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [172.,  79., 243.,  ..., 168., 245., 206.],
2023-09-20T20:14:18,726 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [154., 242., 199.,  ..., 255., 255., 255.],
2023-09-20T20:14:18,727 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 192., 104., 250.]],
2023-09-20T20:14:18,727 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T20:14:18,727 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -          [[181.,  90., 239.,  ..., 155., 240., 205.],
2023-09-20T20:14:18,727 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [145., 242., 201.,  ..., 255., 255., 255.],
2023-09-20T20:14:18,727 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 193., 103., 250.],
2023-09-20T20:14:18,727 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:14:18,727 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [  6., 175.,  49.,  ..., 233., 229., 228.],
2023-09-20T20:14:18,727 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [200., 188., 173.,  ..., 215.,  47., 255.],
2023-09-20T20:14:18,727 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [217.,  47., 254.,  ...,   3., 137.,  28.]],
2023-09-20T20:14:18,728 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T20:14:18,728 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -          [[  5., 177.,  55.,  ..., 233., 229., 228.],
2023-09-20T20:14:18,728 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [205., 193., 178.,  ..., 212.,  35., 255.],
2023-09-20T20:14:18,728 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [216.,  40., 253.,  ...,   3., 136.,  31.],
2023-09-20T20:14:18,728 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:14:18,728 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [179., 165., 145.,  ..., 154., 115., 204.],
2023-09-20T20:14:18,728 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [178., 147., 209.,  ..., 179., 208., 186.],
2023-09-20T20:14:18,728 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [167., 204., 179.,  ..., 220., 215., 211.]]]], device='cuda:0')
2023-09-20T20:14:18,926 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:233.71|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695240858,3c127bac-78ed-46a3-a685-5ecfd82506d6, pattern=[METRICS]
2023-09-20T20:14:18,926 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:233.71|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695240858,3c127bac-78ed-46a3-a685-5ecfd82506d6, pattern=[METRICS]
2023-09-20T20:14:18,928 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - HandlerTime.ms:233.71|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:3c127bac-78ed-46a3-a685-5ecfd82506d6,timestamp:1695240858
2023-09-20T20:14:18,928 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:36108 "POST /predictions/test_model HTTP/1.1" 200 243
2023-09-20T20:14:18,928 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]PredictionTime.Milliseconds:233.99|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695240858,3c127bac-78ed-46a3-a685-5ecfd82506d6, pattern=[METRICS]
2023-09-20T20:14:18,928 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]PredictionTime.Milliseconds:233.99|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695240858,3c127bac-78ed-46a3-a685-5ecfd82506d6, pattern=[METRICS]
2023-09-20T20:14:18,928 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests2XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240858
2023-09-20T20:14:18,928 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - PredictionTime.ms:233.99|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:3c127bac-78ed-46a3-a685-5ecfd82506d6,timestamp:1695240858
2023-09-20T20:14:18,929 [INFO ] W-9000-test_model_1.0 TS_METRICS - ts_inference_latency_microseconds.Microseconds:237512.819|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695240858
2023-09-20T20:14:18,929 [INFO ] W-9000-test_model_1.0 TS_METRICS - ts_queue_latency_microseconds.Microseconds:219.645|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695240858
2023-09-20T20:14:18,929 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 219645, Backend time ns: 239384113
2023-09-20T20:14:18,929 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 219645, Backend time ns: 239384113
2023-09-20T20:14:18,929 [INFO ] W-9000-test_model_1.0 TS_METRICS - QueueTime.Milliseconds:0.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240858
2023-09-20T20:14:18,929 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:14:18,929 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:14:18,930 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 236
2023-09-20T20:14:18,930 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 236
2023-09-20T20:14:18,930 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:4.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240858
2023-09-20T20:15:10,839 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:15:10,839 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:16:10,804 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:16:10,804 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:16:26,816 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:16:26,816 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:16:26,820 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:16:26,820 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:16:26,902 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:16:26,902 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:16:26,995 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:16:26,995 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:16:27,003 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:16:27,003 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:16:27,028 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:16:27,028 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:16:28,685 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:16:28,685 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:16:28,685 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:16:28,685 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:16:28,686 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:16:28,686 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:16:28,686 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:16:28,686 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:16:28,697 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:16:28,697 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:16:28,697 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:16:28,697 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:16:28,770 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:16:28,770 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:16:28,771 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:16:28,771 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:16:28,772 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:16:28,772 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:16:28,773 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:16:28,773 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:16:28,773 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:16:28,773 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:16:29,058 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:16:29,058 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:16:29,644 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=18834
2023-09-20T20:16:29,645 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:16:29,655 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:16:29,655 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]18834
2023-09-20T20:16:29,656 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:16:29,656 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:16:29,657 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:16:29,657 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:16:29,662 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:16:29,662 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:16:29,664 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:16:29,664 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:16:29,672 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:16:29,676 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240989676
2023-09-20T20:16:29,676 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695240989676
2023-09-20T20:16:29,712 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:16:29,778 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:16:29,779 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:16:29,779 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:16:29,967 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:16:29,967 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:16:29,968 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/d01e63dec27941ce8bad667f606f6e90/model.pth
2023-09-20T20:16:29,968 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T20:16:31,199 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695240991
2023-09-20T20:16:32,582 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - ResNet(
2023-09-20T20:16:32,583 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
2023-09-20T20:16:32,584 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,584 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (relu): ReLU(inplace=True)
2023-09-20T20:16:32,584 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
2023-09-20T20:16:32,585 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:16:32,585 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer1): Sequential(
2023-09-20T20:16:32,585 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:16:32,585 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2872
2023-09-20T20:16:32,585 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:16:32,585 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2872
2023-09-20T20:16:32,585 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,586 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:16:32,586 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,586 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:16:32,586 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:16:32,586 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3894.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695240992
2023-09-20T20:16:32,587 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:39.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240992
2023-09-20T20:16:32,587 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240992587
2023-09-20T20:16:32,587 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695240992587
2023-09-20T20:16:32,587 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,588 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,588 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,589 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,589 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:16:32,590 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,591 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,591 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:16:32,591 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,592 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:16:32,592 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,593 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,594 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:16:32,594 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,595 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,595 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,595 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,595 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,596 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:16:32,596 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,596 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,597 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:16:32,597 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,598 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,598 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,599 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,599 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,599 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:16:32,599 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer2): Sequential(
2023-09-20T20:16:32,600 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:16:32,600 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,600 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,601 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T20:16:32,601 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,601 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,602 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,602 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,602 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:16:32,603 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T20:16:32,603 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,603 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:16:32,604 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,604 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:16:32,604 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,605 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,605 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:16:32,605 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,606 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,606 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,606 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,606 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,607 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:16:32,607 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,607 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,608 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:16:32,608 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,608 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,608 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,609 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,609 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,609 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (3): Bottleneck(
2023-09-20T20:16:32,610 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,610 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,610 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:16:32,610 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,611 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,611 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,611 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,612 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,612 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:16:32,612 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer3): Sequential(
2023-09-20T20:16:32,612 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:16:32,613 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,613 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,613 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T20:16:32,614 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,614 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,614 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,615 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,615 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:16:32,615 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T20:16:32,615 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,616 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:16:32,616 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,616 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:16:32,616 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,617 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,617 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:16:32,617 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,618 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,618 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,618 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,618 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,619 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:16:32,619 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,619 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,620 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:16:32,620 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,620 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,620 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,621 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,621 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,621 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (3): Bottleneck(
2023-09-20T20:16:32,622 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,622 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,622 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:16:32,622 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,623 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,623 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,623 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,624 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,624 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (4): Bottleneck(
2023-09-20T20:16:32,624 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,624 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,625 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:16:32,625 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,625 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,626 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,626 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,626 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,627 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (5): Bottleneck(
2023-09-20T20:16:32,627 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,627 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,627 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:16:32,628 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,628 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,628 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,629 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,629 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,629 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:16:32,629 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer4): Sequential(
2023-09-20T20:16:32,630 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:16:32,630 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,630 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,630 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T20:16:32,631 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,631 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,631 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,632 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,632 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:16:32,632 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T20:16:32,632 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,633 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:16:32,633 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,633 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:16:32,634 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,634 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,634 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:16:32,634 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,635 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,635 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,635 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,635 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,636 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:16:32,636 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,636 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,636 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:16:32,637 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,637 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:16:32,637 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:16:32,638 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:16:32,638 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:16:32,638 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:16:32,638 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
2023-09-20T20:16:32,638 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:35758 "POST /predictions/test_model HTTP/1.1" 503 1443
2023-09-20T20:16:32,639 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (fc): Linear(in_features=2048, out_features=2, bias=True)
2023-09-20T20:16:32,639 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240992
2023-09-20T20:16:32,639 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - )
2023-09-20T20:16:32,639 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:16:32,640 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695240992
2023-09-20T20:16:32,640 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - tensor([[[[255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:16:32,640 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:16:32,640 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:16:32,641 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:16:32,641 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [172.,  79., 243.,  ..., 168., 245., 206.],
2023-09-20T20:16:32,641 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 1385520851, Inference time ns: 1440004352
2023-09-20T20:16:32,641 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [154., 242., 199.,  ..., 255., 255., 255.],
2023-09-20T20:16:32,641 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 1385520851, Inference time ns: 1440004352
2023-09-20T20:16:32,642 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:16:32,642 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:16:32,642 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 44
2023-09-20T20:16:32,642 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 192., 104., 250.]],
2023-09-20T20:16:32,642 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 44
2023-09-20T20:16:32,642 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T20:16:32,642 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -          [[181.,  90., 239.,  ..., 155., 240., 205.],
2023-09-20T20:16:32,642 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:11.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695240992
2023-09-20T20:16:32,643 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [145., 242., 201.,  ..., 255., 255., 255.],
2023-09-20T20:16:32,643 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 193., 103., 250.],
2023-09-20T20:16:32,643 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:16:32,643 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [  6., 175.,  49.,  ..., 233., 229., 228.],
2023-09-20T20:16:32,643 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [200., 188., 173.,  ..., 215.,  47., 255.],
2023-09-20T20:16:32,643 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [217.,  47., 254.,  ...,   3., 137.,  28.]],
2023-09-20T20:16:32,643 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T20:16:32,643 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -          [[  5., 177.,  55.,  ..., 233., 229., 228.],
2023-09-20T20:16:32,643 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [205., 193., 178.,  ..., 212.,  35., 255.],
2023-09-20T20:16:32,643 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [216.,  40., 253.,  ...,   3., 136.,  31.],
2023-09-20T20:16:32,644 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:16:32,644 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [179., 165., 145.,  ..., 154., 115., 204.],
2023-09-20T20:16:32,644 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [178., 147., 209.,  ..., 179., 208., 186.],
2023-09-20T20:16:32,644 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [167., 204., 179.,  ..., 220., 215., 211.]]]], device='cuda:0')
2023-09-20T20:16:32,644 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FROM INFERENCE
2023-09-20T20:16:32,644 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - tensor([[[[255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:16:32,644 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:16:32,644 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 255., 255., 255.],
2023-09-20T20:16:32,644 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:16:32,644 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [172.,  79., 243.,  ..., 168., 245., 206.],
2023-09-20T20:16:32,644 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [154., 242., 199.,  ..., 255., 255., 255.],
2023-09-20T20:16:32,645 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 192., 104., 250.]],
2023-09-20T20:16:32,645 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T20:16:32,645 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -          [[181.,  90., 239.,  ..., 155., 240., 205.],
2023-09-20T20:16:32,645 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [145., 242., 201.,  ..., 255., 255., 255.],
2023-09-20T20:16:32,645 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [255., 255., 255.,  ..., 193., 103., 250.],
2023-09-20T20:16:32,646 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:16:32,646 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [  6., 175.,  49.,  ..., 233., 229., 228.],
2023-09-20T20:16:32,646 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [200., 188., 173.,  ..., 215.,  47., 255.],
2023-09-20T20:16:32,647 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [217.,  47., 254.,  ...,   3., 137.,  28.]],
2023-09-20T20:16:32,647 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - 
2023-09-20T20:16:32,647 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -          [[  5., 177.,  55.,  ..., 233., 229., 228.],
2023-09-20T20:16:32,647 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [205., 193., 178.,  ..., 212.,  35., 255.],
2023-09-20T20:16:32,647 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [216.,  40., 253.,  ...,   3., 136.,  31.],
2023-09-20T20:16:32,647 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           ...,
2023-09-20T20:16:32,648 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [179., 165., 145.,  ..., 154., 115., 204.],
2023-09-20T20:16:32,648 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [178., 147., 209.,  ..., 179., 208., 186.],
2023-09-20T20:16:32,648 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -           [167., 204., 179.,  ..., 220., 215., 211.]]]], device='cuda:0')
2023-09-20T20:16:32,648 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:16:32,648 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:16:32,648 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:16:32,648 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:16:32,649 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 359, in handle
2023-09-20T20:16:32,649 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.postprocess(output)
2023-09-20T20:16:32,649 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T20:16:32,649 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T20:16:32,649 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 317, in postprocess
2023-09-20T20:16:32,650 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return data.tolist()
2023-09-20T20:16:32,650 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'NoneType' object has no attribute 'tolist'
2023-09-20T20:17:29,641 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:17:29,641 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:18:29,630 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:18:29,630 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:19:01,024 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:19:01,024 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:19:01,027 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:19:01,027 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:19:01,098 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:19:01,098 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:19:01,183 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:19:01,183 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:19:01,194 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:19:01,194 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:19:01,222 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:19:01,222 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:19:02,946 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:19:02,946 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:19:02,946 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:19:02,946 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:19:02,946 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:19:02,946 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:19:02,947 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:19:02,947 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:19:02,963 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:19:02,965 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:19:02,965 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:19:02,963 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:19:03,048 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:19:03,048 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:19:03,048 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:19:03,048 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:19:03,054 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:19:03,054 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:19:03,054 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:19:03,054 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:19:03,055 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:19:03,055 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:19:03,326 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:19:03,326 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:19:03,905 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=19131
2023-09-20T20:19:03,905 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:19:03,915 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:19:03,916 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]19131
2023-09-20T20:19:03,916 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:19:03,916 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:19:03,917 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:19:03,917 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:19:03,923 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:19:03,923 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:19:03,925 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:19:03,925 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:19:03,933 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:19:03,937 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241143937
2023-09-20T20:19:03,937 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241143937
2023-09-20T20:19:03,973 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:19:04,039 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:19:04,039 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:19:04,039 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:19:04,281 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:19:04,282 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:19:04,282 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/ef2ae6c856304677b5a7cd0964994449/model.pth
2023-09-20T20:19:04,282 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - PRE MODEL ERRORS
2023-09-20T20:19:07,053 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - ResNet(
2023-09-20T20:19:07,053 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
2023-09-20T20:19:07,054 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,054 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (relu): ReLU(inplace=True)
2023-09-20T20:19:07,054 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
2023-09-20T20:19:07,055 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer1): Sequential(
2023-09-20T20:19:07,055 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:19:07,055 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,056 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,056 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:19:07,056 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,057 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,057 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,057 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,058 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:19:07,058 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,058 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,058 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:19:07,058 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,058 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:19:07,059 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,059 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,059 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:19:07,059 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,059 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,059 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,060 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,060 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,060 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:19:07,060 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,060 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,060 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:19:07,060 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,061 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,061 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,061 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:19:07,061 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:19:07,061 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3088
2023-09-20T20:19:07,061 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3088
2023-09-20T20:19:07,061 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,062 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:19:07,062 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,062 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:19:07,062 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:19:07,062 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer2): Sequential(
2023-09-20T20:19:07,062 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:19:07,063 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,063 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,063 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T20:19:07,063 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,063 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,064 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,064 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,064 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:19:07,065 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T20:19:07,065 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,065 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:19:07,066 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,066 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:19:07,066 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4109.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695241147
2023-09-20T20:19:07,067 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:41.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241147
2023-09-20T20:19:07,066 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,067 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,067 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:19:07,067 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,068 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,068 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,068 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,068 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,068 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:19:07,068 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,069 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,069 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:19:07,069 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,069 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,070 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,070 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,070 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,070 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (3): Bottleneck(
2023-09-20T20:19:07,070 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,070 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,071 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:19:07,071 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,071 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,071 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,071 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,072 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,072 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:19:07,072 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer3): Sequential(
2023-09-20T20:19:07,072 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:19:07,072 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,072 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,072 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T20:19:07,073 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,073 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,073 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,073 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,074 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:19:07,074 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T20:19:07,074 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,074 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:19:07,074 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,074 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:19:07,075 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,075 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,075 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:19:07,075 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,075 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,075 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,076 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,076 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,076 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:19:07,076 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,076 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,077 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:19:07,077 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,077 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,077 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,077 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,078 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,078 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (3): Bottleneck(
2023-09-20T20:19:07,078 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,078 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,078 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:19:07,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,079 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (4): Bottleneck(
2023-09-20T20:19:07,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:19:07,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,080 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (5): Bottleneck(
2023-09-20T20:19:07,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:19:07,081 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:19:07,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer4): Sequential(
2023-09-20T20:19:07,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:19:07,082 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,083 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,083 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T20:19:07,083 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,083 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,083 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,083 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,084 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:19:07,084 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T20:19:07,084 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,084 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:19:07,084 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,084 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:19:07,084 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,084 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,085 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:19:07,085 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,085 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,085 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,085 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,085 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:19:07,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:19:07,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:19:07,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:19:07,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:19:07,087 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:19:07,087 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:19:07,087 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
2023-09-20T20:19:07,087 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (fc): Linear(in_features=2048, out_features=2, bias=True)
2023-09-20T20:19:07,087 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - )
2023-09-20T20:19:07,087 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:20:03,880 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:20:03,880 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:20:34,162 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:20:34,162 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:20:34,166 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:20:34,166 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:20:34,242 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:20:34,242 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:20:34,337 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:20:34,337 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:20:34,345 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:20:34,345 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:20:34,370 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:20:34,370 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:20:36,115 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:20:36,115 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:20:36,115 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:20:36,115 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:20:36,115 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:20:36,115 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:20:36,116 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:20:36,116 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:20:36,127 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:20:36,128 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:20:36,128 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:20:36,127 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:20:36,220 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:20:36,220 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:20:36,221 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:20:36,221 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:20:36,223 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:20:36,223 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:20:36,223 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:20:36,223 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:20:36,225 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:20:36,225 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:20:36,542 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:20:36,542 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:20:37,073 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=19377
2023-09-20T20:20:37,075 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:20:37,085 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:20:37,085 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]19377
2023-09-20T20:20:37,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:20:37,086 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:20:37,086 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:20:37,086 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:20:37,094 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:20:37,094 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:20:37,106 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:20:37,109 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241237109
2023-09-20T20:20:37,109 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241237109
2023-09-20T20:20:37,146 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:20:37,180 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:20:37,180 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:20:37,218 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:20:37,219 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:20:37,219 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:20:37,413 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:20:37,413 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:20:37,414 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/767b03cf24834834a7d90d297aa90358/model.pth
2023-09-20T20:20:40,415 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:20:40,422 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:20:40,422 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:20:40,423 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3276
2023-09-20T20:20:40,423 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3276
2023-09-20T20:20:40,424 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:20:40,424 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:20:40,426 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4302.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695241240
2023-09-20T20:20:40,427 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:42.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241240
2023-09-20T20:20:41,845 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695241241
2023-09-20T20:20:41,847 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241241847
2023-09-20T20:20:41,847 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241241847
2023-09-20T20:20:41,850 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695241241
2023-09-20T20:20:41,877 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:20:41,877 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:20:41,878 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:20:41,878 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:20:41,878 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 358, in handle
2023-09-20T20:20:41,878 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.inference(data_preprocess)
2023-09-20T20:20:41,879 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/767b03cf24834834a7d90d297aa90358/handler.py", line 65, in inference
2023-09-20T20:20:41,879 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     outputs = self.model(**inputs)
2023-09-20T20:20:41,879 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - TypeError: ResNet(
2023-09-20T20:20:41,879 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
2023-09-20T20:20:41,880 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,880 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (relu): ReLU(inplace=True)
2023-09-20T20:20:41,880 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
2023-09-20T20:20:41,881 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer1): Sequential(
2023-09-20T20:20:41,881 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:20:41,881 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,881 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,882 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:20:41,882 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,883 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,883 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,883 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,884 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:20:41,884 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,885 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,885 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:20:41,885 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,885 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:20:41,886 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,886 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,886 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:20:41,887 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,887 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,888 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,889 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,889 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:60812 "POST /predictions/test_model HTTP/1.1" 503 46
2023-09-20T20:20:41,889 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,890 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241241
2023-09-20T20:20:41,890 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:20:41,890 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 319224, Inference time ns: 43586350
2023-09-20T20:20:41,890 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 319224, Inference time ns: 43586350
2023-09-20T20:20:41,891 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:20:41,891 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:20:41,891 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 29
2023-09-20T20:20:41,891 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 29
2023-09-20T20:20:41,891 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,893 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:17.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241241
2023-09-20T20:20:41,893 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,893 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:20:41,894 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,894 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,894 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,894 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,895 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,895 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:20:41,895 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer2): Sequential(
2023-09-20T20:20:41,895 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:20:41,896 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,896 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,896 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T20:20:41,896 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,897 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,897 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,897 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,898 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:20:41,898 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T20:20:41,898 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,898 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:20:41,898 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,899 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:20:41,899 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,899 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,899 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:20:41,900 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,900 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,900 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,900 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,900 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,901 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:20:41,901 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,901 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,901 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:20:41,902 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,902 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,902 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,902 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,903 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,903 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (3): Bottleneck(
2023-09-20T20:20:41,903 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,903 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,903 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:20:41,904 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,904 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,904 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,905 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,905 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,905 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:20:41,905 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer3): Sequential(
2023-09-20T20:20:41,905 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:20:41,906 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,906 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,906 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T20:20:41,906 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,906 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,907 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,907 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,907 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:20:41,907 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T20:20:41,908 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,908 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:20:41,908 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,908 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:20:41,908 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,909 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,909 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:20:41,909 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,909 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,909 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,910 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,910 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,910 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:20:41,910 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,911 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,911 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:20:41,911 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,911 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,912 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,912 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,912 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,912 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (3): Bottleneck(
2023-09-20T20:20:41,913 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,913 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,913 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:20:41,913 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,913 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,914 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,914 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,914 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,915 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (4): Bottleneck(
2023-09-20T20:20:41,915 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,915 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,915 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:20:41,915 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,916 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,916 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,916 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,916 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,916 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (5): Bottleneck(
2023-09-20T20:20:41,917 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,917 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,917 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:20:41,917 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,917 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,918 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,918 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,918 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,918 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:20:41,918 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (layer4): Sequential(
2023-09-20T20:20:41,919 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (0): Bottleneck(
2023-09-20T20:20:41,919 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,919 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,919 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
2023-09-20T20:20:41,920 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,920 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,920 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,920 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,920 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (downsample): Sequential(
2023-09-20T20:20:41,921 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
2023-09-20T20:20:41,921 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -         (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,921 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       )
2023-09-20T20:20:41,921 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,921 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (1): Bottleneck(
2023-09-20T20:20:41,922 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,922 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,922 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:20:41,922 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,922 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,923 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,923 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,923 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,923 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     (2): Bottleneck(
2023-09-20T20:20:41,923 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,923 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,924 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
2023-09-20T20:20:41,924 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,924 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
2023-09-20T20:20:41,924 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
2023-09-20T20:20:41,925 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -       (relu): ReLU(inplace=True)
2023-09-20T20:20:41,925 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     )
2023-09-20T20:20:41,925 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   )
2023-09-20T20:20:41,925 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
2023-09-20T20:20:41,925 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   (fc): Linear(in_features=2048, out_features=2, bias=True)
2023-09-20T20:20:41,925 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - ) argument after ** must be a mapping, not Tensor
2023-09-20T20:21:26,473 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:21:26,473 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:21:26,476 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:21:26,476 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:21:26,547 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:21:26,547 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:21:26,641 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:21:26,641 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:21:26,649 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:21:26,649 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:21:26,674 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:21:26,674 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:21:28,356 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:21:28,356 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:21:28,356 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:21:28,356 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:21:28,357 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:21:28,357 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:21:28,357 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:21:28,357 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:21:28,368 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:21:28,369 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:21:28,369 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:21:28,368 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:21:28,440 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:21:28,440 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:21:28,441 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:21:28,441 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:21:28,443 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:21:28,443 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:21:28,443 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:21:28,443 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:21:28,445 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:21:28,445 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:21:28,727 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:21:28,727 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:21:29,337 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=19601
2023-09-20T20:21:29,338 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:21:29,357 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:21:29,358 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]19601
2023-09-20T20:21:29,359 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:21:29,360 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:21:29,359 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:21:29,360 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:21:29,364 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:21:29,364 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:21:29,369 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:21:29,369 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:21:29,379 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:21:29,383 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241289383
2023-09-20T20:21:29,383 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241289383
2023-09-20T20:21:29,420 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:21:29,484 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:21:29,485 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:21:29,485 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:21:29,680 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:21:29,681 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:21:29,681 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/cbe7ce3c378048749fdd7de4d67e3079/model.pth
2023-09-20T20:21:32,363 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:21:32,370 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:21:32,370 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:21:32,371 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2950
2023-09-20T20:21:32,371 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2950
2023-09-20T20:21:32,371 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:21:32,371 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:21:32,374 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4009.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695241292
2023-09-20T20:21:32,375 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:42.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241292
2023-09-20T20:21:35,428 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695241295
2023-09-20T20:21:35,430 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241295430
2023-09-20T20:21:35,430 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241295430
2023-09-20T20:21:35,433 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695241295
2023-09-20T20:21:35,457 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - <class 'torch.Tensor'>
2023-09-20T20:21:35,458 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:21:35,458 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:21:35,458 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:21:35,459 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:21:35,459 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 359, in handle
2023-09-20T20:21:35,459 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.postprocess(output)
2023-09-20T20:21:35,460 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T20:21:35,460 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T20:21:35,461 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 317, in postprocess
2023-09-20T20:21:35,461 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return data.tolist()
2023-09-20T20:21:35,461 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'NoneType' object has no attribute 'tolist'
2023-09-20T20:21:35,463 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:47224 "POST /predictions/test_model HTTP/1.1" 503 37
2023-09-20T20:21:35,464 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241295
2023-09-20T20:21:35,464 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 190275, Inference time ns: 34173827
2023-09-20T20:21:35,464 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 190275, Inference time ns: 34173827
2023-09-20T20:21:35,465 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:21:35,465 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:21:35,465 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 26
2023-09-20T20:21:35,465 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 26
2023-09-20T20:21:35,465 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:9.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241295
2023-09-20T20:22:12,323 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:22:12,323 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:22:12,326 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:22:12,326 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:22:12,404 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:22:12,404 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:22:12,492 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:22:12,492 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:22:12,502 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:22:12,502 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:22:12,529 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:22:12,529 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:22:14,477 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:22:14,477 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:22:14,478 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:22:14,478 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:22:14,478 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:22:14,478 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:22:14,478 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:22:14,478 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:22:14,489 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:22:14,489 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:22:14,489 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:22:14,489 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:22:14,571 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:22:14,571 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:22:14,571 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:22:14,571 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:22:14,573 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:22:14,573 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:22:14,574 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:22:14,574 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:22:14,575 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:22:14,575 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:22:14,860 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:22:14,860 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:22:15,472 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:22:15,472 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:22:15,501 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=19831
2023-09-20T20:22:15,502 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:22:15,511 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:22:15,511 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]19831
2023-09-20T20:22:15,512 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:22:15,512 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:22:15,513 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:22:15,513 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:22:15,517 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:22:15,517 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:22:15,526 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:22:15,529 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241335529
2023-09-20T20:22:15,529 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241335529
2023-09-20T20:22:15,565 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:22:15,641 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:22:15,642 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:22:15,642 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:22:15,838 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:22:15,839 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:22:15,839 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/c17a0b8ce848401ab5d2f21c74c4d829/model.pth
2023-09-20T20:22:15,985 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695241335
2023-09-20T20:22:18,549 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:22:18,551 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:22:18,551 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:22:18,551 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2986
2023-09-20T20:22:18,551 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2986
2023-09-20T20:22:18,552 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:22:18,552 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:22:18,552 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4068.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695241338
2023-09-20T20:22:18,553 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:38.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241338
2023-09-20T20:22:18,553 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241338553
2023-09-20T20:22:18,553 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241338553
2023-09-20T20:22:18,558 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695241338
2023-09-20T20:22:18,579 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - torch.Size([1, 3, 256, 256])
2023-09-20T20:22:18,579 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:22:18,580 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:22:18,580 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:22:18,580 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:22:18,580 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 359, in handle
2023-09-20T20:22:18,580 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.postprocess(output)
2023-09-20T20:22:18,580 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T20:22:18,581 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T20:22:18,581 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 317, in postprocess
2023-09-20T20:22:18,581 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return data.tolist()
2023-09-20T20:22:18,581 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'NoneType' object has no attribute 'tolist'
2023-09-20T20:22:18,587 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:55156 "POST /predictions/test_model HTTP/1.1" 503 2611
2023-09-20T20:22:18,587 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241338
2023-09-20T20:22:18,587 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2565412392, Inference time ns: 2599480068
2023-09-20T20:22:18,587 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2565412392, Inference time ns: 2599480068
2023-09-20T20:22:18,588 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:22:18,588 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:22:18,588 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 25
2023-09-20T20:22:18,588 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 25
2023-09-20T20:22:18,588 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:10.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241338
2023-09-20T20:23:07,657 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:23:07,657 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:23:07,660 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:23:07,660 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:23:07,738 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:23:07,738 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:23:07,820 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:23:07,820 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:23:07,828 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:23:07,828 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:23:07,856 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:23:07,856 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:23:09,732 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:23:09,732 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:23:09,733 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:23:09,733 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:23:09,733 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:23:09,733 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:23:09,733 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:23:09,733 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:23:09,744 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:23:09,744 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:23:09,744 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:23:09,744 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:23:09,856 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:23:09,856 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:23:09,857 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:23:09,857 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:23:09,858 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:23:09,858 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:23:09,859 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:23:09,859 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:23:09,860 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:23:09,860 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:23:10,223 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:23:10,223 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:23:10,859 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:23:10,859 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:23:10,887 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=20057
2023-09-20T20:23:10,888 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:23:10,907 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:23:10,908 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]20057
2023-09-20T20:23:10,908 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:23:10,908 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:23:10,909 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:23:10,909 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:23:10,914 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:23:10,914 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:23:10,922 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:23:10,926 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241390926
2023-09-20T20:23:10,926 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241390926
2023-09-20T20:23:10,963 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:23:11,032 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:23:11,032 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:23:11,033 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:23:11,227 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:23:11,227 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:23:11,227 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/260a1f44495f4a26ae336d41cd9ef007/model.pth
2023-09-20T20:23:11,570 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695241391
2023-09-20T20:23:14,220 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:23:14,221 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:23:14,221 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:23:14,222 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3258
2023-09-20T20:23:14,222 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3258
2023-09-20T20:23:14,222 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:23:14,222 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:23:14,223 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4484.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695241394
2023-09-20T20:23:14,223 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:39.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241394
2023-09-20T20:23:14,224 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241394224
2023-09-20T20:23:14,224 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241394224
2023-09-20T20:23:14,226 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695241394
2023-09-20T20:23:14,470 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - #################LOGITS##############
2023-09-20T20:23:14,471 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:23:14,471 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:23:14,471 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:23:14,471 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:23:14,471 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 358, in handle
2023-09-20T20:23:14,472 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.inference(data_preprocess)
2023-09-20T20:23:14,472 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/260a1f44495f4a26ae336d41cd9ef007/handler.py", line 68, in inference
2023-09-20T20:23:14,473 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     logger.info(outputs.logits)
2023-09-20T20:23:14,473 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'Tensor' object has no attribute 'logits'
2023-09-20T20:23:14,477 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:44364 "POST /predictions/test_model HTTP/1.1" 503 2912
2023-09-20T20:23:14,477 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241394
2023-09-20T20:23:14,478 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2651276031, Inference time ns: 2905505345
2023-09-20T20:23:14,478 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2651276031, Inference time ns: 2905505345
2023-09-20T20:23:14,478 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:23:14,478 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:23:14,478 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 247
2023-09-20T20:23:14,478 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 247
2023-09-20T20:23:14,479 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:8.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241394
2023-09-20T20:23:57,608 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:23:57,608 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:23:57,611 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:23:57,611 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:23:57,680 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:23:57,680 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:23:57,768 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:23:57,768 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:23:57,777 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:23:57,777 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:23:57,810 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:23:57,810 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:23:59,552 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:23:59,552 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:23:59,552 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:23:59,552 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:23:59,553 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:23:59,553 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:23:59,553 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:23:59,553 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:23:59,563 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:23:59,563 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:23:59,566 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:23:59,566 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:23:59,677 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:23:59,677 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:23:59,678 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:23:59,678 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:23:59,680 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:23:59,680 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:23:59,680 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:23:59,680 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:23:59,681 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:23:59,681 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:23:59,949 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:23:59,949 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:24:00,443 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=20273
2023-09-20T20:24:00,444 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:24:00,453 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:24:00,453 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]20273
2023-09-20T20:24:00,454 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:24:00,454 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:24:00,455 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:24:00,455 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:24:00,462 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:24:00,462 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:24:00,472 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:24:00,476 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241440476
2023-09-20T20:24:00,476 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241440476
2023-09-20T20:24:00,523 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:24:00,593 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:24:00,593 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:24:00,607 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:24:00,608 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:24:00,608 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:24:00,806 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:24:00,807 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:24:00,807 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/a67046c41e4d4bb796329238b2f73661/model.pth
2023-09-20T20:24:03,511 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:24:03,518 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:24:03,518 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:24:03,519 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2995
2023-09-20T20:24:03,519 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2995
2023-09-20T20:24:03,519 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:24:03,519 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:24:03,522 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3960.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695241443
2023-09-20T20:24:03,522 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:51.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241443
2023-09-20T20:25:00,510 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:25:00,510 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:25:23,727 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695241523
2023-09-20T20:25:23,730 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241523730
2023-09-20T20:25:23,730 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241523730
2023-09-20T20:25:23,732 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695241523
2023-09-20T20:25:23,967 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - #################LOGITS##############
2023-09-20T20:25:23,969 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - tensor([[-255.7092,  872.5308]], device='cuda:0', grad_fn=<AddmmBackward0>)
2023-09-20T20:25:23,970 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:25:23,970 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:25:23,970 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:25:23,971 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:25:23,971 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 359, in handle
2023-09-20T20:25:23,971 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.postprocess(output)
2023-09-20T20:25:23,971 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T20:25:23,971 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T20:25:23,971 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 317, in postprocess
2023-09-20T20:25:23,972 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return data.tolist()
2023-09-20T20:25:23,972 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'NoneType' object has no attribute 'tolist'
2023-09-20T20:25:23,976 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:37380 "POST /predictions/test_model HTTP/1.1" 503 253
2023-09-20T20:25:23,977 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241523
2023-09-20T20:25:23,977 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 345337, Inference time ns: 247769089
2023-09-20T20:25:23,977 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 345337, Inference time ns: 247769089
2023-09-20T20:25:23,977 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:25:23,977 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:25:23,978 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 240
2023-09-20T20:25:23,978 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 240
2023-09-20T20:25:23,978 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:8.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241523
2023-09-20T20:26:00,507 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:26:00,507 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:26:14,690 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:26:14,690 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:26:14,694 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:26:14,694 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:26:14,770 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:26:14,770 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:26:14,870 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:26:14,870 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:26:14,879 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:26:14,879 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:26:14,907 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:26:14,907 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:26:16,679 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:26:16,679 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:26:16,680 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:26:16,680 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:26:16,680 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:26:16,680 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:26:16,680 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:26:16,680 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:26:16,691 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:26:16,691 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:26:16,692 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:26:16,692 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:26:16,774 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:26:16,774 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:26:16,774 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:26:16,774 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:26:16,776 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:26:16,776 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:26:16,776 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:26:16,776 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:26:16,777 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:26:16,777 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:26:17,088 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:26:17,088 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:26:17,676 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=20566
2023-09-20T20:26:17,677 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:26:17,688 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:26:17,688 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]20566
2023-09-20T20:26:17,688 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:26:17,689 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:26:17,689 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:26:17,689 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:26:17,695 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:26:17,695 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:26:17,703 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:26:17,707 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241577707
2023-09-20T20:26:17,707 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241577707
2023-09-20T20:26:17,745 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:26:17,802 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:26:17,802 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:26:17,833 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:26:17,834 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:26:17,834 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:26:17,868 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695241577
2023-09-20T20:26:18,035 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:26:18,036 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:26:18,036 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/f6ee2ac0d05a46beac7950af8c8c8bb6/model.pth
2023-09-20T20:26:20,711 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:26:20,714 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:26:20,714 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:26:20,714 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2970
2023-09-20T20:26:20,714 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2970
2023-09-20T20:26:20,714 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:26:20,714 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:26:20,715 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4028.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695241580
2023-09-20T20:26:20,716 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:39.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241580
2023-09-20T20:26:20,716 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241580716
2023-09-20T20:26:20,716 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241580716
2023-09-20T20:26:20,718 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695241580
2023-09-20T20:26:20,937 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - tensor([[1., 0.]], device='cuda:0', grad_fn=<SoftmaxBackward0>)
2023-09-20T20:26:20,938 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:26:20,938 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:26:20,938 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:26:20,938 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:26:20,938 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 359, in handle
2023-09-20T20:26:20,939 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.postprocess(output)
2023-09-20T20:26:20,939 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T20:26:20,939 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T20:26:20,939 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 317, in postprocess
2023-09-20T20:26:20,939 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return data.tolist()
2023-09-20T20:26:20,939 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'NoneType' object has no attribute 'tolist'
2023-09-20T20:26:20,934 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG - /tmp/models/f6ee2ac0d05a46beac7950af8c8c8bb6/handler.py:67: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
2023-09-20T20:26:20,941 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG -   probabilities = nn.functional.softmax(outputs)
2023-09-20T20:26:20,948 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:54572 "POST /predictions/test_model HTTP/1.1" 503 3086
2023-09-20T20:26:20,949 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241580
2023-09-20T20:26:20,949 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2838851246, Inference time ns: 3071913858
2023-09-20T20:26:20,949 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2838851246, Inference time ns: 3071913858
2023-09-20T20:26:20,949 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:26:20,949 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:26:20,949 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 226
2023-09-20T20:26:20,949 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 226
2023-09-20T20:26:20,950 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:8.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241580
2023-09-20T20:27:08,106 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:27:08,106 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:27:08,109 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:27:08,109 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:27:08,184 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:27:08,184 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:27:08,289 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:27:08,289 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:27:08,297 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:27:08,297 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:27:08,322 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:27:08,322 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:27:09,949 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:27:09,949 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:27:09,949 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:27:09,949 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:27:09,949 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:27:09,949 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:27:09,950 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:27:09,950 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:27:09,960 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:27:09,960 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:27:09,960 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:27:09,960 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:27:10,048 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:27:10,048 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:27:10,048 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:27:10,048 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:27:10,050 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:27:10,050 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:27:10,051 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:27:10,051 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:27:10,052 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:27:10,052 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:27:10,316 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:27:10,316 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:27:10,974 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=20811
2023-09-20T20:27:10,975 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:27:10,987 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:27:10,987 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]20811
2023-09-20T20:27:10,988 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:27:10,988 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:27:10,988 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:27:10,988 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:27:10,993 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:27:10,993 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:27:11,003 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:27:11,004 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:27:11,004 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:27:11,012 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241631012
2023-09-20T20:27:11,012 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241631012
2023-09-20T20:27:11,050 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:27:11,115 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:27:11,116 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:27:11,116 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:27:11,312 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:27:11,312 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:27:11,313 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/74962e0f849b4921978d1d065f268ebd/model.pth
2023-09-20T20:27:13,959 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:27:13,967 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:27:13,967 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:27:13,967 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2918
2023-09-20T20:27:13,967 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2918
2023-09-20T20:27:13,968 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:27:13,968 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:27:13,970 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4013.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695241633
2023-09-20T20:27:13,971 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:41.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241633
2023-09-20T20:27:18,093 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695241638
2023-09-20T20:27:18,096 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241638096
2023-09-20T20:27:18,096 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241638096
2023-09-20T20:27:18,098 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695241638
2023-09-20T20:27:18,315 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:27:18,316 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:27:18,316 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:27:18,316 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:27:18,316 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 359, in handle
2023-09-20T20:27:18,317 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.postprocess(output)
2023-09-20T20:27:18,317 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T20:27:18,317 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T20:27:18,317 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 317, in postprocess
2023-09-20T20:27:18,318 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return data.tolist()
2023-09-20T20:27:18,318 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'NoneType' object has no attribute 'tolist'
2023-09-20T20:27:18,315 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG - /tmp/models/74962e0f849b4921978d1d065f268ebd/handler.py:67: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
2023-09-20T20:27:18,322 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG -   probabilities = nn.functional.softmax(outputs)
2023-09-20T20:27:18,324 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:54582 "POST /predictions/test_model HTTP/1.1" 503 233
2023-09-20T20:27:18,325 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241638
2023-09-20T20:27:18,326 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 239390, Inference time ns: 230270891
2023-09-20T20:27:18,326 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 239390, Inference time ns: 230270891
2023-09-20T20:27:18,326 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:27:18,326 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:27:18,326 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 221
2023-09-20T20:27:18,326 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 221
2023-09-20T20:27:18,327 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:10.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241638
2023-09-20T20:31:46,184 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:31:46,184 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:31:46,188 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:31:46,188 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:31:46,289 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:31:46,289 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:31:46,390 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:31:46,390 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:31:46,400 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:31:46,400 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:31:46,428 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:31:46,428 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:31:48,152 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:31:48,152 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:31:48,152 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:31:48,152 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:31:48,153 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:31:48,153 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:31:48,153 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:31:48,153 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:31:48,163 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:31:48,163 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:31:48,164 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:31:48,164 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:31:48,241 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:31:48,241 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:31:48,241 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:31:48,241 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:31:48,242 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:31:48,242 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:31:48,243 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:31:48,243 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:31:48,246 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:31:48,246 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:31:48,548 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:31:48,548 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:31:49,102 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=21174
2023-09-20T20:31:49,104 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:31:49,114 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:31:49,114 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]21174
2023-09-20T20:31:49,115 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:31:49,115 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:31:49,115 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:31:49,115 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:31:49,125 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:31:49,125 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:31:49,148 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:31:49,162 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241909161
2023-09-20T20:31:49,162 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695241909161
2023-09-20T20:31:49,170 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695241909
2023-09-20T20:31:49,187 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:31:49,255 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:31:49,255 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:31:49,255 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:31:49,281 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:31:49,281 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:31:49,456 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:31:49,457 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:31:49,457 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/8b04cc501f984fe09b463c0d81e8d818/model.pth
2023-09-20T20:31:52,132 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:31:52,133 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:31:52,133 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:31:52,134 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2947
2023-09-20T20:31:52,134 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2947
2023-09-20T20:31:52,134 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:31:52,134 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:31:52,134 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3975.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695241912
2023-09-20T20:31:52,135 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:27.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241912
2023-09-20T20:31:52,135 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241912135
2023-09-20T20:31:52,135 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695241912135
2023-09-20T20:31:52,137 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695241912
2023-09-20T20:31:52,386 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG - /tmp/models/8b04cc501f984fe09b463c0d81e8d818/handler.py:67: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
2023-09-20T20:31:52,387 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - tensor([[1.]], device='cuda:0', grad_fn=<SoftmaxBackward0>)
2023-09-20T20:31:52,387 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG -   probabilities = nn.functional.softmax(outputs)
2023-09-20T20:31:52,388 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:31:52,388 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:31:52,388 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:31:52,389 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:31:52,389 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 359, in handle
2023-09-20T20:31:52,389 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.postprocess(output)
2023-09-20T20:31:52,390 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/handler_utils/timer.py", line 62, in wrap_func
2023-09-20T20:31:52,390 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     result = func(self, *args, **kwargs)
2023-09-20T20:31:52,390 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 317, in postprocess
2023-09-20T20:31:52,390 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return data.tolist()
2023-09-20T20:31:52,390 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'NoneType' object has no attribute 'tolist'
2023-09-20T20:31:52,394 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:57382 "POST /predictions/test_model HTTP/1.1" 503 3229
2023-09-20T20:31:52,395 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241912
2023-09-20T20:31:52,395 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2963173968, Inference time ns: 3223160261
2023-09-20T20:31:52,395 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2963173968, Inference time ns: 3223160261
2023-09-20T20:31:52,396 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:31:52,396 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:31:52,396 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 252
2023-09-20T20:31:52,396 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 252
2023-09-20T20:31:52,396 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:9.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695241912
2023-09-20T20:32:49,071 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:32:49,071 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:33:31,262 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:33:31,262 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:33:31,265 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:33:31,265 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:33:31,340 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:33:31,340 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:33:31,436 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:33:31,436 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:33:31,446 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:33:31,446 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:33:31,472 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:33:31,472 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:33:33,758 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:33:33,758 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:33:33,758 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:33:33,758 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:33:33,758 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:33:33,758 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:33:33,758 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:33:33,758 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:33:33,769 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:33:33,770 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:33:33,770 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:33:33,769 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:33:33,852 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:33:33,852 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:33:33,852 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:33:33,852 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:33:33,854 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:33:33,854 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:33:33,854 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:33:33,854 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:33:33,855 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:33:33,855 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:33:34,185 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:33:34,185 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:33:34,692 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=21480
2023-09-20T20:33:34,694 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:33:34,706 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:33:34,707 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]21480
2023-09-20T20:33:34,707 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:33:34,708 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:33:34,711 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:33:34,711 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:33:34,716 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:33:34,716 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:33:34,726 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:33:34,730 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242014730
2023-09-20T20:33:34,730 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242014730
2023-09-20T20:33:34,770 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:33:34,829 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:33:34,829 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:33:34,845 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:33:34,846 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:33:34,846 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:33:34,873 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695242014
2023-09-20T20:33:35,059 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:33:35,060 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:33:35,061 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/223946a0eae34743be00b39cc184d15e/model.pth
2023-09-20T20:33:37,752 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:33:37,753 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:33:37,753 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:33:37,754 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2984
2023-09-20T20:33:37,754 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2984
2023-09-20T20:33:37,754 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:33:37,754 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:33:37,754 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3990.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695242017
2023-09-20T20:33:37,755 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:41.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242017
2023-09-20T20:33:37,755 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242017755
2023-09-20T20:33:37,755 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242017755
2023-09-20T20:33:37,757 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695242017
2023-09-20T20:33:37,998 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - None
2023-09-20T20:33:38,003 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:240.51|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695242017,25bec60d-dfc2-4934-ab09-eda7f4376cd0, pattern=[METRICS]
2023-09-20T20:33:38,003 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:240.51|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695242017,25bec60d-dfc2-4934-ab09-eda7f4376cd0, pattern=[METRICS]
2023-09-20T20:33:38,004 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - HandlerTime.ms:240.51|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:25bec60d-dfc2-4934-ab09-eda7f4376cd0,timestamp:1695242018
2023-09-20T20:33:38,005 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model: test_model, Invalid return type: <class 'NoneType'>.
2023-09-20T20:33:38,005 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:42786 "POST /predictions/test_model HTTP/1.1" 503 3137
2023-09-20T20:33:38,006 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242018
2023-09-20T20:33:38,007 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2880077194, Inference time ns: 3131397554
2023-09-20T20:33:38,007 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 2880077194, Inference time ns: 3131397554
2023-09-20T20:33:38,007 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:33:38,007 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:33:38,007 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 242
2023-09-20T20:33:38,007 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 242
2023-09-20T20:33:38,007 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:10.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242018
2023-09-20T20:33:37,997 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG - /tmp/models/223946a0eae34743be00b39cc184d15e/handler.py:67: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
2023-09-20T20:33:38,008 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG -   probabilities = nn.functional.softmax(outputs)
2023-09-20T20:34:36,850 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:34:36,850 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:34:36,853 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:34:36,853 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:34:36,924 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:34:36,924 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:34:37,007 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:34:37,007 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:34:37,016 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:34:37,016 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:34:37,041 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:34:37,041 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:34:38,665 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:34:38,665 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:34:38,665 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:34:38,665 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:34:38,666 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:34:38,666 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:34:38,666 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:34:38,666 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:34:38,677 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:34:38,677 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:34:38,677 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:34:38,677 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:34:38,778 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:34:38,778 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:34:38,779 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:34:38,779 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:34:38,784 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:34:38,784 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:34:38,784 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:34:38,784 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:34:38,786 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:34:38,786 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:34:39,061 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:34:39,061 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:34:39,436 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695242079
2023-09-20T20:34:39,645 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=21698
2023-09-20T20:34:39,646 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:34:39,659 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:34:39,660 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]21698
2023-09-20T20:34:39,660 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:34:39,660 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:34:39,661 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:34:39,661 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:34:39,664 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:34:39,664 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:34:39,671 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:34:39,673 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:34:39,674 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242079673
2023-09-20T20:34:39,674 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242079673
2023-09-20T20:34:39,673 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:34:39,701 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:34:39,823 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:34:39,823 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:34:39,823 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:34:40,065 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:34:40,065 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:34:40,066 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/f10f63240ba648639d018f2986efe0e3/model.pth
2023-09-20T20:34:42,690 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:34:42,692 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:34:42,692 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:34:42,693 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2992
2023-09-20T20:34:42,693 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2992
2023-09-20T20:34:42,693 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:34:42,693 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:34:42,694 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4021.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695242082
2023-09-20T20:34:42,695 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:29.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242082
2023-09-20T20:34:42,695 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242082695
2023-09-20T20:34:42,695 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242082695
2023-09-20T20:34:42,698 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695242082
2023-09-20T20:34:42,923 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:34:42,924 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:34:42,924 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:34:42,924 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:34:42,924 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 359, in handle
2023-09-20T20:34:42,924 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.postprocess(output)
2023-09-20T20:34:42,925 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/f10f63240ba648639d018f2986efe0e3/handler.py", line 72, in postprocess
2023-09-20T20:34:42,925 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     logger.log('FROM POSTPROCESS>>>>>>')
2023-09-20T20:34:42,925 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - TypeError: log() missing 1 required positional argument: 'msg'
2023-09-20T20:34:42,923 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG - /tmp/models/f10f63240ba648639d018f2986efe0e3/handler.py:67: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
2023-09-20T20:34:42,932 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG -   probabilities = nn.functional.softmax(outputs)
2023-09-20T20:34:42,931 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:41600 "POST /predictions/test_model HTTP/1.1" 503 3505
2023-09-20T20:34:42,932 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242082
2023-09-20T20:34:42,933 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 3256549364, Inference time ns: 3494301054
2023-09-20T20:34:42,933 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 3256549364, Inference time ns: 3494301054
2023-09-20T20:34:42,933 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:34:42,933 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:34:42,933 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 228
2023-09-20T20:34:42,933 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 228
2023-09-20T20:34:42,934 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:10.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242082
2023-09-20T20:35:44,470 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:35:44,470 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:35:44,473 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:35:44,473 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:35:44,548 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:35:44,548 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:35:44,646 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:35:44,646 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:35:44,655 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:35:44,655 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:35:44,683 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:35:44,683 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:35:46,388 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:35:46,388 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:35:46,389 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:35:46,389 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:35:46,389 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:35:46,389 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:35:46,389 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:35:46,389 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:35:46,400 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:35:46,401 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:35:46,401 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:35:46,400 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:35:46,483 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:35:46,483 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:35:46,483 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:35:46,483 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:35:46,485 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:35:46,485 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:35:46,486 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:35:46,486 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:35:46,487 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:35:46,487 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:35:46,757 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:35:46,757 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:35:47,377 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:35:47,377 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:35:47,387 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=21924
2023-09-20T20:35:47,388 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:35:47,397 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:35:47,397 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]21924
2023-09-20T20:35:47,397 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:35:47,398 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:35:47,398 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:35:47,398 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:35:47,403 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:35:47,403 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:35:47,413 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:35:47,417 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242147417
2023-09-20T20:35:47,417 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242147417
2023-09-20T20:35:47,456 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:35:47,524 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:35:47,524 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:35:47,525 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:35:47,795 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:35:47,795 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:35:47,795 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/603d014c3d7b47e794a1a3d85bf2b215/model.pth
2023-09-20T20:35:50,484 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:35:50,491 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:35:50,491 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:35:50,491 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3035
2023-09-20T20:35:50,491 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3035
2023-09-20T20:35:50,492 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:35:50,492 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:35:50,494 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4096.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695242150
2023-09-20T20:35:50,495 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:43.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242150
2023-09-20T20:36:47,311 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:36:47,311 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:37:40,870 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695242260
2023-09-20T20:37:40,872 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242260872
2023-09-20T20:37:40,872 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242260872
2023-09-20T20:37:40,875 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695242260
2023-09-20T20:37:41,117 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FROM POSTPROCESS>>>>>>
2023-09-20T20:37:41,118 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - None
2023-09-20T20:37:41,117 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG - /tmp/models/603d014c3d7b47e794a1a3d85bf2b215/handler.py:67: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
2023-09-20T20:37:41,118 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:243.68|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695242261,30b035da-b6f6-45bc-b6de-2997b38a60a5, pattern=[METRICS]
2023-09-20T20:37:41,118 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:243.68|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695242261,30b035da-b6f6-45bc-b6de-2997b38a60a5, pattern=[METRICS]
2023-09-20T20:37:41,118 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG -   probabilities = nn.functional.softmax(outputs)
2023-09-20T20:37:41,120 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - HandlerTime.ms:243.68|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:30b035da-b6f6-45bc-b6de-2997b38a60a5,timestamp:1695242261
2023-09-20T20:37:41,120 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model: test_model, Invalid return type: <class 'NoneType'>.
2023-09-20T20:37:41,126 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:52116 "POST /predictions/test_model HTTP/1.1" 503 258
2023-09-20T20:37:41,127 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242261
2023-09-20T20:37:41,129 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 229542, Inference time ns: 256941308
2023-09-20T20:37:41,129 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 229542, Inference time ns: 256941308
2023-09-20T20:37:41,130 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:37:41,130 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:37:41,133 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 247
2023-09-20T20:37:41,133 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 247
2023-09-20T20:37:41,133 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:14.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242261
2023-09-20T20:37:47,345 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:37:47,345 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:38:47,322 [ERROR] Thread-4 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:38:47,322 [ERROR] Thread-4 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:39:47,322 [ERROR] Thread-5 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:39:47,322 [ERROR] Thread-5 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:40:12,100 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:40:12,100 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:40:12,104 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:40:12,104 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:40:12,175 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:40:12,175 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:40:12,266 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:40:12,266 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:40:12,275 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:40:12,275 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:40:12,301 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:40:12,301 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:40:13,986 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:40:13,986 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:40:13,987 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:40:13,987 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:40:13,987 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:40:13,987 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:40:13,987 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:40:13,987 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:40:13,998 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:40:13,998 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:40:14,000 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:40:14,000 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:40:14,093 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:40:14,093 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:40:14,094 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:40:14,094 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:40:14,096 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:40:14,096 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:40:14,096 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:40:14,096 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:40:14,097 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:40:14,097 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:40:14,411 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:40:14,411 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:40:14,999 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=22317
2023-09-20T20:40:15,000 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:40:15,009 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:40:15,010 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]22317
2023-09-20T20:40:15,010 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:40:15,010 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:40:15,014 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:40:15,014 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:40:15,019 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:40:15,019 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:40:15,035 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:40:15,040 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242415040
2023-09-20T20:40:15,040 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242415040
2023-09-20T20:40:15,045 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:40:15,045 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:40:15,085 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:40:15,154 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:40:15,155 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:40:15,155 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:40:15,336 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FOMMMMMM LOGGGEERRRR
2023-09-20T20:40:15,336 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - {'0': 'Negative', '1': 'Neutral'}
2023-09-20T20:40:15,356 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:40:15,357 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:40:15,357 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/1b90a9eb060a4dad98acabdd9dc81ffd/model.pth
2023-09-20T20:40:18,042 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:40:18,049 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:40:18,049 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:40:18,050 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2966
2023-09-20T20:40:18,050 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2966
2023-09-20T20:40:18,051 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:40:18,051 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:40:18,053 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4057.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695242418
2023-09-20T20:40:18,054 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:48.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242418
2023-09-20T20:41:14,953 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:41:14,953 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:41:23,621 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:41:23,621 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:41:23,624 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:41:23,624 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:41:23,696 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:41:23,696 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:41:23,776 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:41:23,776 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:41:23,784 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:41:23,784 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:41:23,809 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:41:23,809 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:41:25,625 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:41:25,625 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:41:25,625 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:41:25,625 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:41:25,625 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:41:25,625 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:41:25,626 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:41:25,626 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:41:25,637 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:41:25,637 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:41:25,639 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:41:25,639 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:41:25,719 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:41:25,719 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:41:25,719 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:41:25,719 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:41:25,721 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:41:25,721 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:41:25,722 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:41:25,722 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:41:25,723 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:41:25,723 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:41:25,992 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:41:25,992 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:41:26,523 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=22566
2023-09-20T20:41:26,524 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:41:26,534 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:41:26,535 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]22566
2023-09-20T20:41:26,535 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:41:26,536 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:41:26,536 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:41:26,536 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:41:26,541 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:41:26,541 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:41:26,551 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:41:26,557 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242486557
2023-09-20T20:41:26,557 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242486557
2023-09-20T20:41:26,601 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:41:26,642 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:41:26,642 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:41:26,666 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:41:26,666 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:41:26,667 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:41:26,846 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FOMMMMMM LOGGGEERRRR
2023-09-20T20:41:26,847 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - {'0': 'Negative', '1': 'Neutral'}
2023-09-20T20:41:26,865 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:41:26,866 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:41:26,866 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/c4092ee3d22e413a8529cbcf25effbc4/model.pth
2023-09-20T20:41:29,131 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695242489
2023-09-20T20:41:29,599 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:41:29,600 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:41:29,600 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:41:29,601 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3000
2023-09-20T20:41:29,601 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3000
2023-09-20T20:41:29,602 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:41:29,602 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:41:29,602 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3970.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695242489
2023-09-20T20:41:29,603 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:46.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242489
2023-09-20T20:41:29,603 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242489603
2023-09-20T20:41:29,603 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242489603
2023-09-20T20:41:29,605 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695242489
2023-09-20T20:41:29,812 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FROM POSTPROCESS>>>>>>
2023-09-20T20:41:29,812 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG - /tmp/models/c4092ee3d22e413a8529cbcf25effbc4/handler.py:76: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
2023-09-20T20:41:29,813 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG -   probabilities = nn.functional.softmax(outputs)
2023-09-20T20:41:29,814 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:41:29,814 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:41:29,815 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:41:29,815 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:41:29,815 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 359, in handle
2023-09-20T20:41:29,816 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.postprocess(output)
2023-09-20T20:41:29,816 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/c4092ee3d22e413a8529cbcf25effbc4/handler.py", line 83, in postprocess
2023-09-20T20:41:29,816 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     predictions = [self.mapping[str(label)] for label in data]
2023-09-20T20:41:29,816 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/c4092ee3d22e413a8529cbcf25effbc4/handler.py", line 83, in <listcomp>
2023-09-20T20:41:29,817 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     predictions = [self.mapping[str(label)] for label in data]
2023-09-20T20:41:29,817 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - KeyError: "tensor([1.], device='cuda:0', grad_fn=<UnbindBackward0>)"
2023-09-20T20:41:29,821 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:52928 "POST /predictions/test_model HTTP/1.1" 503 695
2023-09-20T20:41:29,822 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242489
2023-09-20T20:41:29,824 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 470546808, Inference time ns: 691280107
2023-09-20T20:41:29,824 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 470546808, Inference time ns: 691280107
2023-09-20T20:41:29,824 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:41:29,824 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:41:29,825 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 212
2023-09-20T20:41:29,825 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 212
2023-09-20T20:41:29,825 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:10.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242489
2023-09-20T20:42:18,775 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:42:18,775 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:42:18,778 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:42:18,778 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:42:18,863 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:42:18,863 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:42:18,984 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:42:18,984 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:42:18,996 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:42:18,996 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:42:19,029 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:42:19,029 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:42:20,881 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:42:20,881 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:42:20,882 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:42:20,882 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:42:20,882 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:42:20,882 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:42:20,882 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:42:20,882 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:42:20,896 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:42:20,896 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:42:20,897 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:42:20,897 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:42:20,979 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:42:20,979 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:42:20,979 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:42:20,979 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:42:20,981 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:42:20,981 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:42:20,982 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:42:20,982 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:42:20,983 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:42:20,983 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:42:21,285 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:42:21,285 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:42:21,855 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=22777
2023-09-20T20:42:21,855 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:42:21,865 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:42:21,866 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]22777
2023-09-20T20:42:21,866 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:42:21,866 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:42:21,867 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:42:21,867 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:42:21,872 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:42:21,872 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:42:21,880 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:42:21,884 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242541884
2023-09-20T20:42:21,884 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242541884
2023-09-20T20:42:21,930 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:42:21,934 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:42:21,934 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:42:21,991 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:42:21,991 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:42:21,992 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:42:22,175 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FOMMMMMM LOGGGEERRRR
2023-09-20T20:42:22,175 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - {'0': 'Negative', '1': 'Neutral'}
2023-09-20T20:42:22,194 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:42:22,194 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:42:22,194 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/b2c953e29d584b9da2878abe59b068cc/model.pth
2023-09-20T20:42:25,232 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:42:25,239 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:42:25,239 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:42:25,239 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3310
2023-09-20T20:42:25,239 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3310
2023-09-20T20:42:25,240 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:42:25,240 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:42:25,243 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4349.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695242545
2023-09-20T20:42:25,243 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:49.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242545
2023-09-20T20:43:07,836 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695242587
2023-09-20T20:43:07,839 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242587839
2023-09-20T20:43:07,839 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242587839
2023-09-20T20:43:07,842 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695242587
2023-09-20T20:43:08,074 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FROM POSTPROCESS>>>>>>
2023-09-20T20:43:08,073 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG - /tmp/models/b2c953e29d584b9da2878abe59b068cc/handler.py:76: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
2023-09-20T20:43:08,074 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG -   probabilities = nn.functional.softmax(outputs)
2023-09-20T20:43:08,075 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - tensor([[1.]], device='cuda:0', grad_fn=<SoftmaxBackward0>)
2023-09-20T20:43:08,075 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:233.44|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695242588,1c9b4176-2a2b-4d51-86ce-9a55c33d5540, pattern=[METRICS]
2023-09-20T20:43:08,075 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:233.44|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695242588,1c9b4176-2a2b-4d51-86ce-9a55c33d5540, pattern=[METRICS]
2023-09-20T20:43:08,077 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - HandlerTime.ms:233.44|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:1c9b4176-2a2b-4d51-86ce-9a55c33d5540,timestamp:1695242588
2023-09-20T20:43:08,078 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model: test_model, Invalid return type: <class 'NoneType'>.
2023-09-20T20:43:08,083 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:49046 "POST /predictions/test_model HTTP/1.1" 503 249
2023-09-20T20:43:08,084 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242588
2023-09-20T20:43:08,084 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 333471, Inference time ns: 245213588
2023-09-20T20:43:08,084 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 333471, Inference time ns: 245213588
2023-09-20T20:43:08,084 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:43:08,084 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:43:08,084 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 235
2023-09-20T20:43:08,084 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 235
2023-09-20T20:43:08,085 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:11.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242588
2023-09-20T20:43:21,852 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:43:21,852 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:44:07,163 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:44:07,163 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:44:07,167 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:44:07,167 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:44:07,240 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:44:07,240 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:44:07,337 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:44:07,337 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:44:07,346 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:44:07,346 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:44:07,372 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:44:07,372 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:44:09,207 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:44:09,207 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:44:09,207 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:44:09,207 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:44:09,207 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:44:09,207 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:44:09,208 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:44:09,208 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:44:09,218 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:44:09,218 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:44:09,226 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:44:09,226 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:44:09,362 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:44:09,362 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:44:09,362 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:44:09,362 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:44:09,364 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:44:09,364 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:44:09,364 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:44:09,364 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:44:09,365 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:44:09,365 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:44:09,667 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:44:09,667 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:44:10,158 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=23093
2023-09-20T20:44:10,159 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:44:10,169 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:44:10,169 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]23093
2023-09-20T20:44:10,169 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:44:10,170 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:44:10,170 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:44:10,170 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:44:10,176 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:44:10,176 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:44:10,185 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:44:10,191 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242650190
2023-09-20T20:44:10,191 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242650190
2023-09-20T20:44:10,230 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:44:10,301 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:44:10,301 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:44:10,301 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:44:10,305 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:44:10,305 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:44:10,485 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FOMMMMMM LOGGGEERRRR
2023-09-20T20:44:10,485 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - {'0': 'Negative', '1': 'Neutral'}
2023-09-20T20:44:10,508 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:44:10,509 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:44:10,509 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/68f44866c2ba4a578ba896a4cf1a9365/model.pth
2023-09-20T20:44:13,149 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:44:13,157 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:44:13,157 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:44:13,157 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2926
2023-09-20T20:44:13,157 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2926
2023-09-20T20:44:13,158 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:44:13,158 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:44:13,160 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3944.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695242653
2023-09-20T20:44:13,161 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:45.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242653
2023-09-20T20:44:53,121 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695242693
2023-09-20T20:44:53,124 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242693123
2023-09-20T20:44:53,124 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242693123
2023-09-20T20:44:53,126 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695242693
2023-09-20T20:44:53,384 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FROM POSTPROCESS>>>>>>
2023-09-20T20:44:53,385 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:44:53,384 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG - /tmp/models/68f44866c2ba4a578ba896a4cf1a9365/handler.py:76: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
2023-09-20T20:44:53,386 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG -   probabilities = nn.functional.softmax(outputs)
2023-09-20T20:44:53,385 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:44:53,387 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:44:53,387 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:44:53,388 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 359, in handle
2023-09-20T20:44:53,388 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.postprocess(output)
2023-09-20T20:44:53,388 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/68f44866c2ba4a578ba896a4cf1a9365/handler.py", line 82, in postprocess
2023-09-20T20:44:53,388 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     logger.info(data.to_numpy())
2023-09-20T20:44:53,388 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - AttributeError: 'Tensor' object has no attribute 'to_numpy'
2023-09-20T20:44:53,392 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:37938 "POST /predictions/test_model HTTP/1.1" 503 273
2023-09-20T20:44:53,393 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242693
2023-09-20T20:44:53,394 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 407628, Inference time ns: 270414540
2023-09-20T20:44:53,394 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 407628, Inference time ns: 270414540
2023-09-20T20:44:53,394 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:44:53,394 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:44:53,394 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 261
2023-09-20T20:44:53,394 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 261
2023-09-20T20:44:53,394 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:10.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242693
2023-09-20T20:45:10,196 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:45:10,196 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:46:03,249 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:46:03,249 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:46:03,252 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:46:03,252 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:46:03,329 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:46:03,329 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:46:03,414 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:46:03,414 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:46:03,422 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:46:03,422 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:46:03,458 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:46:03,458 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:46:05,172 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:46:05,172 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:46:05,172 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:46:05,172 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:46:05,173 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:46:05,173 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:46:05,173 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:46:05,173 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:46:05,185 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:46:05,186 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:46:05,185 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:46:05,186 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:46:05,266 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:46:05,266 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:46:05,267 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:46:05,267 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:46:05,268 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:46:05,268 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:46:05,268 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:46:05,268 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:46:05,270 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:46:05,270 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:46:05,589 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:46:05,589 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:46:06,202 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=23397
2023-09-20T20:46:06,204 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:46:06,215 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:46:06,215 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]23397
2023-09-20T20:46:06,216 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:46:06,216 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:46:06,217 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:46:06,217 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:46:06,222 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:46:06,222 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:46:06,235 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:46:06,239 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242766239
2023-09-20T20:46:06,239 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242766239
2023-09-20T20:46:06,277 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:46:06,313 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:46:06,313 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:46:06,350 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:46:06,351 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:46:06,351 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:46:06,606 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FOMMMMMM LOGGGEERRRR
2023-09-20T20:46:06,607 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - {'0': 'Negative', '1': 'Neutral'}
2023-09-20T20:46:06,628 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:46:06,628 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:46:06,628 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/d0998db485c94b3ab4bd2e031808fcd8/model.pth
2023-09-20T20:46:09,411 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:46:09,418 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:46:09,418 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:46:09,419 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3140
2023-09-20T20:46:09,419 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3140
2023-09-20T20:46:09,419 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:46:09,419 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:46:09,423 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4239.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695242769
2023-09-20T20:46:09,424 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:45.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242769
2023-09-20T20:46:09,849 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695242769
2023-09-20T20:46:09,852 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242769852
2023-09-20T20:46:09,852 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242769852
2023-09-20T20:46:09,854 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695242769
2023-09-20T20:46:10,092 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FROM POSTPROCESS>>>>>>
2023-09-20T20:46:10,092 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [[1.0]]
2023-09-20T20:46:10,093 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:238.17|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695242770,4046bcda-fa66-452d-a886-2129b719f915, pattern=[METRICS]
2023-09-20T20:46:10,093 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:238.17|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695242770,4046bcda-fa66-452d-a886-2129b719f915, pattern=[METRICS]
2023-09-20T20:46:10,092 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG - /tmp/models/d0998db485c94b3ab4bd2e031808fcd8/handler.py:76: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
2023-09-20T20:46:10,094 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG -   probabilities = nn.functional.softmax(outputs)
2023-09-20T20:46:10,094 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - HandlerTime.ms:238.17|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:4046bcda-fa66-452d-a886-2129b719f915,timestamp:1695242770
2023-09-20T20:46:10,095 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model: test_model, Invalid return type: <class 'NoneType'>.
2023-09-20T20:46:10,102 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:53124 "POST /predictions/test_model HTTP/1.1" 503 254
2023-09-20T20:46:10,102 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242770
2023-09-20T20:46:10,105 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 169251, Inference time ns: 253808870
2023-09-20T20:46:10,105 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 169251, Inference time ns: 253808870
2023-09-20T20:46:10,105 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:46:10,105 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:46:10,106 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 242
2023-09-20T20:46:10,106 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 242
2023-09-20T20:46:10,106 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:12.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242770
2023-09-20T20:47:06,136 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:47:06,136 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:47:36,663 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:47:36,663 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:47:36,667 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:47:36,667 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:47:36,745 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:47:36,745 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:47:36,826 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:47:36,826 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:47:36,835 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:47:36,835 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:47:36,861 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:47:36,861 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:47:38,521 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:47:38,521 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:47:38,521 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:47:38,521 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:47:38,521 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:47:38,521 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:47:38,522 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:47:38,522 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:47:38,533 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:47:38,534 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:47:38,534 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:47:38,533 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:47:38,629 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:47:38,629 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:47:38,629 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:47:38,629 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:47:38,634 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:47:38,634 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:47:38,635 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:47:38,635 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:47:38,636 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:47:38,636 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:47:38,920 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:47:38,920 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:47:39,489 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=23674
2023-09-20T20:47:39,490 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:47:39,501 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:47:39,501 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]23674
2023-09-20T20:47:39,501 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:47:39,502 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:47:39,502 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:47:39,502 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:47:39,509 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:47:39,509 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:47:39,519 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:47:39,523 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242859522
2023-09-20T20:47:39,523 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242859522
2023-09-20T20:47:39,552 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:47:39,552 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:47:39,563 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:47:39,628 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:47:39,628 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:47:39,628 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:47:39,805 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FOMMMMMM LOGGGEERRRR
2023-09-20T20:47:39,806 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - {'0': 'Negative', '1': 'Neutral'}
2023-09-20T20:47:39,823 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:47:39,824 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:47:39,824 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/4a0e7fa0431a4f80b86a2d8b8781fbbc/model.pth
2023-09-20T20:47:42,662 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:47:42,670 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:47:42,670 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:47:42,670 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3107
2023-09-20T20:47:42,670 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3107
2023-09-20T20:47:42,671 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:47:42,671 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:47:42,674 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4143.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695242862
2023-09-20T20:47:42,675 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:46.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242862
2023-09-20T20:48:15,500 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695242895
2023-09-20T20:48:15,503 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242895503
2023-09-20T20:48:15,503 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242895503
2023-09-20T20:48:15,505 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695242895
2023-09-20T20:48:15,754 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FROM POSTPROCESS>>>>>>
2023-09-20T20:48:15,753 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG - /tmp/models/4a0e7fa0431a4f80b86a2d8b8781fbbc/handler.py:76: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
2023-09-20T20:48:15,755 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG -   probabilities = nn.functional.softmax(outputs)
2023-09-20T20:48:15,760 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:48:15,761 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:48:15,761 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:48:15,761 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:48:15,761 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 359, in handle
2023-09-20T20:48:15,762 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.postprocess(output)
2023-09-20T20:48:15,762 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/4a0e7fa0431a4f80b86a2d8b8781fbbc/handler.py", line 83, in postprocess
2023-09-20T20:48:15,762 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return [self.mapping[x[0]] for x in data]
2023-09-20T20:48:15,762 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/4a0e7fa0431a4f80b86a2d8b8781fbbc/handler.py", line 83, in <listcomp>
2023-09-20T20:48:15,762 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return [self.mapping[x[0]] for x in data]
2023-09-20T20:48:15,762 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - KeyError: 1.0
2023-09-20T20:48:15,764 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:46544 "POST /predictions/test_model HTTP/1.1" 503 266
2023-09-20T20:48:15,765 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242895
2023-09-20T20:48:15,766 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 265190, Inference time ns: 263180652
2023-09-20T20:48:15,766 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 265190, Inference time ns: 263180652
2023-09-20T20:48:15,766 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:48:15,766 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:48:15,766 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 252
2023-09-20T20:48:15,766 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 252
2023-09-20T20:48:15,767 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:11.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242895
2023-09-20T20:48:39,485 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:48:39,485 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:49:19,640 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:49:19,640 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:49:19,644 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:49:19,644 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:49:19,746 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:49:19,746 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:49:19,863 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:49:19,863 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:49:19,871 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:49:19,871 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:49:19,895 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:49:19,895 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:49:21,555 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:49:21,555 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:49:21,556 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:49:21,556 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:49:21,556 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:49:21,556 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:49:21,556 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:49:21,556 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:49:21,566 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:49:21,567 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:49:21,567 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:49:21,566 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:49:21,642 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:49:21,642 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:49:21,642 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:49:21,642 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:49:21,644 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:49:21,644 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:49:21,644 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:49:21,644 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:49:21,645 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:49:21,645 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:49:21,973 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:49:21,973 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:49:22,493 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=23948
2023-09-20T20:49:22,494 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:49:22,504 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:49:22,504 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]23948
2023-09-20T20:49:22,504 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:49:22,505 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:49:22,506 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:49:22,506 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:49:22,511 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:49:22,511 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:49:22,521 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:49:22,524 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242962524
2023-09-20T20:49:22,524 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695242962524
2023-09-20T20:49:22,565 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:49:22,602 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:49:22,602 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:49:22,647 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:49:22,647 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:49:22,648 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:49:22,829 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FOMMMMMM LOGGGEERRRR
2023-09-20T20:49:22,829 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - {'0': 'Negative', '1': 'Neutral'}
2023-09-20T20:49:22,847 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:49:22,848 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:49:22,848 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/1b23aabd6c6349f4b26575cda2adcd37/model.pth
2023-09-20T20:49:25,581 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:49:25,592 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:49:25,592 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:49:25,592 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3027
2023-09-20T20:49:25,592 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3027
2023-09-20T20:49:25,593 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:49:25,593 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:49:25,595 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4031.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695242965
2023-09-20T20:49:25,596 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:45.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242965
2023-09-20T20:49:39,335 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695242979
2023-09-20T20:49:39,338 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242979338
2023-09-20T20:49:39,338 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695242979338
2023-09-20T20:49:39,341 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695242979
2023-09-20T20:49:39,569 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FROM POSTPROCESS>>>>>>
2023-09-20T20:49:39,568 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG - /tmp/models/1b23aabd6c6349f4b26575cda2adcd37/handler.py:76: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
2023-09-20T20:49:39,569 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG -   probabilities = nn.functional.softmax(outputs)
2023-09-20T20:49:39,570 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Invoking custom service failed.
2023-09-20T20:49:39,570 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Traceback (most recent call last):
2023-09-20T20:49:39,571 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/service.py", line 134, in predict
2023-09-20T20:49:39,571 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     ret = self._entry_point(input_batch, self.context)
2023-09-20T20:49:39,571 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/torch_handler/base_handler.py", line 359, in handle
2023-09-20T20:49:39,572 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     output = self.postprocess(output)
2023-09-20T20:49:39,572 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/1b23aabd6c6349f4b26575cda2adcd37/handler.py", line 83, in postprocess
2023-09-20T20:49:39,572 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return [self.mapping[str(x[0])] for x in data]
2023-09-20T20:49:39,572 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -   File "/tmp/models/1b23aabd6c6349f4b26575cda2adcd37/handler.py", line 83, in <listcomp>
2023-09-20T20:49:39,573 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG -     return [self.mapping[str(x[0])] for x in data]
2023-09-20T20:49:39,573 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - KeyError: '1.0'
2023-09-20T20:49:39,579 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:36294 "POST /predictions/test_model HTTP/1.1" 503 246
2023-09-20T20:49:39,580 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests5XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242979
2023-09-20T20:49:39,581 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 150803, Inference time ns: 243490506
2023-09-20T20:49:39,581 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 150803, Inference time ns: 243490506
2023-09-20T20:49:39,582 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:49:39,582 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:49:39,583 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 232
2023-09-20T20:49:39,583 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 232
2023-09-20T20:49:39,583 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:13.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695242979
2023-09-20T20:50:19,992 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:50:19,992 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:50:19,996 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:50:19,996 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:50:20,072 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:50:20,072 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:50:20,158 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:50:20,158 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:50:20,166 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:50:20,166 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:50:20,192 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:50:20,192 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:50:21,904 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:50:21,904 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:50:21,905 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:50:21,905 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:50:21,905 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:50:21,905 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:50:21,905 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:50:21,905 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:50:21,917 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:50:21,918 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:50:21,917 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:50:21,918 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:50:22,005 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:50:22,005 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:50:22,006 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:50:22,006 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:50:22,007 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:50:22,007 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:50:22,008 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:50:22,008 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:50:22,010 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:50:22,010 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:50:22,306 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:50:22,306 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:50:22,848 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=24230
2023-09-20T20:50:22,850 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:50:22,858 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:50:22,859 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]24230
2023-09-20T20:50:22,861 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:50:22,860 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:50:22,861 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:50:22,861 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:50:22,867 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:50:22,867 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:50:22,878 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:50:22,884 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695243022884
2023-09-20T20:50:22,884 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695243022884
2023-09-20T20:50:22,922 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:50:22,949 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:50:22,949 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:50:22,999 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:50:23,000 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:50:23,001 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:50:23,176 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FOMMMMMM LOGGGEERRRR
2023-09-20T20:50:23,177 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - {'0': 'Negative', '1': 'Neutral'}
2023-09-20T20:50:23,195 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:50:23,196 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:50:23,196 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/a7a4c2746fc840cf986e85d4691bebc6/model.pth
2023-09-20T20:50:25,903 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:50:25,911 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:50:25,911 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:50:25,911 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2988
2023-09-20T20:50:25,911 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 2988
2023-09-20T20:50:25,911 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:50:25,911 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:50:25,914 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:4000.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695243025
2023-09-20T20:50:25,915 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:43.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243025
2023-09-20T20:50:34,801 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695243034
2023-09-20T20:50:34,804 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695243034804
2023-09-20T20:50:34,804 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695243034804
2023-09-20T20:50:34,807 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695243034
2023-09-20T20:50:35,043 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FROM POSTPROCESS>>>>>>
2023-09-20T20:50:35,043 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:236.18|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243035,8551ef45-18d9-41ab-b0ee-fa83cd9b24c3, pattern=[METRICS]
2023-09-20T20:50:35,043 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:236.18|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243035,8551ef45-18d9-41ab-b0ee-fa83cd9b24c3, pattern=[METRICS]
2023-09-20T20:50:35,043 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG - /tmp/models/a7a4c2746fc840cf986e85d4691bebc6/handler.py:76: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
2023-09-20T20:50:35,044 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG -   probabilities = nn.functional.softmax(outputs)
2023-09-20T20:50:35,044 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - HandlerTime.ms:236.18|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:8551ef45-18d9-41ab-b0ee-fa83cd9b24c3,timestamp:1695243035
2023-09-20T20:50:35,045 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]PredictionTime.Milliseconds:236.39|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243035,8551ef45-18d9-41ab-b0ee-fa83cd9b24c3, pattern=[METRICS]
2023-09-20T20:50:35,045 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]PredictionTime.Milliseconds:236.39|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243035,8551ef45-18d9-41ab-b0ee-fa83cd9b24c3, pattern=[METRICS]
2023-09-20T20:50:35,045 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - PredictionTime.ms:236.39|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:8551ef45-18d9-41ab-b0ee-fa83cd9b24c3,timestamp:1695243035
2023-09-20T20:50:35,046 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:60058 "POST /predictions/test_model HTTP/1.1" 200 247
2023-09-20T20:50:35,047 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests2XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243035
2023-09-20T20:50:35,047 [INFO ] W-9000-test_model_1.0 TS_METRICS - ts_inference_latency_microseconds.Microseconds:241617.73|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695243035
2023-09-20T20:50:35,047 [INFO ] W-9000-test_model_1.0 TS_METRICS - ts_queue_latency_microseconds.Microseconds:332.304|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695243035
2023-09-20T20:50:35,048 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 332304, Backend time ns: 243537160
2023-09-20T20:50:35,048 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 332304, Backend time ns: 243537160
2023-09-20T20:50:35,048 [INFO ] W-9000-test_model_1.0 TS_METRICS - QueueTime.Milliseconds:0.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243035
2023-09-20T20:50:35,048 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:50:35,048 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:50:35,048 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 239
2023-09-20T20:50:35,048 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 239
2023-09-20T20:50:35,048 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:5.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243035
2023-09-20T20:51:22,897 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:51:22,897 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:51:40,266 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:51:40,266 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties
2023-09-20T20:51:40,269 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:51:40,269 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...
2023-09-20T20:51:40,346 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:51:40,346 [INFO ] main org.pytorch.serve.metrics.configuration.MetricConfiguration - Successfully loaded metrics configuration from /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
2023-09-20T20:51:40,429 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:51:40,429 [INFO ] main org.pytorch.serve.ModelServer - 
Torchserve version: 0.8.2
TS Home: /home/paperspace/Documents/new_env/lib/python3.9/site-packages
Current directory: /home/paperspace/Documents/serve_example
Temp directory: /tmp
Metrics config path: /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml
Number of GPUs: 1
Number of CPUs: 8
Max heap size: 7520 M
Python executable: /home/paperspace/Documents/new_env/bin/python
Config file: N/A
Inference address: http://127.0.0.1:8080
Management address: http://127.0.0.1:8081
Metrics address: http://127.0.0.1:8082
Model Store: /home/paperspace/Documents/serve_example/model_store
Initial Models: test_model=test_model.mar
Log dir: /home/paperspace/Documents/serve_example/logs
Metrics dir: /home/paperspace/Documents/serve_example/logs
Netty threads: 0
Netty client threads: 0
Default workers per model: 1
Blacklist Regex: N/A
Maximum Response Size: 6553500
Maximum Request Size: 6553500
Limit Maximum Image Pixels: true
Prefer direct buffer: false
Allowed Urls: [file://.*|http(s)?://.*]
Custom python dependency for model allowed: false
Enable metrics API: true
Metrics mode: log
Disable system metrics: false
Workflow Store: /home/paperspace/Documents/serve_example/model_store
Model config: N/A
2023-09-20T20:51:40,437 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:51:40,437 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager -  Loading snapshot serializer plugin...
2023-09-20T20:51:40,462 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:51:40,462 [INFO ] main org.pytorch.serve.ModelServer - Loading initial models: test_model.mar
2023-09-20T20:51:42,227 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:51:42,227 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Adding new version 1.0 for model test_model
2023-09-20T20:51:42,227 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:51:42,227 [DEBUG] main org.pytorch.serve.wlm.ModelVersionedRefs - Setting default version to 1.0 for model test_model
2023-09-20T20:51:42,227 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:51:42,227 [INFO ] main org.pytorch.serve.wlm.ModelManager - Model test_model loaded.
2023-09-20T20:51:42,228 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:51:42,228 [DEBUG] main org.pytorch.serve.wlm.ModelManager - updateModel: test_model, count: 1
2023-09-20T20:51:42,238 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:51:42,239 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:51:42,239 [INFO ] main org.pytorch.serve.ModelServer - Initialize Inference server with: EpollServerSocketChannel.
2023-09-20T20:51:42,238 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerLifeCycle - Worker cmdline: [/home/paperspace/Documents/new_env/bin/python, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/model_service_worker.py, --sock-type, unix, --sock-name, /tmp/.ts.sock.9000, --metrics-config, /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml]
2023-09-20T20:51:42,315 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:51:42,315 [INFO ] main org.pytorch.serve.ModelServer - Inference API bind to: http://127.0.0.1:8080
2023-09-20T20:51:42,315 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:51:42,315 [INFO ] main org.pytorch.serve.ModelServer - Initialize Management server with: EpollServerSocketChannel.
2023-09-20T20:51:42,317 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:51:42,317 [INFO ] main org.pytorch.serve.ModelServer - Management API bind to: http://127.0.0.1:8081
2023-09-20T20:51:42,317 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:51:42,317 [INFO ] main org.pytorch.serve.ModelServer - Initialize Metrics server with: EpollServerSocketChannel.
2023-09-20T20:51:42,318 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:51:42,318 [INFO ] main org.pytorch.serve.ModelServer - Metrics API bind to: http://127.0.0.1:8082
2023-09-20T20:51:42,592 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:51:42,592 [WARN ] pool-3-thread-1 org.pytorch.serve.metrics.MetricCollector - worker pid is not available yet.
2023-09-20T20:51:43,110 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - s_name_part0=/tmp/.ts.sock, s_name_part1=9000, pid=24496
2023-09-20T20:51:43,111 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Listening on port: /tmp/.ts.sock.9000
2023-09-20T20:51:43,121 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Successfully loaded /home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/configs/metrics.yaml.
2023-09-20T20:51:43,122 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - [PID]24496
2023-09-20T20:51:43,122 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch worker started.
2023-09-20T20:51:43,122 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Python runtime: 3.9.16
2023-09-20T20:51:43,123 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:51:43,123 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change null -> WORKER_STARTED
2023-09-20T20:51:43,129 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:51:43,129 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Connecting to: /tmp/.ts.sock.9000
2023-09-20T20:51:43,144 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Connection accepted: /tmp/.ts.sock.9000.
2023-09-20T20:51:43,148 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695243103148
2023-09-20T20:51:43,148 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd LOAD to backend at: 1695243103148
2023-09-20T20:51:43,193 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - model_name: test_model, batchSize: 1
2023-09-20T20:51:43,201 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:51:43,201 [ERROR] Thread-1 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:51:43,259 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Your torch version is 1.12.1+cu102 which does not support torch.compile
2023-09-20T20:51:43,260 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - proceeding without onnxruntime
2023-09-20T20:51:43,260 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Torch TensorRT not enabled
2023-09-20T20:51:43,465 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FOMMMMMM LOGGGEERRRR
2023-09-20T20:51:43,465 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - {'0': 'Negative', '1': 'Neutral'}
2023-09-20T20:51:43,484 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Using device: cuda:0
2023-09-20T20:51:43,484 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL FILE: model.pth
2023-09-20T20:51:43,485 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL PATH: /tmp/models/c4412af358af461f8b4d949894147739/model.pth
2023-09-20T20:51:46,195 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - MODEL LOADED
2023-09-20T20:51:46,202 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:51:46,202 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:51:46,202 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3010
2023-09-20T20:51:46,202 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 3010
2023-09-20T20:51:46,202 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:51:46,202 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - W-9000-test_model_1.0 State change WORKER_STARTED -> WORKER_MODEL_LOADED
2023-09-20T20:51:46,205 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerLoadTime.Milliseconds:3969.0|#WorkerName:W-9000-test_model_1.0,Level:Host|#hostname:ps2sxr1b9,timestamp:1695243106
2023-09-20T20:51:46,206 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:48.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243106
2023-09-20T20:52:03,172 [INFO ] epollEventLoopGroup-3-1 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695243123
2023-09-20T20:52:03,179 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695243123179
2023-09-20T20:52:03,179 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695243123179
2023-09-20T20:52:03,181 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695243123
2023-09-20T20:52:03,404 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FROM POSTPROCESS>>>>>>
2023-09-20T20:52:03,405 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FINAL PREDS: ['Neutral']
2023-09-20T20:52:03,405 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:223.61|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243123,d3ecade6-c4b2-40cf-999d-c0341419d52b, pattern=[METRICS]
2023-09-20T20:52:03,404 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG - /tmp/models/c4412af358af461f8b4d949894147739/handler.py:76: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
2023-09-20T20:52:03,405 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:223.61|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243123,d3ecade6-c4b2-40cf-999d-c0341419d52b, pattern=[METRICS]
2023-09-20T20:52:03,406 [WARN ] W-9000-test_model_1.0-stderr MODEL_LOG -   probabilities = nn.functional.softmax(outputs)
2023-09-20T20:52:03,407 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - HandlerTime.ms:223.61|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:d3ecade6-c4b2-40cf-999d-c0341419d52b,timestamp:1695243123
2023-09-20T20:52:03,407 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]PredictionTime.Milliseconds:223.78|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243123,d3ecade6-c4b2-40cf-999d-c0341419d52b, pattern=[METRICS]
2023-09-20T20:52:03,407 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]PredictionTime.Milliseconds:223.78|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243123,d3ecade6-c4b2-40cf-999d-c0341419d52b, pattern=[METRICS]
2023-09-20T20:52:03,407 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - PredictionTime.ms:223.78|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:d3ecade6-c4b2-40cf-999d-c0341419d52b,timestamp:1695243123
2023-09-20T20:52:03,408 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:44504 "POST /predictions/test_model HTTP/1.1" 200 239
2023-09-20T20:52:03,409 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests2XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243123
2023-09-20T20:52:03,409 [INFO ] W-9000-test_model_1.0 TS_METRICS - ts_inference_latency_microseconds.Microseconds:227571.769|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695243123
2023-09-20T20:52:03,410 [INFO ] W-9000-test_model_1.0 TS_METRICS - ts_queue_latency_microseconds.Microseconds:167.081|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695243123
2023-09-20T20:52:03,410 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 167081, Backend time ns: 231223066
2023-09-20T20:52:03,410 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 167081, Backend time ns: 231223066
2023-09-20T20:52:03,410 [INFO ] W-9000-test_model_1.0 TS_METRICS - QueueTime.Milliseconds:0.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243123
2023-09-20T20:52:03,410 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:52:03,410 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:52:03,411 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 226
2023-09-20T20:52:03,411 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 226
2023-09-20T20:52:03,411 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:6.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243123
2023-09-20T20:52:43,170 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:52:43,170 [ERROR] Thread-2 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:53:43,150 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:53:43,150 [ERROR] Thread-3 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:54:26,533 [INFO ] epollEventLoopGroup-3-2 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695243266
2023-09-20T20:54:26,534 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695243266534
2023-09-20T20:54:26,534 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695243266534
2023-09-20T20:54:26,536 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695243266
2023-09-20T20:54:26,584 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FROM POSTPROCESS>>>>>>
2023-09-20T20:54:26,585 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FINAL PREDS: ['Neutral']
2023-09-20T20:54:26,585 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:49.38|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243266,7631b3ea-1d72-49f3-8912-e79f7d75885d, pattern=[METRICS]
2023-09-20T20:54:26,585 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:49.38|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243266,7631b3ea-1d72-49f3-8912-e79f7d75885d, pattern=[METRICS]
2023-09-20T20:54:26,586 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - HandlerTime.ms:49.38|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:7631b3ea-1d72-49f3-8912-e79f7d75885d,timestamp:1695243266
2023-09-20T20:54:26,586 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]PredictionTime.Milliseconds:49.52|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243266,7631b3ea-1d72-49f3-8912-e79f7d75885d, pattern=[METRICS]
2023-09-20T20:54:26,586 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]PredictionTime.Milliseconds:49.52|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243266,7631b3ea-1d72-49f3-8912-e79f7d75885d, pattern=[METRICS]
2023-09-20T20:54:26,586 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:36276 "POST /predictions/test_model HTTP/1.1" 200 53
2023-09-20T20:54:26,586 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - PredictionTime.ms:49.52|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:7631b3ea-1d72-49f3-8912-e79f7d75885d,timestamp:1695243266
2023-09-20T20:54:26,586 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests2XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243266
2023-09-20T20:54:26,587 [INFO ] W-9000-test_model_1.0 TS_METRICS - ts_inference_latency_microseconds.Microseconds:51828.801|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695243266
2023-09-20T20:54:26,587 [INFO ] W-9000-test_model_1.0 TS_METRICS - ts_queue_latency_microseconds.Microseconds:138.255|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695243266
2023-09-20T20:54:26,587 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 138255, Backend time ns: 52749577
2023-09-20T20:54:26,587 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 138255, Backend time ns: 52749577
2023-09-20T20:54:26,587 [INFO ] W-9000-test_model_1.0 TS_METRICS - QueueTime.Milliseconds:0.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243266
2023-09-20T20:54:26,587 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:54:26,587 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:54:26,588 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 51
2023-09-20T20:54:26,588 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 51
2023-09-20T20:54:26,588 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:3.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243266
2023-09-20T20:54:31,329 [INFO ] epollEventLoopGroup-3-3 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695243271
2023-09-20T20:54:31,332 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695243271332
2023-09-20T20:54:31,332 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695243271332
2023-09-20T20:54:31,334 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695243271
2023-09-20T20:54:31,364 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FROM POSTPROCESS>>>>>>
2023-09-20T20:54:31,365 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FINAL PREDS: ['Neutral']
2023-09-20T20:54:31,365 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:30.49|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243271,d0a85998-67b6-4da5-b75f-c73820d49fdc, pattern=[METRICS]
2023-09-20T20:54:31,365 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:30.49|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243271,d0a85998-67b6-4da5-b75f-c73820d49fdc, pattern=[METRICS]
2023-09-20T20:54:31,365 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - HandlerTime.ms:30.49|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:d0a85998-67b6-4da5-b75f-c73820d49fdc,timestamp:1695243271
2023-09-20T20:54:31,366 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:36292 "POST /predictions/test_model HTTP/1.1" 200 40
2023-09-20T20:54:31,366 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]PredictionTime.Milliseconds:30.62|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243271,d0a85998-67b6-4da5-b75f-c73820d49fdc, pattern=[METRICS]
2023-09-20T20:54:31,366 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]PredictionTime.Milliseconds:30.62|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243271,d0a85998-67b6-4da5-b75f-c73820d49fdc, pattern=[METRICS]
2023-09-20T20:54:31,366 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests2XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243271
2023-09-20T20:54:31,366 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - PredictionTime.ms:30.62|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:d0a85998-67b6-4da5-b75f-c73820d49fdc,timestamp:1695243271
2023-09-20T20:54:31,367 [INFO ] W-9000-test_model_1.0 TS_METRICS - ts_inference_latency_microseconds.Microseconds:34445.611|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695243271
2023-09-20T20:54:31,367 [INFO ] W-9000-test_model_1.0 TS_METRICS - ts_queue_latency_microseconds.Microseconds:1418.75|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695243271
2023-09-20T20:54:31,367 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 1418750, Backend time ns: 34704083
2023-09-20T20:54:31,367 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 1418750, Backend time ns: 34704083
2023-09-20T20:54:31,367 [INFO ] W-9000-test_model_1.0 TS_METRICS - QueueTime.Milliseconds:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243271
2023-09-20T20:54:31,367 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:54:31,367 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:54:31,368 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 31
2023-09-20T20:54:31,368 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 31
2023-09-20T20:54:31,368 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:5.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243271
2023-09-20T20:54:32,986 [INFO ] epollEventLoopGroup-3-4 TS_METRICS - ts_inference_requests_total.Count:1.0|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695243272
2023-09-20T20:54:32,987 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695243272986
2023-09-20T20:54:32,987 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Flushing req.cmd PREDICT to backend at: 1695243272986
2023-09-20T20:54:32,988 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - Backend received inference at: 1695243272
2023-09-20T20:54:33,018 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FROM POSTPROCESS>>>>>>
2023-09-20T20:54:33,019 [INFO ] W-9000-test_model_1.0-stdout MODEL_LOG - FINAL PREDS: ['Neutral']
2023-09-20T20:54:33,019 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:30.7|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243273,079208a2-f3ed-419d-bf26-78e6e8daf4d3, pattern=[METRICS]
2023-09-20T20:54:33,019 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]HandlerTime.Milliseconds:30.7|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243273,079208a2-f3ed-419d-bf26-78e6e8daf4d3, pattern=[METRICS]
2023-09-20T20:54:33,020 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - HandlerTime.ms:30.7|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:079208a2-f3ed-419d-bf26-78e6e8daf4d3,timestamp:1695243273
2023-09-20T20:54:33,020 [INFO ] W-9000-test_model_1.0 ACCESS_LOG - /127.0.0.1:36294 "POST /predictions/test_model HTTP/1.1" 200 35
2023-09-20T20:54:33,020 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]PredictionTime.Milliseconds:30.83|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243273,079208a2-f3ed-419d-bf26-78e6e8daf4d3, pattern=[METRICS]
2023-09-20T20:54:33,020 [INFO ] W-9000-test_model_1.0-stdout org.pytorch.serve.wlm.WorkerLifeCycle - result=[METRICS]PredictionTime.Milliseconds:30.83|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,1695243273,079208a2-f3ed-419d-bf26-78e6e8daf4d3, pattern=[METRICS]
2023-09-20T20:54:33,020 [INFO ] W-9000-test_model_1.0 TS_METRICS - Requests2XX.Count:1.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243273
2023-09-20T20:54:33,020 [INFO ] W-9000-test_model_1.0-stdout MODEL_METRICS - PredictionTime.ms:30.83|#ModelName:test_model,Level:Model|#hostname:ps2sxr1b9,requestID:079208a2-f3ed-419d-bf26-78e6e8daf4d3,timestamp:1695243273
2023-09-20T20:54:33,020 [INFO ] W-9000-test_model_1.0 TS_METRICS - ts_inference_latency_microseconds.Microseconds:33245.831|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695243273
2023-09-20T20:54:33,021 [INFO ] W-9000-test_model_1.0 TS_METRICS - ts_queue_latency_microseconds.Microseconds:164.972|#model_name:test_model,model_version:default|#hostname:ps2sxr1b9,timestamp:1695243273
2023-09-20T20:54:33,021 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 164972, Backend time ns: 34301474
2023-09-20T20:54:33,021 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.job.Job - Waiting time ns: 164972, Backend time ns: 34301474
2023-09-20T20:54:33,021 [INFO ] W-9000-test_model_1.0 TS_METRICS - QueueTime.Milliseconds:0.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243273
2023-09-20T20:54:33,021 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:54:33,021 [DEBUG] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - sent a reply, jobdone: true
2023-09-20T20:54:33,021 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 32
2023-09-20T20:54:33,021 [INFO ] W-9000-test_model_1.0 org.pytorch.serve.wlm.WorkerThread - Backend response time: 32
2023-09-20T20:54:33,021 [INFO ] W-9000-test_model_1.0 TS_METRICS - WorkerThreadTime.Milliseconds:3.0|#Level:Host|#hostname:ps2sxr1b9,timestamp:1695243273
2023-09-20T20:54:43,163 [ERROR] Thread-4 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:54:43,163 [ERROR] Thread-4 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:55:43,181 [ERROR] Thread-5 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

2023-09-20T20:55:43,181 [ERROR] Thread-5 org.pytorch.serve.metrics.MetricCollector - Traceback (most recent call last):
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/metric_collector.py", line 27, in <module>
    system_metrics.collect_all(sys.modules['ts.metrics.system_metrics'], arguments.gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 119, in collect_all
    value(num_of_gpu)
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/ts/metrics/system_metrics.py", line 71, in gpu_utilization
    info = nvgpu.gpu_info()
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 13, in gpu_info
    lines = _run_cmd(['nvidia-smi'])
  File "/home/paperspace/Documents/new_env/lib/python3.9/site-packages/nvgpu/__init__.py", line 32, in _run_cmd
    output = subprocess.check_output(cmd)
  File "/usr/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi']' returned non-zero exit status 14.

